"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw Error('Dynamic require of "' + x + '" is not supported');
  });
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export = (target, all3) => {
    for (var name in all3)
      __defProp(target, name, { get: all3[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key3 of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key3) && key3 !== except)
          __defProp(to, key3, { get: () => from[key3], enumerable: !(desc = __getOwnPropDesc(from, key3)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // node_modules/@supabase/node-fetch/browser.js
  var browser_exports = {};
  __export(browser_exports, {
    Headers: () => Headers2,
    Request: () => Request2,
    Response: () => Response2,
    default: () => browser_default2,
    fetch: () => fetch2
  });
  var getGlobal, globalObject, fetch2, browser_default2, Headers2, Request2, Response2;
  var init_browser = __esm({
    "node_modules/@supabase/node-fetch/browser.js"() {
      "use strict";
      getGlobal = function() {
        if (typeof self !== "undefined") {
          return self;
        }
        if (typeof window !== "undefined") {
          return window;
        }
        if (typeof global !== "undefined") {
          return global;
        }
        throw new Error("unable to locate global object");
      };
      globalObject = getGlobal();
      fetch2 = globalObject.fetch;
      browser_default2 = globalObject.fetch.bind(globalObject);
      Headers2 = globalObject.Headers;
      Request2 = globalObject.Request;
      Response2 = globalObject.Response;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js
  var require_PostgrestError = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestError.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      var PostgrestError = class extends Error {
        constructor(context) {
          super(context.message);
          this.name = "PostgrestError";
          this.details = context.details;
          this.hint = context.hint;
          this.code = context.code;
        }
      };
      exports.default = PostgrestError;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js
  var require_PostgrestBuilder = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestBuilder.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      var node_fetch_1 = __importDefault((init_browser(), __toCommonJS(browser_exports)));
      var PostgrestError_1 = __importDefault(require_PostgrestError());
      var PostgrestBuilder2 = class {
        constructor(builder) {
          this.shouldThrowOnError = false;
          this.method = builder.method;
          this.url = builder.url;
          this.headers = builder.headers;
          this.schema = builder.schema;
          this.body = builder.body;
          this.shouldThrowOnError = builder.shouldThrowOnError;
          this.signal = builder.signal;
          this.isMaybeSingle = builder.isMaybeSingle;
          if (builder.fetch) {
            this.fetch = builder.fetch;
          } else if (typeof fetch === "undefined") {
            this.fetch = node_fetch_1.default;
          } else {
            this.fetch = fetch;
          }
        }
        /**
         * If there's an error with the query, throwOnError will reject the promise by
         * throwing the error instead of returning it as part of a successful response.
         *
         * {@link https://github.com/supabase/supabase-js/issues/92}
         */
        throwOnError() {
          this.shouldThrowOnError = true;
          return this;
        }
        then(onfulfilled, onrejected) {
          if (this.schema === void 0) {
          } else if (["GET", "HEAD"].includes(this.method)) {
            this.headers["Accept-Profile"] = this.schema;
          } else {
            this.headers["Content-Profile"] = this.schema;
          }
          if (this.method !== "GET" && this.method !== "HEAD") {
            this.headers["Content-Type"] = "application/json";
          }
          const _fetch = this.fetch;
          let res = _fetch(this.url.toString(), {
            method: this.method,
            headers: this.headers,
            body: JSON.stringify(this.body),
            signal: this.signal
          }).then(async (res2) => {
            var _a, _b, _c;
            let error = null;
            let data = null;
            let count = null;
            let status = res2.status;
            let statusText = res2.statusText;
            if (res2.ok) {
              if (this.method !== "HEAD") {
                const body = await res2.text();
                if (body === "") {
                } else if (this.headers["Accept"] === "text/csv") {
                  data = body;
                } else if (this.headers["Accept"] && this.headers["Accept"].includes("application/vnd.pgrst.plan+text")) {
                  data = body;
                } else {
                  data = JSON.parse(body);
                }
              }
              const countHeader = (_a = this.headers["Prefer"]) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);
              const contentRange = (_b = res2.headers.get("content-range")) === null || _b === void 0 ? void 0 : _b.split("/");
              if (countHeader && contentRange && contentRange.length > 1) {
                count = parseInt(contentRange[1]);
              }
              if (this.isMaybeSingle && this.method === "GET" && Array.isArray(data)) {
                if (data.length > 1) {
                  error = {
                    // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553
                    code: "PGRST116",
                    details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,
                    hint: null,
                    message: "JSON object requested, multiple (or no) rows returned"
                  };
                  data = null;
                  count = null;
                  status = 406;
                  statusText = "Not Acceptable";
                } else if (data.length === 1) {
                  data = data[0];
                } else {
                  data = null;
                }
              }
            } else {
              const body = await res2.text();
              try {
                error = JSON.parse(body);
                if (Array.isArray(error) && res2.status === 404) {
                  data = [];
                  error = null;
                  status = 200;
                  statusText = "OK";
                }
              } catch (_d) {
                if (res2.status === 404 && body === "") {
                  status = 204;
                  statusText = "No Content";
                } else {
                  error = {
                    message: body
                  };
                }
              }
              if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes("0 rows"))) {
                error = null;
                status = 200;
                statusText = "OK";
              }
              if (error && this.shouldThrowOnError) {
                throw new PostgrestError_1.default(error);
              }
            }
            const postgrestResponse = {
              error,
              data,
              count,
              status,
              statusText
            };
            return postgrestResponse;
          });
          if (!this.shouldThrowOnError) {
            res = res.catch((fetchError) => {
              var _a, _b, _c;
              return {
                error: {
                  message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : "FetchError"}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,
                  details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ""}`,
                  hint: "",
                  code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ""}`
                },
                data: null,
                count: null,
                status: 0,
                statusText: ""
              };
            });
          }
          return res.then(onfulfilled, onrejected);
        }
      };
      exports.default = PostgrestBuilder2;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js
  var require_PostgrestTransformBuilder = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestTransformBuilder.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      var PostgrestBuilder_1 = __importDefault(require_PostgrestBuilder());
      var PostgrestTransformBuilder2 = class extends PostgrestBuilder_1.default {
        /**
         * Perform a SELECT on the query result.
         *
         * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not
         * return modified rows. By calling this method, modified rows are returned in
         * `data`.
         *
         * @param columns - The columns to retrieve, separated by commas
         */
        select(columns) {
          let quoted = false;
          const cleanedColumns = (columns !== null && columns !== void 0 ? columns : "*").split("").map((c) => {
            if (/\s/.test(c) && !quoted) {
              return "";
            }
            if (c === '"') {
              quoted = !quoted;
            }
            return c;
          }).join("");
          this.url.searchParams.set("select", cleanedColumns);
          if (this.headers["Prefer"]) {
            this.headers["Prefer"] += ",";
          }
          this.headers["Prefer"] += "return=representation";
          return this;
        }
        /**
         * Order the query result by `column`.
         *
         * You can call this method multiple times to order by multiple columns.
         *
         * You can order referenced tables, but it only affects the ordering of the
         * parent table if you use `!inner` in the query.
         *
         * @param column - The column to order by
         * @param options - Named parameters
         * @param options.ascending - If `true`, the result will be in ascending order
         * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,
         * `null`s appear last.
         * @param options.referencedTable - Set this to order a referenced table by
         * its columns
         * @param options.foreignTable - Deprecated, use `options.referencedTable`
         * instead
         */
        order(column, { ascending = true, nullsFirst, foreignTable, referencedTable = foreignTable } = {}) {
          const key3 = referencedTable ? `${referencedTable}.order` : "order";
          const existingOrder = this.url.searchParams.get(key3);
          this.url.searchParams.set(key3, `${existingOrder ? `${existingOrder},` : ""}${column}.${ascending ? "asc" : "desc"}${nullsFirst === void 0 ? "" : nullsFirst ? ".nullsfirst" : ".nullslast"}`);
          return this;
        }
        /**
         * Limit the query result by `count`.
         *
         * @param count - The maximum number of rows to return
         * @param options - Named parameters
         * @param options.referencedTable - Set this to limit rows of referenced
         * tables instead of the parent table
         * @param options.foreignTable - Deprecated, use `options.referencedTable`
         * instead
         */
        limit(count, { foreignTable, referencedTable = foreignTable } = {}) {
          const key3 = typeof referencedTable === "undefined" ? "limit" : `${referencedTable}.limit`;
          this.url.searchParams.set(key3, `${count}`);
          return this;
        }
        /**
         * Limit the query result by starting at an offset `from` and ending at the offset `to`.
         * Only records within this range are returned.
         * This respects the query order and if there is no order clause the range could behave unexpectedly.
         * The `from` and `to` values are 0-based and inclusive: `range(1, 3)` will include the second, third
         * and fourth rows of the query.
         *
         * @param from - The starting index from which to limit the result
         * @param to - The last index to which to limit the result
         * @param options - Named parameters
         * @param options.referencedTable - Set this to limit rows of referenced
         * tables instead of the parent table
         * @param options.foreignTable - Deprecated, use `options.referencedTable`
         * instead
         */
        range(from, to, { foreignTable, referencedTable = foreignTable } = {}) {
          const keyOffset = typeof referencedTable === "undefined" ? "offset" : `${referencedTable}.offset`;
          const keyLimit = typeof referencedTable === "undefined" ? "limit" : `${referencedTable}.limit`;
          this.url.searchParams.set(keyOffset, `${from}`);
          this.url.searchParams.set(keyLimit, `${to - from + 1}`);
          return this;
        }
        /**
         * Set the AbortSignal for the fetch request.
         *
         * @param signal - The AbortSignal to use for the fetch request
         */
        abortSignal(signal) {
          this.signal = signal;
          return this;
        }
        /**
         * Return `data` as a single object instead of an array of objects.
         *
         * Query result must be one row (e.g. using `.limit(1)`), otherwise this
         * returns an error.
         */
        single() {
          this.headers["Accept"] = "application/vnd.pgrst.object+json";
          return this;
        }
        /**
         * Return `data` as a single object instead of an array of objects.
         *
         * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise
         * this returns an error.
         */
        maybeSingle() {
          if (this.method === "GET") {
            this.headers["Accept"] = "application/json";
          } else {
            this.headers["Accept"] = "application/vnd.pgrst.object+json";
          }
          this.isMaybeSingle = true;
          return this;
        }
        /**
         * Return `data` as a string in CSV format.
         */
        csv() {
          this.headers["Accept"] = "text/csv";
          return this;
        }
        /**
         * Return `data` as an object in [GeoJSON](https://geojson.org) format.
         */
        geojson() {
          this.headers["Accept"] = "application/geo+json";
          return this;
        }
        /**
         * Return `data` as the EXPLAIN plan for the query.
         *
         * You need to enable the
         * [db_plan_enabled](https://supabase.com/docs/guides/database/debugging-performance#enabling-explain)
         * setting before using this method.
         *
         * @param options - Named parameters
         *
         * @param options.analyze - If `true`, the query will be executed and the
         * actual run time will be returned
         *
         * @param options.verbose - If `true`, the query identifier will be returned
         * and `data` will include the output columns of the query
         *
         * @param options.settings - If `true`, include information on configuration
         * parameters that affect query planning
         *
         * @param options.buffers - If `true`, include information on buffer usage
         *
         * @param options.wal - If `true`, include information on WAL record generation
         *
         * @param options.format - The format of the output, can be `"text"` (default)
         * or `"json"`
         */
        explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = "text" } = {}) {
          var _a;
          const options = [
            analyze ? "analyze" : null,
            verbose ? "verbose" : null,
            settings ? "settings" : null,
            buffers ? "buffers" : null,
            wal ? "wal" : null
          ].filter(Boolean).join("|");
          const forMediatype = (_a = this.headers["Accept"]) !== null && _a !== void 0 ? _a : "application/json";
          this.headers["Accept"] = `application/vnd.pgrst.plan+${format}; for="${forMediatype}"; options=${options};`;
          if (format === "json")
            return this;
          else
            return this;
        }
        /**
         * Rollback the query.
         *
         * `data` will still be returned, but the query is not committed.
         */
        rollback() {
          var _a;
          if (((_a = this.headers["Prefer"]) !== null && _a !== void 0 ? _a : "").trim().length > 0) {
            this.headers["Prefer"] += ",tx=rollback";
          } else {
            this.headers["Prefer"] = "tx=rollback";
          }
          return this;
        }
        /**
         * Override the type of the returned `data`.
         *
         * @typeParam NewResult - The new result type to override with
         */
        returns() {
          return this;
        }
      };
      exports.default = PostgrestTransformBuilder2;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js
  var require_PostgrestFilterBuilder = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestFilterBuilder.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      var PostgrestTransformBuilder_1 = __importDefault(require_PostgrestTransformBuilder());
      var PostgrestFilterBuilder2 = class extends PostgrestTransformBuilder_1.default {
        /**
         * Match only rows where `column` is equal to `value`.
         *
         * To check if the value of `column` is NULL, you should use `.is()` instead.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        eq(column, value) {
          this.url.searchParams.append(column, `eq.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is not equal to `value`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        neq(column, value) {
          this.url.searchParams.append(column, `neq.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is greater than `value`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        gt(column, value) {
          this.url.searchParams.append(column, `gt.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is greater than or equal to `value`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        gte(column, value) {
          this.url.searchParams.append(column, `gte.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is less than `value`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        lt(column, value) {
          this.url.searchParams.append(column, `lt.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is less than or equal to `value`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        lte(column, value) {
          this.url.searchParams.append(column, `lte.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` matches `pattern` case-sensitively.
         *
         * @param column - The column to filter on
         * @param pattern - The pattern to match with
         */
        like(column, pattern) {
          this.url.searchParams.append(column, `like.${pattern}`);
          return this;
        }
        /**
         * Match only rows where `column` matches all of `patterns` case-sensitively.
         *
         * @param column - The column to filter on
         * @param patterns - The patterns to match with
         */
        likeAllOf(column, patterns) {
          this.url.searchParams.append(column, `like(all).{${patterns.join(",")}}`);
          return this;
        }
        /**
         * Match only rows where `column` matches any of `patterns` case-sensitively.
         *
         * @param column - The column to filter on
         * @param patterns - The patterns to match with
         */
        likeAnyOf(column, patterns) {
          this.url.searchParams.append(column, `like(any).{${patterns.join(",")}}`);
          return this;
        }
        /**
         * Match only rows where `column` matches `pattern` case-insensitively.
         *
         * @param column - The column to filter on
         * @param pattern - The pattern to match with
         */
        ilike(column, pattern) {
          this.url.searchParams.append(column, `ilike.${pattern}`);
          return this;
        }
        /**
         * Match only rows where `column` matches all of `patterns` case-insensitively.
         *
         * @param column - The column to filter on
         * @param patterns - The patterns to match with
         */
        ilikeAllOf(column, patterns) {
          this.url.searchParams.append(column, `ilike(all).{${patterns.join(",")}}`);
          return this;
        }
        /**
         * Match only rows where `column` matches any of `patterns` case-insensitively.
         *
         * @param column - The column to filter on
         * @param patterns - The patterns to match with
         */
        ilikeAnyOf(column, patterns) {
          this.url.searchParams.append(column, `ilike(any).{${patterns.join(",")}}`);
          return this;
        }
        /**
         * Match only rows where `column` IS `value`.
         *
         * For non-boolean columns, this is only relevant for checking if the value of
         * `column` is NULL by setting `value` to `null`.
         *
         * For boolean columns, you can also set `value` to `true` or `false` and it
         * will behave the same way as `.eq()`.
         *
         * @param column - The column to filter on
         * @param value - The value to filter with
         */
        is(column, value) {
          this.url.searchParams.append(column, `is.${value}`);
          return this;
        }
        /**
         * Match only rows where `column` is included in the `values` array.
         *
         * @param column - The column to filter on
         * @param values - The values array to filter with
         */
        in(column, values) {
          const cleanedValues = Array.from(new Set(values)).map((s) => {
            if (typeof s === "string" && new RegExp("[,()]").test(s))
              return `"${s}"`;
            else
              return `${s}`;
          }).join(",");
          this.url.searchParams.append(column, `in.(${cleanedValues})`);
          return this;
        }
        /**
         * Only relevant for jsonb, array, and range columns. Match only rows where
         * `column` contains every element appearing in `value`.
         *
         * @param column - The jsonb, array, or range column to filter on
         * @param value - The jsonb, array, or range value to filter with
         */
        contains(column, value) {
          if (typeof value === "string") {
            this.url.searchParams.append(column, `cs.${value}`);
          } else if (Array.isArray(value)) {
            this.url.searchParams.append(column, `cs.{${value.join(",")}}`);
          } else {
            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);
          }
          return this;
        }
        /**
         * Only relevant for jsonb, array, and range columns. Match only rows where
         * every element appearing in `column` is contained by `value`.
         *
         * @param column - The jsonb, array, or range column to filter on
         * @param value - The jsonb, array, or range value to filter with
         */
        containedBy(column, value) {
          if (typeof value === "string") {
            this.url.searchParams.append(column, `cd.${value}`);
          } else if (Array.isArray(value)) {
            this.url.searchParams.append(column, `cd.{${value.join(",")}}`);
          } else {
            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);
          }
          return this;
        }
        /**
         * Only relevant for range columns. Match only rows where every element in
         * `column` is greater than any element in `range`.
         *
         * @param column - The range column to filter on
         * @param range - The range to filter with
         */
        rangeGt(column, range) {
          this.url.searchParams.append(column, `sr.${range}`);
          return this;
        }
        /**
         * Only relevant for range columns. Match only rows where every element in
         * `column` is either contained in `range` or greater than any element in
         * `range`.
         *
         * @param column - The range column to filter on
         * @param range - The range to filter with
         */
        rangeGte(column, range) {
          this.url.searchParams.append(column, `nxl.${range}`);
          return this;
        }
        /**
         * Only relevant for range columns. Match only rows where every element in
         * `column` is less than any element in `range`.
         *
         * @param column - The range column to filter on
         * @param range - The range to filter with
         */
        rangeLt(column, range) {
          this.url.searchParams.append(column, `sl.${range}`);
          return this;
        }
        /**
         * Only relevant for range columns. Match only rows where every element in
         * `column` is either contained in `range` or less than any element in
         * `range`.
         *
         * @param column - The range column to filter on
         * @param range - The range to filter with
         */
        rangeLte(column, range) {
          this.url.searchParams.append(column, `nxr.${range}`);
          return this;
        }
        /**
         * Only relevant for range columns. Match only rows where `column` is
         * mutually exclusive to `range` and there can be no element between the two
         * ranges.
         *
         * @param column - The range column to filter on
         * @param range - The range to filter with
         */
        rangeAdjacent(column, range) {
          this.url.searchParams.append(column, `adj.${range}`);
          return this;
        }
        /**
         * Only relevant for array and range columns. Match only rows where
         * `column` and `value` have an element in common.
         *
         * @param column - The array or range column to filter on
         * @param value - The array or range value to filter with
         */
        overlaps(column, value) {
          if (typeof value === "string") {
            this.url.searchParams.append(column, `ov.${value}`);
          } else {
            this.url.searchParams.append(column, `ov.{${value.join(",")}}`);
          }
          return this;
        }
        /**
         * Only relevant for text and tsvector columns. Match only rows where
         * `column` matches the query string in `query`.
         *
         * @param column - The text or tsvector column to filter on
         * @param query - The query text to match with
         * @param options - Named parameters
         * @param options.config - The text search configuration to use
         * @param options.type - Change how the `query` text is interpreted
         */
        textSearch(column, query, { config, type } = {}) {
          let typePart = "";
          if (type === "plain") {
            typePart = "pl";
          } else if (type === "phrase") {
            typePart = "ph";
          } else if (type === "websearch") {
            typePart = "w";
          }
          const configPart = config === void 0 ? "" : `(${config})`;
          this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);
          return this;
        }
        /**
         * Match only rows where each column in `query` keys is equal to its
         * associated value. Shorthand for multiple `.eq()`s.
         *
         * @param query - The object to filter with, with column names as keys mapped
         * to their filter values
         */
        match(query) {
          Object.entries(query).forEach(([column, value]) => {
            this.url.searchParams.append(column, `eq.${value}`);
          });
          return this;
        }
        /**
         * Match only rows which doesn't satisfy the filter.
         *
         * Unlike most filters, `opearator` and `value` are used as-is and need to
         * follow [PostgREST
         * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
         * to make sure they are properly sanitized.
         *
         * @param column - The column to filter on
         * @param operator - The operator to be negated to filter with, following
         * PostgREST syntax
         * @param value - The value to filter with, following PostgREST syntax
         */
        not(column, operator, value) {
          this.url.searchParams.append(column, `not.${operator}.${value}`);
          return this;
        }
        /**
         * Match only rows which satisfy at least one of the filters.
         *
         * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST
         * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
         * to make sure it's properly sanitized.
         *
         * It's currently not possible to do an `.or()` filter across multiple tables.
         *
         * @param filters - The filters to use, following PostgREST syntax
         * @param options - Named parameters
         * @param options.referencedTable - Set this to filter on referenced tables
         * instead of the parent table
         * @param options.foreignTable - Deprecated, use `referencedTable` instead
         */
        or(filters, { foreignTable, referencedTable = foreignTable } = {}) {
          const key3 = referencedTable ? `${referencedTable}.or` : "or";
          this.url.searchParams.append(key3, `(${filters})`);
          return this;
        }
        /**
         * Match only rows which satisfy the filter. This is an escape hatch - you
         * should use the specific filter methods wherever possible.
         *
         * Unlike most filters, `opearator` and `value` are used as-is and need to
         * follow [PostgREST
         * syntax](https://postgrest.org/en/stable/api.html#operators). You also need
         * to make sure they are properly sanitized.
         *
         * @param column - The column to filter on
         * @param operator - The operator to filter with, following PostgREST syntax
         * @param value - The value to filter with, following PostgREST syntax
         */
        filter(column, operator, value) {
          this.url.searchParams.append(column, `${operator}.${value}`);
          return this;
        }
      };
      exports.default = PostgrestFilterBuilder2;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js
  var require_PostgrestQueryBuilder = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestQueryBuilder.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      var PostgrestFilterBuilder_1 = __importDefault(require_PostgrestFilterBuilder());
      var PostgrestQueryBuilder2 = class {
        constructor(url, { headers = {}, schema, fetch: fetch3 }) {
          this.url = url;
          this.headers = headers;
          this.schema = schema;
          this.fetch = fetch3;
        }
        /**
         * Perform a SELECT query on the table or view.
         *
         * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`
         *
         * @param options - Named parameters
         *
         * @param options.head - When set to `true`, `data` will not be returned.
         * Useful if you only need the count.
         *
         * @param options.count - Count algorithm to use to count rows in the table or view.
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         */
        select(columns, { head = false, count } = {}) {
          const method = head ? "HEAD" : "GET";
          let quoted = false;
          const cleanedColumns = (columns !== null && columns !== void 0 ? columns : "*").split("").map((c) => {
            if (/\s/.test(c) && !quoted) {
              return "";
            }
            if (c === '"') {
              quoted = !quoted;
            }
            return c;
          }).join("");
          this.url.searchParams.set("select", cleanedColumns);
          if (count) {
            this.headers["Prefer"] = `count=${count}`;
          }
          return new PostgrestFilterBuilder_1.default({
            method,
            url: this.url,
            headers: this.headers,
            schema: this.schema,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
        /**
         * Perform an INSERT into the table or view.
         *
         * By default, inserted rows are not returned. To return it, chain the call
         * with `.select()`.
         *
         * @param values - The values to insert. Pass an object to insert a single row
         * or an array to insert multiple rows.
         *
         * @param options - Named parameters
         *
         * @param options.count - Count algorithm to use to count inserted rows.
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         *
         * @param options.defaultToNull - Make missing fields default to `null`.
         * Otherwise, use the default value for the column. Only applies for bulk
         * inserts.
         */
        insert(values, { count, defaultToNull = true } = {}) {
          const method = "POST";
          const prefersHeaders = [];
          if (this.headers["Prefer"]) {
            prefersHeaders.push(this.headers["Prefer"]);
          }
          if (count) {
            prefersHeaders.push(`count=${count}`);
          }
          if (!defaultToNull) {
            prefersHeaders.push("missing=default");
          }
          this.headers["Prefer"] = prefersHeaders.join(",");
          if (Array.isArray(values)) {
            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);
            if (columns.length > 0) {
              const uniqueColumns = [...new Set(columns)].map((column) => `"${column}"`);
              this.url.searchParams.set("columns", uniqueColumns.join(","));
            }
          }
          return new PostgrestFilterBuilder_1.default({
            method,
            url: this.url,
            headers: this.headers,
            schema: this.schema,
            body: values,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
        /**
         * Perform an UPSERT on the table or view. Depending on the column(s) passed
         * to `onConflict`, `.upsert()` allows you to perform the equivalent of
         * `.insert()` if a row with the corresponding `onConflict` columns doesn't
         * exist, or if it does exist, perform an alternative action depending on
         * `ignoreDuplicates`.
         *
         * By default, upserted rows are not returned. To return it, chain the call
         * with `.select()`.
         *
         * @param values - The values to upsert with. Pass an object to upsert a
         * single row or an array to upsert multiple rows.
         *
         * @param options - Named parameters
         *
         * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how
         * duplicate rows are determined. Two rows are duplicates if all the
         * `onConflict` columns are equal.
         *
         * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If
         * `false`, duplicate rows are merged with existing rows.
         *
         * @param options.count - Count algorithm to use to count upserted rows.
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         *
         * @param options.defaultToNull - Make missing fields default to `null`.
         * Otherwise, use the default value for the column. This only applies when
         * inserting new rows, not when merging with existing rows under
         * `ignoreDuplicates: false`. This also only applies when doing bulk upserts.
         */
        upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true } = {}) {
          const method = "POST";
          const prefersHeaders = [`resolution=${ignoreDuplicates ? "ignore" : "merge"}-duplicates`];
          if (onConflict !== void 0)
            this.url.searchParams.set("on_conflict", onConflict);
          if (this.headers["Prefer"]) {
            prefersHeaders.push(this.headers["Prefer"]);
          }
          if (count) {
            prefersHeaders.push(`count=${count}`);
          }
          if (!defaultToNull) {
            prefersHeaders.push("missing=default");
          }
          this.headers["Prefer"] = prefersHeaders.join(",");
          if (Array.isArray(values)) {
            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);
            if (columns.length > 0) {
              const uniqueColumns = [...new Set(columns)].map((column) => `"${column}"`);
              this.url.searchParams.set("columns", uniqueColumns.join(","));
            }
          }
          return new PostgrestFilterBuilder_1.default({
            method,
            url: this.url,
            headers: this.headers,
            schema: this.schema,
            body: values,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
        /**
         * Perform an UPDATE on the table or view.
         *
         * By default, updated rows are not returned. To return it, chain the call
         * with `.select()` after filters.
         *
         * @param values - The values to update with
         *
         * @param options - Named parameters
         *
         * @param options.count - Count algorithm to use to count updated rows.
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         */
        update(values, { count } = {}) {
          const method = "PATCH";
          const prefersHeaders = [];
          if (this.headers["Prefer"]) {
            prefersHeaders.push(this.headers["Prefer"]);
          }
          if (count) {
            prefersHeaders.push(`count=${count}`);
          }
          this.headers["Prefer"] = prefersHeaders.join(",");
          return new PostgrestFilterBuilder_1.default({
            method,
            url: this.url,
            headers: this.headers,
            schema: this.schema,
            body: values,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
        /**
         * Perform a DELETE on the table or view.
         *
         * By default, deleted rows are not returned. To return it, chain the call
         * with `.select()` after filters.
         *
         * @param options - Named parameters
         *
         * @param options.count - Count algorithm to use to count deleted rows.
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         */
        delete({ count } = {}) {
          const method = "DELETE";
          const prefersHeaders = [];
          if (count) {
            prefersHeaders.push(`count=${count}`);
          }
          if (this.headers["Prefer"]) {
            prefersHeaders.unshift(this.headers["Prefer"]);
          }
          this.headers["Prefer"] = prefersHeaders.join(",");
          return new PostgrestFilterBuilder_1.default({
            method,
            url: this.url,
            headers: this.headers,
            schema: this.schema,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
      };
      exports.default = PostgrestQueryBuilder2;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/version.js
  var require_version = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/version.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.version = void 0;
      exports.version = "0.0.0-automated";
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/constants.js
  var require_constants = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/constants.js"(exports) {
      "use strict";
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.DEFAULT_HEADERS = void 0;
      var version_1 = require_version();
      exports.DEFAULT_HEADERS = { "X-Client-Info": `postgrest-js/${version_1.version}` };
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js
  var require_PostgrestClient = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/PostgrestClient.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      var PostgrestQueryBuilder_1 = __importDefault(require_PostgrestQueryBuilder());
      var PostgrestFilterBuilder_1 = __importDefault(require_PostgrestFilterBuilder());
      var constants_1 = require_constants();
      var PostgrestClient2 = class _PostgrestClient {
        // TODO: Add back shouldThrowOnError once we figure out the typings
        /**
         * Creates a PostgREST client.
         *
         * @param url - URL of the PostgREST endpoint
         * @param options - Named parameters
         * @param options.headers - Custom headers
         * @param options.schema - Postgres schema to switch to
         * @param options.fetch - Custom fetch
         */
        constructor(url, { headers = {}, schema, fetch: fetch3 } = {}) {
          this.url = url;
          this.headers = Object.assign(Object.assign({}, constants_1.DEFAULT_HEADERS), headers);
          this.schemaName = schema;
          this.fetch = fetch3;
        }
        /**
         * Perform a query on a table or a view.
         *
         * @param relation - The table or view name to query
         */
        from(relation) {
          const url = new URL(`${this.url}/${relation}`);
          return new PostgrestQueryBuilder_1.default(url, {
            headers: Object.assign({}, this.headers),
            schema: this.schemaName,
            fetch: this.fetch
          });
        }
        /**
         * Select a schema to query or perform an function (rpc) call.
         *
         * The schema needs to be on the list of exposed schemas inside Supabase.
         *
         * @param schema - The schema to query
         */
        schema(schema) {
          return new _PostgrestClient(this.url, {
            headers: this.headers,
            schema,
            fetch: this.fetch
          });
        }
        /**
         * Perform a function call.
         *
         * @param fn - The function name to call
         * @param args - The arguments to pass to the function call
         * @param options - Named parameters
         * @param options.head - When set to `true`, `data` will not be returned.
         * Useful if you only need the count.
         * @param options.get - When set to `true`, the function will be called with
         * read-only access mode.
         * @param options.count - Count algorithm to use to count rows returned by the
         * function. Only applicable for [set-returning
         * functions](https://www.postgresql.org/docs/current/functions-srf.html).
         *
         * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
         * hood.
         *
         * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
         * statistics under the hood.
         *
         * `"estimated"`: Uses exact count for low numbers and planned count for high
         * numbers.
         */
        rpc(fn, args = {}, { head = false, get: get2 = false, count } = {}) {
          let method;
          const url = new URL(`${this.url}/rpc/${fn}`);
          let body;
          if (head || get2) {
            method = head ? "HEAD" : "GET";
            Object.entries(args).filter(([_, value]) => value !== void 0).map(([name, value]) => [name, Array.isArray(value) ? `{${value.join(",")}}` : `${value}`]).forEach(([name, value]) => {
              url.searchParams.append(name, value);
            });
          } else {
            method = "POST";
            body = args;
          }
          const headers = Object.assign({}, this.headers);
          if (count) {
            headers["Prefer"] = `count=${count}`;
          }
          return new PostgrestFilterBuilder_1.default({
            method,
            url,
            headers,
            schema: this.schemaName,
            body,
            fetch: this.fetch,
            allowEmpty: false
          });
        }
      };
      exports.default = PostgrestClient2;
    }
  });

  // node_modules/@supabase/postgrest-js/dist/cjs/index.js
  var require_cjs = __commonJS({
    "node_modules/@supabase/postgrest-js/dist/cjs/index.js"(exports) {
      "use strict";
      var __importDefault = exports && exports.__importDefault || function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      Object.defineProperty(exports, "__esModule", { value: true });
      exports.PostgrestBuilder = exports.PostgrestTransformBuilder = exports.PostgrestFilterBuilder = exports.PostgrestQueryBuilder = exports.PostgrestClient = void 0;
      var PostgrestClient_1 = __importDefault(require_PostgrestClient());
      exports.PostgrestClient = PostgrestClient_1.default;
      var PostgrestQueryBuilder_1 = __importDefault(require_PostgrestQueryBuilder());
      exports.PostgrestQueryBuilder = PostgrestQueryBuilder_1.default;
      var PostgrestFilterBuilder_1 = __importDefault(require_PostgrestFilterBuilder());
      exports.PostgrestFilterBuilder = PostgrestFilterBuilder_1.default;
      var PostgrestTransformBuilder_1 = __importDefault(require_PostgrestTransformBuilder());
      exports.PostgrestTransformBuilder = PostgrestTransformBuilder_1.default;
      var PostgrestBuilder_1 = __importDefault(require_PostgrestBuilder());
      exports.PostgrestBuilder = PostgrestBuilder_1.default;
      exports.default = {
        PostgrestClient: PostgrestClient_1.default,
        PostgrestQueryBuilder: PostgrestQueryBuilder_1.default,
        PostgrestFilterBuilder: PostgrestFilterBuilder_1.default,
        PostgrestTransformBuilder: PostgrestTransformBuilder_1.default,
        PostgrestBuilder: PostgrestBuilder_1.default
      };
    }
  });

  // node_modules/ws/browser.js
  var require_browser = __commonJS({
    "node_modules/ws/browser.js"(exports, module) {
      "use strict";
      module.exports = function() {
        throw new Error(
          "ws does not work in the browser. Browser clients must use the native WebSocket object"
        );
      };
    }
  });

  // node_modules/@ubiquibot/permit-generation/dist/handlers/index.js
  var require_handlers = __commonJS({
    "node_modules/@ubiquibot/permit-generation/dist/handlers/index.js"(exports) {
      "use strict";
      var t = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
      function e(t2) {
        return t2 && t2.__esModule && Object.prototype.hasOwnProperty.call(t2, "default") ? t2.default : t2;
      }
      function r3(t2) {
        if (t2.__esModule)
          return t2;
        var e2 = t2.default;
        if ("function" == typeof e2) {
          var r4 = function t3() {
            return this instanceof t3 ? Reflect.construct(e2, arguments, this.constructor) : e2.apply(this, arguments);
          };
          r4.prototype = e2.prototype;
        } else
          r4 = {};
        return Object.defineProperty(r4, "__esModule", { value: true }), Object.keys(t2).forEach(function(e3) {
          var n2 = Object.getOwnPropertyDescriptor(t2, e3);
          Object.defineProperty(r4, e3, n2.get ? n2 : { enumerable: true, get: function() {
            return t2[e3];
          } });
        }), r4;
      }
      var n;
      var A;
      var i = { exports: {} };
      function s() {
        if (A)
          return n;
        A = 1;
        var t2 = false, e2 = "Invariant failed";
        return n = function(r4, n2) {
          if (!r4) {
            if (t2)
              throw new Error(e2);
            var A2 = "function" == typeof n2 ? n2() : n2, i2 = A2 ? "".concat(e2, ": ").concat(A2) : e2;
            throw new Error(i2);
          }
        };
      }
      var a;
      var c = { exports: {} };
      a = c, function() {
        var e2 = "input is invalid type", r4 = "object" == typeof window, n2 = r4 ? window : {};
        n2.JS_SHA3_NO_WINDOW && (r4 = false);
        var A2 = !r4 && "object" == typeof self;
        !n2.JS_SHA3_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node ? n2 = t : A2 && (n2 = self);
        var i2 = !n2.JS_SHA3_NO_COMMON_JS && a.exports, o2 = !n2.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, s2 = "0123456789abcdef".split(""), c2 = [4, 1024, 262144, 67108864], h2 = [0, 8, 16, 24], g2 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], u2 = [224, 256, 384, 512], l2 = [128, 256], f2 = ["hex", "buffer", "arrayBuffer", "array", "digest"], p2 = { 128: 168, 256: 136 };
        !n2.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(t2) {
          return "[object Array]" === Object.prototype.toString.call(t2);
        }), !o2 || !n2.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(t2) {
          return "object" == typeof t2 && t2.buffer && t2.buffer.constructor === ArrayBuffer;
        });
        for (var d2 = function(t2, e3, r5) {
          return function(n3) {
            return new N3(t2, e3, t2).update(n3)[r5]();
          };
        }, I2 = function(t2, e3, r5) {
          return function(n3, A3) {
            return new N3(t2, e3, A3).update(n3)[r5]();
          };
        }, y2 = function(t2, e3, r5) {
          return function(e4, n3, A3, i3) {
            return w2["cshake" + t2].update(e4, n3, A3, i3)[r5]();
          };
        }, C2 = function(t2, e3, r5) {
          return function(e4, n3, A3, i3) {
            return w2["kmac" + t2].update(e4, n3, A3, i3)[r5]();
          };
        }, m2 = function(t2, e3, r5, n3) {
          for (var A3 = 0; A3 < f2.length; ++A3) {
            var i3 = f2[A3];
            t2[i3] = e3(r5, n3, i3);
          }
          return t2;
        }, B2 = function(t2, e3) {
          var r5 = d2(t2, e3, "hex");
          return r5.create = function() {
            return new N3(t2, e3, t2);
          }, r5.update = function(t3) {
            return r5.create().update(t3);
          }, m2(r5, d2, t2, e3);
        }, E2 = [{ name: "keccak", padding: [1, 256, 65536, 16777216], bits: u2, createMethod: B2 }, { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: u2, createMethod: B2 }, { name: "shake", padding: [31, 7936, 2031616, 520093696], bits: l2, createMethod: function(t2, e3) {
          var r5 = I2(t2, e3, "hex");
          return r5.create = function(r6) {
            return new N3(t2, e3, r6);
          }, r5.update = function(t3, e4) {
            return r5.create(e4).update(t3);
          }, m2(r5, I2, t2, e3);
        } }, { name: "cshake", padding: c2, bits: l2, createMethod: function(t2, e3) {
          var r5 = p2[t2], n3 = y2(t2, 0, "hex");
          return n3.create = function(n4, A3, i3) {
            return A3 || i3 ? new N3(t2, e3, n4).bytepad([A3, i3], r5) : w2["shake" + t2].create(n4);
          }, n3.update = function(t3, e4, r6, A3) {
            return n3.create(e4, r6, A3).update(t3);
          }, m2(n3, y2, t2, e3);
        } }, { name: "kmac", padding: c2, bits: l2, createMethod: function(t2, e3) {
          var r5 = p2[t2], n3 = C2(t2, 0, "hex");
          return n3.create = function(n4, A3, i3) {
            return new M2(t2, e3, A3).bytepad(["KMAC", i3], r5).bytepad([n4], r5);
          }, n3.update = function(t3, e4, r6, A3) {
            return n3.create(t3, r6, A3).update(e4);
          }, m2(n3, C2, t2, e3);
        } }], w2 = {}, v2 = [], _2 = 0; _2 < E2.length; ++_2)
          for (var Q2 = E2[_2], b2 = Q2.bits, k2 = 0; k2 < b2.length; ++k2) {
            var D2 = Q2.name + "_" + b2[k2];
            if (v2.push(D2), w2[D2] = Q2.createMethod(b2[k2], Q2.padding), "sha3" !== Q2.name) {
              var S2 = Q2.name + b2[k2];
              v2.push(S2), w2[S2] = w2[D2];
            }
          }
        function N3(t2, e3, r5) {
          this.blocks = [], this.s = [], this.padding = e3, this.outputBits = r5, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (t2 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r5 >> 5, this.extraBytes = (31 & r5) >> 3;
          for (var n3 = 0; n3 < 50; ++n3)
            this.s[n3] = 0;
        }
        function M2(t2, e3, r5) {
          N3.call(this, t2, e3, r5);
        }
        N3.prototype.update = function(t2) {
          if (this.finalized)
            throw new Error("finalize already called");
          var r5, n3 = typeof t2;
          if ("string" !== n3) {
            if ("object" !== n3)
              throw new Error(e2);
            if (null === t2)
              throw new Error(e2);
            if (o2 && t2.constructor === ArrayBuffer)
              t2 = new Uint8Array(t2);
            else if (!(Array.isArray(t2) || o2 && ArrayBuffer.isView(t2)))
              throw new Error(e2);
            r5 = true;
          }
          for (var A3, i3, s3 = this.blocks, a2 = this.byteCount, c3 = t2.length, g3 = this.blockCount, u3 = 0, l3 = this.s; u3 < c3; ) {
            if (this.reset)
              for (this.reset = false, s3[0] = this.block, A3 = 1; A3 < g3 + 1; ++A3)
                s3[A3] = 0;
            if (r5)
              for (A3 = this.start; u3 < c3 && A3 < a2; ++u3)
                s3[A3 >> 2] |= t2[u3] << h2[3 & A3++];
            else
              for (A3 = this.start; u3 < c3 && A3 < a2; ++u3)
                (i3 = t2.charCodeAt(u3)) < 128 ? s3[A3 >> 2] |= i3 << h2[3 & A3++] : i3 < 2048 ? (s3[A3 >> 2] |= (192 | i3 >> 6) << h2[3 & A3++], s3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]) : i3 < 55296 || i3 >= 57344 ? (s3[A3 >> 2] |= (224 | i3 >> 12) << h2[3 & A3++], s3[A3 >> 2] |= (128 | i3 >> 6 & 63) << h2[3 & A3++], s3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]) : (i3 = 65536 + ((1023 & i3) << 10 | 1023 & t2.charCodeAt(++u3)), s3[A3 >> 2] |= (240 | i3 >> 18) << h2[3 & A3++], s3[A3 >> 2] |= (128 | i3 >> 12 & 63) << h2[3 & A3++], s3[A3 >> 2] |= (128 | i3 >> 6 & 63) << h2[3 & A3++], s3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]);
            if (this.lastByteIndex = A3, A3 >= a2) {
              for (this.start = A3 - a2, this.block = s3[g3], A3 = 0; A3 < g3; ++A3)
                l3[A3] ^= s3[A3];
              x2(l3), this.reset = true;
            } else
              this.start = A3;
          }
          return this;
        }, N3.prototype.encode = function(t2, e3) {
          var r5 = 255 & t2, n3 = 1, A3 = [r5];
          for (r5 = 255 & (t2 >>= 8); r5 > 0; )
            A3.unshift(r5), r5 = 255 & (t2 >>= 8), ++n3;
          return e3 ? A3.push(n3) : A3.unshift(n3), this.update(A3), A3.length;
        }, N3.prototype.encodeString = function(t2) {
          var r5, n3 = typeof t2;
          if ("string" !== n3) {
            if ("object" !== n3)
              throw new Error(e2);
            if (null === t2)
              throw new Error(e2);
            if (o2 && t2.constructor === ArrayBuffer)
              t2 = new Uint8Array(t2);
            else if (!(Array.isArray(t2) || o2 && ArrayBuffer.isView(t2)))
              throw new Error(e2);
            r5 = true;
          }
          var A3 = 0, i3 = t2.length;
          if (r5)
            A3 = i3;
          else
            for (var s3 = 0; s3 < t2.length; ++s3) {
              var a2 = t2.charCodeAt(s3);
              a2 < 128 ? A3 += 1 : a2 < 2048 ? A3 += 2 : a2 < 55296 || a2 >= 57344 ? A3 += 3 : (a2 = 65536 + ((1023 & a2) << 10 | 1023 & t2.charCodeAt(++s3)), A3 += 4);
            }
          return A3 += this.encode(8 * A3), this.update(t2), A3;
        }, N3.prototype.bytepad = function(t2, e3) {
          for (var r5 = this.encode(e3), n3 = 0; n3 < t2.length; ++n3)
            r5 += this.encodeString(t2[n3]);
          var A3 = e3 - r5 % e3, i3 = [];
          return i3.length = A3, this.update(i3), this;
        }, N3.prototype.finalize = function() {
          if (!this.finalized) {
            this.finalized = true;
            var t2 = this.blocks, e3 = this.lastByteIndex, r5 = this.blockCount, n3 = this.s;
            if (t2[e3 >> 2] |= this.padding[3 & e3], this.lastByteIndex === this.byteCount)
              for (t2[0] = t2[r5], e3 = 1; e3 < r5 + 1; ++e3)
                t2[e3] = 0;
            for (t2[r5 - 1] |= 2147483648, e3 = 0; e3 < r5; ++e3)
              n3[e3] ^= t2[e3];
            x2(n3);
          }
        }, N3.prototype.toString = N3.prototype.hex = function() {
          this.finalize();
          for (var t2, e3 = this.blockCount, r5 = this.s, n3 = this.outputBlocks, A3 = this.extraBytes, i3 = 0, o3 = 0, a2 = ""; o3 < n3; ) {
            for (i3 = 0; i3 < e3 && o3 < n3; ++i3, ++o3)
              t2 = r5[i3], a2 += s2[t2 >> 4 & 15] + s2[15 & t2] + s2[t2 >> 12 & 15] + s2[t2 >> 8 & 15] + s2[t2 >> 20 & 15] + s2[t2 >> 16 & 15] + s2[t2 >> 28 & 15] + s2[t2 >> 24 & 15];
            o3 % e3 == 0 && (x2(r5), i3 = 0);
          }
          return A3 && (t2 = r5[i3], a2 += s2[t2 >> 4 & 15] + s2[15 & t2], A3 > 1 && (a2 += s2[t2 >> 12 & 15] + s2[t2 >> 8 & 15]), A3 > 2 && (a2 += s2[t2 >> 20 & 15] + s2[t2 >> 16 & 15])), a2;
        }, N3.prototype.arrayBuffer = function() {
          this.finalize();
          var t2, e3 = this.blockCount, r5 = this.s, n3 = this.outputBlocks, A3 = this.extraBytes, i3 = 0, o3 = 0, s3 = this.outputBits >> 3;
          t2 = A3 ? new ArrayBuffer(n3 + 1 << 2) : new ArrayBuffer(s3);
          for (var a2 = new Uint32Array(t2); o3 < n3; ) {
            for (i3 = 0; i3 < e3 && o3 < n3; ++i3, ++o3)
              a2[o3] = r5[i3];
            o3 % e3 == 0 && x2(r5);
          }
          return A3 && (a2[i3] = r5[i3], t2 = t2.slice(0, s3)), t2;
        }, N3.prototype.buffer = N3.prototype.arrayBuffer, N3.prototype.digest = N3.prototype.array = function() {
          this.finalize();
          for (var t2, e3, r5 = this.blockCount, n3 = this.s, A3 = this.outputBlocks, i3 = this.extraBytes, o3 = 0, s3 = 0, a2 = []; s3 < A3; ) {
            for (o3 = 0; o3 < r5 && s3 < A3; ++o3, ++s3)
              t2 = s3 << 2, e3 = n3[o3], a2[t2] = 255 & e3, a2[t2 + 1] = e3 >> 8 & 255, a2[t2 + 2] = e3 >> 16 & 255, a2[t2 + 3] = e3 >> 24 & 255;
            s3 % r5 == 0 && x2(n3);
          }
          return i3 && (t2 = s3 << 2, e3 = n3[o3], a2[t2] = 255 & e3, i3 > 1 && (a2[t2 + 1] = e3 >> 8 & 255), i3 > 2 && (a2[t2 + 2] = e3 >> 16 & 255)), a2;
        }, M2.prototype = new N3(), M2.prototype.finalize = function() {
          return this.encode(this.outputBits, true), N3.prototype.finalize.call(this);
        };
        var x2 = function(t2) {
          var e3, r5, n3, A3, i3, o3, s3, a2, c3, h3, u3, l3, f3, p3, d3, I3, y3, C3, m3, B3, E3, w3, v3, _3, Q3, b3, k3, D3, S3, N4, M3, x3, F2, P2, T2, R2, U2, G2, H2, L2, O2, Y2, K2, J2, j2, z2, q2, X2, V2, W2, Z2, $2, tt2, et2, rt2, nt2, At2, it2, ot2, st2, at2, ct2, ht2;
          for (n3 = 0; n3 < 48; n3 += 2)
            A3 = t2[0] ^ t2[10] ^ t2[20] ^ t2[30] ^ t2[40], i3 = t2[1] ^ t2[11] ^ t2[21] ^ t2[31] ^ t2[41], o3 = t2[2] ^ t2[12] ^ t2[22] ^ t2[32] ^ t2[42], s3 = t2[3] ^ t2[13] ^ t2[23] ^ t2[33] ^ t2[43], a2 = t2[4] ^ t2[14] ^ t2[24] ^ t2[34] ^ t2[44], c3 = t2[5] ^ t2[15] ^ t2[25] ^ t2[35] ^ t2[45], h3 = t2[6] ^ t2[16] ^ t2[26] ^ t2[36] ^ t2[46], u3 = t2[7] ^ t2[17] ^ t2[27] ^ t2[37] ^ t2[47], e3 = (l3 = t2[8] ^ t2[18] ^ t2[28] ^ t2[38] ^ t2[48]) ^ (o3 << 1 | s3 >>> 31), r5 = (f3 = t2[9] ^ t2[19] ^ t2[29] ^ t2[39] ^ t2[49]) ^ (s3 << 1 | o3 >>> 31), t2[0] ^= e3, t2[1] ^= r5, t2[10] ^= e3, t2[11] ^= r5, t2[20] ^= e3, t2[21] ^= r5, t2[30] ^= e3, t2[31] ^= r5, t2[40] ^= e3, t2[41] ^= r5, e3 = A3 ^ (a2 << 1 | c3 >>> 31), r5 = i3 ^ (c3 << 1 | a2 >>> 31), t2[2] ^= e3, t2[3] ^= r5, t2[12] ^= e3, t2[13] ^= r5, t2[22] ^= e3, t2[23] ^= r5, t2[32] ^= e3, t2[33] ^= r5, t2[42] ^= e3, t2[43] ^= r5, e3 = o3 ^ (h3 << 1 | u3 >>> 31), r5 = s3 ^ (u3 << 1 | h3 >>> 31), t2[4] ^= e3, t2[5] ^= r5, t2[14] ^= e3, t2[15] ^= r5, t2[24] ^= e3, t2[25] ^= r5, t2[34] ^= e3, t2[35] ^= r5, t2[44] ^= e3, t2[45] ^= r5, e3 = a2 ^ (l3 << 1 | f3 >>> 31), r5 = c3 ^ (f3 << 1 | l3 >>> 31), t2[6] ^= e3, t2[7] ^= r5, t2[16] ^= e3, t2[17] ^= r5, t2[26] ^= e3, t2[27] ^= r5, t2[36] ^= e3, t2[37] ^= r5, t2[46] ^= e3, t2[47] ^= r5, e3 = h3 ^ (A3 << 1 | i3 >>> 31), r5 = u3 ^ (i3 << 1 | A3 >>> 31), t2[8] ^= e3, t2[9] ^= r5, t2[18] ^= e3, t2[19] ^= r5, t2[28] ^= e3, t2[29] ^= r5, t2[38] ^= e3, t2[39] ^= r5, t2[48] ^= e3, t2[49] ^= r5, p3 = t2[0], d3 = t2[1], z2 = t2[11] << 4 | t2[10] >>> 28, q2 = t2[10] << 4 | t2[11] >>> 28, D3 = t2[20] << 3 | t2[21] >>> 29, S3 = t2[21] << 3 | t2[20] >>> 29, st2 = t2[31] << 9 | t2[30] >>> 23, at2 = t2[30] << 9 | t2[31] >>> 23, Y2 = t2[40] << 18 | t2[41] >>> 14, K2 = t2[41] << 18 | t2[40] >>> 14, P2 = t2[2] << 1 | t2[3] >>> 31, T2 = t2[3] << 1 | t2[2] >>> 31, I3 = t2[13] << 12 | t2[12] >>> 20, y3 = t2[12] << 12 | t2[13] >>> 20, X2 = t2[22] << 10 | t2[23] >>> 22, V2 = t2[23] << 10 | t2[22] >>> 22, N4 = t2[33] << 13 | t2[32] >>> 19, M3 = t2[32] << 13 | t2[33] >>> 19, ct2 = t2[42] << 2 | t2[43] >>> 30, ht2 = t2[43] << 2 | t2[42] >>> 30, et2 = t2[5] << 30 | t2[4] >>> 2, rt2 = t2[4] << 30 | t2[5] >>> 2, R2 = t2[14] << 6 | t2[15] >>> 26, U2 = t2[15] << 6 | t2[14] >>> 26, C3 = t2[25] << 11 | t2[24] >>> 21, m3 = t2[24] << 11 | t2[25] >>> 21, W2 = t2[34] << 15 | t2[35] >>> 17, Z2 = t2[35] << 15 | t2[34] >>> 17, x3 = t2[45] << 29 | t2[44] >>> 3, F2 = t2[44] << 29 | t2[45] >>> 3, _3 = t2[6] << 28 | t2[7] >>> 4, Q3 = t2[7] << 28 | t2[6] >>> 4, nt2 = t2[17] << 23 | t2[16] >>> 9, At2 = t2[16] << 23 | t2[17] >>> 9, G2 = t2[26] << 25 | t2[27] >>> 7, H2 = t2[27] << 25 | t2[26] >>> 7, B3 = t2[36] << 21 | t2[37] >>> 11, E3 = t2[37] << 21 | t2[36] >>> 11, $2 = t2[47] << 24 | t2[46] >>> 8, tt2 = t2[46] << 24 | t2[47] >>> 8, J2 = t2[8] << 27 | t2[9] >>> 5, j2 = t2[9] << 27 | t2[8] >>> 5, b3 = t2[18] << 20 | t2[19] >>> 12, k3 = t2[19] << 20 | t2[18] >>> 12, it2 = t2[29] << 7 | t2[28] >>> 25, ot2 = t2[28] << 7 | t2[29] >>> 25, L2 = t2[38] << 8 | t2[39] >>> 24, O2 = t2[39] << 8 | t2[38] >>> 24, w3 = t2[48] << 14 | t2[49] >>> 18, v3 = t2[49] << 14 | t2[48] >>> 18, t2[0] = p3 ^ ~I3 & C3, t2[1] = d3 ^ ~y3 & m3, t2[10] = _3 ^ ~b3 & D3, t2[11] = Q3 ^ ~k3 & S3, t2[20] = P2 ^ ~R2 & G2, t2[21] = T2 ^ ~U2 & H2, t2[30] = J2 ^ ~z2 & X2, t2[31] = j2 ^ ~q2 & V2, t2[40] = et2 ^ ~nt2 & it2, t2[41] = rt2 ^ ~At2 & ot2, t2[2] = I3 ^ ~C3 & B3, t2[3] = y3 ^ ~m3 & E3, t2[12] = b3 ^ ~D3 & N4, t2[13] = k3 ^ ~S3 & M3, t2[22] = R2 ^ ~G2 & L2, t2[23] = U2 ^ ~H2 & O2, t2[32] = z2 ^ ~X2 & W2, t2[33] = q2 ^ ~V2 & Z2, t2[42] = nt2 ^ ~it2 & st2, t2[43] = At2 ^ ~ot2 & at2, t2[4] = C3 ^ ~B3 & w3, t2[5] = m3 ^ ~E3 & v3, t2[14] = D3 ^ ~N4 & x3, t2[15] = S3 ^ ~M3 & F2, t2[24] = G2 ^ ~L2 & Y2, t2[25] = H2 ^ ~O2 & K2, t2[34] = X2 ^ ~W2 & $2, t2[35] = V2 ^ ~Z2 & tt2, t2[44] = it2 ^ ~st2 & ct2, t2[45] = ot2 ^ ~at2 & ht2, t2[6] = B3 ^ ~w3 & p3, t2[7] = E3 ^ ~v3 & d3, t2[16] = N4 ^ ~x3 & _3, t2[17] = M3 ^ ~F2 & Q3, t2[26] = L2 ^ ~Y2 & P2, t2[27] = O2 ^ ~K2 & T2, t2[36] = W2 ^ ~$2 & J2, t2[37] = Z2 ^ ~tt2 & j2, t2[46] = st2 ^ ~ct2 & et2, t2[47] = at2 ^ ~ht2 & rt2, t2[8] = w3 ^ ~p3 & I3, t2[9] = v3 ^ ~d3 & y3, t2[18] = x3 ^ ~_3 & b3, t2[19] = F2 ^ ~Q3 & k3, t2[28] = Y2 ^ ~P2 & R2, t2[29] = K2 ^ ~T2 & U2, t2[38] = $2 ^ ~J2 & z2, t2[39] = tt2 ^ ~j2 & q2, t2[48] = ct2 ^ ~et2 & nt2, t2[49] = ht2 ^ ~rt2 & At2, t2[0] ^= g2[n3], t2[1] ^= g2[n3 + 1];
        };
        if (i2)
          a.exports = w2;
        else
          for (_2 = 0; _2 < v2.length; ++_2)
            n2[v2[_2]] = w2[v2[_2]];
      }();
      var h = e(c.exports);
      var g = false;
      var u = false;
      var l = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
      var f = l.default;
      var p = null;
      var d = function() {
        try {
          const t2 = [];
          if (["NFD", "NFC", "NFKD", "NFKC"].forEach((e2) => {
            try {
              if ("test" !== "test".normalize(e2))
                throw new Error("bad normalize");
            } catch (r4) {
              t2.push(e2);
            }
          }), t2.length)
            throw new Error("missing " + t2.join(", "));
          if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
            throw new Error("broken implementation");
        } catch (t2) {
          return t2.message;
        }
        return null;
      }();
      var I;
      var y;
      !function(t2) {
        t2.DEBUG = "DEBUG", t2.INFO = "INFO", t2.WARNING = "WARNING", t2.ERROR = "ERROR", t2.OFF = "OFF";
      }(I || (I = {})), function(t2) {
        t2.UNKNOWN_ERROR = "UNKNOWN_ERROR", t2.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", t2.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", t2.NETWORK_ERROR = "NETWORK_ERROR", t2.SERVER_ERROR = "SERVER_ERROR", t2.TIMEOUT = "TIMEOUT", t2.BUFFER_OVERRUN = "BUFFER_OVERRUN", t2.NUMERIC_FAULT = "NUMERIC_FAULT", t2.MISSING_NEW = "MISSING_NEW", t2.INVALID_ARGUMENT = "INVALID_ARGUMENT", t2.MISSING_ARGUMENT = "MISSING_ARGUMENT", t2.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", t2.CALL_EXCEPTION = "CALL_EXCEPTION", t2.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", t2.NONCE_EXPIRED = "NONCE_EXPIRED", t2.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", t2.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", t2.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", t2.ACTION_REJECTED = "ACTION_REJECTED";
      }(y || (y = {}));
      var C = "0123456789abcdef";
      var m = class t2 {
        constructor(t3) {
          Object.defineProperty(this, "version", { enumerable: true, value: t3, writable: false });
        }
        _log(t3, e2) {
          const r4 = t3.toLowerCase();
          null == l[r4] && this.throwArgumentError("invalid log level name", "logLevel", t3), f > l[r4] || console.log.apply(console, e2);
        }
        debug(...e2) {
          this._log(t2.levels.DEBUG, e2);
        }
        info(...e2) {
          this._log(t2.levels.INFO, e2);
        }
        warn(...e2) {
          this._log(t2.levels.WARNING, e2);
        }
        makeError(e2, r4, n2) {
          if (u)
            return this.makeError("censored error", r4, {});
          r4 || (r4 = t2.errors.UNKNOWN_ERROR), n2 || (n2 = {});
          const A2 = [];
          Object.keys(n2).forEach((t3) => {
            const e3 = n2[t3];
            try {
              if (e3 instanceof Uint8Array) {
                let r5 = "";
                for (let t4 = 0; t4 < e3.length; t4++)
                  r5 += C[e3[t4] >> 4], r5 += C[15 & e3[t4]];
                A2.push(t3 + "=Uint8Array(0x" + r5 + ")");
              } else
                A2.push(t3 + "=" + JSON.stringify(e3));
            } catch (e4) {
              A2.push(t3 + "=" + JSON.stringify(n2[t3].toString()));
            }
          }), A2.push(`code=${r4}`), A2.push(`version=${this.version}`);
          const i2 = e2;
          let o2 = "";
          switch (r4) {
            case y.NUMERIC_FAULT: {
              o2 = "NUMERIC_FAULT";
              const t3 = e2;
              switch (t3) {
                case "overflow":
                case "underflow":
                case "division-by-zero":
                  o2 += "-" + t3;
                  break;
                case "negative-power":
                case "negative-width":
                  o2 += "-unsupported";
                  break;
                case "unbound-bitwise-result":
                  o2 += "-unbound-result";
              }
              break;
            }
            case y.CALL_EXCEPTION:
            case y.INSUFFICIENT_FUNDS:
            case y.MISSING_NEW:
            case y.NONCE_EXPIRED:
            case y.REPLACEMENT_UNDERPRICED:
            case y.TRANSACTION_REPLACED:
            case y.UNPREDICTABLE_GAS_LIMIT:
              o2 = r4;
          }
          o2 && (e2 += " [ See: https://links.ethers.org/v5-errors-" + o2 + " ]"), A2.length && (e2 += " (" + A2.join(", ") + ")");
          const s2 = new Error(e2);
          return s2.reason = i2, s2.code = r4, Object.keys(n2).forEach(function(t3) {
            s2[t3] = n2[t3];
          }), s2;
        }
        throwError(t3, e2, r4) {
          throw this.makeError(t3, e2, r4);
        }
        throwArgumentError(e2, r4, n2) {
          return this.throwError(e2, t2.errors.INVALID_ARGUMENT, { argument: r4, value: n2 });
        }
        assert(t3, e2, r4, n2) {
          t3 || this.throwError(e2, r4, n2);
        }
        assertArgument(t3, e2, r4, n2) {
          t3 || this.throwArgumentError(e2, r4, n2);
        }
        checkNormalize(e2) {
          d && this.throwError("platform missing String.prototype.normalize", t2.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: d });
        }
        checkSafeUint53(e2, r4) {
          "number" == typeof e2 && (null == r4 && (r4 = "value not safe"), (e2 < 0 || e2 >= 9007199254740991) && this.throwError(r4, t2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: e2 }), e2 % 1 && this.throwError(r4, t2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: e2 }));
        }
        checkArgumentCount(e2, r4, n2) {
          n2 = n2 ? ": " + n2 : "", e2 < r4 && this.throwError("missing argument" + n2, t2.errors.MISSING_ARGUMENT, { count: e2, expectedCount: r4 }), e2 > r4 && this.throwError("too many arguments" + n2, t2.errors.UNEXPECTED_ARGUMENT, { count: e2, expectedCount: r4 });
        }
        checkNew(e2, r4) {
          e2 !== Object && null != e2 || this.throwError("missing new", t2.errors.MISSING_NEW, { name: r4.name });
        }
        checkAbstract(e2, r4) {
          e2 === r4 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r4.name) + " directly; use a sub-class", t2.errors.UNSUPPORTED_OPERATION, { name: e2.name, operation: "new" }) : e2 !== Object && null != e2 || this.throwError("missing new", t2.errors.MISSING_NEW, { name: r4.name });
        }
        static globalLogger() {
          return p || (p = new t2("logger/5.7.0")), p;
        }
        static setCensorship(e2, r4) {
          if (!e2 && r4 && this.globalLogger().throwError("cannot permanently disable censorship", t2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), g) {
            if (!e2)
              return;
            this.globalLogger().throwError("error censorship permanent", t2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
          }
          u = !!e2, g = !!r4;
        }
        static setLogLevel(e2) {
          const r4 = l[e2.toLowerCase()];
          null != r4 ? f = r4 : t2.globalLogger().warn("invalid log level - " + e2);
        }
        static from(e2) {
          return new t2(e2);
        }
      };
      m.errors = y, m.levels = I;
      var B = new m("bytes/5.7.0");
      function E(t2) {
        return !!t2.toHexString;
      }
      function w(t2) {
        return t2.slice || (t2.slice = function() {
          const e2 = Array.prototype.slice.call(arguments);
          return w(new Uint8Array(Array.prototype.slice.apply(t2, e2)));
        }), t2;
      }
      function v(t2) {
        return "number" == typeof t2 && t2 == t2 && t2 % 1 == 0;
      }
      function _(t2) {
        if (null == t2)
          return false;
        if (t2.constructor === Uint8Array)
          return true;
        if ("string" == typeof t2)
          return false;
        if (!v(t2.length) || t2.length < 0)
          return false;
        for (let e2 = 0; e2 < t2.length; e2++) {
          const r4 = t2[e2];
          if (!v(r4) || r4 < 0 || r4 >= 256)
            return false;
        }
        return true;
      }
      function Q(t2, e2) {
        if (e2 || (e2 = {}), "number" == typeof t2) {
          B.checkSafeUint53(t2, "invalid arrayify value");
          const e3 = [];
          for (; t2; )
            e3.unshift(255 & t2), t2 = parseInt(String(t2 / 256));
          return 0 === e3.length && e3.push(0), w(new Uint8Array(e3));
        }
        if (e2.allowMissingPrefix && "string" == typeof t2 && "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), E(t2) && (t2 = t2.toHexString()), k(t2)) {
          let r4 = t2.substring(2);
          r4.length % 2 && ("left" === e2.hexPad ? r4 = "0" + r4 : "right" === e2.hexPad ? r4 += "0" : B.throwArgumentError("hex data is odd-length", "value", t2));
          const n2 = [];
          for (let t3 = 0; t3 < r4.length; t3 += 2)
            n2.push(parseInt(r4.substring(t3, t3 + 2), 16));
          return w(new Uint8Array(n2));
        }
        return _(t2) ? w(new Uint8Array(t2)) : B.throwArgumentError("invalid arrayify value", "value", t2);
      }
      function b(t2) {
        const e2 = t2.map((t3) => Q(t3)), r4 = e2.reduce((t3, e3) => t3 + e3.length, 0), n2 = new Uint8Array(r4);
        return e2.reduce((t3, e3) => (n2.set(e3, t3), t3 + e3.length), 0), w(n2);
      }
      function k(t2, e2) {
        return !("string" != typeof t2 || !t2.match(/^0x[0-9A-Fa-f]*$/)) && (!e2 || t2.length === 2 + 2 * e2);
      }
      var D = "0123456789abcdef";
      function S(t2, e2) {
        if (e2 || (e2 = {}), "number" == typeof t2) {
          B.checkSafeUint53(t2, "invalid hexlify value");
          let e3 = "";
          for (; t2; )
            e3 = D[15 & t2] + e3, t2 = Math.floor(t2 / 16);
          return e3.length ? (e3.length % 2 && (e3 = "0" + e3), "0x" + e3) : "0x00";
        }
        if ("bigint" == typeof t2)
          return (t2 = t2.toString(16)).length % 2 ? "0x0" + t2 : "0x" + t2;
        if (e2.allowMissingPrefix && "string" == typeof t2 && "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), E(t2))
          return t2.toHexString();
        if (k(t2))
          return t2.length % 2 && ("left" === e2.hexPad ? t2 = "0x0" + t2.substring(2) : "right" === e2.hexPad ? t2 += "0" : B.throwArgumentError("hex data is odd-length", "value", t2)), t2.toLowerCase();
        if (_(t2)) {
          let e3 = "0x";
          for (let r4 = 0; r4 < t2.length; r4++) {
            let n2 = t2[r4];
            e3 += D[(240 & n2) >> 4] + D[15 & n2];
          }
          return e3;
        }
        return B.throwArgumentError("invalid hexlify value", "value", t2);
      }
      function N2(t2, e2, r4) {
        return "string" != typeof t2 ? t2 = S(t2) : (!k(t2) || t2.length % 2) && B.throwArgumentError("invalid hexData", "value", t2), e2 = 2 + 2 * e2, null != r4 ? "0x" + t2.substring(e2, 2 + 2 * r4) : "0x" + t2.substring(e2);
      }
      function M(t2) {
        let e2 = "0x";
        return t2.forEach((t3) => {
          e2 += S(t3).substring(2);
        }), e2;
      }
      function x(t2, e2) {
        for ("string" != typeof t2 ? t2 = S(t2) : k(t2) || B.throwArgumentError("invalid hex string", "value", t2), t2.length > 2 * e2 + 2 && B.throwArgumentError("value out of range", "value", arguments[1]); t2.length < 2 * e2 + 2; )
          t2 = "0x0" + t2.substring(2);
        return t2;
      }
      function F(t2) {
        return "0x" + h.keccak_256(Q(t2));
      }
      var P = { exports: {} };
      var T = r3(Object.freeze({ __proto__: null, default: {} }));
      !function(t2, e2) {
        function r4(t3, e3) {
          if (!t3)
            throw new Error(e3 || "Assertion failed");
        }
        function n2(t3, e3) {
          t3.super_ = e3;
          var r5 = function() {
          };
          r5.prototype = e3.prototype, t3.prototype = new r5(), t3.prototype.constructor = t3;
        }
        function A2(t3, e3, r5) {
          if (A2.isBN(t3))
            return t3;
          this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t3 && ("le" !== e3 && "be" !== e3 || (r5 = e3, e3 = 10), this._init(t3 || 0, e3 || 10, r5 || "be"));
        }
        var i2;
        "object" == typeof t2 ? t2.exports = A2 : e2.BN = A2, A2.BN = A2, A2.wordSize = 26;
        try {
          i2 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : T.Buffer;
        } catch (t3) {
        }
        function o2(t3, e3) {
          var n3 = t3.charCodeAt(e3);
          return n3 >= 48 && n3 <= 57 ? n3 - 48 : n3 >= 65 && n3 <= 70 ? n3 - 55 : n3 >= 97 && n3 <= 102 ? n3 - 87 : void r4(false, "Invalid character in " + t3);
        }
        function s2(t3, e3, r5) {
          var n3 = o2(t3, r5);
          return r5 - 1 >= e3 && (n3 |= o2(t3, r5 - 1) << 4), n3;
        }
        function a2(t3, e3, n3, A3) {
          for (var i3 = 0, o3 = 0, s3 = Math.min(t3.length, n3), a3 = e3; a3 < s3; a3++) {
            var c3 = t3.charCodeAt(a3) - 48;
            i3 *= A3, o3 = c3 >= 49 ? c3 - 49 + 10 : c3 >= 17 ? c3 - 17 + 10 : c3, r4(c3 >= 0 && o3 < A3, "Invalid character"), i3 += o3;
          }
          return i3;
        }
        function c2(t3, e3) {
          t3.words = e3.words, t3.length = e3.length, t3.negative = e3.negative, t3.red = e3.red;
        }
        if (A2.isBN = function(t3) {
          return t3 instanceof A2 || null !== t3 && "object" == typeof t3 && t3.constructor.wordSize === A2.wordSize && Array.isArray(t3.words);
        }, A2.max = function(t3, e3) {
          return t3.cmp(e3) > 0 ? t3 : e3;
        }, A2.min = function(t3, e3) {
          return t3.cmp(e3) < 0 ? t3 : e3;
        }, A2.prototype._init = function(t3, e3, n3) {
          if ("number" == typeof t3)
            return this._initNumber(t3, e3, n3);
          if ("object" == typeof t3)
            return this._initArray(t3, e3, n3);
          "hex" === e3 && (e3 = 16), r4(e3 === (0 | e3) && e3 >= 2 && e3 <= 36);
          var A3 = 0;
          "-" === (t3 = t3.toString().replace(/\s+/g, ""))[0] && (A3++, this.negative = 1), A3 < t3.length && (16 === e3 ? this._parseHex(t3, A3, n3) : (this._parseBase(t3, e3, A3), "le" === n3 && this._initArray(this.toArray(), e3, n3)));
        }, A2.prototype._initNumber = function(t3, e3, n3) {
          t3 < 0 && (this.negative = 1, t3 = -t3), t3 < 67108864 ? (this.words = [67108863 & t3], this.length = 1) : t3 < 4503599627370496 ? (this.words = [67108863 & t3, t3 / 67108864 & 67108863], this.length = 2) : (r4(t3 < 9007199254740992), this.words = [67108863 & t3, t3 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e3, n3);
        }, A2.prototype._initArray = function(t3, e3, n3) {
          if (r4("number" == typeof t3.length), t3.length <= 0)
            return this.words = [0], this.length = 1, this;
          this.length = Math.ceil(t3.length / 3), this.words = new Array(this.length);
          for (var A3 = 0; A3 < this.length; A3++)
            this.words[A3] = 0;
          var i3, o3, s3 = 0;
          if ("be" === n3)
            for (A3 = t3.length - 1, i3 = 0; A3 >= 0; A3 -= 3)
              o3 = t3[A3] | t3[A3 - 1] << 8 | t3[A3 - 2] << 16, this.words[i3] |= o3 << s3 & 67108863, this.words[i3 + 1] = o3 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, i3++);
          else if ("le" === n3)
            for (A3 = 0, i3 = 0; A3 < t3.length; A3 += 3)
              o3 = t3[A3] | t3[A3 + 1] << 8 | t3[A3 + 2] << 16, this.words[i3] |= o3 << s3 & 67108863, this.words[i3 + 1] = o3 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, i3++);
          return this._strip();
        }, A2.prototype._parseHex = function(t3, e3, r5) {
          this.length = Math.ceil((t3.length - e3) / 6), this.words = new Array(this.length);
          for (var n3 = 0; n3 < this.length; n3++)
            this.words[n3] = 0;
          var A3, i3 = 0, o3 = 0;
          if ("be" === r5)
            for (n3 = t3.length - 1; n3 >= e3; n3 -= 2)
              A3 = s2(t3, e3, n3) << i3, this.words[o3] |= 67108863 & A3, i3 >= 18 ? (i3 -= 18, o3 += 1, this.words[o3] |= A3 >>> 26) : i3 += 8;
          else
            for (n3 = (t3.length - e3) % 2 == 0 ? e3 + 1 : e3; n3 < t3.length; n3 += 2)
              A3 = s2(t3, e3, n3) << i3, this.words[o3] |= 67108863 & A3, i3 >= 18 ? (i3 -= 18, o3 += 1, this.words[o3] |= A3 >>> 26) : i3 += 8;
          this._strip();
        }, A2.prototype._parseBase = function(t3, e3, r5) {
          this.words = [0], this.length = 1;
          for (var n3 = 0, A3 = 1; A3 <= 67108863; A3 *= e3)
            n3++;
          n3--, A3 = A3 / e3 | 0;
          for (var i3 = t3.length - r5, o3 = i3 % n3, s3 = Math.min(i3, i3 - o3) + r5, c3 = 0, h3 = r5; h3 < s3; h3 += n3)
            c3 = a2(t3, h3, h3 + n3, e3), this.imuln(A3), this.words[0] + c3 < 67108864 ? this.words[0] += c3 : this._iaddn(c3);
          if (0 !== o3) {
            var g3 = 1;
            for (c3 = a2(t3, h3, t3.length, e3), h3 = 0; h3 < o3; h3++)
              g3 *= e3;
            this.imuln(g3), this.words[0] + c3 < 67108864 ? this.words[0] += c3 : this._iaddn(c3);
          }
          this._strip();
        }, A2.prototype.copy = function(t3) {
          t3.words = new Array(this.length);
          for (var e3 = 0; e3 < this.length; e3++)
            t3.words[e3] = this.words[e3];
          t3.length = this.length, t3.negative = this.negative, t3.red = this.red;
        }, A2.prototype._move = function(t3) {
          c2(t3, this);
        }, A2.prototype.clone = function() {
          var t3 = new A2(null);
          return this.copy(t3), t3;
        }, A2.prototype._expand = function(t3) {
          for (; this.length < t3; )
            this.words[this.length++] = 0;
          return this;
        }, A2.prototype._strip = function() {
          for (; this.length > 1 && 0 === this.words[this.length - 1]; )
            this.length--;
          return this._normSign();
        }, A2.prototype._normSign = function() {
          return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
        }, "undefined" != typeof Symbol && "function" == typeof Symbol.for)
          try {
            A2.prototype[Symbol.for("nodejs.util.inspect.custom")] = h2;
          } catch (t3) {
            A2.prototype.inspect = h2;
          }
        else
          A2.prototype.inspect = h2;
        function h2() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var g2 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], u2 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], l2 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
        function f2(t3, e3, r5) {
          r5.negative = e3.negative ^ t3.negative;
          var n3 = t3.length + e3.length | 0;
          r5.length = n3, n3 = n3 - 1 | 0;
          var A3 = 0 | t3.words[0], i3 = 0 | e3.words[0], o3 = A3 * i3, s3 = 67108863 & o3, a3 = o3 / 67108864 | 0;
          r5.words[0] = s3;
          for (var c3 = 1; c3 < n3; c3++) {
            for (var h3 = a3 >>> 26, g3 = 67108863 & a3, u3 = Math.min(c3, e3.length - 1), l3 = Math.max(0, c3 - t3.length + 1); l3 <= u3; l3++) {
              var f3 = c3 - l3 | 0;
              h3 += (o3 = (A3 = 0 | t3.words[f3]) * (i3 = 0 | e3.words[l3]) + g3) / 67108864 | 0, g3 = 67108863 & o3;
            }
            r5.words[c3] = 0 | g3, a3 = 0 | h3;
          }
          return 0 !== a3 ? r5.words[c3] = 0 | a3 : r5.length--, r5._strip();
        }
        A2.prototype.toString = function(t3, e3) {
          var n3;
          if (e3 = 0 | e3 || 1, 16 === (t3 = t3 || 10) || "hex" === t3) {
            n3 = "";
            for (var A3 = 0, i3 = 0, o3 = 0; o3 < this.length; o3++) {
              var s3 = this.words[o3], a3 = (16777215 & (s3 << A3 | i3)).toString(16);
              i3 = s3 >>> 24 - A3 & 16777215, (A3 += 2) >= 26 && (A3 -= 26, o3--), n3 = 0 !== i3 || o3 !== this.length - 1 ? g2[6 - a3.length] + a3 + n3 : a3 + n3;
            }
            for (0 !== i3 && (n3 = i3.toString(16) + n3); n3.length % e3 != 0; )
              n3 = "0" + n3;
            return 0 !== this.negative && (n3 = "-" + n3), n3;
          }
          if (t3 === (0 | t3) && t3 >= 2 && t3 <= 36) {
            var c3 = u2[t3], h3 = l2[t3];
            n3 = "";
            var f3 = this.clone();
            for (f3.negative = 0; !f3.isZero(); ) {
              var p3 = f3.modrn(h3).toString(t3);
              n3 = (f3 = f3.idivn(h3)).isZero() ? p3 + n3 : g2[c3 - p3.length] + p3 + n3;
            }
            for (this.isZero() && (n3 = "0" + n3); n3.length % e3 != 0; )
              n3 = "0" + n3;
            return 0 !== this.negative && (n3 = "-" + n3), n3;
          }
          r4(false, "Base should be between 2 and 36");
        }, A2.prototype.toNumber = function() {
          var t3 = this.words[0];
          return 2 === this.length ? t3 += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t3 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && r4(false, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t3 : t3;
        }, A2.prototype.toJSON = function() {
          return this.toString(16, 2);
        }, i2 && (A2.prototype.toBuffer = function(t3, e3) {
          return this.toArrayLike(i2, t3, e3);
        }), A2.prototype.toArray = function(t3, e3) {
          return this.toArrayLike(Array, t3, e3);
        }, A2.prototype.toArrayLike = function(t3, e3, n3) {
          this._strip();
          var A3 = this.byteLength(), i3 = n3 || Math.max(1, A3);
          r4(A3 <= i3, "byte array longer than desired length"), r4(i3 > 0, "Requested array length <= 0");
          var o3 = function(t4, e4) {
            return t4.allocUnsafe ? t4.allocUnsafe(e4) : new t4(e4);
          }(t3, i3);
          return this["_toArrayLike" + ("le" === e3 ? "LE" : "BE")](o3, A3), o3;
        }, A2.prototype._toArrayLikeLE = function(t3, e3) {
          for (var r5 = 0, n3 = 0, A3 = 0, i3 = 0; A3 < this.length; A3++) {
            var o3 = this.words[A3] << i3 | n3;
            t3[r5++] = 255 & o3, r5 < t3.length && (t3[r5++] = o3 >> 8 & 255), r5 < t3.length && (t3[r5++] = o3 >> 16 & 255), 6 === i3 ? (r5 < t3.length && (t3[r5++] = o3 >> 24 & 255), n3 = 0, i3 = 0) : (n3 = o3 >>> 24, i3 += 2);
          }
          if (r5 < t3.length)
            for (t3[r5++] = n3; r5 < t3.length; )
              t3[r5++] = 0;
        }, A2.prototype._toArrayLikeBE = function(t3, e3) {
          for (var r5 = t3.length - 1, n3 = 0, A3 = 0, i3 = 0; A3 < this.length; A3++) {
            var o3 = this.words[A3] << i3 | n3;
            t3[r5--] = 255 & o3, r5 >= 0 && (t3[r5--] = o3 >> 8 & 255), r5 >= 0 && (t3[r5--] = o3 >> 16 & 255), 6 === i3 ? (r5 >= 0 && (t3[r5--] = o3 >> 24 & 255), n3 = 0, i3 = 0) : (n3 = o3 >>> 24, i3 += 2);
          }
          if (r5 >= 0)
            for (t3[r5--] = n3; r5 >= 0; )
              t3[r5--] = 0;
        }, Math.clz32 ? A2.prototype._countBits = function(t3) {
          return 32 - Math.clz32(t3);
        } : A2.prototype._countBits = function(t3) {
          var e3 = t3, r5 = 0;
          return e3 >= 4096 && (r5 += 13, e3 >>>= 13), e3 >= 64 && (r5 += 7, e3 >>>= 7), e3 >= 8 && (r5 += 4, e3 >>>= 4), e3 >= 2 && (r5 += 2, e3 >>>= 2), r5 + e3;
        }, A2.prototype._zeroBits = function(t3) {
          if (0 === t3)
            return 26;
          var e3 = t3, r5 = 0;
          return 8191 & e3 || (r5 += 13, e3 >>>= 13), 127 & e3 || (r5 += 7, e3 >>>= 7), 15 & e3 || (r5 += 4, e3 >>>= 4), 3 & e3 || (r5 += 2, e3 >>>= 2), 1 & e3 || r5++, r5;
        }, A2.prototype.bitLength = function() {
          var t3 = this.words[this.length - 1], e3 = this._countBits(t3);
          return 26 * (this.length - 1) + e3;
        }, A2.prototype.zeroBits = function() {
          if (this.isZero())
            return 0;
          for (var t3 = 0, e3 = 0; e3 < this.length; e3++) {
            var r5 = this._zeroBits(this.words[e3]);
            if (t3 += r5, 26 !== r5)
              break;
          }
          return t3;
        }, A2.prototype.byteLength = function() {
          return Math.ceil(this.bitLength() / 8);
        }, A2.prototype.toTwos = function(t3) {
          return 0 !== this.negative ? this.abs().inotn(t3).iaddn(1) : this.clone();
        }, A2.prototype.fromTwos = function(t3) {
          return this.testn(t3 - 1) ? this.notn(t3).iaddn(1).ineg() : this.clone();
        }, A2.prototype.isNeg = function() {
          return 0 !== this.negative;
        }, A2.prototype.neg = function() {
          return this.clone().ineg();
        }, A2.prototype.ineg = function() {
          return this.isZero() || (this.negative ^= 1), this;
        }, A2.prototype.iuor = function(t3) {
          for (; this.length < t3.length; )
            this.words[this.length++] = 0;
          for (var e3 = 0; e3 < t3.length; e3++)
            this.words[e3] = this.words[e3] | t3.words[e3];
          return this._strip();
        }, A2.prototype.ior = function(t3) {
          return r4(!(this.negative | t3.negative)), this.iuor(t3);
        }, A2.prototype.or = function(t3) {
          return this.length > t3.length ? this.clone().ior(t3) : t3.clone().ior(this);
        }, A2.prototype.uor = function(t3) {
          return this.length > t3.length ? this.clone().iuor(t3) : t3.clone().iuor(this);
        }, A2.prototype.iuand = function(t3) {
          var e3;
          e3 = this.length > t3.length ? t3 : this;
          for (var r5 = 0; r5 < e3.length; r5++)
            this.words[r5] = this.words[r5] & t3.words[r5];
          return this.length = e3.length, this._strip();
        }, A2.prototype.iand = function(t3) {
          return r4(!(this.negative | t3.negative)), this.iuand(t3);
        }, A2.prototype.and = function(t3) {
          return this.length > t3.length ? this.clone().iand(t3) : t3.clone().iand(this);
        }, A2.prototype.uand = function(t3) {
          return this.length > t3.length ? this.clone().iuand(t3) : t3.clone().iuand(this);
        }, A2.prototype.iuxor = function(t3) {
          var e3, r5;
          this.length > t3.length ? (e3 = this, r5 = t3) : (e3 = t3, r5 = this);
          for (var n3 = 0; n3 < r5.length; n3++)
            this.words[n3] = e3.words[n3] ^ r5.words[n3];
          if (this !== e3)
            for (; n3 < e3.length; n3++)
              this.words[n3] = e3.words[n3];
          return this.length = e3.length, this._strip();
        }, A2.prototype.ixor = function(t3) {
          return r4(!(this.negative | t3.negative)), this.iuxor(t3);
        }, A2.prototype.xor = function(t3) {
          return this.length > t3.length ? this.clone().ixor(t3) : t3.clone().ixor(this);
        }, A2.prototype.uxor = function(t3) {
          return this.length > t3.length ? this.clone().iuxor(t3) : t3.clone().iuxor(this);
        }, A2.prototype.inotn = function(t3) {
          r4("number" == typeof t3 && t3 >= 0);
          var e3 = 0 | Math.ceil(t3 / 26), n3 = t3 % 26;
          this._expand(e3), n3 > 0 && e3--;
          for (var A3 = 0; A3 < e3; A3++)
            this.words[A3] = 67108863 & ~this.words[A3];
          return n3 > 0 && (this.words[A3] = ~this.words[A3] & 67108863 >> 26 - n3), this._strip();
        }, A2.prototype.notn = function(t3) {
          return this.clone().inotn(t3);
        }, A2.prototype.setn = function(t3, e3) {
          r4("number" == typeof t3 && t3 >= 0);
          var n3 = t3 / 26 | 0, A3 = t3 % 26;
          return this._expand(n3 + 1), this.words[n3] = e3 ? this.words[n3] | 1 << A3 : this.words[n3] & ~(1 << A3), this._strip();
        }, A2.prototype.iadd = function(t3) {
          var e3, r5, n3;
          if (0 !== this.negative && 0 === t3.negative)
            return this.negative = 0, e3 = this.isub(t3), this.negative ^= 1, this._normSign();
          if (0 === this.negative && 0 !== t3.negative)
            return t3.negative = 0, e3 = this.isub(t3), t3.negative = 1, e3._normSign();
          this.length > t3.length ? (r5 = this, n3 = t3) : (r5 = t3, n3 = this);
          for (var A3 = 0, i3 = 0; i3 < n3.length; i3++)
            e3 = (0 | r5.words[i3]) + (0 | n3.words[i3]) + A3, this.words[i3] = 67108863 & e3, A3 = e3 >>> 26;
          for (; 0 !== A3 && i3 < r5.length; i3++)
            e3 = (0 | r5.words[i3]) + A3, this.words[i3] = 67108863 & e3, A3 = e3 >>> 26;
          if (this.length = r5.length, 0 !== A3)
            this.words[this.length] = A3, this.length++;
          else if (r5 !== this)
            for (; i3 < r5.length; i3++)
              this.words[i3] = r5.words[i3];
          return this;
        }, A2.prototype.add = function(t3) {
          var e3;
          return 0 !== t3.negative && 0 === this.negative ? (t3.negative = 0, e3 = this.sub(t3), t3.negative ^= 1, e3) : 0 === t3.negative && 0 !== this.negative ? (this.negative = 0, e3 = t3.sub(this), this.negative = 1, e3) : this.length > t3.length ? this.clone().iadd(t3) : t3.clone().iadd(this);
        }, A2.prototype.isub = function(t3) {
          if (0 !== t3.negative) {
            t3.negative = 0;
            var e3 = this.iadd(t3);
            return t3.negative = 1, e3._normSign();
          }
          if (0 !== this.negative)
            return this.negative = 0, this.iadd(t3), this.negative = 1, this._normSign();
          var r5, n3, A3 = this.cmp(t3);
          if (0 === A3)
            return this.negative = 0, this.length = 1, this.words[0] = 0, this;
          A3 > 0 ? (r5 = this, n3 = t3) : (r5 = t3, n3 = this);
          for (var i3 = 0, o3 = 0; o3 < n3.length; o3++)
            i3 = (e3 = (0 | r5.words[o3]) - (0 | n3.words[o3]) + i3) >> 26, this.words[o3] = 67108863 & e3;
          for (; 0 !== i3 && o3 < r5.length; o3++)
            i3 = (e3 = (0 | r5.words[o3]) + i3) >> 26, this.words[o3] = 67108863 & e3;
          if (0 === i3 && o3 < r5.length && r5 !== this)
            for (; o3 < r5.length; o3++)
              this.words[o3] = r5.words[o3];
          return this.length = Math.max(this.length, o3), r5 !== this && (this.negative = 1), this._strip();
        }, A2.prototype.sub = function(t3) {
          return this.clone().isub(t3);
        };
        var p2 = function(t3, e3, r5) {
          var n3, A3, i3, o3 = t3.words, s3 = e3.words, a3 = r5.words, c3 = 0, h3 = 0 | o3[0], g3 = 8191 & h3, u3 = h3 >>> 13, l3 = 0 | o3[1], f3 = 8191 & l3, p3 = l3 >>> 13, d3 = 0 | o3[2], I3 = 8191 & d3, y3 = d3 >>> 13, C3 = 0 | o3[3], m3 = 8191 & C3, B3 = C3 >>> 13, E3 = 0 | o3[4], w3 = 8191 & E3, v3 = E3 >>> 13, _3 = 0 | o3[5], Q2 = 8191 & _3, b2 = _3 >>> 13, k2 = 0 | o3[6], D2 = 8191 & k2, S2 = k2 >>> 13, N3 = 0 | o3[7], M2 = 8191 & N3, x2 = N3 >>> 13, F2 = 0 | o3[8], P2 = 8191 & F2, T2 = F2 >>> 13, R2 = 0 | o3[9], U2 = 8191 & R2, G2 = R2 >>> 13, H2 = 0 | s3[0], L2 = 8191 & H2, O2 = H2 >>> 13, Y2 = 0 | s3[1], K2 = 8191 & Y2, J2 = Y2 >>> 13, j2 = 0 | s3[2], z2 = 8191 & j2, q2 = j2 >>> 13, X2 = 0 | s3[3], V2 = 8191 & X2, W2 = X2 >>> 13, Z2 = 0 | s3[4], $2 = 8191 & Z2, tt2 = Z2 >>> 13, et2 = 0 | s3[5], rt2 = 8191 & et2, nt2 = et2 >>> 13, At2 = 0 | s3[6], it2 = 8191 & At2, ot2 = At2 >>> 13, st2 = 0 | s3[7], at2 = 8191 & st2, ct2 = st2 >>> 13, ht2 = 0 | s3[8], gt2 = 8191 & ht2, ut2 = ht2 >>> 13, lt2 = 0 | s3[9], ft2 = 8191 & lt2, pt2 = lt2 >>> 13;
          r5.negative = t3.negative ^ e3.negative, r5.length = 19;
          var dt2 = (c3 + (n3 = Math.imul(g3, L2)) | 0) + ((8191 & (A3 = (A3 = Math.imul(g3, O2)) + Math.imul(u3, L2) | 0)) << 13) | 0;
          c3 = ((i3 = Math.imul(u3, O2)) + (A3 >>> 13) | 0) + (dt2 >>> 26) | 0, dt2 &= 67108863, n3 = Math.imul(f3, L2), A3 = (A3 = Math.imul(f3, O2)) + Math.imul(p3, L2) | 0, i3 = Math.imul(p3, O2);
          var It2 = (c3 + (n3 = n3 + Math.imul(g3, K2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, J2) | 0) + Math.imul(u3, K2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, J2) | 0) + (A3 >>> 13) | 0) + (It2 >>> 26) | 0, It2 &= 67108863, n3 = Math.imul(I3, L2), A3 = (A3 = Math.imul(I3, O2)) + Math.imul(y3, L2) | 0, i3 = Math.imul(y3, O2), n3 = n3 + Math.imul(f3, K2) | 0, A3 = (A3 = A3 + Math.imul(f3, J2) | 0) + Math.imul(p3, K2) | 0, i3 = i3 + Math.imul(p3, J2) | 0;
          var yt2 = (c3 + (n3 = n3 + Math.imul(g3, z2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, q2) | 0) + Math.imul(u3, z2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, q2) | 0) + (A3 >>> 13) | 0) + (yt2 >>> 26) | 0, yt2 &= 67108863, n3 = Math.imul(m3, L2), A3 = (A3 = Math.imul(m3, O2)) + Math.imul(B3, L2) | 0, i3 = Math.imul(B3, O2), n3 = n3 + Math.imul(I3, K2) | 0, A3 = (A3 = A3 + Math.imul(I3, J2) | 0) + Math.imul(y3, K2) | 0, i3 = i3 + Math.imul(y3, J2) | 0, n3 = n3 + Math.imul(f3, z2) | 0, A3 = (A3 = A3 + Math.imul(f3, q2) | 0) + Math.imul(p3, z2) | 0, i3 = i3 + Math.imul(p3, q2) | 0;
          var Ct2 = (c3 + (n3 = n3 + Math.imul(g3, V2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, W2) | 0) + Math.imul(u3, V2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, W2) | 0) + (A3 >>> 13) | 0) + (Ct2 >>> 26) | 0, Ct2 &= 67108863, n3 = Math.imul(w3, L2), A3 = (A3 = Math.imul(w3, O2)) + Math.imul(v3, L2) | 0, i3 = Math.imul(v3, O2), n3 = n3 + Math.imul(m3, K2) | 0, A3 = (A3 = A3 + Math.imul(m3, J2) | 0) + Math.imul(B3, K2) | 0, i3 = i3 + Math.imul(B3, J2) | 0, n3 = n3 + Math.imul(I3, z2) | 0, A3 = (A3 = A3 + Math.imul(I3, q2) | 0) + Math.imul(y3, z2) | 0, i3 = i3 + Math.imul(y3, q2) | 0, n3 = n3 + Math.imul(f3, V2) | 0, A3 = (A3 = A3 + Math.imul(f3, W2) | 0) + Math.imul(p3, V2) | 0, i3 = i3 + Math.imul(p3, W2) | 0;
          var mt2 = (c3 + (n3 = n3 + Math.imul(g3, $2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, tt2) | 0) + Math.imul(u3, $2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, tt2) | 0) + (A3 >>> 13) | 0) + (mt2 >>> 26) | 0, mt2 &= 67108863, n3 = Math.imul(Q2, L2), A3 = (A3 = Math.imul(Q2, O2)) + Math.imul(b2, L2) | 0, i3 = Math.imul(b2, O2), n3 = n3 + Math.imul(w3, K2) | 0, A3 = (A3 = A3 + Math.imul(w3, J2) | 0) + Math.imul(v3, K2) | 0, i3 = i3 + Math.imul(v3, J2) | 0, n3 = n3 + Math.imul(m3, z2) | 0, A3 = (A3 = A3 + Math.imul(m3, q2) | 0) + Math.imul(B3, z2) | 0, i3 = i3 + Math.imul(B3, q2) | 0, n3 = n3 + Math.imul(I3, V2) | 0, A3 = (A3 = A3 + Math.imul(I3, W2) | 0) + Math.imul(y3, V2) | 0, i3 = i3 + Math.imul(y3, W2) | 0, n3 = n3 + Math.imul(f3, $2) | 0, A3 = (A3 = A3 + Math.imul(f3, tt2) | 0) + Math.imul(p3, $2) | 0, i3 = i3 + Math.imul(p3, tt2) | 0;
          var Bt2 = (c3 + (n3 = n3 + Math.imul(g3, rt2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, nt2) | 0) + Math.imul(u3, rt2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, nt2) | 0) + (A3 >>> 13) | 0) + (Bt2 >>> 26) | 0, Bt2 &= 67108863, n3 = Math.imul(D2, L2), A3 = (A3 = Math.imul(D2, O2)) + Math.imul(S2, L2) | 0, i3 = Math.imul(S2, O2), n3 = n3 + Math.imul(Q2, K2) | 0, A3 = (A3 = A3 + Math.imul(Q2, J2) | 0) + Math.imul(b2, K2) | 0, i3 = i3 + Math.imul(b2, J2) | 0, n3 = n3 + Math.imul(w3, z2) | 0, A3 = (A3 = A3 + Math.imul(w3, q2) | 0) + Math.imul(v3, z2) | 0, i3 = i3 + Math.imul(v3, q2) | 0, n3 = n3 + Math.imul(m3, V2) | 0, A3 = (A3 = A3 + Math.imul(m3, W2) | 0) + Math.imul(B3, V2) | 0, i3 = i3 + Math.imul(B3, W2) | 0, n3 = n3 + Math.imul(I3, $2) | 0, A3 = (A3 = A3 + Math.imul(I3, tt2) | 0) + Math.imul(y3, $2) | 0, i3 = i3 + Math.imul(y3, tt2) | 0, n3 = n3 + Math.imul(f3, rt2) | 0, A3 = (A3 = A3 + Math.imul(f3, nt2) | 0) + Math.imul(p3, rt2) | 0, i3 = i3 + Math.imul(p3, nt2) | 0;
          var Et2 = (c3 + (n3 = n3 + Math.imul(g3, it2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ot2) | 0) + Math.imul(u3, it2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, ot2) | 0) + (A3 >>> 13) | 0) + (Et2 >>> 26) | 0, Et2 &= 67108863, n3 = Math.imul(M2, L2), A3 = (A3 = Math.imul(M2, O2)) + Math.imul(x2, L2) | 0, i3 = Math.imul(x2, O2), n3 = n3 + Math.imul(D2, K2) | 0, A3 = (A3 = A3 + Math.imul(D2, J2) | 0) + Math.imul(S2, K2) | 0, i3 = i3 + Math.imul(S2, J2) | 0, n3 = n3 + Math.imul(Q2, z2) | 0, A3 = (A3 = A3 + Math.imul(Q2, q2) | 0) + Math.imul(b2, z2) | 0, i3 = i3 + Math.imul(b2, q2) | 0, n3 = n3 + Math.imul(w3, V2) | 0, A3 = (A3 = A3 + Math.imul(w3, W2) | 0) + Math.imul(v3, V2) | 0, i3 = i3 + Math.imul(v3, W2) | 0, n3 = n3 + Math.imul(m3, $2) | 0, A3 = (A3 = A3 + Math.imul(m3, tt2) | 0) + Math.imul(B3, $2) | 0, i3 = i3 + Math.imul(B3, tt2) | 0, n3 = n3 + Math.imul(I3, rt2) | 0, A3 = (A3 = A3 + Math.imul(I3, nt2) | 0) + Math.imul(y3, rt2) | 0, i3 = i3 + Math.imul(y3, nt2) | 0, n3 = n3 + Math.imul(f3, it2) | 0, A3 = (A3 = A3 + Math.imul(f3, ot2) | 0) + Math.imul(p3, it2) | 0, i3 = i3 + Math.imul(p3, ot2) | 0;
          var wt2 = (c3 + (n3 = n3 + Math.imul(g3, at2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ct2) | 0) + Math.imul(u3, at2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, ct2) | 0) + (A3 >>> 13) | 0) + (wt2 >>> 26) | 0, wt2 &= 67108863, n3 = Math.imul(P2, L2), A3 = (A3 = Math.imul(P2, O2)) + Math.imul(T2, L2) | 0, i3 = Math.imul(T2, O2), n3 = n3 + Math.imul(M2, K2) | 0, A3 = (A3 = A3 + Math.imul(M2, J2) | 0) + Math.imul(x2, K2) | 0, i3 = i3 + Math.imul(x2, J2) | 0, n3 = n3 + Math.imul(D2, z2) | 0, A3 = (A3 = A3 + Math.imul(D2, q2) | 0) + Math.imul(S2, z2) | 0, i3 = i3 + Math.imul(S2, q2) | 0, n3 = n3 + Math.imul(Q2, V2) | 0, A3 = (A3 = A3 + Math.imul(Q2, W2) | 0) + Math.imul(b2, V2) | 0, i3 = i3 + Math.imul(b2, W2) | 0, n3 = n3 + Math.imul(w3, $2) | 0, A3 = (A3 = A3 + Math.imul(w3, tt2) | 0) + Math.imul(v3, $2) | 0, i3 = i3 + Math.imul(v3, tt2) | 0, n3 = n3 + Math.imul(m3, rt2) | 0, A3 = (A3 = A3 + Math.imul(m3, nt2) | 0) + Math.imul(B3, rt2) | 0, i3 = i3 + Math.imul(B3, nt2) | 0, n3 = n3 + Math.imul(I3, it2) | 0, A3 = (A3 = A3 + Math.imul(I3, ot2) | 0) + Math.imul(y3, it2) | 0, i3 = i3 + Math.imul(y3, ot2) | 0, n3 = n3 + Math.imul(f3, at2) | 0, A3 = (A3 = A3 + Math.imul(f3, ct2) | 0) + Math.imul(p3, at2) | 0, i3 = i3 + Math.imul(p3, ct2) | 0;
          var vt2 = (c3 + (n3 = n3 + Math.imul(g3, gt2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ut2) | 0) + Math.imul(u3, gt2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, ut2) | 0) + (A3 >>> 13) | 0) + (vt2 >>> 26) | 0, vt2 &= 67108863, n3 = Math.imul(U2, L2), A3 = (A3 = Math.imul(U2, O2)) + Math.imul(G2, L2) | 0, i3 = Math.imul(G2, O2), n3 = n3 + Math.imul(P2, K2) | 0, A3 = (A3 = A3 + Math.imul(P2, J2) | 0) + Math.imul(T2, K2) | 0, i3 = i3 + Math.imul(T2, J2) | 0, n3 = n3 + Math.imul(M2, z2) | 0, A3 = (A3 = A3 + Math.imul(M2, q2) | 0) + Math.imul(x2, z2) | 0, i3 = i3 + Math.imul(x2, q2) | 0, n3 = n3 + Math.imul(D2, V2) | 0, A3 = (A3 = A3 + Math.imul(D2, W2) | 0) + Math.imul(S2, V2) | 0, i3 = i3 + Math.imul(S2, W2) | 0, n3 = n3 + Math.imul(Q2, $2) | 0, A3 = (A3 = A3 + Math.imul(Q2, tt2) | 0) + Math.imul(b2, $2) | 0, i3 = i3 + Math.imul(b2, tt2) | 0, n3 = n3 + Math.imul(w3, rt2) | 0, A3 = (A3 = A3 + Math.imul(w3, nt2) | 0) + Math.imul(v3, rt2) | 0, i3 = i3 + Math.imul(v3, nt2) | 0, n3 = n3 + Math.imul(m3, it2) | 0, A3 = (A3 = A3 + Math.imul(m3, ot2) | 0) + Math.imul(B3, it2) | 0, i3 = i3 + Math.imul(B3, ot2) | 0, n3 = n3 + Math.imul(I3, at2) | 0, A3 = (A3 = A3 + Math.imul(I3, ct2) | 0) + Math.imul(y3, at2) | 0, i3 = i3 + Math.imul(y3, ct2) | 0, n3 = n3 + Math.imul(f3, gt2) | 0, A3 = (A3 = A3 + Math.imul(f3, ut2) | 0) + Math.imul(p3, gt2) | 0, i3 = i3 + Math.imul(p3, ut2) | 0;
          var _t2 = (c3 + (n3 = n3 + Math.imul(g3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, pt2) | 0) + Math.imul(u3, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(u3, pt2) | 0) + (A3 >>> 13) | 0) + (_t2 >>> 26) | 0, _t2 &= 67108863, n3 = Math.imul(U2, K2), A3 = (A3 = Math.imul(U2, J2)) + Math.imul(G2, K2) | 0, i3 = Math.imul(G2, J2), n3 = n3 + Math.imul(P2, z2) | 0, A3 = (A3 = A3 + Math.imul(P2, q2) | 0) + Math.imul(T2, z2) | 0, i3 = i3 + Math.imul(T2, q2) | 0, n3 = n3 + Math.imul(M2, V2) | 0, A3 = (A3 = A3 + Math.imul(M2, W2) | 0) + Math.imul(x2, V2) | 0, i3 = i3 + Math.imul(x2, W2) | 0, n3 = n3 + Math.imul(D2, $2) | 0, A3 = (A3 = A3 + Math.imul(D2, tt2) | 0) + Math.imul(S2, $2) | 0, i3 = i3 + Math.imul(S2, tt2) | 0, n3 = n3 + Math.imul(Q2, rt2) | 0, A3 = (A3 = A3 + Math.imul(Q2, nt2) | 0) + Math.imul(b2, rt2) | 0, i3 = i3 + Math.imul(b2, nt2) | 0, n3 = n3 + Math.imul(w3, it2) | 0, A3 = (A3 = A3 + Math.imul(w3, ot2) | 0) + Math.imul(v3, it2) | 0, i3 = i3 + Math.imul(v3, ot2) | 0, n3 = n3 + Math.imul(m3, at2) | 0, A3 = (A3 = A3 + Math.imul(m3, ct2) | 0) + Math.imul(B3, at2) | 0, i3 = i3 + Math.imul(B3, ct2) | 0, n3 = n3 + Math.imul(I3, gt2) | 0, A3 = (A3 = A3 + Math.imul(I3, ut2) | 0) + Math.imul(y3, gt2) | 0, i3 = i3 + Math.imul(y3, ut2) | 0;
          var Qt2 = (c3 + (n3 = n3 + Math.imul(f3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(f3, pt2) | 0) + Math.imul(p3, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(p3, pt2) | 0) + (A3 >>> 13) | 0) + (Qt2 >>> 26) | 0, Qt2 &= 67108863, n3 = Math.imul(U2, z2), A3 = (A3 = Math.imul(U2, q2)) + Math.imul(G2, z2) | 0, i3 = Math.imul(G2, q2), n3 = n3 + Math.imul(P2, V2) | 0, A3 = (A3 = A3 + Math.imul(P2, W2) | 0) + Math.imul(T2, V2) | 0, i3 = i3 + Math.imul(T2, W2) | 0, n3 = n3 + Math.imul(M2, $2) | 0, A3 = (A3 = A3 + Math.imul(M2, tt2) | 0) + Math.imul(x2, $2) | 0, i3 = i3 + Math.imul(x2, tt2) | 0, n3 = n3 + Math.imul(D2, rt2) | 0, A3 = (A3 = A3 + Math.imul(D2, nt2) | 0) + Math.imul(S2, rt2) | 0, i3 = i3 + Math.imul(S2, nt2) | 0, n3 = n3 + Math.imul(Q2, it2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ot2) | 0) + Math.imul(b2, it2) | 0, i3 = i3 + Math.imul(b2, ot2) | 0, n3 = n3 + Math.imul(w3, at2) | 0, A3 = (A3 = A3 + Math.imul(w3, ct2) | 0) + Math.imul(v3, at2) | 0, i3 = i3 + Math.imul(v3, ct2) | 0, n3 = n3 + Math.imul(m3, gt2) | 0, A3 = (A3 = A3 + Math.imul(m3, ut2) | 0) + Math.imul(B3, gt2) | 0, i3 = i3 + Math.imul(B3, ut2) | 0;
          var bt2 = (c3 + (n3 = n3 + Math.imul(I3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(I3, pt2) | 0) + Math.imul(y3, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(y3, pt2) | 0) + (A3 >>> 13) | 0) + (bt2 >>> 26) | 0, bt2 &= 67108863, n3 = Math.imul(U2, V2), A3 = (A3 = Math.imul(U2, W2)) + Math.imul(G2, V2) | 0, i3 = Math.imul(G2, W2), n3 = n3 + Math.imul(P2, $2) | 0, A3 = (A3 = A3 + Math.imul(P2, tt2) | 0) + Math.imul(T2, $2) | 0, i3 = i3 + Math.imul(T2, tt2) | 0, n3 = n3 + Math.imul(M2, rt2) | 0, A3 = (A3 = A3 + Math.imul(M2, nt2) | 0) + Math.imul(x2, rt2) | 0, i3 = i3 + Math.imul(x2, nt2) | 0, n3 = n3 + Math.imul(D2, it2) | 0, A3 = (A3 = A3 + Math.imul(D2, ot2) | 0) + Math.imul(S2, it2) | 0, i3 = i3 + Math.imul(S2, ot2) | 0, n3 = n3 + Math.imul(Q2, at2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ct2) | 0) + Math.imul(b2, at2) | 0, i3 = i3 + Math.imul(b2, ct2) | 0, n3 = n3 + Math.imul(w3, gt2) | 0, A3 = (A3 = A3 + Math.imul(w3, ut2) | 0) + Math.imul(v3, gt2) | 0, i3 = i3 + Math.imul(v3, ut2) | 0;
          var kt2 = (c3 + (n3 = n3 + Math.imul(m3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(m3, pt2) | 0) + Math.imul(B3, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(B3, pt2) | 0) + (A3 >>> 13) | 0) + (kt2 >>> 26) | 0, kt2 &= 67108863, n3 = Math.imul(U2, $2), A3 = (A3 = Math.imul(U2, tt2)) + Math.imul(G2, $2) | 0, i3 = Math.imul(G2, tt2), n3 = n3 + Math.imul(P2, rt2) | 0, A3 = (A3 = A3 + Math.imul(P2, nt2) | 0) + Math.imul(T2, rt2) | 0, i3 = i3 + Math.imul(T2, nt2) | 0, n3 = n3 + Math.imul(M2, it2) | 0, A3 = (A3 = A3 + Math.imul(M2, ot2) | 0) + Math.imul(x2, it2) | 0, i3 = i3 + Math.imul(x2, ot2) | 0, n3 = n3 + Math.imul(D2, at2) | 0, A3 = (A3 = A3 + Math.imul(D2, ct2) | 0) + Math.imul(S2, at2) | 0, i3 = i3 + Math.imul(S2, ct2) | 0, n3 = n3 + Math.imul(Q2, gt2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ut2) | 0) + Math.imul(b2, gt2) | 0, i3 = i3 + Math.imul(b2, ut2) | 0;
          var Dt2 = (c3 + (n3 = n3 + Math.imul(w3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(w3, pt2) | 0) + Math.imul(v3, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(v3, pt2) | 0) + (A3 >>> 13) | 0) + (Dt2 >>> 26) | 0, Dt2 &= 67108863, n3 = Math.imul(U2, rt2), A3 = (A3 = Math.imul(U2, nt2)) + Math.imul(G2, rt2) | 0, i3 = Math.imul(G2, nt2), n3 = n3 + Math.imul(P2, it2) | 0, A3 = (A3 = A3 + Math.imul(P2, ot2) | 0) + Math.imul(T2, it2) | 0, i3 = i3 + Math.imul(T2, ot2) | 0, n3 = n3 + Math.imul(M2, at2) | 0, A3 = (A3 = A3 + Math.imul(M2, ct2) | 0) + Math.imul(x2, at2) | 0, i3 = i3 + Math.imul(x2, ct2) | 0, n3 = n3 + Math.imul(D2, gt2) | 0, A3 = (A3 = A3 + Math.imul(D2, ut2) | 0) + Math.imul(S2, gt2) | 0, i3 = i3 + Math.imul(S2, ut2) | 0;
          var St2 = (c3 + (n3 = n3 + Math.imul(Q2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(Q2, pt2) | 0) + Math.imul(b2, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(b2, pt2) | 0) + (A3 >>> 13) | 0) + (St2 >>> 26) | 0, St2 &= 67108863, n3 = Math.imul(U2, it2), A3 = (A3 = Math.imul(U2, ot2)) + Math.imul(G2, it2) | 0, i3 = Math.imul(G2, ot2), n3 = n3 + Math.imul(P2, at2) | 0, A3 = (A3 = A3 + Math.imul(P2, ct2) | 0) + Math.imul(T2, at2) | 0, i3 = i3 + Math.imul(T2, ct2) | 0, n3 = n3 + Math.imul(M2, gt2) | 0, A3 = (A3 = A3 + Math.imul(M2, ut2) | 0) + Math.imul(x2, gt2) | 0, i3 = i3 + Math.imul(x2, ut2) | 0;
          var Nt2 = (c3 + (n3 = n3 + Math.imul(D2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(D2, pt2) | 0) + Math.imul(S2, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(S2, pt2) | 0) + (A3 >>> 13) | 0) + (Nt2 >>> 26) | 0, Nt2 &= 67108863, n3 = Math.imul(U2, at2), A3 = (A3 = Math.imul(U2, ct2)) + Math.imul(G2, at2) | 0, i3 = Math.imul(G2, ct2), n3 = n3 + Math.imul(P2, gt2) | 0, A3 = (A3 = A3 + Math.imul(P2, ut2) | 0) + Math.imul(T2, gt2) | 0, i3 = i3 + Math.imul(T2, ut2) | 0;
          var Mt2 = (c3 + (n3 = n3 + Math.imul(M2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(M2, pt2) | 0) + Math.imul(x2, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(x2, pt2) | 0) + (A3 >>> 13) | 0) + (Mt2 >>> 26) | 0, Mt2 &= 67108863, n3 = Math.imul(U2, gt2), A3 = (A3 = Math.imul(U2, ut2)) + Math.imul(G2, gt2) | 0, i3 = Math.imul(G2, ut2);
          var xt2 = (c3 + (n3 = n3 + Math.imul(P2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(P2, pt2) | 0) + Math.imul(T2, ft2) | 0)) << 13) | 0;
          c3 = ((i3 = i3 + Math.imul(T2, pt2) | 0) + (A3 >>> 13) | 0) + (xt2 >>> 26) | 0, xt2 &= 67108863;
          var Ft2 = (c3 + (n3 = Math.imul(U2, ft2)) | 0) + ((8191 & (A3 = (A3 = Math.imul(U2, pt2)) + Math.imul(G2, ft2) | 0)) << 13) | 0;
          return c3 = ((i3 = Math.imul(G2, pt2)) + (A3 >>> 13) | 0) + (Ft2 >>> 26) | 0, Ft2 &= 67108863, a3[0] = dt2, a3[1] = It2, a3[2] = yt2, a3[3] = Ct2, a3[4] = mt2, a3[5] = Bt2, a3[6] = Et2, a3[7] = wt2, a3[8] = vt2, a3[9] = _t2, a3[10] = Qt2, a3[11] = bt2, a3[12] = kt2, a3[13] = Dt2, a3[14] = St2, a3[15] = Nt2, a3[16] = Mt2, a3[17] = xt2, a3[18] = Ft2, 0 !== c3 && (a3[19] = c3, r5.length++), r5;
        };
        function d2(t3, e3, r5) {
          r5.negative = e3.negative ^ t3.negative, r5.length = t3.length + e3.length;
          for (var n3 = 0, A3 = 0, i3 = 0; i3 < r5.length - 1; i3++) {
            var o3 = A3;
            A3 = 0;
            for (var s3 = 67108863 & n3, a3 = Math.min(i3, e3.length - 1), c3 = Math.max(0, i3 - t3.length + 1); c3 <= a3; c3++) {
              var h3 = i3 - c3, g3 = (0 | t3.words[h3]) * (0 | e3.words[c3]), u3 = 67108863 & g3;
              s3 = 67108863 & (u3 = u3 + s3 | 0), A3 += (o3 = (o3 = o3 + (g3 / 67108864 | 0) | 0) + (u3 >>> 26) | 0) >>> 26, o3 &= 67108863;
            }
            r5.words[i3] = s3, n3 = o3, o3 = A3;
          }
          return 0 !== n3 ? r5.words[i3] = n3 : r5.length--, r5._strip();
        }
        function I2(t3, e3, r5) {
          return d2(t3, e3, r5);
        }
        Math.imul || (p2 = f2), A2.prototype.mulTo = function(t3, e3) {
          var r5 = this.length + t3.length;
          return 10 === this.length && 10 === t3.length ? p2(this, t3, e3) : r5 < 63 ? f2(this, t3, e3) : r5 < 1024 ? d2(this, t3, e3) : I2(this, t3, e3);
        }, A2.prototype.mul = function(t3) {
          var e3 = new A2(null);
          return e3.words = new Array(this.length + t3.length), this.mulTo(t3, e3);
        }, A2.prototype.mulf = function(t3) {
          var e3 = new A2(null);
          return e3.words = new Array(this.length + t3.length), I2(this, t3, e3);
        }, A2.prototype.imul = function(t3) {
          return this.clone().mulTo(t3, this);
        }, A2.prototype.imuln = function(t3) {
          var e3 = t3 < 0;
          e3 && (t3 = -t3), r4("number" == typeof t3), r4(t3 < 67108864);
          for (var n3 = 0, A3 = 0; A3 < this.length; A3++) {
            var i3 = (0 | this.words[A3]) * t3, o3 = (67108863 & i3) + (67108863 & n3);
            n3 >>= 26, n3 += i3 / 67108864 | 0, n3 += o3 >>> 26, this.words[A3] = 67108863 & o3;
          }
          return 0 !== n3 && (this.words[A3] = n3, this.length++), e3 ? this.ineg() : this;
        }, A2.prototype.muln = function(t3) {
          return this.clone().imuln(t3);
        }, A2.prototype.sqr = function() {
          return this.mul(this);
        }, A2.prototype.isqr = function() {
          return this.imul(this.clone());
        }, A2.prototype.pow = function(t3) {
          var e3 = function(t4) {
            for (var e4 = new Array(t4.bitLength()), r6 = 0; r6 < e4.length; r6++) {
              var n4 = r6 / 26 | 0, A3 = r6 % 26;
              e4[r6] = t4.words[n4] >>> A3 & 1;
            }
            return e4;
          }(t3);
          if (0 === e3.length)
            return new A2(1);
          for (var r5 = this, n3 = 0; n3 < e3.length && 0 === e3[n3]; n3++, r5 = r5.sqr())
            ;
          if (++n3 < e3.length)
            for (var i3 = r5.sqr(); n3 < e3.length; n3++, i3 = i3.sqr())
              0 !== e3[n3] && (r5 = r5.mul(i3));
          return r5;
        }, A2.prototype.iushln = function(t3) {
          r4("number" == typeof t3 && t3 >= 0);
          var e3, n3 = t3 % 26, A3 = (t3 - n3) / 26, i3 = 67108863 >>> 26 - n3 << 26 - n3;
          if (0 !== n3) {
            var o3 = 0;
            for (e3 = 0; e3 < this.length; e3++) {
              var s3 = this.words[e3] & i3, a3 = (0 | this.words[e3]) - s3 << n3;
              this.words[e3] = a3 | o3, o3 = s3 >>> 26 - n3;
            }
            o3 && (this.words[e3] = o3, this.length++);
          }
          if (0 !== A3) {
            for (e3 = this.length - 1; e3 >= 0; e3--)
              this.words[e3 + A3] = this.words[e3];
            for (e3 = 0; e3 < A3; e3++)
              this.words[e3] = 0;
            this.length += A3;
          }
          return this._strip();
        }, A2.prototype.ishln = function(t3) {
          return r4(0 === this.negative), this.iushln(t3);
        }, A2.prototype.iushrn = function(t3, e3, n3) {
          var A3;
          r4("number" == typeof t3 && t3 >= 0), A3 = e3 ? (e3 - e3 % 26) / 26 : 0;
          var i3 = t3 % 26, o3 = Math.min((t3 - i3) / 26, this.length), s3 = 67108863 ^ 67108863 >>> i3 << i3, a3 = n3;
          if (A3 -= o3, A3 = Math.max(0, A3), a3) {
            for (var c3 = 0; c3 < o3; c3++)
              a3.words[c3] = this.words[c3];
            a3.length = o3;
          }
          if (0 === o3)
            ;
          else if (this.length > o3)
            for (this.length -= o3, c3 = 0; c3 < this.length; c3++)
              this.words[c3] = this.words[c3 + o3];
          else
            this.words[0] = 0, this.length = 1;
          var h3 = 0;
          for (c3 = this.length - 1; c3 >= 0 && (0 !== h3 || c3 >= A3); c3--) {
            var g3 = 0 | this.words[c3];
            this.words[c3] = h3 << 26 - i3 | g3 >>> i3, h3 = g3 & s3;
          }
          return a3 && 0 !== h3 && (a3.words[a3.length++] = h3), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
        }, A2.prototype.ishrn = function(t3, e3, n3) {
          return r4(0 === this.negative), this.iushrn(t3, e3, n3);
        }, A2.prototype.shln = function(t3) {
          return this.clone().ishln(t3);
        }, A2.prototype.ushln = function(t3) {
          return this.clone().iushln(t3);
        }, A2.prototype.shrn = function(t3) {
          return this.clone().ishrn(t3);
        }, A2.prototype.ushrn = function(t3) {
          return this.clone().iushrn(t3);
        }, A2.prototype.testn = function(t3) {
          r4("number" == typeof t3 && t3 >= 0);
          var e3 = t3 % 26, n3 = (t3 - e3) / 26, A3 = 1 << e3;
          return !(this.length <= n3 || !(this.words[n3] & A3));
        }, A2.prototype.imaskn = function(t3) {
          r4("number" == typeof t3 && t3 >= 0);
          var e3 = t3 % 26, n3 = (t3 - e3) / 26;
          if (r4(0 === this.negative, "imaskn works only with positive numbers"), this.length <= n3)
            return this;
          if (0 !== e3 && n3++, this.length = Math.min(n3, this.length), 0 !== e3) {
            var A3 = 67108863 ^ 67108863 >>> e3 << e3;
            this.words[this.length - 1] &= A3;
          }
          return this._strip();
        }, A2.prototype.maskn = function(t3) {
          return this.clone().imaskn(t3);
        }, A2.prototype.iaddn = function(t3) {
          return r4("number" == typeof t3), r4(t3 < 67108864), t3 < 0 ? this.isubn(-t3) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t3 ? (this.words[0] = t3 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t3), this.negative = 1, this) : this._iaddn(t3);
        }, A2.prototype._iaddn = function(t3) {
          this.words[0] += t3;
          for (var e3 = 0; e3 < this.length && this.words[e3] >= 67108864; e3++)
            this.words[e3] -= 67108864, e3 === this.length - 1 ? this.words[e3 + 1] = 1 : this.words[e3 + 1]++;
          return this.length = Math.max(this.length, e3 + 1), this;
        }, A2.prototype.isubn = function(t3) {
          if (r4("number" == typeof t3), r4(t3 < 67108864), t3 < 0)
            return this.iaddn(-t3);
          if (0 !== this.negative)
            return this.negative = 0, this.iaddn(t3), this.negative = 1, this;
          if (this.words[0] -= t3, 1 === this.length && this.words[0] < 0)
            this.words[0] = -this.words[0], this.negative = 1;
          else
            for (var e3 = 0; e3 < this.length && this.words[e3] < 0; e3++)
              this.words[e3] += 67108864, this.words[e3 + 1] -= 1;
          return this._strip();
        }, A2.prototype.addn = function(t3) {
          return this.clone().iaddn(t3);
        }, A2.prototype.subn = function(t3) {
          return this.clone().isubn(t3);
        }, A2.prototype.iabs = function() {
          return this.negative = 0, this;
        }, A2.prototype.abs = function() {
          return this.clone().iabs();
        }, A2.prototype._ishlnsubmul = function(t3, e3, n3) {
          var A3, i3, o3 = t3.length + n3;
          this._expand(o3);
          var s3 = 0;
          for (A3 = 0; A3 < t3.length; A3++) {
            i3 = (0 | this.words[A3 + n3]) + s3;
            var a3 = (0 | t3.words[A3]) * e3;
            s3 = ((i3 -= 67108863 & a3) >> 26) - (a3 / 67108864 | 0), this.words[A3 + n3] = 67108863 & i3;
          }
          for (; A3 < this.length - n3; A3++)
            s3 = (i3 = (0 | this.words[A3 + n3]) + s3) >> 26, this.words[A3 + n3] = 67108863 & i3;
          if (0 === s3)
            return this._strip();
          for (r4(-1 === s3), s3 = 0, A3 = 0; A3 < this.length; A3++)
            s3 = (i3 = -(0 | this.words[A3]) + s3) >> 26, this.words[A3] = 67108863 & i3;
          return this.negative = 1, this._strip();
        }, A2.prototype._wordDiv = function(t3, e3) {
          var r5 = (this.length, t3.length), n3 = this.clone(), i3 = t3, o3 = 0 | i3.words[i3.length - 1];
          0 != (r5 = 26 - this._countBits(o3)) && (i3 = i3.ushln(r5), n3.iushln(r5), o3 = 0 | i3.words[i3.length - 1]);
          var s3, a3 = n3.length - i3.length;
          if ("mod" !== e3) {
            (s3 = new A2(null)).length = a3 + 1, s3.words = new Array(s3.length);
            for (var c3 = 0; c3 < s3.length; c3++)
              s3.words[c3] = 0;
          }
          var h3 = n3.clone()._ishlnsubmul(i3, 1, a3);
          0 === h3.negative && (n3 = h3, s3 && (s3.words[a3] = 1));
          for (var g3 = a3 - 1; g3 >= 0; g3--) {
            var u3 = 67108864 * (0 | n3.words[i3.length + g3]) + (0 | n3.words[i3.length + g3 - 1]);
            for (u3 = Math.min(u3 / o3 | 0, 67108863), n3._ishlnsubmul(i3, u3, g3); 0 !== n3.negative; )
              u3--, n3.negative = 0, n3._ishlnsubmul(i3, 1, g3), n3.isZero() || (n3.negative ^= 1);
            s3 && (s3.words[g3] = u3);
          }
          return s3 && s3._strip(), n3._strip(), "div" !== e3 && 0 !== r5 && n3.iushrn(r5), { div: s3 || null, mod: n3 };
        }, A2.prototype.divmod = function(t3, e3, n3) {
          return r4(!t3.isZero()), this.isZero() ? { div: new A2(0), mod: new A2(0) } : 0 !== this.negative && 0 === t3.negative ? (s3 = this.neg().divmod(t3, e3), "mod" !== e3 && (i3 = s3.div.neg()), "div" !== e3 && (o3 = s3.mod.neg(), n3 && 0 !== o3.negative && o3.iadd(t3)), { div: i3, mod: o3 }) : 0 === this.negative && 0 !== t3.negative ? (s3 = this.divmod(t3.neg(), e3), "mod" !== e3 && (i3 = s3.div.neg()), { div: i3, mod: s3.mod }) : this.negative & t3.negative ? (s3 = this.neg().divmod(t3.neg(), e3), "div" !== e3 && (o3 = s3.mod.neg(), n3 && 0 !== o3.negative && o3.isub(t3)), { div: s3.div, mod: o3 }) : t3.length > this.length || this.cmp(t3) < 0 ? { div: new A2(0), mod: this } : 1 === t3.length ? "div" === e3 ? { div: this.divn(t3.words[0]), mod: null } : "mod" === e3 ? { div: null, mod: new A2(this.modrn(t3.words[0])) } : { div: this.divn(t3.words[0]), mod: new A2(this.modrn(t3.words[0])) } : this._wordDiv(t3, e3);
          var i3, o3, s3;
        }, A2.prototype.div = function(t3) {
          return this.divmod(t3, "div", false).div;
        }, A2.prototype.mod = function(t3) {
          return this.divmod(t3, "mod", false).mod;
        }, A2.prototype.umod = function(t3) {
          return this.divmod(t3, "mod", true).mod;
        }, A2.prototype.divRound = function(t3) {
          var e3 = this.divmod(t3);
          if (e3.mod.isZero())
            return e3.div;
          var r5 = 0 !== e3.div.negative ? e3.mod.isub(t3) : e3.mod, n3 = t3.ushrn(1), A3 = t3.andln(1), i3 = r5.cmp(n3);
          return i3 < 0 || 1 === A3 && 0 === i3 ? e3.div : 0 !== e3.div.negative ? e3.div.isubn(1) : e3.div.iaddn(1);
        }, A2.prototype.modrn = function(t3) {
          var e3 = t3 < 0;
          e3 && (t3 = -t3), r4(t3 <= 67108863);
          for (var n3 = (1 << 26) % t3, A3 = 0, i3 = this.length - 1; i3 >= 0; i3--)
            A3 = (n3 * A3 + (0 | this.words[i3])) % t3;
          return e3 ? -A3 : A3;
        }, A2.prototype.modn = function(t3) {
          return this.modrn(t3);
        }, A2.prototype.idivn = function(t3) {
          var e3 = t3 < 0;
          e3 && (t3 = -t3), r4(t3 <= 67108863);
          for (var n3 = 0, A3 = this.length - 1; A3 >= 0; A3--) {
            var i3 = (0 | this.words[A3]) + 67108864 * n3;
            this.words[A3] = i3 / t3 | 0, n3 = i3 % t3;
          }
          return this._strip(), e3 ? this.ineg() : this;
        }, A2.prototype.divn = function(t3) {
          return this.clone().idivn(t3);
        }, A2.prototype.egcd = function(t3) {
          r4(0 === t3.negative), r4(!t3.isZero());
          var e3 = this, n3 = t3.clone();
          e3 = 0 !== e3.negative ? e3.umod(t3) : e3.clone();
          for (var i3 = new A2(1), o3 = new A2(0), s3 = new A2(0), a3 = new A2(1), c3 = 0; e3.isEven() && n3.isEven(); )
            e3.iushrn(1), n3.iushrn(1), ++c3;
          for (var h3 = n3.clone(), g3 = e3.clone(); !e3.isZero(); ) {
            for (var u3 = 0, l3 = 1; !(e3.words[0] & l3) && u3 < 26; ++u3, l3 <<= 1)
              ;
            if (u3 > 0)
              for (e3.iushrn(u3); u3-- > 0; )
                (i3.isOdd() || o3.isOdd()) && (i3.iadd(h3), o3.isub(g3)), i3.iushrn(1), o3.iushrn(1);
            for (var f3 = 0, p3 = 1; !(n3.words[0] & p3) && f3 < 26; ++f3, p3 <<= 1)
              ;
            if (f3 > 0)
              for (n3.iushrn(f3); f3-- > 0; )
                (s3.isOdd() || a3.isOdd()) && (s3.iadd(h3), a3.isub(g3)), s3.iushrn(1), a3.iushrn(1);
            e3.cmp(n3) >= 0 ? (e3.isub(n3), i3.isub(s3), o3.isub(a3)) : (n3.isub(e3), s3.isub(i3), a3.isub(o3));
          }
          return { a: s3, b: a3, gcd: n3.iushln(c3) };
        }, A2.prototype._invmp = function(t3) {
          r4(0 === t3.negative), r4(!t3.isZero());
          var e3 = this, n3 = t3.clone();
          e3 = 0 !== e3.negative ? e3.umod(t3) : e3.clone();
          for (var i3, o3 = new A2(1), s3 = new A2(0), a3 = n3.clone(); e3.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
            for (var c3 = 0, h3 = 1; !(e3.words[0] & h3) && c3 < 26; ++c3, h3 <<= 1)
              ;
            if (c3 > 0)
              for (e3.iushrn(c3); c3-- > 0; )
                o3.isOdd() && o3.iadd(a3), o3.iushrn(1);
            for (var g3 = 0, u3 = 1; !(n3.words[0] & u3) && g3 < 26; ++g3, u3 <<= 1)
              ;
            if (g3 > 0)
              for (n3.iushrn(g3); g3-- > 0; )
                s3.isOdd() && s3.iadd(a3), s3.iushrn(1);
            e3.cmp(n3) >= 0 ? (e3.isub(n3), o3.isub(s3)) : (n3.isub(e3), s3.isub(o3));
          }
          return (i3 = 0 === e3.cmpn(1) ? o3 : s3).cmpn(0) < 0 && i3.iadd(t3), i3;
        }, A2.prototype.gcd = function(t3) {
          if (this.isZero())
            return t3.abs();
          if (t3.isZero())
            return this.abs();
          var e3 = this.clone(), r5 = t3.clone();
          e3.negative = 0, r5.negative = 0;
          for (var n3 = 0; e3.isEven() && r5.isEven(); n3++)
            e3.iushrn(1), r5.iushrn(1);
          for (; ; ) {
            for (; e3.isEven(); )
              e3.iushrn(1);
            for (; r5.isEven(); )
              r5.iushrn(1);
            var A3 = e3.cmp(r5);
            if (A3 < 0) {
              var i3 = e3;
              e3 = r5, r5 = i3;
            } else if (0 === A3 || 0 === r5.cmpn(1))
              break;
            e3.isub(r5);
          }
          return r5.iushln(n3);
        }, A2.prototype.invm = function(t3) {
          return this.egcd(t3).a.umod(t3);
        }, A2.prototype.isEven = function() {
          return !(1 & this.words[0]);
        }, A2.prototype.isOdd = function() {
          return !(1 & ~this.words[0]);
        }, A2.prototype.andln = function(t3) {
          return this.words[0] & t3;
        }, A2.prototype.bincn = function(t3) {
          r4("number" == typeof t3);
          var e3 = t3 % 26, n3 = (t3 - e3) / 26, A3 = 1 << e3;
          if (this.length <= n3)
            return this._expand(n3 + 1), this.words[n3] |= A3, this;
          for (var i3 = A3, o3 = n3; 0 !== i3 && o3 < this.length; o3++) {
            var s3 = 0 | this.words[o3];
            i3 = (s3 += i3) >>> 26, s3 &= 67108863, this.words[o3] = s3;
          }
          return 0 !== i3 && (this.words[o3] = i3, this.length++), this;
        }, A2.prototype.isZero = function() {
          return 1 === this.length && 0 === this.words[0];
        }, A2.prototype.cmpn = function(t3) {
          var e3, n3 = t3 < 0;
          if (0 !== this.negative && !n3)
            return -1;
          if (0 === this.negative && n3)
            return 1;
          if (this._strip(), this.length > 1)
            e3 = 1;
          else {
            n3 && (t3 = -t3), r4(t3 <= 67108863, "Number is too big");
            var A3 = 0 | this.words[0];
            e3 = A3 === t3 ? 0 : A3 < t3 ? -1 : 1;
          }
          return 0 !== this.negative ? 0 | -e3 : e3;
        }, A2.prototype.cmp = function(t3) {
          if (0 !== this.negative && 0 === t3.negative)
            return -1;
          if (0 === this.negative && 0 !== t3.negative)
            return 1;
          var e3 = this.ucmp(t3);
          return 0 !== this.negative ? 0 | -e3 : e3;
        }, A2.prototype.ucmp = function(t3) {
          if (this.length > t3.length)
            return 1;
          if (this.length < t3.length)
            return -1;
          for (var e3 = 0, r5 = this.length - 1; r5 >= 0; r5--) {
            var n3 = 0 | this.words[r5], A3 = 0 | t3.words[r5];
            if (n3 !== A3) {
              n3 < A3 ? e3 = -1 : n3 > A3 && (e3 = 1);
              break;
            }
          }
          return e3;
        }, A2.prototype.gtn = function(t3) {
          return 1 === this.cmpn(t3);
        }, A2.prototype.gt = function(t3) {
          return 1 === this.cmp(t3);
        }, A2.prototype.gten = function(t3) {
          return this.cmpn(t3) >= 0;
        }, A2.prototype.gte = function(t3) {
          return this.cmp(t3) >= 0;
        }, A2.prototype.ltn = function(t3) {
          return -1 === this.cmpn(t3);
        }, A2.prototype.lt = function(t3) {
          return -1 === this.cmp(t3);
        }, A2.prototype.lten = function(t3) {
          return this.cmpn(t3) <= 0;
        }, A2.prototype.lte = function(t3) {
          return this.cmp(t3) <= 0;
        }, A2.prototype.eqn = function(t3) {
          return 0 === this.cmpn(t3);
        }, A2.prototype.eq = function(t3) {
          return 0 === this.cmp(t3);
        }, A2.red = function(t3) {
          return new v2(t3);
        }, A2.prototype.toRed = function(t3) {
          return r4(!this.red, "Already a number in reduction context"), r4(0 === this.negative, "red works only with positives"), t3.convertTo(this)._forceRed(t3);
        }, A2.prototype.fromRed = function() {
          return r4(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
        }, A2.prototype._forceRed = function(t3) {
          return this.red = t3, this;
        }, A2.prototype.forceRed = function(t3) {
          return r4(!this.red, "Already a number in reduction context"), this._forceRed(t3);
        }, A2.prototype.redAdd = function(t3) {
          return r4(this.red, "redAdd works only with red numbers"), this.red.add(this, t3);
        }, A2.prototype.redIAdd = function(t3) {
          return r4(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t3);
        }, A2.prototype.redSub = function(t3) {
          return r4(this.red, "redSub works only with red numbers"), this.red.sub(this, t3);
        }, A2.prototype.redISub = function(t3) {
          return r4(this.red, "redISub works only with red numbers"), this.red.isub(this, t3);
        }, A2.prototype.redShl = function(t3) {
          return r4(this.red, "redShl works only with red numbers"), this.red.shl(this, t3);
        }, A2.prototype.redMul = function(t3) {
          return r4(this.red, "redMul works only with red numbers"), this.red._verify2(this, t3), this.red.mul(this, t3);
        }, A2.prototype.redIMul = function(t3) {
          return r4(this.red, "redMul works only with red numbers"), this.red._verify2(this, t3), this.red.imul(this, t3);
        }, A2.prototype.redSqr = function() {
          return r4(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
        }, A2.prototype.redISqr = function() {
          return r4(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
        }, A2.prototype.redSqrt = function() {
          return r4(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
        }, A2.prototype.redInvm = function() {
          return r4(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
        }, A2.prototype.redNeg = function() {
          return r4(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
        }, A2.prototype.redPow = function(t3) {
          return r4(this.red && !t3.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t3);
        };
        var y2 = { k256: null, p224: null, p192: null, p25519: null };
        function C2(t3, e3) {
          this.name = t3, this.p = new A2(e3, 16), this.n = this.p.bitLength(), this.k = new A2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
        }
        function m2() {
          C2.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
        }
        function B2() {
          C2.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
        }
        function E2() {
          C2.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
        }
        function w2() {
          C2.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
        }
        function v2(t3) {
          if ("string" == typeof t3) {
            var e3 = A2._prime(t3);
            this.m = e3.p, this.prime = e3;
          } else
            r4(t3.gtn(1), "modulus must be greater than 1"), this.m = t3, this.prime = null;
        }
        function _2(t3) {
          v2.call(this, t3), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new A2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
        }
        C2.prototype._tmp = function() {
          var t3 = new A2(null);
          return t3.words = new Array(Math.ceil(this.n / 13)), t3;
        }, C2.prototype.ireduce = function(t3) {
          var e3, r5 = t3;
          do {
            this.split(r5, this.tmp), e3 = (r5 = (r5 = this.imulK(r5)).iadd(this.tmp)).bitLength();
          } while (e3 > this.n);
          var n3 = e3 < this.n ? -1 : r5.ucmp(this.p);
          return 0 === n3 ? (r5.words[0] = 0, r5.length = 1) : n3 > 0 ? r5.isub(this.p) : void 0 !== r5.strip ? r5.strip() : r5._strip(), r5;
        }, C2.prototype.split = function(t3, e3) {
          t3.iushrn(this.n, 0, e3);
        }, C2.prototype.imulK = function(t3) {
          return t3.imul(this.k);
        }, n2(m2, C2), m2.prototype.split = function(t3, e3) {
          for (var r5 = 4194303, n3 = Math.min(t3.length, 9), A3 = 0; A3 < n3; A3++)
            e3.words[A3] = t3.words[A3];
          if (e3.length = n3, t3.length <= 9)
            return t3.words[0] = 0, void (t3.length = 1);
          var i3 = t3.words[9];
          for (e3.words[e3.length++] = i3 & r5, A3 = 10; A3 < t3.length; A3++) {
            var o3 = 0 | t3.words[A3];
            t3.words[A3 - 10] = (o3 & r5) << 4 | i3 >>> 22, i3 = o3;
          }
          i3 >>>= 22, t3.words[A3 - 10] = i3, 0 === i3 && t3.length > 10 ? t3.length -= 10 : t3.length -= 9;
        }, m2.prototype.imulK = function(t3) {
          t3.words[t3.length] = 0, t3.words[t3.length + 1] = 0, t3.length += 2;
          for (var e3 = 0, r5 = 0; r5 < t3.length; r5++) {
            var n3 = 0 | t3.words[r5];
            e3 += 977 * n3, t3.words[r5] = 67108863 & e3, e3 = 64 * n3 + (e3 / 67108864 | 0);
          }
          return 0 === t3.words[t3.length - 1] && (t3.length--, 0 === t3.words[t3.length - 1] && t3.length--), t3;
        }, n2(B2, C2), n2(E2, C2), n2(w2, C2), w2.prototype.imulK = function(t3) {
          for (var e3 = 0, r5 = 0; r5 < t3.length; r5++) {
            var n3 = 19 * (0 | t3.words[r5]) + e3, A3 = 67108863 & n3;
            n3 >>>= 26, t3.words[r5] = A3, e3 = n3;
          }
          return 0 !== e3 && (t3.words[t3.length++] = e3), t3;
        }, A2._prime = function(t3) {
          if (y2[t3])
            return y2[t3];
          var e3;
          if ("k256" === t3)
            e3 = new m2();
          else if ("p224" === t3)
            e3 = new B2();
          else if ("p192" === t3)
            e3 = new E2();
          else {
            if ("p25519" !== t3)
              throw new Error("Unknown prime " + t3);
            e3 = new w2();
          }
          return y2[t3] = e3, e3;
        }, v2.prototype._verify1 = function(t3) {
          r4(0 === t3.negative, "red works only with positives"), r4(t3.red, "red works only with red numbers");
        }, v2.prototype._verify2 = function(t3, e3) {
          r4(!(t3.negative | e3.negative), "red works only with positives"), r4(t3.red && t3.red === e3.red, "red works only with red numbers");
        }, v2.prototype.imod = function(t3) {
          return this.prime ? this.prime.ireduce(t3)._forceRed(this) : (c2(t3, t3.umod(this.m)._forceRed(this)), t3);
        }, v2.prototype.neg = function(t3) {
          return t3.isZero() ? t3.clone() : this.m.sub(t3)._forceRed(this);
        }, v2.prototype.add = function(t3, e3) {
          this._verify2(t3, e3);
          var r5 = t3.add(e3);
          return r5.cmp(this.m) >= 0 && r5.isub(this.m), r5._forceRed(this);
        }, v2.prototype.iadd = function(t3, e3) {
          this._verify2(t3, e3);
          var r5 = t3.iadd(e3);
          return r5.cmp(this.m) >= 0 && r5.isub(this.m), r5;
        }, v2.prototype.sub = function(t3, e3) {
          this._verify2(t3, e3);
          var r5 = t3.sub(e3);
          return r5.cmpn(0) < 0 && r5.iadd(this.m), r5._forceRed(this);
        }, v2.prototype.isub = function(t3, e3) {
          this._verify2(t3, e3);
          var r5 = t3.isub(e3);
          return r5.cmpn(0) < 0 && r5.iadd(this.m), r5;
        }, v2.prototype.shl = function(t3, e3) {
          return this._verify1(t3), this.imod(t3.ushln(e3));
        }, v2.prototype.imul = function(t3, e3) {
          return this._verify2(t3, e3), this.imod(t3.imul(e3));
        }, v2.prototype.mul = function(t3, e3) {
          return this._verify2(t3, e3), this.imod(t3.mul(e3));
        }, v2.prototype.isqr = function(t3) {
          return this.imul(t3, t3.clone());
        }, v2.prototype.sqr = function(t3) {
          return this.mul(t3, t3);
        }, v2.prototype.sqrt = function(t3) {
          if (t3.isZero())
            return t3.clone();
          var e3 = this.m.andln(3);
          if (r4(e3 % 2 == 1), 3 === e3) {
            var n3 = this.m.add(new A2(1)).iushrn(2);
            return this.pow(t3, n3);
          }
          for (var i3 = this.m.subn(1), o3 = 0; !i3.isZero() && 0 === i3.andln(1); )
            o3++, i3.iushrn(1);
          r4(!i3.isZero());
          var s3 = new A2(1).toRed(this), a3 = s3.redNeg(), c3 = this.m.subn(1).iushrn(1), h3 = this.m.bitLength();
          for (h3 = new A2(2 * h3 * h3).toRed(this); 0 !== this.pow(h3, c3).cmp(a3); )
            h3.redIAdd(a3);
          for (var g3 = this.pow(h3, i3), u3 = this.pow(t3, i3.addn(1).iushrn(1)), l3 = this.pow(t3, i3), f3 = o3; 0 !== l3.cmp(s3); ) {
            for (var p3 = l3, d3 = 0; 0 !== p3.cmp(s3); d3++)
              p3 = p3.redSqr();
            r4(d3 < f3);
            var I3 = this.pow(g3, new A2(1).iushln(f3 - d3 - 1));
            u3 = u3.redMul(I3), g3 = I3.redSqr(), l3 = l3.redMul(g3), f3 = d3;
          }
          return u3;
        }, v2.prototype.invm = function(t3) {
          var e3 = t3._invmp(this.m);
          return 0 !== e3.negative ? (e3.negative = 0, this.imod(e3).redNeg()) : this.imod(e3);
        }, v2.prototype.pow = function(t3, e3) {
          if (e3.isZero())
            return new A2(1).toRed(this);
          if (0 === e3.cmpn(1))
            return t3.clone();
          var r5 = new Array(16);
          r5[0] = new A2(1).toRed(this), r5[1] = t3;
          for (var n3 = 2; n3 < r5.length; n3++)
            r5[n3] = this.mul(r5[n3 - 1], t3);
          var i3 = r5[0], o3 = 0, s3 = 0, a3 = e3.bitLength() % 26;
          for (0 === a3 && (a3 = 26), n3 = e3.length - 1; n3 >= 0; n3--) {
            for (var c3 = e3.words[n3], h3 = a3 - 1; h3 >= 0; h3--) {
              var g3 = c3 >> h3 & 1;
              i3 !== r5[0] && (i3 = this.sqr(i3)), 0 !== g3 || 0 !== o3 ? (o3 <<= 1, o3 |= g3, (4 == ++s3 || 0 === n3 && 0 === h3) && (i3 = this.mul(i3, r5[o3]), s3 = 0, o3 = 0)) : s3 = 0;
            }
            a3 = 26;
          }
          return i3;
        }, v2.prototype.convertTo = function(t3) {
          var e3 = t3.umod(this.m);
          return e3 === t3 ? e3.clone() : e3;
        }, v2.prototype.convertFrom = function(t3) {
          var e3 = t3.clone();
          return e3.red = null, e3;
        }, A2.mont = function(t3) {
          return new _2(t3);
        }, n2(_2, v2), _2.prototype.convertTo = function(t3) {
          return this.imod(t3.ushln(this.shift));
        }, _2.prototype.convertFrom = function(t3) {
          var e3 = this.imod(t3.mul(this.rinv));
          return e3.red = null, e3;
        }, _2.prototype.imul = function(t3, e3) {
          if (t3.isZero() || e3.isZero())
            return t3.words[0] = 0, t3.length = 1, t3;
          var r5 = t3.imul(e3), n3 = r5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), A3 = r5.isub(n3).iushrn(this.shift), i3 = A3;
          return A3.cmp(this.m) >= 0 ? i3 = A3.isub(this.m) : A3.cmpn(0) < 0 && (i3 = A3.iadd(this.m)), i3._forceRed(this);
        }, _2.prototype.mul = function(t3, e3) {
          if (t3.isZero() || e3.isZero())
            return new A2(0)._forceRed(this);
          var r5 = t3.mul(e3), n3 = r5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i3 = r5.isub(n3).iushrn(this.shift), o3 = i3;
          return i3.cmp(this.m) >= 0 ? o3 = i3.isub(this.m) : i3.cmpn(0) < 0 && (o3 = i3.iadd(this.m)), o3._forceRed(this);
        }, _2.prototype.invm = function(t3) {
          return this.imod(t3._invmp(this.m).mul(this.r2))._forceRed(this);
        };
      }(P, t);
      var R = "bignumber/5.7.0";
      var U = e(P.exports).BN;
      var G = new m(R);
      var H = {};
      var L = 9007199254740991;
      var O = false;
      var Y = class t2 {
        constructor(t3, e2) {
          t3 !== H && G.throwError("cannot call constructor directly; use BigNumber.from", m.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = e2, this._isBigNumber = true, Object.freeze(this);
        }
        fromTwos(t3) {
          return J(j(this).fromTwos(t3));
        }
        toTwos(t3) {
          return J(j(this).toTwos(t3));
        }
        abs() {
          return "-" === this._hex[0] ? t2.from(this._hex.substring(1)) : this;
        }
        add(t3) {
          return J(j(this).add(j(t3)));
        }
        sub(t3) {
          return J(j(this).sub(j(t3)));
        }
        div(e2) {
          return t2.from(e2).isZero() && z("division-by-zero", "div"), J(j(this).div(j(e2)));
        }
        mul(t3) {
          return J(j(this).mul(j(t3)));
        }
        mod(t3) {
          const e2 = j(t3);
          return e2.isNeg() && z("division-by-zero", "mod"), J(j(this).umod(e2));
        }
        pow(t3) {
          const e2 = j(t3);
          return e2.isNeg() && z("negative-power", "pow"), J(j(this).pow(e2));
        }
        and(t3) {
          const e2 = j(t3);
          return (this.isNegative() || e2.isNeg()) && z("unbound-bitwise-result", "and"), J(j(this).and(e2));
        }
        or(t3) {
          const e2 = j(t3);
          return (this.isNegative() || e2.isNeg()) && z("unbound-bitwise-result", "or"), J(j(this).or(e2));
        }
        xor(t3) {
          const e2 = j(t3);
          return (this.isNegative() || e2.isNeg()) && z("unbound-bitwise-result", "xor"), J(j(this).xor(e2));
        }
        mask(t3) {
          return (this.isNegative() || t3 < 0) && z("negative-width", "mask"), J(j(this).maskn(t3));
        }
        shl(t3) {
          return (this.isNegative() || t3 < 0) && z("negative-width", "shl"), J(j(this).shln(t3));
        }
        shr(t3) {
          return (this.isNegative() || t3 < 0) && z("negative-width", "shr"), J(j(this).shrn(t3));
        }
        eq(t3) {
          return j(this).eq(j(t3));
        }
        lt(t3) {
          return j(this).lt(j(t3));
        }
        lte(t3) {
          return j(this).lte(j(t3));
        }
        gt(t3) {
          return j(this).gt(j(t3));
        }
        gte(t3) {
          return j(this).gte(j(t3));
        }
        isNegative() {
          return "-" === this._hex[0];
        }
        isZero() {
          return j(this).isZero();
        }
        toNumber() {
          try {
            return j(this).toNumber();
          } catch (t3) {
            z("overflow", "toNumber", this.toString());
          }
          return null;
        }
        toBigInt() {
          try {
            return BigInt(this.toString());
          } catch (t3) {
          }
          return G.throwError("this platform does not support BigInt", m.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
        }
        toString() {
          return arguments.length > 0 && (10 === arguments[0] ? O || (O = true, G.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? G.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", m.errors.UNEXPECTED_ARGUMENT, {}) : G.throwError("BigNumber.toString does not accept parameters", m.errors.UNEXPECTED_ARGUMENT, {})), j(this).toString(10);
        }
        toHexString() {
          return this._hex;
        }
        toJSON(t3) {
          return { type: "BigNumber", hex: this.toHexString() };
        }
        static from(e2) {
          if (e2 instanceof t2)
            return e2;
          if ("string" == typeof e2)
            return e2.match(/^-?0x[0-9a-f]+$/i) ? new t2(H, K(e2)) : e2.match(/^-?[0-9]+$/) ? new t2(H, K(new U(e2))) : G.throwArgumentError("invalid BigNumber string", "value", e2);
          if ("number" == typeof e2)
            return e2 % 1 && z("underflow", "BigNumber.from", e2), (e2 >= L || e2 <= -L) && z("overflow", "BigNumber.from", e2), t2.from(String(e2));
          const r4 = e2;
          if ("bigint" == typeof r4)
            return t2.from(r4.toString());
          if (_(r4))
            return t2.from(S(r4));
          if (r4)
            if (r4.toHexString) {
              const e3 = r4.toHexString();
              if ("string" == typeof e3)
                return t2.from(e3);
            } else {
              let e3 = r4._hex;
              if (null == e3 && "BigNumber" === r4.type && (e3 = r4.hex), "string" == typeof e3 && (k(e3) || "-" === e3[0] && k(e3.substring(1))))
                return t2.from(e3);
            }
          return G.throwArgumentError("invalid BigNumber value", "value", e2);
        }
        static isBigNumber(t3) {
          return !(!t3 || !t3._isBigNumber);
        }
      };
      function K(t2) {
        if ("string" != typeof t2)
          return K(t2.toString(16));
        if ("-" === t2[0])
          return "-" === (t2 = t2.substring(1))[0] && G.throwArgumentError("invalid hex", "value", t2), "0x00" === (t2 = K(t2)) ? t2 : "-" + t2;
        if ("0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), "0x" === t2)
          return "0x00";
        for (t2.length % 2 && (t2 = "0x0" + t2.substring(2)); t2.length > 4 && "0x00" === t2.substring(0, 4); )
          t2 = "0x" + t2.substring(4);
        return t2;
      }
      function J(t2) {
        return Y.from(K(t2));
      }
      function j(t2) {
        const e2 = Y.from(t2).toHexString();
        return "-" === e2[0] ? new U("-" + e2.substring(3), 16) : new U(e2.substring(2), 16);
      }
      function z(t2, e2, r4) {
        const n2 = { fault: t2, operation: e2 };
        return null != r4 && (n2.value = r4), G.throwError(t2, m.errors.NUMERIC_FAULT, n2);
      }
      function q(t2) {
        return new U(t2, 36).toString(16);
      }
      var X = new m(R);
      var V = {};
      var W = Y.from(0);
      var Z = Y.from(-1);
      function $(t2, e2, r4, n2) {
        const A2 = { fault: e2, operation: r4 };
        return void 0 !== n2 && (A2.value = n2), X.throwError(t2, m.errors.NUMERIC_FAULT, A2);
      }
      var tt = "0";
      for (; tt.length < 256; )
        tt += tt;
      function et(t2) {
        if ("number" != typeof t2)
          try {
            t2 = Y.from(t2).toNumber();
          } catch (t3) {
          }
        return "number" == typeof t2 && t2 >= 0 && t2 <= 256 && !(t2 % 1) ? "1" + tt.substring(0, t2) : X.throwArgumentError("invalid decimal size", "decimals", t2);
      }
      function rt(t2, e2) {
        null == e2 && (e2 = 0);
        const r4 = et(e2), n2 = (t2 = Y.from(t2)).lt(W);
        n2 && (t2 = t2.mul(Z));
        let A2 = t2.mod(r4).toString();
        for (; A2.length < r4.length - 1; )
          A2 = "0" + A2;
        A2 = A2.match(/^([0-9]*[1-9]|0)(0*)/)[1];
        const i2 = t2.div(r4).toString();
        return t2 = 1 === r4.length ? i2 : i2 + "." + A2, n2 && (t2 = "-" + t2), t2;
      }
      function nt(t2, e2) {
        null == e2 && (e2 = 0);
        const r4 = et(e2);
        "string" == typeof t2 && t2.match(/^-?[0-9.]+$/) || X.throwArgumentError("invalid decimal value", "value", t2);
        const n2 = "-" === t2.substring(0, 1);
        n2 && (t2 = t2.substring(1)), "." === t2 && X.throwArgumentError("missing value", "value", t2);
        const A2 = t2.split(".");
        A2.length > 2 && X.throwArgumentError("too many decimal points", "value", t2);
        let i2 = A2[0], o2 = A2[1];
        for (i2 || (i2 = "0"), o2 || (o2 = "0"); "0" === o2[o2.length - 1]; )
          o2 = o2.substring(0, o2.length - 1);
        for (o2.length > r4.length - 1 && $("fractional component exceeds decimals", "underflow", "parseFixed"), "" === o2 && (o2 = "0"); o2.length < r4.length - 1; )
          o2 += "0";
        const s2 = Y.from(i2), a2 = Y.from(o2);
        let c2 = s2.mul(r4).add(a2);
        return n2 && (c2 = c2.mul(Z)), c2;
      }
      var At = class _At {
        constructor(t2, e2, r4, n2) {
          t2 !== V && X.throwError("cannot use FixedFormat constructor; use FixedFormat.from", m.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.signed = e2, this.width = r4, this.decimals = n2, this.name = (e2 ? "" : "u") + "fixed" + String(r4) + "x" + String(n2), this._multiplier = et(n2), Object.freeze(this);
        }
        static from(t2) {
          if (t2 instanceof _At)
            return t2;
          "number" == typeof t2 && (t2 = `fixed128x${t2}`);
          let e2 = true, r4 = 128, n2 = 18;
          if ("string" == typeof t2)
            if ("fixed" === t2)
              ;
            else if ("ufixed" === t2)
              e2 = false;
            else {
              const A2 = t2.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
              A2 || X.throwArgumentError("invalid fixed format", "format", t2), e2 = "u" !== A2[1], r4 = parseInt(A2[2]), n2 = parseInt(A2[3]);
            }
          else if (t2) {
            const A2 = (e3, r5, n3) => null == t2[e3] ? n3 : (typeof t2[e3] !== r5 && X.throwArgumentError("invalid fixed format (" + e3 + " not " + r5 + ")", "format." + e3, t2[e3]), t2[e3]);
            e2 = A2("signed", "boolean", e2), r4 = A2("width", "number", r4), n2 = A2("decimals", "number", n2);
          }
          return r4 % 8 && X.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", r4), n2 > 80 && X.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", n2), new _At(V, e2, r4, n2);
        }
      };
      var it = class t2 {
        constructor(t3, e2, r4, n2) {
          t3 !== V && X.throwError("cannot use FixedNumber constructor; use FixedNumber.from", m.errors.UNSUPPORTED_OPERATION, { operation: "new FixedFormat" }), this.format = n2, this._hex = e2, this._value = r4, this._isFixedNumber = true, Object.freeze(this);
        }
        _checkFormat(t3) {
          this.format.name !== t3.format.name && X.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", t3);
        }
        addUnsafe(e2) {
          this._checkFormat(e2);
          const r4 = nt(this._value, this.format.decimals), n2 = nt(e2._value, e2.format.decimals);
          return t2.fromValue(r4.add(n2), this.format.decimals, this.format);
        }
        subUnsafe(e2) {
          this._checkFormat(e2);
          const r4 = nt(this._value, this.format.decimals), n2 = nt(e2._value, e2.format.decimals);
          return t2.fromValue(r4.sub(n2), this.format.decimals, this.format);
        }
        mulUnsafe(e2) {
          this._checkFormat(e2);
          const r4 = nt(this._value, this.format.decimals), n2 = nt(e2._value, e2.format.decimals);
          return t2.fromValue(r4.mul(n2).div(this.format._multiplier), this.format.decimals, this.format);
        }
        divUnsafe(e2) {
          this._checkFormat(e2);
          const r4 = nt(this._value, this.format.decimals), n2 = nt(e2._value, e2.format.decimals);
          return t2.fromValue(r4.mul(this.format._multiplier).div(n2), this.format.decimals, this.format);
        }
        floor() {
          const e2 = this.toString().split(".");
          1 === e2.length && e2.push("0");
          let r4 = t2.from(e2[0], this.format);
          const n2 = !e2[1].match(/^(0*)$/);
          return this.isNegative() && n2 && (r4 = r4.subUnsafe(ot.toFormat(r4.format))), r4;
        }
        ceiling() {
          const e2 = this.toString().split(".");
          1 === e2.length && e2.push("0");
          let r4 = t2.from(e2[0], this.format);
          const n2 = !e2[1].match(/^(0*)$/);
          return !this.isNegative() && n2 && (r4 = r4.addUnsafe(ot.toFormat(r4.format))), r4;
        }
        round(e2) {
          null == e2 && (e2 = 0);
          const r4 = this.toString().split(".");
          if (1 === r4.length && r4.push("0"), (e2 < 0 || e2 > 80 || e2 % 1) && X.throwArgumentError("invalid decimal count", "decimals", e2), r4[1].length <= e2)
            return this;
          const n2 = t2.from("1" + tt.substring(0, e2), this.format), A2 = st.toFormat(this.format);
          return this.mulUnsafe(n2).addUnsafe(A2).floor().divUnsafe(n2);
        }
        isZero() {
          return "0.0" === this._value || "0" === this._value;
        }
        isNegative() {
          return "-" === this._value[0];
        }
        toString() {
          return this._value;
        }
        toHexString(t3) {
          if (null == t3)
            return this._hex;
          t3 % 8 && X.throwArgumentError("invalid byte width", "width", t3);
          return x(Y.from(this._hex).fromTwos(this.format.width).toTwos(t3).toHexString(), t3 / 8);
        }
        toUnsafeFloat() {
          return parseFloat(this.toString());
        }
        toFormat(e2) {
          return t2.fromString(this._value, e2);
        }
        static fromValue(e2, r4, n2) {
          return null != n2 || null == r4 || function(t3) {
            return null != t3 && (Y.isBigNumber(t3) || "number" == typeof t3 && t3 % 1 == 0 || "string" == typeof t3 && !!t3.match(/^-?[0-9]+$/) || k(t3) || "bigint" == typeof t3 || _(t3));
          }(r4) || (n2 = r4, r4 = null), null == r4 && (r4 = 0), null == n2 && (n2 = "fixed"), t2.fromString(rt(e2, r4), At.from(n2));
        }
        static fromString(e2, r4) {
          null == r4 && (r4 = "fixed");
          const n2 = At.from(r4), A2 = nt(e2, n2.decimals);
          !n2.signed && A2.lt(W) && $("unsigned value cannot be negative", "overflow", "value", e2);
          let i2 = null;
          n2.signed ? i2 = A2.toTwos(n2.width).toHexString() : (i2 = A2.toHexString(), i2 = x(i2, n2.width / 8));
          const o2 = rt(A2, n2.decimals);
          return new t2(V, i2, o2, n2);
        }
        static fromBytes(e2, r4) {
          null == r4 && (r4 = "fixed");
          const n2 = At.from(r4);
          if (Q(e2).length > n2.width / 8)
            throw new Error("overflow");
          let A2 = Y.from(e2);
          n2.signed && (A2 = A2.fromTwos(n2.width));
          const i2 = A2.toTwos((n2.signed ? 0 : 1) + n2.width).toHexString(), o2 = rt(A2, n2.decimals);
          return new t2(V, i2, o2, n2);
        }
        static from(e2, r4) {
          if ("string" == typeof e2)
            return t2.fromString(e2, r4);
          if (_(e2))
            return t2.fromBytes(e2, r4);
          try {
            return t2.fromValue(e2, 0, r4);
          } catch (t3) {
            if (t3.code !== m.errors.INVALID_ARGUMENT)
              throw t3;
          }
          return X.throwArgumentError("invalid FixedNumber value", "value", e2);
        }
        static isFixedNumber(t3) {
          return !(!t3 || !t3._isFixedNumber);
        }
      };
      var ot = it.from(1);
      var st = it.from("0.5");
      var at = Object.freeze({ __proto__: null, BigNumber: Y, FixedFormat: At, FixedNumber: it, _base16To36: function(t2) {
        return new U(t2, 16).toString(36);
      }, _base36To16: q, formatFixed: rt, parseFixed: nt });
      var ct = Y.from(-1);
      var ht = Y.from(0);
      var gt = Y.from(1);
      var ut = Y.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var lt = new m("strings/5.7.0");
      var ft;
      var pt;
      function dt(t2, e2, r4, n2, A2) {
        if (t2 === pt.BAD_PREFIX || t2 === pt.UNEXPECTED_CONTINUE) {
          let t3 = 0;
          for (let n3 = e2 + 1; n3 < r4.length && r4[n3] >> 6 == 2; n3++)
            t3++;
          return t3;
        }
        return t2 === pt.OVERRUN ? r4.length - e2 - 1 : 0;
      }
      !function(t2) {
        t2.current = "", t2.NFC = "NFC", t2.NFD = "NFD", t2.NFKC = "NFKC", t2.NFKD = "NFKD";
      }(ft || (ft = {})), function(t2) {
        t2.UNEXPECTED_CONTINUE = "unexpected continuation byte", t2.BAD_PREFIX = "bad codepoint prefix", t2.OVERRUN = "string overrun", t2.MISSING_CONTINUE = "missing continuation byte", t2.OUT_OF_RANGE = "out of UTF-8 range", t2.UTF16_SURROGATE = "UTF-16 surrogate", t2.OVERLONG = "overlong representation";
      }(pt || (pt = {}));
      var It = Object.freeze({ error: function(t2, e2, r4, n2, A2) {
        return lt.throwArgumentError(`invalid codepoint at offset ${e2}; ${t2}`, "bytes", r4);
      }, ignore: dt, replace: function(t2, e2, r4, n2, A2) {
        return t2 === pt.OVERLONG ? (n2.push(A2), 0) : (n2.push(65533), dt(t2, e2, r4));
      } });
      function yt(t2, e2) {
        null == e2 && (e2 = It.error), t2 = Q(t2);
        const r4 = [];
        let n2 = 0;
        for (; n2 < t2.length; ) {
          const A2 = t2[n2++];
          if (!(A2 >> 7)) {
            r4.push(A2);
            continue;
          }
          let i2 = null, o2 = null;
          if (192 == (224 & A2))
            i2 = 1, o2 = 127;
          else if (224 == (240 & A2))
            i2 = 2, o2 = 2047;
          else {
            if (240 != (248 & A2)) {
              n2 += e2(128 == (192 & A2) ? pt.UNEXPECTED_CONTINUE : pt.BAD_PREFIX, n2 - 1, t2, r4);
              continue;
            }
            i2 = 3, o2 = 65535;
          }
          if (n2 - 1 + i2 >= t2.length) {
            n2 += e2(pt.OVERRUN, n2 - 1, t2, r4);
            continue;
          }
          let s2 = A2 & (1 << 8 - i2 - 1) - 1;
          for (let A3 = 0; A3 < i2; A3++) {
            let A4 = t2[n2];
            if (128 != (192 & A4)) {
              n2 += e2(pt.MISSING_CONTINUE, n2, t2, r4), s2 = null;
              break;
            }
            s2 = s2 << 6 | 63 & A4, n2++;
          }
          null !== s2 && (s2 > 1114111 ? n2 += e2(pt.OUT_OF_RANGE, n2 - 1 - i2, t2, r4, s2) : s2 >= 55296 && s2 <= 57343 ? n2 += e2(pt.UTF16_SURROGATE, n2 - 1 - i2, t2, r4, s2) : s2 <= o2 ? n2 += e2(pt.OVERLONG, n2 - 1 - i2, t2, r4, s2) : r4.push(s2));
        }
        return r4;
      }
      function Ct(t2, e2 = ft.current) {
        e2 != ft.current && (lt.checkNormalize(), t2 = t2.normalize(e2));
        let r4 = [];
        for (let e3 = 0; e3 < t2.length; e3++) {
          const n2 = t2.charCodeAt(e3);
          if (n2 < 128)
            r4.push(n2);
          else if (n2 < 2048)
            r4.push(n2 >> 6 | 192), r4.push(63 & n2 | 128);
          else if (55296 == (64512 & n2)) {
            e3++;
            const A2 = t2.charCodeAt(e3);
            if (e3 >= t2.length || 56320 != (64512 & A2))
              throw new Error("invalid utf-8 string");
            const i2 = 65536 + ((1023 & n2) << 10) + (1023 & A2);
            r4.push(i2 >> 18 | 240), r4.push(i2 >> 12 & 63 | 128), r4.push(i2 >> 6 & 63 | 128), r4.push(63 & i2 | 128);
          } else
            r4.push(n2 >> 12 | 224), r4.push(n2 >> 6 & 63 | 128), r4.push(63 & n2 | 128);
        }
        return Q(r4);
      }
      function mt(t2, e2) {
        return yt(t2, e2).map((t3) => t3 <= 65535 ? String.fromCharCode(t3) : (t3 -= 65536, String.fromCharCode(55296 + (t3 >> 10 & 1023), 56320 + (1023 & t3)))).join("");
      }
      function Bt(t2) {
        return F(Ct(t2));
      }
      var Et = "hash/5.7.0";
      function wt(t2, e2) {
        null == e2 && (e2 = 1);
        const r4 = [], n2 = r4.forEach, A2 = function(t3, e3) {
          n2.call(t3, function(t4) {
            e3 > 0 && Array.isArray(t4) ? A2(t4, e3 - 1) : r4.push(t4);
          });
        };
        return A2(t2, e2), r4;
      }
      function vt(t2) {
        return /* @__PURE__ */ function(t3) {
          let e2 = 0;
          return () => t3[e2++];
        }(function(t3) {
          let e2 = 0;
          function r4() {
            return t3[e2++] << 8 | t3[e2++];
          }
          let n2 = r4(), A2 = 1, i2 = [0, 1];
          for (let t4 = 1; t4 < n2; t4++)
            i2.push(A2 += r4());
          let o2 = r4(), s2 = e2;
          e2 += o2;
          let a2 = 0, c2 = 0;
          function h2() {
            return 0 == a2 && (c2 = c2 << 8 | t3[e2++], a2 = 8), c2 >> --a2 & 1;
          }
          const g2 = Math.pow(2, 31), u2 = g2 >>> 1, l2 = u2 >> 1, f2 = g2 - 1;
          let p2 = 0;
          for (let t4 = 0; t4 < 31; t4++)
            p2 = p2 << 1 | h2();
          let d2 = [], I2 = 0, y2 = g2;
          for (; ; ) {
            let t4 = Math.floor(((p2 - I2 + 1) * A2 - 1) / y2), e3 = 0, r5 = n2;
            for (; r5 - e3 > 1; ) {
              let n3 = e3 + r5 >>> 1;
              t4 < i2[n3] ? r5 = n3 : e3 = n3;
            }
            if (0 == e3)
              break;
            d2.push(e3);
            let o3 = I2 + Math.floor(y2 * i2[e3] / A2), s3 = I2 + Math.floor(y2 * i2[e3 + 1] / A2) - 1;
            for (; !((o3 ^ s3) & u2); )
              p2 = p2 << 1 & f2 | h2(), o3 = o3 << 1 & f2, s3 = s3 << 1 & f2 | 1;
            for (; o3 & ~s3 & l2; )
              p2 = p2 & u2 | p2 << 1 & f2 >>> 1 | h2(), o3 = o3 << 1 ^ u2, s3 = (s3 ^ u2) << 1 | u2 | 1;
            I2 = o3, y2 = 1 + s3 - o3;
          }
          let C2 = n2 - 4;
          return d2.map((e3) => {
            switch (e3 - C2) {
              case 3:
                return C2 + 65792 + (t3[s2++] << 16 | t3[s2++] << 8 | t3[s2++]);
              case 2:
                return C2 + 256 + (t3[s2++] << 8 | t3[s2++]);
              case 1:
                return C2 + t3[s2++];
              default:
                return e3 - 1;
            }
          });
        }(t2));
      }
      function _t(t2) {
        return 1 & t2 ? ~t2 >> 1 : t2 >> 1;
      }
      function Qt(t2, e2) {
        let r4 = Array(t2);
        for (let n2 = 0, A2 = -1; n2 < t2; n2++)
          r4[n2] = A2 += 1 + e2();
        return r4;
      }
      function bt(t2, e2) {
        let r4 = Array(t2);
        for (let n2 = 0, A2 = 0; n2 < t2; n2++)
          r4[n2] = A2 += _t(e2());
        return r4;
      }
      function kt(t2, e2) {
        let r4 = Qt(t2(), t2), n2 = t2(), A2 = Qt(n2, t2), i2 = function(t3, e3) {
          let r5 = Array(t3);
          for (let n3 = 0; n3 < t3; n3++)
            r5[n3] = 1 + e3();
          return r5;
        }(n2, t2);
        for (let t3 = 0; t3 < n2; t3++)
          for (let e3 = 0; e3 < i2[t3]; e3++)
            r4.push(A2[t3] + e3);
        return e2 ? r4.map((t3) => e2[t3]) : r4;
      }
      function Dt(t2, e2, r4) {
        let n2 = Array(t2).fill(void 0).map(() => []);
        for (let A2 = 0; A2 < e2; A2++)
          bt(t2, r4).forEach((t3, e3) => n2[e3].push(t3));
        return n2;
      }
      function St(t2, e2) {
        let r4 = 1 + e2(), n2 = e2(), A2 = function(t3) {
          let e3 = [];
          for (; ; ) {
            let r5 = t3();
            if (0 == r5)
              break;
            e3.push(r5);
          }
          return e3;
        }(e2);
        return wt(Dt(A2.length, 1 + t2, e2).map((t3, e3) => {
          const i2 = t3[0], o2 = t3.slice(1);
          return Array(A2[e3]).fill(void 0).map((t4, e4) => {
            let A3 = e4 * n2;
            return [i2 + e4 * r4, o2.map((t5) => t5 + A3)];
          });
        }));
      }
      function Nt(t2, e2) {
        return Dt(1 + e2(), 1 + t2, e2).map((t3) => [t3[0], t3.slice(1)]);
      }
      var Mt = vt(function(t2) {
        t2 = atob(t2);
        const e2 = [];
        for (let r4 = 0; r4 < t2.length; r4++)
          e2.push(t2.charCodeAt(r4));
        return Q(e2);
      }(""));
      var xt = new Set(kt(Mt));
      var Ft = new Set(kt(Mt));
      var Pt = function(t2) {
        let e2 = [];
        for (; ; ) {
          let r4 = t2();
          if (0 == r4)
            break;
          e2.push(St(r4, t2));
        }
        for (; ; ) {
          let r4 = t2() - 1;
          if (r4 < 0)
            break;
          e2.push(Nt(r4, t2));
        }
        return function(t3) {
          const e3 = {};
          for (let r4 = 0; r4 < t3.length; r4++) {
            const n2 = t3[r4];
            e3[n2[0]] = n2[1];
          }
          return e3;
        }(wt(e2));
      }(Mt);
      var Tt = function(t2) {
        let e2 = kt(t2).sort((t3, e3) => t3 - e3);
        return function r4() {
          let n2 = [];
          for (; ; ) {
            let A3 = kt(t2, e2);
            if (0 == A3.length)
              break;
            n2.push({ set: new Set(A3), node: r4() });
          }
          n2.sort((t3, e3) => e3.set.size - t3.set.size);
          let A2 = t2(), i2 = A2 % 3;
          A2 = A2 / 3 | 0;
          let o2 = !!(1 & A2);
          return A2 >>= 1, { branches: n2, valid: i2, fe0f: o2, save: 1 == A2, check: 2 == A2 };
        }();
      }(Mt);
      var Rt = 45;
      var Ut = 95;
      function Gt(t2) {
        return function(t3, e2 = ft.current) {
          return yt(Ct(t3, e2));
        }(t2);
      }
      function Ht(t2) {
        return t2.filter((t3) => 65039 != t3);
      }
      function Lt(t2) {
        for (let e2 of t2.split(".")) {
          let t3 = Gt(e2);
          try {
            for (let e3 = t3.lastIndexOf(Ut) - 1; e3 >= 0; e3--)
              if (t3[e3] !== Ut)
                throw new Error("underscore only allowed at start");
            if (t3.length >= 4 && t3.every((t4) => t4 < 128) && t3[2] === Rt && t3[3] === Rt)
              throw new Error("invalid label extension");
          } catch (t4) {
            throw new Error(`Invalid label "${e2}": ${t4.message}`);
          }
        }
        return t2;
      }
      function Ot(t2) {
        return Lt(function(t3, e2) {
          let r4 = Gt(t3).reverse(), n2 = [];
          for (; r4.length; ) {
            let t4 = Yt(r4);
            if (t4) {
              n2.push(...e2(t4));
              continue;
            }
            let A3 = r4.pop();
            if (xt.has(A3)) {
              n2.push(A3);
              continue;
            }
            if (Ft.has(A3))
              continue;
            let i2 = Pt[A3];
            if (!i2)
              throw new Error(`Disallowed codepoint: 0x${A3.toString(16).toUpperCase()}`);
            n2.push(...i2);
          }
          return Lt((A2 = String.fromCodePoint(...n2), A2.normalize("NFC")));
          var A2;
        }(t2, Ht));
      }
      function Yt(t2, e2) {
        var r4;
        let n2, A2, i2 = Tt, o2 = [], s2 = t2.length;
        for (e2 && (e2.length = 0); s2; ) {
          let a2 = t2[--s2];
          if (i2 = null === (r4 = i2.branches.find((t3) => t3.set.has(a2))) || void 0 === r4 ? void 0 : r4.node, !i2)
            break;
          if (i2.save)
            A2 = a2;
          else if (i2.check && a2 === A2)
            break;
          o2.push(a2), i2.fe0f && (o2.push(65039), s2 > 0 && 65039 == t2[s2 - 1] && s2--), i2.valid && (n2 = o2.slice(), 2 == i2.valid && n2.splice(1, 1), e2 && e2.push(...t2.slice(s2).reverse()), t2.length = s2);
        }
        return n2;
      }
      var Kt = new m(Et);
      var Jt = new Uint8Array(32);
      function jt(t2) {
        if (0 === t2.length)
          throw new Error("invalid ENS name; empty component");
        return t2;
      }
      function zt(t2) {
        const e2 = Ct(Ot(t2)), r4 = [];
        if (0 === t2.length)
          return r4;
        let n2 = 0;
        for (let t3 = 0; t3 < e2.length; t3++) {
          46 === e2[t3] && (r4.push(jt(e2.slice(n2, t3))), n2 = t3 + 1);
        }
        if (n2 >= e2.length)
          throw new Error("invalid ENS name; empty component");
        return r4.push(jt(e2.slice(n2))), r4;
      }
      Jt.fill(0);
      var qt = "Ethereum Signed Message:\n";
      var Xt = new m("rlp/5.7.0");
      function Vt(t2) {
        const e2 = [];
        for (; t2; )
          e2.unshift(255 & t2), t2 >>= 8;
        return e2;
      }
      function Wt(t2) {
        if (Array.isArray(t2)) {
          let e3 = [];
          if (t2.forEach(function(t3) {
            e3 = e3.concat(Wt(t3));
          }), e3.length <= 55)
            return e3.unshift(192 + e3.length), e3;
          const r5 = Vt(e3.length);
          return r5.unshift(247 + r5.length), r5.concat(e3);
        }
        var e2;
        k(e2 = t2) && !(e2.length % 2) || _(e2) || Xt.throwArgumentError("RLP object must be BytesLike", "object", t2);
        const r4 = Array.prototype.slice.call(Q(t2));
        if (1 === r4.length && r4[0] <= 127)
          return r4;
        if (r4.length <= 55)
          return r4.unshift(128 + r4.length), r4;
        const n2 = Vt(r4.length);
        return n2.unshift(183 + n2.length), n2.concat(r4);
      }
      var Zt = new m("address/5.7.0");
      function $t(t2) {
        k(t2, 20) || Zt.throwArgumentError("invalid address", "address", t2);
        const e2 = (t2 = t2.toLowerCase()).substring(2).split(""), r4 = new Uint8Array(40);
        for (let t3 = 0; t3 < 40; t3++)
          r4[t3] = e2[t3].charCodeAt(0);
        const n2 = Q(F(r4));
        for (let t3 = 0; t3 < 40; t3 += 2)
          n2[t3 >> 1] >> 4 >= 8 && (e2[t3] = e2[t3].toUpperCase()), (15 & n2[t3 >> 1]) >= 8 && (e2[t3 + 1] = e2[t3 + 1].toUpperCase());
        return "0x" + e2.join("");
      }
      var te = {};
      for (let t2 = 0; t2 < 10; t2++)
        te[String(t2)] = String(t2);
      for (let t2 = 0; t2 < 26; t2++)
        te[String.fromCharCode(65 + t2)] = String(10 + t2);
      var ee = Math.floor((re = 9007199254740991, Math.log10 ? Math.log10(re) : Math.log(re) / Math.LN10));
      var re;
      function ne(t2) {
        let e2 = null;
        if ("string" != typeof t2 && Zt.throwArgumentError("invalid address", "address", t2), t2.match(/^(0x)?[0-9a-fA-F]{40}$/))
          "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), e2 = $t(t2), t2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e2 !== t2 && Zt.throwArgumentError("bad address checksum", "address", t2);
        else if (t2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
          for (t2.substring(2, 4) !== function(t3) {
            let e3 = (t3 = (t3 = t3.toUpperCase()).substring(4) + t3.substring(0, 2) + "00").split("").map((t4) => te[t4]).join("");
            for (; e3.length >= ee; ) {
              let t4 = e3.substring(0, ee);
              e3 = parseInt(t4, 10) % 97 + e3.substring(t4.length);
            }
            let r4 = String(98 - parseInt(e3, 10) % 97);
            for (; r4.length < 2; )
              r4 = "0" + r4;
            return r4;
          }(t2) && Zt.throwArgumentError("bad icap checksum", "address", t2), e2 = q(t2.substring(4)); e2.length < 40; )
            e2 = "0" + e2;
          e2 = $t("0x" + e2);
        } else
          Zt.throwArgumentError("invalid address", "address", t2);
        return e2;
      }
      function Ae(t2) {
        let e2 = null;
        try {
          e2 = ne(t2.from);
        } catch (e3) {
          Zt.throwArgumentError("missing from address", "transaction", t2);
        }
        const r4 = function(t3) {
          let e3 = Q(t3);
          if (0 === e3.length)
            return e3;
          let r5 = 0;
          for (; r5 < e3.length && 0 === e3[r5]; )
            r5++;
          return r5 && (e3 = e3.slice(r5)), e3;
        }(Q(Y.from(t2.nonce).toHexString()));
        return ne(N2(F(S(Wt([e2, r4]))), 12));
      }
      var ie = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var oe = new m("properties/5.7.0");
      function se(t2, e2, r4) {
        Object.defineProperty(t2, e2, { enumerable: true, value: r4, writable: false });
      }
      function ae(t2, e2) {
        for (let r4 = 0; r4 < 32; r4++) {
          if (t2[e2])
            return t2[e2];
          if (!t2.prototype || "object" != typeof t2.prototype)
            break;
          t2 = Object.getPrototypeOf(t2.prototype).constructor;
        }
        return null;
      }
      function ce(t2) {
        return ie(this, void 0, void 0, function* () {
          const e2 = Object.keys(t2).map((e3) => {
            const r4 = t2[e3];
            return Promise.resolve(r4).then((t3) => ({ key: e3, value: t3 }));
          });
          return (yield Promise.all(e2)).reduce((t3, e3) => (t3[e3.key] = e3.value, t3), {});
        });
      }
      function he(t2) {
        const e2 = {};
        for (const r4 in t2)
          e2[r4] = t2[r4];
        return e2;
      }
      var ge = { bigint: true, boolean: true, function: true, number: true, string: true };
      function ue(t2) {
        if (null == t2 || ge[typeof t2])
          return true;
        if (Array.isArray(t2) || "object" == typeof t2) {
          if (!Object.isFrozen(t2))
            return false;
          const e2 = Object.keys(t2);
          for (let r4 = 0; r4 < e2.length; r4++) {
            let n2 = null;
            try {
              n2 = t2[e2[r4]];
            } catch (t3) {
              continue;
            }
            if (!ue(n2))
              return false;
          }
          return true;
        }
        return oe.throwArgumentError("Cannot deepCopy " + typeof t2, "object", t2);
      }
      function le(t2) {
        if (ue(t2))
          return t2;
        if (Array.isArray(t2))
          return Object.freeze(t2.map((t3) => fe(t3)));
        if ("object" == typeof t2) {
          const e2 = {};
          for (const r4 in t2) {
            const n2 = t2[r4];
            void 0 !== n2 && se(e2, r4, fe(n2));
          }
          return e2;
        }
        return oe.throwArgumentError("Cannot deepCopy " + typeof t2, "object", t2);
      }
      function fe(t2) {
        return le(t2);
      }
      var pe = class {
        constructor(t2) {
          for (const e2 in t2)
            this[e2] = fe(t2[e2]);
        }
      };
      var de = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var Ie = new m(Et);
      var ye = new Uint8Array(32);
      ye.fill(0);
      var Ce = Y.from(-1);
      var me = Y.from(0);
      var Be = Y.from(1);
      var Ee = Y.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var we = x(Be.toHexString(), 32);
      var ve = x(me.toHexString(), 32);
      var _e = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" };
      var Qe = ["name", "version", "chainId", "verifyingContract", "salt"];
      function be(t2) {
        return function(e2) {
          return "string" != typeof e2 && Ie.throwArgumentError(`invalid domain value for ${JSON.stringify(t2)}`, `domain.${t2}`, e2), e2;
        };
      }
      var ke = { name: be("name"), version: be("version"), chainId: function(t2) {
        try {
          return Y.from(t2).toString();
        } catch (t3) {
        }
        return Ie.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", t2);
      }, verifyingContract: function(t2) {
        try {
          return ne(t2).toLowerCase();
        } catch (t3) {
        }
        return Ie.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", t2);
      }, salt: function(t2) {
        try {
          const e2 = Q(t2);
          if (32 !== e2.length)
            throw new Error("bad length");
          return S(e2);
        } catch (t3) {
        }
        return Ie.throwArgumentError('invalid domain value "salt"', "domain.salt", t2);
      } };
      function De(t2) {
        {
          const e2 = t2.match(/^(u?)int(\d*)$/);
          if (e2) {
            const r4 = "" === e2[1], n2 = parseInt(e2[2] || "256");
            (n2 % 8 != 0 || n2 > 256 || e2[2] && e2[2] !== String(n2)) && Ie.throwArgumentError("invalid numeric width", "type", t2);
            const A2 = Ee.mask(r4 ? n2 - 1 : n2), i2 = r4 ? A2.add(Be).mul(Ce) : me;
            return function(e3) {
              const r5 = Y.from(e3);
              return (r5.lt(i2) || r5.gt(A2)) && Ie.throwArgumentError(`value out-of-bounds for ${t2}`, "value", e3), x(r5.toTwos(256).toHexString(), 32);
            };
          }
        }
        {
          const e2 = t2.match(/^bytes(\d+)$/);
          if (e2) {
            const r4 = parseInt(e2[1]);
            return (0 === r4 || r4 > 32 || e2[1] !== String(r4)) && Ie.throwArgumentError("invalid bytes width", "type", t2), function(e3) {
              return Q(e3).length !== r4 && Ie.throwArgumentError(`invalid length for ${t2}`, "value", e3), function(t3) {
                const e4 = Q(t3), r5 = e4.length % 32;
                return r5 ? M([e4, ye.slice(r5)]) : S(e4);
              }(e3);
            };
          }
        }
        switch (t2) {
          case "address":
            return function(t3) {
              return x(ne(t3), 32);
            };
          case "bool":
            return function(t3) {
              return t3 ? we : ve;
            };
          case "bytes":
            return function(t3) {
              return F(t3);
            };
          case "string":
            return function(t3) {
              return Bt(t3);
            };
        }
        return null;
      }
      function Se(t2, e2) {
        return `${t2}(${e2.map(({ name: t3, type: e3 }) => e3 + " " + t3).join(",")})`;
      }
      var Ne = Object.freeze({ __proto__: null, _TypedDataEncoder: class t2 {
        constructor(t3) {
          se(this, "types", Object.freeze(fe(t3))), se(this, "_encoderCache", {}), se(this, "_types", {});
          const e2 = {}, r4 = {}, n2 = {};
          Object.keys(t3).forEach((t4) => {
            e2[t4] = {}, r4[t4] = [], n2[t4] = {};
          });
          for (const n3 in t3) {
            const A3 = {};
            t3[n3].forEach((i2) => {
              A3[i2.name] && Ie.throwArgumentError(`duplicate variable name ${JSON.stringify(i2.name)} in ${JSON.stringify(n3)}`, "types", t3), A3[i2.name] = true;
              const o2 = i2.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
              o2 === n3 && Ie.throwArgumentError(`circular type reference to ${JSON.stringify(o2)}`, "types", t3);
              De(o2) || (r4[o2] || Ie.throwArgumentError(`unknown type ${JSON.stringify(o2)}`, "types", t3), r4[o2].push(n3), e2[n3][o2] = true);
            });
          }
          const A2 = Object.keys(r4).filter((t4) => 0 === r4[t4].length);
          0 === A2.length ? Ie.throwArgumentError("missing primary type", "types", t3) : A2.length > 1 && Ie.throwArgumentError(`ambiguous primary types or unused types: ${A2.map((t4) => JSON.stringify(t4)).join(", ")}`, "types", t3), se(this, "primaryType", A2[0]), function A3(i2, o2) {
            o2[i2] && Ie.throwArgumentError(`circular type reference to ${JSON.stringify(i2)}`, "types", t3), o2[i2] = true, Object.keys(e2[i2]).forEach((t4) => {
              r4[t4] && (A3(t4, o2), Object.keys(o2).forEach((e3) => {
                n2[e3][t4] = true;
              }));
            }), delete o2[i2];
          }(this.primaryType, {});
          for (const e3 in n2) {
            const r5 = Object.keys(n2[e3]);
            r5.sort(), this._types[e3] = Se(e3, t3[e3]) + r5.map((e4) => Se(e4, t3[e4])).join("");
          }
        }
        getEncoder(t3) {
          let e2 = this._encoderCache[t3];
          return e2 || (e2 = this._encoderCache[t3] = this._getEncoder(t3)), e2;
        }
        _getEncoder(t3) {
          {
            const e3 = De(t3);
            if (e3)
              return e3;
          }
          const e2 = t3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (e2) {
            const t4 = e2[1], r5 = this.getEncoder(t4), n2 = parseInt(e2[3]);
            return (e3) => {
              n2 >= 0 && e3.length !== n2 && Ie.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e3);
              let A2 = e3.map(r5);
              return this._types[t4] && (A2 = A2.map(F)), F(M(A2));
            };
          }
          const r4 = this.types[t3];
          if (r4) {
            const e3 = Bt(this._types[t3]);
            return (t4) => {
              const n2 = r4.map(({ name: e4, type: r5 }) => {
                const n3 = this.getEncoder(r5)(t4[e4]);
                return this._types[r5] ? F(n3) : n3;
              });
              return n2.unshift(e3), M(n2);
            };
          }
          return Ie.throwArgumentError(`unknown type: ${t3}`, "type", t3);
        }
        encodeType(t3) {
          const e2 = this._types[t3];
          return e2 || Ie.throwArgumentError(`unknown type: ${JSON.stringify(t3)}`, "name", t3), e2;
        }
        encodeData(t3, e2) {
          return this.getEncoder(t3)(e2);
        }
        hashStruct(t3, e2) {
          return F(this.encodeData(t3, e2));
        }
        encode(t3) {
          return this.encodeData(this.primaryType, t3);
        }
        hash(t3) {
          return this.hashStruct(this.primaryType, t3);
        }
        _visit(t3, e2, r4) {
          if (De(t3))
            return r4(t3, e2);
          const n2 = t3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (n2) {
            const t4 = n2[1], A3 = parseInt(n2[3]);
            return A3 >= 0 && e2.length !== A3 && Ie.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e2), e2.map((e3) => this._visit(t4, e3, r4));
          }
          const A2 = this.types[t3];
          return A2 ? A2.reduce((t4, { name: n3, type: A3 }) => (t4[n3] = this._visit(A3, e2[n3], r4), t4), {}) : Ie.throwArgumentError(`unknown type: ${t3}`, "type", t3);
        }
        visit(t3, e2) {
          return this._visit(this.primaryType, t3, e2);
        }
        static from(e2) {
          return new t2(e2);
        }
        static getPrimaryType(e2) {
          return t2.from(e2).primaryType;
        }
        static hashStruct(e2, r4, n2) {
          return t2.from(r4).hashStruct(e2, n2);
        }
        static hashDomain(e2) {
          const r4 = [];
          for (const t3 in e2) {
            const n2 = _e[t3];
            n2 || Ie.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(t3)}`, "domain", e2), r4.push({ name: t3, type: n2 });
          }
          return r4.sort((t3, e3) => Qe.indexOf(t3.name) - Qe.indexOf(e3.name)), t2.hashStruct("EIP712Domain", { EIP712Domain: r4 }, e2);
        }
        static encode(e2, r4, n2) {
          return M(["0x1901", t2.hashDomain(e2), t2.from(r4).hash(n2)]);
        }
        static hash(e2, r4, n2) {
          return F(t2.encode(e2, r4, n2));
        }
        static resolveNames(e2, r4, n2, A2) {
          return de(this, void 0, void 0, function* () {
            e2 = he(e2);
            const i2 = {};
            e2.verifyingContract && !k(e2.verifyingContract, 20) && (i2[e2.verifyingContract] = "0x");
            const o2 = t2.from(r4);
            o2.visit(n2, (t3, e3) => ("address" !== t3 || k(e3, 20) || (i2[e3] = "0x"), e3));
            for (const t3 in i2)
              i2[t3] = yield A2(t3);
            return e2.verifyingContract && i2[e2.verifyingContract] && (e2.verifyingContract = i2[e2.verifyingContract]), n2 = o2.visit(n2, (t3, e3) => "address" === t3 && i2[e3] ? i2[e3] : e3), { domain: e2, value: n2 };
          });
        }
        static getPayload(e2, r4, n2) {
          t2.hashDomain(e2);
          const A2 = {}, i2 = [];
          Qe.forEach((t3) => {
            const r5 = e2[t3];
            null != r5 && (A2[t3] = ke[t3](r5), i2.push({ name: t3, type: _e[t3] }));
          });
          const o2 = t2.from(r4), s2 = he(r4);
          return s2.EIP712Domain ? Ie.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", r4) : s2.EIP712Domain = i2, o2.encode(n2), { types: s2, domain: A2, primaryType: o2.primaryType, message: o2.visit(n2, (t3, e3) => {
            if (t3.match(/^bytes(\d*)/))
              return S(Q(e3));
            if (t3.match(/^u?int/))
              return Y.from(e3).toString();
            switch (t3) {
              case "address":
                return e3.toLowerCase();
              case "bool":
                return !!e3;
              case "string":
                return "string" != typeof e3 && Ie.throwArgumentError("invalid string", "value", e3), e3;
            }
            return Ie.throwArgumentError("unsupported type", "type", t3);
          }) };
        }
      }, dnsEncode: function(t2) {
        return S(b(zt(t2).map((t3) => {
          if (t3.length > 63)
            throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
          const e2 = new Uint8Array(t3.length + 1);
          return e2.set(t3, 1), e2[0] = e2.length - 1, e2;
        }))) + "00";
      }, ensNormalize: function(t2) {
        return zt(t2).map((t3) => mt(t3)).join(".");
      }, hashMessage: function(t2) {
        return "string" == typeof t2 && (t2 = Ct(t2)), F(b([Ct(qt), Ct(String(t2.length)), t2]));
      }, id: Bt, isValidName: function(t2) {
        try {
          return 0 !== zt(t2).length;
        } catch (t3) {
        }
        return false;
      }, messagePrefix: qt, namehash: function(t2) {
        "string" != typeof t2 && Kt.throwArgumentError("invalid ENS name; not a string", "name", t2);
        let e2 = Jt;
        const r4 = zt(t2);
        for (; r4.length; )
          e2 = F(b([e2, F(r4.pop())]));
        return S(e2);
      } });
      var Me = r3(Ne);
      var xe = r3(at);
      var Fe = "abi/5.7.0";
      var Pe = new m(Fe);
      var Te = {};
      var Re = { calldata: true, memory: true, storage: true };
      var Ue = { calldata: true, memory: true };
      function Ge(t2, e2) {
        if ("bytes" === t2 || "string" === t2) {
          if (Re[e2])
            return true;
        } else if ("address" === t2) {
          if ("payable" === e2)
            return true;
        } else if ((t2.indexOf("[") >= 0 || "tuple" === t2) && Ue[e2])
          return true;
        return (Re[e2] || "payable" === e2) && Pe.throwArgumentError("invalid modifier", "name", e2), false;
      }
      function He(t2, e2) {
        for (let r4 in e2)
          se(t2, r4, e2[r4]);
      }
      var Le = Object.freeze({ sighash: "sighash", minimal: "minimal", full: "full", json: "json" });
      var Oe = new RegExp(/^(.*)\[([0-9]*)\]$/);
      var Ye = class t2 {
        constructor(e2, r4) {
          e2 !== Te && Pe.throwError("use fromString", m.errors.UNSUPPORTED_OPERATION, { operation: "new ParamType()" }), He(this, r4);
          let n2 = this.type.match(Oe);
          He(this, n2 ? { arrayLength: parseInt(n2[2] || "-1"), arrayChildren: t2.fromObject({ type: n2[1], components: this.components }), baseType: "array" } : { arrayLength: null, arrayChildren: null, baseType: null != this.components ? "tuple" : this.type }), this._isParamType = true, Object.freeze(this);
        }
        format(t3) {
          if (t3 || (t3 = Le.sighash), Le[t3] || Pe.throwArgumentError("invalid format type", "format", t3), t3 === Le.json) {
            let e3 = { type: "tuple" === this.baseType ? "tuple" : this.type, name: this.name || void 0 };
            return "boolean" == typeof this.indexed && (e3.indexed = this.indexed), this.components && (e3.components = this.components.map((e4) => JSON.parse(e4.format(t3)))), JSON.stringify(e3);
          }
          let e2 = "";
          return "array" === this.baseType ? (e2 += this.arrayChildren.format(t3), e2 += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]") : "tuple" === this.baseType ? (t3 !== Le.sighash && (e2 += this.type), e2 += "(" + this.components.map((e3) => e3.format(t3)).join(t3 === Le.full ? ", " : ",") + ")") : e2 += this.type, t3 !== Le.sighash && (true === this.indexed && (e2 += " indexed"), t3 === Le.full && this.name && (e2 += " " + this.name)), e2;
        }
        static from(e2, r4) {
          return "string" == typeof e2 ? t2.fromString(e2, r4) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          return t2.isParamType(e2) ? e2 : new t2(Te, { name: e2.name || null, type: tr(e2.type), indexed: null == e2.indexed ? null : !!e2.indexed, components: e2.components ? e2.components.map(t2.fromObject) : null });
        }
        static fromString(e2, r4) {
          return n2 = function(t3, e3) {
            let r5 = t3;
            function n3(e4) {
              Pe.throwArgumentError(`unexpected character at position ${e4}`, "param", t3);
            }
            function A2(t4) {
              let r6 = { type: "", name: "", parent: t4, state: { allowType: true } };
              return e3 && (r6.indexed = false), r6;
            }
            t3 = t3.replace(/\s/g, " ");
            let i2 = { type: "", name: "", state: { allowType: true } }, o2 = i2;
            for (let r6 = 0; r6 < t3.length; r6++) {
              let i3 = t3[r6];
              switch (i3) {
                case "(":
                  o2.state.allowType && "" === o2.type ? o2.type = "tuple" : o2.state.allowParams || n3(r6), o2.state.allowType = false, o2.type = tr(o2.type), o2.components = [A2(o2)], o2 = o2.components[0];
                  break;
                case ")":
                  delete o2.state, "indexed" === o2.name && (e3 || n3(r6), o2.indexed = true, o2.name = ""), Ge(o2.type, o2.name) && (o2.name = ""), o2.type = tr(o2.type);
                  let t4 = o2;
                  o2 = o2.parent, o2 || n3(r6), delete t4.parent, o2.state.allowParams = false, o2.state.allowName = true, o2.state.allowArray = true;
                  break;
                case ",":
                  delete o2.state, "indexed" === o2.name && (e3 || n3(r6), o2.indexed = true, o2.name = ""), Ge(o2.type, o2.name) && (o2.name = ""), o2.type = tr(o2.type);
                  let s2 = A2(o2.parent);
                  o2.parent.components.push(s2), delete o2.parent, o2 = s2;
                  break;
                case " ":
                  o2.state.allowType && "" !== o2.type && (o2.type = tr(o2.type), delete o2.state.allowType, o2.state.allowName = true, o2.state.allowParams = true), o2.state.allowName && "" !== o2.name && ("indexed" === o2.name ? (e3 || n3(r6), o2.indexed && n3(r6), o2.indexed = true, o2.name = "") : Ge(o2.type, o2.name) ? o2.name = "" : o2.state.allowName = false);
                  break;
                case "[":
                  o2.state.allowArray || n3(r6), o2.type += i3, o2.state.allowArray = false, o2.state.allowName = false, o2.state.readArray = true;
                  break;
                case "]":
                  o2.state.readArray || n3(r6), o2.type += i3, o2.state.readArray = false, o2.state.allowArray = true, o2.state.allowName = true;
                  break;
                default:
                  o2.state.allowType ? (o2.type += i3, o2.state.allowParams = true, o2.state.allowArray = true) : o2.state.allowName ? (o2.name += i3, delete o2.state.allowArray) : o2.state.readArray ? o2.type += i3 : n3(r6);
              }
            }
            return o2.parent && Pe.throwArgumentError("unexpected eof", "param", t3), delete i2.state, "indexed" === o2.name ? (e3 || n3(r5.length - 7), o2.indexed && n3(r5.length - 7), o2.indexed = true, o2.name = "") : Ge(o2.type, o2.name) && (o2.name = ""), i2.type = tr(i2.type), i2;
          }(e2, !!r4), t2.fromObject({ name: n2.name, type: n2.type, indexed: n2.indexed, components: n2.components });
          var n2;
        }
        static isParamType(t3) {
          return !(null == t3 || !t3._isParamType);
        }
      };
      function Ke(t2, e2) {
        return function(t3) {
          t3 = t3.trim();
          let e3 = [], r4 = "", n2 = 0;
          for (let A2 = 0; A2 < t3.length; A2++) {
            let i2 = t3[A2];
            "," === i2 && 0 === n2 ? (e3.push(r4), r4 = "") : (r4 += i2, "(" === i2 ? n2++ : ")" === i2 && (n2--, -1 === n2 && Pe.throwArgumentError("unbalanced parenthesis", "value", t3)));
          }
          r4 && e3.push(r4);
          return e3;
        }(t2).map((t3) => Ye.fromString(t3, e2));
      }
      var Je = class t2 {
        constructor(t3, e2) {
          t3 !== Te && Pe.throwError("use a static from method", m.errors.UNSUPPORTED_OPERATION, { operation: "new Fragment()" }), He(this, e2), this._isFragment = true, Object.freeze(this);
        }
        static from(e2) {
          return t2.isFragment(e2) ? e2 : "string" == typeof e2 ? t2.fromString(e2) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          if (t2.isFragment(e2))
            return e2;
          switch (e2.type) {
            case "function":
              return We.fromObject(e2);
            case "event":
              return je.fromObject(e2);
            case "constructor":
              return Ve.fromObject(e2);
            case "error":
              return $e.fromObject(e2);
            case "fallback":
            case "receive":
              return null;
          }
          return Pe.throwArgumentError("invalid fragment object", "value", e2);
        }
        static fromString(t3) {
          return "event" === (t3 = (t3 = (t3 = t3.replace(/\s/g, " ")).replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ")).trim()).split(" ")[0] ? je.fromString(t3.substring(5).trim()) : "function" === t3.split(" ")[0] ? We.fromString(t3.substring(8).trim()) : "constructor" === t3.split("(")[0].trim() ? Ve.fromString(t3.trim()) : "error" === t3.split(" ")[0] ? $e.fromString(t3.substring(5).trim()) : Pe.throwArgumentError("unsupported fragment", "value", t3);
        }
        static isFragment(t3) {
          return !(!t3 || !t3._isFragment);
        }
      };
      var je = class t2 extends Je {
        format(t3) {
          if (t3 || (t3 = Le.sighash), Le[t3] || Pe.throwArgumentError("invalid format type", "format", t3), t3 === Le.json)
            return JSON.stringify({ type: "event", anonymous: this.anonymous, name: this.name, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t3))) });
          let e2 = "";
          return t3 !== Le.sighash && (e2 += "event "), e2 += this.name + "(" + this.inputs.map((e3) => e3.format(t3)).join(t3 === Le.full ? ", " : ",") + ") ", t3 !== Le.sighash && this.anonymous && (e2 += "anonymous "), e2.trim();
        }
        static from(e2) {
          return "string" == typeof e2 ? t2.fromString(e2) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          if (t2.isEventFragment(e2))
            return e2;
          "event" !== e2.type && Pe.throwArgumentError("invalid event object", "value", e2);
          const r4 = { name: rr(e2.name), anonymous: e2.anonymous, inputs: e2.inputs ? e2.inputs.map(Ye.fromObject) : [], type: "event" };
          return new t2(Te, r4);
        }
        static fromString(e2) {
          let r4 = e2.match(nr);
          r4 || Pe.throwArgumentError("invalid event string", "value", e2);
          let n2 = false;
          return r4[3].split(" ").forEach((t3) => {
            switch (t3.trim()) {
              case "anonymous":
                n2 = true;
                break;
              case "":
                break;
              default:
                Pe.warn("unknown modifier: " + t3);
            }
          }), t2.fromObject({ name: r4[1].trim(), anonymous: n2, inputs: Ke(r4[2], true), type: "event" });
        }
        static isEventFragment(t3) {
          return t3 && t3._isFragment && "event" === t3.type;
        }
      };
      function ze(t2, e2) {
        e2.gas = null;
        let r4 = t2.split("@");
        return 1 !== r4.length ? (r4.length > 2 && Pe.throwArgumentError("invalid human-readable ABI signature", "value", t2), r4[1].match(/^[0-9]+$/) || Pe.throwArgumentError("invalid human-readable ABI signature gas", "value", t2), e2.gas = Y.from(r4[1]), r4[0]) : t2;
      }
      function qe(t2, e2) {
        e2.constant = false, e2.payable = false, e2.stateMutability = "nonpayable", t2.split(" ").forEach((t3) => {
          switch (t3.trim()) {
            case "constant":
              e2.constant = true;
              break;
            case "payable":
              e2.payable = true, e2.stateMutability = "payable";
              break;
            case "nonpayable":
              e2.payable = false, e2.stateMutability = "nonpayable";
              break;
            case "pure":
              e2.constant = true, e2.stateMutability = "pure";
              break;
            case "view":
              e2.constant = true, e2.stateMutability = "view";
              break;
            case "external":
            case "public":
            case "":
              break;
            default:
              console.log("unknown modifier: " + t3);
          }
        });
      }
      function Xe(t2) {
        let e2 = { constant: false, payable: true, stateMutability: "payable" };
        return null != t2.stateMutability ? (e2.stateMutability = t2.stateMutability, e2.constant = "view" === e2.stateMutability || "pure" === e2.stateMutability, null != t2.constant && !!t2.constant !== e2.constant && Pe.throwArgumentError("cannot have constant function with mutability " + e2.stateMutability, "value", t2), e2.payable = "payable" === e2.stateMutability, null != t2.payable && !!t2.payable !== e2.payable && Pe.throwArgumentError("cannot have payable function with mutability " + e2.stateMutability, "value", t2)) : null != t2.payable ? (e2.payable = !!t2.payable, null != t2.constant || e2.payable || "constructor" === t2.type || Pe.throwArgumentError("unable to determine stateMutability", "value", t2), e2.constant = !!t2.constant, e2.constant ? e2.stateMutability = "view" : e2.stateMutability = e2.payable ? "payable" : "nonpayable", e2.payable && e2.constant && Pe.throwArgumentError("cannot have constant payable function", "value", t2)) : null != t2.constant ? (e2.constant = !!t2.constant, e2.payable = !e2.constant, e2.stateMutability = e2.constant ? "view" : "payable") : "constructor" !== t2.type && Pe.throwArgumentError("unable to determine stateMutability", "value", t2), e2;
      }
      var Ve = class t2 extends Je {
        format(t3) {
          if (t3 || (t3 = Le.sighash), Le[t3] || Pe.throwArgumentError("invalid format type", "format", t3), t3 === Le.json)
            return JSON.stringify({ type: "constructor", stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0, payable: this.payable, gas: this.gas ? this.gas.toNumber() : void 0, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t3))) });
          t3 === Le.sighash && Pe.throwError("cannot format a constructor for sighash", m.errors.UNSUPPORTED_OPERATION, { operation: "format(sighash)" });
          let e2 = "constructor(" + this.inputs.map((e3) => e3.format(t3)).join(t3 === Le.full ? ", " : ",") + ") ";
          return this.stateMutability && "nonpayable" !== this.stateMutability && (e2 += this.stateMutability + " "), e2.trim();
        }
        static from(e2) {
          return "string" == typeof e2 ? t2.fromString(e2) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          if (t2.isConstructorFragment(e2))
            return e2;
          "constructor" !== e2.type && Pe.throwArgumentError("invalid constructor object", "value", e2);
          let r4 = Xe(e2);
          r4.constant && Pe.throwArgumentError("constructor cannot be constant", "value", e2);
          const n2 = { name: null, type: e2.type, inputs: e2.inputs ? e2.inputs.map(Ye.fromObject) : [], payable: r4.payable, stateMutability: r4.stateMutability, gas: e2.gas ? Y.from(e2.gas) : null };
          return new t2(Te, n2);
        }
        static fromString(e2) {
          let r4 = { type: "constructor" }, n2 = (e2 = ze(e2, r4)).match(nr);
          return n2 && "constructor" === n2[1].trim() || Pe.throwArgumentError("invalid constructor string", "value", e2), r4.inputs = Ke(n2[2].trim(), false), qe(n2[3].trim(), r4), t2.fromObject(r4);
        }
        static isConstructorFragment(t3) {
          return t3 && t3._isFragment && "constructor" === t3.type;
        }
      };
      var We = class t2 extends Ve {
        format(t3) {
          if (t3 || (t3 = Le.sighash), Le[t3] || Pe.throwArgumentError("invalid format type", "format", t3), t3 === Le.json)
            return JSON.stringify({ type: "function", name: this.name, constant: this.constant, stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0, payable: this.payable, gas: this.gas ? this.gas.toNumber() : void 0, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t3))), outputs: this.outputs.map((e3) => JSON.parse(e3.format(t3))) });
          let e2 = "";
          return t3 !== Le.sighash && (e2 += "function "), e2 += this.name + "(" + this.inputs.map((e3) => e3.format(t3)).join(t3 === Le.full ? ", " : ",") + ") ", t3 !== Le.sighash && (this.stateMutability ? "nonpayable" !== this.stateMutability && (e2 += this.stateMutability + " ") : this.constant && (e2 += "view "), this.outputs && this.outputs.length && (e2 += "returns (" + this.outputs.map((e3) => e3.format(t3)).join(", ") + ") "), null != this.gas && (e2 += "@" + this.gas.toString() + " ")), e2.trim();
        }
        static from(e2) {
          return "string" == typeof e2 ? t2.fromString(e2) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          if (t2.isFunctionFragment(e2))
            return e2;
          "function" !== e2.type && Pe.throwArgumentError("invalid function object", "value", e2);
          let r4 = Xe(e2);
          const n2 = { type: e2.type, name: rr(e2.name), constant: r4.constant, inputs: e2.inputs ? e2.inputs.map(Ye.fromObject) : [], outputs: e2.outputs ? e2.outputs.map(Ye.fromObject) : [], payable: r4.payable, stateMutability: r4.stateMutability, gas: e2.gas ? Y.from(e2.gas) : null };
          return new t2(Te, n2);
        }
        static fromString(e2) {
          let r4 = { type: "function" }, n2 = (e2 = ze(e2, r4)).split(" returns ");
          n2.length > 2 && Pe.throwArgumentError("invalid function string", "value", e2);
          let A2 = n2[0].match(nr);
          if (A2 || Pe.throwArgumentError("invalid function signature", "value", e2), r4.name = A2[1].trim(), r4.name && rr(r4.name), r4.inputs = Ke(A2[2], false), qe(A2[3].trim(), r4), n2.length > 1) {
            let t3 = n2[1].match(nr);
            "" == t3[1].trim() && "" == t3[3].trim() || Pe.throwArgumentError("unexpected tokens", "value", e2), r4.outputs = Ke(t3[2], false);
          } else
            r4.outputs = [];
          return t2.fromObject(r4);
        }
        static isFunctionFragment(t3) {
          return t3 && t3._isFragment && "function" === t3.type;
        }
      };
      function Ze(t2) {
        const e2 = t2.format();
        return "Error(string)" !== e2 && "Panic(uint256)" !== e2 || Pe.throwArgumentError(`cannot specify user defined ${e2} error`, "fragment", t2), t2;
      }
      var $e = class t2 extends Je {
        format(t3) {
          if (t3 || (t3 = Le.sighash), Le[t3] || Pe.throwArgumentError("invalid format type", "format", t3), t3 === Le.json)
            return JSON.stringify({ type: "error", name: this.name, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t3))) });
          let e2 = "";
          return t3 !== Le.sighash && (e2 += "error "), e2 += this.name + "(" + this.inputs.map((e3) => e3.format(t3)).join(t3 === Le.full ? ", " : ",") + ") ", e2.trim();
        }
        static from(e2) {
          return "string" == typeof e2 ? t2.fromString(e2) : t2.fromObject(e2);
        }
        static fromObject(e2) {
          if (t2.isErrorFragment(e2))
            return e2;
          "error" !== e2.type && Pe.throwArgumentError("invalid error object", "value", e2);
          const r4 = { type: e2.type, name: rr(e2.name), inputs: e2.inputs ? e2.inputs.map(Ye.fromObject) : [] };
          return Ze(new t2(Te, r4));
        }
        static fromString(e2) {
          let r4 = { type: "error" }, n2 = e2.match(nr);
          return n2 || Pe.throwArgumentError("invalid error signature", "value", e2), r4.name = n2[1].trim(), r4.name && rr(r4.name), r4.inputs = Ke(n2[2], false), Ze(t2.fromObject(r4));
        }
        static isErrorFragment(t3) {
          return t3 && t3._isFragment && "error" === t3.type;
        }
      };
      function tr(t2) {
        return t2.match(/^uint($|[^1-9])/) ? t2 = "uint256" + t2.substring(4) : t2.match(/^int($|[^1-9])/) && (t2 = "int256" + t2.substring(3)), t2;
      }
      var er = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
      function rr(t2) {
        return t2 && t2.match(er) || Pe.throwArgumentError(`invalid identifier "${t2}"`, "value", t2), t2;
      }
      var nr = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
      var Ar = new m(Fe);
      var ir = class {
        constructor(t2, e2, r4, n2) {
          this.name = t2, this.type = e2, this.localName = r4, this.dynamic = n2;
        }
        _throwError(t2, e2) {
          Ar.throwArgumentError(t2, this.localName, e2);
        }
      };
      var or = class {
        constructor(t2) {
          se(this, "wordSize", t2 || 32), this._data = [], this._dataLength = 0, this._padding = new Uint8Array(t2);
        }
        get data() {
          return M(this._data);
        }
        get length() {
          return this._dataLength;
        }
        _writeData(t2) {
          return this._data.push(t2), this._dataLength += t2.length, t2.length;
        }
        appendWriter(t2) {
          return this._writeData(b(t2._data));
        }
        writeBytes(t2) {
          let e2 = Q(t2);
          const r4 = e2.length % this.wordSize;
          return r4 && (e2 = b([e2, this._padding.slice(r4)])), this._writeData(e2);
        }
        _getValue(t2) {
          let e2 = Q(Y.from(t2));
          return e2.length > this.wordSize && Ar.throwError("value out-of-bounds", m.errors.BUFFER_OVERRUN, { length: this.wordSize, offset: e2.length }), e2.length % this.wordSize && (e2 = b([this._padding.slice(e2.length % this.wordSize), e2])), e2;
        }
        writeValue(t2) {
          return this._writeData(this._getValue(t2));
        }
        writeUpdatableValue() {
          const t2 = this._data.length;
          return this._data.push(this._padding), this._dataLength += this.wordSize, (e2) => {
            this._data[t2] = this._getValue(e2);
          };
        }
      };
      var sr = class t2 {
        constructor(t3, e2, r4, n2) {
          se(this, "_data", Q(t3)), se(this, "wordSize", e2 || 32), se(this, "_coerceFunc", r4), se(this, "allowLoose", n2), this._offset = 0;
        }
        get data() {
          return S(this._data);
        }
        get consumed() {
          return this._offset;
        }
        static coerce(t3, e2) {
          let r4 = t3.match("^u?int([0-9]+)$");
          return r4 && parseInt(r4[1]) <= 48 && (e2 = e2.toNumber()), e2;
        }
        coerce(e2, r4) {
          return this._coerceFunc ? this._coerceFunc(e2, r4) : t2.coerce(e2, r4);
        }
        _peekBytes(t3, e2, r4) {
          let n2 = Math.ceil(e2 / this.wordSize) * this.wordSize;
          return this._offset + n2 > this._data.length && (this.allowLoose && r4 && this._offset + e2 <= this._data.length ? n2 = e2 : Ar.throwError("data out-of-bounds", m.errors.BUFFER_OVERRUN, { length: this._data.length, offset: this._offset + n2 })), this._data.slice(this._offset, this._offset + n2);
        }
        subReader(e2) {
          return new t2(this._data.slice(this._offset + e2), this.wordSize, this._coerceFunc, this.allowLoose);
        }
        readBytes(t3, e2) {
          let r4 = this._peekBytes(0, t3, !!e2);
          return this._offset += r4.length, r4.slice(0, t3);
        }
        readValue() {
          return Y.from(this.readBytes(this.wordSize));
        }
      };
      var ar = class extends ir {
        constructor(t2) {
          super("address", "address", t2, false);
        }
        defaultValue() {
          return "0x0000000000000000000000000000000000000000";
        }
        encode(t2, e2) {
          try {
            e2 = ne(e2);
          } catch (t3) {
            this._throwError(t3.message, e2);
          }
          return t2.writeValue(e2);
        }
        decode(t2) {
          return ne(x(t2.readValue().toHexString(), 20));
        }
      };
      var cr = class extends ir {
        constructor(t2) {
          super(t2.name, t2.type, void 0, t2.dynamic), this.coder = t2;
        }
        defaultValue() {
          return this.coder.defaultValue();
        }
        encode(t2, e2) {
          return this.coder.encode(t2, e2);
        }
        decode(t2) {
          return this.coder.decode(t2);
        }
      };
      var hr = new m(Fe);
      function gr(t2, e2, r4) {
        let n2 = null;
        if (Array.isArray(r4))
          n2 = r4;
        else if (r4 && "object" == typeof r4) {
          let t3 = {};
          n2 = e2.map((e3) => {
            const n3 = e3.localName;
            return n3 || hr.throwError("cannot encode object for signature with missing names", m.errors.INVALID_ARGUMENT, { argument: "values", coder: e3, value: r4 }), t3[n3] && hr.throwError("cannot encode object for signature with duplicate names", m.errors.INVALID_ARGUMENT, { argument: "values", coder: e3, value: r4 }), t3[n3] = true, r4[n3];
          });
        } else
          hr.throwArgumentError("invalid tuple value", "tuple", r4);
        e2.length !== n2.length && hr.throwArgumentError("types/value length mismatch", "tuple", r4);
        let A2 = new or(t2.wordSize), i2 = new or(t2.wordSize), o2 = [];
        e2.forEach((t3, e3) => {
          let r5 = n2[e3];
          if (t3.dynamic) {
            let e4 = i2.length;
            t3.encode(i2, r5);
            let n3 = A2.writeUpdatableValue();
            o2.push((t4) => {
              n3(t4 + e4);
            });
          } else
            t3.encode(A2, r5);
        }), o2.forEach((t3) => {
          t3(A2.length);
        });
        let s2 = t2.appendWriter(A2);
        return s2 += t2.appendWriter(i2), s2;
      }
      function ur(t2, e2) {
        let r4 = [], n2 = t2.subReader(0);
        e2.forEach((e3) => {
          let A3 = null;
          if (e3.dynamic) {
            let r5 = t2.readValue(), i2 = n2.subReader(r5.toNumber());
            try {
              A3 = e3.decode(i2);
            } catch (t3) {
              if (t3.code === m.errors.BUFFER_OVERRUN)
                throw t3;
              A3 = t3, A3.baseType = e3.name, A3.name = e3.localName, A3.type = e3.type;
            }
          } else
            try {
              A3 = e3.decode(t2);
            } catch (t3) {
              if (t3.code === m.errors.BUFFER_OVERRUN)
                throw t3;
              A3 = t3, A3.baseType = e3.name, A3.name = e3.localName, A3.type = e3.type;
            }
          null != A3 && r4.push(A3);
        });
        const A2 = e2.reduce((t3, e3) => {
          const r5 = e3.localName;
          return r5 && (t3[r5] || (t3[r5] = 0), t3[r5]++), t3;
        }, {});
        e2.forEach((t3, e3) => {
          let n3 = t3.localName;
          if (!n3 || 1 !== A2[n3])
            return;
          if ("length" === n3 && (n3 = "_length"), null != r4[n3])
            return;
          const i2 = r4[e3];
          i2 instanceof Error ? Object.defineProperty(r4, n3, { enumerable: true, get: () => {
            throw i2;
          } }) : r4[n3] = i2;
        });
        for (let t3 = 0; t3 < r4.length; t3++) {
          const e3 = r4[t3];
          e3 instanceof Error && Object.defineProperty(r4, t3, { enumerable: true, get: () => {
            throw e3;
          } });
        }
        return Object.freeze(r4);
      }
      var lr = class extends ir {
        constructor(t2, e2, r4) {
          super("array", t2.type + "[" + (e2 >= 0 ? e2 : "") + "]", r4, -1 === e2 || t2.dynamic), this.coder = t2, this.length = e2;
        }
        defaultValue() {
          const t2 = this.coder.defaultValue(), e2 = [];
          for (let r4 = 0; r4 < this.length; r4++)
            e2.push(t2);
          return e2;
        }
        encode(t2, e2) {
          Array.isArray(e2) || this._throwError("expected array value", e2);
          let r4 = this.length;
          -1 === r4 && (r4 = e2.length, t2.writeValue(e2.length)), hr.checkArgumentCount(e2.length, r4, "coder array" + (this.localName ? " " + this.localName : ""));
          let n2 = [];
          for (let t3 = 0; t3 < e2.length; t3++)
            n2.push(this.coder);
          return gr(t2, n2, e2);
        }
        decode(t2) {
          let e2 = this.length;
          -1 === e2 && (e2 = t2.readValue().toNumber(), 32 * e2 > t2._data.length && hr.throwError("insufficient data length", m.errors.BUFFER_OVERRUN, { length: t2._data.length, count: e2 }));
          let r4 = [];
          for (let t3 = 0; t3 < e2; t3++)
            r4.push(new cr(this.coder));
          return t2.coerce(this.name, ur(t2, r4));
        }
      };
      var fr = class extends ir {
        constructor(t2) {
          super("bool", "bool", t2, false);
        }
        defaultValue() {
          return false;
        }
        encode(t2, e2) {
          return t2.writeValue(e2 ? 1 : 0);
        }
        decode(t2) {
          return t2.coerce(this.type, !t2.readValue().isZero());
        }
      };
      var pr = class extends ir {
        constructor(t2, e2) {
          super(t2, t2, e2, true);
        }
        defaultValue() {
          return "0x";
        }
        encode(t2, e2) {
          e2 = Q(e2);
          let r4 = t2.writeValue(e2.length);
          return r4 += t2.writeBytes(e2), r4;
        }
        decode(t2) {
          return t2.readBytes(t2.readValue().toNumber(), true);
        }
      };
      var dr = class extends pr {
        constructor(t2) {
          super("bytes", t2);
        }
        decode(t2) {
          return t2.coerce(this.name, S(super.decode(t2)));
        }
      };
      var Ir = class extends ir {
        constructor(t2, e2) {
          let r4 = "bytes" + String(t2);
          super(r4, r4, e2, false), this.size = t2;
        }
        defaultValue() {
          return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size);
        }
        encode(t2, e2) {
          let r4 = Q(e2);
          return r4.length !== this.size && this._throwError("incorrect data length", e2), t2.writeBytes(r4);
        }
        decode(t2) {
          return t2.coerce(this.name, S(t2.readBytes(this.size)));
        }
      };
      var yr = class extends ir {
        constructor(t2) {
          super("null", "", t2, false);
        }
        defaultValue() {
          return null;
        }
        encode(t2, e2) {
          return null != e2 && this._throwError("not null", e2), t2.writeBytes([]);
        }
        decode(t2) {
          return t2.readBytes(0), t2.coerce(this.name, null);
        }
      };
      var Cr = class extends ir {
        constructor(t2, e2, r4) {
          const n2 = (e2 ? "int" : "uint") + 8 * t2;
          super(n2, n2, r4, false), this.size = t2, this.signed = e2;
        }
        defaultValue() {
          return 0;
        }
        encode(t2, e2) {
          let r4 = Y.from(e2), n2 = ut.mask(8 * t2.wordSize);
          if (this.signed) {
            let t3 = n2.mask(8 * this.size - 1);
            (r4.gt(t3) || r4.lt(t3.add(gt).mul(ct))) && this._throwError("value out-of-bounds", e2);
          } else
            (r4.lt(ht) || r4.gt(n2.mask(8 * this.size))) && this._throwError("value out-of-bounds", e2);
          return r4 = r4.toTwos(8 * this.size).mask(8 * this.size), this.signed && (r4 = r4.fromTwos(8 * this.size).toTwos(8 * t2.wordSize)), t2.writeValue(r4);
        }
        decode(t2) {
          let e2 = t2.readValue().mask(8 * this.size);
          return this.signed && (e2 = e2.fromTwos(8 * this.size)), t2.coerce(this.name, e2);
        }
      };
      var mr = class extends pr {
        constructor(t2) {
          super("string", t2);
        }
        defaultValue() {
          return "";
        }
        encode(t2, e2) {
          return super.encode(t2, Ct(e2));
        }
        decode(t2) {
          return mt(super.decode(t2));
        }
      };
      var Br = class extends ir {
        constructor(t2, e2) {
          let r4 = false;
          const n2 = [];
          t2.forEach((t3) => {
            t3.dynamic && (r4 = true), n2.push(t3.type);
          });
          super("tuple", "tuple(" + n2.join(",") + ")", e2, r4), this.coders = t2;
        }
        defaultValue() {
          const t2 = [];
          this.coders.forEach((e3) => {
            t2.push(e3.defaultValue());
          });
          const e2 = this.coders.reduce((t3, e3) => {
            const r4 = e3.localName;
            return r4 && (t3[r4] || (t3[r4] = 0), t3[r4]++), t3;
          }, {});
          return this.coders.forEach((r4, n2) => {
            let A2 = r4.localName;
            A2 && 1 === e2[A2] && ("length" === A2 && (A2 = "_length"), null == t2[A2] && (t2[A2] = t2[n2]));
          }), Object.freeze(t2);
        }
        encode(t2, e2) {
          return gr(t2, this.coders, e2);
        }
        decode(t2) {
          return t2.coerce(this.name, ur(t2, this.coders));
        }
      };
      var Er = new m(Fe);
      var wr = new RegExp(/^bytes([0-9]*)$/);
      var vr = new RegExp(/^(u?int)([0-9]*)$/);
      var _r = new class {
        constructor(t2) {
          se(this, "coerceFunc", t2 || null);
        }
        _getCoder(t2) {
          switch (t2.baseType) {
            case "address":
              return new ar(t2.name);
            case "bool":
              return new fr(t2.name);
            case "string":
              return new mr(t2.name);
            case "bytes":
              return new dr(t2.name);
            case "array":
              return new lr(this._getCoder(t2.arrayChildren), t2.arrayLength, t2.name);
            case "tuple":
              return new Br((t2.components || []).map((t3) => this._getCoder(t3)), t2.name);
            case "":
              return new yr(t2.name);
          }
          let e2 = t2.type.match(vr);
          if (e2) {
            let r4 = parseInt(e2[2] || "256");
            return (0 === r4 || r4 > 256 || r4 % 8 != 0) && Er.throwArgumentError("invalid " + e2[1] + " bit length", "param", t2), new Cr(r4 / 8, "int" === e2[1], t2.name);
          }
          if (e2 = t2.type.match(wr), e2) {
            let r4 = parseInt(e2[1]);
            return (0 === r4 || r4 > 32) && Er.throwArgumentError("invalid bytes length", "param", t2), new Ir(r4, t2.name);
          }
          return Er.throwArgumentError("invalid type", "type", t2.type);
        }
        _getWordSize() {
          return 32;
        }
        _getReader(t2, e2) {
          return new sr(t2, this._getWordSize(), this.coerceFunc, e2);
        }
        _getWriter() {
          return new or(this._getWordSize());
        }
        getDefaultValue(t2) {
          const e2 = t2.map((t3) => this._getCoder(Ye.from(t3)));
          return new Br(e2, "_").defaultValue();
        }
        encode(t2, e2) {
          t2.length !== e2.length && Er.throwError("types/values length mismatch", m.errors.INVALID_ARGUMENT, { count: { types: t2.length, values: e2.length }, value: { types: t2, values: e2 } });
          const r4 = t2.map((t3) => this._getCoder(Ye.from(t3))), n2 = new Br(r4, "_"), A2 = this._getWriter();
          return n2.encode(A2, e2), A2.data;
        }
        decode(t2, e2, r4) {
          const n2 = t2.map((t3) => this._getCoder(Ye.from(t3)));
          return new Br(n2, "_").decode(this._getReader(Q(e2), r4));
        }
      }();
      var Qr = new m(Fe);
      var br = class extends pe {
      };
      var kr = class extends pe {
      };
      var Dr = class extends pe {
      };
      var Sr = class extends pe {
        static isIndexed(t2) {
          return !(!t2 || !t2._isIndexed);
        }
      };
      var Nr = { "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true }, "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] } };
      function Mr(t2, e2) {
        const r4 = new Error(`deferred error during ABI decoding triggered accessing ${t2}`);
        return r4.error = e2, r4;
      }
      var xr = class {
        constructor(t2) {
          let e2 = [];
          e2 = "string" == typeof t2 ? JSON.parse(t2) : t2, se(this, "fragments", e2.map((t3) => Je.from(t3)).filter((t3) => null != t3)), se(this, "_abiCoder", ae(new.target, "getAbiCoder")()), se(this, "functions", {}), se(this, "errors", {}), se(this, "events", {}), se(this, "structs", {}), this.fragments.forEach((t3) => {
            let e3 = null;
            switch (t3.type) {
              case "constructor":
                return this.deploy ? void Qr.warn("duplicate definition - constructor") : void se(this, "deploy", t3);
              case "function":
                e3 = this.functions;
                break;
              case "event":
                e3 = this.events;
                break;
              case "error":
                e3 = this.errors;
                break;
              default:
                return;
            }
            let r4 = t3.format();
            e3[r4] ? Qr.warn("duplicate definition - " + r4) : e3[r4] = t3;
          }), this.deploy || se(this, "deploy", Ve.from({ payable: false, type: "constructor" })), se(this, "_isInterface", true);
        }
        format(t2) {
          t2 || (t2 = Le.full), t2 === Le.sighash && Qr.throwArgumentError("interface does not support formatting sighash", "format", t2);
          const e2 = this.fragments.map((e3) => e3.format(t2));
          return t2 === Le.json ? JSON.stringify(e2.map((t3) => JSON.parse(t3))) : e2;
        }
        static getAbiCoder() {
          return _r;
        }
        static getAddress(t2) {
          return ne(t2);
        }
        static getSighash(t2) {
          return N2(Bt(t2.format()), 0, 4);
        }
        static getEventTopic(t2) {
          return Bt(t2.format());
        }
        getFunction(t2) {
          if (k(t2)) {
            for (const e3 in this.functions)
              if (t2 === this.getSighash(e3))
                return this.functions[e3];
            Qr.throwArgumentError("no matching function", "sighash", t2);
          }
          if (-1 === t2.indexOf("(")) {
            const e3 = t2.trim(), r4 = Object.keys(this.functions).filter((t3) => t3.split("(")[0] === e3);
            return 0 === r4.length ? Qr.throwArgumentError("no matching function", "name", e3) : r4.length > 1 && Qr.throwArgumentError("multiple matching functions", "name", e3), this.functions[r4[0]];
          }
          const e2 = this.functions[We.fromString(t2).format()];
          return e2 || Qr.throwArgumentError("no matching function", "signature", t2), e2;
        }
        getEvent(t2) {
          if (k(t2)) {
            const e3 = t2.toLowerCase();
            for (const t3 in this.events)
              if (e3 === this.getEventTopic(t3))
                return this.events[t3];
            Qr.throwArgumentError("no matching event", "topichash", e3);
          }
          if (-1 === t2.indexOf("(")) {
            const e3 = t2.trim(), r4 = Object.keys(this.events).filter((t3) => t3.split("(")[0] === e3);
            return 0 === r4.length ? Qr.throwArgumentError("no matching event", "name", e3) : r4.length > 1 && Qr.throwArgumentError("multiple matching events", "name", e3), this.events[r4[0]];
          }
          const e2 = this.events[je.fromString(t2).format()];
          return e2 || Qr.throwArgumentError("no matching event", "signature", t2), e2;
        }
        getError(t2) {
          if (k(t2)) {
            const e3 = ae(this.constructor, "getSighash");
            for (const r4 in this.errors) {
              if (t2 === e3(this.errors[r4]))
                return this.errors[r4];
            }
            Qr.throwArgumentError("no matching error", "sighash", t2);
          }
          if (-1 === t2.indexOf("(")) {
            const e3 = t2.trim(), r4 = Object.keys(this.errors).filter((t3) => t3.split("(")[0] === e3);
            return 0 === r4.length ? Qr.throwArgumentError("no matching error", "name", e3) : r4.length > 1 && Qr.throwArgumentError("multiple matching errors", "name", e3), this.errors[r4[0]];
          }
          const e2 = this.errors[We.fromString(t2).format()];
          return e2 || Qr.throwArgumentError("no matching error", "signature", t2), e2;
        }
        getSighash(t2) {
          if ("string" == typeof t2)
            try {
              t2 = this.getFunction(t2);
            } catch (e2) {
              try {
                t2 = this.getError(t2);
              } catch (t3) {
                throw e2;
              }
            }
          return ae(this.constructor, "getSighash")(t2);
        }
        getEventTopic(t2) {
          return "string" == typeof t2 && (t2 = this.getEvent(t2)), ae(this.constructor, "getEventTopic")(t2);
        }
        _decodeParams(t2, e2) {
          return this._abiCoder.decode(t2, e2);
        }
        _encodeParams(t2, e2) {
          return this._abiCoder.encode(t2, e2);
        }
        encodeDeploy(t2) {
          return this._encodeParams(this.deploy.inputs, t2 || []);
        }
        decodeErrorResult(t2, e2) {
          "string" == typeof t2 && (t2 = this.getError(t2));
          const r4 = Q(e2);
          return S(r4.slice(0, 4)) !== this.getSighash(t2) && Qr.throwArgumentError(`data signature does not match error ${t2.name}.`, "data", S(r4)), this._decodeParams(t2.inputs, r4.slice(4));
        }
        encodeErrorResult(t2, e2) {
          return "string" == typeof t2 && (t2 = this.getError(t2)), S(b([this.getSighash(t2), this._encodeParams(t2.inputs, e2 || [])]));
        }
        decodeFunctionData(t2, e2) {
          "string" == typeof t2 && (t2 = this.getFunction(t2));
          const r4 = Q(e2);
          return S(r4.slice(0, 4)) !== this.getSighash(t2) && Qr.throwArgumentError(`data signature does not match function ${t2.name}.`, "data", S(r4)), this._decodeParams(t2.inputs, r4.slice(4));
        }
        encodeFunctionData(t2, e2) {
          return "string" == typeof t2 && (t2 = this.getFunction(t2)), S(b([this.getSighash(t2), this._encodeParams(t2.inputs, e2 || [])]));
        }
        decodeFunctionResult(t2, e2) {
          "string" == typeof t2 && (t2 = this.getFunction(t2));
          let r4 = Q(e2), n2 = null, A2 = "", i2 = null, o2 = null, s2 = null;
          switch (r4.length % this._abiCoder._getWordSize()) {
            case 0:
              try {
                return this._abiCoder.decode(t2.outputs, r4);
              } catch (t3) {
              }
              break;
            case 4: {
              const t3 = S(r4.slice(0, 4)), e3 = Nr[t3];
              if (e3)
                i2 = this._abiCoder.decode(e3.inputs, r4.slice(4)), o2 = e3.name, s2 = e3.signature, e3.reason && (n2 = i2[0]), "Error" === o2 ? A2 = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(i2[0])}` : "Panic" === o2 && (A2 = `; VM Exception while processing transaction: reverted with panic code ${i2[0]}`);
              else
                try {
                  const e4 = this.getError(t3);
                  i2 = this._abiCoder.decode(e4.inputs, r4.slice(4)), o2 = e4.name, s2 = e4.format();
                } catch (t4) {
                }
              break;
            }
          }
          return Qr.throwError("call revert exception" + A2, m.errors.CALL_EXCEPTION, { method: t2.format(), data: S(e2), errorArgs: i2, errorName: o2, errorSignature: s2, reason: n2 });
        }
        encodeFunctionResult(t2, e2) {
          return "string" == typeof t2 && (t2 = this.getFunction(t2)), S(this._abiCoder.encode(t2.outputs, e2 || []));
        }
        encodeFilterTopics(t2, e2) {
          "string" == typeof t2 && (t2 = this.getEvent(t2)), e2.length > t2.inputs.length && Qr.throwError("too many arguments for " + t2.format(), m.errors.UNEXPECTED_ARGUMENT, { argument: "values", value: e2 });
          let r4 = [];
          t2.anonymous || r4.push(this.getEventTopic(t2));
          const n2 = (t3, e3) => "string" === t3.type ? Bt(e3) : "bytes" === t3.type ? F(S(e3)) : ("bool" === t3.type && "boolean" == typeof e3 && (e3 = e3 ? "0x01" : "0x00"), t3.type.match(/^u?int/) && (e3 = Y.from(e3).toHexString()), "address" === t3.type && this._abiCoder.encode(["address"], [e3]), x(S(e3), 32));
          for (e2.forEach((e3, A2) => {
            let i2 = t2.inputs[A2];
            i2.indexed ? null == e3 ? r4.push(null) : "array" === i2.baseType || "tuple" === i2.baseType ? Qr.throwArgumentError("filtering with tuples or arrays not supported", "contract." + i2.name, e3) : Array.isArray(e3) ? r4.push(e3.map((t3) => n2(i2, t3))) : r4.push(n2(i2, e3)) : null != e3 && Qr.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + i2.name, e3);
          }); r4.length && null === r4[r4.length - 1]; )
            r4.pop();
          return r4;
        }
        encodeEventLog(t2, e2) {
          "string" == typeof t2 && (t2 = this.getEvent(t2));
          const r4 = [], n2 = [], A2 = [];
          return t2.anonymous || r4.push(this.getEventTopic(t2)), e2.length !== t2.inputs.length && Qr.throwArgumentError("event arguments/values mismatch", "values", e2), t2.inputs.forEach((t3, i2) => {
            const o2 = e2[i2];
            if (t3.indexed)
              if ("string" === t3.type)
                r4.push(Bt(o2));
              else if ("bytes" === t3.type)
                r4.push(F(o2));
              else {
                if ("tuple" === t3.baseType || "array" === t3.baseType)
                  throw new Error("not implemented");
                r4.push(this._abiCoder.encode([t3.type], [o2]));
              }
            else
              n2.push(t3), A2.push(o2);
          }), { data: this._abiCoder.encode(n2, A2), topics: r4 };
        }
        decodeEventLog(t2, e2, r4) {
          if ("string" == typeof t2 && (t2 = this.getEvent(t2)), null != r4 && !t2.anonymous) {
            let e3 = this.getEventTopic(t2);
            k(r4[0], 32) && r4[0].toLowerCase() === e3 || Qr.throwError("fragment/topic mismatch", m.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: e3, value: r4[0] }), r4 = r4.slice(1);
          }
          let n2 = [], A2 = [], i2 = [];
          t2.inputs.forEach((t3, e3) => {
            t3.indexed ? "string" === t3.type || "bytes" === t3.type || "tuple" === t3.baseType || "array" === t3.baseType ? (n2.push(Ye.fromObject({ type: "bytes32", name: t3.name })), i2.push(true)) : (n2.push(t3), i2.push(false)) : (A2.push(t3), i2.push(false));
          });
          let o2 = null != r4 ? this._abiCoder.decode(n2, b(r4)) : null, s2 = this._abiCoder.decode(A2, e2, true), a2 = [], c2 = 0, h2 = 0;
          t2.inputs.forEach((t3, e3) => {
            if (t3.indexed)
              if (null == o2)
                a2[e3] = new Sr({ _isIndexed: true, hash: null });
              else if (i2[e3])
                a2[e3] = new Sr({ _isIndexed: true, hash: o2[h2++] });
              else
                try {
                  a2[e3] = o2[h2++];
                } catch (t4) {
                  a2[e3] = t4;
                }
            else
              try {
                a2[e3] = s2[c2++];
              } catch (t4) {
                a2[e3] = t4;
              }
            if (t3.name && null == a2[t3.name]) {
              const r5 = a2[e3];
              r5 instanceof Error ? Object.defineProperty(a2, t3.name, { enumerable: true, get: () => {
                throw Mr(`property ${JSON.stringify(t3.name)}`, r5);
              } }) : a2[t3.name] = r5;
            }
          });
          for (let t3 = 0; t3 < a2.length; t3++) {
            const e3 = a2[t3];
            e3 instanceof Error && Object.defineProperty(a2, t3, { enumerable: true, get: () => {
              throw Mr(`index ${t3}`, e3);
            } });
          }
          return Object.freeze(a2);
        }
        parseTransaction(t2) {
          let e2 = this.getFunction(t2.data.substring(0, 10).toLowerCase());
          return e2 ? new kr({ args: this._abiCoder.decode(e2.inputs, "0x" + t2.data.substring(10)), functionFragment: e2, name: e2.name, signature: e2.format(), sighash: this.getSighash(e2), value: Y.from(t2.value || "0") }) : null;
        }
        parseLog(t2) {
          let e2 = this.getEvent(t2.topics[0]);
          return !e2 || e2.anonymous ? null : new br({ eventFragment: e2, name: e2.name, signature: e2.format(), topic: this.getEventTopic(e2), args: this.decodeEventLog(e2, t2.data, t2.topics) });
        }
        parseError(t2) {
          const e2 = S(t2);
          let r4 = this.getError(e2.substring(0, 10).toLowerCase());
          return r4 ? new Dr({ args: this._abiCoder.decode(r4.inputs, "0x" + e2.substring(10)), errorFragment: r4, name: r4.name, signature: r4.format(), sighash: this.getSighash(r4) }) : null;
        }
        static isInterface(t2) {
          return !(!t2 || !t2._isInterface);
        }
      };
      var Fr = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var Pr = new m("abstract-provider/5.7.0");
      var Tr = class t2 {
        constructor() {
          Pr.checkAbstract(new.target, t2), se(this, "_isProvider", true);
        }
        getFeeData() {
          return Fr(this, void 0, void 0, function* () {
            const { block: t3, gasPrice: e2 } = yield ce({ block: this.getBlock("latest"), gasPrice: this.getGasPrice().catch((t4) => null) });
            let r4 = null, n2 = null, A2 = null;
            return t3 && t3.baseFeePerGas && (r4 = t3.baseFeePerGas, A2 = Y.from("1500000000"), n2 = t3.baseFeePerGas.mul(2).add(A2)), { lastBaseFeePerGas: r4, maxFeePerGas: n2, maxPriorityFeePerGas: A2, gasPrice: e2 };
          });
        }
        addListener(t3, e2) {
          return this.on(t3, e2);
        }
        removeListener(t3, e2) {
          return this.off(t3, e2);
        }
        static isProvider(t3) {
          return !(!t3 || !t3._isProvider);
        }
      };
      var Rr = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var Ur = new m("abstract-signer/5.7.0");
      var Gr = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"];
      var Hr = [m.errors.INSUFFICIENT_FUNDS, m.errors.NONCE_EXPIRED, m.errors.REPLACEMENT_UNDERPRICED];
      var Lr = class t2 {
        constructor() {
          Ur.checkAbstract(new.target, t2), se(this, "_isSigner", true);
        }
        getBalance(t3) {
          return Rr(this, void 0, void 0, function* () {
            return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), t3);
          });
        }
        getTransactionCount(t3) {
          return Rr(this, void 0, void 0, function* () {
            return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), t3);
          });
        }
        estimateGas(t3) {
          return Rr(this, void 0, void 0, function* () {
            this._checkProvider("estimateGas");
            const e2 = yield ce(this.checkTransaction(t3));
            return yield this.provider.estimateGas(e2);
          });
        }
        call(t3, e2) {
          return Rr(this, void 0, void 0, function* () {
            this._checkProvider("call");
            const r4 = yield ce(this.checkTransaction(t3));
            return yield this.provider.call(r4, e2);
          });
        }
        sendTransaction(t3) {
          return Rr(this, void 0, void 0, function* () {
            this._checkProvider("sendTransaction");
            const e2 = yield this.populateTransaction(t3), r4 = yield this.signTransaction(e2);
            return yield this.provider.sendTransaction(r4);
          });
        }
        getChainId() {
          return Rr(this, void 0, void 0, function* () {
            this._checkProvider("getChainId");
            return (yield this.provider.getNetwork()).chainId;
          });
        }
        getGasPrice() {
          return Rr(this, void 0, void 0, function* () {
            return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice();
          });
        }
        getFeeData() {
          return Rr(this, void 0, void 0, function* () {
            return this._checkProvider("getFeeData"), yield this.provider.getFeeData();
          });
        }
        resolveName(t3) {
          return Rr(this, void 0, void 0, function* () {
            return this._checkProvider("resolveName"), yield this.provider.resolveName(t3);
          });
        }
        checkTransaction(t3) {
          for (const e3 in t3)
            -1 === Gr.indexOf(e3) && Ur.throwArgumentError("invalid transaction key: " + e3, "transaction", t3);
          const e2 = he(t3);
          return null == e2.from ? e2.from = this.getAddress() : e2.from = Promise.all([Promise.resolve(e2.from), this.getAddress()]).then((e3) => (e3[0].toLowerCase() !== e3[1].toLowerCase() && Ur.throwArgumentError("from address mismatch", "transaction", t3), e3[0])), e2;
        }
        populateTransaction(t3) {
          return Rr(this, void 0, void 0, function* () {
            const e2 = yield ce(this.checkTransaction(t3));
            null != e2.to && (e2.to = Promise.resolve(e2.to).then((t4) => Rr(this, void 0, void 0, function* () {
              if (null == t4)
                return null;
              const e3 = yield this.resolveName(t4);
              return null == e3 && Ur.throwArgumentError("provided ENS name resolves to null", "tx.to", t4), e3;
            })), e2.to.catch((t4) => {
            }));
            const r4 = null != e2.maxFeePerGas || null != e2.maxPriorityFeePerGas;
            if (null == e2.gasPrice || 2 !== e2.type && !r4 ? 0 !== e2.type && 1 !== e2.type || !r4 || Ur.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", t3) : Ur.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", t3), 2 !== e2.type && null != e2.type || null == e2.maxFeePerGas || null == e2.maxPriorityFeePerGas)
              if (0 === e2.type || 1 === e2.type)
                null == e2.gasPrice && (e2.gasPrice = this.getGasPrice());
              else {
                const t4 = yield this.getFeeData();
                if (null == e2.type)
                  if (null != t4.maxFeePerGas && null != t4.maxPriorityFeePerGas)
                    if (e2.type = 2, null != e2.gasPrice) {
                      const t5 = e2.gasPrice;
                      delete e2.gasPrice, e2.maxFeePerGas = t5, e2.maxPriorityFeePerGas = t5;
                    } else
                      null == e2.maxFeePerGas && (e2.maxFeePerGas = t4.maxFeePerGas), null == e2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = t4.maxPriorityFeePerGas);
                  else
                    null != t4.gasPrice ? (r4 && Ur.throwError("network does not support EIP-1559", m.errors.UNSUPPORTED_OPERATION, { operation: "populateTransaction" }), null == e2.gasPrice && (e2.gasPrice = t4.gasPrice), e2.type = 0) : Ur.throwError("failed to get consistent fee data", m.errors.UNSUPPORTED_OPERATION, { operation: "signer.getFeeData" });
                else
                  2 === e2.type && (null == e2.maxFeePerGas && (e2.maxFeePerGas = t4.maxFeePerGas), null == e2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = t4.maxPriorityFeePerGas));
              }
            else
              e2.type = 2;
            return null == e2.nonce && (e2.nonce = this.getTransactionCount("pending")), null == e2.gasLimit && (e2.gasLimit = this.estimateGas(e2).catch((t4) => {
              if (Hr.indexOf(t4.code) >= 0)
                throw t4;
              return Ur.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", m.errors.UNPREDICTABLE_GAS_LIMIT, { error: t4, tx: e2 });
            })), null == e2.chainId ? e2.chainId = this.getChainId() : e2.chainId = Promise.all([Promise.resolve(e2.chainId), this.getChainId()]).then((e3) => (0 !== e3[1] && e3[0] !== e3[1] && Ur.throwArgumentError("chainId address mismatch", "transaction", t3), e3[0])), yield ce(e2);
          });
        }
        _checkProvider(t3) {
          this.provider || Ur.throwError("missing provider", m.errors.UNSUPPORTED_OPERATION, { operation: t3 || "_checkProvider" });
        }
        static isSigner(t3) {
          return !(!t3 || !t3._isSigner);
        }
      };
      var Or = class t2 extends Lr {
        constructor(t3, e2) {
          super(), se(this, "address", t3), se(this, "provider", e2 || null);
        }
        getAddress() {
          return Promise.resolve(this.address);
        }
        _fail(t3, e2) {
          return Promise.resolve().then(() => {
            Ur.throwError(t3, m.errors.UNSUPPORTED_OPERATION, { operation: e2 });
          });
        }
        signMessage(t3) {
          return this._fail("VoidSigner cannot sign messages", "signMessage");
        }
        signTransaction(t3) {
          return this._fail("VoidSigner cannot sign transactions", "signTransaction");
        }
        _signTypedData(t3, e2, r4) {
          return this._fail("VoidSigner cannot sign typed data", "signTypedData");
        }
        connect(e2) {
          return new t2(this.address, e2);
        }
      };
      var Yr = new m("transactions/5.7.0");
      var Kr;
      function Jr(t2, e2) {
        return { address: ne(t2), storageKeys: (e2 || []).map((e3, r4) => (32 !== function(t3) {
          if ("string" != typeof t3)
            t3 = S(t3);
          else if (!k(t3) || t3.length % 2)
            return null;
          return (t3.length - 2) / 2;
        }(e3) && Yr.throwArgumentError("invalid access list storageKey", `accessList[${t2}:${r4}]`, e3), e3.toLowerCase())) };
      }
      !function(t2) {
        t2[t2.legacy = 0] = "legacy", t2[t2.eip2930 = 1] = "eip2930", t2[t2.eip1559 = 2] = "eip1559";
      }(Kr || (Kr = {}));
      var jr = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var zr = new m("contracts/5.7.0");
      var qr = { chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true, type: true, accessList: true, maxFeePerGas: true, maxPriorityFeePerGas: true, customData: true, ccipReadEnabled: true };
      function Xr(t2, e2) {
        return jr(this, void 0, void 0, function* () {
          const r4 = yield e2;
          "string" != typeof r4 && zr.throwArgumentError("invalid address or ENS name", "name", r4);
          try {
            return ne(r4);
          } catch (t3) {
          }
          t2 || zr.throwError("a provider or signer is needed to resolve ENS names", m.errors.UNSUPPORTED_OPERATION, { operation: "resolveName" });
          const n2 = yield t2.resolveName(r4);
          return null == n2 && zr.throwArgumentError("resolver or addr is not configured for ENS name", "name", r4), n2;
        });
      }
      function Vr(t2, e2, r4) {
        return jr(this, void 0, void 0, function* () {
          return Array.isArray(r4) ? yield Promise.all(r4.map((r5, n2) => Vr(t2, Array.isArray(e2) ? e2[n2] : e2[r5.name], r5))) : "address" === r4.type ? yield Xr(t2, e2) : "tuple" === r4.type ? yield Vr(t2, e2, r4.components) : "array" === r4.baseType ? Array.isArray(e2) ? yield Promise.all(e2.map((e3) => Vr(t2, e3, r4.arrayChildren))) : Promise.reject(zr.makeError("invalid value for array", m.errors.INVALID_ARGUMENT, { argument: "value", value: e2 })) : e2;
        });
      }
      function Wr(t2, e2, r4) {
        return jr(this, void 0, void 0, function* () {
          let n2 = {};
          r4.length === e2.inputs.length + 1 && "object" == typeof r4[r4.length - 1] && (n2 = he(r4.pop())), zr.checkArgumentCount(r4.length, e2.inputs.length, "passed to contract"), t2.signer ? n2.from ? n2.from = ce({ override: Xr(t2.signer, n2.from), signer: t2.signer.getAddress() }).then((t3) => jr(this, void 0, void 0, function* () {
            return ne(t3.signer) !== t3.override && zr.throwError("Contract with a Signer cannot override from", m.errors.UNSUPPORTED_OPERATION, { operation: "overrides.from" }), t3.override;
          })) : n2.from = t2.signer.getAddress() : n2.from && (n2.from = Xr(t2.provider, n2.from));
          const A2 = yield ce({ args: Vr(t2.signer || t2.provider, r4, e2.inputs), address: t2.resolvedAddress, overrides: ce(n2) || {} }), i2 = t2.interface.encodeFunctionData(e2, A2.args), o2 = { data: i2, to: A2.address }, s2 = A2.overrides;
          if (null != s2.nonce && (o2.nonce = Y.from(s2.nonce).toNumber()), null != s2.gasLimit && (o2.gasLimit = Y.from(s2.gasLimit)), null != s2.gasPrice && (o2.gasPrice = Y.from(s2.gasPrice)), null != s2.maxFeePerGas && (o2.maxFeePerGas = Y.from(s2.maxFeePerGas)), null != s2.maxPriorityFeePerGas && (o2.maxPriorityFeePerGas = Y.from(s2.maxPriorityFeePerGas)), null != s2.from && (o2.from = s2.from), null != s2.type && (o2.type = s2.type), null != s2.accessList && (o2.accessList = function(t3) {
            if (Array.isArray(t3))
              return t3.map((t4, e4) => Array.isArray(t4) ? (t4.length > 2 && Yr.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e4}]`, t4), Jr(t4[0], t4[1])) : Jr(t4.address, t4.storageKeys));
            const e3 = Object.keys(t3).map((e4) => {
              const r5 = t3[e4].reduce((t4, e5) => (t4[e5] = true, t4), {});
              return Jr(e4, Object.keys(r5).sort());
            });
            return e3.sort((t4, e4) => t4.address.localeCompare(e4.address)), e3;
          }(s2.accessList)), null == o2.gasLimit && null != e2.gas) {
            let t3 = 21e3;
            const r5 = Q(i2);
            for (let e3 = 0; e3 < r5.length; e3++)
              t3 += 4, r5[e3] && (t3 += 64);
            o2.gasLimit = Y.from(e2.gas).add(t3);
          }
          if (s2.value) {
            const t3 = Y.from(s2.value);
            t3.isZero() || e2.payable || zr.throwError("non-payable method cannot override value", m.errors.UNSUPPORTED_OPERATION, { operation: "overrides.value", value: n2.value }), o2.value = t3;
          }
          s2.customData && (o2.customData = he(s2.customData)), s2.ccipReadEnabled && (o2.ccipReadEnabled = !!s2.ccipReadEnabled), delete n2.nonce, delete n2.gasLimit, delete n2.gasPrice, delete n2.from, delete n2.value, delete n2.type, delete n2.accessList, delete n2.maxFeePerGas, delete n2.maxPriorityFeePerGas, delete n2.customData, delete n2.ccipReadEnabled;
          const a2 = Object.keys(n2).filter((t3) => null != n2[t3]);
          return a2.length && zr.throwError(`cannot override ${a2.map((t3) => JSON.stringify(t3)).join(",")}`, m.errors.UNSUPPORTED_OPERATION, { operation: "overrides", overrides: a2 }), o2;
        });
      }
      function Zr(t2, e2) {
        const r4 = e2.wait.bind(e2);
        e2.wait = (e3) => r4(e3).then((e4) => (e4.events = e4.logs.map((r5) => {
          let n2 = fe(r5), A2 = null;
          try {
            A2 = t2.interface.parseLog(r5);
          } catch (t3) {
          }
          return A2 && (n2.args = A2.args, n2.decode = (e5, r6) => t2.interface.decodeEventLog(A2.eventFragment, e5, r6), n2.event = A2.name, n2.eventSignature = A2.signature), n2.removeListener = () => t2.provider, n2.getBlock = () => t2.provider.getBlock(e4.blockHash), n2.getTransaction = () => t2.provider.getTransaction(e4.transactionHash), n2.getTransactionReceipt = () => Promise.resolve(e4), n2;
        }), e4));
      }
      function $r(t2, e2, r4) {
        const n2 = t2.signer || t2.provider;
        return function(...A2) {
          return jr(this, void 0, void 0, function* () {
            let i2;
            if (A2.length === e2.inputs.length + 1 && "object" == typeof A2[A2.length - 1]) {
              const t3 = he(A2.pop());
              null != t3.blockTag && (i2 = yield t3.blockTag), delete t3.blockTag, A2.push(t3);
            }
            null != t2.deployTransaction && (yield t2._deployed(i2));
            const o2 = yield Wr(t2, e2, A2), s2 = yield n2.call(o2, i2);
            try {
              let n3 = t2.interface.decodeFunctionResult(e2, s2);
              return r4 && 1 === e2.outputs.length && (n3 = n3[0]), n3;
            } catch (e3) {
              throw e3.code === m.errors.CALL_EXCEPTION && (e3.address = t2.address, e3.args = A2, e3.transaction = o2), e3;
            }
          });
        };
      }
      function tn(t2, e2, r4) {
        return e2.constant ? $r(t2, e2, r4) : /* @__PURE__ */ function(t3, e3) {
          return function(...r5) {
            return jr(this, void 0, void 0, function* () {
              t3.signer || zr.throwError("sending a transaction requires a signer", m.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction" }), null != t3.deployTransaction && (yield t3._deployed());
              const n2 = yield Wr(t3, e3, r5), A2 = yield t3.signer.sendTransaction(n2);
              return Zr(t3, A2), A2;
            });
          };
        }(t2, e2);
      }
      function en(t2) {
        return !t2.address || null != t2.topics && 0 !== t2.topics.length ? (t2.address || "*") + "@" + (t2.topics ? t2.topics.map((t3) => Array.isArray(t3) ? t3.join("|") : t3).join(":") : "") : "*";
      }
      var rn = class {
        constructor(t2, e2) {
          se(this, "tag", t2), se(this, "filter", e2), this._listeners = [];
        }
        addListener(t2, e2) {
          this._listeners.push({ listener: t2, once: e2 });
        }
        removeListener(t2) {
          let e2 = false;
          this._listeners = this._listeners.filter((r4) => !(!e2 && r4.listener === t2) || (e2 = true, false));
        }
        removeAllListeners() {
          this._listeners = [];
        }
        listeners() {
          return this._listeners.map((t2) => t2.listener);
        }
        listenerCount() {
          return this._listeners.length;
        }
        run(t2) {
          const e2 = this.listenerCount();
          return this._listeners = this._listeners.filter((e3) => {
            const r4 = t2.slice();
            return setTimeout(() => {
              e3.listener.apply(this, r4);
            }, 0), !e3.once;
          }), e2;
        }
        prepareEvent(t2) {
        }
        getEmit(t2) {
          return [t2];
        }
      };
      var nn = class extends rn {
        constructor() {
          super("error", null);
        }
      };
      var An = class extends rn {
        constructor(t2, e2, r4, n2) {
          const A2 = { address: t2 };
          let i2 = e2.getEventTopic(r4);
          n2 ? (i2 !== n2[0] && zr.throwArgumentError("topic mismatch", "topics", n2), A2.topics = n2.slice()) : A2.topics = [i2], super(en(A2), A2), se(this, "address", t2), se(this, "interface", e2), se(this, "fragment", r4);
        }
        prepareEvent(t2) {
          super.prepareEvent(t2), t2.event = this.fragment.name, t2.eventSignature = this.fragment.format(), t2.decode = (t3, e2) => this.interface.decodeEventLog(this.fragment, t3, e2);
          try {
            t2.args = this.interface.decodeEventLog(this.fragment, t2.data, t2.topics);
          } catch (e2) {
            t2.args = null, t2.decodeError = e2;
          }
        }
        getEmit(t2) {
          const e2 = function(t3) {
            const e3 = [], r5 = function(t4, n2) {
              if (Array.isArray(n2))
                for (let A2 in n2) {
                  const i2 = t4.slice();
                  i2.push(A2);
                  try {
                    r5(i2, n2[A2]);
                  } catch (t5) {
                    e3.push({ path: i2, error: t5 });
                  }
                }
            };
            return r5([], t3), e3;
          }(t2.args);
          if (e2.length)
            throw e2[0].error;
          const r4 = (t2.args || []).slice();
          return r4.push(t2), r4;
        }
      };
      var on = class extends rn {
        constructor(t2, e2) {
          super("*", { address: t2 }), se(this, "address", t2), se(this, "interface", e2);
        }
        prepareEvent(t2) {
          super.prepareEvent(t2);
          try {
            const e2 = this.interface.parseLog(t2);
            t2.event = e2.name, t2.eventSignature = e2.signature, t2.decode = (t3, r4) => this.interface.decodeEventLog(e2.eventFragment, t3, r4), t2.args = e2.args;
          } catch (t3) {
          }
        }
      };
      var sn = class {
        constructor(t2, e2, r4) {
          se(this, "interface", ae(new.target, "getInterface")(e2)), null == r4 ? (se(this, "provider", null), se(this, "signer", null)) : Lr.isSigner(r4) ? (se(this, "provider", r4.provider || null), se(this, "signer", r4)) : Tr.isProvider(r4) ? (se(this, "provider", r4), se(this, "signer", null)) : zr.throwArgumentError("invalid signer or provider", "signerOrProvider", r4), se(this, "callStatic", {}), se(this, "estimateGas", {}), se(this, "functions", {}), se(this, "populateTransaction", {}), se(this, "filters", {});
          {
            const t3 = {};
            Object.keys(this.interface.events).forEach((e3) => {
              const r5 = this.interface.events[e3];
              se(this.filters, e3, (...t4) => ({ address: this.address, topics: this.interface.encodeFilterTopics(r5, t4) })), t3[r5.name] || (t3[r5.name] = []), t3[r5.name].push(e3);
            }), Object.keys(t3).forEach((e3) => {
              const r5 = t3[e3];
              1 === r5.length ? se(this.filters, e3, this.filters[r5[0]]) : zr.warn(`Duplicate definition of ${e3} (${r5.join(", ")})`);
            });
          }
          if (se(this, "_runningEvents", {}), se(this, "_wrappedEmits", {}), null == t2 && zr.throwArgumentError("invalid contract address or ENS name", "addressOrName", t2), se(this, "address", t2), this.provider)
            se(this, "resolvedAddress", Xr(this.provider, t2));
          else
            try {
              se(this, "resolvedAddress", Promise.resolve(ne(t2)));
            } catch (t3) {
              zr.throwError("provider is required to use ENS name as contract address", m.errors.UNSUPPORTED_OPERATION, { operation: "new Contract" });
            }
          this.resolvedAddress.catch((t3) => {
          });
          const n2 = {}, A2 = {};
          Object.keys(this.interface.functions).forEach((t3) => {
            const e3 = this.interface.functions[t3];
            if (A2[t3])
              zr.warn(`Duplicate ABI entry for ${JSON.stringify(t3)}`);
            else {
              A2[t3] = true;
              {
                const r5 = e3.name;
                n2[`%${r5}`] || (n2[`%${r5}`] = []), n2[`%${r5}`].push(t3);
              }
              null == this[t3] && se(this, t3, tn(this, e3, true)), null == this.functions[t3] && se(this.functions, t3, tn(this, e3, false)), null == this.callStatic[t3] && se(this.callStatic, t3, $r(this, e3, true)), null == this.populateTransaction[t3] && se(this.populateTransaction, t3, /* @__PURE__ */ function(t4, e4) {
                return function(...r5) {
                  return Wr(t4, e4, r5);
                };
              }(this, e3)), null == this.estimateGas[t3] && se(this.estimateGas, t3, function(t4, e4) {
                const r5 = t4.signer || t4.provider;
                return function(...n3) {
                  return jr(this, void 0, void 0, function* () {
                    r5 || zr.throwError("estimate require a provider or signer", m.errors.UNSUPPORTED_OPERATION, { operation: "estimateGas" });
                    const A3 = yield Wr(t4, e4, n3);
                    return yield r5.estimateGas(A3);
                  });
                };
              }(this, e3));
            }
          }), Object.keys(n2).forEach((t3) => {
            const e3 = n2[t3];
            if (e3.length > 1)
              return;
            t3 = t3.substring(1);
            const r5 = e3[0];
            try {
              null == this[t3] && se(this, t3, this[r5]);
            } catch (t4) {
            }
            null == this.functions[t3] && se(this.functions, t3, this.functions[r5]), null == this.callStatic[t3] && se(this.callStatic, t3, this.callStatic[r5]), null == this.populateTransaction[t3] && se(this.populateTransaction, t3, this.populateTransaction[r5]), null == this.estimateGas[t3] && se(this.estimateGas, t3, this.estimateGas[r5]);
          });
        }
        static getContractAddress(t2) {
          return Ae(t2);
        }
        static getInterface(t2) {
          return xr.isInterface(t2) ? t2 : new xr(t2);
        }
        deployed() {
          return this._deployed();
        }
        _deployed(t2) {
          return this._deployedPromise || (this.deployTransaction ? this._deployedPromise = this.deployTransaction.wait().then(() => this) : this._deployedPromise = this.provider.getCode(this.address, t2).then((t3) => ("0x" === t3 && zr.throwError("contract not deployed", m.errors.UNSUPPORTED_OPERATION, { contractAddress: this.address, operation: "getDeployed" }), this))), this._deployedPromise;
        }
        fallback(t2) {
          this.signer || zr.throwError("sending a transactions require a signer", m.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
          const e2 = he(t2 || {});
          return ["from", "to"].forEach(function(t3) {
            null != e2[t3] && zr.throwError("cannot override " + t3, m.errors.UNSUPPORTED_OPERATION, { operation: t3 });
          }), e2.to = this.resolvedAddress, this.deployed().then(() => this.signer.sendTransaction(e2));
        }
        connect(t2) {
          "string" == typeof t2 && (t2 = new Or(t2, this.provider));
          const e2 = new this.constructor(this.address, this.interface, t2);
          return this.deployTransaction && se(e2, "deployTransaction", this.deployTransaction), e2;
        }
        attach(t2) {
          return new this.constructor(t2, this.interface, this.signer || this.provider);
        }
        static isIndexed(t2) {
          return Sr.isIndexed(t2);
        }
        _normalizeRunningEvent(t2) {
          return this._runningEvents[t2.tag] ? this._runningEvents[t2.tag] : t2;
        }
        _getRunningEvent(t2) {
          if ("string" == typeof t2) {
            if ("error" === t2)
              return this._normalizeRunningEvent(new nn());
            if ("event" === t2)
              return this._normalizeRunningEvent(new rn("event", null));
            if ("*" === t2)
              return this._normalizeRunningEvent(new on(this.address, this.interface));
            const e2 = this.interface.getEvent(t2);
            return this._normalizeRunningEvent(new An(this.address, this.interface, e2));
          }
          if (t2.topics && t2.topics.length > 0) {
            try {
              const e3 = t2.topics[0];
              if ("string" != typeof e3)
                throw new Error("invalid topic");
              const r4 = this.interface.getEvent(e3);
              return this._normalizeRunningEvent(new An(this.address, this.interface, r4, t2.topics));
            } catch (t3) {
            }
            const e2 = { address: this.address, topics: t2.topics };
            return this._normalizeRunningEvent(new rn(en(e2), e2));
          }
          return this._normalizeRunningEvent(new on(this.address, this.interface));
        }
        _checkRunningEvents(t2) {
          if (0 === t2.listenerCount()) {
            delete this._runningEvents[t2.tag];
            const e2 = this._wrappedEmits[t2.tag];
            e2 && t2.filter && (this.provider.off(t2.filter, e2), delete this._wrappedEmits[t2.tag]);
          }
        }
        _wrapEvent(t2, e2, r4) {
          const n2 = fe(e2);
          return n2.removeListener = () => {
            r4 && (t2.removeListener(r4), this._checkRunningEvents(t2));
          }, n2.getBlock = () => this.provider.getBlock(e2.blockHash), n2.getTransaction = () => this.provider.getTransaction(e2.transactionHash), n2.getTransactionReceipt = () => this.provider.getTransactionReceipt(e2.transactionHash), t2.prepareEvent(n2), n2;
        }
        _addEventListener(t2, e2, r4) {
          if (this.provider || zr.throwError("events require a provider or a signer with a provider", m.errors.UNSUPPORTED_OPERATION, { operation: "once" }), t2.addListener(e2, r4), this._runningEvents[t2.tag] = t2, !this._wrappedEmits[t2.tag]) {
            const r5 = (r6) => {
              let n2 = this._wrapEvent(t2, r6, e2);
              if (null == n2.decodeError)
                try {
                  const e3 = t2.getEmit(n2);
                  this.emit(t2.filter, ...e3);
                } catch (t3) {
                  n2.decodeError = t3.error;
                }
              null != t2.filter && this.emit("event", n2), null != n2.decodeError && this.emit("error", n2.decodeError, n2);
            };
            this._wrappedEmits[t2.tag] = r5, null != t2.filter && this.provider.on(t2.filter, r5);
          }
        }
        queryFilter(t2, e2, r4) {
          const n2 = this._getRunningEvent(t2), A2 = he(n2.filter);
          return "string" == typeof e2 && k(e2, 32) ? (null != r4 && zr.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", r4), A2.blockHash = e2) : (A2.fromBlock = null != e2 ? e2 : 0, A2.toBlock = null != r4 ? r4 : "latest"), this.provider.getLogs(A2).then((t3) => t3.map((t4) => this._wrapEvent(n2, t4, null)));
        }
        on(t2, e2) {
          return this._addEventListener(this._getRunningEvent(t2), e2, false), this;
        }
        once(t2, e2) {
          return this._addEventListener(this._getRunningEvent(t2), e2, true), this;
        }
        emit(t2, ...e2) {
          if (!this.provider)
            return false;
          const r4 = this._getRunningEvent(t2), n2 = r4.run(e2) > 0;
          return this._checkRunningEvents(r4), n2;
        }
        listenerCount(t2) {
          return this.provider ? null == t2 ? Object.keys(this._runningEvents).reduce((t3, e2) => t3 + this._runningEvents[e2].listenerCount(), 0) : this._getRunningEvent(t2).listenerCount() : 0;
        }
        listeners(t2) {
          if (!this.provider)
            return [];
          if (null == t2) {
            const t3 = [];
            for (let e2 in this._runningEvents)
              this._runningEvents[e2].listeners().forEach((e3) => {
                t3.push(e3);
              });
            return t3;
          }
          return this._getRunningEvent(t2).listeners();
        }
        removeAllListeners(t2) {
          if (!this.provider)
            return this;
          if (null == t2) {
            for (const t3 in this._runningEvents) {
              const e3 = this._runningEvents[t3];
              e3.removeAllListeners(), this._checkRunningEvents(e3);
            }
            return this;
          }
          const e2 = this._getRunningEvent(t2);
          return e2.removeAllListeners(), this._checkRunningEvents(e2), this;
        }
        off(t2, e2) {
          if (!this.provider)
            return this;
          const r4 = this._getRunningEvent(t2);
          return r4.removeListener(e2), this._checkRunningEvents(r4), this;
        }
        removeListener(t2, e2) {
          return this.off(t2, e2);
        }
      };
      var an = class extends sn {
      };
      var hn = Object.freeze({ __proto__: null, BaseContract: sn, Contract: an, ContractFactory: class {
        constructor(t2, e2, r4) {
          let n2 = null;
          n2 = "string" == typeof e2 ? e2 : _(e2) ? S(e2) : e2 && "string" == typeof e2.object ? e2.object : "!", "0x" !== n2.substring(0, 2) && (n2 = "0x" + n2), (!k(n2) || n2.length % 2) && zr.throwArgumentError("invalid bytecode", "bytecode", e2), r4 && !Lr.isSigner(r4) && zr.throwArgumentError("invalid signer", "signer", r4), se(this, "bytecode", n2), se(this, "interface", ae(new.target, "getInterface")(t2)), se(this, "signer", r4 || null);
        }
        getDeployTransaction(...t2) {
          let e2 = {};
          if (t2.length === this.interface.deploy.inputs.length + 1 && "object" == typeof t2[t2.length - 1]) {
            e2 = he(t2.pop());
            for (const t3 in e2)
              if (!qr[t3])
                throw new Error("unknown transaction override " + t3);
          }
          if (["data", "from", "to"].forEach((t3) => {
            null != e2[t3] && zr.throwError("cannot override " + t3, m.errors.UNSUPPORTED_OPERATION, { operation: t3 });
          }), e2.value) {
            Y.from(e2.value).isZero() || this.interface.deploy.payable || zr.throwError("non-payable constructor cannot override value", m.errors.UNSUPPORTED_OPERATION, { operation: "overrides.value", value: e2.value });
          }
          return zr.checkArgumentCount(t2.length, this.interface.deploy.inputs.length, " in Contract constructor"), e2.data = S(b([this.bytecode, this.interface.encodeDeploy(t2)])), e2;
        }
        deploy(...t2) {
          return jr(this, void 0, void 0, function* () {
            let e2 = {};
            t2.length === this.interface.deploy.inputs.length + 1 && (e2 = t2.pop()), zr.checkArgumentCount(t2.length, this.interface.deploy.inputs.length, " in Contract constructor");
            const r4 = yield Vr(this.signer, t2, this.interface.deploy.inputs);
            r4.push(e2);
            const n2 = this.getDeployTransaction(...r4), A2 = yield this.signer.sendTransaction(n2), i2 = ae(this.constructor, "getContractAddress")(A2), o2 = ae(this.constructor, "getContract")(i2, this.interface, this.signer);
            return Zr(o2, A2), se(o2, "deployTransaction", A2), o2;
          });
        }
        attach(t2) {
          return this.constructor.getContract(t2, this.interface, this.signer);
        }
        connect(t2) {
          return new this.constructor(this.interface, this.bytecode, t2);
        }
        static fromSolidity(t2, e2) {
          null == t2 && zr.throwError("missing compiler output", m.errors.MISSING_ARGUMENT, { argument: "compilerOutput" }), "string" == typeof t2 && (t2 = JSON.parse(t2));
          const r4 = t2.abi;
          let n2 = null;
          return t2.bytecode ? n2 = t2.bytecode : t2.evm && t2.evm.bytecode && (n2 = t2.evm.bytecode), new this(r4, n2, e2);
        }
        static getInterface(t2) {
          return an.getInterface(t2);
        }
        static getContractAddress(t2) {
          return Ae(t2);
        }
        static getContract(t2, e2, r4) {
          return new an(t2, e2, r4);
        }
      } });
      var gn = r3(hn);
      var un;
      var ln = {};
      false ? i.exports = function() {
        if (cn)
          return o;
        cn = 1, Object.defineProperty(o, "__esModule", { value: true });
        var t2, e2 = (t2 = s()) && "object" == typeof t2 && "default" in t2 ? t2.default : t2, r4 = Me, n2 = xe, A2 = gn, i2 = n2.BigNumber.from("0xffffffffffff"), a2 = n2.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffff"), c2 = n2.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), h2 = a2, g2 = i2, u2 = i2, l2 = c2, f2 = c2, p2 = c2, d2 = n2.BigNumber.from(0);
        function I2(t3, e3) {
          return { name: "Permit2", chainId: e3, verifyingContract: t3 };
        }
        var y2 = [{ name: "token", type: "address" }, { name: "amount", type: "uint160" }, { name: "expiration", type: "uint48" }, { name: "nonce", type: "uint48" }], C2 = { PermitSingle: [{ name: "details", type: "PermitDetails" }, { name: "spender", type: "address" }, { name: "sigDeadline", type: "uint256" }], PermitDetails: y2 }, m2 = { PermitBatch: [{ name: "details", type: "PermitDetails[]" }, { name: "spender", type: "address" }, { name: "sigDeadline", type: "uint256" }], PermitDetails: y2 }, B2 = function() {
          function t3() {
          }
          return t3.getPermitData = function(t4, r5, n3) {
            p2.gte(t4.sigDeadline) || e2(false);
            var A3 = I2(r5, n3);
            return function(t5) {
              return !Array.isArray(t5.details);
            }(t4) ? (E2(t4.details), { domain: A3, types: C2, values: t4 }) : (t4.details.forEach(E2), { domain: A3, types: m2, values: t4 });
          }, t3.hash = function(e3, n3, A3) {
            var i3 = t3.getPermitData(e3, n3, A3);
            return r4._TypedDataEncoder.hash(i3.domain, i3.types, i3.values);
          }, t3;
        }();
        function E2(t3) {
          u2.gte(t3.nonce) || e2(false), h2.gte(t3.amount) || e2(false), g2.gte(t3.expiration) || e2(false);
        }
        function w2() {
          w2 = function() {
            return e3;
          };
          var t3, e3 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, A3 = Object.defineProperty || function(t4, e4, r6) {
            t4[e4] = r6.value;
          }, i3 = "function" == typeof Symbol ? Symbol : {}, o2 = i3.iterator || "@@iterator", s2 = i3.asyncIterator || "@@asyncIterator", a3 = i3.toStringTag || "@@toStringTag";
          function c3(t4, e4, r6) {
            return Object.defineProperty(t4, e4, { value: r6, enumerable: true, configurable: true, writable: true }), t4[e4];
          }
          try {
            c3({}, "");
          } catch (t4) {
            c3 = function(t5, e4, r6) {
              return t5[e4] = r6;
            };
          }
          function h3(t4, e4, r6, n4) {
            var i4 = Object.create((e4 && e4.prototype instanceof d3 ? e4 : d3).prototype), o3 = new S3(n4 || []);
            return A3(i4, "_invoke", { value: Q3(t4, r6, o3) }), i4;
          }
          function g3(t4, e4, r6) {
            try {
              return { type: "normal", arg: t4.call(e4, r6) };
            } catch (t5) {
              return { type: "throw", arg: t5 };
            }
          }
          e3.wrap = h3;
          var u3 = "suspendedStart", l3 = "executing", f3 = "completed", p3 = {};
          function d3() {
          }
          function I3() {
          }
          function y3() {
          }
          var C3 = {};
          c3(C3, o2, function() {
            return this;
          });
          var m3 = Object.getPrototypeOf, B3 = m3 && m3(m3(N4([])));
          B3 && B3 !== r5 && n3.call(B3, o2) && (C3 = B3);
          var E3 = y3.prototype = d3.prototype = Object.create(C3);
          function v3(t4) {
            ["next", "throw", "return"].forEach(function(e4) {
              c3(t4, e4, function(t5) {
                return this._invoke(e4, t5);
              });
            });
          }
          function _3(t4, e4) {
            function r6(A4, i5, o3, s3) {
              var a4 = g3(t4[A4], t4, i5);
              if ("throw" !== a4.type) {
                var c4 = a4.arg, h4 = c4.value;
                return h4 && "object" == typeof h4 && n3.call(h4, "__await") ? e4.resolve(h4.__await).then(function(t5) {
                  r6("next", t5, o3, s3);
                }, function(t5) {
                  r6("throw", t5, o3, s3);
                }) : e4.resolve(h4).then(function(t5) {
                  c4.value = t5, o3(c4);
                }, function(t5) {
                  return r6("throw", t5, o3, s3);
                });
              }
              s3(a4.arg);
            }
            var i4;
            A3(this, "_invoke", { value: function(t5, n4) {
              function A4() {
                return new e4(function(e5, A5) {
                  r6(t5, n4, e5, A5);
                });
              }
              return i4 = i4 ? i4.then(A4, A4) : A4();
            } });
          }
          function Q3(e4, r6, n4) {
            var A4 = u3;
            return function(i4, o3) {
              if (A4 === l3)
                throw new Error("Generator is already running");
              if (A4 === f3) {
                if ("throw" === i4)
                  throw o3;
                return { value: t3, done: true };
              }
              for (n4.method = i4, n4.arg = o3; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var a4 = b3(s3, n4);
                  if (a4) {
                    if (a4 === p3)
                      continue;
                    return a4;
                  }
                }
                if ("next" === n4.method)
                  n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (A4 === u3)
                    throw A4 = f3, n4.arg;
                  n4.dispatchException(n4.arg);
                } else
                  "return" === n4.method && n4.abrupt("return", n4.arg);
                A4 = l3;
                var c4 = g3(e4, r6, n4);
                if ("normal" === c4.type) {
                  if (A4 = n4.done ? f3 : "suspendedYield", c4.arg === p3)
                    continue;
                  return { value: c4.arg, done: n4.done };
                }
                "throw" === c4.type && (A4 = f3, n4.method = "throw", n4.arg = c4.arg);
              }
            };
          }
          function b3(e4, r6) {
            var n4 = r6.method, A4 = e4.iterator[n4];
            if (A4 === t3)
              return r6.delegate = null, "throw" === n4 && e4.iterator.return && (r6.method = "return", r6.arg = t3, b3(e4, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), p3;
            var i4 = g3(A4, e4.iterator, r6.arg);
            if ("throw" === i4.type)
              return r6.method = "throw", r6.arg = i4.arg, r6.delegate = null, p3;
            var o3 = i4.arg;
            return o3 ? o3.done ? (r6[e4.resultName] = o3.value, r6.next = e4.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = t3), r6.delegate = null, p3) : o3 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, p3);
          }
          function k3(t4) {
            var e4 = { tryLoc: t4[0] };
            1 in t4 && (e4.catchLoc = t4[1]), 2 in t4 && (e4.finallyLoc = t4[2], e4.afterLoc = t4[3]), this.tryEntries.push(e4);
          }
          function D3(t4) {
            var e4 = t4.completion || {};
            e4.type = "normal", delete e4.arg, t4.completion = e4;
          }
          function S3(t4) {
            this.tryEntries = [{ tryLoc: "root" }], t4.forEach(k3, this), this.reset(true);
          }
          function N4(e4) {
            if (e4 || "" === e4) {
              var r6 = e4[o2];
              if (r6)
                return r6.call(e4);
              if ("function" == typeof e4.next)
                return e4;
              if (!isNaN(e4.length)) {
                var A4 = -1, i4 = function r7() {
                  for (; ++A4 < e4.length; )
                    if (n3.call(e4, A4))
                      return r7.value = e4[A4], r7.done = false, r7;
                  return r7.value = t3, r7.done = true, r7;
                };
                return i4.next = i4;
              }
            }
            throw new TypeError(typeof e4 + " is not iterable");
          }
          return I3.prototype = y3, A3(E3, "constructor", { value: y3, configurable: true }), A3(y3, "constructor", { value: I3, configurable: true }), I3.displayName = c3(y3, a3, "GeneratorFunction"), e3.isGeneratorFunction = function(t4) {
            var e4 = "function" == typeof t4 && t4.constructor;
            return !!e4 && (e4 === I3 || "GeneratorFunction" === (e4.displayName || e4.name));
          }, e3.mark = function(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, y3) : (t4.__proto__ = y3, c3(t4, a3, "GeneratorFunction")), t4.prototype = Object.create(E3), t4;
          }, e3.awrap = function(t4) {
            return { __await: t4 };
          }, v3(_3.prototype), c3(_3.prototype, s2, function() {
            return this;
          }), e3.AsyncIterator = _3, e3.async = function(t4, r6, n4, A4, i4) {
            void 0 === i4 && (i4 = Promise);
            var o3 = new _3(h3(t4, r6, n4, A4), i4);
            return e3.isGeneratorFunction(r6) ? o3 : o3.next().then(function(t5) {
              return t5.done ? t5.value : o3.next();
            });
          }, v3(E3), c3(E3, a3, "Generator"), c3(E3, o2, function() {
            return this;
          }), c3(E3, "toString", function() {
            return "[object Generator]";
          }), e3.keys = function(t4) {
            var e4 = Object(t4), r6 = [];
            for (var n4 in e4)
              r6.push(n4);
            return r6.reverse(), function t5() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in e4)
                  return t5.value = n5, t5.done = false, t5;
              }
              return t5.done = true, t5;
            };
          }, e3.values = N4, S3.prototype = { constructor: S3, reset: function(e4) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t3, this.done = false, this.delegate = null, this.method = "next", this.arg = t3, this.tryEntries.forEach(D3), !e4)
              for (var r6 in this)
                "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = t3);
          }, stop: function() {
            this.done = true;
            var t4 = this.tryEntries[0].completion;
            if ("throw" === t4.type)
              throw t4.arg;
            return this.rval;
          }, dispatchException: function(e4) {
            if (this.done)
              throw e4;
            var r6 = this;
            function A4(n4, A5) {
              return s3.type = "throw", s3.arg = e4, r6.next = n4, A5 && (r6.method = "next", r6.arg = t3), !!A5;
            }
            for (var i4 = this.tryEntries.length - 1; i4 >= 0; --i4) {
              var o3 = this.tryEntries[i4], s3 = o3.completion;
              if ("root" === o3.tryLoc)
                return A4("end");
              if (o3.tryLoc <= this.prev) {
                var a4 = n3.call(o3, "catchLoc"), c4 = n3.call(o3, "finallyLoc");
                if (a4 && c4) {
                  if (this.prev < o3.catchLoc)
                    return A4(o3.catchLoc, true);
                  if (this.prev < o3.finallyLoc)
                    return A4(o3.finallyLoc);
                } else if (a4) {
                  if (this.prev < o3.catchLoc)
                    return A4(o3.catchLoc, true);
                } else {
                  if (!c4)
                    throw new Error("try statement without catch or finally");
                  if (this.prev < o3.finallyLoc)
                    return A4(o3.finallyLoc);
                }
              }
            }
          }, abrupt: function(t4, e4) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var A4 = this.tryEntries[r6];
              if (A4.tryLoc <= this.prev && n3.call(A4, "finallyLoc") && this.prev < A4.finallyLoc) {
                var i4 = A4;
                break;
              }
            }
            i4 && ("break" === t4 || "continue" === t4) && i4.tryLoc <= e4 && e4 <= i4.finallyLoc && (i4 = null);
            var o3 = i4 ? i4.completion : {};
            return o3.type = t4, o3.arg = e4, i4 ? (this.method = "next", this.next = i4.finallyLoc, p3) : this.complete(o3);
          }, complete: function(t4, e4) {
            if ("throw" === t4.type)
              throw t4.arg;
            return "break" === t4.type || "continue" === t4.type ? this.next = t4.arg : "return" === t4.type ? (this.rval = this.arg = t4.arg, this.method = "return", this.next = "end") : "normal" === t4.type && e4 && (this.next = e4), p3;
          }, finish: function(t4) {
            for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
              var r6 = this.tryEntries[e4];
              if (r6.finallyLoc === t4)
                return this.complete(r6.completion, r6.afterLoc), D3(r6), p3;
            }
          }, catch: function(t4) {
            for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
              var r6 = this.tryEntries[e4];
              if (r6.tryLoc === t4) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var A4 = n4.arg;
                  D3(r6);
                }
                return A4;
              }
            }
            throw new Error("illegal catch attempt");
          }, delegateYield: function(e4, r6, n4) {
            return this.delegate = { iterator: N4(e4), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = t3), p3;
          } }, e3;
        }
        function v2(t3, e3, r5, n3, A3, i3, o2) {
          try {
            var s2 = t3[i3](o2), a3 = s2.value;
          } catch (t4) {
            return void r5(t4);
          }
          s2.done ? e3(a3) : Promise.resolve(a3).then(n3, A3);
        }
        function _2(t3) {
          return function() {
            var e3 = this, r5 = arguments;
            return new Promise(function(n3, A3) {
              var i3 = t3.apply(e3, r5);
              function o2(t4) {
                v2(i3, n3, A3, o2, s2, "next", t4);
              }
              function s2(t4) {
                v2(i3, n3, A3, o2, s2, "throw", t4);
              }
              o2(void 0);
            });
          };
        }
        function Q2() {
          return (Q2 = Object.assign ? Object.assign.bind() : function(t3) {
            for (var e3 = 1; e3 < arguments.length; e3++) {
              var r5 = arguments[e3];
              for (var n3 in r5)
                Object.prototype.hasOwnProperty.call(r5, n3) && (t3[n3] = r5[n3]);
            }
            return t3;
          }).apply(this, arguments);
        }
        var b2 = [{ name: "token", type: "address" }, { name: "amount", type: "uint256" }], k2 = { PermitTransferFrom: [{ name: "permitted", type: "TokenPermissions" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }], TokenPermissions: b2 }, D2 = { PermitBatchTransferFrom: [{ name: "permitted", type: "TokenPermissions[]" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }], TokenPermissions: b2 }, S2 = function() {
          function t3() {
          }
          return t3.getPermitData = function(t4, r5, n3, A3) {
            p2.gte(t4.deadline) || e2(false), f2.gte(t4.nonce) || e2(false);
            var i3 = I2(r5, n3);
            return function(t5) {
              return !Array.isArray(t5.permitted);
            }(t4) ? (N3(t4.permitted), { domain: i3, types: A3 ? function(t5) {
              return Q2({ PermitWitnessTransferFrom: [{ name: "permitted", type: "TokenPermissions" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }, { name: "witness", type: t5.witnessTypeName }], TokenPermissions: b2 }, t5.witnessType);
            }(A3) : k2, values: A3 ? Object.assign(t4, { witness: A3.witness }) : t4 }) : (t4.permitted.forEach(N3), { domain: i3, types: A3 ? function(t5) {
              return Q2({ PermitBatchWitnessTransferFrom: [{ name: "permitted", type: "TokenPermissions[]" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }, { name: "witness", type: t5.witnessTypeName }], TokenPermissions: b2 }, t5.witnessType);
            }(A3) : D2, values: A3 ? Object.assign(t4, { witness: A3.witness }) : t4 });
          }, t3.hash = function(e3, n3, A3, i3) {
            var o2 = t3.getPermitData(e3, n3, A3, i3);
            return r4._TypedDataEncoder.hash(o2.domain, o2.types, o2.values);
          }, t3;
        }();
        function N3(t3) {
          l2.gte(t3.amount) || e2(false);
        }
        var M2 = [{ inputs: [], name: "AllowanceExpired", type: "error" }, { inputs: [], name: "ExcessiveInvalidation", type: "error" }, { inputs: [], name: "InsufficientAllowance", type: "error" }, { inputs: [], name: "InvalidAmount", type: "error" }, { inputs: [], name: "InvalidContractSignature", type: "error" }, { inputs: [], name: "InvalidNonce", type: "error" }, { inputs: [], name: "InvalidSignature", type: "error" }, { inputs: [], name: "InvalidSigner", type: "error" }, { inputs: [], name: "LengthMismatch", type: "error" }, { inputs: [], name: "NotSpender", type: "error" }, { inputs: [], name: "SignatureExpired", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: true, internalType: "address", name: "token", type: "address" }, { indexed: true, internalType: "address", name: "spender", type: "address" }, { indexed: false, internalType: "uint160", name: "amount", type: "uint160" }, { indexed: false, internalType: "uint48", name: "expiration", type: "uint48" }], name: "Approval", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: false, internalType: "address", name: "token", type: "address" }, { indexed: false, internalType: "address", name: "spender", type: "address" }], name: "Lockdown", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: true, internalType: "address", name: "token", type: "address" }, { indexed: true, internalType: "address", name: "spender", type: "address" }, { indexed: false, internalType: "uint48", name: "newNonce", type: "uint48" }, { indexed: false, internalType: "uint48", name: "oldNonce", type: "uint48" }], name: "NonceInvalidation", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: false, internalType: "uint256", name: "word", type: "uint256" }, { indexed: false, internalType: "uint256", name: "mask", type: "uint256" }], name: "UnorderedNonceInvalidation", type: "event" }, { inputs: [], name: "DOMAIN_SEPARATOR", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }], name: "allowance", outputs: [{ internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }], name: "approve", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint48", name: "newNonce", type: "uint48" }], name: "invalidateNonces", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "wordPos", type: "uint256" }, { internalType: "uint256", name: "mask", type: "uint256" }], name: "invalidateUnorderedNonces", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }], internalType: "struct IAllowanceTransfer.TokenSpenderPair[]", name: "approvals", type: "tuple[]" }], name: "lockdown", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }], name: "nonceBitmap", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], internalType: "struct IAllowanceTransfer.PermitDetails[]", name: "details", type: "tuple[]" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint256", name: "sigDeadline", type: "uint256" }], internalType: "struct IAllowanceTransfer.PermitBatch", name: "permitBatch", type: "tuple" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], internalType: "struct IAllowanceTransfer.PermitDetails", name: "details", type: "tuple" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint256", name: "sigDeadline", type: "uint256" }], internalType: "struct IAllowanceTransfer.PermitSingle", name: "permitSingle", type: "tuple" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions[]", name: "permitted", type: "tuple[]" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitBatchTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { components: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }], internalType: "struct ISignatureTransfer.SignatureTransferDetails[]", name: "transferDetails", type: "tuple[]" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions", name: "permitted", type: "tuple" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions", name: "permitted", type: "tuple" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }, { internalType: "bytes32", name: "witness", type: "bytes32" }, { internalType: "string", name: "witnessTypeName", type: "string" }, { internalType: "string", name: "witnessType", type: "string" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitWitnessTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions[]", name: "permitted", type: "tuple[]" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitBatchTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { components: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }], internalType: "struct ISignatureTransfer.SignatureTransferDetails[]", name: "transferDetails", type: "tuple[]" }, { internalType: "bytes32", name: "witness", type: "bytes32" }, { internalType: "string", name: "witnessTypeName", type: "string" }, { internalType: "string", name: "witnessType", type: "string" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitWitnessTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }], name: "transferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "address", name: "to", type: "address" }], internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]", name: "transferDetails", type: "tuple[]" }], name: "transferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }];
        return o.AllowanceProvider = function() {
          function t3(t4, e4) {
            this.provider = t4, this.permit2Address = e4, this.permit2 = new A2.Contract(this.permit2Address, M2, this.provider);
          }
          var e3 = t3.prototype;
          return e3.getAllowanceData = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.permit2.allowance(r5, e4, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getAllowance = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.amount);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getNonce = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.nonce);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getExpiration = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.expiration);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), t3;
        }(), o.AllowanceTransfer = B2, o.InstantExpiration = d2, o.MaxAllowanceExpiration = g2, o.MaxAllowanceTransferAmount = h2, o.MaxOrderedNonce = u2, o.MaxSigDeadline = p2, o.MaxSignatureTransferAmount = l2, o.MaxUint160 = a2, o.MaxUint256 = c2, o.MaxUint48 = i2, o.MaxUnorderedNonce = f2, o.PERMIT2_ADDRESS = "0x000000000022D473030F116dDEE9F6B43aC78BA3", o.SignatureTransfer = S2, o.permit2Address = function(t3) {
          return 324 === t3 ? "0x0000000000225e31D15943971F47aD3022F714Fa" : "0x000000000022D473030F116dDEE9F6B43aC78BA3";
        }, o;
      }() : i.exports = function() {
        if (un)
          return ln;
        un = 1, Object.defineProperty(ln, "__esModule", { value: true });
        var t2, e2 = (t2 = s()) && "object" == typeof t2 && "default" in t2 ? t2.default : t2, r4 = Me, n2 = xe, A2 = gn, i2 = "0x000000000022D473030F116dDEE9F6B43aC78BA3", o2 = n2.BigNumber.from("0xffffffffffff"), a2 = n2.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffff"), c2 = n2.BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), h2 = a2, g2 = o2, u2 = o2, l2 = c2, f2 = c2, p2 = c2, d2 = n2.BigNumber.from(0);
        function I2(t3, e3) {
          return { name: "Permit2", chainId: e3, verifyingContract: t3 };
        }
        var y2 = [{ name: "token", type: "address" }, { name: "amount", type: "uint160" }, { name: "expiration", type: "uint48" }, { name: "nonce", type: "uint48" }], C2 = { PermitSingle: [{ name: "details", type: "PermitDetails" }, { name: "spender", type: "address" }, { name: "sigDeadline", type: "uint256" }], PermitDetails: y2 }, m2 = { PermitBatch: [{ name: "details", type: "PermitDetails[]" }, { name: "spender", type: "address" }, { name: "sigDeadline", type: "uint256" }], PermitDetails: y2 }, B2 = function() {
          function t3() {
          }
          return t3.getPermitData = function(t4, r5, n3) {
            p2.gte(t4.sigDeadline) || e2(false, "SIG_DEADLINE_OUT_OF_RANGE");
            var A3 = I2(r5, n3);
            return function(t5) {
              return !Array.isArray(t5.details);
            }(t4) ? (E2(t4.details), { domain: A3, types: C2, values: t4 }) : (t4.details.forEach(E2), { domain: A3, types: m2, values: t4 });
          }, t3.hash = function(e3, n3, A3) {
            var i3 = t3.getPermitData(e3, n3, A3), o3 = i3.domain, s2 = i3.types, a3 = i3.values;
            return r4._TypedDataEncoder.hash(o3, s2, a3);
          }, t3;
        }();
        function E2(t3) {
          u2.gte(t3.nonce) || e2(false, "NONCE_OUT_OF_RANGE"), h2.gte(t3.amount) || e2(false, "AMOUNT_OUT_OF_RANGE"), g2.gte(t3.expiration) || e2(false, "EXPIRATION_OUT_OF_RANGE");
        }
        function w2() {
          w2 = function() {
            return e3;
          };
          var t3, e3 = {}, r5 = Object.prototype, n3 = r5.hasOwnProperty, A3 = Object.defineProperty || function(t4, e4, r6) {
            t4[e4] = r6.value;
          }, i3 = "function" == typeof Symbol ? Symbol : {}, o3 = i3.iterator || "@@iterator", s2 = i3.asyncIterator || "@@asyncIterator", a3 = i3.toStringTag || "@@toStringTag";
          function c3(t4, e4, r6) {
            return Object.defineProperty(t4, e4, { value: r6, enumerable: true, configurable: true, writable: true }), t4[e4];
          }
          try {
            c3({}, "");
          } catch (t4) {
            c3 = function(t5, e4, r6) {
              return t5[e4] = r6;
            };
          }
          function h3(t4, e4, r6, n4) {
            var i4 = e4 && e4.prototype instanceof I3 ? e4 : I3, o4 = Object.create(i4.prototype), s3 = new N4(n4 || []);
            return A3(o4, "_invoke", { value: b3(t4, r6, s3) }), o4;
          }
          function g3(t4, e4, r6) {
            try {
              return { type: "normal", arg: t4.call(e4, r6) };
            } catch (t5) {
              return { type: "throw", arg: t5 };
            }
          }
          e3.wrap = h3;
          var u3 = "suspendedStart", l3 = "suspendedYield", f3 = "executing", p3 = "completed", d3 = {};
          function I3() {
          }
          function y3() {
          }
          function C3() {
          }
          var m3 = {};
          c3(m3, o3, function() {
            return this;
          });
          var B3 = Object.getPrototypeOf, E3 = B3 && B3(B3(M3([])));
          E3 && E3 !== r5 && n3.call(E3, o3) && (m3 = E3);
          var v3 = C3.prototype = I3.prototype = Object.create(m3);
          function _3(t4) {
            ["next", "throw", "return"].forEach(function(e4) {
              c3(t4, e4, function(t5) {
                return this._invoke(e4, t5);
              });
            });
          }
          function Q3(t4, e4) {
            function r6(A4, i5, o4, s3) {
              var a4 = g3(t4[A4], t4, i5);
              if ("throw" !== a4.type) {
                var c4 = a4.arg, h4 = c4.value;
                return h4 && "object" == typeof h4 && n3.call(h4, "__await") ? e4.resolve(h4.__await).then(function(t5) {
                  r6("next", t5, o4, s3);
                }, function(t5) {
                  r6("throw", t5, o4, s3);
                }) : e4.resolve(h4).then(function(t5) {
                  c4.value = t5, o4(c4);
                }, function(t5) {
                  return r6("throw", t5, o4, s3);
                });
              }
              s3(a4.arg);
            }
            var i4;
            A3(this, "_invoke", { value: function(t5, n4) {
              function A4() {
                return new e4(function(e5, A5) {
                  r6(t5, n4, e5, A5);
                });
              }
              return i4 = i4 ? i4.then(A4, A4) : A4();
            } });
          }
          function b3(e4, r6, n4) {
            var A4 = u3;
            return function(i4, o4) {
              if (A4 === f3)
                throw new Error("Generator is already running");
              if (A4 === p3) {
                if ("throw" === i4)
                  throw o4;
                return { value: t3, done: true };
              }
              for (n4.method = i4, n4.arg = o4; ; ) {
                var s3 = n4.delegate;
                if (s3) {
                  var a4 = k3(s3, n4);
                  if (a4) {
                    if (a4 === d3)
                      continue;
                    return a4;
                  }
                }
                if ("next" === n4.method)
                  n4.sent = n4._sent = n4.arg;
                else if ("throw" === n4.method) {
                  if (A4 === u3)
                    throw A4 = p3, n4.arg;
                  n4.dispatchException(n4.arg);
                } else
                  "return" === n4.method && n4.abrupt("return", n4.arg);
                A4 = f3;
                var c4 = g3(e4, r6, n4);
                if ("normal" === c4.type) {
                  if (A4 = n4.done ? p3 : l3, c4.arg === d3)
                    continue;
                  return { value: c4.arg, done: n4.done };
                }
                "throw" === c4.type && (A4 = p3, n4.method = "throw", n4.arg = c4.arg);
              }
            };
          }
          function k3(e4, r6) {
            var n4 = r6.method, A4 = e4.iterator[n4];
            if (A4 === t3)
              return r6.delegate = null, "throw" === n4 && e4.iterator.return && (r6.method = "return", r6.arg = t3, k3(e4, r6), "throw" === r6.method) || "return" !== n4 && (r6.method = "throw", r6.arg = new TypeError("The iterator does not provide a '" + n4 + "' method")), d3;
            var i4 = g3(A4, e4.iterator, r6.arg);
            if ("throw" === i4.type)
              return r6.method = "throw", r6.arg = i4.arg, r6.delegate = null, d3;
            var o4 = i4.arg;
            return o4 ? o4.done ? (r6[e4.resultName] = o4.value, r6.next = e4.nextLoc, "return" !== r6.method && (r6.method = "next", r6.arg = t3), r6.delegate = null, d3) : o4 : (r6.method = "throw", r6.arg = new TypeError("iterator result is not an object"), r6.delegate = null, d3);
          }
          function D3(t4) {
            var e4 = { tryLoc: t4[0] };
            1 in t4 && (e4.catchLoc = t4[1]), 2 in t4 && (e4.finallyLoc = t4[2], e4.afterLoc = t4[3]), this.tryEntries.push(e4);
          }
          function S3(t4) {
            var e4 = t4.completion || {};
            e4.type = "normal", delete e4.arg, t4.completion = e4;
          }
          function N4(t4) {
            this.tryEntries = [{ tryLoc: "root" }], t4.forEach(D3, this), this.reset(true);
          }
          function M3(e4) {
            if (e4 || "" === e4) {
              var r6 = e4[o3];
              if (r6)
                return r6.call(e4);
              if ("function" == typeof e4.next)
                return e4;
              if (!isNaN(e4.length)) {
                var A4 = -1, i4 = function r7() {
                  for (; ++A4 < e4.length; )
                    if (n3.call(e4, A4))
                      return r7.value = e4[A4], r7.done = false, r7;
                  return r7.value = t3, r7.done = true, r7;
                };
                return i4.next = i4;
              }
            }
            throw new TypeError(typeof e4 + " is not iterable");
          }
          return y3.prototype = C3, A3(v3, "constructor", { value: C3, configurable: true }), A3(C3, "constructor", { value: y3, configurable: true }), y3.displayName = c3(C3, a3, "GeneratorFunction"), e3.isGeneratorFunction = function(t4) {
            var e4 = "function" == typeof t4 && t4.constructor;
            return !!e4 && (e4 === y3 || "GeneratorFunction" === (e4.displayName || e4.name));
          }, e3.mark = function(t4) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t4, C3) : (t4.__proto__ = C3, c3(t4, a3, "GeneratorFunction")), t4.prototype = Object.create(v3), t4;
          }, e3.awrap = function(t4) {
            return { __await: t4 };
          }, _3(Q3.prototype), c3(Q3.prototype, s2, function() {
            return this;
          }), e3.AsyncIterator = Q3, e3.async = function(t4, r6, n4, A4, i4) {
            void 0 === i4 && (i4 = Promise);
            var o4 = new Q3(h3(t4, r6, n4, A4), i4);
            return e3.isGeneratorFunction(r6) ? o4 : o4.next().then(function(t5) {
              return t5.done ? t5.value : o4.next();
            });
          }, _3(v3), c3(v3, a3, "Generator"), c3(v3, o3, function() {
            return this;
          }), c3(v3, "toString", function() {
            return "[object Generator]";
          }), e3.keys = function(t4) {
            var e4 = Object(t4), r6 = [];
            for (var n4 in e4)
              r6.push(n4);
            return r6.reverse(), function t5() {
              for (; r6.length; ) {
                var n5 = r6.pop();
                if (n5 in e4)
                  return t5.value = n5, t5.done = false, t5;
              }
              return t5.done = true, t5;
            };
          }, e3.values = M3, N4.prototype = { constructor: N4, reset: function(e4) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t3, this.done = false, this.delegate = null, this.method = "next", this.arg = t3, this.tryEntries.forEach(S3), !e4)
              for (var r6 in this)
                "t" === r6.charAt(0) && n3.call(this, r6) && !isNaN(+r6.slice(1)) && (this[r6] = t3);
          }, stop: function() {
            this.done = true;
            var t4 = this.tryEntries[0].completion;
            if ("throw" === t4.type)
              throw t4.arg;
            return this.rval;
          }, dispatchException: function(e4) {
            if (this.done)
              throw e4;
            var r6 = this;
            function A4(n4, A5) {
              return s3.type = "throw", s3.arg = e4, r6.next = n4, A5 && (r6.method = "next", r6.arg = t3), !!A5;
            }
            for (var i4 = this.tryEntries.length - 1; i4 >= 0; --i4) {
              var o4 = this.tryEntries[i4], s3 = o4.completion;
              if ("root" === o4.tryLoc)
                return A4("end");
              if (o4.tryLoc <= this.prev) {
                var a4 = n3.call(o4, "catchLoc"), c4 = n3.call(o4, "finallyLoc");
                if (a4 && c4) {
                  if (this.prev < o4.catchLoc)
                    return A4(o4.catchLoc, true);
                  if (this.prev < o4.finallyLoc)
                    return A4(o4.finallyLoc);
                } else if (a4) {
                  if (this.prev < o4.catchLoc)
                    return A4(o4.catchLoc, true);
                } else {
                  if (!c4)
                    throw new Error("try statement without catch or finally");
                  if (this.prev < o4.finallyLoc)
                    return A4(o4.finallyLoc);
                }
              }
            }
          }, abrupt: function(t4, e4) {
            for (var r6 = this.tryEntries.length - 1; r6 >= 0; --r6) {
              var A4 = this.tryEntries[r6];
              if (A4.tryLoc <= this.prev && n3.call(A4, "finallyLoc") && this.prev < A4.finallyLoc) {
                var i4 = A4;
                break;
              }
            }
            i4 && ("break" === t4 || "continue" === t4) && i4.tryLoc <= e4 && e4 <= i4.finallyLoc && (i4 = null);
            var o4 = i4 ? i4.completion : {};
            return o4.type = t4, o4.arg = e4, i4 ? (this.method = "next", this.next = i4.finallyLoc, d3) : this.complete(o4);
          }, complete: function(t4, e4) {
            if ("throw" === t4.type)
              throw t4.arg;
            return "break" === t4.type || "continue" === t4.type ? this.next = t4.arg : "return" === t4.type ? (this.rval = this.arg = t4.arg, this.method = "return", this.next = "end") : "normal" === t4.type && e4 && (this.next = e4), d3;
          }, finish: function(t4) {
            for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
              var r6 = this.tryEntries[e4];
              if (r6.finallyLoc === t4)
                return this.complete(r6.completion, r6.afterLoc), S3(r6), d3;
            }
          }, catch: function(t4) {
            for (var e4 = this.tryEntries.length - 1; e4 >= 0; --e4) {
              var r6 = this.tryEntries[e4];
              if (r6.tryLoc === t4) {
                var n4 = r6.completion;
                if ("throw" === n4.type) {
                  var A4 = n4.arg;
                  S3(r6);
                }
                return A4;
              }
            }
            throw new Error("illegal catch attempt");
          }, delegateYield: function(e4, r6, n4) {
            return this.delegate = { iterator: M3(e4), resultName: r6, nextLoc: n4 }, "next" === this.method && (this.arg = t3), d3;
          } }, e3;
        }
        function v2(t3, e3, r5, n3, A3, i3, o3) {
          try {
            var s2 = t3[i3](o3), a3 = s2.value;
          } catch (t4) {
            return void r5(t4);
          }
          s2.done ? e3(a3) : Promise.resolve(a3).then(n3, A3);
        }
        function _2(t3) {
          return function() {
            var e3 = this, r5 = arguments;
            return new Promise(function(n3, A3) {
              var i3 = t3.apply(e3, r5);
              function o3(t4) {
                v2(i3, n3, A3, o3, s2, "next", t4);
              }
              function s2(t4) {
                v2(i3, n3, A3, o3, s2, "throw", t4);
              }
              o3(void 0);
            });
          };
        }
        function Q2() {
          return Q2 = Object.assign ? Object.assign.bind() : function(t3) {
            for (var e3 = 1; e3 < arguments.length; e3++) {
              var r5 = arguments[e3];
              for (var n3 in r5)
                Object.prototype.hasOwnProperty.call(r5, n3) && (t3[n3] = r5[n3]);
            }
            return t3;
          }, Q2.apply(this, arguments);
        }
        var b2 = [{ name: "token", type: "address" }, { name: "amount", type: "uint256" }], k2 = { PermitTransferFrom: [{ name: "permitted", type: "TokenPermissions" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }], TokenPermissions: b2 }, D2 = { PermitBatchTransferFrom: [{ name: "permitted", type: "TokenPermissions[]" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }], TokenPermissions: b2 }, S2 = function() {
          function t3() {
          }
          return t3.getPermitData = function(t4, r5, n3, A3) {
            p2.gte(t4.deadline) || e2(false, "SIG_DEADLINE_OUT_OF_RANGE"), f2.gte(t4.nonce) || e2(false, "NONCE_OUT_OF_RANGE");
            var i3 = I2(r5, n3);
            if (function(t5) {
              return !Array.isArray(t5.permitted);
            }(t4)) {
              N3(t4.permitted);
              var o3 = A3 ? function(t5) {
                return Q2({ PermitWitnessTransferFrom: [{ name: "permitted", type: "TokenPermissions" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }, { name: "witness", type: t5.witnessTypeName }], TokenPermissions: b2 }, t5.witnessType);
              }(A3) : k2;
              return { domain: i3, types: o3, values: A3 ? Object.assign(t4, { witness: A3.witness }) : t4 };
            }
            t4.permitted.forEach(N3);
            var s2 = A3 ? function(t5) {
              return Q2({ PermitBatchWitnessTransferFrom: [{ name: "permitted", type: "TokenPermissions[]" }, { name: "spender", type: "address" }, { name: "nonce", type: "uint256" }, { name: "deadline", type: "uint256" }, { name: "witness", type: t5.witnessTypeName }], TokenPermissions: b2 }, t5.witnessType);
            }(A3) : D2;
            return { domain: i3, types: s2, values: A3 ? Object.assign(t4, { witness: A3.witness }) : t4 };
          }, t3.hash = function(e3, n3, A3, i3) {
            var o3 = t3.getPermitData(e3, n3, A3, i3), s2 = o3.domain, a3 = o3.types, c3 = o3.values;
            return r4._TypedDataEncoder.hash(s2, a3, c3);
          }, t3;
        }();
        function N3(t3) {
          l2.gte(t3.amount) || e2(false, "AMOUNT_OUT_OF_RANGE");
        }
        var M2 = [{ inputs: [], name: "AllowanceExpired", type: "error" }, { inputs: [], name: "ExcessiveInvalidation", type: "error" }, { inputs: [], name: "InsufficientAllowance", type: "error" }, { inputs: [], name: "InvalidAmount", type: "error" }, { inputs: [], name: "InvalidContractSignature", type: "error" }, { inputs: [], name: "InvalidNonce", type: "error" }, { inputs: [], name: "InvalidSignature", type: "error" }, { inputs: [], name: "InvalidSigner", type: "error" }, { inputs: [], name: "LengthMismatch", type: "error" }, { inputs: [], name: "NotSpender", type: "error" }, { inputs: [], name: "SignatureExpired", type: "error" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: true, internalType: "address", name: "token", type: "address" }, { indexed: true, internalType: "address", name: "spender", type: "address" }, { indexed: false, internalType: "uint160", name: "amount", type: "uint160" }, { indexed: false, internalType: "uint48", name: "expiration", type: "uint48" }], name: "Approval", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: false, internalType: "address", name: "token", type: "address" }, { indexed: false, internalType: "address", name: "spender", type: "address" }], name: "Lockdown", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: true, internalType: "address", name: "token", type: "address" }, { indexed: true, internalType: "address", name: "spender", type: "address" }, { indexed: false, internalType: "uint48", name: "newNonce", type: "uint48" }, { indexed: false, internalType: "uint48", name: "oldNonce", type: "uint48" }], name: "NonceInvalidation", type: "event" }, { anonymous: false, inputs: [{ indexed: true, internalType: "address", name: "owner", type: "address" }, { indexed: false, internalType: "uint256", name: "word", type: "uint256" }, { indexed: false, internalType: "uint256", name: "mask", type: "uint256" }], name: "UnorderedNonceInvalidation", type: "event" }, { inputs: [], name: "DOMAIN_SEPARATOR", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }, { internalType: "address", name: "", type: "address" }], name: "allowance", outputs: [{ internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }], name: "approve", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint48", name: "newNonce", type: "uint48" }], name: "invalidateNonces", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "uint256", name: "wordPos", type: "uint256" }, { internalType: "uint256", name: "mask", type: "uint256" }], name: "invalidateUnorderedNonces", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "spender", type: "address" }], internalType: "struct IAllowanceTransfer.TokenSpenderPair[]", name: "approvals", type: "tuple[]" }], name: "lockdown", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "", type: "address" }, { internalType: "uint256", name: "", type: "uint256" }], name: "nonceBitmap", outputs: [{ internalType: "uint256", name: "", type: "uint256" }], stateMutability: "view", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], internalType: "struct IAllowanceTransfer.PermitDetails[]", name: "details", type: "tuple[]" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint256", name: "sigDeadline", type: "uint256" }], internalType: "struct IAllowanceTransfer.PermitBatch", name: "permitBatch", type: "tuple" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "owner", type: "address" }, { components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "uint48", name: "expiration", type: "uint48" }, { internalType: "uint48", name: "nonce", type: "uint48" }], internalType: "struct IAllowanceTransfer.PermitDetails", name: "details", type: "tuple" }, { internalType: "address", name: "spender", type: "address" }, { internalType: "uint256", name: "sigDeadline", type: "uint256" }], internalType: "struct IAllowanceTransfer.PermitSingle", name: "permitSingle", type: "tuple" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permit", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions[]", name: "permitted", type: "tuple[]" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitBatchTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { components: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }], internalType: "struct ISignatureTransfer.SignatureTransferDetails[]", name: "transferDetails", type: "tuple[]" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions", name: "permitted", type: "tuple" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions", name: "permitted", type: "tuple" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }, { internalType: "bytes32", name: "witness", type: "bytes32" }, { internalType: "string", name: "witnessTypeName", type: "string" }, { internalType: "string", name: "witnessType", type: "string" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitWitnessTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ components: [{ components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint256", name: "amount", type: "uint256" }], internalType: "struct ISignatureTransfer.TokenPermissions[]", name: "permitted", type: "tuple[]" }, { internalType: "uint256", name: "nonce", type: "uint256" }, { internalType: "uint256", name: "deadline", type: "uint256" }], internalType: "struct ISignatureTransfer.PermitBatchTransferFrom", name: "permit", type: "tuple" }, { internalType: "address", name: "owner", type: "address" }, { components: [{ internalType: "address", name: "to", type: "address" }, { internalType: "uint256", name: "requestedAmount", type: "uint256" }], internalType: "struct ISignatureTransfer.SignatureTransferDetails[]", name: "transferDetails", type: "tuple[]" }, { internalType: "bytes32", name: "witness", type: "bytes32" }, { internalType: "string", name: "witnessTypeName", type: "string" }, { internalType: "string", name: "witnessType", type: "string" }, { internalType: "bytes", name: "signature", type: "bytes" }], name: "permitWitnessTransferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "token", type: "address" }, { internalType: "address", name: "from", type: "address" }, { internalType: "address", name: "to", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }], name: "transferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }, { inputs: [{ internalType: "address", name: "from", type: "address" }, { components: [{ internalType: "address", name: "token", type: "address" }, { internalType: "uint160", name: "amount", type: "uint160" }, { internalType: "address", name: "to", type: "address" }], internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]", name: "transferDetails", type: "tuple[]" }], name: "transferFrom", outputs: [], stateMutability: "nonpayable", type: "function" }], x2 = function() {
          function t3(t4, e4) {
            this.provider = t4, this.permit2Address = e4, this.permit2 = new A2.Contract(this.permit2Address, M2, this.provider);
          }
          var e3 = t3.prototype;
          return e3.getAllowanceData = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.permit2.allowance(r5, e4, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getAllowance = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.amount);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getNonce = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.nonce);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), e3.getExpiration = function() {
            var t4 = _2(w2().mark(function t5(e4, r5, n3) {
              return w2().wrap(function(t6) {
                for (; ; )
                  switch (t6.prev = t6.next) {
                    case 0:
                      return t6.next = 2, this.getAllowanceData(e4, r5, n3);
                    case 2:
                      return t6.abrupt("return", t6.sent.expiration);
                    case 3:
                    case "end":
                      return t6.stop();
                  }
              }, t5, this);
            }));
            return function(e4, r5, n3) {
              return t4.apply(this, arguments);
            };
          }(), t3;
        }();
        return ln.AllowanceProvider = x2, ln.AllowanceTransfer = B2, ln.InstantExpiration = d2, ln.MaxAllowanceExpiration = g2, ln.MaxAllowanceTransferAmount = h2, ln.MaxOrderedNonce = u2, ln.MaxSigDeadline = p2, ln.MaxSignatureTransferAmount = l2, ln.MaxUint160 = a2, ln.MaxUint256 = c2, ln.MaxUint48 = o2, ln.MaxUnorderedNonce = f2, ln.PERMIT2_ADDRESS = i2, ln.SignatureTransfer = S2, ln.permit2Address = function(t3) {
          return 324 === t3 ? "0x0000000000225e31D15943971F47aD3022F714Fa" : i2;
        }, ln;
      }();
      var fn = i.exports;
      var pn = "6.11.1";
      function dn(t2, e2, r4) {
        const n2 = e2.split("|").map((t3) => t3.trim());
        for (let r5 = 0; r5 < n2.length; r5++)
          switch (e2) {
            case "any":
              return;
            case "bigint":
            case "boolean":
            case "number":
            case "string":
              if (typeof t2 === e2)
                return;
          }
        const A2 = new Error(`invalid value for type ${e2}`);
        throw A2.code = "INVALID_ARGUMENT", A2.argument = `value.${r4}`, A2.value = t2, A2;
      }
      async function In(t2) {
        const e2 = Object.keys(t2);
        return (await Promise.all(e2.map((e3) => Promise.resolve(t2[e3])))).reduce((t3, r4, n2) => (t3[e2[n2]] = r4, t3), {});
      }
      function yn(t2, e2, r4) {
        for (let n2 in e2) {
          let A2 = e2[n2];
          const i2 = r4 ? r4[n2] : null;
          i2 && dn(A2, i2, n2), Object.defineProperty(t2, n2, { enumerable: true, value: A2, writable: false });
        }
      }
      function Cn(t2) {
        if (null == t2)
          return "null";
        if (Array.isArray(t2))
          return "[ " + t2.map(Cn).join(", ") + " ]";
        if (t2 instanceof Uint8Array) {
          const e2 = "0123456789abcdef";
          let r4 = "0x";
          for (let n2 = 0; n2 < t2.length; n2++)
            r4 += e2[t2[n2] >> 4], r4 += e2[15 & t2[n2]];
          return r4;
        }
        if ("object" == typeof t2 && "function" == typeof t2.toJSON)
          return Cn(t2.toJSON());
        switch (typeof t2) {
          case "boolean":
          case "symbol":
          case "number":
            return t2.toString();
          case "bigint":
            return BigInt(t2).toString();
          case "string":
            return JSON.stringify(t2);
          case "object": {
            const e2 = Object.keys(t2);
            return e2.sort(), "{ " + e2.map((e3) => `${Cn(e3)}: ${Cn(t2[e3])}`).join(", ") + " }";
          }
        }
        return "[ COULD NOT SERIALIZE ]";
      }
      function mn(t2, e2) {
        return t2 && t2.code === e2;
      }
      function Bn(t2) {
        return mn(t2, "CALL_EXCEPTION");
      }
      function En(t2, e2, r4) {
        let n2, A2 = t2;
        {
          const n3 = [];
          if (r4) {
            if ("message" in r4 || "code" in r4 || "name" in r4)
              throw new Error(`value will overwrite populated values: ${Cn(r4)}`);
            for (const t3 in r4) {
              if ("shortMessage" === t3)
                continue;
              const e3 = r4[t3];
              n3.push(t3 + "=" + Cn(e3));
            }
          }
          n3.push(`code=${e2}`), n3.push(`version=${pn}`), n3.length && (t2 += " (" + n3.join(", ") + ")");
        }
        switch (e2) {
          case "INVALID_ARGUMENT":
            n2 = new TypeError(t2);
            break;
          case "NUMERIC_FAULT":
          case "BUFFER_OVERRUN":
            n2 = new RangeError(t2);
            break;
          default:
            n2 = new Error(t2);
        }
        return yn(n2, { code: e2 }), r4 && Object.assign(n2, r4), null == n2.shortMessage && yn(n2, { shortMessage: A2 }), n2;
      }
      function wn(t2, e2, r4, n2) {
        if (!t2)
          throw En(e2, r4, n2);
      }
      function vn(t2, e2, r4, n2) {
        wn(t2, e2, "INVALID_ARGUMENT", { argument: r4, value: n2 });
      }
      function _n(t2, e2, r4) {
        null == r4 && (r4 = ""), r4 && (r4 = ": " + r4), wn(t2 >= e2, "missing arguemnt" + r4, "MISSING_ARGUMENT", { count: t2, expectedCount: e2 }), wn(t2 <= e2, "too many arguments" + r4, "UNEXPECTED_ARGUMENT", { count: t2, expectedCount: e2 });
      }
      var Qn = ["NFD", "NFC", "NFKD", "NFKC"].reduce((t2, e2) => {
        try {
          if ("test" !== "test".normalize(e2))
            throw new Error("bad");
          if ("NFD" === e2) {
            const t3 = String.fromCharCode(233).normalize("NFD");
            if (t3 !== String.fromCharCode(101, 769))
              throw new Error("broken");
          }
          t2.push(e2);
        } catch (t3) {
        }
        return t2;
      }, []);
      function bn(t2) {
        wn(Qn.indexOf(t2) >= 0, "platform missing String.prototype.normalize", "UNSUPPORTED_OPERATION", { operation: "String.prototype.normalize", info: { form: t2 } });
      }
      function kn(t2, e2, r4) {
        if (null == r4 && (r4 = ""), t2 !== e2) {
          let t3 = r4, e3 = "new";
          r4 && (t3 += ".", e3 += " " + r4), wn(false, `private constructor; use ${t3}from* methods`, "UNSUPPORTED_OPERATION", { operation: e3 });
        }
      }
      function Dn(t2, e2, r4) {
        if (t2 instanceof Uint8Array)
          return r4 ? new Uint8Array(t2) : t2;
        if ("string" == typeof t2 && t2.match(/^0x([0-9a-f][0-9a-f])*$/i)) {
          const e3 = new Uint8Array((t2.length - 2) / 2);
          let r5 = 2;
          for (let n2 = 0; n2 < e3.length; n2++)
            e3[n2] = parseInt(t2.substring(r5, r5 + 2), 16), r5 += 2;
          return e3;
        }
        vn(false, "invalid BytesLike value", e2 || "value", t2);
      }
      function Sn(t2, e2) {
        return Dn(t2, e2, false);
      }
      function Nn(t2, e2) {
        return Dn(t2, e2, true);
      }
      function Mn(t2, e2) {
        return !("string" != typeof t2 || !t2.match(/^0x[0-9A-Fa-f]*$/)) && (("number" != typeof e2 || t2.length === 2 + 2 * e2) && (true !== e2 || t2.length % 2 == 0));
      }
      function xn(t2) {
        return Mn(t2, true) || t2 instanceof Uint8Array;
      }
      var Fn = "0123456789abcdef";
      function Pn(t2) {
        const e2 = Sn(t2);
        let r4 = "0x";
        for (let t3 = 0; t3 < e2.length; t3++) {
          const n2 = e2[t3];
          r4 += Fn[(240 & n2) >> 4] + Fn[15 & n2];
        }
        return r4;
      }
      function Tn(t2) {
        return "0x" + t2.map((t3) => Pn(t3).substring(2)).join("");
      }
      function Rn(t2) {
        return Mn(t2, true) ? (t2.length - 2) / 2 : Sn(t2).length;
      }
      function Un(t2, e2, r4) {
        const n2 = Sn(t2);
        return null != r4 && r4 > n2.length && wn(false, "cannot slice beyond data bounds", "BUFFER_OVERRUN", { buffer: n2, length: n2.length, offset: r4 }), Pn(n2.slice(null == e2 ? 0 : e2, null == r4 ? n2.length : r4));
      }
      function Gn(t2, e2, r4) {
        const n2 = Sn(t2);
        wn(e2 >= n2.length, "padding exceeds data length", "BUFFER_OVERRUN", { buffer: new Uint8Array(n2), length: e2, offset: e2 + 1 });
        const A2 = new Uint8Array(e2);
        return A2.fill(0), r4 ? A2.set(n2, e2 - n2.length) : A2.set(n2, 0), Pn(A2);
      }
      function Hn(t2, e2) {
        return Gn(t2, e2, true);
      }
      var Ln = BigInt(0);
      var On = BigInt(1);
      var Yn = 9007199254740991;
      function Kn(t2, e2) {
        const r4 = qn(t2, "value"), n2 = BigInt(Wn(e2, "width"));
        if (wn(r4 >> n2 === Ln, "overflow", "NUMERIC_FAULT", { operation: "fromTwos", fault: "overflow", value: t2 }), r4 >> n2 - On) {
          return -((~r4 & (On << n2) - On) + On);
        }
        return r4;
      }
      function Jn(t2, e2) {
        let r4 = zn(t2, "value");
        const n2 = BigInt(Wn(e2, "width")), A2 = On << n2 - On;
        if (r4 < Ln) {
          r4 = -r4, wn(r4 <= A2, "too low", "NUMERIC_FAULT", { operation: "toTwos", fault: "overflow", value: t2 });
          return (~r4 & (On << n2) - On) + On;
        }
        return wn(r4 < A2, "too high", "NUMERIC_FAULT", { operation: "toTwos", fault: "overflow", value: t2 }), r4;
      }
      function jn(t2, e2) {
        const r4 = qn(t2, "value"), n2 = BigInt(Wn(e2, "bits"));
        return r4 & (On << n2) - On;
      }
      function zn(t2, e2) {
        switch (typeof t2) {
          case "bigint":
            return t2;
          case "number":
            return vn(Number.isInteger(t2), "underflow", e2 || "value", t2), vn(t2 >= -Yn && t2 <= Yn, "overflow", e2 || "value", t2), BigInt(t2);
          case "string":
            try {
              if ("" === t2)
                throw new Error("empty string");
              return "-" === t2[0] && "-" !== t2[1] ? -BigInt(t2.substring(1)) : BigInt(t2);
            } catch (r4) {
              vn(false, `invalid BigNumberish string: ${r4.message}`, e2 || "value", t2);
            }
        }
        vn(false, "invalid BigNumberish value", e2 || "value", t2);
      }
      function qn(t2, e2) {
        const r4 = zn(t2, e2);
        return wn(r4 >= Ln, "unsigned value cannot be negative", "NUMERIC_FAULT", { fault: "overflow", operation: "getUint", value: t2 }), r4;
      }
      var Xn = "0123456789abcdef";
      function Vn(t2) {
        if (t2 instanceof Uint8Array) {
          let e2 = "0x0";
          for (const r4 of t2)
            e2 += Xn[r4 >> 4], e2 += Xn[15 & r4];
          return BigInt(e2);
        }
        return zn(t2);
      }
      function Wn(t2, e2) {
        switch (typeof t2) {
          case "bigint":
            return vn(t2 >= -Yn && t2 <= Yn, "overflow", e2 || "value", t2), Number(t2);
          case "number":
            return vn(Number.isInteger(t2), "underflow", e2 || "value", t2), vn(t2 >= -Yn && t2 <= Yn, "overflow", e2 || "value", t2), t2;
          case "string":
            try {
              if ("" === t2)
                throw new Error("empty string");
              return Wn(BigInt(t2), e2);
            } catch (r4) {
              vn(false, `invalid numeric string: ${r4.message}`, e2 || "value", t2);
            }
        }
        vn(false, "invalid numeric value", e2 || "value", t2);
      }
      function Zn(t2, e2) {
        let r4 = qn(t2, "value").toString(16);
        if (null == e2)
          r4.length % 2 && (r4 = "0" + r4);
        else {
          const n2 = Wn(e2, "width");
          for (wn(2 * n2 >= r4.length, `value exceeds width (${n2} bytes)`, "NUMERIC_FAULT", { operation: "toBeHex", fault: "overflow", value: t2 }); r4.length < 2 * n2; )
            r4 = "0" + r4;
        }
        return "0x" + r4;
      }
      function $n(t2) {
        const e2 = qn(t2, "value");
        if (e2 === Ln)
          return new Uint8Array([]);
        let r4 = e2.toString(16);
        r4.length % 2 && (r4 = "0" + r4);
        const n2 = new Uint8Array(r4.length / 2);
        for (let t3 = 0; t3 < n2.length; t3++) {
          const e3 = 2 * t3;
          n2[t3] = parseInt(r4.substring(e3, e3 + 2), 16);
        }
        return n2;
      }
      var tA = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz";
      var eA = null;
      function rA(t2) {
        if (null == eA) {
          eA = {};
          for (let t3 = 0; t3 < tA.length; t3++)
            eA[tA[t3]] = BigInt(t3);
        }
        const e2 = eA[t2];
        return vn(null != e2, "invalid base58 value", "letter", t2), e2;
      }
      var nA = BigInt(0);
      var AA = BigInt(58);
      var iA = class {
        filter;
        emitter;
        #t;
        constructor(t2, e2, r4) {
          this.#t = e2, yn(this, { emitter: t2, filter: r4 });
        }
        async removeListener() {
          null != this.#t && await this.emitter.off(this.filter, this.#t);
        }
      };
      function oA(t2, e2, r4, n2, A2) {
        if ("BAD_PREFIX" === t2 || "UNEXPECTED_CONTINUE" === t2) {
          let t3 = 0;
          for (let n3 = e2 + 1; n3 < r4.length && r4[n3] >> 6 == 2; n3++)
            t3++;
          return t3;
        }
        return "OVERRUN" === t2 ? r4.length - e2 - 1 : 0;
      }
      var sA = Object.freeze({ error: function(t2, e2, r4, n2, A2) {
        vn(false, `invalid codepoint at offset ${e2}; ${t2}`, "bytes", r4);
      }, ignore: oA, replace: function(t2, e2, r4, n2, A2) {
        return "OVERLONG" === t2 ? (vn("number" == typeof A2, "invalid bad code point for replacement", "badCodepoint", A2), n2.push(A2), 0) : (n2.push(65533), oA(t2, e2, r4));
      } });
      function aA(t2, e2) {
        vn("string" == typeof t2, "invalid string value", "str", t2), null != e2 && (bn(e2), t2 = t2.normalize(e2));
        let r4 = [];
        for (let e3 = 0; e3 < t2.length; e3++) {
          const n2 = t2.charCodeAt(e3);
          if (n2 < 128)
            r4.push(n2);
          else if (n2 < 2048)
            r4.push(n2 >> 6 | 192), r4.push(63 & n2 | 128);
          else if (55296 == (64512 & n2)) {
            e3++;
            const A2 = t2.charCodeAt(e3);
            vn(e3 < t2.length && 56320 == (64512 & A2), "invalid surrogate pair", "str", t2);
            const i2 = 65536 + ((1023 & n2) << 10) + (1023 & A2);
            r4.push(i2 >> 18 | 240), r4.push(i2 >> 12 & 63 | 128), r4.push(i2 >> 6 & 63 | 128), r4.push(63 & i2 | 128);
          } else
            r4.push(n2 >> 12 | 224), r4.push(n2 >> 6 & 63 | 128), r4.push(63 & n2 | 128);
        }
        return new Uint8Array(r4);
      }
      function cA(t2, e2) {
        return r4 = function(t3, e3) {
          null == e3 && (e3 = sA.error);
          const r5 = Sn(t3, "bytes"), n2 = [];
          let A2 = 0;
          for (; A2 < r5.length; ) {
            const t4 = r5[A2++];
            if (!(t4 >> 7)) {
              n2.push(t4);
              continue;
            }
            let i2 = null, o2 = null;
            if (192 == (224 & t4))
              i2 = 1, o2 = 127;
            else if (224 == (240 & t4))
              i2 = 2, o2 = 2047;
            else {
              if (240 != (248 & t4)) {
                A2 += e3(128 == (192 & t4) ? "UNEXPECTED_CONTINUE" : "BAD_PREFIX", A2 - 1, r5, n2);
                continue;
              }
              i2 = 3, o2 = 65535;
            }
            if (A2 - 1 + i2 >= r5.length) {
              A2 += e3("OVERRUN", A2 - 1, r5, n2);
              continue;
            }
            let s2 = t4 & (1 << 8 - i2 - 1) - 1;
            for (let t5 = 0; t5 < i2; t5++) {
              let t6 = r5[A2];
              if (128 != (192 & t6)) {
                A2 += e3("MISSING_CONTINUE", A2, r5, n2), s2 = null;
                break;
              }
              s2 = s2 << 6 | 63 & t6, A2++;
            }
            null !== s2 && (s2 > 1114111 ? A2 += e3("OUT_OF_RANGE", A2 - 1 - i2, r5, n2, s2) : s2 >= 55296 && s2 <= 57343 ? A2 += e3("UTF16_SURROGATE", A2 - 1 - i2, r5, n2, s2) : s2 <= o2 ? A2 += e3("OVERLONG", A2 - 1 - i2, r5, n2, s2) : n2.push(s2));
          }
          return n2;
        }(t2, e2), r4.map((t3) => t3 <= 65535 ? String.fromCharCode(t3) : (t3 -= 65536, String.fromCharCode(55296 + (t3 >> 10 & 1023), 56320 + (1023 & t3)))).join("");
        var r4;
      }
      var hA = BigInt(-1);
      var gA = BigInt(0);
      var uA = BigInt(1);
      var lA = BigInt(5);
      var fA = {};
      var pA = "0000";
      for (; pA.length < 80; )
        pA += pA;
      function dA(t2) {
        let e2 = pA;
        for (; e2.length < t2; )
          e2 += e2;
        return BigInt("1" + e2.substring(0, t2));
      }
      function IA(t2, e2, r4) {
        const n2 = BigInt(e2.width);
        if (e2.signed) {
          const e3 = uA << n2 - uA;
          wn(null == r4 || t2 >= -e3 && t2 < e3, "overflow", "NUMERIC_FAULT", { operation: r4, fault: "overflow", value: t2 }), t2 = t2 > gA ? Kn(jn(t2, n2), n2) : -Kn(jn(-t2, n2), n2);
        } else {
          const e3 = uA << n2;
          wn(null == r4 || t2 >= 0 && t2 < e3, "overflow", "NUMERIC_FAULT", { operation: r4, fault: "overflow", value: t2 }), t2 = (t2 % e3 + e3) % e3 & e3 - uA;
        }
        return t2;
      }
      function yA(t2) {
        "number" == typeof t2 && (t2 = `fixed128x${t2}`);
        let e2 = true, r4 = 128, n2 = 18;
        if ("string" == typeof t2)
          if ("fixed" === t2)
            ;
          else if ("ufixed" === t2)
            e2 = false;
          else {
            const A2 = t2.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
            vn(A2, "invalid fixed format", "format", t2), e2 = "u" !== A2[1], r4 = parseInt(A2[2]), n2 = parseInt(A2[3]);
          }
        else if (t2) {
          const A2 = t2, i2 = (t3, e3, r5) => null == A2[t3] ? r5 : (vn(typeof A2[t3] === e3, "invalid fixed format (" + t3 + " not " + e3 + ")", "format." + t3, A2[t3]), A2[t3]);
          e2 = i2("signed", "boolean", e2), r4 = i2("width", "number", r4), n2 = i2("decimals", "number", n2);
        }
        vn(r4 % 8 == 0, "invalid FixedNumber width (not byte aligned)", "format.width", r4), vn(n2 <= 80, "invalid FixedNumber decimals (too large)", "format.decimals", n2);
        return { signed: e2, width: r4, decimals: n2, name: (e2 ? "" : "u") + "fixed" + String(r4) + "x" + String(n2) };
      }
      var CA = class _CA {
        format;
        #e;
        #r;
        #n;
        _value;
        constructor(t2, e2, r4) {
          kn(t2, fA, "FixedNumber"), this.#r = e2, this.#e = r4;
          const n2 = function(t3, e3) {
            let r5 = "";
            t3 < gA && (r5 = "-", t3 *= hA);
            let n3 = t3.toString();
            if (0 === e3)
              return r5 + n3;
            for (; n3.length <= e3; )
              n3 = pA + n3;
            const A2 = n3.length - e3;
            for (n3 = n3.substring(0, A2) + "." + n3.substring(A2); "0" === n3[0] && "." !== n3[1]; )
              n3 = n3.substring(1);
            for (; "0" === n3[n3.length - 1] && "." !== n3[n3.length - 2]; )
              n3 = n3.substring(0, n3.length - 1);
            return r5 + n3;
          }(e2, r4.decimals);
          yn(this, { format: r4.name, _value: n2 }), this.#n = dA(r4.decimals);
        }
        get signed() {
          return this.#e.signed;
        }
        get width() {
          return this.#e.width;
        }
        get decimals() {
          return this.#e.decimals;
        }
        get value() {
          return this.#r;
        }
        #A(t2) {
          vn(this.format === t2.format, "incompatible format; use fixedNumber.toFormat", "other", t2);
        }
        #i(t2, e2) {
          return t2 = IA(t2, this.#e, e2), new _CA(fA, t2, this.#e);
        }
        #o(t2, e2) {
          return this.#A(t2), this.#i(this.#r + t2.#r, e2);
        }
        addUnsafe(t2) {
          return this.#o(t2);
        }
        add(t2) {
          return this.#o(t2, "add");
        }
        #s(t2, e2) {
          return this.#A(t2), this.#i(this.#r - t2.#r, e2);
        }
        subUnsafe(t2) {
          return this.#s(t2);
        }
        sub(t2) {
          return this.#s(t2, "sub");
        }
        #a(t2, e2) {
          return this.#A(t2), this.#i(this.#r * t2.#r / this.#n, e2);
        }
        mulUnsafe(t2) {
          return this.#a(t2);
        }
        mul(t2) {
          return this.#a(t2, "mul");
        }
        mulSignal(t2) {
          this.#A(t2);
          const e2 = this.#r * t2.#r;
          return wn(e2 % this.#n === gA, "precision lost during signalling mul", "NUMERIC_FAULT", { operation: "mulSignal", fault: "underflow", value: this }), this.#i(e2 / this.#n, "mulSignal");
        }
        #c(t2, e2) {
          return wn(t2.#r !== gA, "division by zero", "NUMERIC_FAULT", { operation: "div", fault: "divide-by-zero", value: this }), this.#A(t2), this.#i(this.#r * this.#n / t2.#r, e2);
        }
        divUnsafe(t2) {
          return this.#c(t2);
        }
        div(t2) {
          return this.#c(t2, "div");
        }
        divSignal(t2) {
          wn(t2.#r !== gA, "division by zero", "NUMERIC_FAULT", { operation: "div", fault: "divide-by-zero", value: this }), this.#A(t2);
          const e2 = this.#r * this.#n;
          return wn(e2 % t2.#r === gA, "precision lost during signalling div", "NUMERIC_FAULT", { operation: "divSignal", fault: "underflow", value: this }), this.#i(e2 / t2.#r, "divSignal");
        }
        cmp(t2) {
          let e2 = this.value, r4 = t2.value;
          const n2 = this.decimals - t2.decimals;
          return n2 > 0 ? r4 *= dA(n2) : n2 < 0 && (e2 *= dA(-n2)), e2 < r4 ? -1 : e2 > r4 ? 1 : 0;
        }
        eq(t2) {
          return 0 === this.cmp(t2);
        }
        lt(t2) {
          return this.cmp(t2) < 0;
        }
        lte(t2) {
          return this.cmp(t2) <= 0;
        }
        gt(t2) {
          return this.cmp(t2) > 0;
        }
        gte(t2) {
          return this.cmp(t2) >= 0;
        }
        floor() {
          let t2 = this.#r;
          return this.#r < gA && (t2 -= this.#n - uA), t2 = this.#r / this.#n * this.#n, this.#i(t2, "floor");
        }
        ceiling() {
          let t2 = this.#r;
          return this.#r > gA && (t2 += this.#n - uA), t2 = this.#r / this.#n * this.#n, this.#i(t2, "ceiling");
        }
        round(t2) {
          if (null == t2 && (t2 = 0), t2 >= this.decimals)
            return this;
          const e2 = this.decimals - t2, r4 = lA * dA(e2 - 1);
          let n2 = this.value + r4;
          const A2 = dA(e2);
          return n2 = n2 / A2 * A2, IA(n2, this.#e, "round"), new _CA(fA, n2, this.#e);
        }
        isZero() {
          return this.#r === gA;
        }
        isNegative() {
          return this.#r < gA;
        }
        toString() {
          return this._value;
        }
        toUnsafeFloat() {
          return parseFloat(this.toString());
        }
        toFormat(t2) {
          return _CA.fromString(this.toString(), t2);
        }
        static fromValue(t2, e2, r4) {
          const n2 = null == e2 ? 0 : Wn(e2), A2 = yA(r4);
          let i2 = zn(t2, "value");
          const o2 = n2 - A2.decimals;
          if (o2 > 0) {
            const e3 = dA(o2);
            wn(i2 % e3 === gA, "value loses precision for format", "NUMERIC_FAULT", { operation: "fromValue", fault: "underflow", value: t2 }), i2 /= e3;
          } else
            o2 < 0 && (i2 *= dA(-o2));
          return IA(i2, A2, "fromValue"), new _CA(fA, i2, A2);
        }
        static fromString(t2, e2) {
          const r4 = t2.match(/^(-?)([0-9]*)\.?([0-9]*)$/);
          vn(r4 && r4[2].length + r4[3].length > 0, "invalid FixedNumber string value", "value", t2);
          const n2 = yA(e2);
          let A2 = r4[2] || "0", i2 = r4[3] || "";
          for (; i2.length < n2.decimals; )
            i2 += pA;
          wn(i2.substring(n2.decimals).match(/^0*$/), "too many decimals for format", "NUMERIC_FAULT", { operation: "fromString", fault: "underflow", value: t2 }), i2 = i2.substring(0, n2.decimals);
          const o2 = BigInt(r4[1] + A2 + i2);
          return IA(o2, n2, "fromString"), new _CA(fA, o2, n2);
        }
        static fromBytes(t2, e2) {
          let r4 = Vn(Sn(t2, "value"));
          const n2 = yA(e2);
          return n2.signed && (r4 = Kn(r4, n2.width)), IA(r4, n2, "fromBytes"), new _CA(fA, r4, n2);
        }
      };
      function mA(t2) {
        let e2 = t2.toString(16);
        for (; e2.length < 2; )
          e2 = "0" + e2;
        return "0x" + e2;
      }
      function BA(t2, e2, r4) {
        let n2 = 0;
        for (let A2 = 0; A2 < r4; A2++)
          n2 = 256 * n2 + t2[e2 + A2];
        return n2;
      }
      function EA(t2, e2, r4, n2) {
        const A2 = [];
        for (; r4 < e2 + 1 + n2; ) {
          const i2 = wA(t2, r4);
          A2.push(i2.result), wn((r4 += i2.consumed) <= e2 + 1 + n2, "child data too short", "BUFFER_OVERRUN", { buffer: t2, length: n2, offset: e2 });
        }
        return { consumed: 1 + n2, result: A2 };
      }
      function wA(t2, e2) {
        wn(0 !== t2.length, "data too short", "BUFFER_OVERRUN", { buffer: t2, length: 0, offset: 1 });
        const r4 = (e3) => {
          wn(e3 <= t2.length, "data short segment too short", "BUFFER_OVERRUN", { buffer: t2, length: t2.length, offset: e3 });
        };
        if (t2[e2] >= 248) {
          const n2 = t2[e2] - 247;
          r4(e2 + 1 + n2);
          const A2 = BA(t2, e2 + 1, n2);
          return r4(e2 + 1 + n2 + A2), EA(t2, e2, e2 + 1 + n2, n2 + A2);
        }
        if (t2[e2] >= 192) {
          const n2 = t2[e2] - 192;
          return r4(e2 + 1 + n2), EA(t2, e2, e2 + 1, n2);
        }
        if (t2[e2] >= 184) {
          const n2 = t2[e2] - 183;
          r4(e2 + 1 + n2);
          const A2 = BA(t2, e2 + 1, n2);
          r4(e2 + 1 + n2 + A2);
          return { consumed: 1 + n2 + A2, result: Pn(t2.slice(e2 + 1 + n2, e2 + 1 + n2 + A2)) };
        }
        if (t2[e2] >= 128) {
          const n2 = t2[e2] - 128;
          r4(e2 + 1 + n2);
          return { consumed: 1 + n2, result: Pn(t2.slice(e2 + 1, e2 + 1 + n2)) };
        }
        return { consumed: 1, result: mA(t2[e2]) };
      }
      function vA(t2) {
        const e2 = Sn(t2, "data"), r4 = wA(e2, 0);
        return vn(r4.consumed === e2.length, "unexpected junk after rlp payload", "data", t2), r4.result;
      }
      function _A(t2) {
        const e2 = [];
        for (; t2; )
          e2.unshift(255 & t2), t2 >>= 8;
        return e2;
      }
      function QA(t2) {
        if (Array.isArray(t2)) {
          let e3 = [];
          if (t2.forEach(function(t3) {
            e3 = e3.concat(QA(t3));
          }), e3.length <= 55)
            return e3.unshift(192 + e3.length), e3;
          const r5 = _A(e3.length);
          return r5.unshift(247 + r5.length), r5.concat(e3);
        }
        const e2 = Array.prototype.slice.call(Sn(t2, "object"));
        if (1 === e2.length && e2[0] <= 127)
          return e2;
        if (e2.length <= 55)
          return e2.unshift(128 + e2.length), e2;
        const r4 = _A(e2.length);
        return r4.unshift(183 + r4.length), r4.concat(e2);
      }
      var bA = "0123456789abcdef";
      function kA(t2) {
        let e2 = "0x";
        for (const r4 of QA(t2))
          e2 += bA[r4 >> 4], e2 += bA[15 & r4];
        return e2;
      }
      var DA = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];
      function SA(t2, e2) {
        vn("string" == typeof t2, "value must be a string", "value", t2);
        let r4 = 18;
        if ("string" == typeof e2) {
          const t3 = DA.indexOf(e2);
          vn(t3 >= 0, "invalid unit", "unit", e2), r4 = 3 * t3;
        } else
          null != e2 && (r4 = Wn(e2, "unit"));
        return CA.fromString(t2, { decimals: r4, width: 512 }).value;
      }
      function NA(t2) {
        const e2 = Sn(t2, "randomBytes");
        e2[6] = 15 & e2[6] | 64, e2[8] = 63 & e2[8] | 128;
        const r4 = Pn(e2);
        return [r4.substring(2, 10), r4.substring(10, 14), r4.substring(14, 18), r4.substring(18, 22), r4.substring(22, 34)].join("-");
      }
      var MA = 32;
      var xA = new Uint8Array(MA);
      var FA = ["then"];
      var PA = {};
      function TA(t2, e2) {
        const r4 = new Error(`deferred error during ABI decoding triggered accessing ${t2}`);
        throw r4.error = e2, r4;
      }
      var RA = class _RA extends Array {
        #h;
        constructor(...t2) {
          const e2 = t2[0];
          let r4 = t2[1], n2 = (t2[2] || []).slice(), A2 = true;
          e2 !== PA && (r4 = t2, n2 = [], A2 = false), super(r4.length), r4.forEach((t3, e3) => {
            this[e3] = t3;
          });
          const i2 = n2.reduce((t3, e3) => ("string" == typeof e3 && t3.set(e3, (t3.get(e3) || 0) + 1), t3), /* @__PURE__ */ new Map());
          if (this.#h = Object.freeze(r4.map((t3, e3) => {
            const r5 = n2[e3];
            return null != r5 && 1 === i2.get(r5) ? r5 : null;
          })), A2)
            return Object.freeze(this), new Proxy(this, { get: (t3, e3, r5) => {
              if ("string" == typeof e3) {
                if (e3.match(/^[0-9]+$/)) {
                  const r6 = Wn(e3, "%index");
                  if (r6 < 0 || r6 >= this.length)
                    throw new RangeError("out of result range");
                  const n4 = t3[r6];
                  return n4 instanceof Error && TA(`index ${r6}`, n4), n4;
                }
                if (FA.indexOf(e3) >= 0)
                  return Reflect.get(t3, e3, r5);
                const n3 = t3[e3];
                if (n3 instanceof Function)
                  return function(...e4) {
                    return n3.apply(this === r5 ? t3 : this, e4);
                  };
                if (!(e3 in t3))
                  return t3.getValue.apply(this === r5 ? t3 : this, [e3]);
              }
              return Reflect.get(t3, e3, r5);
            } });
        }
        toArray() {
          const t2 = [];
          return this.forEach((e2, r4) => {
            e2 instanceof Error && TA(`index ${r4}`, e2), t2.push(e2);
          }), t2;
        }
        toObject() {
          return this.#h.reduce((t2, e2, r4) => (wn(null != e2, "value at index ${ index } unnamed", "UNSUPPORTED_OPERATION", { operation: "toObject()" }), e2 in t2 || (t2[e2] = this.getValue(e2)), t2), {});
        }
        slice(t2, e2) {
          null == t2 && (t2 = 0), t2 < 0 && (t2 += this.length) < 0 && (t2 = 0), null == e2 && (e2 = this.length), e2 < 0 && (e2 += this.length) < 0 && (e2 = 0), e2 > this.length && (e2 = this.length);
          const r4 = [], n2 = [];
          for (let A2 = t2; A2 < e2; A2++)
            r4.push(this[A2]), n2.push(this.#h[A2]);
          return new _RA(PA, r4, n2);
        }
        filter(t2, e2) {
          const r4 = [], n2 = [];
          for (let A2 = 0; A2 < this.length; A2++) {
            const i2 = this[A2];
            i2 instanceof Error && TA(`index ${A2}`, i2), t2.call(e2, i2, A2, this) && (r4.push(i2), n2.push(this.#h[A2]));
          }
          return new _RA(PA, r4, n2);
        }
        map(t2, e2) {
          const r4 = [];
          for (let n2 = 0; n2 < this.length; n2++) {
            const A2 = this[n2];
            A2 instanceof Error && TA(`index ${n2}`, A2), r4.push(t2.call(e2, A2, n2, this));
          }
          return r4;
        }
        getValue(t2) {
          const e2 = this.#h.indexOf(t2);
          if (-1 === e2)
            return;
          const r4 = this[e2];
          return r4 instanceof Error && TA(`property ${JSON.stringify(t2)}`, r4.error), r4;
        }
        static fromItems(t2, e2) {
          return new _RA(PA, t2, e2);
        }
      };
      function UA(t2) {
        let e2 = $n(t2);
        return wn(e2.length <= MA, "value out-of-bounds", "BUFFER_OVERRUN", { buffer: e2, length: MA, offset: e2.length }), e2.length !== MA && (e2 = Nn(Tn([xA.slice(e2.length % MA), e2]))), e2;
      }
      var GA = class {
        name;
        type;
        localName;
        dynamic;
        constructor(t2, e2, r4, n2) {
          yn(this, { name: t2, type: e2, localName: r4, dynamic: n2 }, { name: "string", type: "string", localName: "string", dynamic: "boolean" });
        }
        _throwError(t2, e2) {
          vn(false, t2, this.localName, e2);
        }
      };
      var HA = class {
        #g;
        #u;
        constructor() {
          this.#g = [], this.#u = 0;
        }
        get data() {
          return Tn(this.#g);
        }
        get length() {
          return this.#u;
        }
        #l(t2) {
          return this.#g.push(t2), this.#u += t2.length, t2.length;
        }
        appendWriter(t2) {
          return this.#l(Nn(t2.data));
        }
        writeBytes(t2) {
          let e2 = Nn(t2);
          const r4 = e2.length % MA;
          return r4 && (e2 = Nn(Tn([e2, xA.slice(r4)]))), this.#l(e2);
        }
        writeValue(t2) {
          return this.#l(UA(t2));
        }
        writeUpdatableValue() {
          const t2 = this.#g.length;
          return this.#g.push(xA), this.#u += MA, (e2) => {
            this.#g[t2] = UA(e2);
          };
        }
      };
      var LA = class _LA {
        allowLoose;
        #g;
        #f;
        #p;
        #d;
        #I;
        constructor(t2, e2, r4) {
          yn(this, { allowLoose: !!e2 }), this.#g = Nn(t2), this.#p = 0, this.#d = null, this.#I = null != r4 ? r4 : 1024, this.#f = 0;
        }
        get data() {
          return Pn(this.#g);
        }
        get dataLength() {
          return this.#g.length;
        }
        get consumed() {
          return this.#f;
        }
        get bytes() {
          return new Uint8Array(this.#g);
        }
        #y(t2) {
          if (this.#d)
            return this.#d.#y(t2);
          this.#p += t2, wn(this.#I < 1 || this.#p <= this.#I * this.dataLength, `compressed ABI data exceeds inflation ratio of ${this.#I} ( see: https://github.com/ethers-io/ethers.js/issues/4537 )`, "BUFFER_OVERRUN", { buffer: Nn(this.#g), offset: this.#f, length: t2, info: { bytesRead: this.#p, dataLength: this.dataLength } });
        }
        #C(t2, e2, r4) {
          let n2 = Math.ceil(e2 / MA) * MA;
          return this.#f + n2 > this.#g.length && (this.allowLoose && r4 && this.#f + e2 <= this.#g.length ? n2 = e2 : wn(false, "data out-of-bounds", "BUFFER_OVERRUN", { buffer: Nn(this.#g), length: this.#g.length, offset: this.#f + n2 })), this.#g.slice(this.#f, this.#f + n2);
        }
        subReader(t2) {
          const e2 = new _LA(this.#g.slice(this.#f + t2), this.allowLoose, this.#I);
          return e2.#d = this, e2;
        }
        readBytes(t2, e2) {
          let r4 = this.#C(0, t2, !!e2);
          return this.#y(t2), this.#f += r4.length, r4.slice(0, t2);
        }
        readValue() {
          return Vn(this.readBytes(MA));
        }
        readIndex() {
          return Wn(Vn(this.readBytes(MA)));
        }
      };
      function OA(t2) {
        if (!Number.isSafeInteger(t2) || t2 < 0)
          throw new Error(`Wrong positive integer: ${t2}`);
      }
      function YA(t2, ...e2) {
        if (!(t2 instanceof Uint8Array))
          throw new Error("Expected Uint8Array");
        if (e2.length > 0 && !e2.includes(t2.length))
          throw new Error(`Expected Uint8Array of length ${e2}, not of length=${t2.length}`);
      }
      function KA(t2) {
        if ("function" != typeof t2 || "function" != typeof t2.create)
          throw new Error("Hash should be wrapped by utils.wrapConstructor");
        OA(t2.outputLen), OA(t2.blockLen);
      }
      function JA(t2, e2 = true) {
        if (t2.destroyed)
          throw new Error("Hash instance has been destroyed");
        if (e2 && t2.finished)
          throw new Error("Hash#digest() has already been called");
      }
      function jA(t2, e2) {
        YA(t2);
        const r4 = e2.outputLen;
        if (t2.length < r4)
          throw new Error(`digestInto() expects output buffer of length at least ${r4}`);
      }
      var zA = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0;
      var qA = (t2) => t2 instanceof Uint8Array;
      var XA = (t2) => new Uint32Array(t2.buffer, t2.byteOffset, Math.floor(t2.byteLength / 4));
      var VA = (t2) => new DataView(t2.buffer, t2.byteOffset, t2.byteLength);
      var WA = (t2, e2) => t2 << 32 - e2 | t2 >>> e2;
      if (!(68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0]))
        throw new Error("Non little-endian hardware is not supported");
      var ZA = async () => {
      };
      async function $A(t2, e2, r4) {
        let n2 = Date.now();
        for (let A2 = 0; A2 < t2; A2++) {
          r4(A2);
          const t3 = Date.now() - n2;
          t3 >= 0 && t3 < e2 || (await ZA(), n2 += t3);
        }
      }
      function ti(t2) {
        if ("string" == typeof t2 && (t2 = function(t3) {
          if ("string" != typeof t3)
            throw new Error("utf8ToBytes expected string, got " + typeof t3);
          return new Uint8Array(new TextEncoder().encode(t3));
        }(t2)), !qA(t2))
          throw new Error("expected Uint8Array, got " + typeof t2);
        return t2;
      }
      var ei = class {
        clone() {
          return this._cloneInto();
        }
      };
      var ri = {}.toString;
      function ni(t2, e2) {
        if (void 0 !== e2 && "[object Object]" !== ri.call(e2))
          throw new Error("Options should be object or undefined");
        return Object.assign(t2, e2);
      }
      function Ai(t2) {
        const e2 = (e3) => t2().update(ti(e3)).digest(), r4 = t2();
        return e2.outputLen = r4.outputLen, e2.blockLen = r4.blockLen, e2.create = () => t2(), e2;
      }
      function ii(t2 = 32) {
        if (zA && "function" == typeof zA.getRandomValues)
          return zA.getRandomValues(new Uint8Array(t2));
        throw new Error("crypto.getRandomValues must be defined");
      }
      var oi = class extends ei {
        constructor(t2, e2) {
          super(), this.finished = false, this.destroyed = false, KA(t2);
          const r4 = ti(e2);
          if (this.iHash = t2.create(), "function" != typeof this.iHash.update)
            throw new Error("Expected instance of class which extends utils.Hash");
          this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
          const n2 = this.blockLen, A2 = new Uint8Array(n2);
          A2.set(r4.length > n2 ? t2.create().update(r4).digest() : r4);
          for (let t3 = 0; t3 < A2.length; t3++)
            A2[t3] ^= 54;
          this.iHash.update(A2), this.oHash = t2.create();
          for (let t3 = 0; t3 < A2.length; t3++)
            A2[t3] ^= 106;
          this.oHash.update(A2), A2.fill(0);
        }
        update(t2) {
          return JA(this), this.iHash.update(t2), this;
        }
        digestInto(t2) {
          JA(this), YA(t2, this.outputLen), this.finished = true, this.iHash.digestInto(t2), this.oHash.update(t2), this.oHash.digestInto(t2), this.destroy();
        }
        digest() {
          const t2 = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(t2), t2;
        }
        _cloneInto(t2) {
          t2 || (t2 = Object.create(Object.getPrototypeOf(this), {}));
          const { oHash: e2, iHash: r4, finished: n2, destroyed: A2, blockLen: i2, outputLen: o2 } = this;
          return t2.finished = n2, t2.destroyed = A2, t2.blockLen = i2, t2.outputLen = o2, t2.oHash = e2._cloneInto(t2.oHash), t2.iHash = r4._cloneInto(t2.iHash), t2;
        }
        destroy() {
          this.destroyed = true, this.oHash.destroy(), this.iHash.destroy();
        }
      };
      var si = (t2, e2, r4) => new oi(t2, e2).update(r4).digest();
      function ai(t2, e2, r4, n2) {
        KA(t2);
        const A2 = ni({ dkLen: 32, asyncTick: 10 }, n2), { c: i2, dkLen: o2, asyncTick: s2 } = A2;
        if (OA(i2), OA(o2), OA(s2), i2 < 1)
          throw new Error("PBKDF2: iterations (c) should be >= 1");
        const a2 = ti(e2), c2 = ti(r4), h2 = new Uint8Array(o2), g2 = si.create(t2, a2), u2 = g2._cloneInto().update(c2);
        return { c: i2, dkLen: o2, asyncTick: s2, DK: h2, PRF: g2, PRFSalt: u2 };
      }
      function ci(t2, e2, r4, n2) {
        const { c: A2, dkLen: i2, DK: o2, PRF: s2, PRFSalt: a2 } = ai(t2, e2, r4, n2);
        let c2;
        const h2 = new Uint8Array(4), g2 = VA(h2), u2 = new Uint8Array(s2.outputLen);
        for (let t3 = 1, e3 = 0; e3 < i2; t3++, e3 += s2.outputLen) {
          const r5 = o2.subarray(e3, e3 + s2.outputLen);
          g2.setInt32(0, t3, false), (c2 = a2._cloneInto(c2)).update(h2).digestInto(u2), r5.set(u2.subarray(0, r5.length));
          for (let t4 = 1; t4 < A2; t4++) {
            s2._cloneInto(c2).update(u2).digestInto(u2);
            for (let t5 = 0; t5 < r5.length; t5++)
              r5[t5] ^= u2[t5];
          }
        }
        return function(t3, e3, r5, n3, A3) {
          return t3.destroy(), e3.destroy(), n3 && n3.destroy(), A3.fill(0), r5;
        }(s2, a2, o2, c2, u2);
      }
      si.create = (t2, e2) => new oi(t2, e2);
      var hi = class extends ei {
        constructor(t2, e2, r4, n2) {
          super(), this.blockLen = t2, this.outputLen = e2, this.padOffset = r4, this.isLE = n2, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(t2), this.view = VA(this.buffer);
        }
        update(t2) {
          JA(this);
          const { view: e2, buffer: r4, blockLen: n2 } = this, A2 = (t2 = ti(t2)).length;
          for (let i2 = 0; i2 < A2; ) {
            const o2 = Math.min(n2 - this.pos, A2 - i2);
            if (o2 !== n2)
              r4.set(t2.subarray(i2, i2 + o2), this.pos), this.pos += o2, i2 += o2, this.pos === n2 && (this.process(e2, 0), this.pos = 0);
            else {
              const e3 = VA(t2);
              for (; n2 <= A2 - i2; i2 += n2)
                this.process(e3, i2);
            }
          }
          return this.length += t2.length, this.roundClean(), this;
        }
        digestInto(t2) {
          JA(this), jA(t2, this), this.finished = true;
          const { buffer: e2, view: r4, blockLen: n2, isLE: A2 } = this;
          let { pos: i2 } = this;
          e2[i2++] = 128, this.buffer.subarray(i2).fill(0), this.padOffset > n2 - i2 && (this.process(r4, 0), i2 = 0);
          for (let t3 = i2; t3 < n2; t3++)
            e2[t3] = 0;
          !function(t3, e3, r5, n3) {
            if ("function" == typeof t3.setBigUint64)
              return t3.setBigUint64(e3, r5, n3);
            const A3 = BigInt(32), i3 = BigInt(4294967295), o3 = Number(r5 >> A3 & i3), s3 = Number(r5 & i3), a3 = n3 ? 4 : 0, c3 = n3 ? 0 : 4;
            t3.setUint32(e3 + a3, o3, n3), t3.setUint32(e3 + c3, s3, n3);
          }(r4, n2 - 8, BigInt(8 * this.length), A2), this.process(r4, 0);
          const o2 = VA(t2), s2 = this.outputLen;
          if (s2 % 4)
            throw new Error("_sha2: outputLen should be aligned to 32bit");
          const a2 = s2 / 4, c2 = this.get();
          if (a2 > c2.length)
            throw new Error("_sha2: outputLen bigger than state");
          for (let t3 = 0; t3 < a2; t3++)
            o2.setUint32(4 * t3, c2[t3], A2);
        }
        digest() {
          const { buffer: t2, outputLen: e2 } = this;
          this.digestInto(t2);
          const r4 = t2.slice(0, e2);
          return this.destroy(), r4;
        }
        _cloneInto(t2) {
          t2 || (t2 = new this.constructor()), t2.set(...this.get());
          const { blockLen: e2, buffer: r4, length: n2, finished: A2, destroyed: i2, pos: o2 } = this;
          return t2.length = n2, t2.pos = o2, t2.finished = A2, t2.destroyed = i2, n2 % e2 && t2.buffer.set(r4), t2;
        }
      };
      var gi = (t2, e2, r4) => t2 & e2 ^ ~t2 & r4;
      var ui = (t2, e2, r4) => t2 & e2 ^ t2 & r4 ^ e2 & r4;
      var li = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]);
      var fi = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]);
      var pi = new Uint32Array(64);
      var di = class extends hi {
        constructor() {
          super(64, 32, 8, false), this.A = 0 | fi[0], this.B = 0 | fi[1], this.C = 0 | fi[2], this.D = 0 | fi[3], this.E = 0 | fi[4], this.F = 0 | fi[5], this.G = 0 | fi[6], this.H = 0 | fi[7];
        }
        get() {
          const { A: t2, B: e2, C: r4, D: n2, E: A2, F: i2, G: o2, H: s2 } = this;
          return [t2, e2, r4, n2, A2, i2, o2, s2];
        }
        set(t2, e2, r4, n2, A2, i2, o2, s2) {
          this.A = 0 | t2, this.B = 0 | e2, this.C = 0 | r4, this.D = 0 | n2, this.E = 0 | A2, this.F = 0 | i2, this.G = 0 | o2, this.H = 0 | s2;
        }
        process(t2, e2) {
          for (let r5 = 0; r5 < 16; r5++, e2 += 4)
            pi[r5] = t2.getUint32(e2, false);
          for (let t3 = 16; t3 < 64; t3++) {
            const e3 = pi[t3 - 15], r5 = pi[t3 - 2], n3 = WA(e3, 7) ^ WA(e3, 18) ^ e3 >>> 3, A3 = WA(r5, 17) ^ WA(r5, 19) ^ r5 >>> 10;
            pi[t3] = A3 + pi[t3 - 7] + n3 + pi[t3 - 16] | 0;
          }
          let { A: r4, B: n2, C: A2, D: i2, E: o2, F: s2, G: a2, H: c2 } = this;
          for (let t3 = 0; t3 < 64; t3++) {
            const e3 = c2 + (WA(o2, 6) ^ WA(o2, 11) ^ WA(o2, 25)) + gi(o2, s2, a2) + li[t3] + pi[t3] | 0, h2 = (WA(r4, 2) ^ WA(r4, 13) ^ WA(r4, 22)) + ui(r4, n2, A2) | 0;
            c2 = a2, a2 = s2, s2 = o2, o2 = i2 + e3 | 0, i2 = A2, A2 = n2, n2 = r4, r4 = e3 + h2 | 0;
          }
          r4 = r4 + this.A | 0, n2 = n2 + this.B | 0, A2 = A2 + this.C | 0, i2 = i2 + this.D | 0, o2 = o2 + this.E | 0, s2 = s2 + this.F | 0, a2 = a2 + this.G | 0, c2 = c2 + this.H | 0, this.set(r4, n2, A2, i2, o2, s2, a2, c2);
        }
        roundClean() {
          pi.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
      };
      var Ii = Ai(() => new di());
      var yi = BigInt(2 ** 32 - 1);
      var Ci = BigInt(32);
      function mi(t2, e2 = false) {
        return e2 ? { h: Number(t2 & yi), l: Number(t2 >> Ci & yi) } : { h: 0 | Number(t2 >> Ci & yi), l: 0 | Number(t2 & yi) };
      }
      function Bi(t2, e2 = false) {
        let r4 = new Uint32Array(t2.length), n2 = new Uint32Array(t2.length);
        for (let A2 = 0; A2 < t2.length; A2++) {
          const { h: i2, l: o2 } = mi(t2[A2], e2);
          [r4[A2], n2[A2]] = [i2, o2];
        }
        return [r4, n2];
      }
      var Ei = (t2, e2, r4) => t2 << r4 | e2 >>> 32 - r4;
      var wi = (t2, e2, r4) => e2 << r4 | t2 >>> 32 - r4;
      var vi = (t2, e2, r4) => e2 << r4 - 32 | t2 >>> 64 - r4;
      var _i = (t2, e2, r4) => t2 << r4 - 32 | e2 >>> 64 - r4;
      var Qi = { fromBig: mi, split: Bi, toBig: (t2, e2) => BigInt(t2 >>> 0) << Ci | BigInt(e2 >>> 0), shrSH: (t2, e2, r4) => t2 >>> r4, shrSL: (t2, e2, r4) => t2 << 32 - r4 | e2 >>> r4, rotrSH: (t2, e2, r4) => t2 >>> r4 | e2 << 32 - r4, rotrSL: (t2, e2, r4) => t2 << 32 - r4 | e2 >>> r4, rotrBH: (t2, e2, r4) => t2 << 64 - r4 | e2 >>> r4 - 32, rotrBL: (t2, e2, r4) => t2 >>> r4 - 32 | e2 << 64 - r4, rotr32H: (t2, e2) => e2, rotr32L: (t2, e2) => t2, rotlSH: Ei, rotlSL: wi, rotlBH: vi, rotlBL: _i, add: function(t2, e2, r4, n2) {
        const A2 = (e2 >>> 0) + (n2 >>> 0);
        return { h: t2 + r4 + (A2 / 2 ** 32 | 0) | 0, l: 0 | A2 };
      }, add3L: (t2, e2, r4) => (t2 >>> 0) + (e2 >>> 0) + (r4 >>> 0), add3H: (t2, e2, r4, n2) => e2 + r4 + n2 + (t2 / 2 ** 32 | 0) | 0, add4L: (t2, e2, r4, n2) => (t2 >>> 0) + (e2 >>> 0) + (r4 >>> 0) + (n2 >>> 0), add4H: (t2, e2, r4, n2, A2) => e2 + r4 + n2 + A2 + (t2 / 2 ** 32 | 0) | 0, add5H: (t2, e2, r4, n2, A2, i2) => e2 + r4 + n2 + A2 + i2 + (t2 / 2 ** 32 | 0) | 0, add5L: (t2, e2, r4, n2, A2) => (t2 >>> 0) + (e2 >>> 0) + (r4 >>> 0) + (n2 >>> 0) + (A2 >>> 0) };
      var [bi, ki] = (() => Qi.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t2) => BigInt(t2))))();
      var Di = new Uint32Array(80);
      var Si = new Uint32Array(80);
      var Ni = class extends hi {
        constructor() {
          super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
        }
        get() {
          const { Ah: t2, Al: e2, Bh: r4, Bl: n2, Ch: A2, Cl: i2, Dh: o2, Dl: s2, Eh: a2, El: c2, Fh: h2, Fl: g2, Gh: u2, Gl: l2, Hh: f2, Hl: p2 } = this;
          return [t2, e2, r4, n2, A2, i2, o2, s2, a2, c2, h2, g2, u2, l2, f2, p2];
        }
        set(t2, e2, r4, n2, A2, i2, o2, s2, a2, c2, h2, g2, u2, l2, f2, p2) {
          this.Ah = 0 | t2, this.Al = 0 | e2, this.Bh = 0 | r4, this.Bl = 0 | n2, this.Ch = 0 | A2, this.Cl = 0 | i2, this.Dh = 0 | o2, this.Dl = 0 | s2, this.Eh = 0 | a2, this.El = 0 | c2, this.Fh = 0 | h2, this.Fl = 0 | g2, this.Gh = 0 | u2, this.Gl = 0 | l2, this.Hh = 0 | f2, this.Hl = 0 | p2;
        }
        process(t2, e2) {
          for (let r5 = 0; r5 < 16; r5++, e2 += 4)
            Di[r5] = t2.getUint32(e2), Si[r5] = t2.getUint32(e2 += 4);
          for (let t3 = 16; t3 < 80; t3++) {
            const e3 = 0 | Di[t3 - 15], r5 = 0 | Si[t3 - 15], n3 = Qi.rotrSH(e3, r5, 1) ^ Qi.rotrSH(e3, r5, 8) ^ Qi.shrSH(e3, r5, 7), A3 = Qi.rotrSL(e3, r5, 1) ^ Qi.rotrSL(e3, r5, 8) ^ Qi.shrSL(e3, r5, 7), i3 = 0 | Di[t3 - 2], o3 = 0 | Si[t3 - 2], s3 = Qi.rotrSH(i3, o3, 19) ^ Qi.rotrBH(i3, o3, 61) ^ Qi.shrSH(i3, o3, 6), a3 = Qi.rotrSL(i3, o3, 19) ^ Qi.rotrBL(i3, o3, 61) ^ Qi.shrSL(i3, o3, 6), c3 = Qi.add4L(A3, a3, Si[t3 - 7], Si[t3 - 16]), h3 = Qi.add4H(c3, n3, s3, Di[t3 - 7], Di[t3 - 16]);
            Di[t3] = 0 | h3, Si[t3] = 0 | c3;
          }
          let { Ah: r4, Al: n2, Bh: A2, Bl: i2, Ch: o2, Cl: s2, Dh: a2, Dl: c2, Eh: h2, El: g2, Fh: u2, Fl: l2, Gh: f2, Gl: p2, Hh: d2, Hl: I2 } = this;
          for (let t3 = 0; t3 < 80; t3++) {
            const e3 = Qi.rotrSH(h2, g2, 14) ^ Qi.rotrSH(h2, g2, 18) ^ Qi.rotrBH(h2, g2, 41), y2 = Qi.rotrSL(h2, g2, 14) ^ Qi.rotrSL(h2, g2, 18) ^ Qi.rotrBL(h2, g2, 41), C2 = h2 & u2 ^ ~h2 & f2, m2 = g2 & l2 ^ ~g2 & p2, B2 = Qi.add5L(I2, y2, m2, ki[t3], Si[t3]), E2 = Qi.add5H(B2, d2, e3, C2, bi[t3], Di[t3]), w2 = 0 | B2, v2 = Qi.rotrSH(r4, n2, 28) ^ Qi.rotrBH(r4, n2, 34) ^ Qi.rotrBH(r4, n2, 39), _2 = Qi.rotrSL(r4, n2, 28) ^ Qi.rotrBL(r4, n2, 34) ^ Qi.rotrBL(r4, n2, 39), Q2 = r4 & A2 ^ r4 & o2 ^ A2 & o2, b2 = n2 & i2 ^ n2 & s2 ^ i2 & s2;
            d2 = 0 | f2, I2 = 0 | p2, f2 = 0 | u2, p2 = 0 | l2, u2 = 0 | h2, l2 = 0 | g2, { h: h2, l: g2 } = Qi.add(0 | a2, 0 | c2, 0 | E2, 0 | w2), a2 = 0 | o2, c2 = 0 | s2, o2 = 0 | A2, s2 = 0 | i2, A2 = 0 | r4, i2 = 0 | n2;
            const k2 = Qi.add3L(w2, _2, b2);
            r4 = Qi.add3H(k2, E2, v2, Q2), n2 = 0 | k2;
          }
          ({ h: r4, l: n2 } = Qi.add(0 | this.Ah, 0 | this.Al, 0 | r4, 0 | n2)), { h: A2, l: i2 } = Qi.add(0 | this.Bh, 0 | this.Bl, 0 | A2, 0 | i2), { h: o2, l: s2 } = Qi.add(0 | this.Ch, 0 | this.Cl, 0 | o2, 0 | s2), { h: a2, l: c2 } = Qi.add(0 | this.Dh, 0 | this.Dl, 0 | a2, 0 | c2), { h: h2, l: g2 } = Qi.add(0 | this.Eh, 0 | this.El, 0 | h2, 0 | g2), { h: u2, l: l2 } = Qi.add(0 | this.Fh, 0 | this.Fl, 0 | u2, 0 | l2), { h: f2, l: p2 } = Qi.add(0 | this.Gh, 0 | this.Gl, 0 | f2, 0 | p2), { h: d2, l: I2 } = Qi.add(0 | this.Hh, 0 | this.Hl, 0 | d2, 0 | I2), this.set(r4, n2, A2, i2, o2, s2, a2, c2, h2, g2, u2, l2, f2, p2, d2, I2);
        }
        roundClean() {
          Di.fill(0), Si.fill(0);
        }
        destroy() {
          this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
      };
      var Mi = Ai(() => new Ni());
      var xi = function() {
        if ("undefined" != typeof self)
          return self;
        if ("undefined" != typeof window)
          return window;
        if ("undefined" != typeof global)
          return global;
        throw new Error("unable to locate global object");
      }();
      var Fi = xi.crypto || xi.msCrypto;
      var Pi = false;
      var Ti = function(t2, e2, r4) {
        return function(t3, e3) {
          const r5 = { sha256: Ii, sha512: Mi }[t3];
          return vn(null != r5, "invalid hmac algorithm", "algorithm", t3), si.create(r5, e3);
        }(t2, e2).update(r4).digest();
      };
      var Ri = Ti;
      function Ui(t2, e2, r4) {
        const n2 = Sn(e2, "key"), A2 = Sn(r4, "data");
        return Pn(Ri(t2, n2, A2));
      }
      Ui._ = Ti, Ui.lock = function() {
        Pi = true;
      }, Ui.register = function(t2) {
        if (Pi)
          throw new Error("computeHmac is locked");
        Ri = t2;
      }, Object.freeze(Ui);
      var [Gi, Hi, Li] = [[], [], []];
      var Oi = BigInt(0);
      var Yi = BigInt(1);
      var Ki = BigInt(2);
      var Ji = BigInt(7);
      var ji = BigInt(256);
      var zi = BigInt(113);
      for (let t2 = 0, e2 = Yi, r4 = 1, n2 = 0; t2 < 24; t2++) {
        [r4, n2] = [n2, (2 * r4 + 3 * n2) % 5], Gi.push(2 * (5 * n2 + r4)), Hi.push((t2 + 1) * (t2 + 2) / 2 % 64);
        let A2 = Oi;
        for (let t3 = 0; t3 < 7; t3++)
          e2 = (e2 << Yi ^ (e2 >> Ji) * zi) % ji, e2 & Ki && (A2 ^= Yi << (Yi << BigInt(t3)) - Yi);
        Li.push(A2);
      }
      var [qi, Xi] = Bi(Li, true);
      var Vi = (t2, e2, r4) => r4 > 32 ? vi(t2, e2, r4) : Ei(t2, e2, r4);
      var Wi = (t2, e2, r4) => r4 > 32 ? _i(t2, e2, r4) : wi(t2, e2, r4);
      var Zi = class _Zi extends ei {
        constructor(t2, e2, r4, n2 = false, A2 = 24) {
          if (super(), this.blockLen = t2, this.suffix = e2, this.outputLen = r4, this.enableXOF = n2, this.rounds = A2, this.pos = 0, this.posOut = 0, this.finished = false, this.destroyed = false, OA(r4), 0 >= this.blockLen || this.blockLen >= 200)
            throw new Error("Sha3 supports only keccak-f1600 function");
          this.state = new Uint8Array(200), this.state32 = XA(this.state);
        }
        keccak() {
          !function(t2, e2 = 24) {
            const r4 = new Uint32Array(10);
            for (let n2 = 24 - e2; n2 < 24; n2++) {
              for (let e4 = 0; e4 < 10; e4++)
                r4[e4] = t2[e4] ^ t2[e4 + 10] ^ t2[e4 + 20] ^ t2[e4 + 30] ^ t2[e4 + 40];
              for (let e4 = 0; e4 < 10; e4 += 2) {
                const n3 = (e4 + 8) % 10, A3 = (e4 + 2) % 10, i2 = r4[A3], o2 = r4[A3 + 1], s2 = Vi(i2, o2, 1) ^ r4[n3], a2 = Wi(i2, o2, 1) ^ r4[n3 + 1];
                for (let r5 = 0; r5 < 50; r5 += 10)
                  t2[e4 + r5] ^= s2, t2[e4 + r5 + 1] ^= a2;
              }
              let e3 = t2[2], A2 = t2[3];
              for (let r5 = 0; r5 < 24; r5++) {
                const n3 = Hi[r5], i2 = Vi(e3, A2, n3), o2 = Wi(e3, A2, n3), s2 = Gi[r5];
                e3 = t2[s2], A2 = t2[s2 + 1], t2[s2] = i2, t2[s2 + 1] = o2;
              }
              for (let e4 = 0; e4 < 50; e4 += 10) {
                for (let n3 = 0; n3 < 10; n3++)
                  r4[n3] = t2[e4 + n3];
                for (let n3 = 0; n3 < 10; n3++)
                  t2[e4 + n3] ^= ~r4[(n3 + 2) % 10] & r4[(n3 + 4) % 10];
              }
              t2[0] ^= qi[n2], t2[1] ^= Xi[n2];
            }
            r4.fill(0);
          }(this.state32, this.rounds), this.posOut = 0, this.pos = 0;
        }
        update(t2) {
          JA(this);
          const { blockLen: e2, state: r4 } = this, n2 = (t2 = ti(t2)).length;
          for (let A2 = 0; A2 < n2; ) {
            const i2 = Math.min(e2 - this.pos, n2 - A2);
            for (let e3 = 0; e3 < i2; e3++)
              r4[this.pos++] ^= t2[A2++];
            this.pos === e2 && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished)
            return;
          this.finished = true;
          const { state: t2, suffix: e2, pos: r4, blockLen: n2 } = this;
          t2[r4] ^= e2, 128 & e2 && r4 === n2 - 1 && this.keccak(), t2[n2 - 1] ^= 128, this.keccak();
        }
        writeInto(t2) {
          JA(this, false), YA(t2), this.finish();
          const e2 = this.state, { blockLen: r4 } = this;
          for (let n2 = 0, A2 = t2.length; n2 < A2; ) {
            this.posOut >= r4 && this.keccak();
            const i2 = Math.min(r4 - this.posOut, A2 - n2);
            t2.set(e2.subarray(this.posOut, this.posOut + i2), n2), this.posOut += i2, n2 += i2;
          }
          return t2;
        }
        xofInto(t2) {
          if (!this.enableXOF)
            throw new Error("XOF is not possible for this instance");
          return this.writeInto(t2);
        }
        xof(t2) {
          return OA(t2), this.xofInto(new Uint8Array(t2));
        }
        digestInto(t2) {
          if (jA(t2, this), this.finished)
            throw new Error("digest() was already called");
          return this.writeInto(t2), this.destroy(), t2;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          this.destroyed = true, this.state.fill(0);
        }
        _cloneInto(t2) {
          const { blockLen: e2, suffix: r4, outputLen: n2, rounds: A2, enableXOF: i2 } = this;
          return t2 || (t2 = new _Zi(e2, r4, n2, i2, A2)), t2.state32.set(this.state32), t2.pos = this.pos, t2.posOut = this.posOut, t2.finished = this.finished, t2.rounds = A2, t2.suffix = r4, t2.outputLen = n2, t2.enableXOF = i2, t2.destroyed = this.destroyed, t2;
        }
      };
      var $i = ((t2, e2, r4) => Ai(() => new Zi(e2, t2, r4)))(1, 136, 32);
      var to = false;
      var eo = function(t2) {
        return $i(t2);
      };
      var ro = eo;
      function no(t2) {
        const e2 = Sn(t2, "data");
        return Pn(ro(e2));
      }
      no._ = eo, no.lock = function() {
        to = true;
      }, no.register = function(t2) {
        if (to)
          throw new TypeError("keccak256 is locked");
        ro = t2;
      }, Object.freeze(no);
      var Ao = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);
      var io = Uint8Array.from({ length: 16 }, (t2, e2) => e2);
      var oo = [io];
      var so = [io.map((t2) => (9 * t2 + 5) % 16)];
      for (let t2 = 0; t2 < 4; t2++)
        for (let e2 of [oo, so])
          e2.push(e2[t2].map((t3) => Ao[t3]));
      var ao = [[11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8], [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7], [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9], [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6], [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]].map((t2) => new Uint8Array(t2));
      var co = oo.map((t2, e2) => t2.map((t3) => ao[e2][t3]));
      var ho = so.map((t2, e2) => t2.map((t3) => ao[e2][t3]));
      var go = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]);
      var uo = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]);
      var lo = (t2, e2) => t2 << e2 | t2 >>> 32 - e2;
      function fo(t2, e2, r4, n2) {
        return 0 === t2 ? e2 ^ r4 ^ n2 : 1 === t2 ? e2 & r4 | ~e2 & n2 : 2 === t2 ? (e2 | ~r4) ^ n2 : 3 === t2 ? e2 & n2 | r4 & ~n2 : e2 ^ (r4 | ~n2);
      }
      var po = new Uint32Array(16);
      var Io = class extends hi {
        constructor() {
          super(64, 20, 8, true), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776;
        }
        get() {
          const { h0: t2, h1: e2, h2: r4, h3: n2, h4: A2 } = this;
          return [t2, e2, r4, n2, A2];
        }
        set(t2, e2, r4, n2, A2) {
          this.h0 = 0 | t2, this.h1 = 0 | e2, this.h2 = 0 | r4, this.h3 = 0 | n2, this.h4 = 0 | A2;
        }
        process(t2, e2) {
          for (let r5 = 0; r5 < 16; r5++, e2 += 4)
            po[r5] = t2.getUint32(e2, true);
          let r4 = 0 | this.h0, n2 = r4, A2 = 0 | this.h1, i2 = A2, o2 = 0 | this.h2, s2 = o2, a2 = 0 | this.h3, c2 = a2, h2 = 0 | this.h4, g2 = h2;
          for (let t3 = 0; t3 < 5; t3++) {
            const e3 = 4 - t3, u2 = go[t3], l2 = uo[t3], f2 = oo[t3], p2 = so[t3], d2 = co[t3], I2 = ho[t3];
            for (let e4 = 0; e4 < 16; e4++) {
              const n3 = lo(r4 + fo(t3, A2, o2, a2) + po[f2[e4]] + u2, d2[e4]) + h2 | 0;
              r4 = h2, h2 = a2, a2 = 0 | lo(o2, 10), o2 = A2, A2 = n3;
            }
            for (let t4 = 0; t4 < 16; t4++) {
              const r5 = lo(n2 + fo(e3, i2, s2, c2) + po[p2[t4]] + l2, I2[t4]) + g2 | 0;
              n2 = g2, g2 = c2, c2 = 0 | lo(s2, 10), s2 = i2, i2 = r5;
            }
          }
          this.set(this.h1 + o2 + c2 | 0, this.h2 + a2 + g2 | 0, this.h3 + h2 + n2 | 0, this.h4 + r4 + i2 | 0, this.h0 + A2 + s2 | 0);
        }
        roundClean() {
          po.fill(0);
        }
        destroy() {
          this.destroyed = true, this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
        }
      };
      var yo = Ai(() => new Io());
      var Co = false;
      var mo = function(t2) {
        return yo(t2);
      };
      var Bo = mo;
      function Eo(t2) {
        const e2 = Sn(t2, "data");
        return Pn(Bo(e2));
      }
      Eo._ = mo, Eo.lock = function() {
        Co = true;
      }, Eo.register = function(t2) {
        if (Co)
          throw new TypeError("ripemd160 is locked");
        Bo = t2;
      }, Object.freeze(Eo);
      var wo = false;
      var vo = function(t2, e2, r4, n2, A2) {
        return function(t3, e3, r5, n3, A3) {
          const i2 = { sha256: Ii, sha512: Mi }[A3];
          return vn(null != i2, "invalid pbkdf2 algorithm", "algorithm", A3), ci(i2, t3, e3, { c: r5, dkLen: n3 });
        }(t2, e2, r4, n2, A2);
      };
      var _o = vo;
      function Qo(t2, e2, r4, n2, A2) {
        const i2 = Sn(t2, "password"), o2 = Sn(e2, "salt");
        return Pn(_o(i2, o2, r4, n2, A2));
      }
      Qo._ = vo, Qo.lock = function() {
        wo = true;
      }, Qo.register = function(t2) {
        if (wo)
          throw new Error("pbkdf2 is locked");
        _o = t2;
      }, Object.freeze(Qo);
      var bo = false;
      var ko = function(t2) {
        return new Uint8Array(function(t3) {
          wn(null != Fi, "platform does not support secure random numbers", "UNSUPPORTED_OPERATION", { operation: "randomBytes" }), vn(Number.isInteger(t3) && t3 > 0 && t3 <= 1024, "invalid length", "length", t3);
          const e2 = new Uint8Array(t3);
          return Fi.getRandomValues(e2), e2;
        }(t2));
      };
      var Do = ko;
      function So(t2) {
        return Do(t2);
      }
      So._ = ko, So.lock = function() {
        bo = true;
      }, So.register = function(t2) {
        if (bo)
          throw new Error("randomBytes is locked");
        Do = t2;
      }, Object.freeze(So);
      var No = (t2, e2) => t2 << e2 | t2 >>> 32 - e2;
      function Mo(t2, e2, r4, n2, A2, i2) {
        let o2 = t2[e2++] ^ r4[n2++], s2 = t2[e2++] ^ r4[n2++], a2 = t2[e2++] ^ r4[n2++], c2 = t2[e2++] ^ r4[n2++], h2 = t2[e2++] ^ r4[n2++], g2 = t2[e2++] ^ r4[n2++], u2 = t2[e2++] ^ r4[n2++], l2 = t2[e2++] ^ r4[n2++], f2 = t2[e2++] ^ r4[n2++], p2 = t2[e2++] ^ r4[n2++], d2 = t2[e2++] ^ r4[n2++], I2 = t2[e2++] ^ r4[n2++], y2 = t2[e2++] ^ r4[n2++], C2 = t2[e2++] ^ r4[n2++], m2 = t2[e2++] ^ r4[n2++], B2 = t2[e2++] ^ r4[n2++], E2 = o2, w2 = s2, v2 = a2, _2 = c2, Q2 = h2, b2 = g2, k2 = u2, D2 = l2, S2 = f2, N3 = p2, M2 = d2, x2 = I2, F2 = y2, P2 = C2, T2 = m2, R2 = B2;
        for (let t3 = 0; t3 < 8; t3 += 2)
          Q2 ^= No(E2 + F2 | 0, 7), S2 ^= No(Q2 + E2 | 0, 9), F2 ^= No(S2 + Q2 | 0, 13), E2 ^= No(F2 + S2 | 0, 18), N3 ^= No(b2 + w2 | 0, 7), P2 ^= No(N3 + b2 | 0, 9), w2 ^= No(P2 + N3 | 0, 13), b2 ^= No(w2 + P2 | 0, 18), T2 ^= No(M2 + k2 | 0, 7), v2 ^= No(T2 + M2 | 0, 9), k2 ^= No(v2 + T2 | 0, 13), M2 ^= No(k2 + v2 | 0, 18), _2 ^= No(R2 + x2 | 0, 7), D2 ^= No(_2 + R2 | 0, 9), x2 ^= No(D2 + _2 | 0, 13), R2 ^= No(x2 + D2 | 0, 18), w2 ^= No(E2 + _2 | 0, 7), v2 ^= No(w2 + E2 | 0, 9), _2 ^= No(v2 + w2 | 0, 13), E2 ^= No(_2 + v2 | 0, 18), k2 ^= No(b2 + Q2 | 0, 7), D2 ^= No(k2 + b2 | 0, 9), Q2 ^= No(D2 + k2 | 0, 13), b2 ^= No(Q2 + D2 | 0, 18), x2 ^= No(M2 + N3 | 0, 7), S2 ^= No(x2 + M2 | 0, 9), N3 ^= No(S2 + x2 | 0, 13), M2 ^= No(N3 + S2 | 0, 18), F2 ^= No(R2 + T2 | 0, 7), P2 ^= No(F2 + R2 | 0, 9), T2 ^= No(P2 + F2 | 0, 13), R2 ^= No(T2 + P2 | 0, 18);
        A2[i2++] = o2 + E2 | 0, A2[i2++] = s2 + w2 | 0, A2[i2++] = a2 + v2 | 0, A2[i2++] = c2 + _2 | 0, A2[i2++] = h2 + Q2 | 0, A2[i2++] = g2 + b2 | 0, A2[i2++] = u2 + k2 | 0, A2[i2++] = l2 + D2 | 0, A2[i2++] = f2 + S2 | 0, A2[i2++] = p2 + N3 | 0, A2[i2++] = d2 + M2 | 0, A2[i2++] = I2 + x2 | 0, A2[i2++] = y2 + F2 | 0, A2[i2++] = C2 + P2 | 0, A2[i2++] = m2 + T2 | 0, A2[i2++] = B2 + R2 | 0;
      }
      function xo(t2, e2, r4, n2, A2) {
        let i2 = n2 + 0, o2 = n2 + 16 * A2;
        for (let n3 = 0; n3 < 16; n3++)
          r4[o2 + n3] = t2[e2 + 16 * (2 * A2 - 1) + n3];
        for (let n3 = 0; n3 < A2; n3++, i2 += 16, e2 += 16)
          Mo(r4, o2, t2, e2, r4, i2), n3 > 0 && (o2 += 16), Mo(r4, i2, t2, e2 += 16, r4, o2);
      }
      function Fo(t2, e2, r4) {
        const n2 = ni({ dkLen: 32, asyncTick: 10, maxmem: 1073742848 }, r4), { N: A2, r: i2, p: o2, dkLen: s2, asyncTick: a2, maxmem: c2, onProgress: h2 } = n2;
        if (OA(A2), OA(i2), OA(o2), OA(s2), OA(a2), OA(c2), void 0 !== h2 && "function" != typeof h2)
          throw new Error("progressCb should be function");
        const g2 = 128 * i2, u2 = g2 / 4;
        if (A2 <= 1 || A2 & A2 - 1 || A2 >= 2 ** (g2 / 8) || A2 > 2 ** 32)
          throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");
        if (o2 < 0 || o2 > 137438953440 / g2)
          throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");
        if (s2 < 0 || s2 > 137438953440)
          throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");
        const l2 = g2 * (A2 + o2);
        if (l2 > c2)
          throw new Error(`Scrypt: parameters too large, ${l2} (128 * r * (N + p)) > ${c2} (maxmem)`);
        const f2 = ci(Ii, t2, e2, { c: 1, dkLen: g2 * o2 }), p2 = XA(f2), d2 = XA(new Uint8Array(g2 * A2)), I2 = XA(new Uint8Array(g2));
        let y2 = () => {
        };
        if (h2) {
          const t3 = 2 * A2 * o2, e3 = Math.max(Math.floor(t3 / 1e4), 1);
          let r5 = 0;
          y2 = () => {
            r5++, !h2 || r5 % e3 && r5 !== t3 || h2(r5 / t3);
          };
        }
        return { N: A2, r: i2, p: o2, dkLen: s2, blockSize32: u2, V: d2, B32: p2, B: f2, tmp: I2, blockMixCb: y2, asyncTick: a2 };
      }
      function Po(t2, e2, r4, n2, A2) {
        const i2 = ci(Ii, t2, r4, { c: 1, dkLen: e2 });
        return r4.fill(0), n2.fill(0), A2.fill(0), i2;
      }
      var To = false;
      var Ro = false;
      var Uo = async function(t2, e2, r4, n2, A2, i2, o2) {
        return await async function(t3, e3, r5) {
          const { N: n3, r: A3, p: i3, dkLen: o3, blockSize32: s2, V: a2, B32: c2, B: h2, tmp: g2, blockMixCb: u2, asyncTick: l2 } = Fo(t3, e3, r5);
          for (let t4 = 0; t4 < i3; t4++) {
            const e4 = s2 * t4;
            for (let t5 = 0; t5 < s2; t5++)
              a2[t5] = c2[e4 + t5];
            let r6 = 0;
            await $A(n3 - 1, l2, () => {
              xo(a2, r6, a2, r6 += s2, A3), u2();
            }), xo(a2, (n3 - 1) * s2, c2, e4, A3), u2(), await $A(n3, l2, () => {
              const t5 = c2[e4 + s2 - 16] % n3;
              for (let r7 = 0; r7 < s2; r7++)
                g2[r7] = c2[e4 + r7] ^ a2[t5 * s2 + r7];
              xo(g2, 0, c2, e4, A3), u2();
            });
          }
          return Po(t3, o3, h2, a2, g2);
        }(t2, e2, { N: r4, r: n2, p: A2, dkLen: i2, onProgress: o2 });
      };
      var Go = function(t2, e2, r4, n2, A2, i2) {
        return function(t3, e3, r5) {
          const { N: n3, r: A3, p: i3, dkLen: o2, blockSize32: s2, V: a2, B32: c2, B: h2, tmp: g2, blockMixCb: u2 } = Fo(t3, e3, r5);
          for (let t4 = 0; t4 < i3; t4++) {
            const e4 = s2 * t4;
            for (let t5 = 0; t5 < s2; t5++)
              a2[t5] = c2[e4 + t5];
            for (let t5 = 0, e5 = 0; t5 < n3 - 1; t5++)
              xo(a2, e5, a2, e5 += s2, A3), u2();
            xo(a2, (n3 - 1) * s2, c2, e4, A3), u2();
            for (let t5 = 0; t5 < n3; t5++) {
              const t6 = c2[e4 + s2 - 16] % n3;
              for (let r6 = 0; r6 < s2; r6++)
                g2[r6] = c2[e4 + r6] ^ a2[t6 * s2 + r6];
              xo(g2, 0, c2, e4, A3), u2();
            }
          }
          return Po(t3, o2, h2, a2, g2);
        }(t2, e2, { N: r4, r: n2, p: A2, dkLen: i2 });
      };
      var Ho = Uo;
      var Lo = Go;
      async function Oo(t2, e2, r4, n2, A2, i2, o2) {
        const s2 = Sn(t2, "passwd"), a2 = Sn(e2, "salt");
        return Pn(await Ho(s2, a2, r4, n2, A2, i2, o2));
      }
      function Yo(t2, e2, r4, n2, A2, i2) {
        const o2 = Sn(t2, "passwd"), s2 = Sn(e2, "salt");
        return Pn(Lo(o2, s2, r4, n2, A2, i2));
      }
      Oo._ = Uo, Oo.lock = function() {
        Ro = true;
      }, Oo.register = function(t2) {
        if (Ro)
          throw new Error("scrypt is locked");
        Ho = t2;
      }, Object.freeze(Oo), Yo._ = Go, Yo.lock = function() {
        To = true;
      }, Yo.register = function(t2) {
        if (To)
          throw new Error("scryptSync is locked");
        Lo = t2;
      }, Object.freeze(Yo);
      var Ko = function(t2) {
        return function(t3) {
          switch (t3) {
            case "sha256":
              return Ii.create();
            case "sha512":
              return Mi.create();
          }
          vn(false, "invalid hashing algorithm name", "algorithm", t3);
        }("sha256").update(t2).digest();
      };
      var Jo = Ko;
      var jo = false;
      function zo(t2) {
        const e2 = Sn(t2, "data");
        return Pn(Jo(e2));
      }
      zo._ = Ko, zo.lock = function() {
        jo = true;
      }, zo.register = function(t2) {
        if (jo)
          throw new Error("sha256 is locked");
        Jo = t2;
      }, Object.freeze(zo), Object.freeze(zo);
      var qo = BigInt(0);
      var Xo = BigInt(1);
      var Vo = BigInt(2);
      var Wo = (t2) => t2 instanceof Uint8Array;
      var Zo = Array.from({ length: 256 }, (t2, e2) => e2.toString(16).padStart(2, "0"));
      function $o(t2) {
        if (!Wo(t2))
          throw new Error("Uint8Array expected");
        let e2 = "";
        for (let r4 = 0; r4 < t2.length; r4++)
          e2 += Zo[t2[r4]];
        return e2;
      }
      function ts(t2) {
        const e2 = t2.toString(16);
        return 1 & e2.length ? `0${e2}` : e2;
      }
      function es(t2) {
        if ("string" != typeof t2)
          throw new Error("hex string expected, got " + typeof t2);
        return BigInt("" === t2 ? "0" : `0x${t2}`);
      }
      function rs(t2) {
        if ("string" != typeof t2)
          throw new Error("hex string expected, got " + typeof t2);
        const e2 = t2.length;
        if (e2 % 2)
          throw new Error("padded hex string expected, got unpadded hex of length " + e2);
        const r4 = new Uint8Array(e2 / 2);
        for (let e3 = 0; e3 < r4.length; e3++) {
          const n2 = 2 * e3, A2 = t2.slice(n2, n2 + 2), i2 = Number.parseInt(A2, 16);
          if (Number.isNaN(i2) || i2 < 0)
            throw new Error("Invalid byte sequence");
          r4[e3] = i2;
        }
        return r4;
      }
      function ns(t2) {
        return es($o(t2));
      }
      function As(t2) {
        if (!Wo(t2))
          throw new Error("Uint8Array expected");
        return es($o(Uint8Array.from(t2).reverse()));
      }
      function is(t2, e2) {
        return rs(t2.toString(16).padStart(2 * e2, "0"));
      }
      function os(t2, e2) {
        return is(t2, e2).reverse();
      }
      function ss(t2, e2, r4) {
        let n2;
        if ("string" == typeof e2)
          try {
            n2 = rs(e2);
          } catch (r5) {
            throw new Error(`${t2} must be valid hex string, got "${e2}". Cause: ${r5}`);
          }
        else {
          if (!Wo(e2))
            throw new Error(`${t2} must be hex string or Uint8Array`);
          n2 = Uint8Array.from(e2);
        }
        const A2 = n2.length;
        if ("number" == typeof r4 && A2 !== r4)
          throw new Error(`${t2} expected ${r4} bytes, got ${A2}`);
        return n2;
      }
      function as(...t2) {
        const e2 = new Uint8Array(t2.reduce((t3, e3) => t3 + e3.length, 0));
        let r4 = 0;
        return t2.forEach((t3) => {
          if (!Wo(t3))
            throw new Error("Uint8Array expected");
          e2.set(t3, r4), r4 += t3.length;
        }), e2;
      }
      var cs = (t2) => (Vo << BigInt(t2 - 1)) - Xo;
      var hs = (t2) => new Uint8Array(t2);
      var gs = (t2) => Uint8Array.from(t2);
      function us(t2, e2, r4) {
        if ("number" != typeof t2 || t2 < 2)
          throw new Error("hashLen must be a number");
        if ("number" != typeof e2 || e2 < 2)
          throw new Error("qByteLen must be a number");
        if ("function" != typeof r4)
          throw new Error("hmacFn must be a function");
        let n2 = hs(t2), A2 = hs(t2), i2 = 0;
        const o2 = () => {
          n2.fill(1), A2.fill(0), i2 = 0;
        }, s2 = (...t3) => r4(A2, n2, ...t3), a2 = (t3 = hs()) => {
          A2 = s2(gs([0]), t3), n2 = s2(), 0 !== t3.length && (A2 = s2(gs([1]), t3), n2 = s2());
        }, c2 = () => {
          if (i2++ >= 1e3)
            throw new Error("drbg: tried 1000 values");
          let t3 = 0;
          const r5 = [];
          for (; t3 < e2; ) {
            n2 = s2();
            const e3 = n2.slice();
            r5.push(e3), t3 += n2.length;
          }
          return as(...r5);
        };
        return (t3, e3) => {
          let r5;
          for (o2(), a2(t3); !(r5 = e3(c2())); )
            a2();
          return o2(), r5;
        };
      }
      var ls = { bigint: (t2) => "bigint" == typeof t2, function: (t2) => "function" == typeof t2, boolean: (t2) => "boolean" == typeof t2, string: (t2) => "string" == typeof t2, stringOrUint8Array: (t2) => "string" == typeof t2 || t2 instanceof Uint8Array, isSafeInteger: (t2) => Number.isSafeInteger(t2), array: (t2) => Array.isArray(t2), field: (t2, e2) => e2.Fp.isValid(t2), hash: (t2) => "function" == typeof t2 && Number.isSafeInteger(t2.outputLen) };
      function fs(t2, e2, r4 = {}) {
        const n2 = (e3, r5, n3) => {
          const A2 = ls[r5];
          if ("function" != typeof A2)
            throw new Error(`Invalid validator "${r5}", expected function`);
          const i2 = t2[e3];
          if (!(n3 && void 0 === i2 || A2(i2, t2)))
            throw new Error(`Invalid param ${String(e3)}=${i2} (${typeof i2}), expected ${r5}`);
        };
        for (const [t3, r5] of Object.entries(e2))
          n2(t3, r5, false);
        for (const [t3, e3] of Object.entries(r4))
          n2(t3, e3, true);
        return t2;
      }
      var ps = Object.freeze({ __proto__: null, bitGet: function(t2, e2) {
        return t2 >> BigInt(e2) & Xo;
      }, bitLen: function(t2) {
        let e2;
        for (e2 = 0; t2 > qo; t2 >>= Xo, e2 += 1)
          ;
        return e2;
      }, bitMask: cs, bitSet: (t2, e2, r4) => t2 | (r4 ? Xo : qo) << BigInt(e2), bytesToHex: $o, bytesToNumberBE: ns, bytesToNumberLE: As, concatBytes: as, createHmacDrbg: us, ensureBytes: ss, equalBytes: function(t2, e2) {
        if (t2.length !== e2.length)
          return false;
        for (let r4 = 0; r4 < t2.length; r4++)
          if (t2[r4] !== e2[r4])
            return false;
        return true;
      }, hexToBytes: rs, hexToNumber: es, numberToBytesBE: is, numberToBytesLE: os, numberToHexUnpadded: ts, numberToVarBytesBE: function(t2) {
        return rs(ts(t2));
      }, utf8ToBytes: function(t2) {
        if ("string" != typeof t2)
          throw new Error("utf8ToBytes expected string, got " + typeof t2);
        return new Uint8Array(new TextEncoder().encode(t2));
      }, validateObject: fs });
      var ds = BigInt(0);
      var Is = BigInt(1);
      var ys = BigInt(2);
      var Cs = BigInt(3);
      var ms = BigInt(4);
      var Bs = BigInt(5);
      var Es = BigInt(8);
      function ws(t2, e2) {
        const r4 = t2 % e2;
        return r4 >= ds ? r4 : e2 + r4;
      }
      function vs(t2, e2, r4) {
        if (r4 <= ds || e2 < ds)
          throw new Error("Expected power/modulo > 0");
        if (r4 === Is)
          return ds;
        let n2 = Is;
        for (; e2 > ds; )
          e2 & Is && (n2 = n2 * t2 % r4), t2 = t2 * t2 % r4, e2 >>= Is;
        return n2;
      }
      function _s(t2, e2, r4) {
        let n2 = t2;
        for (; e2-- > ds; )
          n2 *= n2, n2 %= r4;
        return n2;
      }
      function Qs(t2, e2) {
        if (t2 === ds || e2 <= ds)
          throw new Error(`invert: expected positive integers, got n=${t2} mod=${e2}`);
        let r4 = ws(t2, e2), n2 = e2, A2 = ds, i2 = Is;
        for (; r4 !== ds; ) {
          const t3 = n2 % r4, e3 = A2 - i2 * (n2 / r4);
          n2 = r4, r4 = t3, A2 = i2, i2 = e3;
        }
        if (n2 !== Is)
          throw new Error("invert: does not exist");
        return ws(A2, e2);
      }
      function bs(t2) {
        if (t2 % ms === Cs) {
          const e2 = (t2 + Is) / ms;
          return function(t3, r4) {
            const n2 = t3.pow(r4, e2);
            if (!t3.eql(t3.sqr(n2), r4))
              throw new Error("Cannot find square root");
            return n2;
          };
        }
        if (t2 % Es === Bs) {
          const e2 = (t2 - Bs) / Es;
          return function(t3, r4) {
            const n2 = t3.mul(r4, ys), A2 = t3.pow(n2, e2), i2 = t3.mul(r4, A2), o2 = t3.mul(t3.mul(i2, ys), A2), s2 = t3.mul(i2, t3.sub(o2, t3.ONE));
            if (!t3.eql(t3.sqr(s2), r4))
              throw new Error("Cannot find square root");
            return s2;
          };
        }
        return function(t3) {
          const e2 = (t3 - Is) / ys;
          let r4, n2, A2;
          for (r4 = t3 - Is, n2 = 0; r4 % ys === ds; r4 /= ys, n2++)
            ;
          for (A2 = ys; A2 < t3 && vs(A2, e2, t3) !== t3 - Is; A2++)
            ;
          if (1 === n2) {
            const e3 = (t3 + Is) / ms;
            return function(t4, r5) {
              const n3 = t4.pow(r5, e3);
              if (!t4.eql(t4.sqr(n3), r5))
                throw new Error("Cannot find square root");
              return n3;
            };
          }
          const i2 = (r4 + Is) / ys;
          return function(t4, o2) {
            if (t4.pow(o2, e2) === t4.neg(t4.ONE))
              throw new Error("Cannot find square root");
            let s2 = n2, a2 = t4.pow(t4.mul(t4.ONE, A2), r4), c2 = t4.pow(o2, i2), h2 = t4.pow(o2, r4);
            for (; !t4.eql(h2, t4.ONE); ) {
              if (t4.eql(h2, t4.ZERO))
                return t4.ZERO;
              let e3 = 1;
              for (let r6 = t4.sqr(h2); e3 < s2 && !t4.eql(r6, t4.ONE); e3++)
                r6 = t4.sqr(r6);
              const r5 = t4.pow(a2, Is << BigInt(s2 - e3 - 1));
              a2 = t4.sqr(r5), c2 = t4.mul(c2, r5), h2 = t4.mul(h2, a2), s2 = e3;
            }
            return c2;
          };
        }(t2);
      }
      BigInt(9), BigInt(16);
      var ks = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
      function Ds(t2, e2) {
        const r4 = void 0 !== e2 ? e2 : t2.toString(2).length;
        return { nBitLength: r4, nByteLength: Math.ceil(r4 / 8) };
      }
      function Ss(t2) {
        if ("bigint" != typeof t2)
          throw new Error("field order must be bigint");
        const e2 = t2.toString(2).length;
        return Math.ceil(e2 / 8);
      }
      function Ns(t2) {
        const e2 = Ss(t2);
        return e2 + Math.ceil(e2 / 2);
      }
      var Ms = BigInt(0);
      var xs = BigInt(1);
      function Fs(t2) {
        return fs(t2.Fp, ks.reduce((t3, e2) => (t3[e2] = "function", t3), { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" })), fs(t2, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...Ds(t2.n, t2.nBitLength), ...t2, p: t2.Fp.ORDER });
      }
      var { bytesToNumberBE: Ps, hexToBytes: Ts } = ps;
      var Rs = { Err: class extends Error {
        constructor(t2 = "") {
          super(t2);
        }
      }, _parseInt(t2) {
        const { Err: e2 } = Rs;
        if (t2.length < 2 || 2 !== t2[0])
          throw new e2("Invalid signature integer tag");
        const r4 = t2[1], n2 = t2.subarray(2, r4 + 2);
        if (!r4 || n2.length !== r4)
          throw new e2("Invalid signature integer: wrong length");
        if (128 & n2[0])
          throw new e2("Invalid signature integer: negative");
        if (0 === n2[0] && !(128 & n2[1]))
          throw new e2("Invalid signature integer: unnecessary leading zero");
        return { d: Ps(n2), l: t2.subarray(r4 + 2) };
      }, toSig(t2) {
        const { Err: e2 } = Rs, r4 = "string" == typeof t2 ? Ts(t2) : t2;
        if (!(r4 instanceof Uint8Array))
          throw new Error("ui8a expected");
        let n2 = r4.length;
        if (n2 < 2 || 48 != r4[0])
          throw new e2("Invalid signature tag");
        if (r4[1] !== n2 - 2)
          throw new e2("Invalid signature: incorrect length");
        const { d: A2, l: i2 } = Rs._parseInt(r4.subarray(2)), { d: o2, l: s2 } = Rs._parseInt(i2);
        if (s2.length)
          throw new e2("Invalid signature: left bytes after parsing");
        return { r: A2, s: o2 };
      }, hexFromSig(t2) {
        const e2 = (t3) => 8 & Number.parseInt(t3[0], 16) ? "00" + t3 : t3, r4 = (t3) => {
          const e3 = t3.toString(16);
          return 1 & e3.length ? `0${e3}` : e3;
        }, n2 = e2(r4(t2.s)), A2 = e2(r4(t2.r)), i2 = n2.length / 2, o2 = A2.length / 2, s2 = r4(i2), a2 = r4(o2);
        return `30${r4(o2 + i2 + 4)}02${a2}${A2}02${s2}${n2}`;
      } };
      var Us = BigInt(0);
      var Gs = BigInt(1);
      BigInt(2);
      var Hs = BigInt(3);
      function Ls(t2) {
        const e2 = function(t3) {
          const e3 = Fs(t3);
          fs(e3, { a: "field", b: "field" }, { allowedPrivateKeyLengths: "array", wrapPrivateKey: "boolean", isTorsionFree: "function", clearCofactor: "function", allowInfinityPoint: "boolean", fromBytes: "function", toBytes: "function" });
          const { endo: r5, Fp: n3, a: A3 } = e3;
          if (r5) {
            if (!n3.eql(A3, n3.ZERO))
              throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
            if ("object" != typeof r5 || "bigint" != typeof r5.beta || "function" != typeof r5.splitScalar)
              throw new Error("Expected endomorphism with beta: bigint and splitScalar: function");
          }
          return Object.freeze({ ...e3 });
        }(t2), { Fp: r4 } = e2, n2 = e2.toBytes || ((t3, e3, n3) => {
          const A3 = e3.toAffine();
          return as(Uint8Array.from([4]), r4.toBytes(A3.x), r4.toBytes(A3.y));
        }), A2 = e2.fromBytes || ((t3) => {
          const e3 = t3.subarray(1);
          return { x: r4.fromBytes(e3.subarray(0, r4.BYTES)), y: r4.fromBytes(e3.subarray(r4.BYTES, 2 * r4.BYTES)) };
        });
        function i2(t3) {
          const { a: n3, b: A3 } = e2, i3 = r4.sqr(t3), o3 = r4.mul(i3, t3);
          return r4.add(r4.add(o3, r4.mul(t3, n3)), A3);
        }
        if (!r4.eql(r4.sqr(e2.Gy), i2(e2.Gx)))
          throw new Error("bad generator point: equation left != right");
        function o2(t3) {
          return "bigint" == typeof t3 && Us < t3 && t3 < e2.n;
        }
        function s2(t3) {
          if (!o2(t3))
            throw new Error("Expected valid bigint: 0 < bigint < curve.n");
        }
        function a2(t3) {
          const { allowedPrivateKeyLengths: r5, nByteLength: n3, wrapPrivateKey: A3, n: i3 } = e2;
          if (r5 && "bigint" != typeof t3) {
            if (t3 instanceof Uint8Array && (t3 = $o(t3)), "string" != typeof t3 || !r5.includes(t3.length))
              throw new Error("Invalid key");
            t3 = t3.padStart(2 * n3, "0");
          }
          let o3;
          try {
            o3 = "bigint" == typeof t3 ? t3 : ns(ss("private key", t3, n3));
          } catch (e3) {
            throw new Error(`private key must be ${n3} bytes, hex or bigint, not ${typeof t3}`);
          }
          return A3 && (o3 = ws(o3, i3)), s2(o3), o3;
        }
        const c2 = /* @__PURE__ */ new Map();
        function h2(t3) {
          if (!(t3 instanceof g2))
            throw new Error("ProjectivePoint expected");
        }
        class g2 {
          constructor(t3, e3, n3) {
            if (this.px = t3, this.py = e3, this.pz = n3, null == t3 || !r4.isValid(t3))
              throw new Error("x required");
            if (null == e3 || !r4.isValid(e3))
              throw new Error("y required");
            if (null == n3 || !r4.isValid(n3))
              throw new Error("z required");
          }
          static fromAffine(t3) {
            const { x: e3, y: n3 } = t3 || {};
            if (!t3 || !r4.isValid(e3) || !r4.isValid(n3))
              throw new Error("invalid affine point");
            if (t3 instanceof g2)
              throw new Error("projective point not allowed");
            const A3 = (t4) => r4.eql(t4, r4.ZERO);
            return A3(e3) && A3(n3) ? g2.ZERO : new g2(e3, n3, r4.ONE);
          }
          get x() {
            return this.toAffine().x;
          }
          get y() {
            return this.toAffine().y;
          }
          static normalizeZ(t3) {
            const e3 = r4.invertBatch(t3.map((t4) => t4.pz));
            return t3.map((t4, r5) => t4.toAffine(e3[r5])).map(g2.fromAffine);
          }
          static fromHex(t3) {
            const e3 = g2.fromAffine(A2(ss("pointHex", t3)));
            return e3.assertValidity(), e3;
          }
          static fromPrivateKey(t3) {
            return g2.BASE.multiply(a2(t3));
          }
          _setWindowSize(t3) {
            this._WINDOW_SIZE = t3, c2.delete(this);
          }
          assertValidity() {
            if (this.is0()) {
              if (e2.allowInfinityPoint && !r4.is0(this.py))
                return;
              throw new Error("bad point: ZERO");
            }
            const { x: t3, y: n3 } = this.toAffine();
            if (!r4.isValid(t3) || !r4.isValid(n3))
              throw new Error("bad point: x or y not FE");
            const A3 = r4.sqr(n3), o3 = i2(t3);
            if (!r4.eql(A3, o3))
              throw new Error("bad point: equation left != right");
            if (!this.isTorsionFree())
              throw new Error("bad point: not in prime-order subgroup");
          }
          hasEvenY() {
            const { y: t3 } = this.toAffine();
            if (r4.isOdd)
              return !r4.isOdd(t3);
            throw new Error("Field doesn't support isOdd");
          }
          equals(t3) {
            h2(t3);
            const { px: e3, py: n3, pz: A3 } = this, { px: i3, py: o3, pz: s3 } = t3, a3 = r4.eql(r4.mul(e3, s3), r4.mul(i3, A3)), c3 = r4.eql(r4.mul(n3, s3), r4.mul(o3, A3));
            return a3 && c3;
          }
          negate() {
            return new g2(this.px, r4.neg(this.py), this.pz);
          }
          double() {
            const { a: t3, b: n3 } = e2, A3 = r4.mul(n3, Hs), { px: i3, py: o3, pz: s3 } = this;
            let a3 = r4.ZERO, c3 = r4.ZERO, h3 = r4.ZERO, u3 = r4.mul(i3, i3), l3 = r4.mul(o3, o3), f2 = r4.mul(s3, s3), p2 = r4.mul(i3, o3);
            return p2 = r4.add(p2, p2), h3 = r4.mul(i3, s3), h3 = r4.add(h3, h3), a3 = r4.mul(t3, h3), c3 = r4.mul(A3, f2), c3 = r4.add(a3, c3), a3 = r4.sub(l3, c3), c3 = r4.add(l3, c3), c3 = r4.mul(a3, c3), a3 = r4.mul(p2, a3), h3 = r4.mul(A3, h3), f2 = r4.mul(t3, f2), p2 = r4.sub(u3, f2), p2 = r4.mul(t3, p2), p2 = r4.add(p2, h3), h3 = r4.add(u3, u3), u3 = r4.add(h3, u3), u3 = r4.add(u3, f2), u3 = r4.mul(u3, p2), c3 = r4.add(c3, u3), f2 = r4.mul(o3, s3), f2 = r4.add(f2, f2), u3 = r4.mul(f2, p2), a3 = r4.sub(a3, u3), h3 = r4.mul(f2, l3), h3 = r4.add(h3, h3), h3 = r4.add(h3, h3), new g2(a3, c3, h3);
          }
          add(t3) {
            h2(t3);
            const { px: n3, py: A3, pz: i3 } = this, { px: o3, py: s3, pz: a3 } = t3;
            let c3 = r4.ZERO, u3 = r4.ZERO, l3 = r4.ZERO;
            const f2 = e2.a, p2 = r4.mul(e2.b, Hs);
            let d2 = r4.mul(n3, o3), I2 = r4.mul(A3, s3), y2 = r4.mul(i3, a3), C2 = r4.add(n3, A3), m2 = r4.add(o3, s3);
            C2 = r4.mul(C2, m2), m2 = r4.add(d2, I2), C2 = r4.sub(C2, m2), m2 = r4.add(n3, i3);
            let B2 = r4.add(o3, a3);
            return m2 = r4.mul(m2, B2), B2 = r4.add(d2, y2), m2 = r4.sub(m2, B2), B2 = r4.add(A3, i3), c3 = r4.add(s3, a3), B2 = r4.mul(B2, c3), c3 = r4.add(I2, y2), B2 = r4.sub(B2, c3), l3 = r4.mul(f2, m2), c3 = r4.mul(p2, y2), l3 = r4.add(c3, l3), c3 = r4.sub(I2, l3), l3 = r4.add(I2, l3), u3 = r4.mul(c3, l3), I2 = r4.add(d2, d2), I2 = r4.add(I2, d2), y2 = r4.mul(f2, y2), m2 = r4.mul(p2, m2), I2 = r4.add(I2, y2), y2 = r4.sub(d2, y2), y2 = r4.mul(f2, y2), m2 = r4.add(m2, y2), d2 = r4.mul(I2, m2), u3 = r4.add(u3, d2), d2 = r4.mul(B2, m2), c3 = r4.mul(C2, c3), c3 = r4.sub(c3, d2), d2 = r4.mul(C2, I2), l3 = r4.mul(B2, l3), l3 = r4.add(l3, d2), new g2(c3, u3, l3);
          }
          subtract(t3) {
            return this.add(t3.negate());
          }
          is0() {
            return this.equals(g2.ZERO);
          }
          wNAF(t3) {
            return l2.wNAFCached(this, c2, t3, (t4) => {
              const e3 = r4.invertBatch(t4.map((t5) => t5.pz));
              return t4.map((t5, r5) => t5.toAffine(e3[r5])).map(g2.fromAffine);
            });
          }
          multiplyUnsafe(t3) {
            const n3 = g2.ZERO;
            if (t3 === Us)
              return n3;
            if (s2(t3), t3 === Gs)
              return this;
            const { endo: A3 } = e2;
            if (!A3)
              return l2.unsafeLadder(this, t3);
            let { k1neg: i3, k1: o3, k2neg: a3, k2: c3 } = A3.splitScalar(t3), h3 = n3, u3 = n3, f2 = this;
            for (; o3 > Us || c3 > Us; )
              o3 & Gs && (h3 = h3.add(f2)), c3 & Gs && (u3 = u3.add(f2)), f2 = f2.double(), o3 >>= Gs, c3 >>= Gs;
            return i3 && (h3 = h3.negate()), a3 && (u3 = u3.negate()), u3 = new g2(r4.mul(u3.px, A3.beta), u3.py, u3.pz), h3.add(u3);
          }
          multiply(t3) {
            s2(t3);
            let n3, A3, i3 = t3;
            const { endo: o3 } = e2;
            if (o3) {
              const { k1neg: t4, k1: e3, k2neg: s3, k2: a3 } = o3.splitScalar(i3);
              let { p: c3, f: h3 } = this.wNAF(e3), { p: u3, f: f2 } = this.wNAF(a3);
              c3 = l2.constTimeNegate(t4, c3), u3 = l2.constTimeNegate(s3, u3), u3 = new g2(r4.mul(u3.px, o3.beta), u3.py, u3.pz), n3 = c3.add(u3), A3 = h3.add(f2);
            } else {
              const { p: t4, f: e3 } = this.wNAF(i3);
              n3 = t4, A3 = e3;
            }
            return g2.normalizeZ([n3, A3])[0];
          }
          multiplyAndAddUnsafe(t3, e3, r5) {
            const n3 = g2.BASE, A3 = (t4, e4) => e4 !== Us && e4 !== Gs && t4.equals(n3) ? t4.multiply(e4) : t4.multiplyUnsafe(e4), i3 = A3(this, e3).add(A3(t3, r5));
            return i3.is0() ? void 0 : i3;
          }
          toAffine(t3) {
            const { px: e3, py: n3, pz: A3 } = this, i3 = this.is0();
            null == t3 && (t3 = i3 ? r4.ONE : r4.inv(A3));
            const o3 = r4.mul(e3, t3), s3 = r4.mul(n3, t3), a3 = r4.mul(A3, t3);
            if (i3)
              return { x: r4.ZERO, y: r4.ZERO };
            if (!r4.eql(a3, r4.ONE))
              throw new Error("invZ was invalid");
            return { x: o3, y: s3 };
          }
          isTorsionFree() {
            const { h: t3, isTorsionFree: r5 } = e2;
            if (t3 === Gs)
              return true;
            if (r5)
              return r5(g2, this);
            throw new Error("isTorsionFree() has not been declared for the elliptic curve");
          }
          clearCofactor() {
            const { h: t3, clearCofactor: r5 } = e2;
            return t3 === Gs ? this : r5 ? r5(g2, this) : this.multiplyUnsafe(e2.h);
          }
          toRawBytes(t3 = true) {
            return this.assertValidity(), n2(g2, this, t3);
          }
          toHex(t3 = true) {
            return $o(this.toRawBytes(t3));
          }
        }
        g2.BASE = new g2(e2.Gx, e2.Gy, r4.ONE), g2.ZERO = new g2(r4.ZERO, r4.ONE, r4.ZERO);
        const u2 = e2.nBitLength, l2 = /* @__PURE__ */ function(t3, e3) {
          const r5 = (t4, e4) => {
            const r6 = e4.negate();
            return t4 ? r6 : e4;
          }, n3 = (t4) => ({ windows: Math.ceil(e3 / t4) + 1, windowSize: 2 ** (t4 - 1) });
          return { constTimeNegate: r5, unsafeLadder(e4, r6) {
            let n4 = t3.ZERO, A3 = e4;
            for (; r6 > Ms; )
              r6 & xs && (n4 = n4.add(A3)), A3 = A3.double(), r6 >>= xs;
            return n4;
          }, precomputeWindow(t4, e4) {
            const { windows: r6, windowSize: A3 } = n3(e4), i3 = [];
            let o3 = t4, s3 = o3;
            for (let t5 = 0; t5 < r6; t5++) {
              s3 = o3, i3.push(s3);
              for (let t6 = 1; t6 < A3; t6++)
                s3 = s3.add(o3), i3.push(s3);
              o3 = s3.double();
            }
            return i3;
          }, wNAF(e4, A3, i3) {
            const { windows: o3, windowSize: s3 } = n3(e4);
            let a3 = t3.ZERO, c3 = t3.BASE;
            const h3 = BigInt(2 ** e4 - 1), g3 = 2 ** e4, u3 = BigInt(e4);
            for (let t4 = 0; t4 < o3; t4++) {
              const e5 = t4 * s3;
              let n4 = Number(i3 & h3);
              i3 >>= u3, n4 > s3 && (n4 -= g3, i3 += xs);
              const o4 = e5, l3 = e5 + Math.abs(n4) - 1, f2 = t4 % 2 != 0, p2 = n4 < 0;
              0 === n4 ? c3 = c3.add(r5(f2, A3[o4])) : a3 = a3.add(r5(p2, A3[l3]));
            }
            return { p: a3, f: c3 };
          }, wNAFCached(t4, e4, r6, n4) {
            const A3 = t4._WINDOW_SIZE || 1;
            let i3 = e4.get(t4);
            return i3 || (i3 = this.precomputeWindow(t4, A3), 1 !== A3 && e4.set(t4, n4(i3))), this.wNAF(A3, i3, r6);
          } };
        }(g2, e2.endo ? Math.ceil(u2 / 2) : u2);
        return { CURVE: e2, ProjectivePoint: g2, normPrivateKeyToScalar: a2, weierstrassEquation: i2, isWithinCurveOrder: o2 };
      }
      function Os(t2) {
        const e2 = function(t3) {
          const e3 = Fs(t3);
          return fs(e3, { hash: "hash", hmac: "function", randomBytes: "function" }, { bits2int: "function", bits2int_modN: "function", lowS: "boolean" }), Object.freeze({ lowS: true, ...e3 });
        }(t2), { Fp: r4, n: n2 } = e2, A2 = r4.BYTES + 1, i2 = 2 * r4.BYTES + 1;
        function o2(t3) {
          return ws(t3, n2);
        }
        function s2(t3) {
          return Qs(t3, n2);
        }
        const { ProjectivePoint: a2, normPrivateKeyToScalar: c2, weierstrassEquation: h2, isWithinCurveOrder: g2 } = Ls({ ...e2, toBytes(t3, e3, n3) {
          const A3 = e3.toAffine(), i3 = r4.toBytes(A3.x), o3 = as;
          return n3 ? o3(Uint8Array.from([e3.hasEvenY() ? 2 : 3]), i3) : o3(Uint8Array.from([4]), i3, r4.toBytes(A3.y));
        }, fromBytes(t3) {
          const e3 = t3.length, n3 = t3[0], o3 = t3.subarray(1);
          if (e3 !== A2 || 2 !== n3 && 3 !== n3) {
            if (e3 === i2 && 4 === n3) {
              return { x: r4.fromBytes(o3.subarray(0, r4.BYTES)), y: r4.fromBytes(o3.subarray(r4.BYTES, 2 * r4.BYTES)) };
            }
            throw new Error(`Point of length ${e3} was invalid. Expected ${A2} compressed bytes or ${i2} uncompressed bytes`);
          }
          {
            const t4 = ns(o3);
            if (!(Us < (s3 = t4) && s3 < r4.ORDER))
              throw new Error("Point is not on curve");
            const e4 = h2(t4);
            let A3 = r4.sqrt(e4);
            return !(1 & ~n3) !== ((A3 & Gs) === Gs) && (A3 = r4.neg(A3)), { x: t4, y: A3 };
          }
          var s3;
        } }), u2 = (t3) => $o(is(t3, e2.nByteLength));
        function l2(t3) {
          return t3 > n2 >> Gs;
        }
        const f2 = (t3, e3, r5) => ns(t3.slice(e3, r5));
        class p2 {
          constructor(t3, e3, r5) {
            this.r = t3, this.s = e3, this.recovery = r5, this.assertValidity();
          }
          static fromCompact(t3) {
            const r5 = e2.nByteLength;
            return t3 = ss("compactSignature", t3, 2 * r5), new p2(f2(t3, 0, r5), f2(t3, r5, 2 * r5));
          }
          static fromDER(t3) {
            const { r: e3, s: r5 } = Rs.toSig(ss("DER", t3));
            return new p2(e3, r5);
          }
          assertValidity() {
            if (!g2(this.r))
              throw new Error("r must be 0 < r < CURVE.n");
            if (!g2(this.s))
              throw new Error("s must be 0 < s < CURVE.n");
          }
          addRecoveryBit(t3) {
            return new p2(this.r, this.s, t3);
          }
          recoverPublicKey(t3) {
            const { r: n3, s: A3, recovery: i3 } = this, c3 = C2(ss("msgHash", t3));
            if (null == i3 || ![0, 1, 2, 3].includes(i3))
              throw new Error("recovery id invalid");
            const h3 = 2 === i3 || 3 === i3 ? n3 + e2.n : n3;
            if (h3 >= r4.ORDER)
              throw new Error("recovery id 2 or 3 invalid");
            const g3 = 1 & i3 ? "03" : "02", l3 = a2.fromHex(g3 + u2(h3)), f3 = s2(h3), p3 = o2(-c3 * f3), d3 = o2(A3 * f3), I3 = a2.BASE.multiplyAndAddUnsafe(l3, p3, d3);
            if (!I3)
              throw new Error("point at infinify");
            return I3.assertValidity(), I3;
          }
          hasHighS() {
            return l2(this.s);
          }
          normalizeS() {
            return this.hasHighS() ? new p2(this.r, o2(-this.s), this.recovery) : this;
          }
          toDERRawBytes() {
            return rs(this.toDERHex());
          }
          toDERHex() {
            return Rs.hexFromSig({ r: this.r, s: this.s });
          }
          toCompactRawBytes() {
            return rs(this.toCompactHex());
          }
          toCompactHex() {
            return u2(this.r) + u2(this.s);
          }
        }
        const d2 = { isValidPrivateKey(t3) {
          try {
            return c2(t3), true;
          } catch (t4) {
            return false;
          }
        }, normPrivateKeyToScalar: c2, randomPrivateKey: () => {
          const t3 = Ns(e2.n);
          return function(t4, e3, r5 = false) {
            const n3 = t4.length, A3 = Ss(e3), i3 = Ns(e3);
            if (n3 < 16 || n3 < i3 || n3 > 1024)
              throw new Error(`expected ${i3}-1024 bytes of input, got ${n3}`);
            const o3 = ws(r5 ? ns(t4) : As(t4), e3 - Is) + Is;
            return r5 ? os(o3, A3) : is(o3, A3);
          }(e2.randomBytes(t3), e2.n);
        }, precompute: (t3 = 8, e3 = a2.BASE) => (e3._setWindowSize(t3), e3.multiply(BigInt(3)), e3) };
        function I2(t3) {
          const e3 = t3 instanceof Uint8Array, r5 = "string" == typeof t3, n3 = (e3 || r5) && t3.length;
          return e3 ? n3 === A2 || n3 === i2 : r5 ? n3 === 2 * A2 || n3 === 2 * i2 : t3 instanceof a2;
        }
        const y2 = e2.bits2int || function(t3) {
          const r5 = ns(t3), n3 = 8 * t3.length - e2.nBitLength;
          return n3 > 0 ? r5 >> BigInt(n3) : r5;
        }, C2 = e2.bits2int_modN || function(t3) {
          return o2(y2(t3));
        }, m2 = cs(e2.nBitLength);
        function B2(t3) {
          if ("bigint" != typeof t3)
            throw new Error("bigint expected");
          if (!(Us <= t3 && t3 < m2))
            throw new Error(`bigint expected < 2^${e2.nBitLength}`);
          return is(t3, e2.nByteLength);
        }
        function E2(t3, n3, A3 = w2) {
          if (["recovered", "canonical"].some((t4) => t4 in A3))
            throw new Error("sign() legacy options not supported");
          const { hash: i3, randomBytes: h3 } = e2;
          let { lowS: u3, prehash: f3, extraEntropy: d3 } = A3;
          null == u3 && (u3 = true), t3 = ss("msgHash", t3), f3 && (t3 = ss("prehashed msgHash", i3(t3)));
          const I3 = C2(t3), m3 = c2(n3), E3 = [B2(m3), B2(I3)];
          if (null != d3) {
            const t4 = true === d3 ? h3(r4.BYTES) : d3;
            E3.push(ss("extraEntropy", t4));
          }
          const v3 = as(...E3), _2 = I3;
          return { seed: v3, k2sig: function(t4) {
            const e3 = y2(t4);
            if (!g2(e3))
              return;
            const r5 = s2(e3), n4 = a2.BASE.multiply(e3).toAffine(), A4 = o2(n4.x);
            if (A4 === Us)
              return;
            const i4 = o2(r5 * o2(_2 + A4 * m3));
            if (i4 === Us)
              return;
            let c3 = (n4.x === A4 ? 0 : 2) | Number(n4.y & Gs), h4 = i4;
            return u3 && l2(i4) && (h4 = function(t5) {
              return l2(t5) ? o2(-t5) : t5;
            }(i4), c3 ^= 1), new p2(A4, h4, c3);
          } };
        }
        const w2 = { lowS: e2.lowS, prehash: false }, v2 = { lowS: e2.lowS, prehash: false };
        return a2.BASE._setWindowSize(8), { CURVE: e2, getPublicKey: function(t3, e3 = true) {
          return a2.fromPrivateKey(t3).toRawBytes(e3);
        }, getSharedSecret: function(t3, e3, r5 = true) {
          if (I2(t3))
            throw new Error("first arg must be private key");
          if (!I2(e3))
            throw new Error("second arg must be public key");
          return a2.fromHex(e3).multiply(c2(t3)).toRawBytes(r5);
        }, sign: function(t3, r5, n3 = w2) {
          const { seed: A3, k2sig: i3 } = E2(t3, r5, n3), o3 = e2;
          return us(o3.hash.outputLen, o3.nByteLength, o3.hmac)(A3, i3);
        }, verify: function(t3, r5, n3, A3 = v2) {
          const i3 = t3;
          if (r5 = ss("msgHash", r5), n3 = ss("publicKey", n3), "strict" in A3)
            throw new Error("options.strict was renamed to lowS");
          const { lowS: c3, prehash: h3 } = A3;
          let g3, u3;
          try {
            if ("string" == typeof i3 || i3 instanceof Uint8Array)
              try {
                g3 = p2.fromDER(i3);
              } catch (t4) {
                if (!(t4 instanceof Rs.Err))
                  throw t4;
                g3 = p2.fromCompact(i3);
              }
            else {
              if ("object" != typeof i3 || "bigint" != typeof i3.r || "bigint" != typeof i3.s)
                throw new Error("PARSE");
              {
                const { r: t4, s: e3 } = i3;
                g3 = new p2(t4, e3);
              }
            }
            u3 = a2.fromHex(n3);
          } catch (t4) {
            if ("PARSE" === t4.message)
              throw new Error("signature must be Signature instance, Uint8Array or hex string");
            return false;
          }
          if (c3 && g3.hasHighS())
            return false;
          h3 && (r5 = e2.hash(r5));
          const { r: l3, s: f3 } = g3, d3 = C2(r5), I3 = s2(f3), y3 = o2(d3 * I3), m3 = o2(l3 * I3), B3 = a2.BASE.multiplyAndAddUnsafe(u3, y3, m3)?.toAffine();
          return !!B3 && o2(B3.x) === l3;
        }, ProjectivePoint: a2, Signature: p2, utils: d2 };
      }
      function Ys(t2) {
        return { hash: t2, hmac: (e2, ...r4) => si(t2, e2, function(...t3) {
          const e3 = new Uint8Array(t3.reduce((t4, e4) => t4 + e4.length, 0));
          let r5 = 0;
          return t3.forEach((t4) => {
            if (!qA(t4))
              throw new Error("Uint8Array expected");
            e3.set(t4, r5), r5 += t4.length;
          }), e3;
        }(...r4)), randomBytes: ii };
      }
      BigInt(4);
      var Ks = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f");
      var Js = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
      var js = BigInt(1);
      var zs = BigInt(2);
      var qs = (t2, e2) => (t2 + e2 / zs) / e2;
      var Xs = function(t2, e2, r4 = false, n2 = {}) {
        if (t2 <= ds)
          throw new Error(`Expected Field ORDER > 0, got ${t2}`);
        const { nBitLength: A2, nByteLength: i2 } = Ds(t2, e2);
        if (i2 > 2048)
          throw new Error("Field lengths over 2048 bytes are not supported");
        const o2 = bs(t2), s2 = Object.freeze({ ORDER: t2, BITS: A2, BYTES: i2, MASK: cs(A2), ZERO: ds, ONE: Is, create: (e3) => ws(e3, t2), isValid: (e3) => {
          if ("bigint" != typeof e3)
            throw new Error("Invalid field element: expected bigint, got " + typeof e3);
          return ds <= e3 && e3 < t2;
        }, is0: (t3) => t3 === ds, isOdd: (t3) => (t3 & Is) === Is, neg: (e3) => ws(-e3, t2), eql: (t3, e3) => t3 === e3, sqr: (e3) => ws(e3 * e3, t2), add: (e3, r5) => ws(e3 + r5, t2), sub: (e3, r5) => ws(e3 - r5, t2), mul: (e3, r5) => ws(e3 * r5, t2), pow: (t3, e3) => function(t4, e4, r5) {
          if (r5 < ds)
            throw new Error("Expected power > 0");
          if (r5 === ds)
            return t4.ONE;
          if (r5 === Is)
            return e4;
          let n3 = t4.ONE, A3 = e4;
          for (; r5 > ds; )
            r5 & Is && (n3 = t4.mul(n3, A3)), A3 = t4.sqr(A3), r5 >>= Is;
          return n3;
        }(s2, t3, e3), div: (e3, r5) => ws(e3 * Qs(r5, t2), t2), sqrN: (t3) => t3 * t3, addN: (t3, e3) => t3 + e3, subN: (t3, e3) => t3 - e3, mulN: (t3, e3) => t3 * e3, inv: (e3) => Qs(e3, t2), sqrt: n2.sqrt || ((t3) => o2(s2, t3)), invertBatch: (t3) => function(t4, e3) {
          const r5 = new Array(e3.length), n3 = e3.reduce((e4, n4, A4) => t4.is0(n4) ? e4 : (r5[A4] = e4, t4.mul(e4, n4)), t4.ONE), A3 = t4.inv(n3);
          return e3.reduceRight((e4, n4, A4) => t4.is0(n4) ? e4 : (r5[A4] = t4.mul(e4, r5[A4]), t4.mul(e4, n4)), A3), r5;
        }(s2, t3), cmov: (t3, e3, r5) => r5 ? e3 : t3, toBytes: (t3) => r4 ? os(t3, i2) : is(t3, i2), fromBytes: (t3) => {
          if (t3.length !== i2)
            throw new Error(`Fp.fromBytes: expected ${i2}, got ${t3.length}`);
          return r4 ? As(t3) : ns(t3);
        } });
        return Object.freeze(s2);
      }(Ks, void 0, void 0, { sqrt: function(t2) {
        const e2 = Ks, r4 = BigInt(3), n2 = BigInt(6), A2 = BigInt(11), i2 = BigInt(22), o2 = BigInt(23), s2 = BigInt(44), a2 = BigInt(88), c2 = t2 * t2 * t2 % e2, h2 = c2 * c2 * t2 % e2, g2 = _s(h2, r4, e2) * h2 % e2, u2 = _s(g2, r4, e2) * h2 % e2, l2 = _s(u2, zs, e2) * c2 % e2, f2 = _s(l2, A2, e2) * l2 % e2, p2 = _s(f2, i2, e2) * f2 % e2, d2 = _s(p2, s2, e2) * p2 % e2, I2 = _s(d2, a2, e2) * d2 % e2, y2 = _s(I2, s2, e2) * p2 % e2, C2 = _s(y2, r4, e2) * h2 % e2, m2 = _s(C2, o2, e2) * f2 % e2, B2 = _s(m2, n2, e2) * c2 % e2, E2 = _s(B2, zs, e2);
        if (!Xs.eql(Xs.sqr(E2), t2))
          throw new Error("Cannot find square root");
        return E2;
      } });
      var Vs = function(t2, e2) {
        const r4 = (e3) => Os({ ...t2, ...Ys(e3) });
        return Object.freeze({ ...r4(e2), create: r4 });
      }({ a: BigInt(0), b: BigInt(7), Fp: Xs, n: Js, Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"), Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"), h: BigInt(1), lowS: true, endo: { beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"), splitScalar: (t2) => {
        const e2 = Js, r4 = BigInt("0x3086d221a7d46bcde86c90e49284eb15"), n2 = -js * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"), A2 = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"), i2 = r4, o2 = BigInt("0x100000000000000000000000000000000"), s2 = qs(i2 * t2, e2), a2 = qs(-n2 * t2, e2);
        let c2 = ws(t2 - s2 * r4 - a2 * A2, e2), h2 = ws(-s2 * n2 - a2 * i2, e2);
        const g2 = c2 > o2, u2 = h2 > o2;
        if (g2 && (c2 = e2 - c2), u2 && (h2 = e2 - h2), c2 > o2 || h2 > o2)
          throw new Error("splitScalar: Endomorphism failed, k=" + t2);
        return { k1neg: g2, k1: c2, k2neg: u2, k2: h2 };
      } } }, Ii);
      BigInt(0), Vs.ProjectivePoint;
      var Ws = "0x0000000000000000000000000000000000000000";
      var Zs = "0x0000000000000000000000000000000000000000000000000000000000000000";
      BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"), BigInt("1000000000000000000"), BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), BigInt("0x8000000000000000000000000000000000000000000000000000000000000000"), BigInt(-1);
      var $s = BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var ta = BigInt(0);
      var ea = BigInt(1);
      var ra = BigInt(2);
      var na = BigInt(27);
      var Aa = BigInt(28);
      var ia = BigInt(35);
      var oa = {};
      function sa(t2) {
        return Hn($n(t2), 32);
      }
      var aa = class t2 {
        #m;
        #B;
        #E;
        #w;
        get r() {
          return this.#m;
        }
        set r(t3) {
          vn(32 === Rn(t3), "invalid r", "value", t3), this.#m = Pn(t3);
        }
        get s() {
          return this.#B;
        }
        set s(t3) {
          vn(32 === Rn(t3), "invalid s", "value", t3);
          const e2 = Pn(t3);
          vn(parseInt(e2.substring(0, 3)) < 8, "non-canonical s", "value", e2), this.#B = e2;
        }
        get v() {
          return this.#E;
        }
        set v(t3) {
          const e2 = Wn(t3, "value");
          vn(27 === e2 || 28 === e2, "invalid v", "v", t3), this.#E = e2;
        }
        get networkV() {
          return this.#w;
        }
        get legacyChainId() {
          const e2 = this.networkV;
          return null == e2 ? null : t2.getChainId(e2);
        }
        get yParity() {
          return 27 === this.v ? 0 : 1;
        }
        get yParityAndS() {
          const t3 = Sn(this.s);
          return this.yParity && (t3[0] |= 128), Pn(t3);
        }
        get compactSerialized() {
          return Tn([this.r, this.yParityAndS]);
        }
        get serialized() {
          return Tn([this.r, this.s, this.yParity ? "0x1c" : "0x1b"]);
        }
        constructor(t3, e2, r4, n2) {
          kn(t3, oa, "Signature"), this.#m = e2, this.#B = r4, this.#E = n2, this.#w = null;
        }
        [Symbol.for("nodejs.util.inspect.custom")]() {
          return `Signature { r: "${this.r}", s: "${this.s}", yParity: ${this.yParity}, networkV: ${this.networkV} }`;
        }
        clone() {
          const e2 = new t2(oa, this.r, this.s, this.v);
          return this.networkV && (e2.#w = this.networkV), e2;
        }
        toJSON() {
          const t3 = this.networkV;
          return { _type: "signature", networkV: null != t3 ? t3.toString() : null, r: this.r, s: this.s, v: this.v };
        }
        static getChainId(t3) {
          const e2 = zn(t3, "v");
          return e2 == na || e2 == Aa ? ta : (vn(e2 >= ia, "invalid EIP-155 v", "v", t3), (e2 - ia) / ra);
        }
        static getChainIdV(t3, e2) {
          return zn(t3) * ra + BigInt(35 + e2 - 27);
        }
        static getNormalizedV(t3) {
          const e2 = zn(t3);
          return e2 === ta || e2 === na ? 27 : e2 === ea || e2 === Aa ? 28 : (vn(e2 >= ia, "invalid v", "v", t3), e2 & ea ? 27 : 28);
        }
        static from(e2) {
          function r4(t3, r5) {
            vn(t3, r5, "signature", e2);
          }
          if (null == e2)
            return new t2(oa, Zs, Zs, 27);
          if ("string" == typeof e2) {
            const n3 = Sn(e2, "signature");
            if (64 === n3.length) {
              const e3 = Pn(n3.slice(0, 32)), r5 = n3.slice(32, 64), A3 = 128 & r5[0] ? 28 : 27;
              return r5[0] &= 127, new t2(oa, e3, Pn(r5), A3);
            }
            if (65 === n3.length) {
              const e3 = Pn(n3.slice(0, 32)), A3 = n3.slice(32, 64);
              r4(!(128 & A3[0]), "non-canonical s");
              const i3 = t2.getNormalizedV(n3[64]);
              return new t2(oa, e3, Pn(A3), i3);
            }
            r4(false, "invalid raw signature length");
          }
          if (e2 instanceof t2)
            return e2.clone();
          const n2 = e2.r;
          r4(null != n2, "missing r");
          const A2 = sa(n2), i2 = function(t3, e3) {
            if (null != t3)
              return sa(t3);
            if (null != e3) {
              r4(Mn(e3, 32), "invalid yParityAndS");
              const t4 = Sn(e3);
              return t4[0] &= 127, Pn(t4);
            }
            r4(false, "missing s");
          }(e2.s, e2.yParityAndS);
          r4(!(128 & Sn(i2)[0]), "non-canonical s");
          const { networkV: o2, v: s2 } = function(e3, n3, A3) {
            if (null != e3) {
              const r5 = zn(e3);
              return { networkV: r5 >= ia ? r5 : void 0, v: t2.getNormalizedV(r5) };
            }
            if (null != n3)
              return r4(Mn(n3, 32), "invalid yParityAndS"), { v: 128 & Sn(n3)[0] ? 28 : 27 };
            if (null != A3) {
              switch (Wn(A3, "sig.yParity")) {
                case 0:
                  return { v: 27 };
                case 1:
                  return { v: 28 };
              }
              r4(false, "invalid yParity");
            }
            r4(false, "missing v");
          }(e2.v, e2.yParityAndS, e2.yParity), a2 = new t2(oa, A2, i2, s2);
          return o2 && (a2.#w = o2), r4(null == e2.yParity || Wn(e2.yParity, "sig.yParity") === a2.yParity, "yParity mismatch"), r4(null == e2.yParityAndS || e2.yParityAndS === a2.yParityAndS, "yParityAndS mismatch"), a2;
        }
      };
      var ca = class t2 {
        #v;
        constructor(t3) {
          vn(32 === Rn(t3), "invalid private key", "privateKey", "[REDACTED]"), this.#v = Pn(t3);
        }
        get privateKey() {
          return this.#v;
        }
        get publicKey() {
          return t2.computePublicKey(this.#v);
        }
        get compressedPublicKey() {
          return t2.computePublicKey(this.#v, true);
        }
        sign(t3) {
          vn(32 === Rn(t3), "invalid digest length", "digest", t3);
          const e2 = Vs.sign(Nn(t3), Nn(this.#v), { lowS: true });
          return aa.from({ r: Zn(e2.r, 32), s: Zn(e2.s, 32), v: e2.recovery ? 28 : 27 });
        }
        computeSharedSecret(e2) {
          const r4 = t2.computePublicKey(e2);
          return Pn(Vs.getSharedSecret(Nn(this.#v), Sn(r4), false));
        }
        static computePublicKey(t3, e2) {
          let r4 = Sn(t3, "key");
          if (32 === r4.length) {
            return Pn(Vs.getPublicKey(r4, !!e2));
          }
          if (64 === r4.length) {
            const t4 = new Uint8Array(65);
            t4[0] = 4, t4.set(r4, 1), r4 = t4;
          }
          return Pn(Vs.ProjectivePoint.fromHex(r4).toRawBytes(e2));
        }
        static recoverPublicKey(t3, e2) {
          vn(32 === Rn(t3), "invalid digest length", "digest", t3);
          const r4 = aa.from(e2);
          let n2 = Vs.Signature.fromCompact(Nn(Tn([r4.r, r4.s])));
          n2 = n2.addRecoveryBit(r4.yParity);
          const A2 = n2.recoverPublicKey(Nn(t3));
          return vn(null != A2, "invalid signautre for digest", "signature", e2), "0x" + A2.toHex(false);
        }
        static addPoints(e2, r4, n2) {
          const A2 = Vs.ProjectivePoint.fromHex(t2.computePublicKey(e2).substring(2)), i2 = Vs.ProjectivePoint.fromHex(t2.computePublicKey(r4).substring(2));
          return "0x" + A2.add(i2).toHex(!!n2);
        }
      };
      var ha = BigInt(0);
      var ga = BigInt(36);
      function ua(t2) {
        const e2 = (t2 = t2.toLowerCase()).substring(2).split(""), r4 = new Uint8Array(40);
        for (let t3 = 0; t3 < 40; t3++)
          r4[t3] = e2[t3].charCodeAt(0);
        const n2 = Sn(no(r4));
        for (let t3 = 0; t3 < 40; t3 += 2)
          n2[t3 >> 1] >> 4 >= 8 && (e2[t3] = e2[t3].toUpperCase()), (15 & n2[t3 >> 1]) >= 8 && (e2[t3 + 1] = e2[t3 + 1].toUpperCase());
        return "0x" + e2.join("");
      }
      var la = {};
      for (let t2 = 0; t2 < 10; t2++)
        la[String(t2)] = String(t2);
      for (let t2 = 0; t2 < 26; t2++)
        la[String.fromCharCode(65 + t2)] = String(10 + t2);
      var fa = 15;
      var pa = function() {
        const t2 = {};
        for (let e2 = 0; e2 < 36; e2++) {
          t2["0123456789abcdefghijklmnopqrstuvwxyz"[e2]] = BigInt(e2);
        }
        return t2;
      }();
      function da(t2) {
        if (vn("string" == typeof t2, "invalid address", "address", t2), t2.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
          t2.startsWith("0x") || (t2 = "0x" + t2);
          const e2 = ua(t2);
          return vn(!t2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || e2 === t2, "bad address checksum", "address", t2), e2;
        }
        if (t2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
          vn(t2.substring(2, 4) === function(t3) {
            let e3 = (t3 = (t3 = t3.toUpperCase()).substring(4) + t3.substring(0, 2) + "00").split("").map((t4) => la[t4]).join("");
            for (; e3.length >= fa; ) {
              let t4 = e3.substring(0, fa);
              e3 = parseInt(t4, 10) % 97 + e3.substring(t4.length);
            }
            let r4 = String(98 - parseInt(e3, 10) % 97);
            for (; r4.length < 2; )
              r4 = "0" + r4;
            return r4;
          }(t2), "bad icap checksum", "address", t2);
          let e2 = function(t3) {
            t3 = t3.toLowerCase();
            let e3 = ha;
            for (let r4 = 0; r4 < t3.length; r4++)
              e3 = e3 * ga + pa[t3[r4]];
            return e3;
          }(t2.substring(4)).toString(16);
          for (; e2.length < 40; )
            e2 = "0" + e2;
          return ua("0x" + e2);
        }
        vn(false, "invalid address", "address", t2);
      }
      function Ia(t2) {
        return t2 && "function" == typeof t2.getAddress;
      }
      async function ya(t2, e2) {
        const r4 = await e2;
        return null != r4 && "0x0000000000000000000000000000000000000000" !== r4 || (wn("string" != typeof t2, "unconfigured name", "UNCONFIGURED_NAME", { value: t2 }), vn(false, "invalid AddressLike value; did not resolve to a value address", "target", t2)), da(r4);
      }
      function Ca(t2, e2) {
        return "string" == typeof t2 ? t2.match(/^0x[0-9a-f]{40}$/i) ? da(t2) : (wn(null != e2, "ENS resolution requires a provider", "UNSUPPORTED_OPERATION", { operation: "resolveName" }), ya(t2, e2.resolveName(t2))) : Ia(t2) ? ya(t2, t2.getAddress()) : t2 && "function" == typeof t2.then ? ya(t2, t2) : void vn(false, "unsupported addressable value", "target", t2);
      }
      var ma = {};
      function Ba(t2, e2) {
        let r4 = false;
        return e2 < 0 && (r4 = true, e2 *= -1), new va(ma, `${r4 ? "" : "u"}int${e2}`, t2, { signed: r4, width: e2 });
      }
      function Ea(t2, e2) {
        return new va(ma, `bytes${e2 || ""}`, t2, { size: e2 });
      }
      var wa = Symbol.for("_ethers_typed");
      var va = class _va {
        type;
        value;
        #_;
        _typedSymbol;
        constructor(t2, e2, r4, n2) {
          null == n2 && (n2 = null), kn(ma, t2, "Typed"), yn(this, { _typedSymbol: wa, type: e2, value: r4 }), this.#_ = n2, this.format();
        }
        format() {
          if ("array" === this.type)
            throw new Error("");
          if ("dynamicArray" === this.type)
            throw new Error("");
          return "tuple" === this.type ? `tuple(${this.value.map((t2) => t2.format()).join(",")})` : this.type;
        }
        defaultValue() {
          return 0;
        }
        minValue() {
          return 0;
        }
        maxValue() {
          return 0;
        }
        isBigInt() {
          return !!this.type.match(/^u?int[0-9]+$/);
        }
        isData() {
          return this.type.startsWith("bytes");
        }
        isString() {
          return "string" === this.type;
        }
        get tupleName() {
          if ("tuple" !== this.type)
            throw TypeError("not a tuple");
          return this.#_;
        }
        get arrayLength() {
          if ("array" !== this.type)
            throw TypeError("not an array");
          return true === this.#_ ? -1 : false === this.#_ ? this.value.length : null;
        }
        static from(t2, e2) {
          return new _va(ma, t2, e2);
        }
        static uint8(t2) {
          return Ba(t2, 8);
        }
        static uint16(t2) {
          return Ba(t2, 16);
        }
        static uint24(t2) {
          return Ba(t2, 24);
        }
        static uint32(t2) {
          return Ba(t2, 32);
        }
        static uint40(t2) {
          return Ba(t2, 40);
        }
        static uint48(t2) {
          return Ba(t2, 48);
        }
        static uint56(t2) {
          return Ba(t2, 56);
        }
        static uint64(t2) {
          return Ba(t2, 64);
        }
        static uint72(t2) {
          return Ba(t2, 72);
        }
        static uint80(t2) {
          return Ba(t2, 80);
        }
        static uint88(t2) {
          return Ba(t2, 88);
        }
        static uint96(t2) {
          return Ba(t2, 96);
        }
        static uint104(t2) {
          return Ba(t2, 104);
        }
        static uint112(t2) {
          return Ba(t2, 112);
        }
        static uint120(t2) {
          return Ba(t2, 120);
        }
        static uint128(t2) {
          return Ba(t2, 128);
        }
        static uint136(t2) {
          return Ba(t2, 136);
        }
        static uint144(t2) {
          return Ba(t2, 144);
        }
        static uint152(t2) {
          return Ba(t2, 152);
        }
        static uint160(t2) {
          return Ba(t2, 160);
        }
        static uint168(t2) {
          return Ba(t2, 168);
        }
        static uint176(t2) {
          return Ba(t2, 176);
        }
        static uint184(t2) {
          return Ba(t2, 184);
        }
        static uint192(t2) {
          return Ba(t2, 192);
        }
        static uint200(t2) {
          return Ba(t2, 200);
        }
        static uint208(t2) {
          return Ba(t2, 208);
        }
        static uint216(t2) {
          return Ba(t2, 216);
        }
        static uint224(t2) {
          return Ba(t2, 224);
        }
        static uint232(t2) {
          return Ba(t2, 232);
        }
        static uint240(t2) {
          return Ba(t2, 240);
        }
        static uint248(t2) {
          return Ba(t2, 248);
        }
        static uint256(t2) {
          return Ba(t2, 256);
        }
        static uint(t2) {
          return Ba(t2, 256);
        }
        static int8(t2) {
          return Ba(t2, -8);
        }
        static int16(t2) {
          return Ba(t2, -16);
        }
        static int24(t2) {
          return Ba(t2, -24);
        }
        static int32(t2) {
          return Ba(t2, -32);
        }
        static int40(t2) {
          return Ba(t2, -40);
        }
        static int48(t2) {
          return Ba(t2, -48);
        }
        static int56(t2) {
          return Ba(t2, -56);
        }
        static int64(t2) {
          return Ba(t2, -64);
        }
        static int72(t2) {
          return Ba(t2, -72);
        }
        static int80(t2) {
          return Ba(t2, -80);
        }
        static int88(t2) {
          return Ba(t2, -88);
        }
        static int96(t2) {
          return Ba(t2, -96);
        }
        static int104(t2) {
          return Ba(t2, -104);
        }
        static int112(t2) {
          return Ba(t2, -112);
        }
        static int120(t2) {
          return Ba(t2, -120);
        }
        static int128(t2) {
          return Ba(t2, -128);
        }
        static int136(t2) {
          return Ba(t2, -136);
        }
        static int144(t2) {
          return Ba(t2, -144);
        }
        static int152(t2) {
          return Ba(t2, -152);
        }
        static int160(t2) {
          return Ba(t2, -160);
        }
        static int168(t2) {
          return Ba(t2, -168);
        }
        static int176(t2) {
          return Ba(t2, -176);
        }
        static int184(t2) {
          return Ba(t2, -184);
        }
        static int192(t2) {
          return Ba(t2, -192);
        }
        static int200(t2) {
          return Ba(t2, -200);
        }
        static int208(t2) {
          return Ba(t2, -208);
        }
        static int216(t2) {
          return Ba(t2, -216);
        }
        static int224(t2) {
          return Ba(t2, -224);
        }
        static int232(t2) {
          return Ba(t2, -232);
        }
        static int240(t2) {
          return Ba(t2, -240);
        }
        static int248(t2) {
          return Ba(t2, -248);
        }
        static int256(t2) {
          return Ba(t2, -256);
        }
        static int(t2) {
          return Ba(t2, -256);
        }
        static bytes1(t2) {
          return Ea(t2, 1);
        }
        static bytes2(t2) {
          return Ea(t2, 2);
        }
        static bytes3(t2) {
          return Ea(t2, 3);
        }
        static bytes4(t2) {
          return Ea(t2, 4);
        }
        static bytes5(t2) {
          return Ea(t2, 5);
        }
        static bytes6(t2) {
          return Ea(t2, 6);
        }
        static bytes7(t2) {
          return Ea(t2, 7);
        }
        static bytes8(t2) {
          return Ea(t2, 8);
        }
        static bytes9(t2) {
          return Ea(t2, 9);
        }
        static bytes10(t2) {
          return Ea(t2, 10);
        }
        static bytes11(t2) {
          return Ea(t2, 11);
        }
        static bytes12(t2) {
          return Ea(t2, 12);
        }
        static bytes13(t2) {
          return Ea(t2, 13);
        }
        static bytes14(t2) {
          return Ea(t2, 14);
        }
        static bytes15(t2) {
          return Ea(t2, 15);
        }
        static bytes16(t2) {
          return Ea(t2, 16);
        }
        static bytes17(t2) {
          return Ea(t2, 17);
        }
        static bytes18(t2) {
          return Ea(t2, 18);
        }
        static bytes19(t2) {
          return Ea(t2, 19);
        }
        static bytes20(t2) {
          return Ea(t2, 20);
        }
        static bytes21(t2) {
          return Ea(t2, 21);
        }
        static bytes22(t2) {
          return Ea(t2, 22);
        }
        static bytes23(t2) {
          return Ea(t2, 23);
        }
        static bytes24(t2) {
          return Ea(t2, 24);
        }
        static bytes25(t2) {
          return Ea(t2, 25);
        }
        static bytes26(t2) {
          return Ea(t2, 26);
        }
        static bytes27(t2) {
          return Ea(t2, 27);
        }
        static bytes28(t2) {
          return Ea(t2, 28);
        }
        static bytes29(t2) {
          return Ea(t2, 29);
        }
        static bytes30(t2) {
          return Ea(t2, 30);
        }
        static bytes31(t2) {
          return Ea(t2, 31);
        }
        static bytes32(t2) {
          return Ea(t2, 32);
        }
        static address(t2) {
          return new _va(ma, "address", t2);
        }
        static bool(t2) {
          return new _va(ma, "bool", !!t2);
        }
        static bytes(t2) {
          return new _va(ma, "bytes", t2);
        }
        static string(t2) {
          return new _va(ma, "string", t2);
        }
        static array(t2, e2) {
          throw new Error("not implemented yet");
        }
        static tuple(t2, e2) {
          throw new Error("not implemented yet");
        }
        static overrides(t2) {
          return new _va(ma, "overrides", Object.assign({}, t2));
        }
        static isTyped(t2) {
          return t2 && "object" == typeof t2 && "_typedSymbol" in t2 && t2._typedSymbol === wa;
        }
        static dereference(t2, e2) {
          if (_va.isTyped(t2)) {
            if (t2.type !== e2)
              throw new Error(`invalid type: expecetd ${e2}, got ${t2.type}`);
            return t2.value;
          }
          return t2;
        }
      };
      var _a = class extends GA {
        constructor(t2) {
          super("address", "address", t2, false);
        }
        defaultValue() {
          return "0x0000000000000000000000000000000000000000";
        }
        encode(t2, e2) {
          let r4 = va.dereference(e2, "string");
          try {
            r4 = da(r4);
          } catch (t3) {
            return this._throwError(t3.message, e2);
          }
          return t2.writeValue(r4);
        }
        decode(t2) {
          return da(Zn(t2.readValue(), 20));
        }
      };
      var Qa = class extends GA {
        coder;
        constructor(t2) {
          super(t2.name, t2.type, "_", t2.dynamic), this.coder = t2;
        }
        defaultValue() {
          return this.coder.defaultValue();
        }
        encode(t2, e2) {
          return this.coder.encode(t2, e2);
        }
        decode(t2) {
          return this.coder.decode(t2);
        }
      };
      function ba(t2, e2, r4) {
        let n2 = [];
        if (Array.isArray(r4))
          n2 = r4;
        else if (r4 && "object" == typeof r4) {
          let t3 = {};
          n2 = e2.map((e3) => {
            const n3 = e3.localName;
            return wn(n3, "cannot encode object for signature with missing names", "INVALID_ARGUMENT", { argument: "values", info: { coder: e3 }, value: r4 }), wn(!t3[n3], "cannot encode object for signature with duplicate names", "INVALID_ARGUMENT", { argument: "values", info: { coder: e3 }, value: r4 }), t3[n3] = true, r4[n3];
          });
        } else
          vn(false, "invalid tuple value", "tuple", r4);
        vn(e2.length === n2.length, "types/value length mismatch", "tuple", r4);
        let A2 = new HA(), i2 = new HA(), o2 = [];
        e2.forEach((t3, e3) => {
          let r5 = n2[e3];
          if (t3.dynamic) {
            let e4 = i2.length;
            t3.encode(i2, r5);
            let n3 = A2.writeUpdatableValue();
            o2.push((t4) => {
              n3(t4 + e4);
            });
          } else
            t3.encode(A2, r5);
        }), o2.forEach((t3) => {
          t3(A2.length);
        });
        let s2 = t2.appendWriter(A2);
        return s2 += t2.appendWriter(i2), s2;
      }
      function ka(t2, e2) {
        let r4 = [], n2 = [], A2 = t2.subReader(0);
        return e2.forEach((e3) => {
          let i2 = null;
          if (e3.dynamic) {
            let r5 = t2.readIndex(), n3 = A2.subReader(r5);
            try {
              i2 = e3.decode(n3);
            } catch (t3) {
              if (mn(t3, "BUFFER_OVERRUN"))
                throw t3;
              i2 = t3, i2.baseType = e3.name, i2.name = e3.localName, i2.type = e3.type;
            }
          } else
            try {
              i2 = e3.decode(t2);
            } catch (t3) {
              if (mn(t3, "BUFFER_OVERRUN"))
                throw t3;
              i2 = t3, i2.baseType = e3.name, i2.name = e3.localName, i2.type = e3.type;
            }
          if (null == i2)
            throw new Error("investigate");
          r4.push(i2), n2.push(e3.localName || null);
        }), RA.fromItems(r4, n2);
      }
      var Da = class extends GA {
        coder;
        length;
        constructor(t2, e2, r4) {
          super("array", t2.type + "[" + (e2 >= 0 ? e2 : "") + "]", r4, -1 === e2 || t2.dynamic), yn(this, { coder: t2, length: e2 });
        }
        defaultValue() {
          const t2 = this.coder.defaultValue(), e2 = [];
          for (let r4 = 0; r4 < this.length; r4++)
            e2.push(t2);
          return e2;
        }
        encode(t2, e2) {
          const r4 = va.dereference(e2, "array");
          Array.isArray(r4) || this._throwError("expected array value", r4);
          let n2 = this.length;
          -1 === n2 && (n2 = r4.length, t2.writeValue(r4.length)), _n(r4.length, n2, "coder array" + (this.localName ? " " + this.localName : ""));
          let A2 = [];
          for (let t3 = 0; t3 < r4.length; t3++)
            A2.push(this.coder);
          return ba(t2, A2, r4);
        }
        decode(t2) {
          let e2 = this.length;
          -1 === e2 && (e2 = t2.readIndex(), wn(e2 * MA <= t2.dataLength, "insufficient data length", "BUFFER_OVERRUN", { buffer: t2.bytes, offset: e2 * MA, length: t2.dataLength }));
          let r4 = [];
          for (let t3 = 0; t3 < e2; t3++)
            r4.push(new Qa(this.coder));
          return ka(t2, r4);
        }
      };
      var Sa = class extends GA {
        constructor(t2) {
          super("bool", "bool", t2, false);
        }
        defaultValue() {
          return false;
        }
        encode(t2, e2) {
          const r4 = va.dereference(e2, "bool");
          return t2.writeValue(r4 ? 1 : 0);
        }
        decode(t2) {
          return !!t2.readValue();
        }
      };
      var Na = class extends GA {
        constructor(t2, e2) {
          super(t2, t2, e2, true);
        }
        defaultValue() {
          return "0x";
        }
        encode(t2, e2) {
          e2 = Nn(e2);
          let r4 = t2.writeValue(e2.length);
          return r4 += t2.writeBytes(e2), r4;
        }
        decode(t2) {
          return t2.readBytes(t2.readIndex(), true);
        }
      };
      var Ma = class extends Na {
        constructor(t2) {
          super("bytes", t2);
        }
        decode(t2) {
          return Pn(super.decode(t2));
        }
      };
      var xa = class extends GA {
        size;
        constructor(t2, e2) {
          let r4 = "bytes" + String(t2);
          super(r4, r4, e2, false), yn(this, { size: t2 }, { size: "number" });
        }
        defaultValue() {
          return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + 2 * this.size);
        }
        encode(t2, e2) {
          let r4 = Nn(va.dereference(e2, this.type));
          return r4.length !== this.size && this._throwError("incorrect data length", e2), t2.writeBytes(r4);
        }
        decode(t2) {
          return Pn(t2.readBytes(this.size));
        }
      };
      var Fa = new Uint8Array([]);
      var Pa = class extends GA {
        constructor(t2) {
          super("null", "", t2, false);
        }
        defaultValue() {
          return null;
        }
        encode(t2, e2) {
          return null != e2 && this._throwError("not null", e2), t2.writeBytes(Fa);
        }
        decode(t2) {
          return t2.readBytes(0), null;
        }
      };
      var Ta = BigInt(0);
      var Ra = BigInt(1);
      var Ua = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var Ga = class extends GA {
        size;
        signed;
        constructor(t2, e2, r4) {
          const n2 = (e2 ? "int" : "uint") + 8 * t2;
          super(n2, n2, r4, false), yn(this, { size: t2, signed: e2 }, { size: "number", signed: "boolean" });
        }
        defaultValue() {
          return 0;
        }
        encode(t2, e2) {
          let r4 = zn(va.dereference(e2, this.type)), n2 = jn(Ua, 256);
          if (this.signed) {
            let t3 = jn(n2, 8 * this.size - 1);
            (r4 > t3 || r4 < -(t3 + Ra)) && this._throwError("value out-of-bounds", e2), r4 = Jn(r4, 256);
          } else
            (r4 < Ta || r4 > jn(n2, 8 * this.size)) && this._throwError("value out-of-bounds", e2);
          return t2.writeValue(r4);
        }
        decode(t2) {
          let e2 = jn(t2.readValue(), 8 * this.size);
          return this.signed && (e2 = Kn(e2, 8 * this.size)), e2;
        }
      };
      var Ha = class extends Na {
        constructor(t2) {
          super("string", t2);
        }
        defaultValue() {
          return "";
        }
        encode(t2, e2) {
          return super.encode(t2, aA(va.dereference(e2, "string")));
        }
        decode(t2) {
          return cA(super.decode(t2));
        }
      };
      var La = class extends GA {
        coders;
        constructor(t2, e2) {
          let r4 = false;
          const n2 = [];
          t2.forEach((t3) => {
            t3.dynamic && (r4 = true), n2.push(t3.type);
          });
          super("tuple", "tuple(" + n2.join(",") + ")", e2, r4), yn(this, { coders: Object.freeze(t2.slice()) });
        }
        defaultValue() {
          const t2 = [];
          this.coders.forEach((e3) => {
            t2.push(e3.defaultValue());
          });
          const e2 = this.coders.reduce((t3, e3) => {
            const r4 = e3.localName;
            return r4 && (t3[r4] || (t3[r4] = 0), t3[r4]++), t3;
          }, {});
          return this.coders.forEach((r4, n2) => {
            let A2 = r4.localName;
            A2 && 1 === e2[A2] && ("length" === A2 && (A2 = "_length"), null == t2[A2] && (t2[A2] = t2[n2]));
          }), Object.freeze(t2);
        }
        encode(t2, e2) {
          const r4 = va.dereference(e2, "tuple");
          return ba(t2, this.coders, r4);
        }
        decode(t2) {
          return ka(t2, this.coders);
        }
      };
      function Oa(t2) {
        return no(aA(t2));
      }
      function Ya(t2, e2) {
        return { address: da(t2), storageKeys: e2.map((t3, e3) => (vn(Mn(t3, 32), "invalid slot", `storageKeys[${e3}]`, t3), t3.toLowerCase())) };
      }
      function Ka(t2) {
        if (Array.isArray(t2))
          return t2.map((e3, r4) => Array.isArray(e3) ? (vn(2 === e3.length, "invalid slot set", `value[${r4}]`, e3), Ya(e3[0], e3[1])) : (vn(null != e3 && "object" == typeof e3, "invalid address-slot set", "value", t2), Ya(e3.address, e3.storageKeys)));
        vn(null != t2 && "object" == typeof t2, "invalid access list", "value", t2);
        const e2 = Object.keys(t2).map((e3) => {
          const r4 = t2[e3].reduce((t3, e4) => (t3[e4] = true, t3), {});
          return Ya(e3, Object.keys(r4).sort());
        });
        return e2.sort((t3, e3) => t3.address.localeCompare(e3.address)), e2;
      }
      function Ja(t2) {
        let e2;
        return e2 = "string" == typeof t2 ? ca.computePublicKey(t2, false) : t2.publicKey, da(no("0x" + e2.substring(4)).substring(26));
      }
      var ja = BigInt(0);
      var za = BigInt(2);
      var qa = BigInt(27);
      var Xa = BigInt(28);
      var Va = BigInt(35);
      var Wa = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      function Za(t2) {
        return "0x" === t2 ? null : da(t2);
      }
      function $a(t2, e2) {
        try {
          return Ka(t2);
        } catch (r4) {
          vn(false, r4.message, e2, t2);
        }
      }
      function tc(t2, e2) {
        return "0x" === t2 ? 0 : Wn(t2, e2);
      }
      function ec3(t2, e2) {
        if ("0x" === t2)
          return ja;
        const r4 = zn(t2, e2);
        return vn(r4 <= Wa, "value exceeds uint size", e2, r4), r4;
      }
      function rc(t2, e2) {
        const r4 = zn(t2, "value"), n2 = $n(r4);
        return vn(n2.length <= 32, "value too large", `tx.${e2}`, r4), n2;
      }
      function nc(t2) {
        return Ka(t2).map((t3) => [t3.address, t3.storageKeys]);
      }
      function Ac(t2, e2) {
        vn(Array.isArray(t2), `invalid ${e2}`, "value", t2);
        for (let e3 = 0; e3 < t2.length; e3++)
          vn(Mn(t2[e3], 32), "invalid ${ param } hash", `value[${e3}]`, t2[e3]);
        return t2;
      }
      function ic(t2, e2) {
        const r4 = [rc(t2.nonce, "nonce"), rc(t2.gasPrice || 0, "gasPrice"), rc(t2.gasLimit, "gasLimit"), t2.to || "0x", rc(t2.value, "value"), t2.data];
        let n2 = ja;
        if (t2.chainId != ja)
          n2 = zn(t2.chainId, "tx.chainId"), vn(!e2 || null == e2.networkV || e2.legacyChainId === n2, "tx.chainId/sig.v mismatch", "sig", e2);
        else if (t2.signature) {
          const e3 = t2.signature.legacyChainId;
          null != e3 && (n2 = e3);
        }
        if (!e2)
          return n2 !== ja && (r4.push($n(n2)), r4.push("0x"), r4.push("0x")), kA(r4);
        let A2 = BigInt(27 + e2.yParity);
        return n2 !== ja ? A2 = aa.getChainIdV(n2, e2.v) : BigInt(e2.v) !== A2 && vn(false, "tx.chainId/sig.v mismatch", "sig", e2), r4.push($n(A2)), r4.push($n(e2.r)), r4.push($n(e2.s)), kA(r4);
      }
      function oc(t2, e2) {
        let r4;
        try {
          if (r4 = tc(e2[0], "yParity"), 0 !== r4 && 1 !== r4)
            throw new Error("bad yParity");
        } catch (t3) {
          vn(false, "invalid yParity", "yParity", e2[0]);
        }
        const n2 = Hn(e2[1], 32), A2 = Hn(e2[2], 32), i2 = aa.from({ r: n2, s: A2, yParity: r4 });
        t2.signature = i2;
      }
      function sc(t2, e2) {
        const r4 = [rc(t2.chainId, "chainId"), rc(t2.nonce, "nonce"), rc(t2.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), rc(t2.maxFeePerGas || 0, "maxFeePerGas"), rc(t2.gasLimit, "gasLimit"), t2.to || "0x", rc(t2.value, "value"), t2.data, nc(t2.accessList || [])];
        return e2 && (r4.push(rc(e2.yParity, "yParity")), r4.push($n(e2.r)), r4.push($n(e2.s))), Tn(["0x02", kA(r4)]);
      }
      function ac(t2, e2) {
        const r4 = [rc(t2.chainId, "chainId"), rc(t2.nonce, "nonce"), rc(t2.gasPrice || 0, "gasPrice"), rc(t2.gasLimit, "gasLimit"), t2.to || "0x", rc(t2.value, "value"), t2.data, nc(t2.accessList || [])];
        return e2 && (r4.push(rc(e2.yParity, "recoveryParam")), r4.push($n(e2.r)), r4.push($n(e2.s))), Tn(["0x01", kA(r4)]);
      }
      function cc(t2, e2) {
        const r4 = [rc(t2.chainId, "chainId"), rc(t2.nonce, "nonce"), rc(t2.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), rc(t2.maxFeePerGas || 0, "maxFeePerGas"), rc(t2.gasLimit, "gasLimit"), t2.to || Ws, rc(t2.value, "value"), t2.data, nc(t2.accessList || []), rc(t2.maxFeePerBlobGas || 0, "maxFeePerBlobGas"), Ac(t2.blobVersionedHashes || [], "blobVersionedHashes")];
        return e2 && (r4.push(rc(e2.yParity, "yParity")), r4.push($n(e2.r)), r4.push($n(e2.s))), Tn(["0x03", kA(r4)]);
      }
      var hc = class _hc {
        #Q;
        #b;
        #g;
        #k;
        #D;
        #S;
        #N;
        #M;
        #x;
        #F;
        #P;
        #T;
        #R;
        #U;
        get type() {
          return this.#Q;
        }
        set type(t2) {
          switch (t2) {
            case null:
              this.#Q = null;
              break;
            case 0:
            case "legacy":
              this.#Q = 0;
              break;
            case 1:
            case "berlin":
            case "eip-2930":
              this.#Q = 1;
              break;
            case 2:
            case "london":
            case "eip-1559":
              this.#Q = 2;
              break;
            case 3:
            case "cancun":
            case "eip-4844":
              this.#Q = 3;
              break;
            default:
              vn(false, "unsupported transaction type", "type", t2);
          }
        }
        get typeName() {
          switch (this.type) {
            case 0:
              return "legacy";
            case 1:
              return "eip-2930";
            case 2:
              return "eip-1559";
            case 3:
              return "eip-4844";
          }
          return null;
        }
        get to() {
          const t2 = this.#b;
          return null == t2 && 3 === this.type ? Ws : t2;
        }
        set to(t2) {
          this.#b = null == t2 ? null : da(t2);
        }
        get nonce() {
          return this.#k;
        }
        set nonce(t2) {
          this.#k = Wn(t2, "value");
        }
        get gasLimit() {
          return this.#D;
        }
        set gasLimit(t2) {
          this.#D = zn(t2);
        }
        get gasPrice() {
          const t2 = this.#S;
          return null != t2 || 0 !== this.type && 1 !== this.type ? t2 : ja;
        }
        set gasPrice(t2) {
          this.#S = null == t2 ? null : zn(t2, "gasPrice");
        }
        get maxPriorityFeePerGas() {
          const t2 = this.#N;
          return null == t2 ? 2 === this.type || 3 === this.type ? ja : null : t2;
        }
        set maxPriorityFeePerGas(t2) {
          this.#N = null == t2 ? null : zn(t2, "maxPriorityFeePerGas");
        }
        get maxFeePerGas() {
          const t2 = this.#M;
          return null == t2 ? 2 === this.type || 3 === this.type ? ja : null : t2;
        }
        set maxFeePerGas(t2) {
          this.#M = null == t2 ? null : zn(t2, "maxFeePerGas");
        }
        get data() {
          return this.#g;
        }
        set data(t2) {
          this.#g = Pn(t2);
        }
        get value() {
          return this.#x;
        }
        set value(t2) {
          this.#x = zn(t2, "value");
        }
        get chainId() {
          return this.#F;
        }
        set chainId(t2) {
          this.#F = zn(t2);
        }
        get signature() {
          return this.#P || null;
        }
        set signature(t2) {
          this.#P = null == t2 ? null : aa.from(t2);
        }
        get accessList() {
          const t2 = this.#T || null;
          return null == t2 ? 1 === this.type || 2 === this.type || 3 === this.type ? [] : null : t2;
        }
        set accessList(t2) {
          this.#T = null == t2 ? null : Ka(t2);
        }
        get maxFeePerBlobGas() {
          const t2 = this.#R;
          return null == t2 && 3 === this.type ? ja : t2;
        }
        set maxFeePerBlobGas(t2) {
          this.#R = null == t2 ? null : zn(t2, "maxFeePerBlobGas");
        }
        get blobVersionedHashes() {
          let t2 = this.#U;
          return null == t2 && 3 === this.type ? [] : t2;
        }
        set blobVersionedHashes(t2) {
          if (null != t2) {
            vn(Array.isArray(t2), "blobVersionedHashes must be an Array", "value", t2), t2 = t2.slice();
            for (let e2 = 0; e2 < t2.length; e2++)
              vn(Mn(t2[e2], 32), "invalid blobVersionedHash", `value[${e2}]`, t2[e2]);
          }
          this.#U = t2;
        }
        constructor() {
          this.#Q = null, this.#b = null, this.#k = 0, this.#D = ja, this.#S = null, this.#N = null, this.#M = null, this.#g = "0x", this.#x = ja, this.#F = ja, this.#P = null, this.#T = null, this.#R = null, this.#U = null;
        }
        get hash() {
          return null == this.signature ? null : no(this.serialized);
        }
        get unsignedHash() {
          return no(this.unsignedSerialized);
        }
        get from() {
          return null == this.signature ? null : function(t2, e2) {
            return Ja(ca.recoverPublicKey(t2, e2));
          }(this.unsignedHash, this.signature);
        }
        get fromPublicKey() {
          return null == this.signature ? null : ca.recoverPublicKey(this.unsignedHash, this.signature);
        }
        isSigned() {
          return null != this.signature;
        }
        get serialized() {
          switch (wn(null != this.signature, "cannot serialize unsigned transaction; maybe you meant .unsignedSerialized", "UNSUPPORTED_OPERATION", { operation: ".serialized" }), this.inferType()) {
            case 0:
              return ic(this, this.signature);
            case 1:
              return ac(this, this.signature);
            case 2:
              return sc(this, this.signature);
            case 3:
              return cc(this, this.signature);
          }
          wn(false, "unsupported transaction type", "UNSUPPORTED_OPERATION", { operation: ".serialized" });
        }
        get unsignedSerialized() {
          switch (this.inferType()) {
            case 0:
              return ic(this);
            case 1:
              return ac(this);
            case 2:
              return sc(this);
            case 3:
              return cc(this);
          }
          wn(false, "unsupported transaction type", "UNSUPPORTED_OPERATION", { operation: ".unsignedSerialized" });
        }
        inferType() {
          const t2 = this.inferTypes();
          return t2.indexOf(2) >= 0 ? 2 : t2.pop();
        }
        inferTypes() {
          const t2 = null != this.gasPrice, e2 = null != this.maxFeePerGas || null != this.maxPriorityFeePerGas, r4 = null != this.accessList, n2 = null != this.#R || this.#U;
          null != this.maxFeePerGas && null != this.maxPriorityFeePerGas && wn(this.maxFeePerGas >= this.maxPriorityFeePerGas, "priorityFee cannot be more than maxFee", "BAD_DATA", { value: this }), wn(!e2 || 0 !== this.type && 1 !== this.type, "transaction type cannot have maxFeePerGas or maxPriorityFeePerGas", "BAD_DATA", { value: this }), wn(0 !== this.type || !r4, "legacy transaction cannot have accessList", "BAD_DATA", { value: this });
          const A2 = [];
          return null != this.type ? A2.push(this.type) : e2 ? A2.push(2) : t2 ? (A2.push(1), r4 || A2.push(0)) : r4 ? (A2.push(1), A2.push(2)) : (n2 && this.to || (A2.push(0), A2.push(1), A2.push(2)), A2.push(3)), A2.sort(), A2;
        }
        isLegacy() {
          return 0 === this.type;
        }
        isBerlin() {
          return 1 === this.type;
        }
        isLondon() {
          return 2 === this.type;
        }
        isCancun() {
          return 3 === this.type;
        }
        clone() {
          return _hc.from(this);
        }
        toJSON() {
          const t2 = (t3) => null == t3 ? null : t3.toString();
          return { type: this.type, to: this.to, data: this.data, nonce: this.nonce, gasLimit: t2(this.gasLimit), gasPrice: t2(this.gasPrice), maxPriorityFeePerGas: t2(this.maxPriorityFeePerGas), maxFeePerGas: t2(this.maxFeePerGas), value: t2(this.value), chainId: t2(this.chainId), sig: this.signature ? this.signature.toJSON() : null, accessList: this.accessList };
        }
        static from(t2) {
          if (null == t2)
            return new _hc();
          if ("string" == typeof t2) {
            const e3 = Sn(t2);
            if (e3[0] >= 127)
              return _hc.from(function(t3) {
                const e4 = vA(t3);
                vn(Array.isArray(e4) && (9 === e4.length || 6 === e4.length), "invalid field count for legacy transaction", "data", t3);
                const r4 = { type: 0, nonce: tc(e4[0], "nonce"), gasPrice: ec3(e4[1], "gasPrice"), gasLimit: ec3(e4[2], "gasLimit"), to: Za(e4[3]), value: ec3(e4[4], "value"), data: Pn(e4[5]), chainId: ja };
                if (6 === e4.length)
                  return r4;
                const n2 = ec3(e4[6], "v"), A2 = ec3(e4[7], "r"), i2 = ec3(e4[8], "s");
                if (A2 === ja && i2 === ja)
                  r4.chainId = n2;
                else {
                  let A3 = (n2 - Va) / za;
                  A3 < ja && (A3 = ja), r4.chainId = A3, vn(A3 !== ja || n2 === qa || n2 === Xa, "non-canonical legacy v", "v", e4[6]), r4.signature = aa.from({ r: Hn(e4[7], 32), s: Hn(e4[8], 32), v: n2 }), r4.hash = no(t3);
                }
                return r4;
              }(e3));
            switch (e3[0]) {
              case 1:
                return _hc.from(function(t3) {
                  const e4 = vA(Sn(t3).slice(1));
                  vn(Array.isArray(e4) && (8 === e4.length || 11 === e4.length), "invalid field count for transaction type: 1", "data", Pn(t3));
                  const r4 = { type: 1, chainId: ec3(e4[0], "chainId"), nonce: tc(e4[1], "nonce"), gasPrice: ec3(e4[2], "gasPrice"), gasLimit: ec3(e4[3], "gasLimit"), to: Za(e4[4]), value: ec3(e4[5], "value"), data: Pn(e4[6]), accessList: $a(e4[7], "accessList") };
                  return 8 === e4.length || (r4.hash = no(t3), oc(r4, e4.slice(8))), r4;
                }(e3));
              case 2:
                return _hc.from(function(t3) {
                  const e4 = vA(Sn(t3).slice(1));
                  vn(Array.isArray(e4) && (9 === e4.length || 12 === e4.length), "invalid field count for transaction type: 2", "data", Pn(t3));
                  const r4 = { type: 2, chainId: ec3(e4[0], "chainId"), nonce: tc(e4[1], "nonce"), maxPriorityFeePerGas: ec3(e4[2], "maxPriorityFeePerGas"), maxFeePerGas: ec3(e4[3], "maxFeePerGas"), gasPrice: null, gasLimit: ec3(e4[4], "gasLimit"), to: Za(e4[5]), value: ec3(e4[6], "value"), data: Pn(e4[7]), accessList: $a(e4[8], "accessList") };
                  return 9 === e4.length || (r4.hash = no(t3), oc(r4, e4.slice(9))), r4;
                }(e3));
              case 3:
                return _hc.from(function(t3) {
                  const e4 = vA(Sn(t3).slice(1));
                  vn(Array.isArray(e4) && (11 === e4.length || 14 === e4.length), "invalid field count for transaction type: 3", "data", Pn(t3));
                  const r4 = { type: 3, chainId: ec3(e4[0], "chainId"), nonce: tc(e4[1], "nonce"), maxPriorityFeePerGas: ec3(e4[2], "maxPriorityFeePerGas"), maxFeePerGas: ec3(e4[3], "maxFeePerGas"), gasPrice: null, gasLimit: ec3(e4[4], "gasLimit"), to: Za(e4[5]), value: ec3(e4[6], "value"), data: Pn(e4[7]), accessList: $a(e4[8], "accessList"), maxFeePerBlobGas: ec3(e4[9], "maxFeePerBlobGas"), blobVersionedHashes: e4[10] };
                  vn(null != r4.to, "invalid address for transaction type: 3", "data", t3), vn(Array.isArray(r4.blobVersionedHashes), "invalid blobVersionedHashes: must be an array", "data", t3);
                  for (let e5 = 0; e5 < r4.blobVersionedHashes.length; e5++)
                    vn(Mn(r4.blobVersionedHashes[e5], 32), `invalid blobVersionedHash at index ${e5}: must be length 32`, "data", t3);
                  return 11 === e4.length || (r4.hash = no(t3), oc(r4, e4.slice(11))), r4;
                }(e3));
            }
            wn(false, "unsupported transaction type", "UNSUPPORTED_OPERATION", { operation: "from" });
          }
          const e2 = new _hc();
          return null != t2.type && (e2.type = t2.type), null != t2.to && (e2.to = t2.to), null != t2.nonce && (e2.nonce = t2.nonce), null != t2.gasLimit && (e2.gasLimit = t2.gasLimit), null != t2.gasPrice && (e2.gasPrice = t2.gasPrice), null != t2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = t2.maxPriorityFeePerGas), null != t2.maxFeePerGas && (e2.maxFeePerGas = t2.maxFeePerGas), null != t2.maxFeePerBlobGas && (e2.maxFeePerBlobGas = t2.maxFeePerBlobGas), null != t2.data && (e2.data = t2.data), null != t2.value && (e2.value = t2.value), null != t2.chainId && (e2.chainId = t2.chainId), null != t2.signature && (e2.signature = aa.from(t2.signature)), null != t2.accessList && (e2.accessList = t2.accessList), null != t2.blobVersionedHashes && (e2.blobVersionedHashes = t2.blobVersionedHashes), null != t2.hash && (vn(e2.isSigned(), "unsigned transaction cannot define hash", "tx", t2), vn(e2.hash === t2.hash, "hash mismatch", "tx", t2)), null != t2.from && (vn(e2.isSigned(), "unsigned transaction cannot define from", "tx", t2), vn(e2.from.toLowerCase() === (t2.from || "").toLowerCase(), "from mismatch", "tx", t2)), e2;
        }
      };
      var gc = new Uint8Array(32);
      gc.fill(0);
      var uc = BigInt(-1);
      var lc = BigInt(0);
      var fc = BigInt(1);
      var pc = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var dc = Zn(fc, 32);
      var Ic = Zn(lc, 32);
      var yc = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" };
      var Cc = ["name", "version", "chainId", "verifyingContract", "salt"];
      function mc(t2) {
        return function(e2) {
          return vn("string" == typeof e2, `invalid domain value for ${JSON.stringify(t2)}`, `domain.${t2}`, e2), e2;
        };
      }
      var Bc = { name: mc("name"), version: mc("version"), chainId: function(t2) {
        const e2 = zn(t2, "domain.chainId");
        return vn(e2 >= 0, "invalid chain ID", "domain.chainId", t2), Number.isSafeInteger(e2) ? Number(e2) : function(t3) {
          let e3 = Pn(xn(t3) ? t3 : $n(t3)).substring(2);
          for (; e3.startsWith("0"); )
            e3 = e3.substring(1);
          return "" === e3 && (e3 = "0"), "0x" + e3;
        }(e2);
      }, verifyingContract: function(t2) {
        try {
          return da(t2).toLowerCase();
        } catch (t3) {
        }
        vn(false, 'invalid domain value "verifyingContract"', "domain.verifyingContract", t2);
      }, salt: function(t2) {
        const e2 = Sn(t2, "domain.salt");
        return vn(32 === e2.length, 'invalid domain value "salt"', "domain.salt", t2), Pn(e2);
      } };
      function Ec(t2) {
        {
          const e2 = t2.match(/^(u?)int(\d+)$/);
          if (e2) {
            const r4 = "" === e2[1], n2 = parseInt(e2[2]);
            vn(n2 % 8 == 0 && 0 !== n2 && n2 <= 256 && e2[2] === String(n2), "invalid numeric width", "type", t2);
            const A2 = jn(pc, r4 ? n2 - 1 : n2), i2 = r4 ? (A2 + fc) * uc : lc;
            return function(e3) {
              const n3 = zn(e3, "value");
              return vn(n3 >= i2 && n3 <= A2, `value out-of-bounds for ${t2}`, "value", n3), Zn(r4 ? Jn(n3, 256) : n3, 32);
            };
          }
        }
        {
          const e2 = t2.match(/^bytes(\d+)$/);
          if (e2) {
            const r4 = parseInt(e2[1]);
            return vn(0 !== r4 && r4 <= 32 && e2[1] === String(r4), "invalid bytes width", "type", t2), function(e3) {
              return vn(Sn(e3).length === r4, `invalid length for ${t2}`, "value", e3), function(t3) {
                const e4 = Sn(t3), r5 = e4.length % 32;
                return r5 ? Tn([e4, gc.slice(r5)]) : Pn(e4);
              }(e3);
            };
          }
        }
        switch (t2) {
          case "address":
            return function(t3) {
              return Hn(da(t3), 32);
            };
          case "bool":
            return function(t3) {
              return t3 ? dc : Ic;
            };
          case "bytes":
            return function(t3) {
              return no(t3);
            };
          case "string":
            return function(t3) {
              return Oa(t3);
            };
        }
        return null;
      }
      function wc(t2, e2) {
        return `${t2}(${e2.map(({ name: t3, type: e3 }) => e3 + " " + t3).join(",")})`;
      }
      function vc(t2) {
        const e2 = t2.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);
        return e2 ? { base: e2[1], index: e2[2] + e2[4], array: { base: e2[1], prefix: e2[1] + e2[2], count: e2[5] ? parseInt(e2[5]) : -1 } } : { base: t2 };
      }
      var _c = class t2 {
        primaryType;
        #G;
        get types() {
          return JSON.parse(this.#G);
        }
        #H;
        #L;
        constructor(t3) {
          this.#H = /* @__PURE__ */ new Map(), this.#L = /* @__PURE__ */ new Map();
          const e2 = /* @__PURE__ */ new Map(), r4 = /* @__PURE__ */ new Map(), n2 = /* @__PURE__ */ new Map(), A2 = {};
          Object.keys(t3).forEach((i3) => {
            A2[i3] = t3[i3].map(({ name: e3, type: r5 }) => {
              let { base: n3, index: A3 } = vc(r5);
              return "int" !== n3 || t3.int || (n3 = "int256"), "uint" !== n3 || t3.uint || (n3 = "uint256"), { name: e3, type: n3 + (A3 || "") };
            }), e2.set(i3, /* @__PURE__ */ new Set()), r4.set(i3, []), n2.set(i3, /* @__PURE__ */ new Set());
          }), this.#G = JSON.stringify(A2);
          for (const n3 in A2) {
            const i3 = /* @__PURE__ */ new Set();
            for (const o2 of A2[n3]) {
              vn(!i3.has(o2.name), `duplicate variable name ${JSON.stringify(o2.name)} in ${JSON.stringify(n3)}`, "types", t3), i3.add(o2.name);
              const A3 = vc(o2.type).base;
              vn(A3 !== n3, `circular type reference to ${JSON.stringify(A3)}`, "types", t3);
              Ec(A3) || (vn(r4.has(A3), `unknown type ${JSON.stringify(A3)}`, "types", t3), r4.get(A3).push(n3), e2.get(n3).add(A3));
            }
          }
          const i2 = Array.from(r4.keys()).filter((t4) => 0 === r4.get(t4).length);
          vn(0 !== i2.length, "missing primary type", "types", t3), vn(1 === i2.length, `ambiguous primary types or unused types: ${i2.map((t4) => JSON.stringify(t4)).join(", ")}`, "types", t3), yn(this, { primaryType: i2[0] }), function A3(i3, o2) {
            vn(!o2.has(i3), `circular type reference to ${JSON.stringify(i3)}`, "types", t3), o2.add(i3);
            for (const t4 of e2.get(i3))
              if (r4.has(t4)) {
                A3(t4, o2);
                for (const e3 of o2)
                  n2.get(e3).add(t4);
              }
            o2.delete(i3);
          }(this.primaryType, /* @__PURE__ */ new Set());
          for (const [t4, e3] of n2) {
            const r5 = Array.from(e3);
            r5.sort(), this.#H.set(t4, wc(t4, A2[t4]) + r5.map((t5) => wc(t5, A2[t5])).join(""));
          }
        }
        getEncoder(t3) {
          let e2 = this.#L.get(t3);
          return e2 || (e2 = this.#O(t3), this.#L.set(t3, e2)), e2;
        }
        #O(t3) {
          {
            const e3 = Ec(t3);
            if (e3)
              return e3;
          }
          const e2 = vc(t3).array;
          if (e2) {
            const t4 = e2.prefix, r5 = this.getEncoder(t4);
            return (n2) => {
              vn(-1 === e2.count || e2.count === n2.length, `array length mismatch; expected length ${e2.count}`, "value", n2);
              let A2 = n2.map(r5);
              return this.#H.has(t4) && (A2 = A2.map(no)), no(Tn(A2));
            };
          }
          const r4 = this.types[t3];
          if (r4) {
            const e3 = Oa(this.#H.get(t3));
            return (t4) => {
              const n2 = r4.map(({ name: e4, type: r5 }) => {
                const n3 = this.getEncoder(r5)(t4[e4]);
                return this.#H.has(r5) ? no(n3) : n3;
              });
              return n2.unshift(e3), Tn(n2);
            };
          }
          vn(false, `unknown type: ${t3}`, "type", t3);
        }
        encodeType(t3) {
          const e2 = this.#H.get(t3);
          return vn(e2, `unknown type: ${JSON.stringify(t3)}`, "name", t3), e2;
        }
        encodeData(t3, e2) {
          return this.getEncoder(t3)(e2);
        }
        hashStruct(t3, e2) {
          return no(this.encodeData(t3, e2));
        }
        encode(t3) {
          return this.encodeData(this.primaryType, t3);
        }
        hash(t3) {
          return this.hashStruct(this.primaryType, t3);
        }
        _visit(t3, e2, r4) {
          if (Ec(t3))
            return r4(t3, e2);
          const n2 = vc(t3).array;
          if (n2)
            return vn(-1 === n2.count || n2.count === e2.length, `array length mismatch; expected length ${n2.count}`, "value", e2), e2.map((t4) => this._visit(n2.prefix, t4, r4));
          const A2 = this.types[t3];
          if (A2)
            return A2.reduce((t4, { name: n3, type: A3 }) => (t4[n3] = this._visit(A3, e2[n3], r4), t4), {});
          vn(false, `unknown type: ${t3}`, "type", t3);
        }
        visit(t3, e2) {
          return this._visit(this.primaryType, t3, e2);
        }
        static from(e2) {
          return new t2(e2);
        }
        static getPrimaryType(e2) {
          return t2.from(e2).primaryType;
        }
        static hashStruct(e2, r4, n2) {
          return t2.from(r4).hashStruct(e2, n2);
        }
        static hashDomain(e2) {
          const r4 = [];
          for (const t3 in e2) {
            if (null == e2[t3])
              continue;
            const n2 = yc[t3];
            vn(n2, `invalid typed-data domain key: ${JSON.stringify(t3)}`, "domain", e2), r4.push({ name: t3, type: n2 });
          }
          return r4.sort((t3, e3) => Cc.indexOf(t3.name) - Cc.indexOf(e3.name)), t2.hashStruct("EIP712Domain", { EIP712Domain: r4 }, e2);
        }
        static encode(e2, r4, n2) {
          return Tn(["0x1901", t2.hashDomain(e2), t2.from(r4).hash(n2)]);
        }
        static hash(e2, r4, n2) {
          return no(t2.encode(e2, r4, n2));
        }
        static async resolveNames(e2, r4, n2, A2) {
          e2 = Object.assign({}, e2);
          for (const t3 in e2)
            null == e2[t3] && delete e2[t3];
          const i2 = {};
          e2.verifyingContract && !Mn(e2.verifyingContract, 20) && (i2[e2.verifyingContract] = "0x");
          const o2 = t2.from(r4);
          o2.visit(n2, (t3, e3) => ("address" !== t3 || Mn(e3, 20) || (i2[e3] = "0x"), e3));
          for (const t3 in i2)
            i2[t3] = await A2(t3);
          return e2.verifyingContract && i2[e2.verifyingContract] && (e2.verifyingContract = i2[e2.verifyingContract]), { domain: e2, value: n2 = o2.visit(n2, (t3, e3) => "address" === t3 && i2[e3] ? i2[e3] : e3) };
        }
        static getPayload(e2, r4, n2) {
          t2.hashDomain(e2);
          const A2 = {}, i2 = [];
          Cc.forEach((t3) => {
            const r5 = e2[t3];
            null != r5 && (A2[t3] = Bc[t3](r5), i2.push({ name: t3, type: yc[t3] }));
          });
          const o2 = t2.from(r4);
          r4 = o2.types;
          const s2 = Object.assign({}, r4);
          return vn(null == s2.EIP712Domain, "types must not contain EIP712Domain type", "types.EIP712Domain", r4), s2.EIP712Domain = i2, o2.encode(n2), { types: s2, domain: A2, primaryType: o2.primaryType, message: o2.visit(n2, (t3, e3) => {
            if (t3.match(/^bytes(\d*)/))
              return Pn(Sn(e3));
            if (t3.match(/^u?int/))
              return zn(e3).toString();
            switch (t3) {
              case "address":
                return e3.toLowerCase();
              case "bool":
                return !!e3;
              case "string":
                return vn("string" == typeof e3, "invalid string", "value", e3), e3;
            }
            vn(false, "unsupported type", "type", t3);
          }) };
        }
      };
      function Qc(t2) {
        const e2 = /* @__PURE__ */ new Set();
        return t2.forEach((t3) => e2.add(t3)), Object.freeze(e2);
      }
      var bc = Qc("external public payable override".split(" "));
      var kc = "constant external internal payable private public pure view override";
      var Dc = Qc(kc.split(" "));
      var Sc = "constructor error event fallback function receive struct";
      var Nc = Qc(Sc.split(" "));
      var Mc = "calldata memory storage payable indexed";
      var xc = Qc(Mc.split(" "));
      var Fc = Qc([Sc, Mc, "tuple returns", kc].join(" ").split(" "));
      var Pc = { "(": "OPEN_PAREN", ")": "CLOSE_PAREN", "[": "OPEN_BRACKET", "]": "CLOSE_BRACKET", ",": "COMMA", "@": "AT" };
      var Tc = new RegExp("^(\\s*)");
      var Rc = new RegExp("^([0-9]+)");
      var Uc = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)");
      var Gc = new RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$");
      var Hc = new RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");
      var Lc = class _Lc {
        #f;
        #Y;
        get offset() {
          return this.#f;
        }
        get length() {
          return this.#Y.length - this.#f;
        }
        constructor(t2) {
          this.#f = 0, this.#Y = t2.slice();
        }
        clone() {
          return new _Lc(this.#Y);
        }
        reset() {
          this.#f = 0;
        }
        #K(t2 = 0, e2 = 0) {
          return new _Lc(this.#Y.slice(t2, e2).map((e3) => Object.freeze(Object.assign({}, e3, { match: e3.match - t2, linkBack: e3.linkBack - t2, linkNext: e3.linkNext - t2 }))));
        }
        popKeyword(t2) {
          const e2 = this.peek();
          if ("KEYWORD" !== e2.type || !t2.has(e2.text))
            throw new Error(`expected keyword ${e2.text}`);
          return this.pop().text;
        }
        popType(t2) {
          if (this.peek().type !== t2) {
            const e2 = this.peek();
            throw new Error(`expected ${t2}; got ${e2.type} ${JSON.stringify(e2.text)}`);
          }
          return this.pop().text;
        }
        popParen() {
          const t2 = this.peek();
          if ("OPEN_PAREN" !== t2.type)
            throw new Error("bad start");
          const e2 = this.#K(this.#f + 1, t2.match + 1);
          return this.#f = t2.match + 1, e2;
        }
        popParams() {
          const t2 = this.peek();
          if ("OPEN_PAREN" !== t2.type)
            throw new Error("bad start");
          const e2 = [];
          for (; this.#f < t2.match - 1; ) {
            const t3 = this.peek().linkNext;
            e2.push(this.#K(this.#f + 1, t3)), this.#f = t3;
          }
          return this.#f = t2.match + 1, e2;
        }
        peek() {
          if (this.#f >= this.#Y.length)
            throw new Error("out-of-bounds");
          return this.#Y[this.#f];
        }
        peekKeyword(t2) {
          const e2 = this.peekType("KEYWORD");
          return null != e2 && t2.has(e2) ? e2 : null;
        }
        peekType(t2) {
          if (0 === this.length)
            return null;
          const e2 = this.peek();
          return e2.type === t2 ? e2.text : null;
        }
        pop() {
          const t2 = this.peek();
          return this.#f++, t2;
        }
        toString() {
          const t2 = [];
          for (let e2 = this.#f; e2 < this.#Y.length; e2++) {
            const r4 = this.#Y[e2];
            t2.push(`${r4.type}:${r4.text}`);
          }
          return `<TokenString ${t2.join(" ")}>`;
        }
      };
      function Oc(t2) {
        const e2 = [], r4 = (e3) => {
          const r5 = i2 < t2.length ? JSON.stringify(t2[i2]) : "$EOI";
          throw new Error(`invalid token ${r5} at ${i2}: ${e3}`);
        };
        let n2 = [], A2 = [], i2 = 0;
        for (; i2 < t2.length; ) {
          let o2 = t2.substring(i2), s2 = o2.match(Tc);
          s2 && (i2 += s2[1].length, o2 = t2.substring(i2));
          const a2 = { depth: n2.length, linkBack: -1, linkNext: -1, match: -1, type: "", text: "", offset: i2, value: -1 };
          e2.push(a2);
          let c2 = Pc[o2[0]] || "";
          if (c2) {
            if (a2.type = c2, a2.text = o2[0], i2++, "OPEN_PAREN" === c2)
              n2.push(e2.length - 1), A2.push(e2.length - 1);
            else if ("CLOSE_PAREN" == c2)
              0 === n2.length && r4("no matching open bracket"), a2.match = n2.pop(), e2[a2.match].match = e2.length - 1, a2.depth--, a2.linkBack = A2.pop(), e2[a2.linkBack].linkNext = e2.length - 1;
            else if ("COMMA" === c2)
              a2.linkBack = A2.pop(), e2[a2.linkBack].linkNext = e2.length - 1, A2.push(e2.length - 1);
            else if ("OPEN_BRACKET" === c2)
              a2.type = "BRACKET";
            else if ("CLOSE_BRACKET" === c2) {
              let t3 = e2.pop().text;
              if (e2.length > 0 && "NUMBER" === e2[e2.length - 1].type) {
                const r5 = e2.pop().text;
                t3 = r5 + t3, e2[e2.length - 1].value = Wn(r5);
              }
              if (0 === e2.length || "BRACKET" !== e2[e2.length - 1].type)
                throw new Error("missing opening bracket");
              e2[e2.length - 1].text += t3;
            }
          } else if (s2 = o2.match(Uc), s2) {
            if (a2.text = s2[1], i2 += a2.text.length, Fc.has(a2.text)) {
              a2.type = "KEYWORD";
              continue;
            }
            if (a2.text.match(Hc)) {
              a2.type = "TYPE";
              continue;
            }
            a2.type = "ID";
          } else {
            if (s2 = o2.match(Rc), !s2)
              throw new Error(`unexpected token ${JSON.stringify(o2[0])} at position ${i2}`);
            a2.text = s2[1], a2.type = "NUMBER", i2 += a2.text.length;
          }
        }
        return new Lc(e2.map((t3) => Object.freeze(t3)));
      }
      function Yc(t2, e2) {
        let r4 = [];
        for (const n2 in e2.keys())
          t2.has(n2) && r4.push(n2);
        if (r4.length > 1)
          throw new Error(`conflicting types: ${r4.join(", ")}`);
      }
      function Kc(t2, e2) {
        if (e2.peekKeyword(Nc)) {
          const r4 = e2.pop().text;
          if (r4 !== t2)
            throw new Error(`expected ${t2}, got ${r4}`);
        }
        return e2.popType("ID");
      }
      function Jc(t2, e2) {
        const r4 = /* @__PURE__ */ new Set();
        for (; ; ) {
          const n2 = t2.peekType("KEYWORD");
          if (null == n2 || e2 && !e2.has(n2))
            break;
          if (t2.pop(), r4.has(n2))
            throw new Error(`duplicate keywords: ${JSON.stringify(n2)}`);
          r4.add(n2);
        }
        return Object.freeze(r4);
      }
      function jc(t2) {
        let e2 = Jc(t2, Dc);
        return Yc(e2, Qc("constant payable nonpayable".split(" "))), Yc(e2, Qc("pure view payable nonpayable".split(" "))), e2.has("view") ? "view" : e2.has("pure") ? "pure" : e2.has("payable") ? "payable" : e2.has("nonpayable") ? "nonpayable" : e2.has("constant") ? "view" : "nonpayable";
      }
      function zc(t2, e2) {
        return t2.popParams().map((t3) => sh.from(t3, e2));
      }
      function qc(t2) {
        if (t2.peekType("AT")) {
          if (t2.pop(), t2.peekType("NUMBER"))
            return zn(t2.pop().text);
          throw new Error("invalid gas");
        }
        return null;
      }
      function Xc(t2) {
        if (t2.length)
          throw new Error(`unexpected tokens at offset ${t2.offset}: ${t2.toString()}`);
      }
      var Vc = new RegExp(/^(.*)\[([0-9]*)\]$/);
      function Wc(t2) {
        const e2 = t2.match(Hc);
        if (vn(e2, "invalid type", "type", t2), "uint" === t2)
          return "uint256";
        if ("int" === t2)
          return "int256";
        if (e2[2]) {
          const r4 = parseInt(e2[2]);
          vn(0 !== r4 && r4 <= 32, "invalid bytes length", "type", t2);
        } else if (e2[3]) {
          const r4 = parseInt(e2[3]);
          vn(0 !== r4 && r4 <= 256 && r4 % 8 == 0, "invalid numeric width", "type", t2);
        }
        return t2;
      }
      var Zc = {};
      var $c = Symbol.for("_ethers_internal");
      var th = "_ParamTypeInternal";
      var eh = "_ErrorInternal";
      var rh = "_EventInternal";
      var nh = "_ConstructorInternal";
      var Ah = "_FallbackInternal";
      var ih = "_FunctionInternal";
      var oh = "_StructInternal";
      var sh = class _sh {
        name;
        type;
        baseType;
        indexed;
        components;
        arrayLength;
        arrayChildren;
        constructor(t2, e2, r4, n2, A2, i2, o2, s2) {
          if (kn(t2, Zc, "ParamType"), Object.defineProperty(this, $c, { value: th }), i2 && (i2 = Object.freeze(i2.slice())), "array" === n2) {
            if (null == o2 || null == s2)
              throw new Error("");
          } else if (null != o2 || null != s2)
            throw new Error("");
          if ("tuple" === n2) {
            if (null == i2)
              throw new Error("");
          } else if (null != i2)
            throw new Error("");
          yn(this, { name: e2, type: r4, baseType: n2, indexed: A2, components: i2, arrayLength: o2, arrayChildren: s2 });
        }
        format(t2) {
          if (null == t2 && (t2 = "sighash"), "json" === t2) {
            const e3 = this.name || "";
            if (this.isArray()) {
              const t3 = JSON.parse(this.arrayChildren.format("json"));
              return t3.name = e3, t3.type += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`, JSON.stringify(t3);
            }
            const r4 = { type: "tuple" === this.baseType ? "tuple" : this.type, name: e3 };
            return "boolean" == typeof this.indexed && (r4.indexed = this.indexed), this.isTuple() && (r4.components = this.components.map((e4) => JSON.parse(e4.format(t2)))), JSON.stringify(r4);
          }
          let e2 = "";
          return this.isArray() ? (e2 += this.arrayChildren.format(t2), e2 += `[${this.arrayLength < 0 ? "" : String(this.arrayLength)}]`) : this.isTuple() ? e2 += "(" + this.components.map((e3) => e3.format(t2)).join("full" === t2 ? ", " : ",") + ")" : e2 += this.type, "sighash" !== t2 && (true === this.indexed && (e2 += " indexed"), "full" === t2 && this.name && (e2 += " " + this.name)), e2;
        }
        isArray() {
          return "array" === this.baseType;
        }
        isTuple() {
          return "tuple" === this.baseType;
        }
        isIndexable() {
          return null != this.indexed;
        }
        walk(t2, e2) {
          if (this.isArray()) {
            if (!Array.isArray(t2))
              throw new Error("invalid array value");
            if (-1 !== this.arrayLength && t2.length !== this.arrayLength)
              throw new Error("array is wrong length");
            const r4 = this;
            return t2.map((t3) => r4.arrayChildren.walk(t3, e2));
          }
          if (this.isTuple()) {
            if (!Array.isArray(t2))
              throw new Error("invalid tuple value");
            if (t2.length !== this.components.length)
              throw new Error("array is wrong length");
            const r4 = this;
            return t2.map((t3, n2) => r4.components[n2].walk(t3, e2));
          }
          return e2(this.type, t2);
        }
        #J(t2, e2, r4, n2) {
          if (this.isArray()) {
            if (!Array.isArray(e2))
              throw new Error("invalid array value");
            if (-1 !== this.arrayLength && e2.length !== this.arrayLength)
              throw new Error("array is wrong length");
            const A3 = this.arrayChildren, i2 = e2.slice();
            return i2.forEach((e3, n3) => {
              A3.#J(t2, e3, r4, (t3) => {
                i2[n3] = t3;
              });
            }), void n2(i2);
          }
          if (this.isTuple()) {
            const A3 = this.components;
            let i2;
            if (Array.isArray(e2))
              i2 = e2.slice();
            else {
              if (null == e2 || "object" != typeof e2)
                throw new Error("invalid tuple value");
              i2 = A3.map((t3) => {
                if (!t3.name)
                  throw new Error("cannot use object value with unnamed components");
                if (!(t3.name in e2))
                  throw new Error(`missing value for component ${t3.name}`);
                return e2[t3.name];
              });
            }
            if (i2.length !== this.components.length)
              throw new Error("array is wrong length");
            return i2.forEach((e3, n3) => {
              A3[n3].#J(t2, e3, r4, (t3) => {
                i2[n3] = t3;
              });
            }), void n2(i2);
          }
          const A2 = r4(this.type, e2);
          A2.then ? t2.push(async function() {
            n2(await A2);
          }()) : n2(A2);
        }
        async walkAsync(t2, e2) {
          const r4 = [], n2 = [t2];
          return this.#J(r4, t2, e2, (t3) => {
            n2[0] = t3;
          }), r4.length && await Promise.all(r4), n2[0];
        }
        static from(t2, e2) {
          if (_sh.isParamType(t2))
            return t2;
          if ("string" == typeof t2)
            try {
              return _sh.from(Oc(t2), e2);
            } catch (e3) {
              vn(false, "invalid param type", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            let r5 = "", n3 = "", A3 = null;
            Jc(t2, Qc(["tuple"])).has("tuple") || t2.peekType("OPEN_PAREN") ? (n3 = "tuple", A3 = t2.popParams().map((t3) => _sh.from(t3)), r5 = `tuple(${A3.map((t3) => t3.format()).join(",")})`) : (r5 = Wc(t2.popType("TYPE")), n3 = r5);
            let i3 = null, o2 = null;
            for (; t2.length && t2.peekType("BRACKET"); ) {
              const e3 = t2.pop();
              i3 = new _sh(Zc, "", r5, n3, null, A3, o2, i3), o2 = e3.value, r5 += e3.text, n3 = "array", A3 = null;
            }
            let s2 = null;
            if (Jc(t2, xc).has("indexed")) {
              if (!e2)
                throw new Error("");
              s2 = true;
            }
            const a2 = t2.peekType("ID") ? t2.pop().text : "";
            if (t2.length)
              throw new Error("leftover tokens");
            return new _sh(Zc, a2, r5, n3, s2, A3, o2, i3);
          }
          const r4 = t2.name;
          vn(!r4 || "string" == typeof r4 && r4.match(Gc), "invalid name", "obj.name", r4);
          let n2 = t2.indexed;
          null != n2 && (vn(e2, "parameter cannot be indexed", "obj.indexed", t2.indexed), n2 = !!n2);
          let A2 = t2.type, i2 = A2.match(Vc);
          if (i2) {
            const e3 = parseInt(i2[2] || "-1"), o2 = _sh.from({ type: i2[1], components: t2.components });
            return new _sh(Zc, r4 || "", A2, "array", n2, null, e3, o2);
          }
          if ("tuple" === A2 || A2.startsWith("tuple(") || A2.startsWith("(")) {
            const e3 = null != t2.components ? t2.components.map((t3) => _sh.from(t3)) : null;
            return new _sh(Zc, r4 || "", A2, "tuple", n2, e3, null, null);
          }
          return A2 = Wc(t2.type), new _sh(Zc, r4 || "", A2, A2, n2, null, null, null);
        }
        static isParamType(t2) {
          return t2 && t2[$c] === th;
        }
      };
      var ah = class _ah {
        type;
        inputs;
        constructor(t2, e2, r4) {
          kn(t2, Zc, "Fragment"), yn(this, { type: e2, inputs: r4 = Object.freeze(r4.slice()) });
        }
        static from(t2) {
          if ("string" == typeof t2) {
            try {
              _ah.from(JSON.parse(t2));
            } catch (t3) {
            }
            return _ah.from(Oc(t2));
          }
          if (t2 instanceof Lc) {
            switch (t2.peekKeyword(Nc)) {
              case "constructor":
                return lh.from(t2);
              case "error":
                return gh.from(t2);
              case "event":
                return uh.from(t2);
              case "fallback":
              case "receive":
                return fh.from(t2);
              case "function":
                return ph.from(t2);
              case "struct":
                return dh.from(t2);
            }
          } else if ("object" == typeof t2) {
            switch (t2.type) {
              case "constructor":
                return lh.from(t2);
              case "error":
                return gh.from(t2);
              case "event":
                return uh.from(t2);
              case "fallback":
              case "receive":
                return fh.from(t2);
              case "function":
                return ph.from(t2);
              case "struct":
                return dh.from(t2);
            }
            wn(false, `unsupported type: ${t2.type}`, "UNSUPPORTED_OPERATION", { operation: "Fragment.from" });
          }
          vn(false, "unsupported frgament object", "obj", t2);
        }
        static isConstructor(t2) {
          return lh.isFragment(t2);
        }
        static isError(t2) {
          return gh.isFragment(t2);
        }
        static isEvent(t2) {
          return uh.isFragment(t2);
        }
        static isFunction(t2) {
          return ph.isFragment(t2);
        }
        static isStruct(t2) {
          return dh.isFragment(t2);
        }
      };
      var ch = class extends ah {
        name;
        constructor(t2, e2, r4, n2) {
          super(t2, e2, n2), vn("string" == typeof r4 && r4.match(Gc), "invalid identifier", "name", r4), n2 = Object.freeze(n2.slice()), yn(this, { name: r4 });
        }
      };
      function hh(t2, e2) {
        return "(" + e2.map((e3) => e3.format(t2)).join("full" === t2 ? ", " : ",") + ")";
      }
      var gh = class _gh extends ch {
        constructor(t2, e2, r4) {
          super(t2, "error", e2, r4), Object.defineProperty(this, $c, { value: eh });
        }
        get selector() {
          return Oa(this.format("sighash")).substring(0, 10);
        }
        format(t2) {
          if (null == t2 && (t2 = "sighash"), "json" === t2)
            return JSON.stringify({ type: "error", name: this.name, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t2))) });
          const e2 = [];
          return "sighash" !== t2 && e2.push("error"), e2.push(this.name + hh(t2, this.inputs)), e2.join(" ");
        }
        static from(t2) {
          if (_gh.isFragment(t2))
            return t2;
          if ("string" == typeof t2)
            return _gh.from(Oc(t2));
          if (t2 instanceof Lc) {
            const e2 = Kc("error", t2), r4 = zc(t2);
            return Xc(t2), new _gh(Zc, e2, r4);
          }
          return new _gh(Zc, t2.name, t2.inputs ? t2.inputs.map(sh.from) : []);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === eh;
        }
      };
      var uh = class _uh extends ch {
        anonymous;
        constructor(t2, e2, r4, n2) {
          super(t2, "event", e2, r4), Object.defineProperty(this, $c, { value: rh }), yn(this, { anonymous: n2 });
        }
        get topicHash() {
          return Oa(this.format("sighash"));
        }
        format(t2) {
          if (null == t2 && (t2 = "sighash"), "json" === t2)
            return JSON.stringify({ type: "event", anonymous: this.anonymous, name: this.name, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t2))) });
          const e2 = [];
          return "sighash" !== t2 && e2.push("event"), e2.push(this.name + hh(t2, this.inputs)), "sighash" !== t2 && this.anonymous && e2.push("anonymous"), e2.join(" ");
        }
        static getTopicHash(t2, e2) {
          e2 = (e2 || []).map((t3) => sh.from(t3));
          return new _uh(Zc, t2, e2, false).topicHash;
        }
        static from(t2) {
          if (_uh.isFragment(t2))
            return t2;
          if ("string" == typeof t2)
            try {
              return _uh.from(Oc(t2));
            } catch (e2) {
              vn(false, "invalid event fragment", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            const e2 = Kc("event", t2), r4 = zc(t2, true), n2 = !!Jc(t2, Qc(["anonymous"])).has("anonymous");
            return Xc(t2), new _uh(Zc, e2, r4, n2);
          }
          return new _uh(Zc, t2.name, t2.inputs ? t2.inputs.map((t3) => sh.from(t3, true)) : [], !!t2.anonymous);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === rh;
        }
      };
      var lh = class _lh extends ah {
        payable;
        gas;
        constructor(t2, e2, r4, n2, A2) {
          super(t2, e2, r4), Object.defineProperty(this, $c, { value: nh }), yn(this, { payable: n2, gas: A2 });
        }
        format(t2) {
          if (wn(null != t2 && "sighash" !== t2, "cannot format a constructor for sighash", "UNSUPPORTED_OPERATION", { operation: "format(sighash)" }), "json" === t2)
            return JSON.stringify({ type: "constructor", stateMutability: this.payable ? "payable" : "undefined", payable: this.payable, gas: null != this.gas ? this.gas : void 0, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t2))) });
          const e2 = [`constructor${hh(t2, this.inputs)}`];
          return this.payable && e2.push("payable"), null != this.gas && e2.push(`@${this.gas.toString()}`), e2.join(" ");
        }
        static from(t2) {
          if (_lh.isFragment(t2))
            return t2;
          if ("string" == typeof t2)
            try {
              return _lh.from(Oc(t2));
            } catch (e2) {
              vn(false, "invalid constuctor fragment", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            Jc(t2, Qc(["constructor"]));
            const e2 = zc(t2), r4 = !!Jc(t2, bc).has("payable"), n2 = qc(t2);
            return Xc(t2), new _lh(Zc, "constructor", e2, r4, n2);
          }
          return new _lh(Zc, "constructor", t2.inputs ? t2.inputs.map(sh.from) : [], !!t2.payable, null != t2.gas ? t2.gas : null);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === nh;
        }
      };
      var fh = class _fh extends ah {
        payable;
        constructor(t2, e2, r4) {
          super(t2, "fallback", e2), Object.defineProperty(this, $c, { value: Ah }), yn(this, { payable: r4 });
        }
        format(t2) {
          const e2 = 0 === this.inputs.length ? "receive" : "fallback";
          if ("json" === t2) {
            const t3 = this.payable ? "payable" : "nonpayable";
            return JSON.stringify({ type: e2, stateMutability: t3 });
          }
          return `${e2}()${this.payable ? " payable" : ""}`;
        }
        static from(t2) {
          if (_fh.isFragment(t2))
            return t2;
          if ("string" == typeof t2)
            try {
              return _fh.from(Oc(t2));
            } catch (e2) {
              vn(false, "invalid fallback fragment", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            const e2 = t2.toString();
            vn(t2.peekKeyword(Qc(["fallback", "receive"])), "type must be fallback or receive", "obj", e2);
            if ("receive" === t2.popKeyword(Qc(["fallback", "receive"]))) {
              const e3 = zc(t2);
              return vn(0 === e3.length, "receive cannot have arguments", "obj.inputs", e3), Jc(t2, Qc(["payable"])), Xc(t2), new _fh(Zc, [], true);
            }
            let r4 = zc(t2);
            r4.length ? vn(1 === r4.length && "bytes" === r4[0].type, "invalid fallback inputs", "obj.inputs", r4.map((t3) => t3.format("minimal")).join(", ")) : r4 = [sh.from("bytes")];
            const n2 = jc(t2);
            if (vn("nonpayable" === n2 || "payable" === n2, "fallback cannot be constants", "obj.stateMutability", n2), Jc(t2, Qc(["returns"])).has("returns")) {
              const e3 = zc(t2);
              vn(1 === e3.length && "bytes" === e3[0].type, "invalid fallback outputs", "obj.outputs", e3.map((t3) => t3.format("minimal")).join(", "));
            }
            return Xc(t2), new _fh(Zc, r4, "payable" === n2);
          }
          if ("receive" === t2.type)
            return new _fh(Zc, [], true);
          if ("fallback" === t2.type) {
            const e2 = [sh.from("bytes")], r4 = "payable" === t2.stateMutability;
            return new _fh(Zc, e2, r4);
          }
          vn(false, "invalid fallback description", "obj", t2);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === Ah;
        }
      };
      var ph = class _ph extends ch {
        constant;
        outputs;
        stateMutability;
        payable;
        gas;
        constructor(t2, e2, r4, n2, A2, i2) {
          super(t2, "function", e2, n2), Object.defineProperty(this, $c, { value: ih });
          yn(this, { constant: "view" === r4 || "pure" === r4, gas: i2, outputs: A2 = Object.freeze(A2.slice()), payable: "payable" === r4, stateMutability: r4 });
        }
        get selector() {
          return Oa(this.format("sighash")).substring(0, 10);
        }
        format(t2) {
          if (null == t2 && (t2 = "sighash"), "json" === t2)
            return JSON.stringify({ type: "function", name: this.name, constant: this.constant, stateMutability: "nonpayable" !== this.stateMutability ? this.stateMutability : void 0, payable: this.payable, gas: null != this.gas ? this.gas : void 0, inputs: this.inputs.map((e3) => JSON.parse(e3.format(t2))), outputs: this.outputs.map((e3) => JSON.parse(e3.format(t2))) });
          const e2 = [];
          return "sighash" !== t2 && e2.push("function"), e2.push(this.name + hh(t2, this.inputs)), "sighash" !== t2 && ("nonpayable" !== this.stateMutability && e2.push(this.stateMutability), this.outputs && this.outputs.length && (e2.push("returns"), e2.push(hh(t2, this.outputs))), null != this.gas && e2.push(`@${this.gas.toString()}`)), e2.join(" ");
        }
        static getSelector(t2, e2) {
          e2 = (e2 || []).map((t3) => sh.from(t3));
          return new _ph(Zc, t2, "view", e2, [], null).selector;
        }
        static from(t2) {
          if (_ph.isFragment(t2))
            return t2;
          if ("string" == typeof t2)
            try {
              return _ph.from(Oc(t2));
            } catch (e3) {
              vn(false, "invalid function fragment", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            const e3 = Kc("function", t2), r4 = zc(t2), n2 = jc(t2);
            let A2 = [];
            Jc(t2, Qc(["returns"])).has("returns") && (A2 = zc(t2));
            const i2 = qc(t2);
            return Xc(t2), new _ph(Zc, e3, n2, r4, A2, i2);
          }
          let e2 = t2.stateMutability;
          return null == e2 && (e2 = "payable", "boolean" == typeof t2.constant ? (e2 = "view", t2.constant || (e2 = "payable", "boolean" != typeof t2.payable || t2.payable || (e2 = "nonpayable"))) : "boolean" != typeof t2.payable || t2.payable || (e2 = "nonpayable")), new _ph(Zc, t2.name, e2, t2.inputs ? t2.inputs.map(sh.from) : [], t2.outputs ? t2.outputs.map(sh.from) : [], null != t2.gas ? t2.gas : null);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === ih;
        }
      };
      var dh = class _dh extends ch {
        constructor(t2, e2, r4) {
          super(t2, "struct", e2, r4), Object.defineProperty(this, $c, { value: oh });
        }
        format() {
          throw new Error("@TODO");
        }
        static from(t2) {
          if ("string" == typeof t2)
            try {
              return _dh.from(Oc(t2));
            } catch (e2) {
              vn(false, "invalid struct fragment", "obj", t2);
            }
          else if (t2 instanceof Lc) {
            const e2 = Kc("struct", t2), r4 = zc(t2);
            return Xc(t2), new _dh(Zc, e2, r4);
          }
          return new _dh(Zc, t2.name, t2.inputs ? t2.inputs.map(sh.from) : []);
        }
        static isFragment(t2) {
          return t2 && t2[$c] === oh;
        }
      };
      var Ih = /* @__PURE__ */ new Map();
      Ih.set(0, "GENERIC_PANIC"), Ih.set(1, "ASSERT_FALSE"), Ih.set(17, "OVERFLOW"), Ih.set(18, "DIVIDE_BY_ZERO"), Ih.set(33, "ENUM_RANGE_ERROR"), Ih.set(34, "BAD_STORAGE_DATA"), Ih.set(49, "STACK_UNDERFLOW"), Ih.set(50, "ARRAY_RANGE_ERROR"), Ih.set(65, "OUT_OF_MEMORY"), Ih.set(81, "UNINITIALIZED_FUNCTION_CALL");
      var yh = new RegExp(/^bytes([0-9]*)$/);
      var Ch = new RegExp(/^(u?int)([0-9]*)$/);
      var mh = null;
      var Bh = 1024;
      var Eh = class _Eh {
        #j(t2) {
          if (t2.isArray())
            return new Da(this.#j(t2.arrayChildren), t2.arrayLength, t2.name);
          if (t2.isTuple())
            return new La(t2.components.map((t3) => this.#j(t3)), t2.name);
          switch (t2.baseType) {
            case "address":
              return new _a(t2.name);
            case "bool":
              return new Sa(t2.name);
            case "string":
              return new Ha(t2.name);
            case "bytes":
              return new Ma(t2.name);
            case "":
              return new Pa(t2.name);
          }
          let e2 = t2.type.match(Ch);
          if (e2) {
            let r4 = parseInt(e2[2] || "256");
            return vn(0 !== r4 && r4 <= 256 && r4 % 8 == 0, "invalid " + e2[1] + " bit length", "param", t2), new Ga(r4 / 8, "int" === e2[1], t2.name);
          }
          if (e2 = t2.type.match(yh), e2) {
            let r4 = parseInt(e2[1]);
            return vn(0 !== r4 && r4 <= 32, "invalid bytes length", "param", t2), new xa(r4, t2.name);
          }
          vn(false, "invalid type", "type", t2.type);
        }
        getDefaultValue(t2) {
          const e2 = t2.map((t3) => this.#j(sh.from(t3)));
          return new La(e2, "_").defaultValue();
        }
        encode(t2, e2) {
          _n(e2.length, t2.length, "types/values length mismatch");
          const r4 = t2.map((t3) => this.#j(sh.from(t3))), n2 = new La(r4, "_"), A2 = new HA();
          return n2.encode(A2, e2), A2.data;
        }
        decode(t2, e2, r4) {
          const n2 = t2.map((t3) => this.#j(sh.from(t3)));
          return new La(n2, "_").decode(new LA(e2, r4, Bh));
        }
        static _setDefaultMaxInflation(t2) {
          vn("number" == typeof t2 && Number.isInteger(t2), "invalid defaultMaxInflation factor", "value", t2), Bh = t2;
        }
        static defaultAbiCoder() {
          return null == mh && (mh = new _Eh()), mh;
        }
        static getBuiltinCallException(t2, e2, r4) {
          return function(t3, e3, r5, n2) {
            let A2 = "missing revert data", i2 = null, o2 = null;
            if (r5) {
              A2 = "execution reverted";
              const t4 = Sn(r5);
              if (r5 = Pn(r5), 0 === t4.length)
                A2 += " (no data present; likely require(false) occurred", i2 = "require(false)";
              else if (t4.length % 32 != 4)
                A2 += " (could not decode reason; invalid data length)";
              else if ("0x08c379a0" === Pn(t4.slice(0, 4)))
                try {
                  i2 = n2.decode(["string"], t4.slice(4))[0], o2 = { signature: "Error(string)", name: "Error", args: [i2] }, A2 += `: ${JSON.stringify(i2)}`;
                } catch (t5) {
                  A2 += " (could not decode reason; invalid string data)";
                }
              else if ("0x4e487b71" === Pn(t4.slice(0, 4)))
                try {
                  const e4 = Number(n2.decode(["uint256"], t4.slice(4))[0]);
                  o2 = { signature: "Panic(uint256)", name: "Panic", args: [e4] }, i2 = `Panic due to ${Ih.get(e4) || "UNKNOWN"}(${e4})`, A2 += `: ${i2}`;
                } catch (t5) {
                  A2 += " (could not decode panic code)";
                }
              else
                A2 += " (unknown custom error)";
            }
            const s2 = { to: e3.to ? da(e3.to) : null, data: e3.data || "0x" };
            return e3.from && (s2.from = da(e3.from)), En(A2, "CALL_EXCEPTION", { action: t3, data: r5, reason: i2, transaction: s2, invocation: null, revert: o2 });
          }(t2, e2, r4, _Eh.defaultAbiCoder());
        }
      };
      var wh = class {
        fragment;
        name;
        signature;
        topic;
        args;
        constructor(t2, e2, r4) {
          const n2 = t2.name, A2 = t2.format();
          yn(this, { fragment: t2, name: n2, signature: A2, topic: e2, args: r4 });
        }
      };
      var vh = class {
        fragment;
        name;
        args;
        signature;
        selector;
        value;
        constructor(t2, e2, r4, n2) {
          const A2 = t2.name, i2 = t2.format();
          yn(this, { fragment: t2, name: A2, args: r4, signature: i2, selector: e2, value: n2 });
        }
      };
      var _h = class {
        fragment;
        name;
        args;
        signature;
        selector;
        constructor(t2, e2, r4) {
          const n2 = t2.name, A2 = t2.format();
          yn(this, { fragment: t2, name: n2, args: r4, signature: A2, selector: e2 });
        }
      };
      var Qh = class {
        hash;
        _isIndexed;
        static isIndexed(t2) {
          return !(!t2 || !t2._isIndexed);
        }
        constructor(t2) {
          yn(this, { hash: t2, _isIndexed: true });
        }
      };
      var bh = { 0: "generic panic", 1: "assert(false)", 17: "arithmetic overflow", 18: "division or modulo by zero", 33: "enum overflow", 34: "invalid encoded storage byte array accessed", 49: "out-of-bounds array access; popping on an empty array", 50: "out-of-bounds access of an array or bytesN", 65: "out of memory", 81: "uninitialized function" };
      var kh = { "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: (t2) => `reverted with reason string ${JSON.stringify(t2)}` }, "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"], reason: (t2) => {
        let e2 = "unknown panic code";
        return t2 >= 0 && t2 <= 255 && bh[t2.toString()] && (e2 = bh[t2.toString()]), `reverted with panic code 0x${t2.toString(16)} (${e2})`;
      } } };
      var Dh = class _Dh {
        fragments;
        deploy;
        fallback;
        receive;
        #z;
        #q;
        #X;
        #V;
        constructor(t2) {
          let e2 = [];
          e2 = "string" == typeof t2 ? JSON.parse(t2) : t2, this.#X = /* @__PURE__ */ new Map(), this.#z = /* @__PURE__ */ new Map(), this.#q = /* @__PURE__ */ new Map();
          const r4 = [];
          for (const t3 of e2)
            try {
              r4.push(ah.from(t3));
            } catch (e3) {
              console.log(`[Warning] Invalid Fragment ${JSON.stringify(t3)}:`, e3.message);
            }
          yn(this, { fragments: Object.freeze(r4) });
          let n2 = null, A2 = false;
          this.#V = this.getAbiCoder(), this.fragments.forEach((t3, e3) => {
            let r5;
            switch (t3.type) {
              case "constructor":
                return this.deploy ? void console.log("duplicate definition - constructor") : void yn(this, { deploy: t3 });
              case "fallback":
                return void (0 === t3.inputs.length ? A2 = true : (vn(!n2 || t3.payable !== n2.payable, "conflicting fallback fragments", `fragments[${e3}]`, t3), n2 = t3, A2 = n2.payable));
              case "function":
                r5 = this.#X;
                break;
              case "event":
                r5 = this.#q;
                break;
              case "error":
                r5 = this.#z;
                break;
              default:
                return;
            }
            const i2 = t3.format();
            r5.has(i2) || r5.set(i2, t3);
          }), this.deploy || yn(this, { deploy: lh.from("constructor()") }), yn(this, { fallback: n2, receive: A2 });
        }
        format(t2) {
          const e2 = t2 ? "minimal" : "full", r4 = this.fragments.map((t3) => t3.format(e2));
          return r4;
        }
        formatJson() {
          const t2 = this.fragments.map((t3) => t3.format("json"));
          return JSON.stringify(t2.map((t3) => JSON.parse(t3)));
        }
        getAbiCoder() {
          return Eh.defaultAbiCoder();
        }
        #W(t2, e2, r4) {
          if (Mn(t2)) {
            const e3 = t2.toLowerCase();
            for (const t3 of this.#X.values())
              if (e3 === t3.selector)
                return t3;
            return null;
          }
          if (-1 === t2.indexOf("(")) {
            const n3 = [];
            for (const [e3, r5] of this.#X)
              e3.split("(")[0] === t2 && n3.push(r5);
            if (e2) {
              const t3 = e2.length > 0 ? e2[e2.length - 1] : null;
              let r5 = e2.length, A2 = true;
              va.isTyped(t3) && "overrides" === t3.type && (A2 = false, r5--);
              for (let t4 = n3.length - 1; t4 >= 0; t4--) {
                const e3 = n3[t4].inputs.length;
                e3 === r5 || A2 && e3 === r5 - 1 || n3.splice(t4, 1);
              }
              for (let t4 = n3.length - 1; t4 >= 0; t4--) {
                const r6 = n3[t4].inputs;
                for (let A3 = 0; A3 < e2.length; A3++)
                  if (va.isTyped(e2[A3])) {
                    if (A3 >= r6.length) {
                      if ("overrides" === e2[A3].type)
                        continue;
                      n3.splice(t4, 1);
                      break;
                    }
                    if (e2[A3].type !== r6[A3].baseType) {
                      n3.splice(t4, 1);
                      break;
                    }
                  }
              }
            }
            if (1 === n3.length && e2 && e2.length !== n3[0].inputs.length) {
              const t3 = e2[e2.length - 1];
              (null == t3 || Array.isArray(t3) || "object" != typeof t3) && n3.splice(0, 1);
            }
            if (0 === n3.length)
              return null;
            if (n3.length > 1 && r4) {
              vn(false, `ambiguous function description (i.e. matches ${n3.map((t3) => JSON.stringify(t3.format())).join(", ")})`, "key", t2);
            }
            return n3[0];
          }
          const n2 = this.#X.get(ph.from(t2).format());
          return n2 || null;
        }
        getFunctionName(t2) {
          const e2 = this.#W(t2, null, false);
          return vn(e2, "no matching function", "key", t2), e2.name;
        }
        hasFunction(t2) {
          return !!this.#W(t2, null, false);
        }
        getFunction(t2, e2) {
          return this.#W(t2, e2 || null, true);
        }
        forEachFunction(t2) {
          const e2 = Array.from(this.#X.keys());
          e2.sort((t3, e3) => t3.localeCompare(e3));
          for (let r4 = 0; r4 < e2.length; r4++) {
            const n2 = e2[r4];
            t2(this.#X.get(n2), r4);
          }
        }
        #Z(t2, e2, r4) {
          if (Mn(t2)) {
            const e3 = t2.toLowerCase();
            for (const t3 of this.#q.values())
              if (e3 === t3.topicHash)
                return t3;
            return null;
          }
          if (-1 === t2.indexOf("(")) {
            const n3 = [];
            for (const [e3, r5] of this.#q)
              e3.split("(")[0] === t2 && n3.push(r5);
            if (e2) {
              for (let t3 = n3.length - 1; t3 >= 0; t3--)
                n3[t3].inputs.length < e2.length && n3.splice(t3, 1);
              for (let t3 = n3.length - 1; t3 >= 0; t3--) {
                const r5 = n3[t3].inputs;
                for (let A2 = 0; A2 < e2.length; A2++)
                  if (va.isTyped(e2[A2]) && e2[A2].type !== r5[A2].baseType) {
                    n3.splice(t3, 1);
                    break;
                  }
              }
            }
            if (0 === n3.length)
              return null;
            if (n3.length > 1 && r4) {
              vn(false, `ambiguous event description (i.e. matches ${n3.map((t3) => JSON.stringify(t3.format())).join(", ")})`, "key", t2);
            }
            return n3[0];
          }
          const n2 = this.#q.get(uh.from(t2).format());
          return n2 || null;
        }
        getEventName(t2) {
          const e2 = this.#Z(t2, null, false);
          return vn(e2, "no matching event", "key", t2), e2.name;
        }
        hasEvent(t2) {
          return !!this.#Z(t2, null, false);
        }
        getEvent(t2, e2) {
          return this.#Z(t2, e2 || null, true);
        }
        forEachEvent(t2) {
          const e2 = Array.from(this.#q.keys());
          e2.sort((t3, e3) => t3.localeCompare(e3));
          for (let r4 = 0; r4 < e2.length; r4++) {
            const n2 = e2[r4];
            t2(this.#q.get(n2), r4);
          }
        }
        getError(t2, e2) {
          if (Mn(t2)) {
            const e3 = t2.toLowerCase();
            if (kh[e3])
              return gh.from(kh[e3].signature);
            for (const t3 of this.#z.values())
              if (e3 === t3.selector)
                return t3;
            return null;
          }
          if (-1 === t2.indexOf("(")) {
            const e3 = [];
            for (const [r5, n2] of this.#z)
              r5.split("(")[0] === t2 && e3.push(n2);
            if (0 === e3.length)
              return "Error" === t2 ? gh.from("error Error(string)") : "Panic" === t2 ? gh.from("error Panic(uint256)") : null;
            if (e3.length > 1) {
              vn(false, `ambiguous error description (i.e. ${e3.map((t3) => JSON.stringify(t3.format())).join(", ")})`, "name", t2);
            }
            return e3[0];
          }
          if ("Error(string)" === (t2 = gh.from(t2).format()))
            return gh.from("error Error(string)");
          if ("Panic(uint256)" === t2)
            return gh.from("error Panic(uint256)");
          const r4 = this.#z.get(t2);
          return r4 || null;
        }
        forEachError(t2) {
          const e2 = Array.from(this.#z.keys());
          e2.sort((t3, e3) => t3.localeCompare(e3));
          for (let r4 = 0; r4 < e2.length; r4++) {
            const n2 = e2[r4];
            t2(this.#z.get(n2), r4);
          }
        }
        _decodeParams(t2, e2) {
          return this.#V.decode(t2, e2);
        }
        _encodeParams(t2, e2) {
          return this.#V.encode(t2, e2);
        }
        encodeDeploy(t2) {
          return this._encodeParams(this.deploy.inputs, t2 || []);
        }
        decodeErrorResult(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getError(t2);
            vn(e3, "unknown error", "fragment", t2), t2 = e3;
          }
          return vn(Un(e2, 0, 4) === t2.selector, `data signature does not match error ${t2.name}.`, "data", e2), this._decodeParams(t2.inputs, Un(e2, 4));
        }
        encodeErrorResult(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getError(t2);
            vn(e3, "unknown error", "fragment", t2), t2 = e3;
          }
          return Tn([t2.selector, this._encodeParams(t2.inputs, e2 || [])]);
        }
        decodeFunctionData(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getFunction(t2);
            vn(e3, "unknown function", "fragment", t2), t2 = e3;
          }
          return vn(Un(e2, 0, 4) === t2.selector, `data signature does not match function ${t2.name}.`, "data", e2), this._decodeParams(t2.inputs, Un(e2, 4));
        }
        encodeFunctionData(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getFunction(t2);
            vn(e3, "unknown function", "fragment", t2), t2 = e3;
          }
          return Tn([t2.selector, this._encodeParams(t2.inputs, e2 || [])]);
        }
        decodeFunctionResult(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getFunction(t2);
            vn(e3, "unknown function", "fragment", t2), t2 = e3;
          }
          let r4 = "invalid length for result data";
          const n2 = Nn(e2);
          if (n2.length % 32 == 0)
            try {
              return this.#V.decode(t2.outputs, n2);
            } catch (t3) {
              r4 = "could not decode result data";
            }
          wn(false, r4, "BAD_DATA", { value: Pn(n2), info: { method: t2.name, signature: t2.format() } });
        }
        makeError(t2, e2) {
          const r4 = Sn(t2, "data"), n2 = Eh.getBuiltinCallException("call", e2, r4);
          if (n2.message.startsWith("execution reverted (unknown custom error)")) {
            const t3 = Pn(r4.slice(0, 4)), e3 = this.getError(t3);
            if (e3)
              try {
                const t4 = this.#V.decode(e3.inputs, r4.slice(4));
                n2.revert = { name: e3.name, signature: e3.format(), args: t4 }, n2.reason = n2.revert.signature, n2.message = `execution reverted: ${n2.reason}`;
              } catch (t4) {
                n2.message = "execution reverted (coult not decode custom error)";
              }
          }
          const A2 = this.parseTransaction(e2);
          return A2 && (n2.invocation = { method: A2.name, signature: A2.signature, args: A2.args }), n2;
        }
        encodeFunctionResult(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getFunction(t2);
            vn(e3, "unknown function", "fragment", t2), t2 = e3;
          }
          return Pn(this.#V.encode(t2.outputs, e2 || []));
        }
        encodeFilterTopics(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getEvent(t2);
            vn(e3, "unknown event", "eventFragment", t2), t2 = e3;
          }
          wn(e2.length <= t2.inputs.length, `too many arguments for ${t2.format()}`, "UNEXPECTED_ARGUMENT", { count: e2.length, expectedCount: t2.inputs.length });
          const r4 = [];
          t2.anonymous || r4.push(t2.topicHash);
          const n2 = (t3, e3) => "string" === t3.type ? Oa(e3) : "bytes" === t3.type ? no(Pn(e3)) : ("bool" === t3.type && "boolean" == typeof e3 ? e3 = e3 ? "0x01" : "0x00" : t3.type.match(/^u?int/) ? e3 = Zn(e3) : t3.type.match(/^bytes/) ? e3 = Gn(e3, 32, false) : "address" === t3.type && this.#V.encode(["address"], [e3]), Hn(Pn(e3), 32));
          for (e2.forEach((e3, A2) => {
            const i2 = t2.inputs[A2];
            i2.indexed ? null == e3 ? r4.push(null) : "array" === i2.baseType || "tuple" === i2.baseType ? vn(false, "filtering with tuples or arrays not supported", "contract." + i2.name, e3) : Array.isArray(e3) ? r4.push(e3.map((t3) => n2(i2, t3))) : r4.push(n2(i2, e3)) : vn(null == e3, "cannot filter non-indexed parameters; must be null", "contract." + i2.name, e3);
          }); r4.length && null === r4[r4.length - 1]; )
            r4.pop();
          return r4;
        }
        encodeEventLog(t2, e2) {
          if ("string" == typeof t2) {
            const e3 = this.getEvent(t2);
            vn(e3, "unknown event", "eventFragment", t2), t2 = e3;
          }
          const r4 = [], n2 = [], A2 = [];
          return t2.anonymous || r4.push(t2.topicHash), vn(e2.length === t2.inputs.length, "event arguments/values mismatch", "values", e2), t2.inputs.forEach((t3, i2) => {
            const o2 = e2[i2];
            if (t3.indexed)
              if ("string" === t3.type)
                r4.push(Oa(o2));
              else if ("bytes" === t3.type)
                r4.push(no(o2));
              else {
                if ("tuple" === t3.baseType || "array" === t3.baseType)
                  throw new Error("not implemented");
                r4.push(this.#V.encode([t3.type], [o2]));
              }
            else
              n2.push(t3), A2.push(o2);
          }), { data: this.#V.encode(n2, A2), topics: r4 };
        }
        decodeEventLog(t2, e2, r4) {
          if ("string" == typeof t2) {
            const e3 = this.getEvent(t2);
            vn(e3, "unknown event", "eventFragment", t2), t2 = e3;
          }
          if (null != r4 && !t2.anonymous) {
            const e3 = t2.topicHash;
            vn(Mn(r4[0], 32) && r4[0].toLowerCase() === e3, "fragment/topic mismatch", "topics[0]", r4[0]), r4 = r4.slice(1);
          }
          const n2 = [], A2 = [], i2 = [];
          t2.inputs.forEach((t3, e3) => {
            t3.indexed ? "string" === t3.type || "bytes" === t3.type || "tuple" === t3.baseType || "array" === t3.baseType ? (n2.push(sh.from({ type: "bytes32", name: t3.name })), i2.push(true)) : (n2.push(t3), i2.push(false)) : (A2.push(t3), i2.push(false));
          });
          const o2 = null != r4 ? this.#V.decode(n2, Tn(r4)) : null, s2 = this.#V.decode(A2, e2, true), a2 = [], c2 = [];
          let h2 = 0, g2 = 0;
          return t2.inputs.forEach((t3, e3) => {
            let r5 = null;
            if (t3.indexed)
              if (null == o2)
                r5 = new Qh(null);
              else if (i2[e3])
                r5 = new Qh(o2[g2++]);
              else
                try {
                  r5 = o2[g2++];
                } catch (t4) {
                  r5 = t4;
                }
            else
              try {
                r5 = s2[h2++];
              } catch (t4) {
                r5 = t4;
              }
            a2.push(r5), c2.push(t3.name || null);
          }), RA.fromItems(a2, c2);
        }
        parseTransaction(t2) {
          const e2 = Sn(t2.data, "tx.data"), r4 = zn(null != t2.value ? t2.value : 0, "tx.value"), n2 = this.getFunction(Pn(e2.slice(0, 4)));
          if (!n2)
            return null;
          const A2 = this.#V.decode(n2.inputs, e2.slice(4));
          return new vh(n2, n2.selector, A2, r4);
        }
        parseCallResult(t2) {
          throw new Error("@TODO");
        }
        parseLog(t2) {
          const e2 = this.getEvent(t2.topics[0]);
          return !e2 || e2.anonymous ? null : new wh(e2, e2.topicHash, this.decodeEventLog(e2, t2.data, t2.topics));
        }
        parseError(t2) {
          const e2 = Pn(t2), r4 = this.getError(Un(e2, 0, 4));
          if (!r4)
            return null;
          const n2 = this.#V.decode(r4.inputs, Un(e2, 4));
          return new _h(r4, r4.selector, n2);
        }
        static from(t2) {
          return t2 instanceof _Dh ? t2 : "string" == typeof t2 ? new _Dh(JSON.parse(t2)) : "function" == typeof t2.format ? new _Dh(t2.format("json")) : new _Dh(t2);
        }
      };
      var Sh = BigInt(0);
      function Nh(t2) {
        return null == t2 ? null : t2.toString();
      }
      function Mh(t2) {
        const e2 = {};
        t2.to && (e2.to = t2.to), t2.from && (e2.from = t2.from), t2.data && (e2.data = Pn(t2.data));
        const r4 = "chainId,gasLimit,gasPrice,maxFeePerGas,maxPriorityFeePerGas,value".split(/,/);
        for (const n3 of r4)
          n3 in t2 && null != t2[n3] && (e2[n3] = zn(t2[n3], `request.${n3}`));
        const n2 = "type,nonce".split(/,/);
        for (const r5 of n2)
          r5 in t2 && null != t2[r5] && (e2[r5] = Wn(t2[r5], `request.${r5}`));
        return t2.accessList && (e2.accessList = Ka(t2.accessList)), "blockTag" in t2 && (e2.blockTag = t2.blockTag), "enableCcipRead" in t2 && (e2.enableCcipRead = !!t2.enableCcipRead), "customData" in t2 && (e2.customData = t2.customData), e2;
      }
      var xh = class {
        provider;
        transactionHash;
        blockHash;
        blockNumber;
        removed;
        address;
        data;
        topics;
        index;
        transactionIndex;
        constructor(t2, e2) {
          this.provider = e2;
          const r4 = Object.freeze(t2.topics.slice());
          yn(this, { transactionHash: t2.transactionHash, blockHash: t2.blockHash, blockNumber: t2.blockNumber, removed: t2.removed, address: t2.address, data: t2.data, topics: r4, index: t2.index, transactionIndex: t2.transactionIndex });
        }
        toJSON() {
          const { address: t2, blockHash: e2, blockNumber: r4, data: n2, index: A2, removed: i2, topics: o2, transactionHash: s2, transactionIndex: a2 } = this;
          return { _type: "log", address: t2, blockHash: e2, blockNumber: r4, data: n2, index: A2, removed: i2, topics: o2, transactionHash: s2, transactionIndex: a2 };
        }
        async getBlock() {
          const t2 = await this.provider.getBlock(this.blockHash);
          return wn(!!t2, "failed to find transaction", "UNKNOWN_ERROR", {}), t2;
        }
        async getTransaction() {
          const t2 = await this.provider.getTransaction(this.transactionHash);
          return wn(!!t2, "failed to find transaction", "UNKNOWN_ERROR", {}), t2;
        }
        async getTransactionReceipt() {
          const t2 = await this.provider.getTransactionReceipt(this.transactionHash);
          return wn(!!t2, "failed to find transaction receipt", "UNKNOWN_ERROR", {}), t2;
        }
        removedEvent() {
          return { orphan: "drop-log", log: { transactionHash: (t2 = this).transactionHash, blockHash: t2.blockHash, blockNumber: t2.blockNumber, address: t2.address, data: t2.data, topics: Object.freeze(t2.topics.slice()), index: t2.index } };
          var t2;
        }
      };
      var Fh = class {
        provider;
        to;
        from;
        contractAddress;
        hash;
        index;
        blockHash;
        blockNumber;
        logsBloom;
        gasUsed;
        blobGasUsed;
        cumulativeGasUsed;
        gasPrice;
        blobGasPrice;
        type;
        status;
        root;
        #$;
        constructor(t2, e2) {
          this.#$ = Object.freeze(t2.logs.map((t3) => new xh(t3, e2)));
          let r4 = Sh;
          null != t2.effectiveGasPrice ? r4 = t2.effectiveGasPrice : null != t2.gasPrice && (r4 = t2.gasPrice), yn(this, { provider: e2, to: t2.to, from: t2.from, contractAddress: t2.contractAddress, hash: t2.hash, index: t2.index, blockHash: t2.blockHash, blockNumber: t2.blockNumber, logsBloom: t2.logsBloom, gasUsed: t2.gasUsed, cumulativeGasUsed: t2.cumulativeGasUsed, blobGasUsed: t2.blobGasUsed, gasPrice: r4, blobGasPrice: t2.blobGasPrice, type: t2.type, status: t2.status, root: t2.root });
        }
        get logs() {
          return this.#$;
        }
        toJSON() {
          const { to: t2, from: e2, contractAddress: r4, hash: n2, index: A2, blockHash: i2, blockNumber: o2, logsBloom: s2, logs: a2, status: c2, root: h2 } = this;
          return { _type: "TransactionReceipt", blockHash: i2, blockNumber: o2, contractAddress: r4, cumulativeGasUsed: Nh(this.cumulativeGasUsed), from: e2, gasPrice: Nh(this.gasPrice), blobGasUsed: Nh(this.blobGasUsed), blobGasPrice: Nh(this.blobGasPrice), gasUsed: Nh(this.gasUsed), hash: n2, index: A2, logs: a2, logsBloom: s2, root: h2, status: c2, to: t2 };
        }
        get length() {
          return this.logs.length;
        }
        [Symbol.iterator]() {
          let t2 = 0;
          return { next: () => t2 < this.length ? { value: this.logs[t2++], done: false } : { value: void 0, done: true } };
        }
        get fee() {
          return this.gasUsed * this.gasPrice;
        }
        async getBlock() {
          const t2 = await this.provider.getBlock(this.blockHash);
          if (null == t2)
            throw new Error("TODO");
          return t2;
        }
        async getTransaction() {
          const t2 = await this.provider.getTransaction(this.hash);
          if (null == t2)
            throw new Error("TODO");
          return t2;
        }
        async getResult() {
          return await this.provider.getTransactionResult(this.hash);
        }
        async confirmations() {
          return await this.provider.getBlockNumber() - this.blockNumber + 1;
        }
        removedEvent() {
          return Rh(this);
        }
        reorderedEvent(t2) {
          return wn(!t2 || t2.isMined(), "unmined 'other' transction cannot be orphaned", "UNSUPPORTED_OPERATION", { operation: "reorderedEvent(other)" }), Th(this, t2);
        }
      };
      var Ph = class _Ph {
        provider;
        blockNumber;
        blockHash;
        index;
        hash;
        type;
        to;
        from;
        nonce;
        gasLimit;
        gasPrice;
        maxPriorityFeePerGas;
        maxFeePerGas;
        maxFeePerBlobGas;
        data;
        value;
        chainId;
        signature;
        accessList;
        blobVersionedHashes;
        #tt;
        constructor(t2, e2) {
          this.provider = e2, this.blockNumber = null != t2.blockNumber ? t2.blockNumber : null, this.blockHash = null != t2.blockHash ? t2.blockHash : null, this.hash = t2.hash, this.index = t2.index, this.type = t2.type, this.from = t2.from, this.to = t2.to || null, this.gasLimit = t2.gasLimit, this.nonce = t2.nonce, this.data = t2.data, this.value = t2.value, this.gasPrice = t2.gasPrice, this.maxPriorityFeePerGas = null != t2.maxPriorityFeePerGas ? t2.maxPriorityFeePerGas : null, this.maxFeePerGas = null != t2.maxFeePerGas ? t2.maxFeePerGas : null, this.maxFeePerBlobGas = null != t2.maxFeePerBlobGas ? t2.maxFeePerBlobGas : null, this.chainId = t2.chainId, this.signature = t2.signature, this.accessList = null != t2.accessList ? t2.accessList : null, this.blobVersionedHashes = null != t2.blobVersionedHashes ? t2.blobVersionedHashes : null, this.#tt = -1;
        }
        toJSON() {
          const { blockNumber: t2, blockHash: e2, index: r4, hash: n2, type: A2, to: i2, from: o2, nonce: s2, data: a2, signature: c2, accessList: h2, blobVersionedHashes: g2 } = this;
          return { _type: "TransactionResponse", accessList: h2, blockNumber: t2, blockHash: e2, blobVersionedHashes: g2, chainId: Nh(this.chainId), data: a2, from: o2, gasLimit: Nh(this.gasLimit), gasPrice: Nh(this.gasPrice), hash: n2, maxFeePerGas: Nh(this.maxFeePerGas), maxPriorityFeePerGas: Nh(this.maxPriorityFeePerGas), maxFeePerBlobGas: Nh(this.maxFeePerBlobGas), nonce: s2, signature: c2, to: i2, index: r4, type: A2, value: Nh(this.value) };
        }
        async getBlock() {
          let t2 = this.blockNumber;
          if (null == t2) {
            const e3 = await this.getTransaction();
            e3 && (t2 = e3.blockNumber);
          }
          if (null == t2)
            return null;
          const e2 = this.provider.getBlock(t2);
          if (null == e2)
            throw new Error("TODO");
          return e2;
        }
        async getTransaction() {
          return this.provider.getTransaction(this.hash);
        }
        async confirmations() {
          if (null == this.blockNumber) {
            const { tx: t2, blockNumber: e2 } = await In({ tx: this.getTransaction(), blockNumber: this.provider.getBlockNumber() });
            return null == t2 || null == t2.blockNumber ? 0 : e2 - t2.blockNumber + 1;
          }
          return await this.provider.getBlockNumber() - this.blockNumber + 1;
        }
        async wait(t2, e2) {
          const r4 = null == t2 ? 1 : t2, n2 = null == e2 ? 0 : e2;
          let A2 = this.#tt, i2 = -1, o2 = -1 === A2;
          const s2 = async () => {
            if (o2)
              return null;
            const { blockNumber: t3, nonce: e3 } = await In({ blockNumber: this.provider.getBlockNumber(), nonce: this.provider.getTransactionCount(this.from) });
            if (e3 < this.nonce)
              return void (A2 = t3);
            if (o2)
              return null;
            const n3 = await this.getTransaction();
            if (!n3 || null == n3.blockNumber)
              for (-1 === i2 && (i2 = A2 - 3, i2 < this.#tt && (i2 = this.#tt)); i2 <= t3; ) {
                if (o2)
                  return null;
                const e4 = await this.provider.getBlock(i2, true);
                if (null == e4)
                  return;
                for (const t4 of e4)
                  if (t4 === this.hash)
                    return;
                for (let n4 = 0; n4 < e4.length; n4++) {
                  const i3 = await e4.getTransaction(n4);
                  if (i3.from === this.from && i3.nonce === this.nonce) {
                    if (o2)
                      return null;
                    const e5 = await this.provider.getTransactionReceipt(i3.hash);
                    if (null == e5)
                      return;
                    if (t3 - e5.blockNumber + 1 < r4)
                      return;
                    let n5 = "replaced";
                    i3.data === this.data && i3.to === this.to && i3.value === this.value ? n5 = "repriced" : "0x" === i3.data && i3.from === i3.to && i3.value === Sh && (n5 = "cancelled"), wn(false, "transaction was replaced", "TRANSACTION_REPLACED", { cancelled: "replaced" === n5 || "cancelled" === n5, reason: n5, replacement: i3.replaceableTransaction(A2), hash: i3.hash, receipt: e5 });
                  }
                }
                i2++;
              }
          }, a2 = (t3) => {
            if (null == t3 || 0 !== t3.status)
              return t3;
            wn(false, "transaction execution reverted", "CALL_EXCEPTION", { action: "sendTransaction", data: null, reason: null, invocation: null, revert: null, transaction: { to: t3.to, from: t3.from, data: "" }, receipt: t3 });
          }, c2 = await this.provider.getTransactionReceipt(this.hash);
          if (0 === r4)
            return a2(c2);
          if (c2) {
            if (await c2.confirmations() >= r4)
              return a2(c2);
          } else if (await s2(), 0 === r4)
            return null;
          const h2 = new Promise((t3, e3) => {
            const i3 = [], c3 = () => {
              i3.forEach((t4) => t4());
            };
            if (i3.push(() => {
              o2 = true;
            }), n2 > 0) {
              const t4 = setTimeout(() => {
                c3(), e3(En("wait for transaction timeout", "TIMEOUT"));
              }, n2);
              i3.push(() => {
                clearTimeout(t4);
              });
            }
            const h3 = async (n3) => {
              if (await n3.confirmations() >= r4) {
                c3();
                try {
                  t3(a2(n3));
                } catch (t4) {
                  e3(t4);
                }
              }
            };
            if (i3.push(() => {
              this.provider.off(this.hash, h3);
            }), this.provider.on(this.hash, h3), A2 >= 0) {
              const t4 = async () => {
                try {
                  await s2();
                } catch (t5) {
                  if (mn(t5, "TRANSACTION_REPLACED"))
                    return c3(), void e3(t5);
                }
                o2 || this.provider.once("block", t4);
              };
              i3.push(() => {
                this.provider.off("block", t4);
              }), this.provider.once("block", t4);
            }
          });
          return await h2;
        }
        isMined() {
          return null != this.blockHash;
        }
        isLegacy() {
          return 0 === this.type;
        }
        isBerlin() {
          return 1 === this.type;
        }
        isLondon() {
          return 2 === this.type;
        }
        isCancun() {
          return 3 === this.type;
        }
        removedEvent() {
          return wn(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), Rh(this);
        }
        reorderedEvent(t2) {
          return wn(this.isMined(), "unmined transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), wn(!t2 || t2.isMined(), "unmined 'other' transaction canot be orphaned", "UNSUPPORTED_OPERATION", { operation: "removeEvent()" }), Th(this, t2);
        }
        replaceableTransaction(t2) {
          vn(Number.isInteger(t2) && t2 >= 0, "invalid startBlock", "startBlock", t2);
          const e2 = new _Ph(this, this.provider);
          return e2.#tt = t2, e2;
        }
      };
      function Th(t2, e2) {
        return { orphan: "reorder-transaction", tx: t2, other: e2 };
      }
      function Rh(t2) {
        return { orphan: "drop-transaction", tx: t2 };
      }
      var Uh = class extends xh {
        interface;
        fragment;
        args;
        constructor(t2, e2, r4) {
          super(t2, t2.provider);
          yn(this, { args: e2.decodeEventLog(r4, t2.data, t2.topics), fragment: r4, interface: e2 });
        }
        get eventName() {
          return this.fragment.name;
        }
        get eventSignature() {
          return this.fragment.format();
        }
      };
      var Gh = class extends xh {
        error;
        constructor(t2, e2) {
          super(t2, t2.provider), yn(this, { error: e2 });
        }
      };
      var Hh = class extends Fh {
        #et;
        constructor(t2, e2, r4) {
          super(r4, e2), this.#et = t2;
        }
        get logs() {
          return super.logs.map((t2) => {
            const e2 = t2.topics.length ? this.#et.getEvent(t2.topics[0]) : null;
            if (e2)
              try {
                return new Uh(t2, this.#et, e2);
              } catch (e3) {
                return new Gh(t2, e3);
              }
            return t2;
          });
        }
      };
      var Lh = class extends Ph {
        #et;
        constructor(t2, e2, r4) {
          super(r4, e2), this.#et = t2;
        }
        async wait(t2, e2) {
          const r4 = await super.wait(t2, e2);
          return null == r4 ? null : new Hh(this.#et, this.provider, r4);
        }
      };
      var Oh = class extends iA {
        log;
        constructor(t2, e2, r4, n2) {
          super(t2, e2, r4), yn(this, { log: n2 });
        }
        async getBlock() {
          return await this.log.getBlock();
        }
        async getTransaction() {
          return await this.log.getTransaction();
        }
        async getTransactionReceipt() {
          return await this.log.getTransactionReceipt();
        }
      };
      var Yh = class extends Oh {
        constructor(t2, e2, r4, n2, A2) {
          super(t2, e2, r4, new Uh(A2, t2.interface, n2));
          yn(this, { args: t2.interface.decodeEventLog(n2, this.log.data, this.log.topics), fragment: n2 });
        }
        get eventName() {
          return this.fragment.name;
        }
        get eventSignature() {
          return this.fragment.format();
        }
      };
      var Kh = BigInt(0);
      function Jh(t2) {
        return t2 && "function" == typeof t2.call;
      }
      function jh(t2) {
        return t2 && "function" == typeof t2.estimateGas;
      }
      function zh(t2) {
        return t2 && "function" == typeof t2.resolveName;
      }
      function qh(t2) {
        return t2 && "function" == typeof t2.sendTransaction;
      }
      function Xh(t2) {
        if (null != t2) {
          if (zh(t2))
            return t2;
          if (t2.provider)
            return t2.provider;
        }
      }
      var Vh = class {
        #rt;
        fragment;
        constructor(t2, e2, r4) {
          if (yn(this, { fragment: e2 }), e2.inputs.length < r4.length)
            throw new Error("too many arguments");
          const n2 = Wh(t2.runner, "resolveName"), A2 = zh(n2) ? n2 : null;
          this.#rt = async function() {
            const n3 = await Promise.all(e2.inputs.map((t3, e3) => null == r4[e3] ? null : t3.walkAsync(r4[e3], (t4, e4) => "address" === t4 ? Array.isArray(e4) ? Promise.all(e4.map((t5) => Ca(t5, A2))) : Ca(e4, A2) : e4)));
            return t2.interface.encodeFilterTopics(e2, n3);
          }();
        }
        getTopicFilter() {
          return this.#rt;
        }
      };
      function Wh(t2, e2) {
        return null == t2 ? null : "function" == typeof t2[e2] ? t2 : t2.provider && "function" == typeof t2.provider[e2] ? t2.provider : null;
      }
      function Zh(t2) {
        return null == t2 ? null : t2.provider || null;
      }
      async function $h(t2, e2) {
        const r4 = va.dereference(t2, "overrides");
        vn("object" == typeof r4, "invalid overrides parameter", "overrides", t2);
        const n2 = Mh(r4);
        return vn(null == n2.to || (e2 || []).indexOf("to") >= 0, "cannot override to", "overrides.to", n2.to), vn(null == n2.data || (e2 || []).indexOf("data") >= 0, "cannot override data", "overrides.data", n2.data), n2.from && (n2.from = n2.from), n2;
      }
      function tg(t2) {
        const e2 = async function(e3) {
          const r5 = await $h(e3, ["data"]);
          r5.to = await t2.getAddress(), r5.from && (r5.from = await Ca(r5.from, Xh(t2.runner)));
          const n3 = t2.interface, A2 = zn(r5.value || Kh, "overrides.value") === Kh, i2 = "0x" === (r5.data || "0x");
          !n3.fallback || n3.fallback.payable || !n3.receive || i2 || A2 || vn(false, "cannot send data to receive or send value to non-payable fallback", "overrides", e3), vn(n3.fallback || i2, "cannot send data to receive-only contract", "overrides.data", r5.data);
          return vn(n3.receive || n3.fallback && n3.fallback.payable || A2, "cannot send value to non-payable fallback", "overrides.value", r5.value), vn(n3.fallback || i2, "cannot send data to receive-only contract", "overrides.data", r5.data), r5;
        }, r4 = async function(r5) {
          const n3 = t2.runner;
          wn(qh(n3), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
          const A2 = await n3.sendTransaction(await e2(r5)), i2 = Zh(t2.runner);
          return new Lh(t2.interface, i2, A2);
        }, n2 = async (t3) => await r4(t3);
        return yn(n2, { _contract: t2, estimateGas: async function(r5) {
          const n3 = Wh(t2.runner, "estimateGas");
          return wn(jh(n3), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" }), await n3.estimateGas(await e2(r5));
        }, populateTransaction: e2, send: r4, staticCall: async function(r5) {
          const n3 = Wh(t2.runner, "call");
          wn(Jh(n3), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
          const A2 = await e2(r5);
          try {
            return await n3.call(A2);
          } catch (e3) {
            if (Bn(e3) && e3.data)
              throw t2.interface.makeError(e3.data, A2);
            throw e3;
          }
        } }), n2;
      }
      function eg(t2, e2) {
        const r4 = function(...r5) {
          const n3 = t2.interface.getFunction(e2, r5);
          return wn(n3, "no matching fragment", "UNSUPPORTED_OPERATION", { operation: "fragment", info: { key: e2, args: r5 } }), n3;
        }, n2 = async function(...e3) {
          const n3 = r4(...e3);
          let A3 = {};
          if (n3.inputs.length + 1 === e3.length && (A3 = await $h(e3.pop()), A3.from && (A3.from = await Ca(A3.from, Xh(t2.runner)))), n3.inputs.length !== e3.length)
            throw new Error("internal error: fragment inputs doesn't match arguments; should not happen");
          const i3 = await async function(t3, e4, r5) {
            const n4 = Wh(t3, "resolveName"), A4 = zh(n4) ? n4 : null;
            return await Promise.all(e4.map((t4, e5) => t4.walkAsync(r5[e5], (t5, e6) => (e6 = va.dereference(e6, t5), "address" === t5 ? Ca(e6, A4) : e6))));
          }(t2.runner, n3.inputs, e3);
          return Object.assign({}, A3, await In({ to: t2.getAddress(), data: t2.interface.encodeFunctionData(n3, i3) }));
        }, A2 = async function(...t3) {
          const e3 = await o2(...t3);
          return 1 === e3.length ? e3[0] : e3;
        }, i2 = async function(...e3) {
          const r5 = t2.runner;
          wn(qh(r5), "contract runner does not support sending transactions", "UNSUPPORTED_OPERATION", { operation: "sendTransaction" });
          const A3 = await r5.sendTransaction(await n2(...e3)), i3 = Zh(t2.runner);
          return new Lh(t2.interface, i3, A3);
        }, o2 = async function(...e3) {
          const A3 = Wh(t2.runner, "call");
          wn(Jh(A3), "contract runner does not support calling", "UNSUPPORTED_OPERATION", { operation: "call" });
          const i3 = await n2(...e3);
          let o3 = "0x";
          try {
            o3 = await A3.call(i3);
          } catch (e4) {
            if (Bn(e4) && e4.data)
              throw t2.interface.makeError(e4.data, i3);
            throw e4;
          }
          const s3 = r4(...e3);
          return t2.interface.decodeFunctionResult(s3, o3);
        }, s2 = async (...t3) => r4(...t3).constant ? await A2(...t3) : await i2(...t3);
        return yn(s2, { name: t2.interface.getFunctionName(e2), _contract: t2, _key: e2, getFragment: r4, estimateGas: async function(...e3) {
          const r5 = Wh(t2.runner, "estimateGas");
          return wn(jh(r5), "contract runner does not support gas estimation", "UNSUPPORTED_OPERATION", { operation: "estimateGas" }), await r5.estimateGas(await n2(...e3));
        }, populateTransaction: n2, send: i2, staticCall: A2, staticCallResult: o2 }), Object.defineProperty(s2, "fragment", { configurable: false, enumerable: true, get: () => {
          const r5 = t2.interface.getFunction(e2);
          return wn(r5, "no matching fragment", "UNSUPPORTED_OPERATION", { operation: "fragment", info: { key: e2 } }), r5;
        } }), s2;
      }
      var rg = Symbol.for("_ethersInternal_contract");
      var ng = /* @__PURE__ */ new WeakMap();
      function Ag(t2) {
        return ng.get(t2[rg]);
      }
      async function ig(t2, e2) {
        let r4, n2 = null;
        if (Array.isArray(e2)) {
          const n3 = function(e3) {
            if (Mn(e3, 32))
              return e3;
            const r5 = t2.interface.getEvent(e3);
            return vn(r5, "unknown fragment", "name", e3), r5.topicHash;
          };
          r4 = e2.map((t3) => null == t3 ? null : Array.isArray(t3) ? t3.map(n3) : n3(t3));
        } else
          "*" === e2 ? r4 = [null] : "string" == typeof e2 ? Mn(e2, 32) ? r4 = [e2] : (n2 = t2.interface.getEvent(e2), vn(n2, "unknown fragment", "event", e2), r4 = [n2.topicHash]) : (A2 = e2) && "object" == typeof A2 && "getTopicFilter" in A2 && "function" == typeof A2.getTopicFilter && A2.fragment ? r4 = await e2.getTopicFilter() : "fragment" in e2 ? (n2 = e2.fragment, r4 = [n2.topicHash]) : vn(false, "unknown event name", "event", e2);
        var A2;
        r4 = r4.map((t3) => {
          if (null == t3)
            return null;
          if (Array.isArray(t3)) {
            const e3 = Array.from(new Set(t3.map((t4) => t4.toLowerCase())).values());
            return 1 === e3.length ? e3[0] : (e3.sort(), e3);
          }
          return t3.toLowerCase();
        });
        return { fragment: n2, tag: r4.map((t3) => null == t3 ? "null" : Array.isArray(t3) ? t3.join("|") : t3).join("&"), topics: r4 };
      }
      async function og(t2, e2) {
        const { subs: r4 } = Ag(t2);
        return r4.get((await ig(t2, e2)).tag) || null;
      }
      async function sg(t2, e2, r4) {
        const n2 = Zh(t2.runner);
        wn(n2, "contract runner does not support subscribing", "UNSUPPORTED_OPERATION", { operation: e2 });
        const { fragment: A2, tag: i2, topics: o2 } = await ig(t2, r4), { addr: s2, subs: a2 } = Ag(t2);
        let c2 = a2.get(i2);
        if (!c2) {
          const e3 = { address: s2 || t2, topics: o2 }, h2 = (e4) => {
            let n3 = A2;
            if (null == n3)
              try {
                n3 = t2.interface.getEvent(e4.topics[0]);
              } catch (t3) {
              }
            if (n3) {
              const i3 = n3, o3 = A2 ? t2.interface.decodeEventLog(A2, e4.data, e4.topics) : [];
              cg(t2, r4, o3, (n4) => new Yh(t2, n4, r4, i3, e4));
            } else
              cg(t2, r4, [], (n4) => new Oh(t2, n4, r4, e4));
          };
          let g2 = [];
          c2 = { tag: i2, listeners: [], start: () => {
            g2.length || g2.push(n2.on(e3, h2));
          }, stop: async () => {
            if (0 == g2.length)
              return;
            let t3 = g2;
            g2 = [], await Promise.all(t3), n2.off(e3, h2);
          } }, a2.set(i2, c2);
        }
        return c2;
      }
      var ag = Promise.resolve();
      async function cg(t2, e2, r4, n2) {
        try {
          await ag;
        } catch (t3) {
        }
        const A2 = async function(t3, e3, r5, n3) {
          await ag;
          const A3 = await og(t3, e3);
          if (!A3)
            return false;
          const i2 = A3.listeners.length;
          return A3.listeners = A3.listeners.filter(({ listener: e4, once: A4 }) => {
            const i3 = Array.from(r5);
            n3 && i3.push(n3(A4 ? null : e4));
            try {
              e4.call(t3, ...i3);
            } catch (t4) {
            }
            return !A4;
          }), 0 === A3.listeners.length && (A3.stop(), Ag(t3).subs.delete(A3.tag)), i2 > 0;
        }(t2, e2, r4, n2);
        return ag = A2, await A2;
      }
      var hg = ["then"];
      var gg = class _gg {
        target;
        interface;
        runner;
        filters;
        [rg];
        fallback;
        constructor(t2, e2, r4, n2) {
          vn("string" == typeof t2 || Ia(t2), "invalid value for Contract target", "target", t2), null == r4 && (r4 = null);
          const A2 = Dh.from(e2);
          let i2;
          yn(this, { target: t2, runner: r4, interface: A2 }), Object.defineProperty(this, rg, { value: {} });
          let o2 = null, s2 = null;
          if (n2) {
            const t3 = Zh(r4);
            s2 = new Lh(this.interface, t3, n2);
          }
          let a2 = /* @__PURE__ */ new Map();
          if ("string" == typeof t2)
            if (Mn(t2))
              o2 = t2, i2 = Promise.resolve(t2);
            else {
              const e3 = Wh(r4, "resolveName");
              if (!zh(e3))
                throw En("contract runner does not support name resolution", "UNSUPPORTED_OPERATION", { operation: "resolveName" });
              i2 = e3.resolveName(t2).then((e4) => {
                if (null == e4)
                  throw En("an ENS name used for a contract target must be correctly configured", "UNCONFIGURED_NAME", { value: t2 });
                return Ag(this).addr = e4, e4;
              });
            }
          else
            i2 = t2.getAddress().then((t3) => {
              if (null == t3)
                throw new Error("TODO");
              return Ag(this).addr = t3, t3;
            });
          var c2, h2;
          c2 = this, h2 = { addrPromise: i2, addr: o2, deployTx: s2, subs: a2 }, ng.set(c2[rg], h2);
          const g2 = new Proxy({}, { get: (t3, e3, r5) => {
            if ("symbol" == typeof e3 || hg.indexOf(e3) >= 0)
              return Reflect.get(t3, e3, r5);
            try {
              return this.getEvent(e3);
            } catch (t4) {
              if (!mn(t4, "INVALID_ARGUMENT") || "key" !== t4.argument)
                throw t4;
            }
          }, has: (t3, e3) => hg.indexOf(e3) >= 0 ? Reflect.has(t3, e3) : Reflect.has(t3, e3) || this.interface.hasEvent(String(e3)) });
          return yn(this, { filters: g2 }), yn(this, { fallback: A2.receive || A2.fallback ? tg(this) : null }), new Proxy(this, { get: (t3, e3, r5) => {
            if ("symbol" == typeof e3 || e3 in t3 || hg.indexOf(e3) >= 0)
              return Reflect.get(t3, e3, r5);
            try {
              return t3.getFunction(e3);
            } catch (t4) {
              if (!mn(t4, "INVALID_ARGUMENT") || "key" !== t4.argument)
                throw t4;
            }
          }, has: (t3, e3) => "symbol" == typeof e3 || e3 in t3 || hg.indexOf(e3) >= 0 ? Reflect.has(t3, e3) : t3.interface.hasFunction(e3) });
        }
        connect(t2) {
          return new _gg(this.target, this.interface, t2);
        }
        attach(t2) {
          return new _gg(t2, this.interface, this.runner);
        }
        async getAddress() {
          return await Ag(this).addrPromise;
        }
        async getDeployedCode() {
          const t2 = Zh(this.runner);
          wn(t2, "runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "getDeployedCode" });
          const e2 = await t2.getCode(await this.getAddress());
          return "0x" === e2 ? null : e2;
        }
        async waitForDeployment() {
          const t2 = this.deploymentTransaction();
          if (t2)
            return await t2.wait(), this;
          if (null != await this.getDeployedCode())
            return this;
          const e2 = Zh(this.runner);
          return wn(null != e2, "contract runner does not support .provider", "UNSUPPORTED_OPERATION", { operation: "waitForDeployment" }), new Promise((t3, r4) => {
            const n2 = async () => {
              try {
                if (null != await this.getDeployedCode())
                  return t3(this);
                e2.once("block", n2);
              } catch (t4) {
                r4(t4);
              }
            };
            n2();
          });
        }
        deploymentTransaction() {
          return Ag(this).deployTx;
        }
        getFunction(t2) {
          "string" != typeof t2 && (t2 = t2.format());
          return eg(this, t2);
        }
        getEvent(t2) {
          return "string" != typeof t2 && (t2 = t2.format()), function(t3, e2) {
            const r4 = function(...r5) {
              const n3 = t3.interface.getEvent(e2, r5);
              return wn(n3, "no matching fragment", "UNSUPPORTED_OPERATION", { operation: "fragment", info: { key: e2, args: r5 } }), n3;
            }, n2 = function(...e3) {
              return new Vh(t3, r4(...e3), e3);
            };
            return yn(n2, { name: t3.interface.getEventName(e2), _contract: t3, _key: e2, getFragment: r4 }), Object.defineProperty(n2, "fragment", { configurable: false, enumerable: true, get: () => {
              const r5 = t3.interface.getEvent(e2);
              return wn(r5, "no matching fragment", "UNSUPPORTED_OPERATION", { operation: "fragment", info: { key: e2 } }), r5;
            } }), n2;
          }(this, t2);
        }
        async queryTransaction(t2) {
          throw new Error("@TODO");
        }
        async queryFilter(t2, e2, r4) {
          null == e2 && (e2 = 0), null == r4 && (r4 = "latest");
          const { addr: n2, addrPromise: A2 } = Ag(this), i2 = n2 || await A2, { fragment: o2, topics: s2 } = await ig(this, t2), a2 = { address: i2, topics: s2, fromBlock: e2, toBlock: r4 }, c2 = Zh(this.runner);
          return wn(c2, "contract runner does not have a provider", "UNSUPPORTED_OPERATION", { operation: "queryFilter" }), (await c2.getLogs(a2)).map((t3) => {
            let e3 = o2;
            if (null == e3)
              try {
                e3 = this.interface.getEvent(t3.topics[0]);
              } catch (t4) {
              }
            if (e3)
              try {
                return new Uh(t3, this.interface, e3);
              } catch (e4) {
                return new Gh(t3, e4);
              }
            return new xh(t3, c2);
          });
        }
        async on(t2, e2) {
          const r4 = await sg(this, "on", t2);
          return r4.listeners.push({ listener: e2, once: false }), r4.start(), this;
        }
        async once(t2, e2) {
          const r4 = await sg(this, "once", t2);
          return r4.listeners.push({ listener: e2, once: true }), r4.start(), this;
        }
        async emit(t2, ...e2) {
          return await cg(this, t2, e2, null);
        }
        async listenerCount(t2) {
          if (t2) {
            const e3 = await og(this, t2);
            return e3 ? e3.listeners.length : 0;
          }
          const { subs: e2 } = Ag(this);
          let r4 = 0;
          for (const { listeners: t3 } of e2.values())
            r4 += t3.length;
          return r4;
        }
        async listeners(t2) {
          if (t2) {
            const e3 = await og(this, t2);
            return e3 ? e3.listeners.map(({ listener: t3 }) => t3) : [];
          }
          const { subs: e2 } = Ag(this);
          let r4 = [];
          for (const { listeners: t3 } of e2.values())
            r4 = r4.concat(t3.map(({ listener: t4 }) => t4));
          return r4;
        }
        async off(t2, e2) {
          const r4 = await og(this, t2);
          if (!r4)
            return this;
          if (e2) {
            const t3 = r4.listeners.map(({ listener: t4 }) => t4).indexOf(e2);
            t3 >= 0 && r4.listeners.splice(t3, 1);
          }
          return null != e2 && 0 !== r4.listeners.length || (r4.stop(), Ag(this).subs.delete(r4.tag)), this;
        }
        async removeAllListeners(t2) {
          if (t2) {
            const e2 = await og(this, t2);
            if (!e2)
              return this;
            e2.stop(), Ag(this).subs.delete(e2.tag);
          } else {
            const { subs: t3 } = Ag(this);
            for (const { tag: e2, stop: r4 } of t3.values())
              r4(), t3.delete(e2);
          }
          return this;
        }
        async addListener(t2, e2) {
          return await this.on(t2, e2);
        }
        async removeListener(t2, e2) {
          return await this.off(t2, e2);
        }
        static buildClass(t2) {
          return class extends _gg {
            constructor(e2, r4 = null) {
              super(e2, t2, r4);
            }
          };
        }
        static from(t2, e2, r4) {
          null == r4 && (r4 = null);
          return new this(t2, e2, r4);
        }
      };
      var ug = class extends (/* @__PURE__ */ function() {
        return gg;
      }()) {
      };
      function lg(t2, e2) {
        if (t2.provider)
          return t2.provider;
        wn(false, "missing provider", "UNSUPPORTED_OPERATION", { operation: e2 });
      }
      async function fg(t2, e2) {
        let r4 = Mh(e2);
        if (null != r4.to && (r4.to = Ca(r4.to, t2)), null != r4.from) {
          const e3 = r4.from;
          r4.from = Promise.all([t2.getAddress(), Ca(e3, t2)]).then(([t3, e4]) => (vn(t3.toLowerCase() === e4.toLowerCase(), "transaction from mismatch", "tx.from", e4), t3));
        } else
          r4.from = t2.getAddress();
        return await In(r4);
      }
      var pg = class {
        provider;
        constructor(t2) {
          yn(this, { provider: t2 || null });
        }
        async getNonce(t2) {
          return lg(this, "getTransactionCount").getTransactionCount(await this.getAddress(), t2);
        }
        async populateCall(t2) {
          return await fg(this, t2);
        }
        async populateTransaction(t2) {
          const e2 = lg(this, "populateTransaction"), r4 = await fg(this, t2);
          null == r4.nonce && (r4.nonce = await this.getNonce("pending")), null == r4.gasLimit && (r4.gasLimit = await this.estimateGas(r4));
          const n2 = await this.provider.getNetwork();
          if (null != r4.chainId) {
            vn(zn(r4.chainId) === n2.chainId, "transaction chainId mismatch", "tx.chainId", t2.chainId);
          } else
            r4.chainId = n2.chainId;
          const A2 = null != r4.maxFeePerGas || null != r4.maxPriorityFeePerGas;
          if (null == r4.gasPrice || 2 !== r4.type && !A2 ? 0 !== r4.type && 1 !== r4.type || !A2 || vn(false, "pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "tx", t2) : vn(false, "eip-1559 transaction do not support gasPrice", "tx", t2), 2 !== r4.type && null != r4.type || null == r4.maxFeePerGas || null == r4.maxPriorityFeePerGas)
            if (0 === r4.type || 1 === r4.type) {
              const t3 = await e2.getFeeData();
              wn(null != t3.gasPrice, "network does not support gasPrice", "UNSUPPORTED_OPERATION", { operation: "getGasPrice" }), null == r4.gasPrice && (r4.gasPrice = t3.gasPrice);
            } else {
              const t3 = await e2.getFeeData();
              if (null == r4.type)
                if (null != t3.maxFeePerGas && null != t3.maxPriorityFeePerGas)
                  if (r4.type = 2, null != r4.gasPrice) {
                    const t4 = r4.gasPrice;
                    delete r4.gasPrice, r4.maxFeePerGas = t4, r4.maxPriorityFeePerGas = t4;
                  } else
                    null == r4.maxFeePerGas && (r4.maxFeePerGas = t3.maxFeePerGas), null == r4.maxPriorityFeePerGas && (r4.maxPriorityFeePerGas = t3.maxPriorityFeePerGas);
                else
                  null != t3.gasPrice ? (wn(!A2, "network does not support EIP-1559", "UNSUPPORTED_OPERATION", { operation: "populateTransaction" }), null == r4.gasPrice && (r4.gasPrice = t3.gasPrice), r4.type = 0) : wn(false, "failed to get consistent fee data", "UNSUPPORTED_OPERATION", { operation: "signer.getFeeData" });
              else
                2 === r4.type && (null == r4.maxFeePerGas && (r4.maxFeePerGas = t3.maxFeePerGas), null == r4.maxPriorityFeePerGas && (r4.maxPriorityFeePerGas = t3.maxPriorityFeePerGas));
            }
          else
            r4.type = 2;
          return await In(r4);
        }
        async estimateGas(t2) {
          return lg(this, "estimateGas").estimateGas(await this.populateCall(t2));
        }
        async call(t2) {
          return lg(this, "call").call(await this.populateCall(t2));
        }
        async resolveName(t2) {
          const e2 = lg(this, "resolveName");
          return await e2.resolveName(t2);
        }
        async sendTransaction(t2) {
          const e2 = lg(this, "sendTransaction"), r4 = await this.populateTransaction(t2);
          delete r4.from;
          const n2 = hc.from(r4);
          return await e2.broadcastTransaction(await this.signTransaction(n2));
        }
      };
      var dg = class _dg extends pg {
        address;
        constructor(t2, e2) {
          super(e2), yn(this, { address: t2 });
        }
        async getAddress() {
          return this.address;
        }
        connect(t2) {
          return new _dg(this.address, t2);
        }
        #nt(t2, e2) {
          wn(false, `VoidSigner cannot sign ${t2}`, "UNSUPPORTED_OPERATION", { operation: e2 });
        }
        async signTransaction(t2) {
          this.#nt("transactions", "signTransaction");
        }
        async signMessage(t2) {
          this.#nt("messages", "signMessage");
        }
        async signTypedData(t2, e2, r4) {
          this.#nt("typed-data", "signTypedData");
        }
      };
      var Ig = class _Ig extends pg {
        address;
        #At;
        constructor(t2, e2) {
          super(e2), vn(t2 && "function" == typeof t2.sign, "invalid private key", "privateKey", "[ REDACTED ]"), this.#At = t2;
          yn(this, { address: Ja(this.signingKey.publicKey) });
        }
        get signingKey() {
          return this.#At;
        }
        get privateKey() {
          return this.signingKey.privateKey;
        }
        async getAddress() {
          return this.address;
        }
        connect(t2) {
          return new _Ig(this.#At, t2);
        }
        async signTransaction(t2) {
          const { to: e2, from: r4 } = await In({ to: t2.to ? Ca(t2.to, this.provider) : void 0, from: t2.from ? Ca(t2.from, this.provider) : void 0 });
          null != e2 && (t2.to = e2), null != r4 && (t2.from = r4), null != t2.from && (vn(da(t2.from) === this.address, "transaction from address mismatch", "tx.from", t2.from), delete t2.from);
          const n2 = hc.from(t2);
          return n2.signature = this.signingKey.sign(n2.unsignedHash), n2.serialized;
        }
        async signMessage(t2) {
          return this.signMessageSync(t2);
        }
        signMessageSync(t2) {
          return this.signingKey.sign(function(t3) {
            return "string" == typeof t3 && (t3 = aA(t3)), no(Tn([aA("Ethereum Signed Message:\n"), aA(String(t3.length)), t3]));
          }(t2)).serialized;
        }
        async signTypedData(t2, e2, r4) {
          const n2 = await _c.resolveNames(t2, e2, r4, async (t3) => {
            wn(null != this.provider, "cannot resolve ENS names without a provider", "UNSUPPORTED_OPERATION", { operation: "resolveName", info: { name: t3 } });
            const e3 = await this.provider.resolveName(t3);
            return wn(null != e3, "unconfigured ENS name", "UNCONFIGURED_NAME", { value: t3 }), e3;
          });
          return this.signingKey.sign(_c.hash(n2.domain, e2, n2.value)).serialized;
        }
      };
      var yg = " !#$%&'()*+,-./<=>?@[]^_`{|}~";
      var Cg = /^[a-z]*$/i;
      function mg(t2, e2) {
        let r4 = 97;
        return t2.reduce((t3, n2) => (n2 === e2 ? r4++ : n2.match(Cg) ? t3.push(String.fromCharCode(r4) + n2) : (r4 = 97, t3.push(n2)), t3), []);
      }
      function Bg(t2) {
        return vn("0" === t2[0], "unsupported auwl data", "data", t2), function(t3, e2) {
          for (let r5 = yg.length - 1; r5 >= 0; r5--)
            t3 = t3.split(yg[r5]).join(e2.substring(2 * r5, 2 * r5 + 2));
          const r4 = [], n2 = t3.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (t4, e3, n3, A2) => {
            if (n3)
              for (let t5 = parseInt(n3); t5 >= 0; t5--)
                r4.push(";");
            else
              r4.push(e3.toLowerCase());
            return "";
          });
          if (n2)
            throw new Error(`leftovers: ${JSON.stringify(n2)}`);
          return mg(mg(r4, ";"), ":");
        }(t2.substring(1 + 2 * yg.length), t2.substring(1, 1 + 2 * yg.length));
      }
      var Eg = class {
        locale;
        constructor(t2) {
          yn(this, { locale: t2 });
        }
        split(t2) {
          return t2.toLowerCase().split(/\s+/g);
        }
        join(t2) {
          return t2.join(" ");
        }
      };
      var wg = class extends Eg {
        #g;
        #it;
        constructor(t2, e2, r4) {
          super(t2), this.#g = e2, this.#it = r4, this.#ot = null;
        }
        get _data() {
          return this.#g;
        }
        _decodeWords() {
          return Bg(this.#g);
        }
        #ot;
        #st() {
          if (null == this.#ot) {
            const t2 = this._decodeWords();
            if (Oa(t2.join("\n") + "\n") !== this.#it)
              throw new Error(`BIP39 Wordlist for ${this.locale} FAILED`);
            this.#ot = t2;
          }
          return this.#ot;
        }
        getWord(t2) {
          const e2 = this.#st();
          return vn(t2 >= 0 && t2 < e2.length, `invalid word index: ${t2}`, "index", t2), e2[t2];
        }
        getWordIndex(t2) {
          return this.#st().indexOf(t2);
        }
      };
      var vg = null;
      var _g = class __g extends wg {
        constructor() {
          super("en", "0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO", "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60");
        }
        static wordlist() {
          return null == vg && (vg = new __g()), vg;
        }
      };
      function Qg(t2) {
        return (1 << t2) - 1 << 8 - t2 & 255;
      }
      function bg(t2, e2) {
        bn("NFKD"), null == e2 && (e2 = _g.wordlist());
        const r4 = e2.split(t2);
        vn(r4.length % 3 == 0 && r4.length >= 12 && r4.length <= 24, "invalid mnemonic length", "mnemonic", "[ REDACTED ]");
        const n2 = new Uint8Array(Math.ceil(11 * r4.length / 8));
        let A2 = 0;
        for (let t3 = 0; t3 < r4.length; t3++) {
          let i3 = e2.getWordIndex(r4[t3].normalize("NFKD"));
          vn(i3 >= 0, `invalid mnemonic word at index ${t3}`, "mnemonic", "[ REDACTED ]");
          for (let t4 = 0; t4 < 11; t4++)
            i3 & 1 << 10 - t4 && (n2[A2 >> 3] |= 1 << 7 - A2 % 8), A2++;
        }
        const i2 = 32 * r4.length / 3, o2 = Qg(r4.length / 3);
        return vn((Sn(zo(n2.slice(0, i2 / 8)))[0] & o2) === (n2[n2.length - 1] & o2), "invalid mnemonic checksum", "mnemonic", "[ REDACTED ]"), Pn(n2.slice(0, i2 / 8));
      }
      function kg(t2, e2) {
        vn(t2.length % 4 == 0 && t2.length >= 16 && t2.length <= 32, "invalid entropy size", "entropy", "[ REDACTED ]"), null == e2 && (e2 = _g.wordlist());
        const r4 = [0];
        let n2 = 11;
        for (let e3 = 0; e3 < t2.length; e3++)
          n2 > 8 ? (r4[r4.length - 1] <<= 8, r4[r4.length - 1] |= t2[e3], n2 -= 8) : (r4[r4.length - 1] <<= n2, r4[r4.length - 1] |= t2[e3] >> 8 - n2, r4.push(t2[e3] & ((1 << 8 - n2) - 1 & 255)), n2 += 3);
        const A2 = t2.length / 4, i2 = parseInt(zo(t2).substring(2, 4), 16) & Qg(A2);
        return r4[r4.length - 1] <<= A2, r4[r4.length - 1] |= i2 >> 8 - A2, e2.join(r4.map((t3) => e2.getWord(t3)));
      }
      var Dg = {};
      var Sg = class _Sg {
        phrase;
        password;
        wordlist;
        entropy;
        constructor(t2, e2, r4, n2, A2) {
          null == n2 && (n2 = ""), null == A2 && (A2 = _g.wordlist()), kn(t2, Dg, "Mnemonic"), yn(this, { phrase: r4, password: n2, wordlist: A2, entropy: e2 });
        }
        computeSeed() {
          const t2 = aA("mnemonic" + this.password, "NFKD");
          return Qo(aA(this.phrase, "NFKD"), t2, 2048, 64, "sha512");
        }
        static fromPhrase(t2, e2, r4) {
          const n2 = bg(t2, r4);
          return t2 = kg(Sn(n2), r4), new _Sg(Dg, n2, t2, e2, r4);
        }
        static fromEntropy(t2, e2, r4) {
          const n2 = Sn(t2, "entropy"), A2 = kg(n2, r4);
          return new _Sg(Dg, Pn(n2), A2, e2, r4);
        }
        static entropyToPhrase(t2, e2) {
          return kg(Sn(t2, "entropy"), e2);
        }
        static phraseToEntropy(t2, e2) {
          return bg(t2, e2);
        }
        static isValidMnemonic(t2, e2) {
          try {
            return bg(t2, e2), true;
          } catch (t3) {
          }
          return false;
        }
      };
      var Ng;
      var Mg;
      var xg;
      var Fg = function(t2, e2, r4, n2) {
        if ("a" === r4 && !n2)
          throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof e2 ? t2 !== e2 || !n2 : !e2.has(t2))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r4 ? n2 : "a" === r4 ? n2.call(t2) : n2 ? n2.value : e2.get(t2);
      };
      var Pg = function(t2, e2, r4, n2, A2) {
        if ("m" === n2)
          throw new TypeError("Private method is not writable");
        if ("a" === n2 && !A2)
          throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof e2 ? t2 !== e2 || !A2 : !e2.has(t2))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n2 ? A2.call(t2, r4) : A2 ? A2.value = r4 : e2.set(t2, r4), r4;
      };
      var Tg = { 16: 10, 24: 12, 32: 14 };
      var Rg = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];
      var Ug = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
      var Gg = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];
      var Hg = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986];
      var Lg = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766];
      var Og = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126];
      var Yg = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436];
      var Kg = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890];
      var Jg = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935];
      var jg = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600];
      var zg = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480];
      var qg = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795];
      var Xg = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855];
      var Vg = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150];
      var Wg = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
      function Zg(t2) {
        const e2 = [];
        for (let r4 = 0; r4 < t2.length; r4 += 4)
          e2.push(t2[r4] << 24 | t2[r4 + 1] << 16 | t2[r4 + 2] << 8 | t2[r4 + 3]);
        return e2;
      }
      var $g = class _$g {
        get key() {
          return Fg(this, Ng, "f").slice();
        }
        constructor(t2) {
          if (Ng.set(this, void 0), Mg.set(this, void 0), xg.set(this, void 0), !(this instanceof _$g))
            throw Error("AES must be instanitated with `new`");
          Pg(this, Ng, new Uint8Array(t2), "f");
          const e2 = Tg[this.key.length];
          if (null == e2)
            throw new TypeError("invalid key size (must be 16, 24 or 32 bytes)");
          Pg(this, xg, [], "f"), Pg(this, Mg, [], "f");
          for (let t3 = 0; t3 <= e2; t3++)
            Fg(this, xg, "f").push([0, 0, 0, 0]), Fg(this, Mg, "f").push([0, 0, 0, 0]);
          const r4 = 4 * (e2 + 1), n2 = this.key.length / 4, A2 = Zg(this.key);
          let i2;
          for (let t3 = 0; t3 < n2; t3++)
            i2 = t3 >> 2, Fg(this, xg, "f")[i2][t3 % 4] = A2[t3], Fg(this, Mg, "f")[e2 - i2][t3 % 4] = A2[t3];
          let o2, s2 = 0, a2 = n2;
          for (; a2 < r4; ) {
            if (o2 = A2[n2 - 1], A2[0] ^= Ug[o2 >> 16 & 255] << 24 ^ Ug[o2 >> 8 & 255] << 16 ^ Ug[255 & o2] << 8 ^ Ug[o2 >> 24 & 255] ^ Rg[s2] << 24, s2 += 1, 8 != n2)
              for (let t4 = 1; t4 < n2; t4++)
                A2[t4] ^= A2[t4 - 1];
            else {
              for (let t4 = 1; t4 < n2 / 2; t4++)
                A2[t4] ^= A2[t4 - 1];
              o2 = A2[n2 / 2 - 1], A2[n2 / 2] ^= Ug[255 & o2] ^ Ug[o2 >> 8 & 255] << 8 ^ Ug[o2 >> 16 & 255] << 16 ^ Ug[o2 >> 24 & 255] << 24;
              for (let t4 = n2 / 2 + 1; t4 < n2; t4++)
                A2[t4] ^= A2[t4 - 1];
            }
            let t3, i3, c2 = 0;
            for (; c2 < n2 && a2 < r4; )
              t3 = a2 >> 2, i3 = a2 % 4, Fg(this, xg, "f")[t3][i3] = A2[c2], Fg(this, Mg, "f")[e2 - t3][i3] = A2[c2++], a2++;
          }
          for (let t3 = 1; t3 < e2; t3++)
            for (let e3 = 0; e3 < 4; e3++)
              o2 = Fg(this, Mg, "f")[t3][e3], Fg(this, Mg, "f")[t3][e3] = qg[o2 >> 24 & 255] ^ Xg[o2 >> 16 & 255] ^ Vg[o2 >> 8 & 255] ^ Wg[255 & o2];
        }
        encrypt(t2) {
          if (16 != t2.length)
            throw new TypeError("invalid plaintext size (must be 16 bytes)");
          const e2 = Fg(this, xg, "f").length - 1, r4 = [0, 0, 0, 0];
          let n2 = Zg(t2);
          for (let t3 = 0; t3 < 4; t3++)
            n2[t3] ^= Fg(this, xg, "f")[0][t3];
          for (let t3 = 1; t3 < e2; t3++) {
            for (let e3 = 0; e3 < 4; e3++)
              r4[e3] = Hg[n2[e3] >> 24 & 255] ^ Lg[n2[(e3 + 1) % 4] >> 16 & 255] ^ Og[n2[(e3 + 2) % 4] >> 8 & 255] ^ Yg[255 & n2[(e3 + 3) % 4]] ^ Fg(this, xg, "f")[t3][e3];
            n2 = r4.slice();
          }
          const A2 = new Uint8Array(16);
          let i2 = 0;
          for (let t3 = 0; t3 < 4; t3++)
            i2 = Fg(this, xg, "f")[e2][t3], A2[4 * t3] = 255 & (Ug[n2[t3] >> 24 & 255] ^ i2 >> 24), A2[4 * t3 + 1] = 255 & (Ug[n2[(t3 + 1) % 4] >> 16 & 255] ^ i2 >> 16), A2[4 * t3 + 2] = 255 & (Ug[n2[(t3 + 2) % 4] >> 8 & 255] ^ i2 >> 8), A2[4 * t3 + 3] = 255 & (Ug[255 & n2[(t3 + 3) % 4]] ^ i2);
          return A2;
        }
        decrypt(t2) {
          if (16 != t2.length)
            throw new TypeError("invalid ciphertext size (must be 16 bytes)");
          const e2 = Fg(this, Mg, "f").length - 1, r4 = [0, 0, 0, 0];
          let n2 = Zg(t2);
          for (let t3 = 0; t3 < 4; t3++)
            n2[t3] ^= Fg(this, Mg, "f")[0][t3];
          for (let t3 = 1; t3 < e2; t3++) {
            for (let e3 = 0; e3 < 4; e3++)
              r4[e3] = Kg[n2[e3] >> 24 & 255] ^ Jg[n2[(e3 + 3) % 4] >> 16 & 255] ^ jg[n2[(e3 + 2) % 4] >> 8 & 255] ^ zg[255 & n2[(e3 + 1) % 4]] ^ Fg(this, Mg, "f")[t3][e3];
            n2 = r4.slice();
          }
          const A2 = new Uint8Array(16);
          let i2 = 0;
          for (let t3 = 0; t3 < 4; t3++)
            i2 = Fg(this, Mg, "f")[e2][t3], A2[4 * t3] = 255 & (Gg[n2[t3] >> 24 & 255] ^ i2 >> 24), A2[4 * t3 + 1] = 255 & (Gg[n2[(t3 + 3) % 4] >> 16 & 255] ^ i2 >> 16), A2[4 * t3 + 2] = 255 & (Gg[n2[(t3 + 2) % 4] >> 8 & 255] ^ i2 >> 8), A2[4 * t3 + 3] = 255 & (Gg[255 & n2[(t3 + 1) % 4]] ^ i2);
          return A2;
        }
      };
      Ng = /* @__PURE__ */ new WeakMap(), Mg = /* @__PURE__ */ new WeakMap(), xg = /* @__PURE__ */ new WeakMap();
      var tu = class {
        constructor(t2, e2, r4) {
          if (r4 && !(this instanceof r4))
            throw new Error(`${t2} must be instantiated with "new"`);
          Object.defineProperties(this, { aes: { enumerable: true, value: new $g(e2) }, name: { enumerable: true, value: t2 } });
        }
      };
      var eu;
      var ru;
      var nu = function(t2, e2, r4, n2, A2) {
        if ("m" === n2)
          throw new TypeError("Private method is not writable");
        if ("a" === n2 && !A2)
          throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof e2 ? t2 !== e2 || !A2 : !e2.has(t2))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n2 ? A2.call(t2, r4) : A2 ? A2.value = r4 : e2.set(t2, r4), r4;
      };
      var Au = function(t2, e2, r4, n2) {
        if ("a" === r4 && !n2)
          throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof e2 ? t2 !== e2 || !n2 : !e2.has(t2))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r4 ? n2 : "a" === r4 ? n2.call(t2) : n2 ? n2.value : e2.get(t2);
      };
      var iu = class _iu extends tu {
        constructor(t2, e2) {
          if (super("ECC", t2, _iu), eu.set(this, void 0), ru.set(this, void 0), e2) {
            if (e2.length % 16)
              throw new TypeError("invalid iv size (must be 16 bytes)");
            nu(this, eu, new Uint8Array(e2), "f");
          } else
            nu(this, eu, new Uint8Array(16), "f");
          nu(this, ru, this.iv, "f");
        }
        get iv() {
          return new Uint8Array(Au(this, eu, "f"));
        }
        encrypt(t2) {
          if (t2.length % 16)
            throw new TypeError("invalid plaintext size (must be multiple of 16 bytes)");
          const e2 = new Uint8Array(t2.length);
          for (let r4 = 0; r4 < t2.length; r4 += 16) {
            for (let e3 = 0; e3 < 16; e3++)
              Au(this, ru, "f")[e3] ^= t2[r4 + e3];
            nu(this, ru, this.aes.encrypt(Au(this, ru, "f")), "f"), e2.set(Au(this, ru, "f"), r4);
          }
          return e2;
        }
        decrypt(t2) {
          if (t2.length % 16)
            throw new TypeError("invalid ciphertext size (must be multiple of 16 bytes)");
          const e2 = new Uint8Array(t2.length);
          for (let r4 = 0; r4 < t2.length; r4 += 16) {
            const n2 = this.aes.decrypt(t2.subarray(r4, r4 + 16));
            for (let A2 = 0; A2 < 16; A2++)
              e2[r4 + A2] = n2[A2] ^ Au(this, ru, "f")[A2], Au(this, ru, "f")[A2] = t2[r4 + A2];
          }
          return e2;
        }
      };
      eu = /* @__PURE__ */ new WeakMap(), ru = /* @__PURE__ */ new WeakMap();
      var ou;
      var su;
      var au;
      var cu = function(t2, e2, r4, n2, A2) {
        if ("m" === n2)
          throw new TypeError("Private method is not writable");
        if ("a" === n2 && !A2)
          throw new TypeError("Private accessor was defined without a setter");
        if ("function" == typeof e2 ? t2 !== e2 || !A2 : !e2.has(t2))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return "a" === n2 ? A2.call(t2, r4) : A2 ? A2.value = r4 : e2.set(t2, r4), r4;
      };
      var hu = function(t2, e2, r4, n2) {
        if ("a" === r4 && !n2)
          throw new TypeError("Private accessor was defined without a getter");
        if ("function" == typeof e2 ? t2 !== e2 || !n2 : !e2.has(t2))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return "m" === r4 ? n2 : "a" === r4 ? n2.call(t2) : n2 ? n2.value : e2.get(t2);
      };
      var gu = class _gu extends tu {
        constructor(t2, e2) {
          super("CTR", t2, _gu), ou.set(this, void 0), su.set(this, void 0), au.set(this, void 0), cu(this, au, new Uint8Array(16), "f"), hu(this, au, "f").fill(0), cu(this, ou, hu(this, au, "f"), "f"), cu(this, su, 16, "f"), null == e2 && (e2 = 1), "number" == typeof e2 ? this.setCounterValue(e2) : this.setCounterBytes(e2);
        }
        get counter() {
          return new Uint8Array(hu(this, au, "f"));
        }
        setCounterValue(t2) {
          if (!Number.isInteger(t2) || t2 < 0 || t2 > Number.MAX_SAFE_INTEGER)
            throw new TypeError("invalid counter initial integer value");
          for (let e2 = 15; e2 >= 0; --e2)
            hu(this, au, "f")[e2] = t2 % 256, t2 = Math.floor(t2 / 256);
        }
        setCounterBytes(t2) {
          if (16 !== t2.length)
            throw new TypeError("invalid counter initial Uint8Array value length");
          hu(this, au, "f").set(t2);
        }
        increment() {
          for (let t2 = 15; t2 >= 0; t2--) {
            if (255 !== hu(this, au, "f")[t2]) {
              hu(this, au, "f")[t2]++;
              break;
            }
            hu(this, au, "f")[t2] = 0;
          }
        }
        encrypt(t2) {
          var e2, r4;
          const n2 = new Uint8Array(t2);
          for (let t3 = 0; t3 < n2.length; t3++)
            16 === hu(this, su, "f") && (cu(this, ou, this.aes.encrypt(hu(this, au, "f")), "f"), cu(this, su, 0, "f"), this.increment()), n2[t3] ^= hu(this, ou, "f")[cu(this, su, (r4 = hu(this, su, "f"), e2 = r4++, r4), "f"), e2];
          return n2;
        }
        decrypt(t2) {
          return this.encrypt(t2);
        }
      };
      function uu(t2) {
        return "string" != typeof t2 || t2.startsWith("0x") || (t2 = "0x" + t2), Nn(t2);
      }
      function lu(t2, e2) {
        for (t2 = String(t2); t2.length < e2; )
          t2 = "0" + t2;
        return t2;
      }
      function fu(t2) {
        return "string" == typeof t2 ? aA(t2, "NFKC") : Nn(t2);
      }
      function pu(t2, e2) {
        const r4 = e2.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);
        vn(null != r4, "invalid path", "path", e2);
        const n2 = r4[1], A2 = r4[3], i2 = "!" === r4[4];
        let o2 = t2;
        for (const t3 of n2.toLowerCase().split(".")) {
          if (Array.isArray(o2)) {
            if (!t3.match(/^[0-9]+$/))
              break;
            o2 = o2[parseInt(t3)];
          } else if ("object" == typeof o2) {
            let e3 = null;
            for (const r5 in o2)
              if (r5.toLowerCase() === t3) {
                e3 = o2[r5];
                break;
              }
            o2 = e3;
          } else
            o2 = null;
          if (null == o2)
            break;
        }
        if (vn(!i2 || null != o2, "missing required value", "path", n2), A2 && null != o2) {
          if ("int" === A2) {
            if ("string" == typeof o2 && o2.match(/^-?[0-9]+$/))
              return parseInt(o2);
            if (Number.isSafeInteger(o2))
              return o2;
          }
          if ("number" === A2 && "string" == typeof o2 && o2.match(/^-?[0-9.]*$/))
            return parseFloat(o2);
          if ("data" === A2 && "string" == typeof o2)
            return uu(o2);
          if ("array" === A2 && Array.isArray(o2))
            return o2;
          if (A2 === typeof o2)
            return o2;
          vn(false, `wrong type found for ${A2} `, "path", n2);
        }
        return o2;
      }
      ou = /* @__PURE__ */ new WeakMap(), su = /* @__PURE__ */ new WeakMap(), au = /* @__PURE__ */ new WeakMap();
      var du = "m/44'/60'/0'/0/0";
      function Iu(t2) {
        try {
          const e2 = JSON.parse(t2);
          if (3 === (null != e2.version ? parseInt(e2.version) : 0))
            return true;
        } catch (t3) {
        }
        return false;
      }
      function yu(t2, e2) {
        const r4 = Sn(e2), n2 = pu(t2, "crypto.ciphertext:data!");
        vn(Pn(no(Tn([r4.slice(16, 32), n2]))).substring(2) === pu(t2, "crypto.mac:string!").toLowerCase(), "incorrect password", "password", "[ REDACTED ]");
        const A2 = function(t3, e3, r5) {
          if ("aes-128-ctr" === pu(t3, "crypto.cipher:string")) {
            const n3 = pu(t3, "crypto.cipherparams.iv:data!");
            return Pn(new gu(e3, n3).decrypt(r5));
          }
          wn(false, "unsupported cipher", "UNSUPPORTED_OPERATION", { operation: "decrypt" });
        }(t2, r4.slice(0, 16), n2), i2 = Ja(A2);
        if (t2.address) {
          let e3 = t2.address.toLowerCase();
          e3.startsWith("0x") || (e3 = "0x" + e3), vn(da(e3) === i2, "keystore address/privateKey mismatch", "address", t2.address);
        }
        const o2 = { address: i2, privateKey: A2 };
        if ("0.1" === pu(t2, "x-ethers.version:string")) {
          const e3 = r4.slice(32, 64), n3 = pu(t2, "x-ethers.mnemonicCiphertext:data!"), A3 = pu(t2, "x-ethers.mnemonicCounter:data!"), i3 = new gu(e3, A3);
          o2.mnemonic = { path: pu(t2, "x-ethers.path:string") || du, locale: pu(t2, "x-ethers.locale:string") || "en", entropy: Pn(Sn(i3.decrypt(n3))) };
        }
        return o2;
      }
      function Cu(t2) {
        const e2 = pu(t2, "crypto.kdf:string");
        if (e2 && "string" == typeof e2) {
          if ("scrypt" === e2.toLowerCase()) {
            const r4 = pu(t2, "crypto.kdfparams.salt:data!"), n2 = pu(t2, "crypto.kdfparams.n:int!"), A2 = pu(t2, "crypto.kdfparams.r:int!"), i2 = pu(t2, "crypto.kdfparams.p:int!");
            vn(n2 > 0 && !(n2 & n2 - 1), "invalid kdf.N", "kdf.N", n2), vn(A2 > 0 && i2 > 0, "invalid kdf", "kdf", e2);
            const o2 = pu(t2, "crypto.kdfparams.dklen:int!");
            return vn(32 === o2, "invalid kdf.dklen", "kdf.dflen", o2), { name: "scrypt", salt: r4, N: n2, r: A2, p: i2, dkLen: 64 };
          }
          if ("pbkdf2" === e2.toLowerCase()) {
            const e3 = pu(t2, "crypto.kdfparams.salt:data!"), r4 = pu(t2, "crypto.kdfparams.prf:string!"), n2 = r4.split("-").pop();
            vn("sha256" === n2 || "sha512" === n2, "invalid kdf.pdf", "kdf.pdf", r4);
            const A2 = pu(t2, "crypto.kdfparams.c:int!"), i2 = pu(t2, "crypto.kdfparams.dklen:int!");
            return vn(32 === i2, "invalid kdf.dklen", "kdf.dklen", i2), { name: "pbkdf2", salt: e3, count: A2, dkLen: i2, algorithm: n2 };
          }
        }
        vn(false, "unsupported key-derivation function", "kdf", e2);
      }
      function mu(t2) {
        return new Promise((e2) => {
          setTimeout(() => {
            e2();
          }, t2);
        });
      }
      function Bu(t2) {
        const e2 = null != t2.salt ? Sn(t2.salt, "options.salt") : So(32);
        let r4 = 1 << 17, n2 = 8, A2 = 1;
        return t2.scrypt && (t2.scrypt.N && (r4 = t2.scrypt.N), t2.scrypt.r && (n2 = t2.scrypt.r), t2.scrypt.p && (A2 = t2.scrypt.p)), vn("number" == typeof r4 && r4 > 0 && Number.isSafeInteger(r4) && (BigInt(r4) & BigInt(r4 - 1)) === BigInt(0), "invalid scrypt N parameter", "options.N", r4), vn("number" == typeof n2 && n2 > 0 && Number.isSafeInteger(n2), "invalid scrypt r parameter", "options.r", n2), vn("number" == typeof A2 && A2 > 0 && Number.isSafeInteger(A2), "invalid scrypt p parameter", "options.p", A2), { name: "scrypt", dkLen: 32, salt: e2, N: r4, r: n2, p: A2 };
      }
      function Eu(t2, e2, r4, n2) {
        const A2 = Sn(r4.privateKey, "privateKey"), i2 = null != n2.iv ? Sn(n2.iv, "options.iv") : So(16);
        vn(16 === i2.length, "invalid options.iv length", "options.iv", n2.iv);
        const o2 = null != n2.uuid ? Sn(n2.uuid, "options.uuid") : So(16);
        vn(16 === o2.length, "invalid options.uuid length", "options.uuid", n2.iv);
        const s2 = t2.slice(0, 16), a2 = t2.slice(16, 32), c2 = Sn(new gu(s2, i2).encrypt(A2)), h2 = no(Tn([a2, c2])), g2 = { address: r4.address.substring(2).toLowerCase(), id: NA(o2), version: 3, Crypto: { cipher: "aes-128-ctr", cipherparams: { iv: Pn(i2).substring(2) }, ciphertext: Pn(c2).substring(2), kdf: "scrypt", kdfparams: { salt: Pn(e2.salt).substring(2), n: e2.N, dklen: 32, p: e2.p, r: e2.r }, mac: h2.substring(2) } };
        if (r4.mnemonic) {
          const e3 = null != n2.client ? n2.client : `ethers/${pn}`, A3 = r4.mnemonic.path || du, i3 = r4.mnemonic.locale || "en", o3 = t2.slice(32, 64), s3 = Sn(r4.mnemonic.entropy, "account.mnemonic.entropy"), a3 = So(16), c3 = Sn(new gu(o3, a3).encrypt(s3)), h3 = /* @__PURE__ */ new Date(), u2 = "UTC--" + (h3.getUTCFullYear() + "-" + lu(h3.getUTCMonth() + 1, 2) + "-" + lu(h3.getUTCDate(), 2) + "T" + lu(h3.getUTCHours(), 2) + "-" + lu(h3.getUTCMinutes(), 2) + "-" + lu(h3.getUTCSeconds(), 2) + ".0Z") + "--" + g2.address;
          g2["x-ethers"] = { client: e3, gethFilename: u2, path: A3, locale: i3, mnemonicCounter: Pn(a3).substring(2), mnemonicCiphertext: Pn(c3).substring(2), version: "0.1" };
        }
        return JSON.stringify(g2);
      }
      function wu(t2, e2, r4) {
        null == r4 && (r4 = {});
        const n2 = fu(e2), A2 = Bu(r4);
        return Eu(Sn(Yo(n2, A2.salt, A2.N, A2.r, A2.p, 64)), A2, t2, r4);
      }
      async function vu(t2, e2, r4) {
        null == r4 && (r4 = {});
        const n2 = fu(e2), A2 = Bu(r4);
        return Eu(Sn(await Oo(n2, A2.salt, A2.N, A2.r, A2.p, 64, r4.progressCallback)), A2, t2, r4);
      }
      var _u = "m/44'/60'/0'/0/0";
      var Qu = new Uint8Array([66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100]);
      var bu = 2147483648;
      var ku = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
      function Du(t2, e2) {
        let r4 = "";
        for (; t2; )
          r4 = "0123456789abcdef"[t2 % 16] + r4, t2 = Math.trunc(t2 / 16);
        for (; r4.length < 2 * e2; )
          r4 = "0" + r4;
        return "0x" + r4;
      }
      function Su(t2) {
        const e2 = Sn(t2);
        return function(t3) {
          const e3 = Sn(t3);
          let r4 = Vn(e3), n2 = "";
          for (; r4; )
            n2 = tA[Number(r4 % AA)] + n2, r4 /= AA;
          for (let t4 = 0; t4 < e3.length && !e3[t4]; t4++)
            n2 = tA[0] + n2;
          return n2;
        }(Tn([e2, Un(zo(zo(e2)), 0, 4)]));
      }
      var Nu = {};
      function Mu(t2, e2, r4, n2) {
        const A2 = new Uint8Array(37);
        t2 & bu ? (wn(null != n2, "cannot derive child of neutered node", "UNSUPPORTED_OPERATION", { operation: "deriveChild" }), A2.set(Sn(n2), 1)) : A2.set(Sn(r4));
        for (let e3 = 24; e3 >= 0; e3 -= 8)
          A2[33 + (e3 >> 3)] = t2 >> 24 - e3 & 255;
        const i2 = Sn(Ui("sha512", e2, A2));
        return { IL: i2.slice(0, 32), IR: i2.slice(32) };
      }
      function xu(t2, e2) {
        const r4 = e2.split("/");
        vn(r4.length > 0, "invalid path", "path", e2), "m" === r4[0] && (vn(0 === t2.depth, `cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth ${t2.depth}`, "path", e2), r4.shift());
        let n2 = t2;
        for (let t3 = 0; t3 < r4.length; t3++) {
          const e3 = r4[t3];
          if (e3.match(/^[0-9]+'$/)) {
            const r5 = parseInt(e3.substring(0, e3.length - 1));
            vn(r5 < bu, "invalid path index", `path[${t3}]`, e3), n2 = n2.deriveChild(bu + r5);
          } else if (e3.match(/^[0-9]+$/)) {
            const r5 = parseInt(e3);
            vn(r5 < bu, "invalid path index", `path[${t3}]`, e3), n2 = n2.deriveChild(r5);
          } else
            vn(false, "invalid path component", `path[${t3}]`, e3);
        }
        return n2;
      }
      var Fu = class _Fu extends Ig {
        publicKey;
        fingerprint;
        parentFingerprint;
        mnemonic;
        chainCode;
        path;
        index;
        depth;
        constructor(t2, e2, r4, n2, A2, i2, o2, s2, a2) {
          super(e2, a2), kn(t2, Nu, "HDNodeWallet"), yn(this, { publicKey: e2.compressedPublicKey });
          yn(this, { parentFingerprint: r4, fingerprint: Un(Eo(zo(this.publicKey)), 0, 4), chainCode: n2, path: A2, index: i2, depth: o2 }), yn(this, { mnemonic: s2 });
        }
        connect(t2) {
          return new _Fu(Nu, this.signingKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.mnemonic, t2);
        }
        #at() {
          const t2 = { address: this.address, privateKey: this.privateKey }, e2 = this.mnemonic;
          return this.path && e2 && "en" === e2.wordlist.locale && "" === e2.password && (t2.mnemonic = { path: this.path, locale: "en", entropy: e2.entropy }), t2;
        }
        async encrypt(t2, e2) {
          return await vu(this.#at(), t2, { progressCallback: e2 });
        }
        encryptSync(t2) {
          return wu(this.#at(), t2);
        }
        get extendedKey() {
          return wn(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", { operation: "extendedKey" }), Su(Tn(["0x0488ADE4", Du(this.depth, 1), this.parentFingerprint, Du(this.index, 4), this.chainCode, Tn(["0x00", this.privateKey])]));
        }
        hasPath() {
          return null != this.path;
        }
        neuter() {
          return new Pu(Nu, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, this.provider);
        }
        deriveChild(t2) {
          const e2 = Wn(t2, "index");
          vn(e2 <= 4294967295, "invalid index", "index", e2);
          let r4 = this.path;
          r4 && (r4 += "/" + (2147483647 & e2), e2 & bu && (r4 += "'"));
          const { IR: n2, IL: A2 } = Mu(e2, this.chainCode, this.publicKey, this.privateKey), i2 = new ca(Zn((Vn(A2) + BigInt(this.privateKey)) % ku, 32));
          return new _Fu(Nu, i2, this.fingerprint, Pn(n2), r4, e2, this.depth + 1, this.mnemonic, this.provider);
        }
        derivePath(t2) {
          return xu(this, t2);
        }
        static #ct(t2, e2) {
          vn(xn(t2), "invalid seed", "seed", "[REDACTED]");
          const r4 = Sn(t2, "seed");
          vn(r4.length >= 16 && r4.length <= 64, "invalid seed", "seed", "[REDACTED]");
          const n2 = Sn(Ui("sha512", Qu, r4)), A2 = new ca(Pn(n2.slice(0, 32)));
          return new _Fu(Nu, A2, "0x00000000", Pn(n2.slice(32)), "m", 0, 0, e2, null);
        }
        static fromExtendedKey(t2) {
          const e2 = $n(function(t3) {
            let e3 = nA;
            for (let r5 = 0; r5 < t3.length; r5++)
              e3 *= AA, e3 += rA(t3[r5]);
            return e3;
          }(t2));
          vn(82 === e2.length || Su(e2.slice(0, 78)) === t2, "invalid extended key", "extendedKey", "[ REDACTED ]");
          const r4 = e2[4], n2 = Pn(e2.slice(5, 9)), A2 = parseInt(Pn(e2.slice(9, 13)).substring(2), 16), i2 = Pn(e2.slice(13, 45)), o2 = e2.slice(45, 78);
          switch (Pn(e2.slice(0, 4))) {
            case "0x0488b21e":
            case "0x043587cf": {
              const t3 = Pn(o2);
              return new Pu(Nu, Ja(t3), t3, n2, i2, null, A2, r4, null);
            }
            case "0x0488ade4":
            case "0x04358394 ":
              if (0 !== o2[0])
                break;
              return new _Fu(Nu, new ca(o2.slice(1)), n2, i2, null, A2, r4, null, null);
          }
          vn(false, "invalid extended key prefix", "extendedKey", "[ REDACTED ]");
        }
        static createRandom(t2, e2, r4) {
          null == t2 && (t2 = ""), null == e2 && (e2 = _u), null == r4 && (r4 = _g.wordlist());
          const n2 = Sg.fromEntropy(So(16), t2, r4);
          return _Fu.#ct(n2.computeSeed(), n2).derivePath(e2);
        }
        static fromMnemonic(t2, e2) {
          return e2 || (e2 = _u), _Fu.#ct(t2.computeSeed(), t2).derivePath(e2);
        }
        static fromPhrase(t2, e2, r4, n2) {
          null == e2 && (e2 = ""), null == r4 && (r4 = _u), null == n2 && (n2 = _g.wordlist());
          const A2 = Sg.fromPhrase(t2, e2, n2);
          return _Fu.#ct(A2.computeSeed(), A2).derivePath(r4);
        }
        static fromSeed(t2) {
          return _Fu.#ct(t2, null);
        }
      };
      var Pu = class _Pu extends dg {
        publicKey;
        fingerprint;
        parentFingerprint;
        chainCode;
        path;
        index;
        depth;
        constructor(t2, e2, r4, n2, A2, i2, o2, s2, a2) {
          super(e2, a2), kn(t2, Nu, "HDNodeVoidWallet"), yn(this, { publicKey: r4 });
          yn(this, { publicKey: r4, fingerprint: Un(Eo(zo(r4)), 0, 4), parentFingerprint: n2, chainCode: A2, path: i2, index: o2, depth: s2 });
        }
        connect(t2) {
          return new _Pu(Nu, this.address, this.publicKey, this.parentFingerprint, this.chainCode, this.path, this.index, this.depth, t2);
        }
        get extendedKey() {
          return wn(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", { operation: "extendedKey" }), Su(Tn(["0x0488B21E", Du(this.depth, 1), this.parentFingerprint, Du(this.index, 4), this.chainCode, this.publicKey]));
        }
        hasPath() {
          return null != this.path;
        }
        deriveChild(t2) {
          const e2 = Wn(t2, "index");
          vn(e2 <= 4294967295, "invalid index", "index", e2);
          let r4 = this.path;
          r4 && (r4 += "/" + (2147483647 & e2), e2 & bu && (r4 += "'"));
          const { IR: n2, IL: A2 } = Mu(e2, this.chainCode, this.publicKey, null), i2 = ca.addPoints(A2, this.publicKey, true), o2 = Ja(i2);
          return new _Pu(Nu, o2, i2, this.fingerprint, Pn(n2), r4, e2, this.depth + 1, this.provider);
        }
        derivePath(t2) {
          return xu(this, t2);
        }
      };
      function Tu(t2) {
        try {
          if (JSON.parse(t2).encseed)
            return true;
        } catch (t3) {
        }
        return false;
      }
      function Ru(t2, e2) {
        const r4 = JSON.parse(t2), n2 = fu(e2), A2 = da(pu(r4, "ethaddr:string!")), i2 = uu(pu(r4, "encseed:string!"));
        vn(i2 && i2.length % 16 == 0, "invalid encseed", "json", t2);
        const o2 = Sn(Qo(n2, n2, 2e3, 32, "sha256")).slice(0, 16), s2 = i2.slice(0, 16), a2 = i2.slice(16), c2 = function(t3) {
          if (t3.length < 16)
            throw new TypeError("PKCS#7 invalid length");
          const e3 = t3[t3.length - 1];
          if (e3 > 16)
            throw new TypeError("PKCS#7 padding byte out of range");
          const r5 = t3.length - e3;
          for (let n3 = 0; n3 < e3; n3++)
            if (t3[r5 + n3] !== e3)
              throw new TypeError("PKCS#7 invalid padding byte");
          return new Uint8Array(t3.subarray(0, r5));
        }(Sn(new iu(o2, s2).decrypt(a2)));
        let h2 = "";
        for (let t3 = 0; t3 < c2.length; t3++)
          h2 += String.fromCharCode(c2[t3]);
        return { address: A2, privateKey: Oa(h2) };
      }
      function Uu(t2) {
        return new Promise((e2) => {
          setTimeout(() => {
            e2();
          }, t2);
        });
      }
      var Gu = class _Gu extends Ig {
        constructor(t2, e2) {
          "string" != typeof t2 || t2.startsWith("0x") || (t2 = "0x" + t2), super("string" == typeof t2 ? new ca(t2) : t2, e2);
        }
        connect(t2) {
          return new _Gu(this.signingKey, t2);
        }
        async encrypt(t2, e2) {
          const r4 = { address: this.address, privateKey: this.privateKey };
          return await vu(r4, t2, { progressCallback: e2 });
        }
        encryptSync(t2) {
          return wu({ address: this.address, privateKey: this.privateKey }, t2);
        }
        static #ht(t2) {
          if (vn(t2, "invalid JSON wallet", "json", "[ REDACTED ]"), "mnemonic" in t2 && t2.mnemonic && "en" === t2.mnemonic.locale) {
            const e3 = Sg.fromEntropy(t2.mnemonic.entropy), r4 = Fu.fromMnemonic(e3, t2.mnemonic.path);
            if (r4.address === t2.address && r4.privateKey === t2.privateKey)
              return r4;
            console.log("WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key");
          }
          const e2 = new _Gu(t2.privateKey);
          return vn(e2.address === t2.address, "address/privateKey mismatch", "json", "[ REDACTED ]"), e2;
        }
        static async fromEncryptedJson(t2, e2, r4) {
          let n2 = null;
          return Iu(t2) ? n2 = await async function(t3, e3, r5) {
            const n3 = JSON.parse(t3), A2 = fu(e3), i2 = Cu(n3);
            if ("pbkdf2" === i2.name) {
              r5 && (r5(0), await mu(0));
              const { salt: t4, count: e4, dkLen: o3, algorithm: s3 } = i2, a3 = Qo(A2, t4, e4, o3, s3);
              return r5 && (r5(1), await mu(0)), yu(n3, a3);
            }
            wn("scrypt" === i2.name, "cannot be reached", "UNKNOWN_ERROR", { params: i2 });
            const { salt: o2, N: s2, r: a2, p: c2, dkLen: h2 } = i2;
            return yu(n3, await Oo(A2, o2, s2, a2, c2, h2, r5));
          }(t2, e2, r4) : Tu(t2) && (r4 && (r4(0), await Uu(0)), n2 = Ru(t2, e2), r4 && (r4(1), await Uu(0))), _Gu.#ht(n2);
        }
        static fromEncryptedJsonSync(t2, e2) {
          let r4 = null;
          return Iu(t2) ? r4 = function(t3, e3) {
            const r5 = JSON.parse(t3), n2 = fu(e3), A2 = Cu(r5);
            if ("pbkdf2" === A2.name) {
              const { salt: t4, count: e4, dkLen: i3, algorithm: o3 } = A2;
              return yu(r5, Qo(n2, t4, e4, i3, o3));
            }
            wn("scrypt" === A2.name, "cannot be reached", "UNKNOWN_ERROR", { params: A2 });
            const { salt: i2, N: o2, r: s2, p: a2, dkLen: c2 } = A2;
            return yu(r5, Yo(n2, i2, o2, s2, a2, c2));
          }(t2, e2) : Tu(t2) ? r4 = Ru(t2, e2) : vn(false, "invalid JSON wallet", "json", "[ REDACTED ]"), _Gu.#ht(r4);
        }
        static createRandom(t2) {
          const e2 = Fu.createRandom();
          return t2 ? e2.connect(t2) : e2;
        }
        static fromPhrase(t2, e2) {
          const r4 = Fu.fromPhrase(t2);
          return e2 ? r4.connect(e2) : r4;
        }
      };
      var Hu;
      !function(t2) {
        t2.ERC20 = "ERC20", t2.ERC721 = "ERC721";
      }(Hu || (Hu = {}));
      var Lu;
      var Ou = {};
      var Yu = { exports: {} };
      !function(e2) {
        !function(r4) {
          function n2(t2, e3) {
            var r5, n3 = "uint8array", A3 = e3.ready.then(function() {
              function n4() {
                if (0 !== r5._sodium_init())
                  throw new Error("libsodium was not correctly initialized.");
                for (var e4 = ["crypto_aead_aegis128l_decrypt", "crypto_aead_aegis128l_decrypt_detached", "crypto_aead_aegis128l_encrypt", "crypto_aead_aegis128l_encrypt_detached", "crypto_aead_aegis128l_keygen", "crypto_aead_aegis256_decrypt", "crypto_aead_aegis256_decrypt_detached", "crypto_aead_aegis256_encrypt", "crypto_aead_aegis256_encrypt_detached", "crypto_aead_aegis256_keygen", "crypto_aead_chacha20poly1305_decrypt", "crypto_aead_chacha20poly1305_decrypt_detached", "crypto_aead_chacha20poly1305_encrypt", "crypto_aead_chacha20poly1305_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_decrypt", "crypto_aead_chacha20poly1305_ietf_decrypt_detached", "crypto_aead_chacha20poly1305_ietf_encrypt", "crypto_aead_chacha20poly1305_ietf_encrypt_detached", "crypto_aead_chacha20poly1305_ietf_keygen", "crypto_aead_chacha20poly1305_keygen", "crypto_aead_xchacha20poly1305_ietf_decrypt", "crypto_aead_xchacha20poly1305_ietf_decrypt_detached", "crypto_aead_xchacha20poly1305_ietf_encrypt", "crypto_aead_xchacha20poly1305_ietf_encrypt_detached", "crypto_aead_xchacha20poly1305_ietf_keygen", "crypto_auth", "crypto_auth_hmacsha256", "crypto_auth_hmacsha256_final", "crypto_auth_hmacsha256_init", "crypto_auth_hmacsha256_keygen", "crypto_auth_hmacsha256_update", "crypto_auth_hmacsha256_verify", "crypto_auth_hmacsha512", "crypto_auth_hmacsha512_final", "crypto_auth_hmacsha512_init", "crypto_auth_hmacsha512_keygen", "crypto_auth_hmacsha512_update", "crypto_auth_hmacsha512_verify", "crypto_auth_keygen", "crypto_auth_verify", "crypto_box_beforenm", "crypto_box_curve25519xchacha20poly1305_beforenm", "crypto_box_curve25519xchacha20poly1305_detached", "crypto_box_curve25519xchacha20poly1305_detached_afternm", "crypto_box_curve25519xchacha20poly1305_easy", "crypto_box_curve25519xchacha20poly1305_easy_afternm", "crypto_box_curve25519xchacha20poly1305_keypair", "crypto_box_curve25519xchacha20poly1305_open_detached", "crypto_box_curve25519xchacha20poly1305_open_detached_afternm", "crypto_box_curve25519xchacha20poly1305_open_easy", "crypto_box_curve25519xchacha20poly1305_open_easy_afternm", "crypto_box_curve25519xchacha20poly1305_seal", "crypto_box_curve25519xchacha20poly1305_seal_open", "crypto_box_curve25519xchacha20poly1305_seed_keypair", "crypto_box_detached", "crypto_box_easy", "crypto_box_easy_afternm", "crypto_box_keypair", "crypto_box_open_detached", "crypto_box_open_easy", "crypto_box_open_easy_afternm", "crypto_box_seal", "crypto_box_seal_open", "crypto_box_seed_keypair", "crypto_core_ed25519_add", "crypto_core_ed25519_from_hash", "crypto_core_ed25519_from_uniform", "crypto_core_ed25519_is_valid_point", "crypto_core_ed25519_random", "crypto_core_ed25519_scalar_add", "crypto_core_ed25519_scalar_complement", "crypto_core_ed25519_scalar_invert", "crypto_core_ed25519_scalar_mul", "crypto_core_ed25519_scalar_negate", "crypto_core_ed25519_scalar_random", "crypto_core_ed25519_scalar_reduce", "crypto_core_ed25519_scalar_sub", "crypto_core_ed25519_sub", "crypto_core_hchacha20", "crypto_core_hsalsa20", "crypto_core_ristretto255_add", "crypto_core_ristretto255_from_hash", "crypto_core_ristretto255_is_valid_point", "crypto_core_ristretto255_random", "crypto_core_ristretto255_scalar_add", "crypto_core_ristretto255_scalar_complement", "crypto_core_ristretto255_scalar_invert", "crypto_core_ristretto255_scalar_mul", "crypto_core_ristretto255_scalar_negate", "crypto_core_ristretto255_scalar_random", "crypto_core_ristretto255_scalar_reduce", "crypto_core_ristretto255_scalar_sub", "crypto_core_ristretto255_sub", "crypto_generichash", "crypto_generichash_blake2b_salt_personal", "crypto_generichash_final", "crypto_generichash_init", "crypto_generichash_keygen", "crypto_generichash_update", "crypto_hash", "crypto_hash_sha256", "crypto_hash_sha256_final", "crypto_hash_sha256_init", "crypto_hash_sha256_update", "crypto_hash_sha512", "crypto_hash_sha512_final", "crypto_hash_sha512_init", "crypto_hash_sha512_update", "crypto_kdf_derive_from_key", "crypto_kdf_keygen", "crypto_kx_client_session_keys", "crypto_kx_keypair", "crypto_kx_seed_keypair", "crypto_kx_server_session_keys", "crypto_onetimeauth", "crypto_onetimeauth_final", "crypto_onetimeauth_init", "crypto_onetimeauth_keygen", "crypto_onetimeauth_update", "crypto_onetimeauth_verify", "crypto_pwhash", "crypto_pwhash_scryptsalsa208sha256", "crypto_pwhash_scryptsalsa208sha256_ll", "crypto_pwhash_scryptsalsa208sha256_str", "crypto_pwhash_scryptsalsa208sha256_str_verify", "crypto_pwhash_str", "crypto_pwhash_str_needs_rehash", "crypto_pwhash_str_verify", "crypto_scalarmult", "crypto_scalarmult_base", "crypto_scalarmult_ed25519", "crypto_scalarmult_ed25519_base", "crypto_scalarmult_ed25519_base_noclamp", "crypto_scalarmult_ed25519_noclamp", "crypto_scalarmult_ristretto255", "crypto_scalarmult_ristretto255_base", "crypto_secretbox_detached", "crypto_secretbox_easy", "crypto_secretbox_keygen", "crypto_secretbox_open_detached", "crypto_secretbox_open_easy", "crypto_secretstream_xchacha20poly1305_init_pull", "crypto_secretstream_xchacha20poly1305_init_push", "crypto_secretstream_xchacha20poly1305_keygen", "crypto_secretstream_xchacha20poly1305_pull", "crypto_secretstream_xchacha20poly1305_push", "crypto_secretstream_xchacha20poly1305_rekey", "crypto_shorthash", "crypto_shorthash_keygen", "crypto_shorthash_siphashx24", "crypto_sign", "crypto_sign_detached", "crypto_sign_ed25519_pk_to_curve25519", "crypto_sign_ed25519_sk_to_curve25519", "crypto_sign_ed25519_sk_to_pk", "crypto_sign_ed25519_sk_to_seed", "crypto_sign_final_create", "crypto_sign_final_verify", "crypto_sign_init", "crypto_sign_keypair", "crypto_sign_open", "crypto_sign_seed_keypair", "crypto_sign_update", "crypto_sign_verify_detached", "crypto_stream_chacha20", "crypto_stream_chacha20_ietf_xor", "crypto_stream_chacha20_ietf_xor_ic", "crypto_stream_chacha20_keygen", "crypto_stream_chacha20_xor", "crypto_stream_chacha20_xor_ic", "crypto_stream_keygen", "crypto_stream_xchacha20_keygen", "crypto_stream_xchacha20_xor", "crypto_stream_xchacha20_xor_ic", "randombytes_buf", "randombytes_buf_deterministic", "randombytes_close", "randombytes_random", "randombytes_set_implementation", "randombytes_stir", "randombytes_uniform", "sodium_version_string"], n5 = [E2, w2, v2, _2, Q2, b2, k2, D2, S2, N3, M2, x2, F2, P2, T2, R2, U2, G2, H2, L2, O2, Y2, K2, J2, j2, z2, q2, X2, V2, W2, Z2, $2, tt2, et2, rt2, nt2, At2, it2, ot2, st2, at2, ct2, ht2, gt2, ut2, lt2, ft2, pt2, dt2, It2, yt2, Ct2, mt2, Bt2, Et2, wt2, vt2, _t2, Qt2, bt2, kt2, Dt2, St2, Nt2, Mt2, xt2, Ft2, Pt2, Tt2, Rt2, Ut2, Gt2, Ht2, Lt2, Ot2, Yt2, Kt2, Jt2, jt2, zt2, qt2, Xt2, Vt2, Wt2, Zt2, $t2, te2, ee2, re2, ne2, Ae2, ie2, oe2, se2, ae2, ce2, he2, ge2, ue2, le2, fe2, pe2, de2, Ie2, ye2, Ce2, me2, Be2, Ee2, we2, ve2, _e2, Qe2, be2, ke2, De2, Se2, Ne2, Me2, xe2, Fe2, Pe2, Te2, Re2, Ue2, Ge2, He2, Le2, Oe2, Ye2, Ke2, Je2, je2, ze2, qe2, Xe2, Ve2, We2, Ze2, $e2, tr2, er2, rr2, nr2, Ar2, ir2, or2, sr2, ar2, cr2, hr2, gr2, ur2, lr2, fr2, pr2, dr2, Ir2, yr2, Cr2, mr2, Br2, Er2, wr2, vr2, _r2, Qr2, br2, kr2, Dr2, Sr2, Nr2, Mr2, xr2, Fr2, Pr2, Tr2, Rr2, Ur2, Gr2, Hr2, Lr2], A5 = 0; A5 < n5.length; A5++)
                  "function" == typeof r5["_" + e4[A5]] && (t2[e4[A5]] = n5[A5]);
                var i4 = ["SODIUM_LIBRARY_VERSION_MAJOR", "SODIUM_LIBRARY_VERSION_MINOR", "crypto_aead_chacha20poly1305_ABYTES", "crypto_aead_chacha20poly1305_IETF_ABYTES", "crypto_aead_chacha20poly1305_IETF_KEYBYTES", "crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_IETF_NPUBBYTES", "crypto_aead_chacha20poly1305_IETF_NSECBYTES", "crypto_aead_chacha20poly1305_KEYBYTES", "crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_NPUBBYTES", "crypto_aead_chacha20poly1305_NSECBYTES", "crypto_aead_chacha20poly1305_ietf_ABYTES", "crypto_aead_chacha20poly1305_ietf_KEYBYTES", "crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_chacha20poly1305_ietf_NPUBBYTES", "crypto_aead_chacha20poly1305_ietf_NSECBYTES", "crypto_aead_xchacha20poly1305_IETF_ABYTES", "crypto_aead_xchacha20poly1305_IETF_KEYBYTES", "crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_IETF_NPUBBYTES", "crypto_aead_xchacha20poly1305_IETF_NSECBYTES", "crypto_aead_xchacha20poly1305_ietf_ABYTES", "crypto_aead_xchacha20poly1305_ietf_KEYBYTES", "crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX", "crypto_aead_xchacha20poly1305_ietf_NPUBBYTES", "crypto_aead_xchacha20poly1305_ietf_NSECBYTES", "crypto_auth_BYTES", "crypto_auth_KEYBYTES", "crypto_auth_hmacsha256_BYTES", "crypto_auth_hmacsha256_KEYBYTES", "crypto_auth_hmacsha512256_BYTES", "crypto_auth_hmacsha512256_KEYBYTES", "crypto_auth_hmacsha512_BYTES", "crypto_auth_hmacsha512_KEYBYTES", "crypto_box_BEFORENMBYTES", "crypto_box_MACBYTES", "crypto_box_MESSAGEBYTES_MAX", "crypto_box_NONCEBYTES", "crypto_box_PUBLICKEYBYTES", "crypto_box_SEALBYTES", "crypto_box_SECRETKEYBYTES", "crypto_box_SEEDBYTES", "crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES", "crypto_box_curve25519xchacha20poly1305_MACBYTES", "crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xchacha20poly1305_NONCEBYTES", "crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEALBYTES", "crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xchacha20poly1305_SEEDBYTES", "crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES", "crypto_box_curve25519xsalsa20poly1305_MACBYTES", "crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_box_curve25519xsalsa20poly1305_NONCEBYTES", "crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES", "crypto_box_curve25519xsalsa20poly1305_SEEDBYTES", "crypto_core_ed25519_BYTES", "crypto_core_ed25519_HASHBYTES", "crypto_core_ed25519_NONREDUCEDSCALARBYTES", "crypto_core_ed25519_SCALARBYTES", "crypto_core_ed25519_UNIFORMBYTES", "crypto_core_hchacha20_CONSTBYTES", "crypto_core_hchacha20_INPUTBYTES", "crypto_core_hchacha20_KEYBYTES", "crypto_core_hchacha20_OUTPUTBYTES", "crypto_core_hsalsa20_CONSTBYTES", "crypto_core_hsalsa20_INPUTBYTES", "crypto_core_hsalsa20_KEYBYTES", "crypto_core_hsalsa20_OUTPUTBYTES", "crypto_core_ristretto255_BYTES", "crypto_core_ristretto255_HASHBYTES", "crypto_core_ristretto255_NONREDUCEDSCALARBYTES", "crypto_core_ristretto255_SCALARBYTES", "crypto_core_salsa2012_CONSTBYTES", "crypto_core_salsa2012_INPUTBYTES", "crypto_core_salsa2012_KEYBYTES", "crypto_core_salsa2012_OUTPUTBYTES", "crypto_core_salsa20_CONSTBYTES", "crypto_core_salsa20_INPUTBYTES", "crypto_core_salsa20_KEYBYTES", "crypto_core_salsa20_OUTPUTBYTES", "crypto_generichash_BYTES", "crypto_generichash_BYTES_MAX", "crypto_generichash_BYTES_MIN", "crypto_generichash_KEYBYTES", "crypto_generichash_KEYBYTES_MAX", "crypto_generichash_KEYBYTES_MIN", "crypto_generichash_blake2b_BYTES", "crypto_generichash_blake2b_BYTES_MAX", "crypto_generichash_blake2b_BYTES_MIN", "crypto_generichash_blake2b_KEYBYTES", "crypto_generichash_blake2b_KEYBYTES_MAX", "crypto_generichash_blake2b_KEYBYTES_MIN", "crypto_generichash_blake2b_PERSONALBYTES", "crypto_generichash_blake2b_SALTBYTES", "crypto_hash_BYTES", "crypto_hash_sha256_BYTES", "crypto_hash_sha512_BYTES", "crypto_kdf_BYTES_MAX", "crypto_kdf_BYTES_MIN", "crypto_kdf_CONTEXTBYTES", "crypto_kdf_KEYBYTES", "crypto_kdf_blake2b_BYTES_MAX", "crypto_kdf_blake2b_BYTES_MIN", "crypto_kdf_blake2b_CONTEXTBYTES", "crypto_kdf_blake2b_KEYBYTES", "crypto_kx_PUBLICKEYBYTES", "crypto_kx_SECRETKEYBYTES", "crypto_kx_SEEDBYTES", "crypto_kx_SESSIONKEYBYTES", "crypto_onetimeauth_BYTES", "crypto_onetimeauth_KEYBYTES", "crypto_onetimeauth_poly1305_BYTES", "crypto_onetimeauth_poly1305_KEYBYTES", "crypto_pwhash_ALG_ARGON2I13", "crypto_pwhash_ALG_ARGON2ID13", "crypto_pwhash_ALG_DEFAULT", "crypto_pwhash_BYTES_MAX", "crypto_pwhash_BYTES_MIN", "crypto_pwhash_MEMLIMIT_INTERACTIVE", "crypto_pwhash_MEMLIMIT_MAX", "crypto_pwhash_MEMLIMIT_MIN", "crypto_pwhash_MEMLIMIT_MODERATE", "crypto_pwhash_MEMLIMIT_SENSITIVE", "crypto_pwhash_OPSLIMIT_INTERACTIVE", "crypto_pwhash_OPSLIMIT_MAX", "crypto_pwhash_OPSLIMIT_MIN", "crypto_pwhash_OPSLIMIT_MODERATE", "crypto_pwhash_OPSLIMIT_SENSITIVE", "crypto_pwhash_PASSWD_MAX", "crypto_pwhash_PASSWD_MIN", "crypto_pwhash_SALTBYTES", "crypto_pwhash_STRBYTES", "crypto_pwhash_argon2i_BYTES_MAX", "crypto_pwhash_argon2i_BYTES_MIN", "crypto_pwhash_argon2i_SALTBYTES", "crypto_pwhash_argon2i_STRBYTES", "crypto_pwhash_argon2id_BYTES_MAX", "crypto_pwhash_argon2id_BYTES_MIN", "crypto_pwhash_argon2id_SALTBYTES", "crypto_pwhash_argon2id_STRBYTES", "crypto_pwhash_scryptsalsa208sha256_BYTES_MAX", "crypto_pwhash_scryptsalsa208sha256_BYTES_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN", "crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE", "crypto_pwhash_scryptsalsa208sha256_SALTBYTES", "crypto_pwhash_scryptsalsa208sha256_STRBYTES", "crypto_scalarmult_BYTES", "crypto_scalarmult_SCALARBYTES", "crypto_scalarmult_curve25519_BYTES", "crypto_scalarmult_curve25519_SCALARBYTES", "crypto_scalarmult_ed25519_BYTES", "crypto_scalarmult_ed25519_SCALARBYTES", "crypto_scalarmult_ristretto255_BYTES", "crypto_scalarmult_ristretto255_SCALARBYTES", "crypto_secretbox_KEYBYTES", "crypto_secretbox_MACBYTES", "crypto_secretbox_MESSAGEBYTES_MAX", "crypto_secretbox_NONCEBYTES", "crypto_secretbox_xchacha20poly1305_KEYBYTES", "crypto_secretbox_xchacha20poly1305_MACBYTES", "crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xchacha20poly1305_NONCEBYTES", "crypto_secretbox_xsalsa20poly1305_KEYBYTES", "crypto_secretbox_xsalsa20poly1305_MACBYTES", "crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX", "crypto_secretbox_xsalsa20poly1305_NONCEBYTES", "crypto_secretstream_xchacha20poly1305_ABYTES", "crypto_secretstream_xchacha20poly1305_HEADERBYTES", "crypto_secretstream_xchacha20poly1305_KEYBYTES", "crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX", "crypto_secretstream_xchacha20poly1305_TAG_FINAL", "crypto_secretstream_xchacha20poly1305_TAG_MESSAGE", "crypto_secretstream_xchacha20poly1305_TAG_PUSH", "crypto_secretstream_xchacha20poly1305_TAG_REKEY", "crypto_shorthash_BYTES", "crypto_shorthash_KEYBYTES", "crypto_shorthash_siphash24_BYTES", "crypto_shorthash_siphash24_KEYBYTES", "crypto_shorthash_siphashx24_BYTES", "crypto_shorthash_siphashx24_KEYBYTES", "crypto_sign_BYTES", "crypto_sign_MESSAGEBYTES_MAX", "crypto_sign_PUBLICKEYBYTES", "crypto_sign_SECRETKEYBYTES", "crypto_sign_SEEDBYTES", "crypto_sign_ed25519_BYTES", "crypto_sign_ed25519_MESSAGEBYTES_MAX", "crypto_sign_ed25519_PUBLICKEYBYTES", "crypto_sign_ed25519_SECRETKEYBYTES", "crypto_sign_ed25519_SEEDBYTES", "crypto_stream_KEYBYTES", "crypto_stream_MESSAGEBYTES_MAX", "crypto_stream_NONCEBYTES", "crypto_stream_chacha20_IETF_KEYBYTES", "crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX", "crypto_stream_chacha20_IETF_NONCEBYTES", "crypto_stream_chacha20_KEYBYTES", "crypto_stream_chacha20_MESSAGEBYTES_MAX", "crypto_stream_chacha20_NONCEBYTES", "crypto_stream_chacha20_ietf_KEYBYTES", "crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX", "crypto_stream_chacha20_ietf_NONCEBYTES", "crypto_stream_salsa2012_KEYBYTES", "crypto_stream_salsa2012_MESSAGEBYTES_MAX", "crypto_stream_salsa2012_NONCEBYTES", "crypto_stream_salsa208_KEYBYTES", "crypto_stream_salsa208_MESSAGEBYTES_MAX", "crypto_stream_salsa208_NONCEBYTES", "crypto_stream_salsa20_KEYBYTES", "crypto_stream_salsa20_MESSAGEBYTES_MAX", "crypto_stream_salsa20_NONCEBYTES", "crypto_stream_xchacha20_KEYBYTES", "crypto_stream_xchacha20_MESSAGEBYTES_MAX", "crypto_stream_xchacha20_NONCEBYTES", "crypto_stream_xsalsa20_KEYBYTES", "crypto_stream_xsalsa20_MESSAGEBYTES_MAX", "crypto_stream_xsalsa20_NONCEBYTES", "crypto_verify_16_BYTES", "crypto_verify_32_BYTES", "crypto_verify_64_BYTES"];
                for (A5 = 0; A5 < i4.length; A5++)
                  "function" == typeof (s4 = r5["_" + i4[A5].toLowerCase()]) && (t2[i4[A5]] = s4());
                var o4 = ["SODIUM_VERSION_STRING", "crypto_pwhash_STRPREFIX", "crypto_pwhash_scryptsalsa208sha256_STRPREFIX"];
                for (A5 = 0; A5 < o4.length; A5++) {
                  var s4;
                  "function" == typeof (s4 = r5["_" + o4[A5].toLowerCase()]) && (t2[o4[A5]] = r5.UTF8ToString(s4()));
                }
              }
              r5 = e3;
              try {
                n4();
                var A4 = new Uint8Array([98, 97, 108, 108, 115]), i3 = t2.randombytes_buf(t2.crypto_secretbox_NONCEBYTES), o3 = t2.randombytes_buf(t2.crypto_secretbox_KEYBYTES), s3 = t2.crypto_secretbox_easy(A4, i3, o3), a3 = t2.crypto_secretbox_open_easy(s3, i3, o3);
                if (t2.memcmp(A4, a3))
                  return;
              } catch (t3) {
                if (null == r5.useBackupModule)
                  throw new Error("Both wasm and asm failed to load" + t3);
              }
              r5.useBackupModule(), n4();
            });
            function i2(t3) {
              if ("function" == typeof TextEncoder)
                return new TextEncoder().encode(t3);
              t3 = unescape(encodeURIComponent(t3));
              for (var e4 = new Uint8Array(t3.length), r6 = 0, n4 = t3.length; r6 < n4; r6++)
                e4[r6] = t3.charCodeAt(r6);
              return e4;
            }
            function o2(t3) {
              if ("function" == typeof TextDecoder)
                return new TextDecoder("utf-8", { fatal: true }).decode(t3);
              var e4 = 8192, r6 = Math.ceil(t3.length / e4);
              if (r6 <= 1)
                try {
                  return decodeURIComponent(escape(String.fromCharCode.apply(null, t3)));
                } catch (t4) {
                  throw new TypeError("The encoded data was not valid.");
                }
              for (var n4 = "", A4 = 0, i3 = 0; i3 < r6; i3++) {
                var s3 = Array.prototype.slice.call(t3, i3 * e4 + A4, (i3 + 1) * e4 + A4);
                if (0 != s3.length) {
                  var a3, c3 = s3.length, h3 = 0;
                  do {
                    var g3 = s3[--c3];
                    g3 >= 240 ? (h3 = 4, a3 = true) : g3 >= 224 ? (h3 = 3, a3 = true) : g3 >= 192 ? (h3 = 2, a3 = true) : g3 < 128 && (h3 = 1, a3 = true);
                  } while (!a3);
                  for (var u3 = h3 - (s3.length - c3), l3 = 0; l3 < u3; l3++)
                    A4--, s3.pop();
                  n4 += o2(s3);
                }
              }
              return n4;
            }
            function s2(t3) {
              t3 = B2(null, t3, "input");
              for (var e4, r6, n4, A4 = "", i3 = 0; i3 < t3.length; i3++)
                n4 = 87 + (r6 = 15 & t3[i3]) + (r6 - 10 >> 8 & -39) << 8 | 87 + (e4 = t3[i3] >>> 4) + (e4 - 10 >> 8 & -39), A4 += String.fromCharCode(255 & n4) + String.fromCharCode(n4 >>> 8);
              return A4;
            }
            var a2 = { ORIGINAL: 1, ORIGINAL_NO_PADDING: 3, URLSAFE: 5, URLSAFE_NO_PADDING: 7 };
            function c2(t3) {
              if (null == t3)
                return a2.URLSAFE_NO_PADDING;
              if (t3 !== a2.ORIGINAL && t3 !== a2.ORIGINAL_NO_PADDING && t3 !== a2.URLSAFE && t3 != a2.URLSAFE_NO_PADDING)
                throw new Error("unsupported base64 variant");
              return t3;
            }
            function h2(t3, e4) {
              e4 = c2(e4), t3 = B2(A4, t3, "input");
              var n4, A4 = [], i3 = 0 | Math.floor(t3.length / 3), s3 = t3.length - 3 * i3, a3 = 4 * i3 + (0 !== s3 ? 2 & e4 ? 2 + (s3 >>> 1) : 4 : 0), h3 = new f2(a3 + 1), g3 = p2(t3);
              return A4.push(g3), A4.push(h3.address), 0 === r5._sodium_bin2base64(h3.address, h3.length, g3, t3.length, e4) && y2(A4, "conversion failed"), h3.length = a3, n4 = o2(h3.to_Uint8Array()), I2(A4), n4;
            }
            function g2(t3, e4) {
              var r6 = e4 || n3;
              if (!u2(r6))
                throw new Error(r6 + " output format is not available");
              if (t3 instanceof f2) {
                if ("uint8array" === r6)
                  return t3.to_Uint8Array();
                if ("text" === r6)
                  return o2(t3.to_Uint8Array());
                if ("hex" === r6)
                  return s2(t3.to_Uint8Array());
                if ("base64" === r6)
                  return h2(t3.to_Uint8Array(), a2.URLSAFE_NO_PADDING);
                throw new Error('What is output format "' + r6 + '"?');
              }
              if ("object" == typeof t3) {
                for (var A4 = Object.keys(t3), i3 = {}, c3 = 0; c3 < A4.length; c3++)
                  i3[A4[c3]] = g2(t3[A4[c3]], r6);
                return i3;
              }
              if ("string" == typeof t3)
                return t3;
              throw new TypeError("Cannot format output");
            }
            function u2(t3) {
              for (var e4 = ["uint8array", "text", "hex", "base64"], r6 = 0; r6 < e4.length; r6++)
                if (e4[r6] === t3)
                  return true;
              return false;
            }
            function l2(t3) {
              if (t3) {
                if ("string" != typeof t3)
                  throw new TypeError("When defined, the output format must be a string");
                if (!u2(t3))
                  throw new Error(t3 + " is not a supported output format");
              }
            }
            function f2(t3) {
              this.length = t3, this.address = d2(t3);
            }
            function p2(t3) {
              var e4 = d2(t3.length);
              return r5.HEAPU8.set(t3, e4), e4;
            }
            function d2(t3) {
              var e4 = r5._malloc(t3);
              if (0 === e4)
                throw { message: "_malloc() failed", length: t3 };
              return e4;
            }
            function I2(t3) {
              if (t3)
                for (var e4 = 0; e4 < t3.length; e4++)
                  n4 = t3[e4], r5._free(n4);
              var n4;
            }
            function y2(t3, e4) {
              throw I2(t3), new Error(e4);
            }
            function C2(t3, e4) {
              throw I2(t3), new TypeError(e4);
            }
            function m2(t3, e4, r6) {
              null == e4 && C2(t3, r6 + " cannot be null or undefined");
            }
            function B2(t3, e4, r6) {
              return m2(t3, e4, r6), e4 instanceof Uint8Array ? e4 : "string" == typeof e4 ? i2(e4) : void C2(t3, "unsupported input type for " + r6);
            }
            function E2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = null;
              null != t3 && (a3 = p2(t3 = B2(s3, t3, "secret_nonce")), t3.length, s3.push(a3)), e4 = B2(s3, e4, "ciphertext");
              var c3, h3 = r5._crypto_aead_aegis128l_abytes(), u3 = e4.length;
              u3 < h3 && C2(s3, "ciphertext is too short"), c3 = p2(e4), s3.push(c3);
              var d3 = null, m3 = 0;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "additional_data")), m3 = n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var E3, w3 = 0 | r5._crypto_aead_aegis128l_npubbytes();
              A4.length !== w3 && C2(s3, "invalid public_nonce length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "key");
              var v3, _3 = 0 | r5._crypto_aead_aegis128l_keybytes();
              i3.length !== _3 && C2(s3, "invalid key length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(u3 - r5._crypto_aead_aegis128l_abytes() | 0), b3 = Q3.address;
              if (s3.push(b3), 0 === r5._crypto_aead_aegis128l_decrypt(b3, null, a3, c3, u3, 0, d3, m3, 0, E3, v3)) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "ciphertext cannot be decrypted using that key");
            }
            function w2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = null;
              null != t3 && (c3 = p2(t3 = B2(a3, t3, "secret_nonce")), t3.length, a3.push(c3));
              var h3 = p2(e4 = B2(a3, e4, "ciphertext")), u3 = e4.length;
              a3.push(h3), n4 = B2(a3, n4, "mac");
              var d3, m3 = 0 | r5._crypto_box_macbytes();
              n4.length !== m3 && C2(a3, "invalid mac length"), d3 = p2(n4), a3.push(d3);
              var E3 = null, w3 = 0;
              null != A4 && (E3 = p2(A4 = B2(a3, A4, "additional_data")), w3 = A4.length, a3.push(E3)), i3 = B2(a3, i3, "public_nonce");
              var v3, _3 = 0 | r5._crypto_aead_aegis128l_npubbytes();
              i3.length !== _3 && C2(a3, "invalid public_nonce length"), v3 = p2(i3), a3.push(v3), o3 = B2(a3, o3, "key");
              var Q3, b3 = 0 | r5._crypto_aead_aegis128l_keybytes();
              o3.length !== b3 && C2(a3, "invalid key length"), Q3 = p2(o3), a3.push(Q3);
              var k3 = new f2(0 | u3), D3 = k3.address;
              if (a3.push(D3), 0 === r5._crypto_aead_aegis128l_decrypt_detached(D3, c3, h3, u3, 0, d3, E3, w3, 0, v3, Q3)) {
                var S3 = g2(k3, s3);
                return I2(a3), S3;
              }
              y2(a3, "ciphertext cannot be decrypted using that key");
            }
            function v2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_aegis128l_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_aegis128l_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(c3 + r5._crypto_aead_aegis128l_abytes() | 0), Q3 = _3.address;
              if (s3.push(Q3), 0 === r5._crypto_aead_aegis128l_encrypt(Q3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var b3 = g2(_3, o3);
                return I2(s3), b3;
              }
              y2(s3, "invalid usage");
            }
            function _2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_aegis128l_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_aegis128l_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(0 | c3), Q3 = _3.address;
              s3.push(Q3);
              var b3 = new f2(0 | r5._crypto_aead_aegis128l_abytes()), k3 = b3.address;
              if (s3.push(k3), 0 === r5._crypto_aead_aegis128l_encrypt_detached(Q3, k3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var D3 = g2({ ciphertext: _3, mac: b3 }, o3);
                return I2(s3), D3;
              }
              y2(s3, "invalid usage");
            }
            function Q2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_aead_aegis128l_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_aead_aegis128l_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function b2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = null;
              null != t3 && (a3 = p2(t3 = B2(s3, t3, "secret_nonce")), t3.length, s3.push(a3)), e4 = B2(s3, e4, "ciphertext");
              var c3, h3 = r5._crypto_aead_aegis256_abytes(), u3 = e4.length;
              u3 < h3 && C2(s3, "ciphertext is too short"), c3 = p2(e4), s3.push(c3);
              var d3 = null, m3 = 0;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "additional_data")), m3 = n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var E3, w3 = 0 | r5._crypto_aead_aegis256_npubbytes();
              A4.length !== w3 && C2(s3, "invalid public_nonce length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "key");
              var v3, _3 = 0 | r5._crypto_aead_aegis256_keybytes();
              i3.length !== _3 && C2(s3, "invalid key length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(u3 - r5._crypto_aead_aegis256_abytes() | 0), b3 = Q3.address;
              if (s3.push(b3), 0 === r5._crypto_aead_aegis256_decrypt(b3, null, a3, c3, u3, 0, d3, m3, 0, E3, v3)) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "ciphertext cannot be decrypted using that key");
            }
            function k2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = null;
              null != t3 && (c3 = p2(t3 = B2(a3, t3, "secret_nonce")), t3.length, a3.push(c3));
              var h3 = p2(e4 = B2(a3, e4, "ciphertext")), u3 = e4.length;
              a3.push(h3), n4 = B2(a3, n4, "mac");
              var d3, m3 = 0 | r5._crypto_box_macbytes();
              n4.length !== m3 && C2(a3, "invalid mac length"), d3 = p2(n4), a3.push(d3);
              var E3 = null, w3 = 0;
              null != A4 && (E3 = p2(A4 = B2(a3, A4, "additional_data")), w3 = A4.length, a3.push(E3)), i3 = B2(a3, i3, "public_nonce");
              var v3, _3 = 0 | r5._crypto_aead_aegis256_npubbytes();
              i3.length !== _3 && C2(a3, "invalid public_nonce length"), v3 = p2(i3), a3.push(v3), o3 = B2(a3, o3, "key");
              var Q3, b3 = 0 | r5._crypto_aead_aegis256_keybytes();
              o3.length !== b3 && C2(a3, "invalid key length"), Q3 = p2(o3), a3.push(Q3);
              var k3 = new f2(0 | u3), D3 = k3.address;
              if (a3.push(D3), 0 === r5._crypto_aead_aegis256_decrypt_detached(D3, c3, h3, u3, 0, d3, E3, w3, 0, v3, Q3)) {
                var S3 = g2(k3, s3);
                return I2(a3), S3;
              }
              y2(a3, "ciphertext cannot be decrypted using that key");
            }
            function D2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_aegis256_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_aegis256_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(c3 + r5._crypto_aead_aegis256_abytes() | 0), Q3 = _3.address;
              if (s3.push(Q3), 0 === r5._crypto_aead_aegis256_encrypt(Q3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var b3 = g2(_3, o3);
                return I2(s3), b3;
              }
              y2(s3, "invalid usage");
            }
            function S2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_aegis256_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_aegis256_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(0 | c3), Q3 = _3.address;
              s3.push(Q3);
              var b3 = new f2(0 | r5._crypto_aead_aegis256_abytes()), k3 = b3.address;
              if (s3.push(k3), 0 === r5._crypto_aead_aegis256_encrypt_detached(Q3, k3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var D3 = g2({ ciphertext: _3, mac: b3 }, o3);
                return I2(s3), D3;
              }
              y2(s3, "invalid usage");
            }
            function N3(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_aead_aegis256_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_aead_aegis256_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function M2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = null;
              null != t3 && (a3 = p2(t3 = B2(s3, t3, "secret_nonce")), t3.length, s3.push(a3)), e4 = B2(s3, e4, "ciphertext");
              var c3, h3 = r5._crypto_aead_chacha20poly1305_abytes(), u3 = e4.length;
              u3 < h3 && C2(s3, "ciphertext is too short"), c3 = p2(e4), s3.push(c3);
              var d3 = null, m3 = 0;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "additional_data")), m3 = n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var E3, w3 = 0 | r5._crypto_aead_chacha20poly1305_npubbytes();
              A4.length !== w3 && C2(s3, "invalid public_nonce length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "key");
              var v3, _3 = 0 | r5._crypto_aead_chacha20poly1305_keybytes();
              i3.length !== _3 && C2(s3, "invalid key length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(u3 - r5._crypto_aead_chacha20poly1305_abytes() | 0), b3 = Q3.address;
              if (s3.push(b3), 0 === r5._crypto_aead_chacha20poly1305_decrypt(b3, null, a3, c3, u3, 0, d3, m3, 0, E3, v3)) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "ciphertext cannot be decrypted using that key");
            }
            function x2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = null;
              null != t3 && (c3 = p2(t3 = B2(a3, t3, "secret_nonce")), t3.length, a3.push(c3));
              var h3 = p2(e4 = B2(a3, e4, "ciphertext")), u3 = e4.length;
              a3.push(h3), n4 = B2(a3, n4, "mac");
              var d3, m3 = 0 | r5._crypto_box_macbytes();
              n4.length !== m3 && C2(a3, "invalid mac length"), d3 = p2(n4), a3.push(d3);
              var E3 = null, w3 = 0;
              null != A4 && (E3 = p2(A4 = B2(a3, A4, "additional_data")), w3 = A4.length, a3.push(E3)), i3 = B2(a3, i3, "public_nonce");
              var v3, _3 = 0 | r5._crypto_aead_chacha20poly1305_npubbytes();
              i3.length !== _3 && C2(a3, "invalid public_nonce length"), v3 = p2(i3), a3.push(v3), o3 = B2(a3, o3, "key");
              var Q3, b3 = 0 | r5._crypto_aead_chacha20poly1305_keybytes();
              o3.length !== b3 && C2(a3, "invalid key length"), Q3 = p2(o3), a3.push(Q3);
              var k3 = new f2(0 | u3), D3 = k3.address;
              if (a3.push(D3), 0 === r5._crypto_aead_chacha20poly1305_decrypt_detached(D3, c3, h3, u3, 0, d3, E3, w3, 0, v3, Q3)) {
                var S3 = g2(k3, s3);
                return I2(a3), S3;
              }
              y2(a3, "ciphertext cannot be decrypted using that key");
            }
            function F2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_chacha20poly1305_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_chacha20poly1305_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(c3 + r5._crypto_aead_chacha20poly1305_abytes() | 0), Q3 = _3.address;
              if (s3.push(Q3), 0 === r5._crypto_aead_chacha20poly1305_encrypt(Q3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var b3 = g2(_3, o3);
                return I2(s3), b3;
              }
              y2(s3, "invalid usage");
            }
            function P2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_chacha20poly1305_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_chacha20poly1305_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(0 | c3), Q3 = _3.address;
              s3.push(Q3);
              var b3 = new f2(0 | r5._crypto_aead_chacha20poly1305_abytes()), k3 = b3.address;
              if (s3.push(k3), 0 === r5._crypto_aead_chacha20poly1305_encrypt_detached(Q3, k3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var D3 = g2({ ciphertext: _3, mac: b3 }, o3);
                return I2(s3), D3;
              }
              y2(s3, "invalid usage");
            }
            function T2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = null;
              null != t3 && (a3 = p2(t3 = B2(s3, t3, "secret_nonce")), t3.length, s3.push(a3)), e4 = B2(s3, e4, "ciphertext");
              var c3, h3 = r5._crypto_aead_chacha20poly1305_ietf_abytes(), u3 = e4.length;
              u3 < h3 && C2(s3, "ciphertext is too short"), c3 = p2(e4), s3.push(c3);
              var d3 = null, m3 = 0;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "additional_data")), m3 = n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var E3, w3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_npubbytes();
              A4.length !== w3 && C2(s3, "invalid public_nonce length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "key");
              var v3, _3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_keybytes();
              i3.length !== _3 && C2(s3, "invalid key length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(u3 - r5._crypto_aead_chacha20poly1305_ietf_abytes() | 0), b3 = Q3.address;
              if (s3.push(b3), 0 === r5._crypto_aead_chacha20poly1305_ietf_decrypt(b3, null, a3, c3, u3, 0, d3, m3, 0, E3, v3)) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "ciphertext cannot be decrypted using that key");
            }
            function R2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = null;
              null != t3 && (c3 = p2(t3 = B2(a3, t3, "secret_nonce")), t3.length, a3.push(c3));
              var h3 = p2(e4 = B2(a3, e4, "ciphertext")), u3 = e4.length;
              a3.push(h3), n4 = B2(a3, n4, "mac");
              var d3, m3 = 0 | r5._crypto_box_macbytes();
              n4.length !== m3 && C2(a3, "invalid mac length"), d3 = p2(n4), a3.push(d3);
              var E3 = null, w3 = 0;
              null != A4 && (E3 = p2(A4 = B2(a3, A4, "additional_data")), w3 = A4.length, a3.push(E3)), i3 = B2(a3, i3, "public_nonce");
              var v3, _3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_npubbytes();
              i3.length !== _3 && C2(a3, "invalid public_nonce length"), v3 = p2(i3), a3.push(v3), o3 = B2(a3, o3, "key");
              var Q3, b3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_keybytes();
              o3.length !== b3 && C2(a3, "invalid key length"), Q3 = p2(o3), a3.push(Q3);
              var k3 = new f2(0 | u3), D3 = k3.address;
              if (a3.push(D3), 0 === r5._crypto_aead_chacha20poly1305_ietf_decrypt_detached(D3, c3, h3, u3, 0, d3, E3, w3, 0, v3, Q3)) {
                var S3 = g2(k3, s3);
                return I2(a3), S3;
              }
              y2(a3, "ciphertext cannot be decrypted using that key");
            }
            function U2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(c3 + r5._crypto_aead_chacha20poly1305_ietf_abytes() | 0), Q3 = _3.address;
              if (s3.push(Q3), 0 === r5._crypto_aead_chacha20poly1305_ietf_encrypt(Q3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var b3 = g2(_3, o3);
                return I2(s3), b3;
              }
              y2(s3, "invalid usage");
            }
            function G2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_chacha20poly1305_ietf_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(0 | c3), Q3 = _3.address;
              s3.push(Q3);
              var b3 = new f2(0 | r5._crypto_aead_chacha20poly1305_ietf_abytes()), k3 = b3.address;
              if (s3.push(k3), 0 === r5._crypto_aead_chacha20poly1305_ietf_encrypt_detached(Q3, k3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var D3 = g2({ ciphertext: _3, mac: b3 }, o3);
                return I2(s3), D3;
              }
              y2(s3, "invalid usage");
            }
            function H2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_aead_chacha20poly1305_ietf_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_aead_chacha20poly1305_ietf_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function L2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_aead_chacha20poly1305_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_aead_chacha20poly1305_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function O2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = null;
              null != t3 && (a3 = p2(t3 = B2(s3, t3, "secret_nonce")), t3.length, s3.push(a3)), e4 = B2(s3, e4, "ciphertext");
              var c3, h3 = r5._crypto_aead_xchacha20poly1305_ietf_abytes(), u3 = e4.length;
              u3 < h3 && C2(s3, "ciphertext is too short"), c3 = p2(e4), s3.push(c3);
              var d3 = null, m3 = 0;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "additional_data")), m3 = n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var E3, w3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_npubbytes();
              A4.length !== w3 && C2(s3, "invalid public_nonce length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "key");
              var v3, _3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_keybytes();
              i3.length !== _3 && C2(s3, "invalid key length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(u3 - r5._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), b3 = Q3.address;
              if (s3.push(b3), 0 === r5._crypto_aead_xchacha20poly1305_ietf_decrypt(b3, null, a3, c3, u3, 0, d3, m3, 0, E3, v3)) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "ciphertext cannot be decrypted using that key");
            }
            function Y2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = null;
              null != t3 && (c3 = p2(t3 = B2(a3, t3, "secret_nonce")), t3.length, a3.push(c3));
              var h3 = p2(e4 = B2(a3, e4, "ciphertext")), u3 = e4.length;
              a3.push(h3), n4 = B2(a3, n4, "mac");
              var d3, m3 = 0 | r5._crypto_box_macbytes();
              n4.length !== m3 && C2(a3, "invalid mac length"), d3 = p2(n4), a3.push(d3);
              var E3 = null, w3 = 0;
              null != A4 && (E3 = p2(A4 = B2(a3, A4, "additional_data")), w3 = A4.length, a3.push(E3)), i3 = B2(a3, i3, "public_nonce");
              var v3, _3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_npubbytes();
              i3.length !== _3 && C2(a3, "invalid public_nonce length"), v3 = p2(i3), a3.push(v3), o3 = B2(a3, o3, "key");
              var Q3, b3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_keybytes();
              o3.length !== b3 && C2(a3, "invalid key length"), Q3 = p2(o3), a3.push(Q3);
              var k3 = new f2(0 | u3), D3 = k3.address;
              if (a3.push(D3), 0 === r5._crypto_aead_xchacha20poly1305_ietf_decrypt_detached(D3, c3, h3, u3, 0, d3, E3, w3, 0, v3, Q3)) {
                var S3 = g2(k3, s3);
                return I2(a3), S3;
              }
              y2(a3, "ciphertext cannot be decrypted using that key");
            }
            function K2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(c3 + r5._crypto_aead_xchacha20poly1305_ietf_abytes() | 0), Q3 = _3.address;
              if (s3.push(Q3), 0 === r5._crypto_aead_xchacha20poly1305_ietf_encrypt(Q3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var b3 = g2(_3, o3);
                return I2(s3), b3;
              }
              y2(s3, "invalid usage");
            }
            function J2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "message")), c3 = t3.length;
              s3.push(a3);
              var h3 = null, u3 = 0;
              null != e4 && (h3 = p2(e4 = B2(s3, e4, "additional_data")), u3 = e4.length, s3.push(h3));
              var d3 = null;
              null != n4 && (d3 = p2(n4 = B2(s3, n4, "secret_nonce")), n4.length, s3.push(d3)), A4 = B2(s3, A4, "public_nonce");
              var m3, E3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_npubbytes();
              A4.length !== E3 && C2(s3, "invalid public_nonce length"), m3 = p2(A4), s3.push(m3), i3 = B2(s3, i3, "key");
              var w3, v3 = 0 | r5._crypto_aead_xchacha20poly1305_ietf_keybytes();
              i3.length !== v3 && C2(s3, "invalid key length"), w3 = p2(i3), s3.push(w3);
              var _3 = new f2(0 | c3), Q3 = _3.address;
              s3.push(Q3);
              var b3 = new f2(0 | r5._crypto_aead_xchacha20poly1305_ietf_abytes()), k3 = b3.address;
              if (s3.push(k3), 0 === r5._crypto_aead_xchacha20poly1305_ietf_encrypt_detached(Q3, k3, null, a3, c3, 0, h3, u3, 0, d3, m3, w3)) {
                var D3 = g2({ ciphertext: _3, mac: b3 }, o3);
                return I2(s3), D3;
              }
              y2(s3, "invalid usage");
            }
            function j2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_aead_xchacha20poly1305_ietf_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_aead_xchacha20poly1305_ietf_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function z2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_auth_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_auth_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_auth(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function q2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_auth_hmacsha256_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_auth_hmacsha256_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_auth_hmacsha256(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function X2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "state_address");
              var A4 = new f2(0 | r5._crypto_auth_hmacsha256_bytes()), i3 = A4.address;
              if (n4.push(i3), !(0 | r5._crypto_auth_hmacsha256_final(t3, i3))) {
                var o3 = (r5._free(t3), g2(A4, e4));
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function V2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = null, i3 = 0;
              null != t3 && (A4 = p2(t3 = B2(n4, t3, "key")), i3 = t3.length, n4.push(A4));
              var o3 = new f2(208).address;
              if (!(0 | r5._crypto_auth_hmacsha256_init(o3, A4, i3))) {
                var s3 = o3;
                return I2(n4), s3;
              }
              y2(n4, "invalid usage");
            }
            function W2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_auth_hmacsha256_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_auth_hmacsha256_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Z2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_auth_hmacsha256_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function $2(t3, e4, n4) {
              var A4 = [];
              t3 = B2(A4, t3, "tag");
              var i3, o3 = 0 | r5._crypto_auth_hmacsha256_bytes();
              t3.length !== o3 && C2(A4, "invalid tag length"), i3 = p2(t3), A4.push(i3);
              var s3 = p2(e4 = B2(A4, e4, "message")), a3 = e4.length;
              A4.push(s3), n4 = B2(A4, n4, "key");
              var c3, h3 = 0 | r5._crypto_auth_hmacsha256_keybytes();
              n4.length !== h3 && C2(A4, "invalid key length"), c3 = p2(n4), A4.push(c3);
              var g3 = !(0 | r5._crypto_auth_hmacsha256_verify(i3, s3, a3, 0, c3));
              return I2(A4), g3;
            }
            function tt2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_auth_hmacsha512_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_auth_hmacsha512_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_auth_hmacsha512(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function et2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "state_address");
              var A4 = new f2(0 | r5._crypto_auth_hmacsha512_bytes()), i3 = A4.address;
              if (n4.push(i3), !(0 | r5._crypto_auth_hmacsha512_final(t3, i3))) {
                var o3 = (r5._free(t3), g2(A4, e4));
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function rt2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = null, i3 = 0;
              null != t3 && (A4 = p2(t3 = B2(n4, t3, "key")), i3 = t3.length, n4.push(A4));
              var o3 = new f2(416).address;
              if (!(0 | r5._crypto_auth_hmacsha512_init(o3, A4, i3))) {
                var s3 = o3;
                return I2(n4), s3;
              }
              y2(n4, "invalid usage");
            }
            function nt2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_auth_hmacsha512_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_auth_hmacsha512_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function At2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_auth_hmacsha512_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function it2(t3, e4, n4) {
              var A4 = [];
              t3 = B2(A4, t3, "tag");
              var i3, o3 = 0 | r5._crypto_auth_hmacsha512_bytes();
              t3.length !== o3 && C2(A4, "invalid tag length"), i3 = p2(t3), A4.push(i3);
              var s3 = p2(e4 = B2(A4, e4, "message")), a3 = e4.length;
              A4.push(s3), n4 = B2(A4, n4, "key");
              var c3, h3 = 0 | r5._crypto_auth_hmacsha512_keybytes();
              n4.length !== h3 && C2(A4, "invalid key length"), c3 = p2(n4), A4.push(c3);
              var g3 = !(0 | r5._crypto_auth_hmacsha512_verify(i3, s3, a3, 0, c3));
              return I2(A4), g3;
            }
            function ot2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_auth_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_auth_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function st2(t3, e4, n4) {
              var A4 = [];
              t3 = B2(A4, t3, "tag");
              var i3, o3 = 0 | r5._crypto_auth_bytes();
              t3.length !== o3 && C2(A4, "invalid tag length"), i3 = p2(t3), A4.push(i3);
              var s3 = p2(e4 = B2(A4, e4, "message")), a3 = e4.length;
              A4.push(s3), n4 = B2(A4, n4, "key");
              var c3, h3 = 0 | r5._crypto_auth_keybytes();
              n4.length !== h3 && C2(A4, "invalid key length"), c3 = p2(n4), A4.push(c3);
              var g3 = !(0 | r5._crypto_auth_verify(i3, s3, a3, 0, c3));
              return I2(A4), g3;
            }
            function at2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "publicKey");
              var i3, o3 = 0 | r5._crypto_box_publickeybytes();
              t3.length !== o3 && C2(A4, "invalid publicKey length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "privateKey");
              var s3, a3 = 0 | r5._crypto_box_secretkeybytes();
              e4.length !== a3 && C2(A4, "invalid privateKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_box_beforenmbytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_box_beforenm(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function ct2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "publicKey");
              var i3, o3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              t3.length !== o3 && C2(A4, "invalid publicKey length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "privateKey");
              var s3, a3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              e4.length !== a3 && C2(A4, "invalid privateKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_beforenmbytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_beforenm(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function ht2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "publicKey");
              var u3, d3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              n4.length !== d3 && C2(o3, "invalid publicKey length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "privateKey");
              var m3, E3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              A4.length !== E3 && C2(o3, "invalid privateKey length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(0 | a3), v3 = w3.address;
              o3.push(v3);
              var _3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_macbytes()), Q3 = _3.address;
              if (o3.push(Q3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_detached(v3, Q3, s3, a3, 0, c3, u3, m3))) {
                var b3 = g2({ ciphertext: w3, mac: _3 }, i3);
                return I2(o3), b3;
              }
              y2(o3, "invalid usage");
            }
            function gt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "sharedKey");
              var h3, u3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
              n4.length !== u3 && C2(i3, "invalid sharedKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | s3), m3 = d3.address;
              i3.push(m3);
              var E3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_macbytes()), w3 = E3.address;
              if (i3.push(w3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_detached_afternm(m3, w3, o3, s3, 0, a3, h3))) {
                var v3 = g2({ ciphertext: d3, mac: E3 }, A4);
                return I2(i3), v3;
              }
              y2(i3, "invalid usage");
            }
            function ut2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "publicKey");
              var u3, d3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              n4.length !== d3 && C2(o3, "invalid publicKey length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "privateKey");
              var m3, E3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              A4.length !== E3 && C2(o3, "invalid privateKey length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(a3 + r5._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), v3 = w3.address;
              if (o3.push(v3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_easy(v3, s3, a3, 0, c3, u3, m3))) {
                var _3 = g2(w3, i3);
                return I2(o3), _3;
              }
              y2(o3, "invalid usage");
            }
            function lt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "sharedKey");
              var h3, u3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
              n4.length !== u3 && C2(i3, "invalid sharedKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(s3 + r5._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m3 = d3.address;
              if (i3.push(m3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_easy_afternm(m3, o3, s3, 0, a3, h3))) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function ft2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes()), A4 = n4.address;
              e4.push(A4);
              var i3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), o3 = i3.address;
              e4.push(o3), r5._crypto_box_curve25519xchacha20poly1305_keypair(A4, o3);
              var s3 = g2({ publicKey: n4, privateKey: i3, keyType: "curve25519" }, t3);
              return I2(e4), s3;
            }
            function pt2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "ciphertext")), c3 = t3.length;
              s3.push(a3), e4 = B2(s3, e4, "mac");
              var h3, u3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_macbytes();
              e4.length !== u3 && C2(s3, "invalid mac length"), h3 = p2(e4), s3.push(h3), n4 = B2(s3, n4, "nonce");
              var d3, m3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              n4.length !== m3 && C2(s3, "invalid nonce length"), d3 = p2(n4), s3.push(d3), A4 = B2(s3, A4, "publicKey");
              var E3, w3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              A4.length !== w3 && C2(s3, "invalid publicKey length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "privateKey");
              var v3, _3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              i3.length !== _3 && C2(s3, "invalid privateKey length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(0 | c3), b3 = Q3.address;
              if (s3.push(b3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_open_detached(b3, a3, h3, c3, 0, d3, E3, v3))) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "incorrect key pair for the given ciphertext");
            }
            function dt2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "ciphertext")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "mac");
              var c3, h3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_macbytes();
              e4.length !== h3 && C2(o3, "invalid mac length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "nonce");
              var u3, d3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              n4.length !== d3 && C2(o3, "invalid nonce length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "sharedKey");
              var m3, E3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
              A4.length !== E3 && C2(o3, "invalid sharedKey length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(0 | a3), v3 = w3.address;
              if (o3.push(v3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_open_detached_afternm(v3, s3, c3, a3, 0, u3, m3))) {
                var _3 = g2(w3, i3);
                return I2(o3), _3;
              }
              y2(o3, "incorrect secret key for the given ciphertext");
            }
            function It2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3), t3 = B2(o3, t3, "ciphertext");
              var s3, a3 = r5._crypto_box_curve25519xchacha20poly1305_macbytes(), c3 = t3.length;
              c3 < a3 && C2(o3, "ciphertext is too short"), s3 = p2(t3), o3.push(s3), e4 = B2(o3, e4, "nonce");
              var h3, u3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== u3 && C2(o3, "invalid nonce length"), h3 = p2(e4), o3.push(h3), n4 = B2(o3, n4, "publicKey");
              var d3, m3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              n4.length !== m3 && C2(o3, "invalid publicKey length"), d3 = p2(n4), o3.push(d3), A4 = B2(o3, A4, "privateKey");
              var E3, w3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              A4.length !== w3 && C2(o3, "invalid privateKey length"), E3 = p2(A4), o3.push(E3);
              var v3 = new f2(c3 - r5._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), _3 = v3.address;
              if (o3.push(_3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_open_easy(_3, s3, c3, 0, h3, d3, E3))) {
                var Q3 = g2(v3, i3);
                return I2(o3), Q3;
              }
              y2(o3, "incorrect key pair for the given ciphertext");
            }
            function yt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "ciphertext")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "sharedKey");
              var h3, u3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_beforenmbytes();
              n4.length !== u3 && C2(i3, "invalid sharedKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(s3 - r5._crypto_box_curve25519xchacha20poly1305_macbytes() | 0), m3 = d3.address;
              if (i3.push(m3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_open_easy_afternm(m3, o3, s3, 0, a3, h3))) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "incorrect secret key for the given ciphertext");
            }
            function Ct2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "publicKey");
              var s3, a3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              e4.length !== a3 && C2(A4, "invalid publicKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(o3 + r5._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), h3 = c3.address;
              A4.push(h3), r5._crypto_box_curve25519xchacha20poly1305_seal(h3, i3, o3, 0, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function mt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "ciphertext");
              var o3, s3 = r5._crypto_box_curve25519xchacha20poly1305_sealbytes(), a3 = t3.length;
              a3 < s3 && C2(i3, "ciphertext is too short"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "publicKey");
              var c3, h3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes();
              e4.length !== h3 && C2(i3, "invalid publicKey length"), c3 = p2(e4), i3.push(c3), n4 = B2(i3, n4, "secretKey");
              var u3, d3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes();
              n4.length !== d3 && C2(i3, "invalid secretKey length"), u3 = p2(n4), i3.push(u3);
              var y3 = new f2(a3 - r5._crypto_box_curve25519xchacha20poly1305_sealbytes() | 0), m3 = y3.address;
              i3.push(m3), r5._crypto_box_curve25519xchacha20poly1305_seal_open(m3, o3, a3, 0, c3, u3);
              var E3 = g2(y3, A4);
              return I2(i3), E3;
            }
            function Bt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "seed");
              var A4, i3 = 0 | r5._crypto_box_curve25519xchacha20poly1305_seedbytes();
              t3.length !== i3 && C2(n4, "invalid seed length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_publickeybytes()), s3 = o3.address;
              n4.push(s3);
              var a3 = new f2(0 | r5._crypto_box_curve25519xchacha20poly1305_secretkeybytes()), c3 = a3.address;
              if (n4.push(c3), !(0 | r5._crypto_box_curve25519xchacha20poly1305_seed_keypair(s3, c3, A4))) {
                var h3 = { publicKey: g2(o3, e4), privateKey: g2(a3, e4), keyType: "x25519" };
                return I2(n4), h3;
              }
              y2(n4, "invalid usage");
            }
            function Et2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_box_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "publicKey");
              var u3, d3 = 0 | r5._crypto_box_publickeybytes();
              n4.length !== d3 && C2(o3, "invalid publicKey length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "privateKey");
              var m3, E3 = 0 | r5._crypto_box_secretkeybytes();
              A4.length !== E3 && C2(o3, "invalid privateKey length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(0 | a3), v3 = w3.address;
              o3.push(v3);
              var _3 = new f2(0 | r5._crypto_box_macbytes()), Q3 = _3.address;
              if (o3.push(Q3), !(0 | r5._crypto_box_detached(v3, Q3, s3, a3, 0, c3, u3, m3))) {
                var b3 = g2({ ciphertext: w3, mac: _3 }, i3);
                return I2(o3), b3;
              }
              y2(o3, "invalid usage");
            }
            function wt2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_box_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "publicKey");
              var u3, d3 = 0 | r5._crypto_box_publickeybytes();
              n4.length !== d3 && C2(o3, "invalid publicKey length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "privateKey");
              var m3, E3 = 0 | r5._crypto_box_secretkeybytes();
              A4.length !== E3 && C2(o3, "invalid privateKey length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(a3 + r5._crypto_box_macbytes() | 0), v3 = w3.address;
              if (o3.push(v3), !(0 | r5._crypto_box_easy(v3, s3, a3, 0, c3, u3, m3))) {
                var _3 = g2(w3, i3);
                return I2(o3), _3;
              }
              y2(o3, "invalid usage");
            }
            function vt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_box_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "sharedKey");
              var h3, u3 = 0 | r5._crypto_box_beforenmbytes();
              n4.length !== u3 && C2(i3, "invalid sharedKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(s3 + r5._crypto_box_macbytes() | 0), m3 = d3.address;
              if (i3.push(m3), !(0 | r5._crypto_box_easy_afternm(m3, o3, s3, 0, a3, h3))) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function _t2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_box_publickeybytes()), A4 = n4.address;
              e4.push(A4);
              var i3 = new f2(0 | r5._crypto_box_secretkeybytes()), o3 = i3.address;
              if (e4.push(o3), !(0 | r5._crypto_box_keypair(A4, o3))) {
                var s3 = { publicKey: g2(n4, t3), privateKey: g2(i3, t3), keyType: "x25519" };
                return I2(e4), s3;
              }
              y2(e4, "internal error");
            }
            function Qt2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3);
              var a3 = p2(t3 = B2(s3, t3, "ciphertext")), c3 = t3.length;
              s3.push(a3), e4 = B2(s3, e4, "mac");
              var h3, u3 = 0 | r5._crypto_box_macbytes();
              e4.length !== u3 && C2(s3, "invalid mac length"), h3 = p2(e4), s3.push(h3), n4 = B2(s3, n4, "nonce");
              var d3, m3 = 0 | r5._crypto_box_noncebytes();
              n4.length !== m3 && C2(s3, "invalid nonce length"), d3 = p2(n4), s3.push(d3), A4 = B2(s3, A4, "publicKey");
              var E3, w3 = 0 | r5._crypto_box_publickeybytes();
              A4.length !== w3 && C2(s3, "invalid publicKey length"), E3 = p2(A4), s3.push(E3), i3 = B2(s3, i3, "privateKey");
              var v3, _3 = 0 | r5._crypto_box_secretkeybytes();
              i3.length !== _3 && C2(s3, "invalid privateKey length"), v3 = p2(i3), s3.push(v3);
              var Q3 = new f2(0 | c3), b3 = Q3.address;
              if (s3.push(b3), !(0 | r5._crypto_box_open_detached(b3, a3, h3, c3, 0, d3, E3, v3))) {
                var k3 = g2(Q3, o3);
                return I2(s3), k3;
              }
              y2(s3, "incorrect key pair for the given ciphertext");
            }
            function bt2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3), t3 = B2(o3, t3, "ciphertext");
              var s3, a3 = r5._crypto_box_macbytes(), c3 = t3.length;
              c3 < a3 && C2(o3, "ciphertext is too short"), s3 = p2(t3), o3.push(s3), e4 = B2(o3, e4, "nonce");
              var h3, u3 = 0 | r5._crypto_box_noncebytes();
              e4.length !== u3 && C2(o3, "invalid nonce length"), h3 = p2(e4), o3.push(h3), n4 = B2(o3, n4, "publicKey");
              var d3, m3 = 0 | r5._crypto_box_publickeybytes();
              n4.length !== m3 && C2(o3, "invalid publicKey length"), d3 = p2(n4), o3.push(d3), A4 = B2(o3, A4, "privateKey");
              var E3, w3 = 0 | r5._crypto_box_secretkeybytes();
              A4.length !== w3 && C2(o3, "invalid privateKey length"), E3 = p2(A4), o3.push(E3);
              var v3 = new f2(c3 - r5._crypto_box_macbytes() | 0), _3 = v3.address;
              if (o3.push(_3), !(0 | r5._crypto_box_open_easy(_3, s3, c3, 0, h3, d3, E3))) {
                var Q3 = g2(v3, i3);
                return I2(o3), Q3;
              }
              y2(o3, "incorrect key pair for the given ciphertext");
            }
            function kt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "ciphertext")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_box_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "sharedKey");
              var h3, u3 = 0 | r5._crypto_box_beforenmbytes();
              n4.length !== u3 && C2(i3, "invalid sharedKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(s3 - r5._crypto_box_macbytes() | 0), m3 = d3.address;
              if (i3.push(m3), !(0 | r5._crypto_box_open_easy_afternm(m3, o3, s3, 0, a3, h3))) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "incorrect secret key for the given ciphertext");
            }
            function Dt2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "publicKey");
              var s3, a3 = 0 | r5._crypto_box_publickeybytes();
              e4.length !== a3 && C2(A4, "invalid publicKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(o3 + r5._crypto_box_sealbytes() | 0), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_box_seal(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function St2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "ciphertext");
              var o3, s3 = r5._crypto_box_sealbytes(), a3 = t3.length;
              a3 < s3 && C2(i3, "ciphertext is too short"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "publicKey");
              var c3, h3 = 0 | r5._crypto_box_publickeybytes();
              e4.length !== h3 && C2(i3, "invalid publicKey length"), c3 = p2(e4), i3.push(c3), n4 = B2(i3, n4, "privateKey");
              var u3, d3 = 0 | r5._crypto_box_secretkeybytes();
              n4.length !== d3 && C2(i3, "invalid privateKey length"), u3 = p2(n4), i3.push(u3);
              var m3 = new f2(a3 - r5._crypto_box_sealbytes() | 0), E3 = m3.address;
              if (i3.push(E3), !(0 | r5._crypto_box_seal_open(E3, o3, a3, 0, c3, u3))) {
                var w3 = g2(m3, A4);
                return I2(i3), w3;
              }
              y2(i3, "incorrect key pair for the given ciphertext");
            }
            function Nt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "seed");
              var A4, i3 = 0 | r5._crypto_box_seedbytes();
              t3.length !== i3 && C2(n4, "invalid seed length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_box_publickeybytes()), s3 = o3.address;
              n4.push(s3);
              var a3 = new f2(0 | r5._crypto_box_secretkeybytes()), c3 = a3.address;
              if (n4.push(c3), !(0 | r5._crypto_box_seed_keypair(s3, c3, A4))) {
                var h3 = { publicKey: g2(o3, e4), privateKey: g2(a3, e4), keyType: "x25519" };
                return I2(n4), h3;
              }
              y2(n4, "invalid usage");
            }
            function Mt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "p");
              var i3, o3 = 0 | r5._crypto_core_ed25519_bytes();
              t3.length !== o3 && C2(A4, "invalid p length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "q");
              var s3, a3 = 0 | r5._crypto_core_ed25519_bytes();
              e4.length !== a3 && C2(A4, "invalid q length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ed25519_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_core_ed25519_add(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "input is an invalid element");
            }
            function xt2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "r"));
              t3.length, n4.push(A4);
              var i3 = new f2(0 | r5._crypto_core_ed25519_bytes()), o3 = i3.address;
              if (n4.push(o3), !(0 | r5._crypto_core_ed25519_from_hash(o3, A4))) {
                var s3 = g2(i3, e4);
                return I2(n4), s3;
              }
              y2(n4, "invalid usage");
            }
            function Ft2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "r"));
              t3.length, n4.push(A4);
              var i3 = new f2(0 | r5._crypto_core_ed25519_bytes()), o3 = i3.address;
              if (n4.push(o3), !(0 | r5._crypto_core_ed25519_from_uniform(o3, A4))) {
                var s3 = g2(i3, e4);
                return I2(n4), s3;
              }
              y2(n4, "invalid usage");
            }
            function Pt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "repr");
              var A4, i3 = 0 | r5._crypto_core_ed25519_bytes();
              t3.length !== i3 && C2(n4, "invalid repr length"), A4 = p2(t3), n4.push(A4);
              var o3 = 1 == (0 | r5._crypto_core_ed25519_is_valid_point(A4));
              return I2(n4), o3;
            }
            function Tt2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_core_ed25519_bytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_core_ed25519_random(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Rt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ed25519_scalar_add(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function Ut2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ed25519_scalar_complement(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function Gt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_core_ed25519_scalar_invert(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid reciprocate");
            }
            function Ht2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ed25519_scalar_mul(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function Lt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ed25519_scalar_negate(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function Ot2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_core_ed25519_scalar_random(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Yt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "sample");
              var A4, i3 = 0 | r5._crypto_core_ed25519_nonreducedscalarbytes();
              t3.length !== i3 && C2(n4, "invalid sample length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ed25519_scalar_reduce(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function Kt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ed25519_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ed25519_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ed25519_scalar_sub(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function Jt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "p");
              var i3, o3 = 0 | r5._crypto_core_ed25519_bytes();
              t3.length !== o3 && C2(A4, "invalid p length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "q");
              var s3, a3 = 0 | r5._crypto_core_ed25519_bytes();
              e4.length !== a3 && C2(A4, "invalid q length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ed25519_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_core_ed25519_sub(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "input is an invalid element");
            }
            function jt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "input");
              var o3, s3 = 0 | r5._crypto_core_hchacha20_inputbytes();
              t3.length !== s3 && C2(i3, "invalid input length"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "privateKey");
              var a3, c3 = 0 | r5._crypto_core_hchacha20_keybytes();
              e4.length !== c3 && C2(i3, "invalid privateKey length"), a3 = p2(e4), i3.push(a3);
              var h3 = null;
              null != n4 && (h3 = p2(n4 = B2(i3, n4, "constant")), n4.length, i3.push(h3));
              var u3 = new f2(0 | r5._crypto_core_hchacha20_outputbytes()), d3 = u3.address;
              if (i3.push(d3), !(0 | r5._crypto_core_hchacha20(d3, o3, a3, h3))) {
                var m3 = g2(u3, A4);
                return I2(i3), m3;
              }
              y2(i3, "invalid usage");
            }
            function zt2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "input");
              var o3, s3 = 0 | r5._crypto_core_hsalsa20_inputbytes();
              t3.length !== s3 && C2(i3, "invalid input length"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "privateKey");
              var a3, c3 = 0 | r5._crypto_core_hsalsa20_keybytes();
              e4.length !== c3 && C2(i3, "invalid privateKey length"), a3 = p2(e4), i3.push(a3);
              var h3 = null;
              null != n4 && (h3 = p2(n4 = B2(i3, n4, "constant")), n4.length, i3.push(h3));
              var u3 = new f2(0 | r5._crypto_core_hsalsa20_outputbytes()), d3 = u3.address;
              if (i3.push(d3), !(0 | r5._crypto_core_hsalsa20(d3, o3, a3, h3))) {
                var m3 = g2(u3, A4);
                return I2(i3), m3;
              }
              y2(i3, "invalid usage");
            }
            function qt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "p");
              var i3, o3 = 0 | r5._crypto_core_ristretto255_bytes();
              t3.length !== o3 && C2(A4, "invalid p length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "q");
              var s3, a3 = 0 | r5._crypto_core_ristretto255_bytes();
              e4.length !== a3 && C2(A4, "invalid q length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ristretto255_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_core_ristretto255_add(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "input is an invalid element");
            }
            function Xt2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "r"));
              t3.length, n4.push(A4);
              var i3 = new f2(0 | r5._crypto_core_ristretto255_bytes()), o3 = i3.address;
              if (n4.push(o3), !(0 | r5._crypto_core_ristretto255_from_hash(o3, A4))) {
                var s3 = g2(i3, e4);
                return I2(n4), s3;
              }
              y2(n4, "invalid usage");
            }
            function Vt2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "repr");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_bytes();
              t3.length !== i3 && C2(n4, "invalid repr length"), A4 = p2(t3), n4.push(A4);
              var o3 = 1 == (0 | r5._crypto_core_ristretto255_is_valid_point(A4));
              return I2(n4), o3;
            }
            function Wt2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_core_ristretto255_bytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_core_ristretto255_random(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Zt2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ristretto255_scalar_add(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function $t2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ristretto255_scalar_complement(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function te2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_core_ristretto255_scalar_invert(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid reciprocate");
            }
            function ee2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ristretto255_scalar_mul(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function re2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "s");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid s length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ristretto255_scalar_negate(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function ne2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_core_ristretto255_scalar_random(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Ae2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "sample");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_nonreducedscalarbytes();
              t3.length !== i3 && C2(n4, "invalid sample length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), s3 = o3.address;
              n4.push(s3), r5._crypto_core_ristretto255_scalar_reduce(s3, A4);
              var a3 = g2(o3, e4);
              return I2(n4), a3;
            }
            function ie2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "x");
              var i3, o3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid x length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "y");
              var s3, a3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              e4.length !== a3 && C2(A4, "invalid y length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ristretto255_scalarbytes()), h3 = c3.address;
              A4.push(h3), r5._crypto_core_ristretto255_scalar_sub(h3, i3, s3);
              var u3 = g2(c3, n4);
              return I2(A4), u3;
            }
            function oe2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "p");
              var i3, o3 = 0 | r5._crypto_core_ristretto255_bytes();
              t3.length !== o3 && C2(A4, "invalid p length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "q");
              var s3, a3 = 0 | r5._crypto_core_ristretto255_bytes();
              e4.length !== a3 && C2(A4, "invalid q length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_core_ristretto255_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_core_ristretto255_sub(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "input is an invalid element");
            }
            function se2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), m2(i3, t3, "hash_length"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(i3, "hash_length must be an unsigned integer");
              var o3 = p2(e4 = B2(i3, e4, "message")), s3 = e4.length;
              i3.push(o3);
              var a3 = null, c3 = 0;
              null != n4 && (a3 = p2(n4 = B2(i3, n4, "key")), c3 = n4.length, i3.push(a3));
              var h3 = new f2(t3 |= 0), u3 = h3.address;
              if (i3.push(u3), !(0 | r5._crypto_generichash(u3, t3, o3, s3, 0, a3, c3))) {
                var d3 = g2(h3, A4);
                return I2(i3), d3;
              }
              y2(i3, "invalid usage");
            }
            function ae2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3), m2(o3, t3, "subkey_len"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(o3, "subkey_len must be an unsigned integer");
              var s3 = null, a3 = 0;
              null != e4 && (s3 = p2(e4 = B2(o3, e4, "key")), a3 = e4.length, o3.push(s3));
              var c3 = null, h3 = 0;
              null != n4 && (n4 = B2(o3, n4, "id"), h3 = 0 | r5._crypto_generichash_blake2b_saltbytes(), n4.length !== h3 && C2(o3, "invalid id length"), c3 = p2(n4), o3.push(c3));
              var u3 = null, d3 = 0;
              null != A4 && (A4 = B2(o3, A4, "ctx"), d3 = 0 | r5._crypto_generichash_blake2b_personalbytes(), A4.length !== d3 && C2(o3, "invalid ctx length"), u3 = p2(A4), o3.push(u3));
              var E3 = new f2(0 | t3), w3 = E3.address;
              if (o3.push(w3), !(0 | r5._crypto_generichash_blake2b_salt_personal(w3, t3, null, 0, 0, s3, a3, c3, u3))) {
                var v3 = g2(E3, i3);
                return I2(o3), v3;
              }
              y2(o3, "invalid usage");
            }
            function ce2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address"), m2(A4, e4, "hash_length"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(A4, "hash_length must be an unsigned integer");
              var i3 = new f2(e4 |= 0), o3 = i3.address;
              if (A4.push(o3), !(0 | r5._crypto_generichash_final(t3, o3, e4))) {
                var s3 = (r5._free(t3), g2(i3, n4));
                return I2(A4), s3;
              }
              y2(A4, "invalid usage");
            }
            function he2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = null, o3 = 0;
              null != t3 && (i3 = p2(t3 = B2(A4, t3, "key")), o3 = t3.length, A4.push(i3)), m2(A4, e4, "hash_length"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(A4, "hash_length must be an unsigned integer");
              var s3 = new f2(357).address;
              if (!(0 | r5._crypto_generichash_init(s3, i3, o3, e4))) {
                var a3 = s3;
                return I2(A4), a3;
              }
              y2(A4, "invalid usage");
            }
            function ge2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_generichash_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_generichash_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function ue2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_generichash_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function le2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "message")), i3 = t3.length;
              n4.push(A4);
              var o3 = new f2(0 | r5._crypto_hash_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_hash(s3, A4, i3, 0))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid usage");
            }
            function fe2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "message")), i3 = t3.length;
              n4.push(A4);
              var o3 = new f2(0 | r5._crypto_hash_sha256_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_hash_sha256(s3, A4, i3, 0))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid usage");
            }
            function pe2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "state_address");
              var A4 = new f2(0 | r5._crypto_hash_sha256_bytes()), i3 = A4.address;
              if (n4.push(i3), !(0 | r5._crypto_hash_sha256_final(t3, i3))) {
                var o3 = (r5._free(t3), g2(A4, e4));
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function de2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(104).address;
              if (!(0 | r5._crypto_hash_sha256_init(n4))) {
                var A4 = n4;
                return I2(e4), A4;
              }
              y2(e4, "invalid usage");
            }
            function Ie2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_hash_sha256_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function ye2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = p2(t3 = B2(n4, t3, "message")), i3 = t3.length;
              n4.push(A4);
              var o3 = new f2(0 | r5._crypto_hash_sha512_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_hash_sha512(s3, A4, i3, 0))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid usage");
            }
            function Ce2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "state_address");
              var A4 = new f2(0 | r5._crypto_hash_sha512_bytes()), i3 = A4.address;
              if (n4.push(i3), !(0 | r5._crypto_hash_sha512_final(t3, i3))) {
                var o3 = (r5._free(t3), g2(A4, e4));
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function me2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(208).address;
              if (!(0 | r5._crypto_hash_sha512_init(n4))) {
                var A4 = n4;
                return I2(e4), A4;
              }
              y2(e4, "invalid usage");
            }
            function Be2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_hash_sha512_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function Ee2(t3, e4, n4, A4, o3) {
              var s3 = [];
              l2(o3), m2(s3, t3, "subkey_len"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(s3, "subkey_len must be an unsigned integer"), m2(s3, e4, "subkey_id"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(s3, "subkey_id must be an unsigned integer"), "string" != typeof n4 && C2(s3, "ctx must be a string"), n4 = i2(n4 + "\0"), null != c3 && n4.length - 1 !== c3 && C2(s3, "invalid ctx length");
              var a3 = p2(n4), c3 = n4.length - 1;
              s3.push(a3), A4 = B2(s3, A4, "key");
              var h3, u3 = 0 | r5._crypto_kdf_keybytes();
              A4.length !== u3 && C2(s3, "invalid key length"), h3 = p2(A4), s3.push(h3);
              var d3 = new f2(0 | t3), y3 = d3.address;
              s3.push(y3), r5._crypto_kdf_derive_from_key(y3, t3, e4, e4 >>> 24 >>> 8, a3, h3);
              var E3 = g2(d3, o3);
              return I2(s3), E3;
            }
            function we2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_kdf_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_kdf_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function ve2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "clientPublicKey");
              var o3, s3 = 0 | r5._crypto_kx_publickeybytes();
              t3.length !== s3 && C2(i3, "invalid clientPublicKey length"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "clientSecretKey");
              var a3, c3 = 0 | r5._crypto_kx_secretkeybytes();
              e4.length !== c3 && C2(i3, "invalid clientSecretKey length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "serverPublicKey");
              var h3, u3 = 0 | r5._crypto_kx_publickeybytes();
              n4.length !== u3 && C2(i3, "invalid serverPublicKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | r5._crypto_kx_sessionkeybytes()), m3 = d3.address;
              i3.push(m3);
              var E3 = new f2(0 | r5._crypto_kx_sessionkeybytes()), w3 = E3.address;
              if (i3.push(w3), !(0 | r5._crypto_kx_client_session_keys(m3, w3, o3, a3, h3))) {
                var v3 = g2({ sharedRx: d3, sharedTx: E3 }, A4);
                return I2(i3), v3;
              }
              y2(i3, "invalid usage");
            }
            function _e2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_kx_publickeybytes()), A4 = n4.address;
              e4.push(A4);
              var i3 = new f2(0 | r5._crypto_kx_secretkeybytes()), o3 = i3.address;
              if (e4.push(o3), !(0 | r5._crypto_kx_keypair(A4, o3))) {
                var s3 = { publicKey: g2(n4, t3), privateKey: g2(i3, t3), keyType: "x25519" };
                return I2(e4), s3;
              }
              y2(e4, "internal error");
            }
            function Qe2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "seed");
              var A4, i3 = 0 | r5._crypto_kx_seedbytes();
              t3.length !== i3 && C2(n4, "invalid seed length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_kx_publickeybytes()), s3 = o3.address;
              n4.push(s3);
              var a3 = new f2(0 | r5._crypto_kx_secretkeybytes()), c3 = a3.address;
              if (n4.push(c3), !(0 | r5._crypto_kx_seed_keypair(s3, c3, A4))) {
                var h3 = { publicKey: g2(o3, e4), privateKey: g2(a3, e4), keyType: "x25519" };
                return I2(n4), h3;
              }
              y2(n4, "internal error");
            }
            function be2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "serverPublicKey");
              var o3, s3 = 0 | r5._crypto_kx_publickeybytes();
              t3.length !== s3 && C2(i3, "invalid serverPublicKey length"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "serverSecretKey");
              var a3, c3 = 0 | r5._crypto_kx_secretkeybytes();
              e4.length !== c3 && C2(i3, "invalid serverSecretKey length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "clientPublicKey");
              var h3, u3 = 0 | r5._crypto_kx_publickeybytes();
              n4.length !== u3 && C2(i3, "invalid clientPublicKey length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | r5._crypto_kx_sessionkeybytes()), m3 = d3.address;
              i3.push(m3);
              var E3 = new f2(0 | r5._crypto_kx_sessionkeybytes()), w3 = E3.address;
              if (i3.push(w3), !(0 | r5._crypto_kx_server_session_keys(m3, w3, o3, a3, h3))) {
                var v3 = g2({ sharedRx: d3, sharedTx: E3 }, A4);
                return I2(i3), v3;
              }
              y2(i3, "invalid usage");
            }
            function ke2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_onetimeauth_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_onetimeauth_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_onetimeauth(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function De2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "state_address");
              var A4 = new f2(0 | r5._crypto_onetimeauth_bytes()), i3 = A4.address;
              if (n4.push(i3), !(0 | r5._crypto_onetimeauth_final(t3, i3))) {
                var o3 = (r5._free(t3), g2(A4, e4));
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function Se2(t3, e4) {
              var n4 = [];
              l2(e4);
              var A4 = null;
              null != t3 && (A4 = p2(t3 = B2(n4, t3, "key")), t3.length, n4.push(A4));
              var i3 = new f2(144).address;
              if (!(0 | r5._crypto_onetimeauth_init(i3, A4))) {
                var o3 = i3;
                return I2(n4), o3;
              }
              y2(n4, "invalid usage");
            }
            function Ne2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_onetimeauth_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_onetimeauth_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Me2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_onetimeauth_update(t3, i3, o3)) && y2(A4, "invalid usage"), I2(A4);
            }
            function xe2(t3, e4, n4) {
              var A4 = [];
              t3 = B2(A4, t3, "hash");
              var i3, o3 = 0 | r5._crypto_onetimeauth_bytes();
              t3.length !== o3 && C2(A4, "invalid hash length"), i3 = p2(t3), A4.push(i3);
              var s3 = p2(e4 = B2(A4, e4, "message")), a3 = e4.length;
              A4.push(s3), n4 = B2(A4, n4, "key");
              var c3, h3 = 0 | r5._crypto_onetimeauth_keybytes();
              n4.length !== h3 && C2(A4, "invalid key length"), c3 = p2(n4), A4.push(c3);
              var g3 = !(0 | r5._crypto_onetimeauth_verify(i3, s3, a3, 0, c3));
              return I2(A4), g3;
            }
            function Fe2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3), m2(a3, t3, "keyLength"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(a3, "keyLength must be an unsigned integer");
              var c3 = p2(e4 = B2(a3, e4, "password")), h3 = e4.length;
              a3.push(c3), n4 = B2(a3, n4, "salt");
              var u3, d3 = 0 | r5._crypto_pwhash_saltbytes();
              n4.length !== d3 && C2(a3, "invalid salt length"), u3 = p2(n4), a3.push(u3), m2(a3, A4, "opsLimit"), ("number" != typeof A4 || (0 | A4) !== A4 || A4 < 0) && C2(a3, "opsLimit must be an unsigned integer"), m2(a3, i3, "memLimit"), ("number" != typeof i3 || (0 | i3) !== i3 || i3 < 0) && C2(a3, "memLimit must be an unsigned integer"), m2(a3, o3, "algorithm"), ("number" != typeof o3 || (0 | o3) !== o3 || o3 < 0) && C2(a3, "algorithm must be an unsigned integer");
              var E3 = new f2(0 | t3), w3 = E3.address;
              if (a3.push(w3), !(0 | r5._crypto_pwhash(w3, t3, 0, c3, h3, 0, u3, A4, 0, i3, o3))) {
                var v3 = g2(E3, s3);
                return I2(a3), v3;
              }
              y2(a3, "invalid usage");
            }
            function Pe2(t3, e4, n4, A4, i3, o3) {
              var s3 = [];
              l2(o3), m2(s3, t3, "keyLength"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(s3, "keyLength must be an unsigned integer");
              var a3 = p2(e4 = B2(s3, e4, "password")), c3 = e4.length;
              s3.push(a3), n4 = B2(s3, n4, "salt");
              var h3, u3 = 0 | r5._crypto_pwhash_scryptsalsa208sha256_saltbytes();
              n4.length !== u3 && C2(s3, "invalid salt length"), h3 = p2(n4), s3.push(h3), m2(s3, A4, "opsLimit"), ("number" != typeof A4 || (0 | A4) !== A4 || A4 < 0) && C2(s3, "opsLimit must be an unsigned integer"), m2(s3, i3, "memLimit"), ("number" != typeof i3 || (0 | i3) !== i3 || i3 < 0) && C2(s3, "memLimit must be an unsigned integer");
              var d3 = new f2(0 | t3), E3 = d3.address;
              if (s3.push(E3), !(0 | r5._crypto_pwhash_scryptsalsa208sha256(E3, t3, 0, a3, c3, 0, h3, A4, 0, i3))) {
                var w3 = g2(d3, o3);
                return I2(s3), w3;
              }
              y2(s3, "invalid usage");
            }
            function Te2(t3, e4, n4, A4, i3, o3, s3) {
              var a3 = [];
              l2(s3);
              var c3 = p2(t3 = B2(a3, t3, "password")), h3 = t3.length;
              a3.push(c3);
              var u3 = p2(e4 = B2(a3, e4, "salt")), d3 = e4.length;
              a3.push(u3), m2(a3, n4, "opsLimit"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(a3, "opsLimit must be an unsigned integer"), m2(a3, A4, "r"), ("number" != typeof A4 || (0 | A4) !== A4 || A4 < 0) && C2(a3, "r must be an unsigned integer"), m2(a3, i3, "p"), ("number" != typeof i3 || (0 | i3) !== i3 || i3 < 0) && C2(a3, "p must be an unsigned integer"), m2(a3, o3, "keyLength"), ("number" != typeof o3 || (0 | o3) !== o3 || o3 < 0) && C2(a3, "keyLength must be an unsigned integer");
              var E3 = new f2(0 | o3), w3 = E3.address;
              if (a3.push(w3), !(0 | r5._crypto_pwhash_scryptsalsa208sha256_ll(c3, h3, u3, d3, n4, 0, A4, i3, w3, o3))) {
                var v3 = g2(E3, s3);
                return I2(a3), v3;
              }
              y2(a3, "invalid usage");
            }
            function Re2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "password")), s3 = t3.length;
              i3.push(o3), m2(i3, e4, "opsLimit"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(i3, "opsLimit must be an unsigned integer"), m2(i3, n4, "memLimit"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(i3, "memLimit must be an unsigned integer");
              var a3 = new f2(0 | r5._crypto_pwhash_scryptsalsa208sha256_strbytes()).address;
              if (i3.push(a3), !(0 | r5._crypto_pwhash_scryptsalsa208sha256_str(a3, o3, s3, 0, e4, 0, n4))) {
                var c3 = r5.UTF8ToString(a3);
                return I2(i3), c3;
              }
              y2(i3, "invalid usage");
            }
            function Ue2(t3, e4, n4) {
              var A4 = [];
              l2(n4), "string" != typeof t3 && C2(A4, "hashed_password must be a string"), t3 = i2(t3 + "\0"), null != s3 && t3.length - 1 !== s3 && C2(A4, "invalid hashed_password length");
              var o3 = p2(t3), s3 = t3.length - 1;
              A4.push(o3);
              var a3 = p2(e4 = B2(A4, e4, "password")), c3 = e4.length;
              A4.push(a3);
              var h3 = !(0 | r5._crypto_pwhash_scryptsalsa208sha256_str_verify(o3, a3, c3, 0));
              return I2(A4), h3;
            }
            function Ge2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "password")), s3 = t3.length;
              i3.push(o3), m2(i3, e4, "opsLimit"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(i3, "opsLimit must be an unsigned integer"), m2(i3, n4, "memLimit"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(i3, "memLimit must be an unsigned integer");
              var a3 = new f2(0 | r5._crypto_pwhash_strbytes()).address;
              if (i3.push(a3), !(0 | r5._crypto_pwhash_str(a3, o3, s3, 0, e4, 0, n4))) {
                var c3 = r5.UTF8ToString(a3);
                return I2(i3), c3;
              }
              y2(i3, "invalid usage");
            }
            function He2(t3, e4, n4, A4) {
              var o3 = [];
              l2(A4), "string" != typeof t3 && C2(o3, "hashed_password must be a string"), t3 = i2(t3 + "\0"), null != a3 && t3.length - 1 !== a3 && C2(o3, "invalid hashed_password length");
              var s3 = p2(t3), a3 = t3.length - 1;
              o3.push(s3), m2(o3, e4, "opsLimit"), ("number" != typeof e4 || (0 | e4) !== e4 || e4 < 0) && C2(o3, "opsLimit must be an unsigned integer"), m2(o3, n4, "memLimit"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(o3, "memLimit must be an unsigned integer");
              var c3 = !!(0 | r5._crypto_pwhash_str_needs_rehash(s3, e4, 0, n4));
              return I2(o3), c3;
            }
            function Le2(t3, e4, n4) {
              var A4 = [];
              l2(n4), "string" != typeof t3 && C2(A4, "hashed_password must be a string"), t3 = i2(t3 + "\0"), null != s3 && t3.length - 1 !== s3 && C2(A4, "invalid hashed_password length");
              var o3 = p2(t3), s3 = t3.length - 1;
              A4.push(o3);
              var a3 = p2(e4 = B2(A4, e4, "password")), c3 = e4.length;
              A4.push(a3);
              var h3 = !(0 | r5._crypto_pwhash_str_verify(o3, a3, c3, 0));
              return I2(A4), h3;
            }
            function Oe2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "privateKey");
              var i3, o3 = 0 | r5._crypto_scalarmult_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid privateKey length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "publicKey");
              var s3, a3 = 0 | r5._crypto_scalarmult_bytes();
              e4.length !== a3 && C2(A4, "invalid publicKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_scalarmult_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_scalarmult(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "weak public key");
            }
            function Ye2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "privateKey");
              var A4, i3 = 0 | r5._crypto_scalarmult_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid privateKey length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_scalarmult_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_scalarmult_base(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "unknown error");
            }
            function Ke2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "n");
              var i3, o3 = 0 | r5._crypto_scalarmult_ed25519_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid n length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "p");
              var s3, a3 = 0 | r5._crypto_scalarmult_ed25519_bytes();
              e4.length !== a3 && C2(A4, "invalid p length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_scalarmult_ed25519_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_scalarmult_ed25519(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid point or scalar is 0");
            }
            function Je2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "scalar");
              var A4, i3 = 0 | r5._crypto_scalarmult_ed25519_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid scalar length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_scalarmult_ed25519_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_scalarmult_ed25519_base(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "scalar is 0");
            }
            function je2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "scalar");
              var A4, i3 = 0 | r5._crypto_scalarmult_ed25519_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid scalar length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_scalarmult_ed25519_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_scalarmult_ed25519_base_noclamp(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "scalar is 0");
            }
            function ze2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "n");
              var i3, o3 = 0 | r5._crypto_scalarmult_ed25519_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid n length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "p");
              var s3, a3 = 0 | r5._crypto_scalarmult_ed25519_bytes();
              e4.length !== a3 && C2(A4, "invalid p length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_scalarmult_ed25519_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_scalarmult_ed25519_noclamp(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid point or scalar is 0");
            }
            function qe2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "scalar");
              var i3, o3 = 0 | r5._crypto_scalarmult_ristretto255_scalarbytes();
              t3.length !== o3 && C2(A4, "invalid scalar length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "element");
              var s3, a3 = 0 | r5._crypto_scalarmult_ristretto255_bytes();
              e4.length !== a3 && C2(A4, "invalid element length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_scalarmult_ristretto255_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_scalarmult_ristretto255(h3, i3, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "result is identity element");
            }
            function Xe2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "scalar");
              var A4, i3 = 0 | r5._crypto_core_ristretto255_scalarbytes();
              t3.length !== i3 && C2(n4, "invalid scalar length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_core_ristretto255_bytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_scalarmult_ristretto255_base(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "scalar is 0");
            }
            function Ve2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_secretbox_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "key");
              var h3, u3 = 0 | r5._crypto_secretbox_keybytes();
              n4.length !== u3 && C2(i3, "invalid key length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | s3), m3 = d3.address;
              i3.push(m3);
              var E3 = new f2(0 | r5._crypto_secretbox_macbytes()), w3 = E3.address;
              if (i3.push(w3), !(0 | r5._crypto_secretbox_detached(m3, w3, o3, s3, 0, a3, h3))) {
                var v3 = g2({ mac: E3, cipher: d3 }, A4);
                return I2(i3), v3;
              }
              y2(i3, "invalid usage");
            }
            function We2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_secretbox_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "key");
              var h3, u3 = 0 | r5._crypto_secretbox_keybytes();
              n4.length !== u3 && C2(i3, "invalid key length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(s3 + r5._crypto_secretbox_macbytes() | 0), m3 = d3.address;
              if (i3.push(m3), !(0 | r5._crypto_secretbox_easy(m3, o3, s3, 0, a3, h3))) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function Ze2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_secretbox_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_secretbox_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function $e2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "ciphertext")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "mac");
              var c3, h3 = 0 | r5._crypto_secretbox_macbytes();
              e4.length !== h3 && C2(o3, "invalid mac length"), c3 = p2(e4), o3.push(c3), n4 = B2(o3, n4, "nonce");
              var u3, d3 = 0 | r5._crypto_secretbox_noncebytes();
              n4.length !== d3 && C2(o3, "invalid nonce length"), u3 = p2(n4), o3.push(u3), A4 = B2(o3, A4, "key");
              var m3, E3 = 0 | r5._crypto_secretbox_keybytes();
              A4.length !== E3 && C2(o3, "invalid key length"), m3 = p2(A4), o3.push(m3);
              var w3 = new f2(0 | a3), v3 = w3.address;
              if (o3.push(v3), !(0 | r5._crypto_secretbox_open_detached(v3, s3, c3, a3, 0, u3, m3))) {
                var _3 = g2(w3, i3);
                return I2(o3), _3;
              }
              y2(o3, "wrong secret key for the given ciphertext");
            }
            function tr2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), t3 = B2(i3, t3, "ciphertext");
              var o3, s3 = r5._crypto_secretbox_macbytes(), a3 = t3.length;
              a3 < s3 && C2(i3, "ciphertext is too short"), o3 = p2(t3), i3.push(o3), e4 = B2(i3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_secretbox_noncebytes();
              e4.length !== h3 && C2(i3, "invalid nonce length"), c3 = p2(e4), i3.push(c3), n4 = B2(i3, n4, "key");
              var u3, d3 = 0 | r5._crypto_secretbox_keybytes();
              n4.length !== d3 && C2(i3, "invalid key length"), u3 = p2(n4), i3.push(u3);
              var m3 = new f2(a3 - r5._crypto_secretbox_macbytes() | 0), E3 = m3.address;
              if (i3.push(E3), !(0 | r5._crypto_secretbox_open_easy(E3, o3, a3, 0, c3, u3))) {
                var w3 = g2(m3, A4);
                return I2(i3), w3;
              }
              y2(i3, "wrong secret key for the given ciphertext");
            }
            function er2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "header");
              var i3, o3 = 0 | r5._crypto_secretstream_xchacha20poly1305_headerbytes();
              t3.length !== o3 && C2(A4, "invalid header length"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_secretstream_xchacha20poly1305_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(52).address;
              if (!(0 | r5._crypto_secretstream_xchacha20poly1305_init_pull(c3, i3, s3))) {
                var h3 = c3;
                return I2(A4), h3;
              }
              y2(A4, "invalid usage");
            }
            function rr2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "key");
              var A4, i3 = 0 | r5._crypto_secretstream_xchacha20poly1305_keybytes();
              t3.length !== i3 && C2(n4, "invalid key length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(52).address, s3 = new f2(0 | r5._crypto_secretstream_xchacha20poly1305_headerbytes()), a3 = s3.address;
              if (n4.push(a3), !(0 | r5._crypto_secretstream_xchacha20poly1305_init_push(o3, a3, A4))) {
                var c3 = { state: o3, header: g2(s3, e4) };
                return I2(n4), c3;
              }
              y2(n4, "invalid usage");
            }
            function nr2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_secretstream_xchacha20poly1305_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_secretstream_xchacha20poly1305_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Ar2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), m2(i3, t3, "state_address"), e4 = B2(i3, e4, "cipher");
              var o3, s3 = r5._crypto_secretstream_xchacha20poly1305_abytes(), a3 = e4.length;
              a3 < s3 && C2(i3, "cipher is too short"), o3 = p2(e4), i3.push(o3);
              var c3 = null, h3 = 0;
              null != n4 && (c3 = p2(n4 = B2(i3, n4, "ad")), h3 = n4.length, i3.push(c3));
              var u3 = new f2(a3 - r5._crypto_secretstream_xchacha20poly1305_abytes() | 0), y3 = u3.address;
              i3.push(y3);
              var E3, w3 = (E3 = d2(1), i3.push(E3), (w3 = 0 === r5._crypto_secretstream_xchacha20poly1305_pull(t3, y3, 0, E3, o3, a3, 0, c3, h3) && { tag: r5.HEAPU8[E3], message: u3 }) && { message: g2(w3.message, A4), tag: w3.tag });
              return I2(i3), w3;
            }
            function ir2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3), m2(o3, t3, "state_address");
              var s3 = p2(e4 = B2(o3, e4, "message_chunk")), a3 = e4.length;
              o3.push(s3);
              var c3 = null, h3 = 0;
              null != n4 && (c3 = p2(n4 = B2(o3, n4, "ad")), h3 = n4.length, o3.push(c3)), m2(o3, A4, "tag"), ("number" != typeof A4 || (0 | A4) !== A4 || A4 < 0) && C2(o3, "tag must be an unsigned integer");
              var u3 = new f2(a3 + r5._crypto_secretstream_xchacha20poly1305_abytes() | 0), d3 = u3.address;
              if (o3.push(d3), !(0 | r5._crypto_secretstream_xchacha20poly1305_push(t3, d3, 0, s3, a3, 0, c3, h3, 0, A4))) {
                var E3 = g2(u3, i3);
                return I2(o3), E3;
              }
              y2(o3, "invalid usage");
            }
            function or2(t3, e4) {
              var n4 = [];
              return l2(e4), m2(n4, t3, "state_address"), r5._crypto_secretstream_xchacha20poly1305_rekey(t3), I2(n4), true;
            }
            function sr2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_shorthash_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_shorthash_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_shorthash(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function ar2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_shorthash_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_shorthash_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function cr2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "key");
              var s3, a3 = 0 | r5._crypto_shorthash_siphashx24_keybytes();
              e4.length !== a3 && C2(A4, "invalid key length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_shorthash_siphashx24_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_shorthash_siphashx24(h3, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function hr2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "privateKey");
              var s3, a3 = 0 | r5._crypto_sign_secretkeybytes();
              e4.length !== a3 && C2(A4, "invalid privateKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(t3.length + r5._crypto_sign_bytes() | 0), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_sign(h3, null, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function gr2(t3, e4, n4) {
              var A4 = [];
              l2(n4);
              var i3 = p2(t3 = B2(A4, t3, "message")), o3 = t3.length;
              A4.push(i3), e4 = B2(A4, e4, "privateKey");
              var s3, a3 = 0 | r5._crypto_sign_secretkeybytes();
              e4.length !== a3 && C2(A4, "invalid privateKey length"), s3 = p2(e4), A4.push(s3);
              var c3 = new f2(0 | r5._crypto_sign_bytes()), h3 = c3.address;
              if (A4.push(h3), !(0 | r5._crypto_sign_detached(h3, null, i3, o3, 0, s3))) {
                var u3 = g2(c3, n4);
                return I2(A4), u3;
              }
              y2(A4, "invalid usage");
            }
            function ur2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "edPk");
              var A4, i3 = 0 | r5._crypto_sign_publickeybytes();
              t3.length !== i3 && C2(n4, "invalid edPk length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_scalarmult_scalarbytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_sign_ed25519_pk_to_curve25519(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid key");
            }
            function lr2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "edSk");
              var A4, i3 = 0 | r5._crypto_sign_secretkeybytes();
              t3.length !== i3 && C2(n4, "invalid edSk length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_scalarmult_scalarbytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_sign_ed25519_sk_to_curve25519(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid key");
            }
            function fr2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "privateKey");
              var A4, i3 = 0 | r5._crypto_sign_secretkeybytes();
              t3.length !== i3 && C2(n4, "invalid privateKey length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_sign_publickeybytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_sign_ed25519_sk_to_pk(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid key");
            }
            function pr2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "privateKey");
              var A4, i3 = 0 | r5._crypto_sign_secretkeybytes();
              t3.length !== i3 && C2(n4, "invalid privateKey length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_sign_seedbytes()), s3 = o3.address;
              if (n4.push(s3), !(0 | r5._crypto_sign_ed25519_sk_to_seed(s3, A4))) {
                var a3 = g2(o3, e4);
                return I2(n4), a3;
              }
              y2(n4, "invalid key");
            }
            function dr2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address"), e4 = B2(A4, e4, "privateKey");
              var i3, o3 = 0 | r5._crypto_sign_secretkeybytes();
              e4.length !== o3 && C2(A4, "invalid privateKey length"), i3 = p2(e4), A4.push(i3);
              var s3 = new f2(0 | r5._crypto_sign_bytes()), a3 = s3.address;
              if (A4.push(a3), !(0 | r5._crypto_sign_final_create(t3, a3, null, i3))) {
                var c3 = (r5._free(t3), g2(s3, n4));
                return I2(A4), c3;
              }
              y2(A4, "invalid usage");
            }
            function Ir2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), m2(i3, t3, "state_address"), e4 = B2(i3, e4, "signature");
              var o3, s3 = 0 | r5._crypto_sign_bytes();
              e4.length !== s3 && C2(i3, "invalid signature length"), o3 = p2(e4), i3.push(o3), n4 = B2(i3, n4, "publicKey");
              var a3, c3 = 0 | r5._crypto_sign_publickeybytes();
              n4.length !== c3 && C2(i3, "invalid publicKey length"), a3 = p2(n4), i3.push(a3);
              var h3 = !(0 | r5._crypto_sign_final_verify(t3, o3, a3));
              return I2(i3), h3;
            }
            function yr2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(208).address;
              if (!(0 | r5._crypto_sign_init(n4))) {
                var A4 = n4;
                return I2(e4), A4;
              }
              y2(e4, "internal error");
            }
            function Cr2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_sign_publickeybytes()), A4 = n4.address;
              e4.push(A4);
              var i3 = new f2(0 | r5._crypto_sign_secretkeybytes()), o3 = i3.address;
              if (e4.push(o3), !(0 | r5._crypto_sign_keypair(A4, o3))) {
                var s3 = { publicKey: g2(n4, t3), privateKey: g2(i3, t3), keyType: "ed25519" };
                return I2(e4), s3;
              }
              y2(e4, "internal error");
            }
            function mr2(t3, e4, n4) {
              var A4 = [];
              l2(n4), t3 = B2(A4, t3, "signedMessage");
              var i3, o3 = r5._crypto_sign_bytes(), s3 = t3.length;
              s3 < o3 && C2(A4, "signedMessage is too short"), i3 = p2(t3), A4.push(i3), e4 = B2(A4, e4, "publicKey");
              var a3, c3 = 0 | r5._crypto_sign_publickeybytes();
              e4.length !== c3 && C2(A4, "invalid publicKey length"), a3 = p2(e4), A4.push(a3);
              var h3 = new f2(s3 - r5._crypto_sign_bytes() | 0), u3 = h3.address;
              if (A4.push(u3), !(0 | r5._crypto_sign_open(u3, null, i3, s3, 0, a3))) {
                var d3 = g2(h3, n4);
                return I2(A4), d3;
              }
              y2(A4, "incorrect signature for the given public key");
            }
            function Br2(t3, e4) {
              var n4 = [];
              l2(e4), t3 = B2(n4, t3, "seed");
              var A4, i3 = 0 | r5._crypto_sign_seedbytes();
              t3.length !== i3 && C2(n4, "invalid seed length"), A4 = p2(t3), n4.push(A4);
              var o3 = new f2(0 | r5._crypto_sign_publickeybytes()), s3 = o3.address;
              n4.push(s3);
              var a3 = new f2(0 | r5._crypto_sign_secretkeybytes()), c3 = a3.address;
              if (n4.push(c3), !(0 | r5._crypto_sign_seed_keypair(s3, c3, A4))) {
                var h3 = { publicKey: g2(o3, e4), privateKey: g2(a3, e4), keyType: "ed25519" };
                return I2(n4), h3;
              }
              y2(n4, "invalid usage");
            }
            function Er2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "state_address");
              var i3 = p2(e4 = B2(A4, e4, "message_chunk")), o3 = e4.length;
              A4.push(i3), !!(0 | r5._crypto_sign_update(t3, i3, o3, 0)) && y2(A4, "invalid usage"), I2(A4);
            }
            function wr2(t3, e4, n4) {
              var A4 = [];
              t3 = B2(A4, t3, "signature");
              var i3, o3 = 0 | r5._crypto_sign_bytes();
              t3.length !== o3 && C2(A4, "invalid signature length"), i3 = p2(t3), A4.push(i3);
              var s3 = p2(e4 = B2(A4, e4, "message")), a3 = e4.length;
              A4.push(s3), n4 = B2(A4, n4, "publicKey");
              var c3, h3 = 0 | r5._crypto_sign_publickeybytes();
              n4.length !== h3 && C2(A4, "invalid publicKey length"), c3 = p2(n4), A4.push(c3);
              var g3 = !(0 | r5._crypto_sign_verify_detached(i3, s3, a3, 0, c3));
              return I2(A4), g3;
            }
            function vr2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4), m2(i3, t3, "outLength"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(i3, "outLength must be an unsigned integer"), e4 = B2(i3, e4, "key");
              var o3, s3 = 0 | r5._crypto_stream_chacha20_keybytes();
              e4.length !== s3 && C2(i3, "invalid key length"), o3 = p2(e4), i3.push(o3), n4 = B2(i3, n4, "nonce");
              var a3, c3 = 0 | r5._crypto_stream_chacha20_noncebytes();
              n4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(n4), i3.push(a3);
              var h3 = new f2(0 | t3), u3 = h3.address;
              i3.push(u3), r5._crypto_stream_chacha20(u3, t3, 0, a3, o3);
              var d3 = g2(h3, A4);
              return I2(i3), d3;
            }
            function _r2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "input_message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_stream_chacha20_ietf_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "key");
              var h3, u3 = 0 | r5._crypto_stream_chacha20_ietf_keybytes();
              n4.length !== u3 && C2(i3, "invalid key length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | s3), m3 = d3.address;
              if (i3.push(m3), 0 === r5._crypto_stream_chacha20_ietf_xor(m3, o3, s3, 0, a3, h3)) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function Qr2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "input_message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_stream_chacha20_ietf_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), m2(o3, n4, "nonce_increment"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(o3, "nonce_increment must be an unsigned integer"), A4 = B2(o3, A4, "key");
              var u3, d3 = 0 | r5._crypto_stream_chacha20_ietf_keybytes();
              A4.length !== d3 && C2(o3, "invalid key length"), u3 = p2(A4), o3.push(u3);
              var E3 = new f2(0 | a3), w3 = E3.address;
              if (o3.push(w3), 0 === r5._crypto_stream_chacha20_ietf_xor_ic(w3, s3, a3, 0, c3, n4, u3)) {
                var v3 = g2(E3, i3);
                return I2(o3), v3;
              }
              y2(o3, "invalid usage");
            }
            function br2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_stream_chacha20_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_stream_chacha20_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function kr2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "input_message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_stream_chacha20_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "key");
              var h3, u3 = 0 | r5._crypto_stream_chacha20_keybytes();
              n4.length !== u3 && C2(i3, "invalid key length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | s3), m3 = d3.address;
              if (i3.push(m3), 0 === r5._crypto_stream_chacha20_xor(m3, o3, s3, 0, a3, h3)) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function Dr2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "input_message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_stream_chacha20_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), m2(o3, n4, "nonce_increment"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(o3, "nonce_increment must be an unsigned integer"), A4 = B2(o3, A4, "key");
              var u3, d3 = 0 | r5._crypto_stream_chacha20_keybytes();
              A4.length !== d3 && C2(o3, "invalid key length"), u3 = p2(A4), o3.push(u3);
              var E3 = new f2(0 | a3), w3 = E3.address;
              if (o3.push(w3), 0 === r5._crypto_stream_chacha20_xor_ic(w3, s3, a3, 0, c3, n4, 0, u3)) {
                var v3 = g2(E3, i3);
                return I2(o3), v3;
              }
              y2(o3, "invalid usage");
            }
            function Sr2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_stream_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_stream_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Nr2(t3) {
              var e4 = [];
              l2(t3);
              var n4 = new f2(0 | r5._crypto_stream_xchacha20_keybytes()), A4 = n4.address;
              e4.push(A4), r5._crypto_stream_xchacha20_keygen(A4);
              var i3 = g2(n4, t3);
              return I2(e4), i3;
            }
            function Mr2(t3, e4, n4, A4) {
              var i3 = [];
              l2(A4);
              var o3 = p2(t3 = B2(i3, t3, "input_message")), s3 = t3.length;
              i3.push(o3), e4 = B2(i3, e4, "nonce");
              var a3, c3 = 0 | r5._crypto_stream_xchacha20_noncebytes();
              e4.length !== c3 && C2(i3, "invalid nonce length"), a3 = p2(e4), i3.push(a3), n4 = B2(i3, n4, "key");
              var h3, u3 = 0 | r5._crypto_stream_xchacha20_keybytes();
              n4.length !== u3 && C2(i3, "invalid key length"), h3 = p2(n4), i3.push(h3);
              var d3 = new f2(0 | s3), m3 = d3.address;
              if (i3.push(m3), 0 === r5._crypto_stream_xchacha20_xor(m3, o3, s3, 0, a3, h3)) {
                var E3 = g2(d3, A4);
                return I2(i3), E3;
              }
              y2(i3, "invalid usage");
            }
            function xr2(t3, e4, n4, A4, i3) {
              var o3 = [];
              l2(i3);
              var s3 = p2(t3 = B2(o3, t3, "input_message")), a3 = t3.length;
              o3.push(s3), e4 = B2(o3, e4, "nonce");
              var c3, h3 = 0 | r5._crypto_stream_xchacha20_noncebytes();
              e4.length !== h3 && C2(o3, "invalid nonce length"), c3 = p2(e4), o3.push(c3), m2(o3, n4, "nonce_increment"), ("number" != typeof n4 || (0 | n4) !== n4 || n4 < 0) && C2(o3, "nonce_increment must be an unsigned integer"), A4 = B2(o3, A4, "key");
              var u3, d3 = 0 | r5._crypto_stream_xchacha20_keybytes();
              A4.length !== d3 && C2(o3, "invalid key length"), u3 = p2(A4), o3.push(u3);
              var E3 = new f2(0 | a3), w3 = E3.address;
              if (o3.push(w3), 0 === r5._crypto_stream_xchacha20_xor_ic(w3, s3, a3, 0, c3, n4, 0, u3)) {
                var v3 = g2(E3, i3);
                return I2(o3), v3;
              }
              y2(o3, "invalid usage");
            }
            function Fr2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "length"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(n4, "length must be an unsigned integer");
              var A4 = new f2(0 | t3), i3 = A4.address;
              n4.push(i3), r5._randombytes_buf(i3, t3);
              var o3 = g2(A4, e4);
              return I2(n4), o3;
            }
            function Pr2(t3, e4, n4) {
              var A4 = [];
              l2(n4), m2(A4, t3, "length"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(A4, "length must be an unsigned integer"), e4 = B2(A4, e4, "seed");
              var i3, o3 = 0 | r5._randombytes_seedbytes();
              e4.length !== o3 && C2(A4, "invalid seed length"), i3 = p2(e4), A4.push(i3);
              var s3 = new f2(0 | t3), a3 = s3.address;
              A4.push(a3), r5._randombytes_buf_deterministic(a3, t3, i3);
              var c3 = g2(s3, n4);
              return I2(A4), c3;
            }
            function Tr2(t3) {
              l2(t3), r5._randombytes_close();
            }
            function Rr2(t3) {
              l2(t3);
              var e4 = r5._randombytes_random() >>> 0;
              return I2([]), e4;
            }
            function Ur2(t3, e4) {
              var n4 = [];
              l2(e4);
              for (var A4 = r5._malloc(24), i3 = 0; i3 < 6; i3++)
                r5.setValue(A4 + 4 * i3, r5.Runtime.addFunction(t3[["implementation_name", "random", "stir", "uniform", "buf", "close"][i3]]), "i32");
              !!(0 | r5._randombytes_set_implementation(A4)) && y2(n4, "unsupported implementation"), I2(n4);
            }
            function Gr2(t3) {
              l2(t3), r5._randombytes_stir();
            }
            function Hr2(t3, e4) {
              var n4 = [];
              l2(e4), m2(n4, t3, "upper_bound"), ("number" != typeof t3 || (0 | t3) !== t3 || t3 < 0) && C2(n4, "upper_bound must be an unsigned integer");
              var A4 = r5._randombytes_uniform(t3) >>> 0;
              return I2(n4), A4;
            }
            function Lr2() {
              var t3 = r5._sodium_version_string(), e4 = r5.UTF8ToString(t3);
              return I2([]), e4;
            }
            return f2.prototype.to_Uint8Array = function() {
              var t3 = new Uint8Array(this.length);
              return t3.set(r5.HEAPU8.subarray(this.address, this.address + this.length)), t3;
            }, t2.add = function(t3, e4) {
              if (!(t3 instanceof Uint8Array && e4 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can added");
              var r6 = t3.length, n4 = 0, A4 = 0;
              if (e4.length != t3.length)
                throw new TypeError("Arguments must have the same length");
              for (A4 = 0; A4 < r6; A4++)
                n4 >>= 8, n4 += t3[A4] + e4[A4], t3[A4] = 255 & n4;
            }, t2.base64_variants = a2, t2.compare = function(t3, e4) {
              if (!(t3 instanceof Uint8Array && e4 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can be compared");
              if (t3.length !== e4.length)
                throw new TypeError("Only instances of identical length can be compared");
              for (var r6 = 0, n4 = 1, A4 = t3.length; A4-- > 0; )
                r6 |= e4[A4] - t3[A4] >> 8 & n4, n4 &= (e4[A4] ^ t3[A4]) - 1 >> 8;
              return r6 + r6 + n4 - 1;
            }, t2.from_base64 = function(t3, e4) {
              e4 = c2(e4);
              var n4, A4 = [], i3 = new f2(3 * (t3 = B2(A4, t3, "input")).length / 4), o3 = p2(t3), s3 = d2(4), a3 = d2(4);
              return A4.push(o3), A4.push(i3.address), A4.push(i3.result_bin_len_p), A4.push(i3.b64_end_p), 0 !== r5._sodium_base642bin(i3.address, i3.length, o3, t3.length, 0, s3, a3, e4) && y2(A4, "invalid input"), r5.getValue(a3, "i32") - o3 !== t3.length && y2(A4, "incomplete input"), i3.length = r5.getValue(s3, "i32"), n4 = i3.to_Uint8Array(), I2(A4), n4;
            }, t2.from_hex = function(t3) {
              var e4, n4 = [], A4 = new f2((t3 = B2(n4, t3, "input")).length / 2), i3 = p2(t3), o3 = d2(4);
              return n4.push(i3), n4.push(A4.address), n4.push(A4.hex_end_p), 0 !== r5._sodium_hex2bin(A4.address, A4.length, i3, t3.length, 0, 0, o3) && y2(n4, "invalid input"), r5.getValue(o3, "i32") - i3 !== t3.length && y2(n4, "incomplete input"), e4 = A4.to_Uint8Array(), I2(n4), e4;
            }, t2.from_string = i2, t2.increment = function(t3) {
              if (!(t3 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can be incremented");
              for (var e4 = 256, r6 = 0, n4 = t3.length; r6 < n4; r6++)
                e4 >>= 8, e4 += t3[r6], t3[r6] = 255 & e4;
            }, t2.is_zero = function(t3) {
              if (!(t3 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can be checked");
              for (var e4 = 0, r6 = 0, n4 = t3.length; r6 < n4; r6++)
                e4 |= t3[r6];
              return 0 === e4;
            }, t2.libsodium = e3, t2.memcmp = function(t3, e4) {
              if (!(t3 instanceof Uint8Array && e4 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can be compared");
              if (t3.length !== e4.length)
                throw new TypeError("Only instances of identical length can be compared");
              for (var r6 = 0, n4 = 0, A4 = t3.length; n4 < A4; n4++)
                r6 |= t3[n4] ^ e4[n4];
              return 0 === r6;
            }, t2.memzero = function(t3) {
              if (!(t3 instanceof Uint8Array))
                throw new TypeError("Only Uint8Array instances can be wiped");
              for (var e4 = 0, r6 = t3.length; e4 < r6; e4++)
                t3[e4] = 0;
            }, t2.output_formats = function() {
              return ["uint8array", "text", "hex", "base64"];
            }, t2.pad = function(t3, e4) {
              if (!(t3 instanceof Uint8Array))
                throw new TypeError("buffer must be a Uint8Array");
              if ((e4 |= 0) <= 0)
                throw new Error("block size must be > 0");
              var n4, A4 = [], i3 = d2(4), o3 = 1, s3 = 0, a3 = 0 | t3.length, c3 = new f2(a3 + e4);
              A4.push(i3), A4.push(c3.address);
              for (var h3 = c3.address, g3 = c3.address + a3 + e4; h3 < g3; h3++)
                r5.HEAPU8[h3] = t3[s3], s3 += o3 = 1 & ~((65535 & ((a3 -= o3) >>> 48 | a3 >>> 32 | a3 >>> 16 | a3)) - 1 >> 16);
              return 0 !== r5._sodium_pad(i3, c3.address, t3.length, e4, c3.length) && y2(A4, "internal error"), c3.length = r5.getValue(i3, "i32"), n4 = c3.to_Uint8Array(), I2(A4), n4;
            }, t2.unpad = function(t3, e4) {
              if (!(t3 instanceof Uint8Array))
                throw new TypeError("buffer must be a Uint8Array");
              if ((e4 |= 0) <= 0)
                throw new Error("block size must be > 0");
              var n4 = [], A4 = p2(t3), i3 = d2(4);
              return n4.push(A4), n4.push(i3), 0 !== r5._sodium_unpad(i3, A4, t3.length, e4) && y2(n4, "unsupported/invalid padding"), t3 = (t3 = new Uint8Array(t3)).subarray(0, r5.getValue(i3, "i32")), I2(n4), t3;
            }, t2.ready = A3, t2.symbols = function() {
              return Object.keys(t2).sort();
            }, t2.to_base64 = h2, t2.to_hex = s2, t2.to_string = o2, t2;
          }
          var A2 = "object" == typeof r4.sodium && "function" == typeof r4.sodium.onload ? r4.sodium.onload : null;
          "string" != typeof e2.nodeName ? n2(e2, (Lu || (Lu = 1, function(e3, r5) {
            !function(n3) {
              function A3(r6) {
                var n4;
                void 0 === (n4 = r6) && (n4 = {});
                var A4 = n4;
                "object" != typeof A4.sodium && ("object" == typeof t ? A4 = t : "object" == typeof window && (A4 = window));
                var i2 = n4;
                return n4.ready = new Promise(function(t2, r7) {
                  (o2 = i2).onAbort = r7, o2.print = function(t3) {
                  }, o2.printErr = function(t3) {
                  }, o2.onRuntimeInitialized = function() {
                    try {
                      o2._crypto_secretbox_keybytes(), t2();
                    } catch (t3) {
                      r7(t3);
                    }
                  }, o2.useBackupModule = function() {
                    return new Promise(function(t3, r8) {
                      (o3 = {}).onAbort = r8, o3.onRuntimeInitialized = function() {
                        Object.keys(i2).forEach(function(t4) {
                          "getRandomValue" !== t4 && delete i2[t4];
                        }), Object.keys(o3).forEach(function(t4) {
                          i2[t4] = o3[t4];
                        }), t3();
                      };
                      var n6, A6, o3 = void 0 !== o3 ? o3 : {}, s3 = Object.assign({}, o3), a3 = "object" == typeof window, c3 = "function" == typeof importScripts, h3 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, g3 = "";
                      if (h3) {
                        var u3 = T, l3 = T;
                        g3 = c3 ? l3.dirname(g3) + "/" : __dirname + "/", n6 = (t4, e4) => (t4 = function(t5) {
                          return t5.startsWith("file://");
                        }(t4) ? new URL(t4) : l3.normalize(t4), u3.readFileSync(t4, e4 ? void 0 : "utf8")), A6 = (t4) => {
                          var e4 = n6(t4, true);
                          return e4.buffer || (e4 = new Uint8Array(e4)), e4;
                        }, !o3.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), e3.exports = o3, o3.inspect = () => "[Emscripten Module object]";
                      } else
                        (a3 || c3) && (c3 ? g3 = self.location.href : "undefined" != typeof document && document.currentScript && (g3 = document.currentScript.src), g3 = 0 !== g3.indexOf("blob:") ? g3.substr(0, g3.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", n6 = (t4) => {
                          var e4 = new XMLHttpRequest();
                          return e4.open("GET", t4, false), e4.send(null), e4.responseText;
                        }, c3 && (A6 = (t4) => {
                          var e4 = new XMLHttpRequest();
                          return e4.open("GET", t4, false), e4.responseType = "arraybuffer", e4.send(null), new Uint8Array(e4.response);
                        }));
                      o3.print;
                      var f3, p3 = o3.printErr || void 0;
                      Object.assign(o3, s3), s3 = null, o3.arguments && o3.arguments, o3.thisProgram && o3.thisProgram, o3.quit && o3.quit, o3.wasmBinary && (f3 = o3.wasmBinary), o3.noExitRuntime;
                      var d3, I3 = { Memory: function(t4) {
                        this.buffer = new ArrayBuffer(65536 * t4.initial);
                      }, Module: function(t4) {
                      }, Instance: function(t4, e4) {
                        this.exports = function(t5) {
                          for (var e5, r9 = new Uint8Array(123), n7 = 25; n7 >= 0; --n7)
                            r9[48 + n7] = 52 + n7, r9[65 + n7] = n7, r9[97 + n7] = 26 + n7;
                          function A7(t6, e6, n8) {
                            for (var A8, i4, o4 = 0, s4 = e6, a4 = n8.length, c4 = e6 + (3 * a4 >> 2) - ("=" == n8[a4 - 2]) - ("=" == n8[a4 - 1]); o4 < a4; o4 += 4)
                              A8 = r9[n8.charCodeAt(o4 + 1)], i4 = r9[n8.charCodeAt(o4 + 2)], t6[s4++] = r9[n8.charCodeAt(o4)] << 2 | A8 >> 4, s4 < c4 && (t6[s4++] = A8 << 4 | i4 >> 2), s4 < c4 && (t6[s4++] = i4 << 6 | r9[n8.charCodeAt(o4 + 3)]);
                          }
                          function i3() {
                            throw new Error("abort");
                          }
                          return r9[43] = 62, r9[47] = 63, function(t6) {
                            var r10 = t6.a, n8 = r10.a, o4 = n8.buffer;
                            n8.grow = function(t7) {
                              t7 |= 0;
                              var r11 = 0 | ye2(), A8 = r11 + t7 | 0;
                              if (r11 < A8 && A8 < 65536) {
                                var i4 = new ArrayBuffer(g4(A8, 65536));
                                new Int8Array(i4).set(s4), s4 = new Int8Array(i4), a4 = new Int32Array(i4), c4 = new Uint8Array(i4), h4 = new Uint32Array(i4), o4 = i4, n8.buffer = o4, e5 = c4;
                              }
                              return r11;
                            };
                            var s4 = new Int8Array(o4), a4 = new Int32Array(o4), c4 = new Uint8Array(o4), h4 = new Uint32Array(o4), g4 = Math.imul, u4 = Math.clz32, l4 = r10.b, f4 = r10.c, p4 = r10.d, d4 = r10.e, I4 = 102096, y4 = 0;
                            function C4(t7, e6) {
                              var r11, n9, A8, i4, o5, a5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0, Z3 = 0, $3 = 0, tt3 = 0, et3 = 0, rt3 = 0, nt3 = 0, At3 = 0, it3 = 0, ot3 = 0, st3 = 0, at3 = 0, ct3 = 0, ht3 = 0, gt3 = 0, ut3 = 0, lt3 = 0, pt3 = 0, dt3 = 0, It3 = 0, yt3 = 0, Ct3 = 0, mt3 = 0, Bt3 = 0, Et3 = 0, wt3 = 0, vt3 = 0, _t3 = 0, Qt3 = 0, bt3 = 0, kt3 = 0, Dt3 = 0, St3 = 0;
                              lt3 = c4[e6 + 40 | 0] | c4[e6 + 41 | 0] << 8 | c4[e6 + 42 | 0] << 16 | c4[e6 + 43 | 0] << 24, dt3 = a5 = c4[e6 + 44 | 0] | c4[e6 + 45 | 0] << 8 | c4[e6 + 46 | 0] << 16 | c4[e6 + 47 | 0] << 24, rt3 = c4[e6 + 104 | 0] | c4[e6 + 105 | 0] << 8 | c4[e6 + 106 | 0] << 16 | c4[e6 + 107 | 0] << 24, It3 = a5 = c4[e6 + 108 | 0] | c4[e6 + 109 | 0] << 8 | c4[e6 + 110 | 0] << 16 | c4[e6 + 111 | 0] << 24, a5 = c4[e6 + 68 | 0] | c4[e6 + 69 | 0] << 8 | c4[e6 + 70 | 0] << 16 | c4[e6 + 71 | 0] << 24, j5 = c4[e6 + 64 | 0] | c4[e6 + 65 | 0] << 8 | c4[e6 + 66 | 0] << 16 | c4[e6 + 67 | 0] << 24, At3 = a5, bt3 = a5 = c4[e6 + 36 | 0] | c4[e6 + 37 | 0] << 8 | c4[e6 + 38 | 0] << 16 | c4[e6 + 39 | 0] << 24, Q5 = a5, at3 = c4[e6 + 120 | 0] | c4[e6 + 121 | 0] << 8 | c4[e6 + 122 | 0] << 16 | c4[e6 + 123 | 0] << 24, Bt3 = a5 = c4[e6 + 124 | 0] | c4[e6 + 125 | 0] << 8 | c4[e6 + 126 | 0] << 16 | c4[e6 + 127 | 0] << 24, A8 = a5 = c4[e6 + 92 | 0] | c4[e6 + 93 | 0] << 8 | c4[e6 + 94 | 0] << 16 | c4[e6 + 95 | 0] << 24, r11 = c4[e6 + 88 | 0] | c4[e6 + 89 | 0] << 8 | c4[e6 + 90 | 0] << 16 | c4[e6 + 91 | 0] << 24, J5 = a5, st3 = c4[e6 + 80 | 0] | c4[e6 + 81 | 0] << 8 | c4[e6 + 82 | 0] << 16 | c4[e6 + 83 | 0] << 24, Ct3 = a5 = c4[e6 + 84 | 0] | c4[e6 + 85 | 0] << 8 | c4[e6 + 86 | 0] << 16 | c4[e6 + 87 | 0] << 24, z4 = a5, it3 = c4[t7 + 16 | 0] | c4[t7 + 17 | 0] << 8 | c4[t7 + 18 | 0] << 16 | c4[t7 + 19 | 0] << 24, a5 = (ht3 = c4[t7 + 52 | 0] | c4[t7 + 53 | 0] << 8 | c4[t7 + 54 | 0] << 16 | c4[t7 + 55 | 0] << 24) + Q5 | 0, Y5 = (ct3 = c4[t7 + 48 | 0] | c4[t7 + 49 | 0] << 8 | c4[t7 + 50 | 0] << 16 | c4[t7 + 51 | 0] << 24) + (gt3 = c4[e6 + 32 | 0] | c4[e6 + 33 | 0] << 8 | c4[e6 + 34 | 0] << 16 | c4[e6 + 35 | 0] << 24) | 0, a5 = (c4[t7 + 20 | 0] | c4[t7 + 21 | 0] << 8 | c4[t7 + 22 | 0] << 16 | c4[t7 + 23 | 0] << 24) + (ct3 >>> 0 > Y5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (it3 = (h5 = Y5) >>> 0 > (Y5 = Y5 + it3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + dt3 | 0, ot3 = pt3 = Y5 + lt3 | 0, pt3 = a5 = pt3 >>> 0 < Y5 >>> 0 ? a5 + 1 | 0 : a5, Y5 = ft2(Y5 ^ (c4[t7 + 80 | 0] | c4[t7 + 81 | 0] << 8 | c4[t7 + 82 | 0] << 16 | c4[t7 + 83 | 0] << 24) ^ -79577749, it3 ^ (c4[t7 + 84 | 0] | c4[t7 + 85 | 0] << 8 | c4[t7 + 86 | 0] << 16 | c4[t7 + 87 | 0] << 24) ^ 528734635, 32), vt3 = a5 = y4, a5 = a5 + 1013904242 | 0, it3 = Y5, V3 = a5 = (Y5 = Y5 - 23791573 | 0) >>> 0 < 4271175723 ? a5 + 1 | 0 : a5, ht3 = ft2(Y5 ^ ct3, a5 ^ ht3, 40), a5 = (a5 = pt3) + (pt3 = y4) | 0, ct3 = ft2(it3 ^ (I5 = ct3 = ht3 + ot3 | 0), vt3 ^ (C5 = I5 >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = V3 + (L5 = y4) | 0, w5 = a5 = (ct3 = Y5 + (m5 = ct3) | 0) >>> 0 < Y5 >>> 0 ? a5 + 1 | 0 : a5, ct3 = a5 = ft2(ht3 ^ (E5 = ct3), pt3 ^ a5, 1), V3 = Y5 = y4, pt3 = c4[e6 + 24 | 0] | c4[e6 + 25 | 0] << 8 | c4[e6 + 26 | 0] << 16 | c4[e6 + 27 | 0] << 24, vt3 = a5 = c4[e6 + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24, ut3 = c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24, Y5 = (ht3 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24) + (it3 = c4[t7 + 40 | 0] | c4[t7 + 41 | 0] << 8 | c4[t7 + 42 | 0] << 16 | c4[t7 + 43 | 0] << 24) | 0, a5 = (kt3 = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24) + (St3 = c4[t7 + 44 | 0] | c4[t7 + 45 | 0] << 8 | c4[t7 + 46 | 0] << 16 | c4[t7 + 47 | 0] << 24) | 0, a5 = (c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24) + (Y5 >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = vt3 + (ot3 = (h5 = Y5) >>> 0 > (Y5 = Y5 + ut3 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (ut3 = Y5 + pt3 | 0) >>> 0 < Y5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(Y5 ^ (c4[t7 + 72 | 0] | c4[t7 + 73 | 0] << 8 | c4[t7 + 74 | 0] << 16 | c4[t7 + 75 | 0] << 24) ^ 725511199, ot3 ^ (c4[t7 + 76 | 0] | c4[t7 + 77 | 0] << 8 | c4[t7 + 78 | 0] << 16 | c4[t7 + 79 | 0] << 24) ^ -1694144372, 32), f5 = ft2(it3 ^ (g5 = h5 - 2067093701 | 0), St3 ^ (G5 = (F5 = Y5 = y4) - ((h5 >>> 0 < 2067093701) + 1150833018 | 0) | 0), 40), a5 = (O5 = y4) + a5 | 0, a5 = (x5 = (v5 = Y5 = f5 + ut3 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5) + V3 | 0, a5 = (v5 >>> 0 > (Y5 = v5 + ct3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + z4 | 0, a5 = (it3 = (u5 = Y5) >>> 0 > (Y5 = Y5 + st3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + J5 | 0, R5 = J5 = Y5 + r11 | 0, d5 = a5 = J5 >>> 0 < Y5 >>> 0 ? a5 + 1 | 0 : a5, B5 = ct3, Et3 = V3, V3 = Y5, ot3 = it3, ct3 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, Y5 = a5 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, St3 = a5 = c4[0 | t7] | c4[t7 + 1 | 0] << 8 | c4[t7 + 2 | 0] << 16 | c4[t7 + 3 | 0] << 24, i4 = it3 = c4[t7 + 4 | 0] | c4[t7 + 5 | 0] << 8 | c4[t7 + 6 | 0] << 16 | c4[t7 + 7 | 0] << 24, z4 = a5, a5 = (_t3 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24) + (l5 = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24) | 0, a5 = i4 + ((J5 = c4[t7 + 32 | 0] | c4[t7 + 33 | 0] << 8 | c4[t7 + 34 | 0] << 16 | c4[t7 + 35 | 0] << 24) >>> 0 > (u5 = J5 + (it3 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24) | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (ut3 = (z4 = u5 + z4 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) + Y5 | 0, mt3 = u5 = z4 + ct3 | 0, u5 = a5 = u5 >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5, p5 = J5, J5 = ft2(z4 ^ (c4[0 | (a5 = t7 - -64 | 0)] | c4[a5 + 1 | 0] << 8 | c4[a5 + 2 | 0] << 16 | c4[a5 + 3 | 0] << 24) ^ -1377402159, ut3 ^ (c4[a5 + 4 | 0] | c4[a5 + 5 | 0] << 8 | c4[a5 + 6 | 0] << 16 | c4[a5 + 7 | 0] << 24) ^ 1359893119, 32), ut3 = a5 = y4, a5 = a5 + 1779033703 | 0, z4 = J5, S5 = a5 = (J5 = J5 - 205731576 | 0) >>> 0 < 4089235720 ? a5 + 1 | 0 : a5, l5 = ft2(p5 ^ (_5 = J5), a5 ^ l5, 40), a5 = (T3 = y4) + u5 | 0, p5 = ft2(z4 ^ (u5 = J5 = l5 + mt3 | 0), ut3 ^ (b5 = l5 >>> 0 > u5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(p5 ^ V3, (Z3 = y4) ^ ot3, 32), X3 = J5 = y4, U5 = a5, n9 = a5 = c4[e6 + 60 | 0] | c4[e6 + 61 | 0] << 8 | c4[e6 + 62 | 0] << 16 | c4[e6 + 63 | 0] << 24, ut3 = mt3 = c4[e6 + 56 | 0] | c4[e6 + 57 | 0] << 8 | c4[e6 + 58 | 0] << 16 | c4[e6 + 59 | 0] << 24, D5 = c4[t7 + 24 | 0] | c4[t7 + 25 | 0] << 8 | c4[t7 + 26 | 0] << 16 | c4[t7 + 27 | 0] << 24, J5 = (ot3 = c4[e6 + 48 | 0] | c4[e6 + 49 | 0] << 8 | c4[e6 + 50 | 0] << 16 | c4[e6 + 51 | 0] << 24) + (z4 = c4[t7 + 56 | 0] | c4[t7 + 57 | 0] << 8 | c4[t7 + 58 | 0] << 16 | c4[t7 + 59 | 0] << 24) | 0, a5 = (Qt3 = c4[e6 + 52 | 0] | c4[e6 + 53 | 0] << 8 | c4[e6 + 54 | 0] << 16 | c4[e6 + 55 | 0] << 24) + (P5 = c4[t7 + 60 | 0] | c4[t7 + 61 | 0] << 8 | c4[t7 + 62 | 0] << 16 | c4[t7 + 63 | 0] << 24) | 0, a5 = (c4[t7 + 28 | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24) + (J5 >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = n9 + (V3 = (k5 = J5) >>> 0 > (J5 = D5 + J5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (D5 = J5 + ut3 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5, V3 = ft2(J5 ^ (c4[t7 + 88 | 0] | c4[t7 + 89 | 0] << 8 | c4[t7 + 90 | 0] << 16 | c4[t7 + 91 | 0] << 24) ^ 327033209, V3 ^ (c4[t7 + 92 | 0] | c4[t7 + 93 | 0] << 8 | c4[t7 + 94 | 0] << 16 | c4[t7 + 95 | 0] << 24) ^ 1541459225, 32), z4 = ft2(z4 ^ (ut3 = V3 + 1595750129 | 0), (k5 = P5) ^ (P5 = (N6 = J5 = y4) - ((V3 >>> 0 < 2699217167) + 1521486533 | 0) | 0), 40), a5 = (et3 = y4) + a5 | 0, J5 = ft2((D5 = J5 = z4 + D5 | 0) ^ V3, N6 ^ (k5 = D5 >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = P5 + ($3 = y4) | 0, M5 = a5 = (J5 = ut3 + (P5 = J5) | 0) >>> 0 < ut3 >>> 0 ? a5 + 1 | 0 : a5, a5 = X3 + a5 | 0, q4 = B5 ^ (V3 = U5 + (N6 = J5) | 0), B5 = a5 = V3 >>> 0 < N6 >>> 0 ? a5 + 1 | 0 : a5, ut3 = ft2(q4, a5 ^ Et3, 40), a5 = (Et3 = y4) + d5 | 0, J5 = ft2(R5 = U5 ^ (d5 = J5 = ut3 + R5 | 0), X3 ^ (U5 = d5 >>> 0 < ut3 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = B5 + (nt3 = y4) | 0, X3 = a5 = (B5 = V3 + (R5 = J5) | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5, J5 = (H5 = ft2(B5 ^ ut3, Et3 ^ a5, 1)) + (V3 = c4[e6 + 72 | 0] | c4[e6 + 73 | 0] << 8 | c4[e6 + 74 | 0] << 16 | c4[e6 + 75 | 0] << 24) | 0, a5 = (yt3 = y4) + (Et3 = c4[e6 + 76 | 0] | c4[e6 + 77 | 0] << 8 | c4[e6 + 78 | 0] << 16 | c4[e6 + 79 | 0] << 24) | 0, wt3 = J5, K5 = J5 >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5, W3 = It3, J5 = c4[e6 + 96 | 0] | c4[e6 + 97 | 0] << 8 | c4[e6 + 98 | 0] << 16 | c4[e6 + 99 | 0] << 24, ut3 = a5 = c4[e6 + 100 | 0] | c4[e6 + 101 | 0] << 8 | c4[e6 + 102 | 0] << 16 | c4[e6 + 103 | 0] << 24, z4 = (a5 = I5) + (I5 = ft2(N6 ^ z4, M5 ^ et3, 1)) | 0, a5 = (N6 = y4) + C5 | 0, a5 = (I5 >>> 0 > z4 >>> 0 ? a5 + 1 | 0 : a5) + ut3 | 0, a5 = (C5 = (C5 = z4) >>> 0 > (z4 = J5 + z4 | 0) >>> 0 ? a5 + 1 | 0 : a5) + W3 | 0, q4 = M5 = z4 + rt3 | 0, M5 = a5 = M5 >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5, v5 = ft2(h5 ^ v5, x5 ^ F5, 48), x5 = a5 = ft2(v5 ^ z4, (F5 = y4) ^ C5, 32), a5 = S5 + Z3 | 0, a5 = (et3 = z4 = y4) + (_5 = (z4 = p5 + _5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, S5 = a5 = (C5 = z4) >>> 0 > (p5 = C5 + x5 | 0) >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(p5 ^ I5, N6 ^ a5, 40), a5 = (Z3 = y4) + M5 | 0, a5 = (N6 = I5 >>> 0 > (M5 = z4 = I5 + q4 | 0) >>> 0 ? a5 + 1 | 0 : a5) + K5 | 0, a5 = (h5 = M5 >>> 0 > (z4 = M5 + wt3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + Bt3 | 0, wt3 = K5 = z4 + at3 | 0, K5 = a5 = K5 >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5, q4 = z4, W3 = h5, z4 = c4[e6 + 116 | 0] | c4[e6 + 117 | 0] << 8 | c4[e6 + 118 | 0] << 16 | c4[e6 + 119 | 0] << 24, e6 = c4[e6 + 112 | 0] | c4[e6 + 113 | 0] << 8 | c4[e6 + 114 | 0] << 16 | c4[e6 + 115 | 0] << 24, l5 = ft2(l5 ^ C5, _5 ^ T3, 1), a5 = (T3 = y4) + k5 | 0, a5 = ((h5 = l5 + D5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) + z4 | 0, a5 = (C5 = (_5 = h5) >>> 0 > (h5 = e6 + h5 | 0) >>> 0 ? a5 + 1 | 0 : a5) + Bt3 | 0, Dt3 = _5 = h5 + at3 | 0, _5 = a5 = _5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(h5 ^ m5, C5 ^ L5, 32), tt3 = h5 = y4, m5 = a5, C5 = h5, a5 = F5 + G5 | 0, v5 = h5 = g5 + v5 | 0, D5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + C5 | 0, k5 = h5 = h5 + m5 | 0, L5 = a5 = v5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, C5 = ft2(h5 ^ l5, T3 ^ a5, 40), a5 = (T3 = y4) + _5 | 0, m5 = ft2((h5 = C5 + Dt3 | 0) ^ m5, tt3 ^ (g5 = h5 >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(m5 ^ q4, (Dt3 = y4) ^ W3, 32), tt3 = l5 = y4, _5 = a5, q4 = l5, f5 = ft2(f5 ^ v5, D5 ^ O5, 1), a5 = b5 + (v5 = y4) | 0, a5 = ((l5 = u5) >>> 0 > (u5 = u5 + f5 | 0) >>> 0 ? a5 + 1 | 0 : a5) + At3 | 0, a5 = (u5 = (l5 = u5 + j5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) + Et3 | 0, W3 = b5 = l5 + V3 | 0, b5 = a5 = b5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, D5 = f5, l5 = ft2(l5 ^ P5, u5 ^ $3, 32), a5 = (P5 = y4) + w5 | 0, E5 = ft2(D5 ^ (u5 = f5 = l5 + E5 | 0), (w5 = l5 >>> 0 > u5 >>> 0 ? a5 + 1 | 0 : a5) ^ v5, 40), a5 = ($3 = y4) + b5 | 0, v5 = f5 = E5 + W3 | 0, f5 = ft2(l5 ^ f5, P5 ^ (b5 = f5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = w5 + (o5 = y4) | 0, w5 = f5, P5 = a5 = (f5 = u5 + f5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + q4 | 0, a5 = (D5 = f5) >>> 0 > (f5 = f5 + _5 | 0) >>> 0 ? a5 + 1 | 0 : a5, q4 = f5, f5 ^= H5, H5 = a5, l5 = ft2(f5, yt3 ^ a5, 40), a5 = (yt3 = y4) + K5 | 0, K5 = f5 = l5 + wt3 | 0, a5 = A8 + (W3 = l5 >>> 0 > f5 >>> 0 ? a5 + 1 | 0 : a5) | 0, wt3 = f5 = f5 + r11 | 0, F5 = a5 = f5 >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5, f5 = h5, G5 = rt3, O5 = It3, h5 = ft2(x5 ^ M5, N6 ^ et3, 48), a5 = S5 + (et3 = y4) | 0, x5 = h5, S5 = a5 = (u5 = p5 + h5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(u5 ^ I5, Z3 ^ a5, 1), a5 = (p5 = y4) + O5 | 0, a5 = ((I5 = h5 + G5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, a5 = Qt3 + (f5 = (g5 = f5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5) | 0, M5 = I5 = g5 + ot3 | 0, I5 = a5 = I5 >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(g5 ^ w5, f5 ^ o5, 32), a5 = X3 + (N6 = y4) | 0, w5 = g5, B5 = a5 = (g5 = B5 + g5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(h5 ^ g5, a5 ^ p5, 40), a5 = (a5 = I5) + (I5 = y4) | 0, p5 = h5 = f5 + M5 | 0, h5 = ft2(h5 ^ w5, N6 ^ (M5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = B5 + (Z3 = y4) | 0, N6 = h5, X3 = a5 = (B5 = g5 + h5 | 0) >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ B5, I5 ^ a5, 1), a5 = (I5 = y4) + F5 | 0, a5 = n9 + (f5 = (g5 = h5 + wt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, wt3 = w5 = g5 + mt3 | 0, w5 = a5 = w5 >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5, F5 = h5, G5 = I5, a5 = L5 + Dt3 | 0, a5 = (h5 = m5 + k5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, m5 = h5, k5 = a5, a5 = ft2(h5 ^ C5, T3 ^ a5, 1), C5 = I5 = y4, h5 = a5, a5 = b5 + z4 | 0, a5 = ((v5 = e6 + v5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) + I5 | 0, a5 = Ct3 + (v5 = (I5 = h5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5) | 0, L5 = b5 = I5 + st3 | 0, b5 = a5 = b5 >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(I5 ^ R5, v5 ^ nt3, 32), a5 = S5 + (R5 = y4) | 0, v5 = I5, S5 = a5 = (S5 = u5) >>> 0 > (u5 = u5 + I5 | 0) >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(h5 ^ u5, a5 ^ C5, 40), a5 = (T3 = y4) + b5 | 0, C5 = h5 = I5 + L5 | 0, h5 = ft2(b5 = h5 ^ v5, R5 ^ (v5 = h5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = S5 + (nt3 = y4) | 0, S5 = h5, b5 = h5 = u5 + h5 | 0, R5 = a5 = h5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, L5 = g5, O5 = f5, h5 = ft2(E5 ^ D5, P5 ^ $3, 1), a5 = (u5 = y4) + Q5 | 0, a5 = U5 + ((g5 = h5 + gt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = At3 + (f5 = (g5 = g5 + d5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5) | 0, U5 = d5 = g5 + j5 | 0, d5 = a5 = d5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, E5 = h5, h5 = (g5 = ft2(g5 ^ x5, f5 ^ et3, 32)) + m5 | 0, a5 = (m5 = y4) + k5 | 0, f5 = h5, u5 = ft2(h5 ^ E5, (x5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) ^ u5, 40), a5 = (et3 = y4) + d5 | 0, d5 = h5 = u5 + U5 | 0, D5 = ft2(h5 ^ g5, m5 ^ (U5 = h5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5), 48), g5 = ft2(D5 ^ L5, (a5 = O5) ^ (O5 = y4), 32), a5 = (L5 = y4) + R5 | 0, m5 = h5 = g5 + b5 | 0, E5 = ft2(h5 ^ F5, (k5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) ^ G5, 40), a5 = (F5 = y4) + w5 | 0, w5 = h5 = E5 + wt3 | 0, h5 = ft2(h5 ^ g5, L5 ^ (P5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = k5 + ($3 = y4) | 0, k5 = h5, L5 = a5 = (g5 = m5) >>> 0 > (m5 = m5 + h5 | 0) >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(m5 ^ E5, F5 ^ a5, 1), a5 = Bt3 + (wt3 = y4) | 0, F5 = h5, Dt3 = h5 = at3 + h5 | 0, E5 = a5 = h5 >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5, g5 = lt3, h5 = ft2(I5 ^ b5, T3 ^ R5, 1), a5 = M5 + (I5 = y4) | 0, a5 = ((b5 = p5) >>> 0 > (p5 = h5 + p5 | 0) >>> 0 ? a5 + 1 | 0 : a5) + dt3 | 0, a5 = (b5 = (g5 = g5 + p5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) + vt3 | 0, G5 = p5 = g5 + pt3 | 0, M5 = a5 = p5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, R5 = h5, p5 = ft2(_5 ^ K5, W3 ^ tt3, 48), a5 = ft2(p5 ^ g5, (T3 = y4) ^ b5, 32), tt3 = h5 = y4, _5 = a5, g5 = h5, a5 = x5 + O5 | 0, a5 = (h5 = f5 + D5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = h5, x5 = a5, a5 = a5 + g5 | 0, b5 = h5 = h5 + _5 | 0, D5 = a5 = f5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(h5 ^ R5, a5 ^ I5, 40), a5 = (a5 = M5) + (M5 = y4) | 0, R5 = h5 = g5 + G5 | 0, K5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + E5 | 0, W3 = a5 = (I5 = h5 + Dt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, E5 = a5, h5 = ft2(u5 ^ f5, x5 ^ et3, 1), a5 = Y5 + (u5 = y4) | 0, a5 = v5 + ((f5 = h5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = ut3 + (C5 = (f5 = f5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5) | 0, G5 = v5 = f5 + J5 | 0, v5 = a5 = v5 >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5, x5 = h5, a5 = ft2(f5 ^ N6, C5 ^ Z3, 32), O5 = h5 = y4, f5 = a5, C5 = h5, a5 = T3 + H5 | 0, N6 = h5 = p5 + q4 | 0, H5 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + C5 | 0, a5 = (p5 = h5 + f5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = p5 ^ x5, x5 = a5, C5 = ft2(h5, a5 ^ u5, 40), a5 = (Z3 = y4) + v5 | 0, u5 = h5 = C5 + G5 | 0, q4 = ft2(h5 ^ f5, O5 ^ (v5 = h5 >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(q4 ^ I5, (et3 = y4) ^ E5, 32), Dt3 = h5 = y4, G5 = a5, E5 = h5, h5 = ft2(l5 ^ N6, H5 ^ yt3, 1), a5 = U5 + (l5 = y4) | 0, a5 = _t3 + ((f5 = h5 + d5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (d5 = (f5 = f5 + it3 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5) + kt3 | 0, N6 = U5 = f5 + ht3 | 0, U5 = a5 = U5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(f5 ^ S5, d5 ^ nt3, 32), a5 = X3 + (H5 = y4) | 0, S5 = f5, d5 = l5, l5 = a5 = (f5 = B5 + f5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ f5, d5 ^ a5, 40), a5 = (nt3 = y4) + U5 | 0, B5 = h5 = d5 + N6 | 0, h5 = ft2(N6 = h5 ^ S5, H5 ^ (S5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = l5 + (T3 = y4) | 0, l5 = h5, U5 = h5 = f5 + h5 | 0, N6 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + E5 | 0, X3 = a5 = (E5 = h5 + G5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(E5 ^ F5, wt3 ^ a5, 40), a5 = W3 + (H5 = y4) | 0, a5 = ((h5 = f5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5) + It3 | 0, I5 = h5, W3 = h5 = h5 + rt3 | 0, F5 = a5 = I5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, O5 = At3, I5 = ft2(_5 ^ R5, K5 ^ tt3, 48), a5 = (yt3 = y4) + D5 | 0, _5 = h5 = I5 + b5 | 0, a5 = ft2(h5 ^ g5, (b5 = h5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5) ^ M5, 1), M5 = g5 = y4, h5 = a5, a5 = v5 + A8 | 0, a5 = ((u5 = u5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, a5 = (u5 = (g5 = h5 + u5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) + O5 | 0, D5 = v5 = g5 + j5 | 0, v5 = a5 = v5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(g5 ^ l5, u5 ^ T3, 32), a5 = L5 + (R5 = y4) | 0, m5 = a5 = (l5 = g5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ l5, a5 ^ M5, 40), a5 = (K5 = y4) + v5 | 0, v5 = h5 = u5 + D5 | 0, g5 = ft2(h5 ^ g5, R5 ^ (M5 = h5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = m5 + (D5 = y4) | 0, R5 = a5 = (m5 = g5 + l5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(u5 ^ m5, K5 ^ a5, 1), a5 = (K5 = y4) + F5 | 0, a5 = Et3 + ((l5 = h5 + W3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (u5 = (l5 = l5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) + Q5 | 0, wt3 = Q5 = l5 + gt3 | 0, Q5 = a5 = Q5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, L5 = h5, O5 = l5, T3 = u5, l5 = lt3, h5 = ft2(d5 ^ U5, N6 ^ nt3, 1), a5 = P5 + (d5 = y4) | 0, a5 = ((u5 = w5) >>> 0 > (w5 = h5 + w5 | 0) >>> 0 ? a5 + 1 | 0 : a5) + dt3 | 0, a5 = kt3 + (u5 = (l5 = l5 + w5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5) | 0, P5 = w5 = l5 + ht3 | 0, U5 = a5 = w5 >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5, w5 = h5, u5 = a5 = ft2(l5 ^ I5, u5 ^ yt3, 32), a5 = x5 + et3 | 0, a5 = (N6 = h5 = y4) + (p5 = (h5 = p5 + q4 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, x5 = a5 = (I5 = h5 + u5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(I5 ^ w5, a5 ^ d5, 40), a5 = (et3 = y4) + U5 | 0, U5 = ft2(P5 = (l5 = w5 + P5 | 0) ^ u5, N6 ^ (u5 = l5 >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(U5 ^ O5, (nt3 = y4) ^ T3, 32), yt3 = d5 = y4, P5 = a5, N6 = d5, h5 = ft2(h5 ^ C5, p5 ^ Z3, 1), a5 = ut3 + (d5 = y4) | 0, a5 = S5 + ((p5 = h5 + J5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = _t3 + (B5 = (p5 = p5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5) | 0, O5 = C5 = p5 + it3 | 0, C5 = a5 = C5 >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5, S5 = h5, q4 = d5, p5 = ft2(p5 ^ k5, B5 ^ $3, 32), a5 = (k5 = y4) + b5 | 0, d5 = h5 = p5 + _5 | 0, B5 = ft2(h5 ^ S5, (_5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) ^ q4, 40), a5 = (Z3 = y4) + C5 | 0, S5 = h5 = B5 + O5 | 0, h5 = ft2(h5 ^ p5, k5 ^ (b5 = h5 >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = _5 + (O5 = y4) | 0, C5 = h5, _5 = h5 = d5 + h5 | 0, k5 = a5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + N6 | 0, N6 = h5 = h5 + P5 | 0, p5 = K5, K5 = a5 = _5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ L5, p5 ^ a5, 40), a5 = (a5 = Q5) + (Q5 = y4) | 0, q4 = h5 = p5 + wt3 | 0, L5 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = u5, h5 = ft2(G5 ^ W3, F5 ^ Dt3, 48), a5 = X3 + ($3 = y4) | 0, X3 = h5, u5 = (h5 = E5 + h5 | 0) ^ f5, f5 = a5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(u5, a5 ^ H5, 1), a5 = (H5 = y4) + d5 | 0, a5 = n9 + ((l5 = u5 + l5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (d5 = (l5 = l5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) + Y5 | 0, W3 = E5 = l5 + ct3 | 0, E5 = a5 = E5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = ft2(l5 ^ C5, d5 ^ O5, 32), a5 = R5 + (F5 = y4) | 0, R5 = l5, m5 = a5 = (d5 = m5 + l5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(u5 ^ d5, H5 ^ a5, 40), a5 = (a5 = E5) + (E5 = y4) | 0, C5 = l5 = u5 + W3 | 0, l5 = ft2(G5 = l5 ^ R5, F5 ^ (R5 = l5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = m5 + (wt3 = y4) | 0, H5 = l5, W3 = a5 = (m5 = d5 + l5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, l5 = ft2(u5 ^ m5, E5 ^ a5, 1), a5 = (E5 = y4) + L5 | 0, a5 = A8 + ((u5 = l5 + q4 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = z4 + (d5 = (u5 = u5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) | 0, Dt3 = F5 = e6 + u5 | 0, F5 = a5 = F5 >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5, G5 = l5, O5 = E5, E5 = u5, T3 = d5, l5 = ft2(B5 ^ _5, k5 ^ Z3, 1), a5 = (d5 = y4) + M5 | 0, a5 = Ct3 + ((u5 = l5 + v5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (B5 = (u5 = u5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) + z4 | 0, M5 = v5 = e6 + u5 | 0, v5 = a5 = v5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, _5 = l5, u5 = a5 = ft2(u5 ^ X3, B5 ^ $3, 32), B5 = l5 = y4, a5 = x5 + nt3 | 0, x5 = a5 = (l5 = I5 + U5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + B5 | 0, a5 = (I5 = l5) >>> 0 > (l5 = l5 + u5 | 0) >>> 0 ? a5 + 1 | 0 : a5, U5 = l5, l5 ^= _5, _5 = a5, d5 = ft2(l5, a5 ^ d5, 40), a5 = (Z3 = y4) + v5 | 0, B5 = ft2(v5 = (l5 = d5 + M5 | 0) ^ u5, B5 ^ (u5 = l5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(B5 ^ E5, (a5 = T3) ^ (T3 = y4), 32), $3 = E5 = y4, v5 = a5, M5 = f5, f5 = g5, a5 = ft2(I5 ^ w5, x5 ^ et3, 1), k5 = g5 = y4, I5 = a5, a5 = b5 + vt3 | 0, a5 = ((w5 = S5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, w5 = a5 = (g5 = I5 + w5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(g5 ^ f5, a5 ^ D5, 32), a5 = (a5 = M5) + (M5 = y4) | 0, I5 = ft2((h5 = f5 + h5 | 0) ^ I5, k5 ^ (x5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = w5 + (et3 = y4) | 0, S5 = I5, a5 = Qt3 + ((b5 = g5) >>> 0 > (g5 = g5 + I5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, b5 = a5 = (I5 = g5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(f5 ^ I5, M5 ^ a5, 48), a5 = x5 + (nt3 = y4) | 0, D5 = h5, f5 = g5, x5 = h5 = h5 + g5 | 0, M5 = a5 = D5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + E5 | 0, D5 = a5 = (E5 = h5 + v5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = (w5 = ft2(E5 ^ G5, a5 ^ O5, 40)) + Dt3 | 0, a5 = (Dt3 = y4) + F5 | 0, k5 = h5, X3 = h5 >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(P5 ^ q4, L5 ^ yt3, 48), a5 = (P5 = y4) + K5 | 0, N6 = g5 = h5 + N6 | 0, G5 = Q5, Q5 = a5 = g5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(g5 ^ p5, G5 ^ a5, 1), q4 = g5 = y4, p5 = a5, a5 = u5 + n9 | 0, a5 = ((l5 = l5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, a5 = Et3 + (l5 = (g5 = l5 + p5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) | 0, L5 = u5 = g5 + V3 | 0, u5 = a5 = u5 >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(g5 ^ f5, l5 ^ nt3, 32), a5 = W3 + (F5 = y4) | 0, K5 = g5, g5 = (f5 = m5 + g5 | 0) ^ p5, p5 = a5 = f5 >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, l5 = ft2(g5, q4 ^ a5, 40), a5 = (a5 = u5) + (u5 = y4) | 0, q4 = g5 = l5 + L5 | 0, g5 = ft2(m5 = g5 ^ K5, F5 ^ (K5 = g5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = p5 + (nt3 = y4) | 0, W3 = g5, f5 = a5 = (g5 = f5 + g5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, l5 = ft2(g5 ^ l5, u5 ^ a5, 1), a5 = (m5 = y4) + X3 | 0, a5 = Bt3 + ((u5 = l5 + k5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (p5 = (u5 = u5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) + At3 | 0, tt3 = L5 = u5 + j5 | 0, L5 = a5 = L5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, F5 = l5, G5 = u5, O5 = p5, l5 = ft2(S5 ^ x5, M5 ^ et3, 1), a5 = (M5 = y4) + It3 | 0, a5 = R5 + (l5 >>> 0 > (u5 = l5 + rt3 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, p5 = a5 = (u5 = u5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(h5 ^ u5, a5 ^ P5, 32), P5 = h5 = y4, C5 = a5, a5 = _5 + T3 | 0, a5 = (h5 = B5 + U5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, B5 = h5, x5 = a5, a5 = P5 + a5 | 0, _5 = h5 = h5 + C5 | 0, S5 = a5 = B5 >>> 0 > h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(h5 ^ l5, M5 ^ a5, 40), a5 = p5 + (T3 = y4) | 0, U5 = h5, a5 = ut3 + ((h5 = u5 + h5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (h5 = h5 + J5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5, M5 = h5, h5 ^= C5, C5 = a5, p5 = ft2(h5, P5 ^ a5, 48), a5 = ft2(p5 ^ G5, (a5 = O5) ^ (O5 = y4), 32), et3 = h5 = y4, P5 = a5, R5 = h5, h5 = ft2(d5 ^ B5, x5 ^ Z3, 1), a5 = vt3 + (u5 = y4) | 0, a5 = b5 + ((l5 = h5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (d5 = (l5 = l5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5) + Y5 | 0, b5 = B5 = l5 + ct3 | 0, B5 = a5 = B5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, I5 = h5, x5 = u5, h5 = (l5 = ft2(l5 ^ H5, d5 ^ wt3, 32)) + N6 | 0, a5 = (N6 = y4) + Q5 | 0, u5 = h5, d5 = ft2(d5 = h5 ^ I5, (I5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) ^ x5, 40), a5 = (Z3 = y4) + B5 | 0, B5 = h5 = d5 + b5 | 0, l5 = ft2(h5 ^ l5, N6 ^ (Q5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = I5 + (x5 = y4) | 0, b5 = h5 = l5 + u5 | 0, N6 = a5 = h5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + R5 | 0, R5 = a5 = (I5 = h5 + P5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(I5 ^ F5, a5 ^ m5, 40), a5 = (H5 = y4) + L5 | 0, L5 = h5 = u5 + tt3 | 0, F5 = a5 = h5 >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, h5 = g5, m5 = f5, f5 = l5, g5 = ft2(v5 ^ k5, X3 ^ $3, 48), a5 = D5 + (tt3 = y4) | 0, v5 = g5, E5 = a5 = (l5 = E5 + g5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(l5 ^ w5, Dt3 ^ a5, 1), D5 = g5 = y4, w5 = a5, a5 = C5 + bt3 | 0, a5 = ((C5 = M5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, C5 = a5 = (g5 = C5 + w5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(g5 ^ f5, a5 ^ x5, 32), a5 = (M5 = y4) + m5 | 0, w5 = ft2((h5 = f5 + h5 | 0) ^ w5, D5 ^ (m5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = C5 + (k5 = y4) | 0, a5 = _t3 + ((C5 = g5) >>> 0 > (g5 = g5 + w5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, x5 = a5 = (C5 = g5 + it3 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(f5 ^ C5, M5 ^ a5, 48), a5 = m5 + ($3 = y4) | 0, M5 = g5, D5 = a5 = (m5 = h5 + g5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(m5 ^ w5, k5 ^ a5, 1), a5 = (w5 = y4) + F5 | 0, a5 = Ct3 + ((g5 = h5 + L5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = Bt3 + (f5 = (g5 = g5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) | 0, yt3 = k5 = g5 + at3 | 0, k5 = a5 = k5 >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5, X3 = h5, G5 = g5, h5 = ft2(d5 ^ b5, N6 ^ Z3, 1), a5 = (d5 = y4) + K5 | 0, a5 = kt3 + ((g5 = h5 + q4 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = Qt3 + (b5 = (g5 = g5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, q4 = N6 = g5 + ot3 | 0, N6 = a5 = N6 >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5, K5 = h5, a5 = ft2(g5 ^ v5, b5 ^ tt3, 32), tt3 = h5 = y4, g5 = a5, a5 = S5 + O5 | 0, _5 = h5 = p5 + _5 | 0, v5 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, a5 = tt3 + a5 | 0, S5 = a5 = (p5 = h5 + g5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(p5 ^ K5, a5 ^ d5, 40), a5 = (O5 = y4) + N6 | 0, b5 = h5 = d5 + q4 | 0, K5 = ft2(h5 ^ g5, tt3 ^ (N6 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(K5 ^ G5, (tt3 = y4) ^ f5, 32), Z3 = h5 = y4, q4 = a5, f5 = h5, g5 = lt3, h5 = ft2(_5 ^ U5, v5 ^ T3, 1), a5 = Q5 + (v5 = y4) | 0, a5 = ((_5 = B5) >>> 0 > (B5 = h5 + B5 | 0) >>> 0 ? a5 + 1 | 0 : a5) + dt3 | 0, a5 = Ct3 + (B5 = (g5 = g5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5) | 0, _5 = Q5 = g5 + st3 | 0, Q5 = a5 = Q5 >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(g5 ^ W3, B5 ^ nt3, 32), a5 = E5 + (U5 = y4) | 0, E5 = g5, a5 = (g5 = l5 + g5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = v5, v5 = a5, l5 = ft2(h5 ^ g5, l5 ^ a5, 40), a5 = (T3 = y4) + Q5 | 0, B5 = h5 = l5 + _5 | 0, h5 = ft2(h5 ^ E5, U5 ^ (Q5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = v5 + (G5 = y4) | 0, v5 = h5, _5 = h5 = g5 + h5 | 0, U5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + f5 | 0, a5 = (E5 = h5 + q4 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = E5 ^ X3, X3 = a5, w5 = ft2(h5, a5 ^ w5, 40), a5 = (nt3 = y4) + k5 | 0, k5 = h5 = w5 + yt3 | 0, W3 = h5 >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(P5 ^ L5, F5 ^ et3, 48), a5 = R5 + (et3 = y4) | 0, P5 = h5, a5 = (h5 = I5 + h5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, I5 = h5, R5 = a5, a5 = ft2(h5 ^ u5, a5 ^ H5, 1), H5 = h5 = y4, f5 = a5, a5 = N6 + Et3 | 0, a5 = ((g5 = b5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) + h5 | 0, a5 = _t3 + (g5 = (h5 = g5 + f5 | 0) >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) | 0, b5 = u5 = h5 + it3 | 0, u5 = a5 = u5 >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(h5 ^ v5, g5 ^ G5, 32), a5 = D5 + (N6 = y4) | 0, v5 = h5, m5 = a5 = (g5 = m5 + h5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(g5 ^ f5, H5 ^ a5, 40), a5 = (H5 = y4) + u5 | 0, b5 = h5 = f5 + b5 | 0, h5 = ft2(u5 = h5 ^ v5, N6 ^ (v5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = m5 + (yt3 = y4) | 0, m5 = h5, D5 = a5 = (u5 = g5 + h5 | 0) >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(u5 ^ f5, H5 ^ a5, 1), a5 = (N6 = y4) + W3 | 0, a5 = vt3 + ((g5 = h5 + k5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (f5 = (g5 = g5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) + It3 | 0, wt3 = H5 = g5 + rt3 | 0, H5 = a5 = H5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, L5 = h5, F5 = g5, G5 = f5, h5 = ft2(l5 ^ _5, T3 ^ U5, 1), a5 = kt3 + (f5 = y4) | 0, a5 = x5 + ((g5 = h5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = bt3 + (l5 = (g5 = g5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5) | 0, U5 = C5 = g5 + gt3 | 0, C5 = a5 = C5 >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5, x5 = h5, _5 = f5, a5 = ft2(g5 ^ P5, l5 ^ et3, 32), P5 = h5 = y4, l5 = a5, g5 = h5, a5 = S5 + tt3 | 0, a5 = (h5 = p5 + K5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, p5 = h5, S5 = a5, a5 = a5 + g5 | 0, a5 = (f5 = h5 + l5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = f5 ^ x5, x5 = a5, h5 = ft2(h5, a5 ^ _5, 40), a5 = (a5 = C5) + (C5 = y4) | 0, _5 = g5 = h5 + U5 | 0, U5 = a5 = g5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, P5 = ft2(g5 ^ l5, P5 ^ a5, 48), a5 = ft2(P5 ^ F5, (a5 = G5) ^ (G5 = y4), 32), T3 = g5 = y4, K5 = a5, g5 = ft2(p5 ^ d5, S5 ^ O5, 1), a5 = (p5 = y4) + dt3 | 0, a5 = Q5 + ((l5 = g5 + lt3 | 0) >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = n9 + (d5 = (l5 = l5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5) | 0, O5 = B5 = l5 + mt3 | 0, B5 = a5 = B5 >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5, Q5 = g5, S5 = p5, l5 = ft2(l5 ^ M5, d5 ^ $3, 32), a5 = (M5 = y4) + R5 | 0, p5 = g5 = l5 + I5 | 0, g5 = (d5 = ft2(g5 ^ Q5, (I5 = g5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5) ^ S5, 40)) + O5 | 0, a5 = (O5 = y4) + B5 | 0, Q5 = g5, g5 = ft2(g5 ^ l5, M5 ^ (S5 = g5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = I5 + (tt3 = y4) | 0, M5 = g5, R5 = g5 = p5 + g5 | 0, F5 = a5 = g5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, a5 = T3 + a5 | 0, a5 = (l5 = g5 + K5 | 0) >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, g5 = N6, N6 = a5, p5 = ft2(l5 ^ L5, g5 ^ a5, 40), a5 = (et3 = y4) + H5 | 0, B5 = g5 = p5 + wt3 | 0, a5 = ft2(g5 ^ K5, T3 ^ (H5 = g5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5), 48), T3 = g5 = y4, K5 = a5, g5 = h5, a5 = x5 + G5 | 0, x5 = h5 = f5 + P5 | 0, P5 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(h5 ^ g5, a5 ^ C5, 1), f5 = g5 = y4, h5 = a5, a5 = S5 + A8 | 0, a5 = ((I5 = Q5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, a5 = ut3 + (I5 = (g5 = h5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5) | 0, G5 = C5 = g5 + J5 | 0, C5 = a5 = C5 >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = h5, S5 = f5, h5 = ft2(k5 ^ q4, W3 ^ Z3, 48), a5 = X3 + (Z3 = y4) | 0, k5 = h5, a5 = (h5 = E5 + h5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, E5 = h5, g5 = ft2(g5 ^ m5, I5 ^ yt3, 32), X3 = a5, a5 = a5 + (q4 = y4) | 0, f5 = h5 = g5 + h5 | 0, I5 = ft2(h5 ^ Q5, (m5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) ^ S5, 40), a5 = (W3 = y4) + C5 | 0, C5 = h5 = I5 + G5 | 0, h5 = ft2(h5 ^ g5, q4 ^ (Q5 = h5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = m5 + ($3 = y4) | 0, S5 = h5, q4 = a5 = (m5 = f5 + h5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(I5 ^ m5, W3 ^ a5, 1), a5 = _t3 + (G5 = y4) | 0, W3 = h5, yt3 = h5 = it3 + h5 | 0, f5 = a5 = h5 >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(w5 ^ E5, X3 ^ nt3, 1), a5 = (I5 = y4) + U5 | 0, a5 = Qt3 + ((g5 = h5 + _5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = At3 + (E5 = (g5 = g5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) | 0, X3 = w5 = g5 + j5 | 0, w5 = a5 = w5 >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5, _5 = I5, g5 = ft2(g5 ^ M5, E5 ^ tt3, 32), a5 = D5 + (tt3 = y4) | 0, U5 = g5, a5 = (I5 = u5 + g5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, u5 = _5, _5 = a5, E5 = ft2(h5 ^ I5, u5 ^ a5, 40), a5 = (nt3 = y4) + w5 | 0, M5 = h5 = E5 + X3 | 0, a5 = (D5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, w5 = a5 = (f5 = h5 + yt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, X3 = a5 = ft2(f5 ^ K5, a5 ^ T3, 32), L5 = h5 = y4, h5 = ft2(d5 ^ R5, F5 ^ O5, 1), a5 = (u5 = y4) + v5 | 0, a5 = z4 + ((g5 = h5 + b5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (d5 = (g5 = e6 + g5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) + Y5 | 0, F5 = v5 = g5 + ct3 | 0, v5 = a5 = v5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, b5 = h5, R5 = u5, g5 = ft2(g5 ^ k5, d5 ^ Z3, 32), a5 = (k5 = y4) + P5 | 0, u5 = h5 = g5 + x5 | 0, h5 = (d5 = ft2(h5 ^ b5, (x5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5) ^ R5, 40)) + F5 | 0, a5 = (F5 = y4) + v5 | 0, v5 = h5, h5 = ft2(h5 ^ g5, k5 ^ (b5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = x5 + (Z3 = y4) | 0, x5 = h5, k5 = a5 = (h5 = u5 + h5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + L5 | 0, P5 = a5 = (u5 = h5) >>> 0 > (h5 = h5 + X3 | 0) >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(h5 ^ W3, G5 ^ a5, 40), a5 = w5 + (G5 = y4) | 0, R5 = g5, a5 = A8 + ((g5 = f5 + g5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5) | 0, W3 = g5 = g5 + r11 | 0, f5 = g5 ^ X3, X3 = a5 = g5 >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5, g5 = ft2(f5, L5 ^ a5, 48), a5 = P5 + (L5 = y4) | 0, P5 = a5 = (w5 = h5 + g5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = a5 = ft2(w5 ^ R5, G5 ^ a5, 1), R5 = f5 = y4, f5 = ft2(u5 ^ d5, k5 ^ F5, 1), a5 = Q5 + (d5 = y4) | 0, a5 = Qt3 + ((u5 = f5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = Ct3 + (C5 = (u5 = u5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) | 0, G5 = Q5 = u5 + st3 | 0, Q5 = a5 = Q5 >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5, k5 = f5, F5 = d5, a5 = N6 + T3 | 0, a5 = (f5 = l5 + K5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, N6 = f5, U5 = ft2(M5 ^ U5, D5 ^ tt3, 48), d5 = ft2(u5 ^ U5, C5 ^ (tt3 = y4), 32), M5 = a5, a5 = a5 + (yt3 = y4) | 0, C5 = f5 = d5 + f5 | 0, f5 = ft2(f5 ^ k5, (D5 = f5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5) ^ F5, 40), a5 = (k5 = y4) + Q5 | 0, F5 = a5 = (l5 = f5 + G5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + R5 | 0, a5 = n9 + ((K5 = l5) >>> 0 > (l5 = h5 + l5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (u5 = (l5 = l5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) + dt3 | 0, wt3 = Q5 = l5 + lt3 | 0, G5 = a5 = Q5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, O5 = h5, T3 = l5, a5 = ft2(p5 ^ N6, M5 ^ et3, 1), p5 = l5 = y4, h5 = a5, a5 = b5 + kt3 | 0, a5 = ((Q5 = v5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, a5 = ut3 + (Q5 = (l5 = h5 + Q5 | 0) >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5) | 0, M5 = v5 = l5 + J5 | 0, v5 = a5 = v5 >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5, b5 = h5, a5 = ft2(l5 ^ S5, Q5 ^ $3, 32), N6 = h5 = y4, l5 = a5, Q5 = h5, a5 = _5 + tt3 | 0, _5 = h5 = I5 + U5 | 0, S5 = a5 = h5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + Q5 | 0, a5 = (I5 = h5 + l5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5;
                              h5 = I5 ^ b5, b5 = a5, Q5 = ft2(h5, a5 ^ p5, 40), a5 = (tt3 = y4) + v5 | 0, U5 = ft2(v5 = (h5 = Q5 + M5 | 0) ^ l5, N6 ^ (l5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = ft2(a5 = U5 ^ T3, (T3 = y4) ^ u5, 32), et3 = u5 = y4, M5 = a5, v5 = u5, u5 = ft2(E5 ^ _5, S5 ^ nt3, 1), a5 = At3 + (E5 = y4) | 0, a5 = H5 + ((p5 = u5 + j5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = vt3 + (B5 = (p5 = p5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5) | 0, S5 = _5 = p5 + pt3 | 0, _5 = a5 = _5 >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ x5, B5 ^ Z3, 32), a5 = q4 + (N6 = y4) | 0, x5 = p5, m5 = a5 = (p5 = m5 + p5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, B5 = ft2(u5 ^ p5, a5 ^ E5, 40), a5 = (Z3 = y4) + _5 | 0, E5 = u5 = B5 + S5 | 0, u5 = ft2(_5 = u5 ^ x5, N6 ^ (x5 = u5 >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = m5 + ($3 = y4) | 0, _5 = u5, S5 = u5 = p5 + u5 | 0, N6 = a5 = u5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, a5 = a5 + v5 | 0, a5 = (p5 = u5 + M5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5, u5 = R5, R5 = a5, m5 = ft2(p5 ^ O5, u5 ^ a5, 40), a5 = (H5 = y4) + G5 | 0, v5 = u5 = m5 + wt3 | 0, u5 = ft2(G5 = u5 ^ M5, et3 ^ (M5 = u5 >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = R5 + (et3 = y4) | 0, R5 = u5, p5 = a5 = (u5 = p5 + u5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, H5 = a5 = ft2(u5 ^ m5, H5 ^ a5, 1), nt3 = a5, q4 = m5 = y4, m5 = l5, l5 = f5, f5 = ft2(d5 ^ K5, F5 ^ yt3, 48), a5 = D5 + (yt3 = y4) | 0, D5 = f5, a5 = (f5 = C5 + f5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = h5, h5 = l5 ^ f5, l5 = a5, h5 = ft2(h5, a5 ^ k5, 1), a5 = (k5 = y4) + m5 | 0, a5 = bt3 + (h5 >>> 0 > (d5 = C5 + h5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = It3 + (C5 = (d5 = d5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, K5 = m5 = d5 + rt3 | 0, m5 = a5 = m5 >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(d5 ^ _5, C5 ^ $3, 32), a5 = P5 + (F5 = y4) | 0, _5 = a5 = (C5 = d5 + w5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(h5 ^ C5, k5 ^ a5, 40), a5 = ($3 = y4) + m5 | 0, k5 = h5 = w5 + K5 | 0, d5 = ft2(h5 ^ d5, F5 ^ (P5 = h5 >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5), 48), a5 = _5 + (K5 = y4) | 0, F5 = h5 = d5 + C5 | 0, _5 = h5, G5 = a5 = h5 >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = f5, m5 = l5, a5 = b5 + T3 | 0, a5 = (h5 = I5 + U5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, I5 = h5, h5 ^= Q5, Q5 = a5, a5 = ft2(h5, tt3 ^ a5, 1), O5 = h5 = y4, b5 = a5, l5 = a5, a5 = x5 + Y5 | 0, a5 = ((f5 = E5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) + h5 | 0, E5 = a5 = (h5 = f5) >>> 0 > (f5 = l5 + f5 | 0) >>> 0 ? a5 + 1 | 0 : a5, l5 = ft2(g5 ^ f5, a5 ^ L5, 32), a5 = (a5 = m5) + (m5 = y4) | 0, U5 = h5 = l5 + C5 | 0, g5 = ft2(g5 = h5 ^ b5, O5 ^ (b5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = E5 + (L5 = y4) | 0, a5 = Et3 + ((h5 = g5 + f5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5) | 0, O5 = a5 = (C5 = h5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5, m5 = ft2(l5 ^ C5, m5 ^ a5, 48), wt3 = a5 = y4, h5 = ft2(B5 ^ S5, N6 ^ Z3, 1), a5 = (l5 = y4) + X3 | 0, a5 = Bt3 + ((f5 = h5 + W3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = z4 + (B5 = (f5 = f5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) | 0, X3 = E5 = e6 + f5 | 0, S5 = a5 = E5 >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5, N6 = h5, E5 = ft2(f5 ^ D5, B5 ^ yt3, 32), a5 = (Z3 = y4) + Q5 | 0, Q5 = h5 = E5 + I5 | 0, f5 = ft2(h5 ^ N6, (D5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5) ^ l5, 40), a5 = (a5 = S5) + (S5 = y4) | 0, N6 = h5 = f5 + X3 | 0, X3 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = z4 + q4 | 0, a5 = ((B5 = e6 + H5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, x5 = a5 = (l5 = h5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(l5 ^ m5, wt3 ^ a5, 32), a5 = (H5 = y4) + G5 | 0, I5 = ft2((B5 = h5 + _5 | 0) ^ nt3, (a5 = B5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ q4, 40), q4 = a5, a5 = It3 + (_5 = y4) | 0, a5 = x5 + ((W3 = I5 + rt3 | 0) >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (x5 = l5 + W3 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = H5, H5 = a5, l5 = ft2(h5 ^ x5, l5 ^ a5, 48), a5 = (a5 = q4) + (q4 = y4) | 0, h5 = I5 ^ (B5 = l5 + B5 | 0), I5 = a5 = B5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, W3 = a5 = ft2(h5, a5 ^ _5, 1), nt3 = a5, T3 = h5 = y4, _5 = u5, tt3 = p5, u5 = f5, f5 = ft2(E5 ^ N6, X3 ^ Z3, 48), a5 = D5 + (N6 = y4) | 0, E5 = h5 = f5 + Q5 | 0, Q5 = a5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ S5, 1), a5 = (X3 = y4) + bt3 | 0, a5 = O5 + ((h5 = u5 + gt3 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, C5 = a5 = (p5 = h5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(p5 ^ d5, a5 ^ K5, 32), a5 = (S5 = y4) + tt3 | 0, _5 = d5 = h5 + _5 | 0, D5 = a5 = d5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(u5 ^ d5, a5 ^ X3, 40), a5 = Ct3 + (yt3 = y4) | 0, X3 = u5, a5 = C5 + ((u5 = st3 + u5 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) | 0, p5 = a5 = (u5 = u5 + p5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ u5, a5 ^ S5, 48), a5 = (a5 = D5) + (D5 = y4) | 0, K5 = h5 = d5 + _5 | 0, S5 = h5, O5 = a5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, a5 = b5 + wt3 | 0, _5 = (h5 = m5 + U5 | 0) ^ g5, g5 = a5 = h5 >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(_5, a5 ^ L5, 1), L5 = C5 = y4, _5 = a5, a5 = P5 + ut3 | 0, a5 = ((m5 = k5 + J5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5) + C5 | 0, b5 = a5 = (b5 = m5) >>> 0 > (m5 = m5 + _5 | 0) >>> 0 ? a5 + 1 | 0 : a5, U5 = C5 = ft2(m5 ^ R5, et3 ^ a5, 32), k5 = a5 = y4, a5 = a5 + Q5 | 0, P5 = C5 = C5 + E5 | 0, R5 = a5 = U5 >>> 0 > C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = ft2(C5 ^ _5, L5 ^ a5, 40), a5 = dt3 + (L5 = y4) | 0, a5 = b5 + ((E5 = C5 + lt3 | 0) >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (_5 = m5) >>> 0 > (m5 = m5 + E5 | 0) >>> 0 ? a5 + 1 | 0 : a5, _5 = ft2(m5 ^ U5, a5 ^ k5, 48), et3 = a5 = y4, Q5 = a5, w5 = ft2(w5 ^ F5, G5 ^ $3, 1), b5 = a5 = y4, U5 = f5, a5 = a5 + Y5 | 0, a5 = M5 + ((f5 = w5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (f5 = f5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5, v5 = f5 ^ U5, U5 = a5, v5 = ft2(v5, a5 ^ N6, 32), a5 = ($3 = y4) + g5 | 0, M5 = h5 = v5 + h5 | 0, g5 = ft2(h5 ^ w5, (g5 = b5) ^ (b5 = h5 >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = Bt3 + (k5 = y4) | 0, a5 = U5 + ((h5 = g5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) | 0, U5 = h5 = h5 + f5 | 0, N6 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = a5, a5 = T3 + Qt3 | 0, a5 = ((w5 = W3 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, W3 = a5 = (f5 = h5 + w5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ _5, a5 ^ Q5, 32), a5 = (F5 = y4) + O5 | 0, Q5 = ft2((w5 = h5 + S5 | 0) ^ nt3, (a5 = w5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), G5 = S5 = y4, T3 = a5, a5 = S5 + vt3 | 0, a5 = W3 + ((S5 = Q5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, W3 = a5 = (S5 = f5 + S5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = ft2(h5 ^ S5, a5 ^ F5, 48), a5 = (F5 = y4) + T3 | 0, h5 = (w5 = f5 + w5 | 0) ^ Q5, Q5 = a5 = w5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, G5 = a5 = ft2(h5, a5 ^ G5, 1), T3 = h5 = y4, tt3 = B5, Z3 = d5, d5 = g5, g5 = ft2(v5 ^ U5, N6 ^ $3, 48), a5 = (v5 = y4) + b5 | 0, b5 = h5 = g5 + M5 | 0, U5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ d5, a5 ^ k5, 1), a5 = (k5 = y4) + _t3 | 0, a5 = ((h5 = d5 + it3 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5) + E5 | 0, m5 = a5 = (B5 = h5 + m5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(B5 ^ Z3, a5 ^ D5, 32), a5 = (E5 = y4) + I5 | 0, M5 = I5 = h5 + tt3 | 0, D5 = a5 = I5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(d5 ^ I5, a5 ^ k5, 40), a5 = n9 + (Z3 = y4) | 0, k5 = d5, a5 = m5 + ((d5 = mt3 + d5 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, N6 = a5 = (I5 = d5 + B5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ I5, a5 ^ E5, 48), a5 = (a5 = D5) + (D5 = y4) | 0, M5 = h5 = d5 + M5 | 0, tt3 = a5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, m5 = l5, B5 = u5, a5 = R5 + et3 | 0, l5 = a5 = (h5 = _5 + P5 | 0) >>> 0 < _5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ C5, a5 ^ L5, 1), a5 = (C5 = y4) + At3 | 0, a5 = ((E5 = u5 + j5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) + p5 | 0, p5 = ft2(m5 ^ (B5 = B5 + E5 | 0), (a5 = B5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5) ^ q4, 32), E5 = a5, _5 = u5, a5 = (m5 = y4) + U5 | 0, a5 = (u5 = p5 + b5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, b5 = u5, u5 ^= _5, _5 = a5, u5 = ft2(u5, a5 ^ C5, 40), a5 = A8 + (U5 = y4) | 0, a5 = ((C5 = u5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) + E5 | 0, P5 = a5 = (E5 = C5) >>> 0 > (C5 = C5 + B5 | 0) >>> 0 ? a5 + 1 | 0 : a5, m5 = ft2(p5 ^ C5, a5 ^ m5, 48), et3 = a5 = y4, B5 = a5, p5 = ft2(K5 ^ X3, O5 ^ yt3, 1), R5 = a5 = y4, X3 = l5, a5 = a5 + Et3 | 0, a5 = H5 + ((l5 = p5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = v5, v5 = a5 = (l5 = l5 + x5 | 0) >>> 0 < x5 >>> 0 ? a5 + 1 | 0 : a5, E5 = ft2(g5 ^ l5, E5 ^ a5, 32), a5 = ($3 = y4) + X3 | 0, x5 = h5 = E5 + h5 | 0, g5 = ft2(h5 ^ p5, (g5 = R5) ^ (R5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = kt3 + (X3 = y4) | 0, a5 = v5 + ((h5 = g5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, H5 = h5 = h5 + l5 | 0, K5 = a5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = T3 + ut3 | 0, a5 = ((p5 = J5 + G5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, v5 = a5 = (l5 = h5 + p5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(l5 ^ m5, a5 ^ B5, 32), a5 = (q4 = y4) + tt3 | 0, B5 = ft2((p5 = h5 + M5 | 0) ^ G5, (a5 = p5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), G5 = a5, a5 = Y5 + (L5 = y4) | 0, a5 = v5 + ((O5 = B5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (v5 = l5 + O5 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = q4, q4 = a5, l5 = ft2(h5 ^ v5, l5 ^ a5, 48), a5 = (a5 = G5) + (G5 = y4) | 0, h5 = (p5 = l5 + p5 | 0) ^ B5, B5 = a5 = p5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, L5 = a5 = ft2(h5, a5 ^ L5, 1), O5 = h5 = y4, T3 = d5, d5 = g5, g5 = ft2(E5 ^ H5, K5 ^ $3, 48), a5 = (a5 = R5) + (R5 = y4) | 0, x5 = h5 = g5 + x5 | 0, E5 = X3, X3 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ d5, E5 ^ a5, 1), a5 = (H5 = y4) + vt3 | 0, a5 = P5 + ((h5 = d5 + pt3 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = C5, C5 = h5 + C5 | 0, h5 = D5, D5 = a5 = E5 >>> 0 > C5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(C5 ^ T3, h5 ^ a5, 32), a5 = (a5 = Q5) + (Q5 = y4) | 0, P5 = a5 = (E5 = h5 + w5 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, w5 = E5, d5 = ft2(d5 ^ E5, a5 ^ H5, 40), a5 = Et3 + ($3 = y4) | 0, H5 = d5, a5 = D5 + ((d5 = V3 + d5 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) | 0, D5 = a5 = (E5 = d5 + C5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(h5 ^ E5, a5 ^ Q5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, K5 = h5 = d5 + w5 | 0, T3 = a5 = h5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, w5 = f5, a5 = _5 + et3 | 0, f5 = a5 = (h5 = m5 + b5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ U5, 1), a5 = It3 + (m5 = y4) | 0, a5 = N6 + ((C5 = u5 + rt3 | 0) >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, _5 = (C5 = I5 + C5 | 0) ^ w5, w5 = a5 = C5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(_5, a5 ^ F5, 32), Q5 = a5 = y4, _5 = u5, a5 = a5 + X3 | 0, a5 = (u5 = I5 + x5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, b5 = u5, u5 ^= _5, _5 = a5, u5 = ft2(u5, a5 ^ m5, 40), a5 = A8 + (U5 = y4) | 0, a5 = w5 + ((m5 = u5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) | 0, N6 = a5 = (m5 = C5 + m5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(I5 ^ m5, a5 ^ Q5, 48), et3 = a5 = y4, C5 = a5, I5 = ft2(k5 ^ M5, Z3 ^ tt3, 1), x5 = a5 = y4, M5 = f5, a5 = a5 + n9 | 0, a5 = W3 + ((f5 = I5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, S5 = a5 = (f5 = f5 + S5 | 0) >>> 0 < S5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ f5, a5 ^ R5, 32), a5 = (nt3 = y4) + M5 | 0, M5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ I5, (k5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5) ^ x5, 40), a5 = z4 + (R5 = y4) | 0, a5 = S5 + ((h5 = e6 + g5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) | 0, S5 = h5 = h5 + f5 | 0, X3 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = a5, a5 = O5 + Bt3 | 0, a5 = ((I5 = L5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, x5 = a5 = (f5 = h5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ w5, a5 ^ C5, 32), a5 = (W3 = y4) + T3 | 0, C5 = ft2((I5 = h5 + K5 | 0) ^ L5, (a5 = I5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ O5, 40), F5 = a5, a5 = bt3 + (L5 = y4) | 0, a5 = x5 + ((O5 = C5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (x5 = f5 + O5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = W3, W3 = a5, f5 = ft2(h5 ^ x5, f5 ^ a5, 48), a5 = (a5 = F5) + (F5 = y4) | 0, h5 = (I5 = f5 + I5 | 0) ^ C5, C5 = a5 = I5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, L5 = a5 = ft2(h5, a5 ^ L5, 1), yt3 = a5, O5 = h5 = y4, tt3 = p5, Z3 = d5, p5 = g5, g5 = ft2(Q5 ^ S5, X3 ^ nt3, 48), a5 = (Q5 = y4) + k5 | 0, S5 = h5 = g5 + M5 | 0, M5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ R5, 1), a5 = (R5 = y4) + dt3 | 0, a5 = N6 + ((h5 = p5 + lt3 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (d5 = h5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(d5 ^ Z3, a5 ^ P5, 32), a5 = (k5 = y4) + B5 | 0, P5 = a5 = (B5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ B5, a5 ^ R5, 40), a5 = _t3 + (nt3 = y4) | 0, N6 = p5, a5 = m5 + ((p5 = it3 + p5 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = p5 + d5 | 0, p5 = k5, k5 = a5 = m5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ m5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, R5 = h5 = p5 + B5 | 0, X3 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = l5, a5 = _5 + et3 | 0, l5 = a5 = (h5 = w5 + b5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ U5, 1), a5 = (w5 = y4) + kt3 | 0, a5 = D5 + ((B5 = u5 + ht3 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, d5 = ft2(d5 ^ (B5 = B5 + E5 | 0), (a5 = B5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5) ^ G5, 32), _5 = E5 = y4, E5 = a5, b5 = u5, a5 = _5 + M5 | 0, a5 = (u5 = d5 + S5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, S5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = Ct3 + (U5 = y4) | 0, a5 = ((w5 = u5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) + E5 | 0, D5 = _5, _5 = a5 = (E5 = B5 + w5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(d5 ^ E5, D5 ^ a5, 48), et3 = a5 = y4, B5 = a5, d5 = ft2(K5 ^ H5, T3 ^ $3, 1), M5 = a5 = y4, D5 = l5, a5 = a5 + At3 | 0, a5 = q4 + ((l5 = d5 + j5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5) | 0, v5 = a5 = (l5 = l5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ l5, a5 ^ Q5, 32), a5 = ($3 = y4) + D5 | 0, D5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ d5, (g5 = M5) ^ (M5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = Qt3 + (H5 = y4) | 0, a5 = v5 + ((h5 = g5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) | 0, K5 = h5 = h5 + l5 | 0, q4 = a5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = O5 + A8 | 0, a5 = ((d5 = L5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, v5 = a5 = (l5 = h5 + d5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(l5 ^ w5, a5 ^ B5, 32), a5 = (L5 = y4) + X3 | 0, B5 = ft2((d5 = h5 + R5 | 0) ^ yt3, (a5 = d5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ O5, 40), O5 = a5, a5 = vt3 + (G5 = y4) | 0, a5 = v5 + ((T3 = B5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (v5 = l5 + T3 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = L5, L5 = a5, l5 = ft2(h5 ^ v5, l5 ^ a5, 48), a5 = (a5 = O5) + (O5 = y4) | 0, h5 = (d5 = l5 + d5 | 0) ^ B5, B5 = a5 = d5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, G5 = a5 = ft2(h5, a5 ^ G5, 1), T3 = h5 = y4, tt3 = I5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ K5, q4 ^ $3, 48), a5 = (Q5 = y4) + M5 | 0, M5 = h5 = g5 + D5 | 0, D5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ H5, 1), a5 = (H5 = y4) + _t3 | 0, a5 = _5 + ((h5 = p5 + it3 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (I5 = h5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(I5 ^ Z3, a5 ^ P5, 32), a5 = (_5 = y4) + C5 | 0, P5 = a5 = (C5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ C5, a5 ^ H5, 40), a5 = At3 + ($3 = y4) | 0, H5 = p5, a5 = E5 + ((p5 = j5 + p5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = p5 + I5 | 0, p5 = _5, _5 = a5 = E5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ E5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, K5 = h5 = p5 + C5 | 0, q4 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, I5 = f5, a5 = b5 + et3 | 0, f5 = a5 = (h5 = w5 + S5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ U5, 1), a5 = Qt3 + (w5 = y4) | 0, a5 = k5 + ((C5 = u5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (C5 = C5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(I5 ^ C5, a5 ^ F5, 32), S5 = a5 = y4, b5 = u5, a5 = a5 + D5 | 0, a5 = (u5 = I5 + M5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, U5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = Bt3 + (M5 = y4) | 0, a5 = m5 + ((w5 = u5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (m5 = C5 + w5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = S5, S5 = a5, w5 = ft2(I5 ^ m5, C5 ^ a5, 48), et3 = a5 = y4, C5 = a5, I5 = ft2(N6 ^ R5, X3 ^ nt3, 1), D5 = a5 = y4, k5 = f5, a5 = a5 + z4 | 0, a5 = W3 + ((f5 = e6 + I5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) | 0, x5 = a5 = (f5 = f5 + x5 | 0) >>> 0 < x5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ f5, a5 ^ Q5, 32), a5 = (nt3 = y4) + k5 | 0, k5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ I5, (g5 = D5) ^ (D5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = Et3 + (N6 = y4) | 0, a5 = x5 + ((h5 = g5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) | 0, R5 = h5 = h5 + f5 | 0, X3 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = a5, a5 = T3 + It3 | 0, a5 = ((I5 = G5 + rt3 | 0) >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, x5 = a5 = (f5 = h5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ w5, a5 ^ C5, 32), a5 = (W3 = y4) + q4 | 0, C5 = ft2((I5 = h5 + K5 | 0) ^ G5, (a5 = I5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), G5 = a5, a5 = n9 + (F5 = y4) | 0, a5 = x5 + ((T3 = C5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (x5 = f5 + T3 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = W3, W3 = a5, f5 = ft2(h5 ^ x5, f5 ^ a5, 48), a5 = (a5 = G5) + (G5 = y4) | 0, h5 = (I5 = f5 + I5 | 0) ^ C5, C5 = a5 = I5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, F5 = a5 = ft2(h5, a5 ^ F5, 1), T3 = h5 = y4, tt3 = d5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ R5, X3 ^ nt3, 48), a5 = (Q5 = y4) + D5 | 0, D5 = h5 = g5 + k5 | 0, k5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ N6, 1), a5 = (N6 = y4) + ut3 | 0, a5 = S5 + ((h5 = p5 + J5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (d5 = h5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(d5 ^ Z3, a5 ^ P5, 32), a5 = (S5 = y4) + B5 | 0, P5 = a5 = (B5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ B5, a5 ^ N6, 40), a5 = kt3 + (nt3 = y4) | 0, N6 = p5, a5 = m5 + ((p5 = ht3 + p5 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = p5 + d5 | 0, p5 = S5, S5 = a5 = m5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ m5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, R5 = h5 = p5 + B5 | 0, X3 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = l5, a5 = b5 + et3 | 0, l5 = a5 = (h5 = w5 + U5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ M5, 1), a5 = (w5 = y4) + Ct3 | 0, a5 = _5 + ((B5 = u5 + st3 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (B5 = B5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(d5 ^ B5, a5 ^ O5, 32), _5 = a5 = y4, b5 = u5, a5 = a5 + k5 | 0, a5 = (u5 = d5 + D5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, U5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = dt3 + (M5 = y4) | 0, a5 = E5 + ((w5 = u5 + lt3 | 0) >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, D5 = _5, _5 = a5 = (E5 = B5 + w5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(d5 ^ E5, D5 ^ a5, 48), et3 = a5 = y4, B5 = a5, d5 = ft2(K5 ^ H5, q4 ^ $3, 1), D5 = a5 = y4, k5 = l5, a5 = a5 + Y5 | 0, a5 = L5 + ((l5 = d5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, v5 = a5 = (l5 = l5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ l5, a5 ^ Q5, 32), a5 = ($3 = y4) + k5 | 0, k5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ d5, (g5 = D5) ^ (D5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = bt3 + (H5 = y4) | 0, a5 = v5 + ((h5 = g5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, K5 = h5 = h5 + l5 | 0, q4 = a5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = T3 + n9 | 0, a5 = ((d5 = F5 + mt3 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, v5 = a5 = (l5 = h5 + d5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(l5 ^ w5, a5 ^ B5, 32), a5 = (L5 = y4) + X3 | 0, B5 = ft2((d5 = h5 + R5 | 0) ^ F5, (a5 = d5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), O5 = a5, a5 = Qt3 + (F5 = y4) | 0, a5 = v5 + ((T3 = B5 + ot3 | 0) >>> 0 < ot3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (v5 = l5 + T3 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = L5, L5 = a5, l5 = ft2(h5 ^ v5, l5 ^ a5, 48), a5 = (a5 = O5) + (O5 = y4) | 0, h5 = (d5 = l5 + d5 | 0) ^ B5, B5 = a5 = d5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, F5 = a5 = ft2(h5, a5 ^ F5, 1), T3 = h5 = y4, tt3 = I5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ K5, q4 ^ $3, 48), a5 = (Q5 = y4) + D5 | 0, D5 = h5 = g5 + k5 | 0, k5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ H5, 1), a5 = (H5 = y4) + Y5 | 0, a5 = _5 + ((h5 = p5 + ct3 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (I5 = h5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(I5 ^ Z3, a5 ^ P5, 32), a5 = (_5 = y4) + C5 | 0, P5 = a5 = (C5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ C5, a5 ^ H5, 40), a5 = dt3 + ($3 = y4) | 0, H5 = p5, a5 = E5 + ((p5 = lt3 + p5 | 0) >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = p5 + I5 | 0, p5 = _5, _5 = a5 = E5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ E5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, K5 = h5 = p5 + C5 | 0, q4 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, I5 = f5, a5 = b5 + et3 | 0, f5 = a5 = (h5 = w5 + U5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ M5, 1), a5 = Ct3 + (w5 = y4) | 0, a5 = S5 + ((C5 = u5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (C5 = C5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(I5 ^ C5, a5 ^ G5, 32), S5 = a5 = y4, b5 = u5, a5 = a5 + k5 | 0, a5 = (u5 = I5 + D5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, U5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = kt3 + (M5 = y4) | 0, a5 = m5 + ((w5 = u5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (m5 = C5 + w5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = S5, S5 = a5, w5 = ft2(I5 ^ m5, C5 ^ a5, 48), et3 = a5 = y4, C5 = a5, I5 = ft2(N6 ^ R5, X3 ^ nt3, 1), D5 = a5 = y4, k5 = f5, a5 = a5 + At3 | 0, a5 = W3 + ((f5 = I5 + j5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5) | 0, x5 = a5 = (f5 = f5 + x5 | 0) >>> 0 < x5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ f5, a5 ^ Q5, 32), a5 = (nt3 = y4) + k5 | 0, k5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ I5, (g5 = D5) ^ (D5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = bt3 + (N6 = y4) | 0, a5 = x5 + ((h5 = g5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, R5 = h5 = h5 + f5 | 0, X3 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = a5, a5 = T3 + Et3 | 0, a5 = ((I5 = F5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, x5 = a5 = (f5 = h5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ w5, a5 ^ C5, 32), a5 = (W3 = y4) + q4 | 0, C5 = ft2((I5 = h5 + K5 | 0) ^ F5, (a5 = I5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), G5 = a5, a5 = z4 + (F5 = y4) | 0, a5 = x5 + ((T3 = e6 + C5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (x5 = f5 + T3 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = W3, W3 = a5, f5 = ft2(h5 ^ x5, f5 ^ a5, 48), a5 = (a5 = G5) + (G5 = y4) | 0, h5 = (I5 = f5 + I5 | 0) ^ C5, C5 = a5 = I5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, F5 = a5 = ft2(h5, a5 ^ F5, 1), T3 = h5 = y4, tt3 = d5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ R5, X3 ^ nt3, 48), a5 = (Q5 = y4) + D5 | 0, D5 = h5 = g5 + k5 | 0, k5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ N6, 1), a5 = (N6 = y4) + Bt3 | 0, a5 = S5 + ((h5 = p5 + at3 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (d5 = h5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(d5 ^ Z3, a5 ^ P5, 32), a5 = (S5 = y4) + B5 | 0, P5 = a5 = (B5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ B5, a5 ^ N6, 40), a5 = A8 + (nt3 = y4) | 0, N6 = p5, a5 = m5 + ((p5 = r11 + p5 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = p5 + d5 | 0, p5 = S5, S5 = a5 = m5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ m5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, R5 = h5 = p5 + B5 | 0, X3 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = l5, a5 = b5 + et3 | 0, l5 = a5 = (h5 = w5 + U5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ M5, 1), a5 = (w5 = y4) + It3 | 0, a5 = _5 + ((B5 = u5 + rt3 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (B5 = B5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(d5 ^ B5, a5 ^ O5, 32), _5 = a5 = y4, b5 = u5, a5 = a5 + k5 | 0, a5 = (u5 = d5 + D5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, U5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = _t3 + (M5 = y4) | 0, a5 = E5 + ((w5 = u5 + it3 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5) | 0, D5 = _5, _5 = a5 = (E5 = B5 + w5 | 0) >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5, w5 = ft2(d5 ^ E5, D5 ^ a5, 48), et3 = a5 = y4, B5 = a5, d5 = ft2(K5 ^ H5, q4 ^ $3, 1), D5 = a5 = y4, k5 = l5, a5 = a5 + vt3 | 0, a5 = L5 + ((l5 = d5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, v5 = a5 = (l5 = l5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ l5, a5 ^ Q5, 32), a5 = ($3 = y4) + k5 | 0, k5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ d5, (g5 = D5) ^ (D5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = ut3 + (H5 = y4) | 0, a5 = v5 + ((h5 = g5 + J5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5) | 0, K5 = h5 = h5 + l5 | 0, q4 = a5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = T3 + bt3 | 0, a5 = ((d5 = F5 + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, v5 = a5 = (l5 = h5 + d5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(l5 ^ w5, a5 ^ B5, 32), a5 = (L5 = y4) + X3 | 0, B5 = ft2((d5 = h5 + R5 | 0) ^ F5, (a5 = d5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), O5 = a5, a5 = dt3 + (F5 = y4) | 0, a5 = v5 + ((T3 = B5 + lt3 | 0) >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (v5 = l5 + T3 | 0) >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = L5, L5 = a5, l5 = ft2(h5 ^ v5, l5 ^ a5, 48), a5 = (a5 = O5) + (O5 = y4) | 0, h5 = (d5 = l5 + d5 | 0) ^ B5, B5 = a5 = d5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, F5 = a5 = ft2(h5, a5 ^ F5, 1), T3 = h5 = y4, tt3 = I5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ K5, q4 ^ $3, 48), a5 = (Q5 = y4) + D5 | 0, D5 = h5 = g5 + k5 | 0, k5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ H5, 1), a5 = (H5 = y4) + Qt3 | 0, a5 = _5 + ((h5 = p5 + ot3 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (I5 = h5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(I5 ^ Z3, a5 ^ P5, 32), a5 = (_5 = y4) + C5 | 0, P5 = a5 = (C5 = h5 + tt3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ C5, a5 ^ H5, 40), a5 = n9 + ($3 = y4) | 0, H5 = p5, a5 = E5 + ((p5 = mt3 + p5 | 0) >>> 0 < mt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = p5 + I5 | 0, p5 = _5, _5 = a5 = E5 >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ E5, p5 ^ a5, 48), a5 = (a5 = P5) + (P5 = y4) | 0, K5 = h5 = p5 + C5 | 0, q4 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, I5 = f5, a5 = b5 + et3 | 0, f5 = a5 = (h5 = w5 + U5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ M5, 1), a5 = _t3 + (w5 = y4) | 0, a5 = S5 + ((C5 = u5 + it3 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (C5 = C5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(I5 ^ C5, a5 ^ G5, 32), S5 = a5 = y4, b5 = u5, a5 = a5 + k5 | 0, a5 = (u5 = I5 + D5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, U5 = u5, u5 ^= b5, b5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = Y5 + (M5 = y4) | 0, a5 = m5 + ((w5 = u5 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (m5 = C5 + w5 | 0) >>> 0 < C5 >>> 0 ? a5 + 1 | 0 : a5, C5 = S5, S5 = a5, w5 = ft2(I5 ^ m5, C5 ^ a5, 48), et3 = a5 = y4, C5 = a5, I5 = ft2(N6 ^ R5, X3 ^ nt3, 1), D5 = a5 = y4, k5 = f5, a5 = a5 + kt3 | 0, a5 = W3 + ((f5 = I5 + ht3 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, x5 = a5 = (f5 = f5 + x5 | 0) >>> 0 < x5 >>> 0 ? a5 + 1 | 0 : a5, Q5 = ft2(g5 ^ f5, a5 ^ Q5, 32), a5 = (nt3 = y4) + k5 | 0, k5 = h5 = Q5 + h5 | 0, g5 = ft2(h5 ^ I5, (g5 = D5) ^ (D5 = h5 >>> 0 < Q5 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = vt3 + (N6 = y4) | 0, a5 = x5 + ((h5 = g5 + pt3 | 0) >>> 0 < pt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, R5 = h5 = h5 + f5 | 0, X3 = a5 = h5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = a5, a5 = T3 + Ct3 | 0, a5 = ((I5 = F5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) + f5 | 0, x5 = a5 = (f5 = h5 + I5 | 0) >>> 0 < I5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(f5 ^ w5, a5 ^ C5, 32), a5 = (W3 = y4) + q4 | 0, C5 = ft2((I5 = h5 + K5 | 0) ^ F5, (a5 = I5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), G5 = a5, a5 = A8 + (F5 = y4) | 0, a5 = x5 + ((T3 = C5 + r11 | 0) >>> 0 < r11 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (x5 = f5 + T3 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, f5 = W3, W3 = a5, f5 = ft2(h5 ^ x5, f5 ^ a5, 48), a5 = (a5 = G5) + (G5 = y4) | 0, h5 = (I5 = f5 + I5 | 0) ^ C5, C5 = a5 = I5 >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, F5 = a5 = ft2(h5, a5 ^ F5, 1), T3 = h5 = y4, tt3 = d5, Z3 = p5, p5 = g5, g5 = ft2(Q5 ^ R5, X3 ^ nt3, 48), a5 = (Q5 = y4) + D5 | 0, D5 = h5 = g5 + k5 | 0, k5 = a5 = h5 >>> 0 < g5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ p5, a5 ^ N6, 1), a5 = (R5 = y4) + At3 | 0, a5 = S5 + ((h5 = p5 + j5 | 0) >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5) | 0, m5 = a5 = (d5 = h5 + m5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, h5 = ft2(d5 ^ Z3, a5 ^ P5, 32), a5 = (S5 = y4) + B5 | 0, P5 = B5 = h5 + tt3 | 0, N6 = a5 = B5 >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ B5, a5 ^ R5, 40), a5 = Et3 + (tt3 = y4) | 0, R5 = p5, a5 = m5 + ((p5 = V3 + p5 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) | 0, B5 = p5 + d5 | 0, p5 = S5, S5 = a5 = B5 >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(h5 ^ B5, p5 ^ a5, 48), a5 = (a5 = N6) + (N6 = y4) | 0, P5 = h5 = p5 + P5 | 0, X3 = a5 = h5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = l5, a5 = b5 + et3 | 0, l5 = a5 = (h5 = w5 + U5 | 0) >>> 0 < w5 >>> 0 ? a5 + 1 | 0 : a5, u5 = ft2(h5 ^ u5, a5 ^ M5, 1), a5 = (w5 = y4) + z4 | 0, a5 = _5 + ((m5 = e6 + u5 | 0) >>> 0 < u5 >>> 0 ? a5 + 1 | 0 : a5) | 0, E5 = a5 = (m5 = m5 + E5 | 0) >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5, _5 = d5 = ft2(d5 ^ m5, a5 ^ O5, 32), b5 = a5 = y4, U5 = u5, a5 = a5 + k5 | 0, a5 = (u5 = d5 + D5 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, M5 = u5, u5 ^= U5, U5 = a5, u5 = ft2(u5, a5 ^ w5, 40), a5 = Bt3 + (D5 = y4) | 0, a5 = E5 + ((d5 = u5 + at3 | 0) >>> 0 < at3 >>> 0 ? a5 + 1 | 0 : a5) | 0, k5 = (d5 = d5 + m5 | 0) ^ _5, _5 = a5 = d5 >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, m5 = ft2(k5, a5 ^ b5, 48), O5 = a5 = y4, w5 = a5, b5 = E5 = ft2(K5 ^ H5, q4 ^ $3, 1), k5 = a5 = y4, H5 = l5, a5 = a5 + ut3 | 0, a5 = L5 + ((l5 = E5 + J5 | 0) >>> 0 < J5 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (l5 = l5 + v5 | 0) >>> 0 < v5 >>> 0 ? a5 + 1 | 0 : a5, v5 = Q5, Q5 = a5, E5 = ft2(g5 ^ l5, v5 ^ a5, 32), a5 = (Z3 = y4) + H5 | 0, v5 = h5 = E5 + h5 | 0, g5 = ft2(g5 = h5 ^ b5, (b5 = h5 >>> 0 < E5 >>> 0 ? a5 + 1 | 0 : a5) ^ k5, 40), a5 = It3 + (k5 = y4) | 0, a5 = Q5 + ((h5 = g5 + rt3 | 0) >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, Q5 = h5 = h5 + l5 | 0, H5 = a5 = h5 >>> 0 < l5 >>> 0 ? a5 + 1 | 0 : a5, l5 = a5, a5 = T3 + Et3 | 0, a5 = ((L5 = V3) >>> 0 > (V3 = F5 + V3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + l5 | 0, Et3 = a5 = (h5 = h5 + V3 | 0) >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5, V3 = ft2(h5 ^ m5, a5 ^ w5, 32), a5 = (K5 = y4) + X3 | 0, w5 = ft2((l5 = P5 + V3 | 0) ^ F5, (a5 = l5 >>> 0 < V3 >>> 0 ? a5 + 1 | 0 : a5) ^ T3, 40), L5 = a5, a5 = Bt3 + (q4 = y4) | 0, a5 = Et3 + ((F5 = at3) >>> 0 > (at3 = w5 + at3 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (at3 = h5 + at3 | 0) >>> 0 < h5 >>> 0 ? a5 + 1 | 0 : a5, h5 = V3 ^ at3, V3 = a5;
                              Bt3 = ft2(h5, a5 ^ K5, 48), a5 = (Et3 = y4) + L5 | 0, l5 = a5 = (h5 = l5 + Bt3 | 0) >>> 0 < Bt3 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(h5 ^ w5, a5 ^ q4, 1), w5 = y4, K5 = a5, q4 = I5, I5 = rt3, L5 = It3, It3 = ft2(E5 ^ Q5, H5 ^ Z3, 48), a5 = (E5 = y4) + b5 | 0, b5 = I5, v5 = a5 = (rt3 = v5 + It3 | 0) >>> 0 < It3 >>> 0 ? a5 + 1 | 0 : a5, I5 = ft2(g5 ^ (Q5 = rt3), a5 ^ k5, 1), a5 = (k5 = y4) + L5 | 0, a5 = _5 + (I5 >>> 0 > (rt3 = b5 + I5 | 0) >>> 0 ? a5 + 1 | 0 : a5) | 0, g5 = a5 = (rt3 = d5 + rt3 | 0) >>> 0 < d5 >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ rt3, a5 ^ N6, 32), a5 = (a5 = C5) + (C5 = y4) | 0, _5 = d5 = p5 + q4 | 0, b5 = a5 = d5 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, d5 = ft2(d5 ^ I5, a5 ^ k5, 40), a5 = (k5 = y4) + Qt3 | 0, a5 = (d5 >>> 0 > (ot3 = d5 + ot3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, g5 = a5 = (g5 = ot3) >>> 0 > (ot3 = rt3 + ot3 | 0) >>> 0 ? a5 + 1 | 0 : a5, p5 = ft2(p5 ^ ot3, a5 ^ C5, 48), a5 = (I5 = y4) + b5 | 0, C5 = rt3 = p5 + _5 | 0, Qt3 = a5 = rt3 >>> 0 < p5 >>> 0 ? a5 + 1 | 0 : a5, _5 = e6, b5 = z4, a5 = U5 + O5 | 0, rt3 = a5 = (e6 = m5 + M5 | 0) >>> 0 < m5 >>> 0 ? a5 + 1 | 0 : a5, z4 = ft2(e6 ^ u5, a5 ^ D5, 1), a5 = (m5 = y4) + b5 | 0, a5 = S5 + ((u5 = _5 + z4 | 0) >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5) | 0, f5 = ft2((u5 = u5 + B5 | 0) ^ f5, (a5 = u5 >>> 0 < B5 >>> 0 ? a5 + 1 | 0 : a5) ^ G5, 32), _5 = a5, S5 = st3, st3 = z4, a5 = (B5 = y4) + v5 | 0, v5 = m5, m5 = a5 = (z4 = f5 + Q5 | 0) >>> 0 < f5 >>> 0 ? a5 + 1 | 0 : a5, st3 = ft2(z4 ^ st3, v5 ^ a5, 40), a5 = (Q5 = y4) + Ct3 | 0, a5 = ((Ct3 = S5 + st3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) + _5 | 0, _5 = Ct3, u5 = f5 ^ (Ct3 = u5 + Ct3 | 0), f5 = a5 = _5 >>> 0 > Ct3 >>> 0 ? a5 + 1 | 0 : a5, a5 = ft2(u5, a5 ^ B5, 48), U5 = u5 = y4, B5 = a5, v5 = j5, _5 = At3, j5 = ft2(P5 ^ R5, X3 ^ tt3, 1), b5 = a5 = y4, a5 = a5 + bt3 | 0, a5 = W3 + ((j5 = (S5 = j5) + gt3 | 0) >>> 0 < gt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, gt3 = a5 = (j5 = x5 + j5 | 0) >>> 0 < x5 >>> 0 ? a5 + 1 | 0 : a5, At3 = ft2(j5 ^ It3, a5 ^ E5, 32), a5 = (x5 = y4) + rt3 | 0, rt3 = e6 = At3 + e6 | 0, It3 = ft2(e6 ^ S5, (E5 = e6 >>> 0 < At3 >>> 0 ? a5 + 1 | 0 : a5) ^ b5, 40), a5 = (a5 = _5) + (_5 = y4) | 0, a5 = gt3 + ((e6 = It3 + v5 | 0) >>> 0 < It3 >>> 0 ? a5 + 1 | 0 : a5) | 0, gt3 = e6 = e6 + j5 | 0, bt3 = a5 = e6 >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5, j5 = a5, a5 = w5 + _t3 | 0, a5 = ((S5 = it3) >>> 0 > (it3 = K5 + it3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + j5 | 0, _t3 = a5 = (j5 = e6 + it3 | 0) >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5, it3 = ft2(B5 ^ j5, a5 ^ u5, 32), a5 = (S5 = y4) + Qt3 | 0, u5 = e6 = it3 + C5 | 0, e6 = ft2(e6 ^ K5, (v5 = w5) ^ (w5 = e6 >>> 0 < it3 >>> 0 ? a5 + 1 | 0 : a5), 40), a5 = kt3 + (b5 = y4) | 0, kt3 = e6, a5 = _t3 + ((e6 = ht3 + e6 | 0) >>> 0 < ht3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (e6 = e6 + j5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5, _t3 = e6, M5 = (c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24) ^ e6, v5 = a5, D5 = a5 ^ (c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24), j5 = ft2(At3 ^ gt3, x5 ^ bt3, 48), a5 = (gt3 = y4) + E5 | 0, E5 = e6 = j5 + rt3 | 0, bt3 = a5 = e6 >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5, At3 = lt3, a5 = m5 + U5 | 0, lt3 = a5 = (e6 = B5 + z4 | 0) >>> 0 < z4 >>> 0 ? a5 + 1 | 0 : a5, st3 = ft2(e6 ^ st3, a5 ^ Q5, 1), a5 = (B5 = y4) + dt3 | 0, a5 = ((At3 = st3 + At3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5) + g5 | 0, At3 = a5 = (dt3 = At3 + ot3 | 0) >>> 0 < At3 >>> 0 ? a5 + 1 | 0 : a5, rt3 = ft2(dt3 ^ Bt3, a5 ^ Et3, 32), a5 = (z4 = y4) + bt3 | 0, ot3 = a5 = (ht3 = rt3 + E5 | 0) >>> 0 < rt3 >>> 0 ? a5 + 1 | 0 : a5, Bt3 = rt3, rt3 = ft2(st3 ^ ht3, a5 ^ B5, 40), a5 = (g5 = y4) + vt3 | 0, a5 = (rt3 >>> 0 > (st3 = rt3 + pt3 | 0) >>> 0 ? a5 + 1 | 0 : a5) + At3 | 0, m5 = z4, z4 = a5 = (dt3 = st3 + dt3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5, st3 = ft2(Bt3 ^ (pt3 = dt3), m5 ^ a5, 48), a5 = (B5 = y4) + ot3 | 0, a5 = (At3 = st3 + ht3 | 0) >>> 0 < st3 >>> 0 ? a5 + 1 | 0 : a5, ht3 = At3, At3 ^= M5, s4[t7 + 8 | 0] = At3, s4[t7 + 9 | 0] = At3 >>> 8, s4[t7 + 10 | 0] = At3 >>> 16, s4[t7 + 11 | 0] = At3 >>> 24, ot3 = a5, a5 ^= D5, s4[t7 + 12 | 0] = a5, s4[t7 + 13 | 0] = a5 >>> 8, s4[t7 + 14 | 0] = a5 >>> 16, s4[t7 + 15 | 0] = a5 >>> 24, dt3 = e6, At3 = lt3, e6 = j5, j5 = ft2(d5 ^ C5, k5 ^ Qt3, 1), a5 = (vt3 = y4) + A8 | 0, a5 = (j5 >>> 0 > (lt3 = j5 + r11 | 0) >>> 0 ? a5 + 1 | 0 : a5) + V3 | 0, at3 = a5 = (C5 = lt3) >>> 0 > (lt3 = at3 + lt3 | 0) >>> 0 ? a5 + 1 | 0 : a5, e6 = ft2(e6 ^ lt3, a5 ^ gt3, 32), a5 = (a5 = At3) + (At3 = y4) | 0, gt3 = a5 = (dt3 = e6 + dt3 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5, Bt3 = e6, dt3 = ft2(j5 ^ (V3 = dt3), a5 ^ vt3, 40), a5 = (d5 = y4) + n9 | 0, a5 = at3 + ((e6 = dt3 + mt3 | 0) >>> 0 < dt3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (e6 = e6 + lt3 | 0) >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5, at3 = e6, e6 ^= Bt3, Bt3 = a5, lt3 = ft2(e6, a5 ^ At3, 48), a5 = (C5 = y4) + gt3 | 0, V3 = e6 = lt3 + V3 | 0, gt3 = e6 >>> 0 < lt3 >>> 0 ? a5 + 1 | 0 : a5, It3 = e6 = ft2(E5 ^ It3, _5 ^ bt3, 1), vt3 = a5 = y4, a5 = a5 + Y5 | 0, a5 = f5 + ((e6 = e6 + ct3 | 0) >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, Y5 = a5 = (j5 = e6 + Ct3 | 0) >>> 0 < Ct3 >>> 0 ? a5 + 1 | 0 : a5, e6 = (At3 = ft2(p5 ^ j5, a5 ^ I5, 32)) + h5 | 0, a5 = (h5 = y4) + l5 | 0, Ct3 = e6, e6 = (ct3 = ft2(f5 = e6 ^ It3, (It3 = e6 >>> 0 < At3 >>> 0 ? a5 + 1 | 0 : a5) ^ vt3, 40)) + J5 | 0, a5 = (J5 = y4) + ut3 | 0, a5 = Y5 + (e6 >>> 0 < ct3 >>> 0 ? a5 + 1 | 0 : a5) | 0, a5 = (Y5 = e6 + j5 | 0) >>> 0 < j5 >>> 0 ? a5 + 1 | 0 : a5, j5 = Y5 ^ St3 ^ V3, s4[0 | (e6 = t7)] = j5, s4[e6 + 1 | 0] = j5 >>> 8, s4[e6 + 2 | 0] = j5 >>> 16, s4[e6 + 3 | 0] = j5 >>> 24, j5 = a5 ^ i4 ^ gt3, s4[e6 + 4 | 0] = j5, s4[e6 + 5 | 0] = j5 >>> 8, s4[e6 + 6 | 0] = j5 >>> 16, s4[e6 + 7 | 0] = j5 >>> 24, j5 = (At3 = ft2(Y5 ^ At3, a5 ^ h5, 48)) + Ct3 | 0, a5 = (Ct3 = y4) + It3 | 0, a5 = (It3 = j5 >>> 0 < At3 >>> 0 ? a5 + 1 | 0 : a5) ^ (c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24) ^ Bt3, Y5 = (c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24) ^ at3 ^ j5, s4[e6 + 16 | 0] = Y5, s4[e6 + 17 | 0] = Y5 >>> 8, s4[e6 + 18 | 0] = Y5 >>> 16, s4[e6 + 19 | 0] = Y5 >>> 24, s4[e6 + 20 | 0] = a5, s4[e6 + 21 | 0] = a5 >>> 8, s4[e6 + 22 | 0] = a5 >>> 16, s4[e6 + 23 | 0] = a5 >>> 24, e6 = ft2(it3 ^ _t3, v5 ^ S5, 48), Y5 = y4, at3 = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24, a5 = (c4[t7 + 32 | 0] | c4[t7 + 33 | 0] << 8 | c4[t7 + 34 | 0] << 16 | c4[t7 + 35 | 0] << 24) ^ ft2(rt3 ^ ht3, g5 ^ ot3, 1) ^ e6, s4[t7 + 32 | 0] = a5, s4[t7 + 33 | 0] = a5 >>> 8, s4[t7 + 34 | 0] = a5 >>> 16, s4[t7 + 35 | 0] = a5 >>> 24, a5 = y4 ^ at3 ^ Y5, s4[t7 + 36 | 0] = a5, s4[t7 + 37 | 0] = a5 >>> 8, s4[t7 + 38 | 0] = a5 >>> 16, s4[t7 + 39 | 0] = a5 >>> 24, a5 = w5 + Y5 | 0, a5 = (at3 = e6 + u5 | 0) >>> 0 < e6 >>> 0 ? a5 + 1 | 0 : a5, rt3 = (c4[(e6 = t7) + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24) ^ z4 ^ a5, Y5 = (c4[e6 + 24 | 0] | c4[e6 + 25 | 0] << 8 | c4[e6 + 26 | 0] << 16 | c4[e6 + 27 | 0] << 24) ^ pt3 ^ at3, s4[e6 + 24 | 0] = Y5, s4[e6 + 25 | 0] = Y5 >>> 8, s4[e6 + 26 | 0] = Y5 >>> 16, s4[e6 + 27 | 0] = Y5 >>> 24, s4[e6 + 28 | 0] = rt3, s4[e6 + 29 | 0] = rt3 >>> 8, s4[e6 + 30 | 0] = rt3 >>> 16, s4[e6 + 31 | 0] = rt3 >>> 24, rt3 = c4[e6 + 44 | 0] | c4[e6 + 45 | 0] << 8 | c4[e6 + 46 | 0] << 16 | c4[e6 + 47 | 0] << 24, e6 = lt3 ^ (c4[e6 + 40 | 0] | c4[e6 + 41 | 0] << 8 | c4[e6 + 42 | 0] << 16 | c4[e6 + 43 | 0] << 24) ^ ft2(j5 ^ ct3, J5 ^ It3, 1), s4[t7 + 40 | 0] = e6, s4[t7 + 41 | 0] = e6 >>> 8, s4[t7 + 42 | 0] = e6 >>> 16, s4[t7 + 43 | 0] = e6 >>> 24, e6 = C5 ^ y4 ^ rt3, s4[t7 + 44 | 0] = e6, s4[t7 + 45 | 0] = e6 >>> 8, s4[t7 + 46 | 0] = e6 >>> 16, s4[t7 + 47 | 0] = e6 >>> 24, j5 = c4[t7 + 60 | 0] | c4[t7 + 61 | 0] << 8 | c4[t7 + 62 | 0] << 16 | c4[t7 + 63 | 0] << 24, e6 = At3 ^ (c4[t7 + 56 | 0] | c4[t7 + 57 | 0] << 8 | c4[t7 + 58 | 0] << 16 | c4[t7 + 59 | 0] << 24) ^ ft2(V3 ^ dt3, d5 ^ gt3, 1), s4[t7 + 56 | 0] = e6, s4[t7 + 57 | 0] = e6 >>> 8, s4[t7 + 58 | 0] = e6 >>> 16, s4[t7 + 59 | 0] = e6 >>> 24, e6 = Ct3 ^ y4 ^ j5, s4[t7 + 60 | 0] = e6, s4[t7 + 61 | 0] = e6 >>> 8, s4[t7 + 62 | 0] = e6 >>> 16, s4[t7 + 63 | 0] = e6 >>> 24, j5 = c4[t7 + 52 | 0] | c4[t7 + 53 | 0] << 8 | c4[t7 + 54 | 0] << 16 | c4[t7 + 55 | 0] << 24, e6 = st3 ^ (c4[t7 + 48 | 0] | c4[t7 + 49 | 0] << 8 | c4[t7 + 50 | 0] << 16 | c4[t7 + 51 | 0] << 24) ^ ft2(at3 ^ kt3, a5 ^ b5, 1), s4[t7 + 48 | 0] = e6, s4[t7 + 49 | 0] = e6 >>> 8, s4[t7 + 50 | 0] = e6 >>> 16, s4[t7 + 51 | 0] = e6 >>> 24, e6 = B5 ^ y4 ^ j5, s4[t7 + 52 | 0] = e6, s4[t7 + 53 | 0] = e6 >>> 8, s4[t7 + 54 | 0] = e6 >>> 16, s4[t7 + 55 | 0] = e6 >>> 24;
                            }
                            function m4(t7, e6, r11, n9, A8, i4, o5) {
                              var h5, g5, u5, l5, f5, p5, d5, C5, m5, B5, w5, v5, _5, Q5, b5, k5, S5, N6, M5, x5, F5, P5, T3, R5, U5, L5, O5, Y5, K5, J5, j5, z4, q4, X3, V3, W3, Z3, $3, tt3, et3, rt3, nt3, At3, it3, ot3, st3, at3, ht3, ut3 = 0, lt3 = 0, ft3 = 0, pt3 = 0, dt3 = 0, It3 = 0, yt3 = 0, Ct3 = 0, mt3 = 0, Et3 = 0, wt3 = 0, vt3 = 0, _t3 = 0, Qt3 = 0, kt3 = 0, Dt3 = 0, St3 = 0, Nt3 = 0, Mt3 = 0, xt3 = 0, Ft3 = 0, Pt3 = 0, Tt3 = 0, Rt3 = 0, Ut3 = 0, Gt3 = 0, Ht3 = 0, Lt3 = 0, Ot3 = 0, Yt3 = 0, Kt3 = 0, Jt3 = 0, jt3 = 0, zt3 = 0, qt3 = 0, Xt3 = 0, Vt3 = 0, Wt3 = 0, Zt3 = 0, $t3 = 0, te3 = 0, ee3 = 0, re3 = 0, ne3 = 0, Ae3 = 0, ie3 = 0;
                              return I4 = u5 = I4 - 560 | 0, gt2(ft3 = u5 + 352 | 0), o5 && G4(ft3, 35136, 34, 0), ct2(u5 + 288 | 0, i4, 32, 0), G4(pt3 = u5 + 352 | 0, u5 + 320 | 0, 32, 0), G4(pt3, r11, n9, A8), D4(pt3, Ct3 = u5 + 224 | 0), mt3 = c4[(lt3 = i4) + 32 | 0] | c4[lt3 + 33 | 0] << 8 | c4[lt3 + 34 | 0] << 16 | c4[lt3 + 35 | 0] << 24, wt3 = c4[lt3 + 36 | 0] | c4[lt3 + 37 | 0] << 8 | c4[lt3 + 38 | 0] << 16 | c4[lt3 + 39 | 0] << 24, dt3 = c4[lt3 + 40 | 0] | c4[lt3 + 41 | 0] << 8 | c4[lt3 + 42 | 0] << 16 | c4[lt3 + 43 | 0] << 24, ut3 = c4[lt3 + 44 | 0] | c4[lt3 + 45 | 0] << 8 | c4[lt3 + 46 | 0] << 16 | c4[lt3 + 47 | 0] << 24, ft3 = c4[lt3 + 48 | 0] | c4[lt3 + 49 | 0] << 8 | c4[lt3 + 50 | 0] << 16 | c4[lt3 + 51 | 0] << 24, i4 = c4[lt3 + 52 | 0] | c4[lt3 + 53 | 0] << 8 | c4[lt3 + 54 | 0] << 16 | c4[lt3 + 55 | 0] << 24, It3 = c4[lt3 + 60 | 0] | c4[lt3 + 61 | 0] << 8 | c4[lt3 + 62 | 0] << 16 | c4[lt3 + 63 | 0] << 24, lt3 = c4[lt3 + 56 | 0] | c4[lt3 + 57 | 0] << 8 | c4[lt3 + 58 | 0] << 16 | c4[lt3 + 59 | 0] << 24, s4[t7 + 56 | 0] = lt3, s4[t7 + 57 | 0] = lt3 >>> 8, s4[t7 + 58 | 0] = lt3 >>> 16, s4[t7 + 59 | 0] = lt3 >>> 24, s4[t7 + 60 | 0] = It3, s4[t7 + 61 | 0] = It3 >>> 8, s4[t7 + 62 | 0] = It3 >>> 16, s4[t7 + 63 | 0] = It3 >>> 24, s4[t7 + 48 | 0] = ft3, s4[t7 + 49 | 0] = ft3 >>> 8, s4[t7 + 50 | 0] = ft3 >>> 16, s4[t7 + 51 | 0] = ft3 >>> 24, s4[t7 + 52 | 0] = i4, s4[t7 + 53 | 0] = i4 >>> 8, s4[t7 + 54 | 0] = i4 >>> 16, s4[t7 + 55 | 0] = i4 >>> 24, s4[t7 + 40 | 0] = dt3, s4[t7 + 41 | 0] = dt3 >>> 8, s4[t7 + 42 | 0] = dt3 >>> 16, s4[t7 + 43 | 0] = dt3 >>> 24, s4[t7 + 44 | 0] = ut3, s4[t7 + 45 | 0] = ut3 >>> 8, s4[t7 + 46 | 0] = ut3 >>> 16, s4[t7 + 47 | 0] = ut3 >>> 24, s4[0 | (i4 = t7 + 32 | 0)] = mt3, s4[i4 + 1 | 0] = mt3 >>> 8, s4[i4 + 2 | 0] = mt3 >>> 16, s4[i4 + 3 | 0] = mt3 >>> 24, s4[i4 + 4 | 0] = wt3, s4[i4 + 5 | 0] = wt3 >>> 8, s4[i4 + 6 | 0] = wt3 >>> 16, s4[i4 + 7 | 0] = wt3 >>> 24, E4(Ct3), H4(u5, Ct3), bt2(t7, u5), gt2(pt3), o5 && G4(pt3, 35136, 34, 0), G4(o5 = u5 + 352 | 0, t7, 64, 0), G4(o5, r11, n9, A8), D4(o5, yt3 = u5 + 160 | 0), E4(yt3), s4[u5 + 288 | 0] = 248 & c4[u5 + 288 | 0], s4[u5 + 319 | 0] = 63 & c4[u5 + 319 | 0] | 64, r11 = c4[23 + (t7 = g5 = u5 + 288 | 0) | 0], dt3 = Bt2(l5 = c4[t7 + 21 | 0] | c4[t7 + 22 | 0] << 8 | r11 << 16 & 2031616, 0, f5 = (c4[yt3 + 28 | 0] | c4[yt3 + 29 | 0] << 8 | c4[yt3 + 30 | 0] << 16 | c4[yt3 + 31 | 0] << 24) >>> 7 | 0, 0), ft3 = y4, r11 = (t7 = c4[yt3 + 27 | 0]) >>> 24 | 0, A8 = t7 << 8 | (ut3 = c4[yt3 + 23 | 0] | c4[yt3 + 24 | 0] << 8 | c4[yt3 + 25 | 0] << 16 | c4[yt3 + 26 | 0] << 24) >>> 24, t7 = Bt2(p5 = 2097151 & ((3 & (wt3 = (t7 = (n9 = c4[yt3 + 28 | 0]) >>> 16 | 0) | r11)) << 30 | (r11 = (n9 <<= 16) | A8) >>> 2), 0, d5 = (o5 = c4[g5 + 23 | 0] | c4[g5 + 24 | 0] << 8 | c4[g5 + 25 | 0] << 16 | c4[g5 + 26 | 0] << 24) >>> 5 & 2097151, 0), r11 = y4 + ft3 | 0, n9 = t7 >>> 0 > (A8 = t7 + dt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(C5 = (r11 = c4[yt3 + 23 | 0]) << 16 & 2031616 | c4[yt3 + 21 | 0] | c4[yt3 + 22 | 0] << 8, 0, m5 = (c4[g5 + 28 | 0] | c4[g5 + 29 | 0] << 8 | c4[g5 + 30 | 0] << 16 | c4[g5 + 31 | 0] << 24) >>> 7 | 0, 0), n9 = y4 + n9 | 0, ft3 = r11 = t7 + A8 | 0, A8 = t7 >>> 0 > r11 >>> 0 ? n9 + 1 | 0 : n9, n9 = (t7 = c4[g5 + 27 | 0]) >>> 24 | 0, o5 = t7 << 8 | o5 >>> 24, t7 = Bt2(B5 = 2097151 & ((3 & (n9 |= r11 = (t7 = c4[g5 + 28 | 0]) >>> 16 | 0)) << 30 | (r11 = (t7 <<= 16) | o5) >>> 2), 0, w5 = ut3 >>> 5 & 2097151, 0), r11 = y4 + A8 | 0, lt3 = n9 = t7 + ft3 | 0, A8 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, ut3 = Bt2(d5, 0, w5, 0), ft3 = y4, r11 = (t7 = c4[g5 + 19 | 0]) >>> 24 | 0, o5 = t7 << 8 | (St3 = c4[g5 + 15 | 0] | c4[g5 + 16 | 0] << 8 | c4[g5 + 17 | 0] << 16 | c4[g5 + 18 | 0] << 24) >>> 24, n9 = r11, r11 = Bt2(v5 = (7 & (n9 |= r11 = (t7 = c4[g5 + 20 | 0]) >>> 16 | 0)) << 29 | (r11 = (t7 <<= 16) | o5) >>> 3, wt3 = n9 >>> 3 | 0, f5, 0), t7 = y4 + ft3 | 0, t7 = r11 >>> 0 > (n9 = r11 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, o5 = (r11 = Bt2(l5, 0, p5, 0)) + n9 | 0, n9 = y4 + t7 | 0, r11 = r11 >>> 0 > (ut3 = o5) >>> 0 ? n9 + 1 | 0 : n9, n9 = (t7 = c4[yt3 + 19 | 0]) >>> 24 | 0, ft3 = t7 << 8 | (Dt3 = c4[yt3 + 15 | 0] | c4[yt3 + 16 | 0] << 8 | c4[yt3 + 17 | 0] << 16 | c4[yt3 + 18 | 0] << 24) >>> 24, t7 = Bt2(_5 = (7 & (dt3 = (t7 = (o5 = c4[yt3 + 20 | 0]) >>> 16 | 0) | n9)) << 29 | (n9 = (o5 <<= 16) | ft3) >>> 3, Q5 = dt3 >>> 3 | 0, m5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(C5, 0, B5, 0), r11 = y4 + r11 | 0, mt3 = r11 = t7 >>> 0 > (Ct3 = t7 + n9 | 0) >>> 0 ? r11 + 1 | 0 : r11, vt3 = t7 = r11 - ((Ct3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (r11 = t7 >>> 21 | 0) + A8 | 0, ut3 = n9 = (t7 = (2097151 & t7) << 11 | (dt3 = Ct3 - -1048576 | 0) >>> 21) >>> 0 > (lt3 = t7 + lt3 | 0) >>> 0 ? n9 + 1 | 0 : n9, Qt3 = t7 = n9 - ((lt3 >>> 0 < 4293918720) - 1 | 0) | 0, It3 = (2097151 & t7) << 11 | (ft3 = lt3 - -1048576 | 0) >>> 21, o5 = t7 >>> 21 | 0, t7 = Bt2(m5, 0, w5, 0), r11 = y4, n9 = t7, t7 = Bt2(f5, 0, d5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, _t3 = (t7 = n9) + (n9 = Bt2(p5, 0, B5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > _t3 >>> 0 ? t7 + 1 | 0 : t7, pt3 = _t3 - (r11 = -2097152 & (n9 = _t3 - -1048576 | 0)) | 0, r11 = (t7 - ((131071 & (A8 = t7 - ((_t3 >>> 0 < 4293918720) - 1 | 0) | 0)) + (r11 >>> 0 > _t3 >>> 0) | 0) | 0) + o5 | 0, K5 = r11 = (t7 = pt3 + It3 | 0) >>> 0 < pt3 >>> 0 ? r11 + 1 | 0 : r11, J5 = t7, pt3 = Bt2(t7, r11, 470296, 0), It3 = y4, r11 = Bt2(f5, 0, B5, 0), t7 = y4, o5 = r11, r11 = Bt2(p5, 0, m5, 0), t7 = y4 + t7 | 0, r11 = r11 >>> 0 > (o5 = o5 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, t7 = A8 >>> 21 | 0, A8 = (2097151 & A8) << 11 | n9 >>> 21, n9 = t7 + r11 | 0, Pt3 = A8 = (n9 = A8 >>> 0 > (o5 = A8 + o5 | 0) >>> 0 ? n9 + 1 | 0 : n9) - ((o5 >>> 0 < 4293918720) - 1 | 0) | 0, t7 = o5 - (r11 = -2097152 & (Ft3 = o5 - -1048576 | 0)) | 0, j5 = o5 = n9 - ((131071 & A8) + (r11 >>> 0 > o5 >>> 0) | 0) | 0, z4 = r11 = lt3 - (n9 = -2097152 & ft3) | 0, q4 = A8 = ut3 - ((n9 >>> 0 > lt3 >>> 0) + Qt3 | 0) | 0, X3 = t7, n9 = Bt2(t7, o5, 666643, 0), t7 = y4 + It3 | 0, t7 = n9 >>> 0 > (o5 = n9 + pt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(r11, A8, 654183, 0), r11 = y4 + t7 | 0, Et3 = A8 = n9 + o5 | 0, ft3 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, _t3 = Ct3 - (t7 = -2097152 & dt3) | 0, vt3 = mt3 - ((t7 >>> 0 > Ct3 >>> 0) + vt3 | 0) | 0, r11 = Bt2(p5, 0, v5, wt3), n9 = y4, A8 = (t7 = r11) + (r11 = Bt2(b5 = St3 >>> 6 & 2097151, 0, f5, 0)) | 0, t7 = y4 + n9 | 0, t7 = r11 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(d5, 0, C5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (A8 = r11 + A8 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(l5, 0, w5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(m5, 0, k5 = Dt3 >>> 6 & 2097151, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(B5, 0, _5, Q5), r11 = y4 + t7 | 0, Ct3 = A8 = n9 + A8 | 0, o5 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, r11 = (t7 = c4[g5 + 14 | 0]) >>> 24 | 0, A8 = t7 << 8 | (mt3 = c4[g5 + 10 | 0] | c4[g5 + 11 | 0] << 8 | c4[g5 + 12 | 0] << 16 | c4[g5 + 13 | 0] << 24) >>> 24, r11 = Bt2(S5 = 2097151 & ((1 & (r11 |= t7 = (n9 = c4[g5 + 15 | 0]) >>> 16 | 0)) << 31 | (t7 = (n9 <<= 16) | A8) >>> 1), 0, f5, 0), t7 = y4, n9 = r11, r11 = Bt2(p5, 0, b5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(w5, 0, v5, wt3)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(d5, 0, _5, Q5), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(l5, 0, C5, 0), r11 = y4 + r11 | 0, dt3 = n9 = t7 + A8 | 0, A8 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, r11 = (t7 = c4[yt3 + 14 | 0]) >>> 24 | 0, ut3 = t7 << 8 | (lt3 = c4[yt3 + 10 | 0] | c4[yt3 + 11 | 0] << 8 | c4[yt3 + 12 | 0] << 16 | c4[yt3 + 13 | 0] << 24) >>> 24, n9 = r11, r11 = (t7 = c4[yt3 + 15 | 0]) >>> 16 | 0, r11 = Bt2(N6 = 2097151 & ((1 & (r11 |= n9)) << 31 | (t7 = t7 << 16 | ut3) >>> 1), 0, m5, 0), t7 = y4 + A8 | 0, t7 = r11 >>> 0 > (n9 = r11 + dt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(B5, 0, k5, 0), t7 = y4 + t7 | 0, ut3 = t7 = r11 >>> 0 > (dt3 = r11 + n9 | 0) >>> 0 ? t7 + 1 | 0 : t7, Tt3 = r11 = t7 - ((dt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (t7 = r11 >>> 21 | 0) + o5 | 0, It3 = n9 = (r11 = (2097151 & r11) << 11 | (pt3 = dt3 - -1048576 | 0) >>> 21) >>> 0 > (Qt3 = r11 + Ct3 | 0) >>> 0 ? n9 + 1 | 0 : n9, Mt3 = r11 = n9 - ((Qt3 >>> 0 < 4293918720) - 1 | 0) | 0, t7 = (t7 = r11 >>> 21 | 0) + vt3 | 0, V3 = t7 = (r11 = (n9 = (2097151 & r11) << 11 | (Ct3 = Qt3 - -1048576 | 0) >>> 21) + _t3 | 0) >>> 0 < n9 >>> 0 ? t7 + 1 | 0 : t7, W3 = r11, t7 = Bt2(r11, t7, -997805, -1), r11 = y4 + ft3 | 0, Et3 = n9 = t7 + Et3 | 0, ft3 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, _t3 = (Gt3 = c4[23 + (h5 = u5 + 224 | 0) | 0] | c4[h5 + 24 | 0] << 8 | c4[h5 + 25 | 0] << 16 | c4[h5 + 26 | 0] << 24) >>> 5 & 2097151, n9 = Bt2(M5 = (t7 = c4[g5 + 2 | 0]) << 16 & 2031616 | c4[0 | g5] | c4[g5 + 1 | 0] << 8, 0, w5, 0), r11 = y4, A8 = (t7 = Bt2(C5, 0, x5 = (o5 = c4[g5 + 2 | 0] | c4[g5 + 3 | 0] << 8 | c4[g5 + 4 | 0] << 16 | c4[g5 + 5 | 0] << 24) >>> 5 & 2097151, 0)) + n9 | 0, n9 = y4 + r11 | 0, n9 = t7 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(F5 = (c4[g5 + 7 | 0] | c4[g5 + 8 | 0] << 8 | c4[g5 + 9 | 0] << 16 | c4[g5 + 10 | 0] << 24) >>> 7 & 2097151, 0, k5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(N6, 0, P5 = mt3 >>> 4 & 2097151, 0), t7 = y4 + r11 | 0, mt3 = A8 = n9 + A8 | 0, A8 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, o5 = (r11 = c4[g5 + 6 | 0]) << 8 | o5 >>> 24, n9 = t7 = r11 >>> 24 | 0, r11 = (t7 = c4[g5 + 7 | 0]) >>> 16 | 0, r11 = Bt2(T3 = 2097151 & ((3 & (r11 |= n9)) << 30 | (t7 = t7 << 16 | o5) >>> 2), 0, _5, Q5), t7 = y4 + A8 | 0, t7 = r11 >>> 0 > (n9 = r11 + mt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(b5, 0, R5 = (c4[yt3 + 7 | 0] | c4[yt3 + 8 | 0] << 8 | c4[yt3 + 9 | 0] << 16 | c4[yt3 + 10 | 0] << 24) >>> 7 & 2097151, 0)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(S5, 0, xt3 = lt3 >>> 4 & 2097151, 0), t7 = y4 + n9 | 0, o5 = r11 >>> 0 > (A8 = r11 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, t7 = (r11 = c4[yt3 + 6 | 0]) >>> 24 | 0, mt3 = r11 << 8 | (lt3 = c4[yt3 + 2 | 0] | c4[yt3 + 3 | 0] << 8 | c4[yt3 + 4 | 0] << 16 | c4[yt3 + 5 | 0] << 24) >>> 24, r11 = t7, t7 = Bt2(v5, wt3, U5 = 2097151 & ((3 & (r11 |= n9 = (t7 = c4[yt3 + 7 | 0]) >>> 16 | 0)) << 30 | (t7 = t7 << 16 | mt3) >>> 2), 0), r11 = y4 + o5 | 0, r11 = t7 >>> 0 > (n9 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = n9, n9 = Bt2(L5 = (t7 = c4[yt3 + 2 | 0]) << 16 & 2031616 | c4[0 | yt3] | c4[yt3 + 1 | 0] << 8, 0, d5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = A8 + n9 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(l5, 0, O5 = lt3 >>> 5 & 2097151, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = n9, mt3 = n9 = n9 + _t3 | 0, o5 = r11 = r11 >>> 0 > n9 >>> 0 ? t7 + 1 | 0 : t7, A8 = c4[h5 + 21 | 0] | c4[h5 + 22 | 0] << 8, t7 = Bt2(C5, 0, M5, 0), r11 = y4, lt3 = (n9 = t7) + (t7 = Bt2(_5, Q5, x5, 0)) | 0, n9 = y4 + r11 | 0, n9 = t7 >>> 0 > lt3 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(N6, 0, F5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (lt3 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(P5, 0, xt3, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, lt3 = (t7 = n9) + (n9 = Bt2(k5, 0, T3, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > lt3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(b5, 0, U5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + lt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, lt3 = (r11 = Bt2(S5, 0, R5, 0)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > lt3 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(v5, wt3, O5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (lt3 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(l5, 0, L5, 0), r11 = y4 + r11 | 0, t7 = t7 >>> 0 > (n9 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, r11 = (r11 = n9) >>> 0 > (n9 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = n9, n9 = (t7 = c4[h5 + 23 | 0]) << 16 & 2031616, t7 = r11, n9 = t7 = n9 >>> 0 > (A8 = A8 + n9 | 0) >>> 0 ? t7 + 1 | 0 : t7, yt3 = t7 = t7 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (r11 = t7 >>> 21 | 0) + o5 | 0, t7 = (r11 = (o5 = mt3 = (t7 = (2097151 & t7) << 11 | (lt3 = A8 - -1048576 | 0) >>> 21) + mt3 | 0) >>> 0 < t7 >>> 0 ? r11 + 1 | 0 : r11) + ft3 | 0, t7 = (ft3 = o5 + Et3 | 0) >>> 0 < o5 >>> 0 ? t7 + 1 | 0 : t7, St3 = o5 - -1048576 | 0, kt3 = o5 = r11 - ((o5 >>> 0 < 4293918720) - 1 | 0) | 0, Nt3 = ft3 - (r11 = -2097152 & St3) | 0, Rt3 = t7 - ((r11 >>> 0 > ft3 >>> 0) + o5 | 0) | 0, mt3 = A8, ft3 = n9, t7 = Bt2(z4, q4, 470296, 0), r11 = y4, n9 = t7, t7 = Bt2(J5, K5, 666643, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = (t7 = n9) + (n9 = Bt2(W3, V3, 654183, 0)) | 0, t7 = y4 + r11 | 0, Dt3 = A8, o5 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(_5, Q5, M5, 0), t7 = y4, n9 = r11, r11 = Bt2(k5, 0, x5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = n9) + (n9 = Bt2(F5, 0, xt3, 0)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(P5, 0, R5, 0), n9 = y4 + r11 | 0, n9 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(N6, 0, T3, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(b5, 0, O5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(S5, 0, U5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = n9) + (n9 = Bt2(v5, wt3, L5, 0)) | 0, r11 = y4 + t7 | 0, _t3 = A8, n9 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, r11 = (t7 = c4[h5 + 19 | 0]) >>> 24 | 0, vt3 = t7 << 8 | (Et3 = c4[h5 + 15 | 0] | c4[h5 + 16 | 0] << 8 | c4[h5 + 17 | 0] << 16 | c4[h5 + 18 | 0] << 24) >>> 24, n9 = ((Ut3 = (t7 = (A8 = c4[h5 + 20 | 0]) >>> 16 | 0) | r11) >>> 3 | 0) + n9 | 0, _t3 = A8 = (r11 = (7 & Ut3) << 29 | (r11 = (A8 <<= 16) | vt3) >>> 3) + _t3 | 0, A8 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, vt3 = Et3 >>> 6 & 2097151, t7 = Bt2(k5, 0, M5, 0), r11 = y4, n9 = t7, t7 = Bt2(N6, 0, x5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, Et3 = (t7 = n9) + (n9 = Bt2(F5, 0, R5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > Et3 >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(P5, 0, U5, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (Et3 = n9 + Et3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(T3, 0, xt3, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (Et3 = n9 + Et3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(b5, 0, L5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (Et3 = r11 + Et3 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(S5, 0, O5, 0), r11 = y4 + n9 | 0, t7 = t7 >>> 0 > (Et3 = t7 + Et3 | 0) >>> 0 ? r11 + 1 | 0 : r11, qt3 = t7 = (Lt3 = Et3 + vt3 | 0) >>> 0 < Et3 >>> 0 ? t7 + 1 | 0 : t7, ee3 = t7 = t7 - ((Lt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (jt3 = Lt3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + A8 | 0, Vt3 = t7 = n9 >>> 0 > (Xt3 = n9 + _t3 | 0) >>> 0 ? t7 + 1 | 0 : t7, re3 = t7 = t7 - ((Xt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (Yt3 = Xt3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + o5 | 0, r11 = (n9 >>> 0 > (A8 = n9 + Dt3 | 0) >>> 0 ? t7 + 1 | 0 : t7) + ft3 | 0, ft3 = (n9 = A8 + mt3 | 0) - (t7 = -2097152 & lt3) | 0, yt3 = t7 = (r11 = n9 >>> 0 < A8 >>> 0 ? r11 + 1 | 0 : r11) - ((t7 >>> 0 > n9 >>> 0) + yt3 | 0) | 0, ne3 = t7 = t7 - ((ft3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (Kt3 = ft3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Rt3 | 0, A8 = t7 = n9 >>> 0 > (o5 = n9 + Nt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, te3 = t7 = t7 - ((o5 >>> 0 < 4293918720) - 1 | 0) | 0, Jt3 = (2097151 & t7) << 11 | (Dt3 = o5 - -1048576 | 0) >>> 21, mt3 = t7 >> 21, Ut3 = Qt3 - (t7 = -2097152 & Ct3) | 0, Mt3 = It3 - ((t7 >>> 0 > Qt3 >>> 0) + Mt3 | 0) | 0, t7 = Bt2(f5, 0, m5, 0), zt3 = r11 = y4, Nt3 = t7, Et3 = t7 - -1048576 | 0, Ot3 = r11 = r11 - ((t7 >>> 0 < 4293918720) - 1 | 0) | 0, Z3 = t7 = r11 >>> 21 | 0, t7 = Bt2(Y5 = (2097151 & r11) << 11 | Et3 >>> 21, t7, -683901, -1), r11 = y4 + ut3 | 0, r11 = t7 >>> 0 > (n9 = t7 + dt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Ct3 = n9 - (t7 = -2097152 & pt3) | 0, lt3 = r11 - ((t7 >>> 0 > n9 >>> 0) + Tt3 | 0) | 0, r11 = Bt2(w5, 0, b5, 0), t7 = y4, n9 = r11, r11 = Bt2(f5, 0, P5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(p5, 0, S5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + n9 | 0) >>> 0 ? t7 + 1 | 0 : t7, ut3 = (r11 = n9) + (n9 = Bt2(C5, 0, v5, wt3)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > ut3 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(d5, 0, k5, 0), n9 = y4 + r11 | 0, n9 = t7 >>> 0 > (ut3 = t7 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(l5, 0, _5, Q5), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (ut3 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(m5, 0, xt3, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(B5, 0, N6, 0), t7 = y4 + t7 | 0, dt3 = n9 = r11 + ut3 | 0, ut3 = r11 >>> 0 > n9 >>> 0 ? t7 + 1 | 0 : t7, t7 = Bt2(p5, 0, P5, 0), r11 = y4, n9 = t7, t7 = Bt2(f5, 0, F5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, It3 = (t7 = Bt2(C5, 0, b5, 0)) + n9 | 0, n9 = y4 + r11 | 0, n9 = t7 >>> 0 > It3 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(w5, 0, S5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (It3 = t7 + It3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(v5, wt3, _5, Q5), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (It3 = n9 + It3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(d5, 0, N6, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + It3 | 0) >>> 0 ? t7 + 1 | 0 : t7, It3 = (r11 = n9) + (n9 = Bt2(l5, 0, k5, 0)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > It3 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(m5, 0, R5, 0), n9 = y4 + r11 | 0, n9 = t7 >>> 0 > (It3 = t7 + It3 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(B5, 0, xt3, 0), r11 = y4 + n9 | 0, vt3 = r11 = t7 >>> 0 > (_t3 = t7 + It3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Zt3 = t7 = r11 - ((_t3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (2097151 & t7) << 11 | (Qt3 = _t3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + ut3 | 0, pt3 = t7 = r11 >>> 0 > (Tt3 = r11 + dt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Ht3 = t7 = t7 - ((Tt3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (n9 = t7 >>> 21 | 0) + lt3 | 0, Ct3 = r11 = (t7 = (2097151 & t7) << 11 | (It3 = Tt3 - -1048576 | 0) >>> 21) >>> 0 > (Rt3 = t7 + Ct3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Wt3 = t7 = r11 - ((Rt3 >>> 0 < 4293918720) - 1 | 0) | 0, ut3 = (2097151 & t7) << 11 | (lt3 = Rt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Mt3 | 0, $3 = t7 = (r11 = ut3 + Ut3 | 0) >>> 0 < ut3 >>> 0 ? t7 + 1 | 0 : t7, tt3 = r11, t7 = Bt2(r11, t7, -683901, -1), r11 = y4 + mt3 | 0, Jt3 = n9 = t7 + Jt3 | 0, mt3 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(p5, 0, M5, 0), r11 = y4, n9 = t7, t7 = Bt2(w5, 0, x5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, ut3 = (t7 = n9) + (n9 = Bt2(_5, Q5, F5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > ut3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(k5, 0, P5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(C5, 0, T3, 0), t7 = y4 + n9 | 0, t7 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(b5, 0, xt3, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(S5, 0, N6, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, ut3 = (t7 = n9) + (n9 = Bt2(v5, wt3, R5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > ut3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(d5, 0, O5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(l5, 0, U5, 0), t7 = y4 + n9 | 0, t7 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(B5, 0, L5, 0), r11 = y4 + t7 | 0, Mt3 = ut3 = n9 + ut3 | 0, n9 = n9 >>> 0 > ut3 >>> 0 ? r11 + 1 | 0 : r11, r11 = (t7 = c4[h5 + 27 | 0]) >>> 24 | 0, dt3 = t7 << 8 | Gt3 >>> 24, ut3 = 2097151 & ((3 & (r11 |= t7 = (ut3 = c4[h5 + 28 | 0]) >>> 16 | 0)) << 30 | (t7 = (ut3 <<= 16) | dt3) >>> 2), r11 = n9, dt3 = t7 = ut3 + Mt3 | 0, ut3 = t7 >>> 0 < ut3 >>> 0 ? r11 + 1 | 0 : r11, Ut3 = Bt2(X3, j5, 470296, 0), Mt3 = y4, t7 = (n9 = (2097151 & Pt3) << 11 | Ft3 >>> 21) + (Nt3 - (r11 = -2097152 & Et3) | 0) | 0, r11 = zt3 - ((524287 & Ot3) + (r11 >>> 0 > Nt3 >>> 0) | 0) + (Pt3 >>> 21) | 0, et3 = r11 = t7 >>> 0 < n9 >>> 0 ? r11 + 1 | 0 : r11, rt3 = t7, r11 = Bt2(t7, r11, 666643, 0), t7 = y4 + Mt3 | 0, t7 = r11 >>> 0 > (n9 = r11 + Ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Et3 = (r11 = Bt2(J5, K5, 654183, 0)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > Et3 >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(z4, q4, -997805, -1), t7 = y4 + n9 | 0, t7 = r11 >>> 0 > (Et3 = r11 + Et3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(W3, V3, 136657, 0), r11 = y4 + t7 | 0, St3 = (t7 = (2097151 & kt3) << 11 | St3 >>> 21) + (Et3 = n9 + Et3 | 0) | 0, r11 = (kt3 >>> 21 | 0) + (n9 >>> 0 > Et3 >>> 0 ? r11 + 1 | 0 : r11) | 0, Ot3 = Et3 = ut3 - ((dt3 >>> 0 < 4293918720) - 1 | 0) | 0, t7 = (t7 >>> 0 > St3 >>> 0 ? r11 + 1 | 0 : r11) + ut3 | 0, r11 = (ut3 = dt3 + St3 | 0) - (n9 = -2097152 & (zt3 = dt3 - -1048576 | 0)) | 0, n9 = (t7 = (t7 = ut3 >>> 0 < St3 >>> 0 ? t7 + 1 | 0 : t7) - ((n9 >>> 0 > ut3 >>> 0) + Et3 | 0) | 0) + mt3 | 0, Ut3 = ut3 = t7 - ((r11 >>> 0 < 4293918720) - 1 | 0) | 0, Nt3 = (n9 = (dt3 = r11 + Jt3 | 0) >>> 0 < r11 >>> 0 ? n9 + 1 | 0 : n9) - (((r11 = -2097152 & (Mt3 = r11 - -1048576 | 0)) >>> 0 > dt3 >>> 0) + ut3 | 0) | 0, Gt3 = t7 = dt3 - r11 | 0, ut3 = o5, o5 = A8, $t3 = Rt3 - (t7 = -2097152 & lt3) | 0, Et3 = Ct3 - ((t7 >>> 0 > Rt3 >>> 0) + Wt3 | 0) | 0, t7 = Bt2(rt3, et3, -683901, -1), r11 = y4, A8 = (n9 = t7) + (t7 = Bt2(Y5, Z3, 136657, 0)) | 0, n9 = y4 + r11 | 0, r11 = pt3 + (t7 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9) | 0, It3 = (n9 = A8 + Tt3 | 0) - (t7 = -2097152 & It3) | 0, Ct3 = (r11 = n9 >>> 0 < Tt3 >>> 0 ? r11 + 1 | 0 : r11) - ((t7 >>> 0 > n9 >>> 0) + Ht3 | 0) | 0, r11 = Bt2(Y5, Z3, -997805, -1), t7 = y4 + vt3 | 0, t7 = r11 >>> 0 > (n9 = r11 + _t3 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(rt3, et3, 136657, 0)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(X3, j5, -683901, -1), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, lt3 = A8 - (t7 = -2097152 & Qt3) | 0, mt3 = r11 - ((t7 >>> 0 > A8 >>> 0) + Zt3 | 0) | 0, r11 = Bt2(w5, 0, P5, 0), t7 = y4, n9 = r11, r11 = Bt2(p5, 0, F5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(f5, 0, T3, 0)) + n9 | 0, n9 = y4 + t7 | 0, n9 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(_5, Q5, b5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(C5, 0, S5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(v5, wt3, k5, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(d5, 0, xt3, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(l5, 0, N6, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (A8 = r11 + A8 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(m5, 0, U5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(B5, 0, R5, 0), t7 = y4 + r11 | 0, dt3 = A8 = n9 + A8 | 0, A8 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, t7 = Bt2(w5, 0, F5, 0), r11 = y4, n9 = t7, t7 = Bt2(f5, 0, x5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, pt3 = (t7 = n9) + (n9 = Bt2(C5, 0, P5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > pt3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(p5, 0, T3, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (pt3 = r11 + pt3 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(b5, 0, k5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (pt3 = t7 + pt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(_5, Q5, S5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (pt3 = n9 + pt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(v5, wt3, N6, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (pt3 = n9 + pt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(d5, 0, R5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (pt3 = n9 + pt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(l5, 0, xt3, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (pt3 = r11 + pt3 | 0) >>> 0 ? n9 + 1 | 0 : n9, pt3 = (t7 = Bt2(m5, 0, O5, 0)) + pt3 | 0, r11 = y4 + n9 | 0, n9 = Bt2(B5, 0, U5, 0), t7 = y4 + (t7 >>> 0 > pt3 >>> 0 ? r11 + 1 | 0 : r11) | 0, Rt3 = t7 = n9 >>> 0 > (Wt3 = n9 + pt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, At3 = t7 = t7 - ((Wt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (Pt3 = Wt3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + A8 | 0, Ft3 = t7 = n9 >>> 0 > (Jt3 = n9 + dt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, it3 = t7 = t7 - ((Jt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (kt3 = Jt3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + mt3 | 0, St3 = t7 = n9 >>> 0 > (Tt3 = n9 + lt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, ot3 = t7 = t7 - ((Tt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (vt3 = Tt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Ct3 | 0, A8 = t7 = n9 >>> 0 > (lt3 = n9 + It3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Ct3 = t7 = t7 - ((lt3 >>> 0 < 4293918720) - 1 | 0) | 0, mt3 = (2097151 & t7) << 11 | (n9 = lt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Et3 | 0, Zt3 = t7 = (dt3 = mt3 + $t3 | 0) >>> 0 < mt3 >>> 0 ? t7 + 1 | 0 : t7, Ht3 = dt3, t7 = Bt2(dt3, t7, -683901, -1), r11 = y4, dt3 = t7, t7 = Bt2(tt3, $3, 136657, 0), r11 = y4 + r11 | 0, t7 = (t7 >>> 0 > (dt3 = dt3 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11) + o5 | 0, Ae3 = (o5 = ut3 + dt3 | 0) - (r11 = -2097152 & Dt3) | 0, ie3 = (t7 = o5 >>> 0 < dt3 >>> 0 ? t7 + 1 | 0 : t7) - ((r11 >>> 0 > o5 >>> 0) + te3 | 0) | 0, mt3 = ft3, dt3 = yt3, ft3 = Bt2(Ht3, Zt3, 136657, 0), o5 = y4, $t3 = t7 = lt3 - (r11 = -2097152 & n9) | 0, nt3 = A8 = A8 - ((r11 >>> 0 > lt3 >>> 0) + Ct3 | 0) | 0, n9 = Bt2(tt3, $3, -997805, -1), r11 = y4 + o5 | 0, r11 = n9 >>> 0 > (ft3 = n9 + ft3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(t7, A8, -683901, -1), t7 = y4 + r11 | 0, te3 = A8 = n9 + ft3 | 0, ut3 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, t7 = Bt2(W3, V3, 470296, 0), r11 = y4, A8 = (n9 = t7) + (t7 = Bt2(z4, q4, 666643, 0)) | 0, n9 = y4 + r11 | 0, r11 = Vt3 + (t7 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9) | 0, Et3 = t7 = A8 + Xt3 | 0, o5 = r11 = t7 >>> 0 < Xt3 >>> 0 ? r11 + 1 | 0 : r11, r11 = Bt2(W3, V3, 666643, 0), t7 = y4 + qt3 | 0, t7 = r11 >>> 0 > (n9 = r11 + Lt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, It3 = n9 - (r11 = -2097152 & jt3) | 0, _t3 = t7 - ((r11 >>> 0 > n9 >>> 0) + ee3 | 0) | 0, r11 = Bt2(N6, 0, M5, 0), t7 = y4, n9 = r11, r11 = Bt2(x5, 0, xt3, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = n9) + (n9 = Bt2(F5, 0, U5, 0)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(P5, 0, O5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (A8 = n9 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(T3, 0, R5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (A8 = r11 + A8 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(S5, 0, L5, 0), r11 = y4 + n9 | 0, lt3 = A8 = t7 + A8 | 0, A8 = t7 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, r11 = (t7 = c4[h5 + 14 | 0]) >>> 24 | 0, ft3 = t7 << 8 | (Ct3 = c4[h5 + 10 | 0] | c4[h5 + 11 | 0] << 8 | c4[h5 + 12 | 0] << 16 | c4[h5 + 13 | 0] << 24) >>> 24, r11 = 2097151 & ((1 & (r11 |= n9 = (t7 = c4[h5 + 15 | 0]) >>> 16 | 0)) << 31 | (t7 = ft3 | t7 << 16) >>> 1), t7 = A8, lt3 = n9 = r11 + lt3 | 0, A8 = r11 >>> 0 > n9 >>> 0 ? t7 + 1 | 0 : t7, ft3 = Ct3 >>> 4 & 2097151, t7 = Bt2(M5, 0, xt3, 0), r11 = y4, n9 = t7, t7 = Bt2(x5, 0, R5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(F5, 0, O5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + n9 | 0) >>> 0 ? r11 + 1 | 0 : r11, Ct3 = (t7 = n9) + (n9 = Bt2(P5, 0, L5, 0)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > Ct3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(T3, 0, U5, 0), n9 = y4 + t7 | 0, t7 = r11 >>> 0 > (Ct3 = r11 + Ct3 | 0) >>> 0 ? n9 + 1 | 0 : n9, yt3 = t7 = (jt3 = ft3 + Ct3 | 0) >>> 0 < Ct3 >>> 0 ? t7 + 1 | 0 : t7, st3 = t7 = t7 - ((jt3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (n9 = t7 >>> 21 | 0) + A8 | 0, Qt3 = r11 = (t7 = (2097151 & t7) << 11 | (Dt3 = jt3 - -1048576 | 0) >>> 21) >>> 0 > (Vt3 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, at3 = t7 = r11 - ((Vt3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (2097151 & t7) << 11 | (pt3 = Vt3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + _t3 | 0, Ct3 = t7 = r11 >>> 0 > (It3 = r11 + It3 | 0) >>> 0 ? t7 + 1 | 0 : t7, ht3 = t7 = t7 - ((It3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (n9 = t7 >> 21) + o5 | 0, ee3 = r11 = (r11 = (t7 = (2097151 & t7) << 11 | (lt3 = It3 - -1048576 | 0) >>> 21) >>> 0 > (A8 = t7 + Et3 | 0) >>> 0 ? r11 + 1 | 0 : r11) - (((n9 = -2097152 & Yt3) >>> 0 > A8 >>> 0) + re3 | 0) | 0, Yt3 = t7 = A8 - n9 | 0, ft3 = t7 - -1048576 | 0, re3 = t7 = r11 - ((t7 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (r11 = t7 >> 21) + ut3 | 0, r11 = ((t7 = (2097151 & t7) << 11 | ft3 >>> 21) >>> 0 > (A8 = t7 + te3 | 0) >>> 0 ? n9 + 1 | 0 : n9) + dt3 | 0, Lt3 = r11 = (r11 = (t7 = A8) >>> 0 > (A8 = A8 + mt3 | 0) >>> 0 ? r11 + 1 | 0 : r11) - (((n9 = -2097152 & Kt3) >>> 0 > A8 >>> 0) + ne3 | 0) | 0, dt3 = t7 = A8 - n9 | 0, o5 = t7 - -1048576 | 0, qt3 = t7 = r11 - ((t7 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (r11 = t7 >> 21) + ie3 | 0, Kt3 = t7 = (n9 = (t7 = (2097151 & t7) << 11 | o5 >>> 21) >>> 0 > (ut3 = t7 + Ae3 | 0) >>> 0 ? n9 + 1 | 0 : n9) - ((ut3 >>> 0 < 4293918720) - 1 | 0) | 0, Et3 = Gt3 - -1048576 | 0, _t3 = Nt3 - ((Gt3 >>> 0 < 4293918720) - 1 | 0) | 0, mt3 = (2097151 & t7) << 11 | (A8 = ut3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Nt3 | 0, ne3 = (Gt3 = mt3 + Gt3 | 0) - (r11 = -2097152 & Et3) | 0, Ae3 = (mt3 >>> 0 > Gt3 >>> 0 ? t7 + 1 | 0 : t7) - ((r11 >>> 0 > Gt3 >>> 0) + _t3 | 0) | 0, ie3 = ut3 - (t7 = -2097152 & A8) | 0, te3 = n9 - ((t7 >>> 0 > ut3 >>> 0) + Kt3 | 0) | 0, Xt3 = dt3 - (t7 = -2097152 & o5) | 0, Gt3 = Lt3 - ((t7 >>> 0 > dt3 >>> 0) + qt3 | 0) | 0, t7 = Bt2(Ht3, Zt3, -997805, -1), r11 = y4, n9 = t7, t7 = Bt2(tt3, $3, 654183, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = (t7 = n9) + (n9 = Bt2($t3, nt3, 136657, 0)) | 0, t7 = y4 + r11 | 0, r11 = ee3 + (n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7) | 0, Lt3 = (n9 = A8 + Yt3 | 0) - (t7 = -2097152 & ft3) | 0, qt3 = (r11 = n9 >>> 0 < Yt3 >>> 0 ? r11 + 1 | 0 : r11) - ((t7 >>> 0 > n9 >>> 0) + re3 | 0) | 0, Yt3 = Tt3 - (t7 = -2097152 & vt3) | 0, Nt3 = St3 - ((t7 >>> 0 > Tt3 >>> 0) + ot3 | 0) | 0, r11 = Bt2(rt3, et3, -997805, -1), t7 = y4, n9 = r11, r11 = Bt2(Y5, Z3, 654183, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = n9) + (n9 = Bt2(X3, j5, 136657, 0)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(J5, K5, -683901, -1), n9 = y4 + r11 | 0, r11 = Ft3 + (t7 >>> 0 > (A8 = t7 + A8 | 0) >>> 0 ? n9 + 1 | 0 : n9) | 0, vt3 = (n9 = A8 + Jt3 | 0) - (t7 = -2097152 & kt3) | 0, St3 = (r11 = n9 >>> 0 < Jt3 >>> 0 ? r11 + 1 | 0 : r11) - ((t7 >>> 0 > n9 >>> 0) + it3 | 0) | 0, r11 = Bt2(rt3, et3, 654183, 0), t7 = y4, n9 = r11, r11 = Bt2(Y5, Z3, 470296, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(X3, j5, -997805, -1)) + n9 | 0, n9 = y4 + t7 | 0, r11 = Rt3 + (r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9) | 0, r11 = (t7 = A8 + Wt3 | 0) >>> 0 < Wt3 >>> 0 ? r11 + 1 | 0 : r11, n9 = t7, t7 = Bt2(J5, K5, 136657, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = (t7 = n9) + (n9 = Bt2(z4, q4, -683901, -1)) | 0, t7 = y4 + r11 | 0, ft3 = A8 - (r11 = -2097152 & Pt3) | 0, o5 = (n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7) - ((r11 >>> 0 > A8 >>> 0) + At3 | 0) | 0, A8 = (c4[h5 + 28 | 0] | c4[h5 + 29 | 0] << 8 | c4[h5 + 30 | 0] << 16 | c4[h5 + 31 | 0] << 24) >>> 7 | 0, t7 = Bt2(f5, 0, M5, 0), r11 = y4, ut3 = (n9 = t7) + (t7 = Bt2(p5, 0, x5, 0)) | 0, n9 = y4 + r11 | 0, n9 = t7 >>> 0 > ut3 >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(C5, 0, F5, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (ut3 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(_5, Q5, P5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(w5, 0, T3, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(b5, 0, N6, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(k5, 0, S5, 0), n9 = y4 + t7 | 0, n9 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, t7 = Bt2(v5, wt3, xt3, 0), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (ut3 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(d5, 0, U5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(l5, 0, R5, 0), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(m5, 0, L5, 0), t7 = y4 + r11 | 0, t7 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(B5, 0, O5, 0), n9 = y4 + t7 | 0, r11 = n9 = r11 >>> 0 > (ut3 = r11 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, Ft3 = (n9 = (2097151 & Ot3) << 11 | zt3 >>> 21) + (t7 = A8 + ut3 | 0) | 0, t7 = (Ot3 >>> 21 | 0) + (r11 = t7 >>> 0 < ut3 >>> 0 ? r11 + 1 | 0 : r11) | 0, mt3 = t7 = n9 >>> 0 > Ft3 >>> 0 ? t7 + 1 | 0 : t7, Kt3 = r11 = t7 - ((Ft3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (t7 = r11 >>> 21 | 0) + o5 | 0, dt3 = n9 = (r11 = (2097151 & r11) << 11 | (wt3 = Ft3 - -1048576 | 0) >>> 21) >>> 0 > (kt3 = r11 + ft3 | 0) >>> 0 ? n9 + 1 | 0 : n9, zt3 = r11 = n9 - ((kt3 >>> 0 < 4293918720) - 1 | 0) | 0, t7 = (t7 = r11 >> 21) + St3 | 0, ft3 = t7 = (r11 = (2097151 & r11) << 11 | (ut3 = kt3 - -1048576 | 0) >>> 21) >>> 0 > (vt3 = r11 + vt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Pt3 = r11 = t7 - ((vt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (t7 = r11 >> 21) + Nt3 | 0, Ot3 = n9 = (r11 = (A8 = (2097151 & r11) << 11 | (o5 = vt3 - -1048576 | 0) >>> 21) + Yt3 | 0) >>> 0 < A8 >>> 0 ? n9 + 1 | 0 : n9, Nt3 = r11, t7 = Bt2(r11, n9, -683901, -1), r11 = y4 + qt3 | 0, St3 = n9 = t7 + Lt3 | 0, A8 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, r11 = Bt2(tt3, $3, 470296, 0), t7 = y4 + Ct3 | 0, t7 = r11 >>> 0 > (It3 = r11 + It3 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(Ht3, Zt3, 654183, 0), t7 = y4 + (t7 - (((n9 = -2097152 & lt3) >>> 0 > It3 >>> 0) + ht3 | 0) | 0) | 0, t7 = r11 >>> 0 > (lt3 = r11 + (It3 - n9 | 0) | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2($t3, nt3, -997805, -1), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (lt3 = n9 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Rt3 = n9 = vt3 - (t7 = -2097152 & o5) | 0, xt3 = ft3 = ft3 - ((t7 >>> 0 > vt3 >>> 0) + Pt3 | 0) | 0, lt3 = (o5 = Bt2(Nt3, Ot3, 136657, 0)) + lt3 | 0, t7 = y4 + r11 | 0, n9 = Bt2(n9, ft3, -683901, -1), r11 = y4 + (o5 >>> 0 > lt3 >>> 0 ? t7 + 1 | 0 : t7) | 0, ft3 = r11 = n9 >>> 0 > (Ct3 = n9 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Pt3 = t7 = r11 - ((Ct3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = (2097151 & t7) << 11 | (o5 = Ct3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + A8 | 0, vt3 = r11 = (t7 = r11 >>> 0 > (lt3 = r11 + St3 | 0) >>> 0 ? t7 + 1 | 0 : t7) - ((lt3 >>> 0 < 4293918720) - 1 | 0) | 0, It3 = (2097151 & r11) << 11 | (A8 = lt3 - -1048576 | 0) >>> 21, r11 = (r11 >> 21) + Gt3 | 0, Xt3 = St3 = It3 + Xt3 | 0, St3 = It3 >>> 0 > St3 >>> 0 ? r11 + 1 | 0 : r11, Gt3 = lt3 - (r11 = -2097152 & A8) | 0, Wt3 = t7 - ((r11 >>> 0 > lt3 >>> 0) + vt3 | 0) | 0, Lt3 = Ct3 - (t7 = -2097152 & o5) | 0, qt3 = ft3 - ((t7 >>> 0 > Ct3 >>> 0) + Pt3 | 0) | 0, t7 = Bt2(tt3, $3, 666643, 0), n9 = Qt3 + y4 | 0, n9 = (o5 = t7 + Vt3 | 0) >>> 0 < Vt3 >>> 0 ? n9 + 1 | 0 : n9, A8 = (t7 = Bt2(Ht3, Zt3, 470296, 0)) + (o5 - (r11 = -2097152 & pt3) | 0) | 0, r11 = y4 + (n9 - ((r11 >>> 0 > o5 >>> 0) + at3 | 0) | 0) | 0, r11 = t7 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2($t3, nt3, 654183, 0), t7 = y4 + r11 | 0, lt3 = A8 = n9 + A8 | 0, A8 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, o5 = kt3 - (t7 = -2097152 & ut3) | 0, ft3 = dt3 - ((t7 >>> 0 > kt3 >>> 0) + zt3 | 0) | 0, t7 = Bt2(rt3, et3, 470296, 0), r11 = y4, n9 = t7, t7 = Bt2(Y5, Z3, 666643, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(X3, j5, 654183, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + n9 | 0) >>> 0 ? r11 + 1 | 0 : r11, ut3 = (t7 = n9) + (n9 = Bt2(J5, K5, -997805, -1)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > ut3 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(z4, q4, 136657, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + ut3 | 0) >>> 0 ? t7 + 1 | 0 : t7, ut3 = (r11 = Bt2(W3, V3, -683901, -1)) + n9 | 0, n9 = y4 + t7 | 0, r11 = mt3 + (r11 >>> 0 > ut3 >>> 0 ? n9 + 1 | 0 : n9) | 0, kt3 = (n9 = (2097151 & Ut3) << 11 | Mt3 >>> 21) + ((ut3 = ut3 + Ft3 | 0) - (t7 = -2097152 & wt3) | 0) | 0, t7 = ((r11 = ut3 >>> 0 < Ft3 >>> 0 ? r11 + 1 | 0 : r11) - ((t7 >>> 0 > ut3 >>> 0) + Kt3 | 0) | 0) + (Ut3 >> 21) | 0, vt3 = t7 = n9 >>> 0 > kt3 >>> 0 ? t7 + 1 | 0 : t7, Yt3 = t7 = t7 - ((kt3 >>> 0 < 4293918720) - 1 | 0) | 0, r11 = o5, o5 = (2097151 & t7) << 11 | (pt3 = kt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + ft3 | 0, Pt3 = t7 = (n9 = r11 + o5 | 0) >>> 0 < o5 >>> 0 ? t7 + 1 | 0 : t7, Ft3 = n9, t7 = Bt2(n9, t7, -683901, -1), r11 = y4 + A8 | 0, r11 = t7 >>> 0 > (n9 = t7 + lt3 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = (t7 = n9) + (n9 = Bt2(Nt3, Ot3, -997805, -1)) | 0, t7 = y4 + r11 | 0, t7 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(Rt3, xt3, 136657, 0), n9 = y4 + t7 | 0, Mt3 = A8 = r11 + A8 | 0, dt3 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, lt3 = jt3 - (t7 = -2097152 & Dt3) | 0, mt3 = yt3 - ((t7 >>> 0 > jt3 >>> 0) + st3 | 0) | 0, r11 = Bt2(M5, 0, R5, 0), t7 = y4, n9 = r11, r11 = Bt2(x5, 0, U5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = n9 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(F5, 0, L5, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + n9 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = Bt2(T3, 0, O5, 0)) + n9 | 0, n9 = y4 + t7 | 0, r11 = r11 >>> 0 > A8 >>> 0 ? n9 + 1 | 0 : n9, wt3 = n9 = (t7 = (c4[h5 + 7 | 0] | c4[h5 + 8 | 0] << 8 | c4[h5 + 9 | 0] << 16 | c4[h5 + 10 | 0] << 24) >>> 7 & 2097151) + A8 | 0, ut3 = t7 >>> 0 > n9 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(M5, 0, U5, 0), r11 = y4, n9 = t7, t7 = Bt2(x5, 0, O5, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = n9 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, A8 = (t7 = n9) + (n9 = Bt2(T3, 0, L5, 0)) | 0, t7 = y4 + r11 | 0, ft3 = A8, A8 = n9 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, t7 = (r11 = c4[h5 + 6 | 0]) >>> 24 | 0, o5 = r11 << 8 | (Kt3 = c4[h5 + 2 | 0] | c4[h5 + 3 | 0] << 8 | c4[h5 + 4 | 0] << 16 | c4[h5 + 5 | 0] << 24) >>> 24, n9 = t7, r11 = (t7 = c4[h5 + 7 | 0]) >>> 16 | 0, r11 |= n9, n9 = A8, o5 = n9 = (t7 = 2097151 & ((3 & r11) << 30 | (t7 = t7 << 16 | o5) >>> 2)) >>> 0 > (ft3 = t7 + ft3 | 0) >>> 0 ? n9 + 1 | 0 : n9, Jt3 = t7 = n9 - ((ft3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (Qt3 = ft3 - -1048576 | 0) >>> 21, t7 = (t7 >>> 21 | 0) + ut3 | 0, It3 = t7 = n9 >>> 0 > (yt3 = n9 + wt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, zt3 = t7 = t7 - ((yt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (r11 = t7 >>> 21 | 0) + mt3 | 0, n9 = (t7 = (2097151 & t7) << 11 | (Ct3 = yt3 - -1048576 | 0) >>> 21) >>> 0 > (A8 = t7 + lt3 | 0) >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(Ht3, Zt3, 666643, 0), t7 = y4 + n9 | 0, t7 = r11 >>> 0 > (A8 = r11 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2($t3, nt3, 470296, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + A8 | 0) >>> 0 ? t7 + 1 | 0 : t7, A8 = (r11 = n9) + (n9 = Bt2(Ft3, Pt3, 136657, 0)) | 0, r11 = y4 + t7 | 0, r11 = n9 >>> 0 > A8 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(Nt3, Ot3, 654183, 0), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, lt3 = (t7 = Bt2(Rt3, xt3, -997805, -1)) + n9 | 0, n9 = y4 + r11 | 0, mt3 = n9 = t7 >>> 0 > lt3 >>> 0 ? n9 + 1 | 0 : n9, Ut3 = t7 = n9 - ((lt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & t7) << 11 | (wt3 = lt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + dt3 | 0, Mt3 = n9 = (t7 = n9 >>> 0 > (A8 = n9 + Mt3 | 0) >>> 0 ? t7 + 1 | 0 : t7) - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, ut3 = (2097151 & n9) << 11 | (dt3 = A8 - -1048576 | 0) >>> 21, n9 = (n9 >> 21) + qt3 | 0, Tt3 = Dt3 = ut3 + Lt3 | 0, Dt3 = ut3 >>> 0 > Dt3 >>> 0 ? n9 + 1 | 0 : n9, ut3 = A8, r11 = t7, A8 = (kt3 - (t7 = -2097152 & pt3) | 0) + (pt3 = (2097151 & _t3) << 11 | Et3 >>> 21) | 0, t7 = (vt3 - ((t7 >>> 0 > kt3 >>> 0) + Yt3 | 0) | 0) + (_t3 >> 21) | 0, Et3 = t7 = A8 >>> 0 < pt3 >>> 0 ? t7 + 1 | 0 : t7, Lt3 = t7 = t7 - ((A8 >>> 0 < 4293918720) - 1 | 0) | 0, kt3 = n9 = t7 >> 21, t7 = Bt2(Ht3 = (2097151 & t7) << 11 | (_t3 = A8 - -1048576 | 0) >>> 21, n9, -683901, -1), r11 = y4 + r11 | 0, r11 = t7 >>> 0 > (n9 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, qt3 = n9 - (t7 = -2097152 & dt3) | 0, jt3 = r11 - ((t7 >>> 0 > n9 >>> 0) + Mt3 | 0) | 0, r11 = Bt2(Ht3, kt3, 136657, 0), t7 = y4 + mt3 | 0, t7 = r11 >>> 0 > (n9 = r11 + lt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Vt3 = n9 - (r11 = -2097152 & wt3) | 0, Ut3 = t7 - ((r11 >>> 0 > n9 >>> 0) + Ut3 | 0) | 0, r11 = Bt2($t3, nt3, 666643, 0), t7 = y4 + (It3 - (((n9 = -2097152 & Ct3) >>> 0 > yt3 >>> 0) + zt3 | 0) | 0) | 0, t7 = r11 >>> 0 > (ut3 = r11 + (yt3 - n9 | 0) | 0) >>> 0 ? t7 + 1 | 0 : t7, n9 = Bt2(Ft3, Pt3, -997805, -1), r11 = y4 + t7 | 0, r11 = n9 >>> 0 > (ut3 = n9 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(Nt3, Ot3, 470296, 0), n9 = y4 + r11 | 0, n9 = t7 >>> 0 > (ut3 = t7 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(Rt3, xt3, 654183, 0), t7 = y4 + n9 | 0, Mt3 = ut3 = r11 + ut3 | 0, mt3 = r11 >>> 0 > ut3 >>> 0 ? t7 + 1 | 0 : t7, n9 = Kt3 >>> 5 & 2097151, t7 = Bt2(M5, 0, O5, 0), r11 = y4, dt3 = t7, t7 = Bt2(x5, 0, L5, 0), r11 = y4 + r11 | 0, t7 = t7 >>> 0 > (ut3 = dt3 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, dt3 = r11 = n9 + ut3 | 0, n9 = t7 = r11 >>> 0 < ut3 >>> 0 ? t7 + 1 | 0 : t7, yt3 = (r11 = Bt2(M5, 0, L5, 0)) + (t7 = (t7 = c4[h5 + 2 | 0]) << 16 & 2031616 | c4[0 | h5] | c4[h5 + 1 | 0] << 8) | 0, r11 = y4, pt3 = r11 = t7 >>> 0 > yt3 >>> 0 ? r11 + 1 | 0 : r11, Yt3 = r11 = r11 - ((yt3 >>> 0 < 4293918720) - 1 | 0) | 0, t7 = (t7 = r11 >>> 21 | 0) + n9 | 0, Ct3 = t7 = (r11 = (2097151 & r11) << 11 | (It3 = yt3 - -1048576 | 0) >>> 21) >>> 0 > (vt3 = r11 + dt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Kt3 = r11 = t7 - ((vt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (2097151 & r11) << 11 | (lt3 = vt3 - -1048576 | 0) >>> 21, r11 = (r11 >>> 21 | 0) + o5 | 0, r11 = n9 >>> 0 > (ut3 = n9 + ft3 | 0) >>> 0 ? r11 + 1 | 0 : r11, n9 = Bt2(Ft3, Pt3, 654183, 0), t7 = y4 + (r11 - (((o5 = -2097152 & Qt3) >>> 0 > ut3 >>> 0) + Jt3 | 0) | 0) | 0, t7 = n9 >>> 0 > (ft3 = n9 + (ut3 - o5 | 0) | 0) >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(Nt3, Ot3, 666643, 0), t7 = y4 + t7 | 0, t7 = r11 >>> 0 > (n9 = r11 + ft3 | 0) >>> 0 ? t7 + 1 | 0 : t7, wt3 = (r11 = n9) + (n9 = Bt2(Rt3, xt3, 470296, 0)) | 0, r11 = y4 + t7 | 0, dt3 = r11 = n9 >>> 0 > wt3 >>> 0 ? r11 + 1 | 0 : r11, zt3 = r11 = r11 - ((wt3 >>> 0 < 4293918720) - 1 | 0) | 0, n9 = (t7 = r11 >> 21) + mt3 | 0, Qt3 = r11 = (n9 = (r11 = (2097151 & r11) << 11 | (ut3 = wt3 - -1048576 | 0) >>> 21) >>> 0 > (ft3 = r11 + Mt3 | 0) >>> 0 ? n9 + 1 | 0 : n9) - ((ft3 >>> 0 < 4293918720) - 1 | 0) | 0, mt3 = (2097151 & r11) << 11 | (o5 = ft3 - -1048576 | 0) >>> 21, r11 = (r11 >> 21) + Ut3 | 0, Ot3 = Nt3 = mt3 + Vt3 | 0, mt3 = mt3 >>> 0 > Nt3 >>> 0 ? r11 + 1 | 0 : r11, t7 = Bt2(Ht3, kt3, -997805, -1), r11 = y4 + n9 | 0, r11 = t7 >>> 0 > (ft3 = t7 + ft3 | 0) >>> 0 ? r11 + 1 | 0 : r11, Ut3 = ft3 - (t7 = -2097152 & o5) | 0, Mt3 = r11 - ((t7 >>> 0 > ft3 >>> 0) + Qt3 | 0) | 0, r11 = Bt2(Ht3, kt3, 654183, 0), t7 = y4 + dt3 | 0, t7 = r11 >>> 0 > (n9 = r11 + wt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, Nt3 = n9 - (r11 = -2097152 & ut3) | 0, Qt3 = t7 - ((r11 >>> 0 > n9 >>> 0) + zt3 | 0) | 0, t7 = Bt2(Ft3, Pt3, 470296, 0), n9 = y4 + (Ct3 - (((r11 = -2097152 & lt3) >>> 0 > vt3 >>> 0) + Kt3 | 0) | 0) | 0, n9 = t7 >>> 0 > (o5 = t7 + (vt3 - r11 | 0) | 0) >>> 0 ? n9 + 1 | 0 : n9, r11 = Bt2(Rt3, xt3, 666643, 0), t7 = y4 + n9 | 0, ft3 = o5 = r11 + o5 | 0, n9 = r11 >>> 0 > o5 >>> 0 ? t7 + 1 | 0 : t7, r11 = Bt2(Ft3, Pt3, 666643, 0), t7 = y4 + (pt3 - ((4095 & Yt3) + ((o5 = -2097152 & It3) >>> 0 > yt3 >>> 0) | 0) | 0) | 0, wt3 = t7 = r11 >>> 0 > (lt3 = r11 + (yt3 - o5 | 0) | 0) >>> 0 ? t7 + 1 | 0 : t7, pt3 = t7 = t7 - ((lt3 >>> 0 < 4293918720) - 1 | 0) | 0, o5 = (2097151 & t7) << 11 | (dt3 = lt3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + n9 | 0, n9 = t7 = o5 >>> 0 > (ut3 = o5 + ft3 | 0) >>> 0 ? t7 + 1 | 0 : t7, It3 = t7 = t7 - ((ut3 >>> 0 < 4293918720) - 1 | 0) | 0, o5 = (2097151 & t7) << 11 | (ft3 = ut3 - -1048576 | 0) >>> 21, t7 = (t7 >> 21) + Qt3 | 0, o5 = o5 >>> 0 > (Ct3 = o5 + Nt3 | 0) >>> 0 ? t7 + 1 | 0 : t7, t7 = Bt2(Ht3, kt3, 470296, 0), n9 = y4 + n9 | 0, n9 = t7 >>> 0 > (r11 = t7 + ut3 | 0) >>> 0 ? n9 + 1 | 0 : n9, ut3 = r11 - (t7 = -2097152 & ft3) | 0, ft3 = n9 - ((t7 >>> 0 > r11 >>> 0) + It3 | 0) | 0, r11 = Bt2(Ht3, kt3, 666643, 0), t7 = y4 + (wt3 - (((n9 = -2097152 & dt3) >>> 0 > lt3 >>> 0) + pt3 | 0) | 0) | 0, r11 = (n9 = (t7 = r11 >>> 0 > (vt3 = r11 + (lt3 - n9 | 0) | 0) >>> 0 ? t7 + 1 | 0 : t7) >> 21) + ft3 | 0, t7 = (t7 = (r11 = (t7 = (2097151 & t7) << 11 | vt3 >>> 21) >>> 0 > (Qt3 = t7 + ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11) >> 21) + o5 | 0, r11 = (r11 = (t7 = (r11 = (2097151 & r11) << 11 | Qt3 >>> 21) >>> 0 > (pt3 = r11 + Ct3 | 0) >>> 0 ? t7 + 1 | 0 : t7) >> 21) + Mt3 | 0, n9 = (t7 = (r11 = (t7 = (2097151 & t7) << 11 | pt3 >>> 21) >>> 0 > (o5 = t7 + Ut3 | 0) >>> 0 ? r11 + 1 | 0 : r11) >> 21) + mt3 | 0, t7 = (r11 = (n9 = (r11 = (2097151 & r11) << 11 | o5 >>> 21) >>> 0 > (It3 = r11 + Ot3 | 0) >>> 0 ? n9 + 1 | 0 : n9) >> 21) + jt3 | 0, r11 = (n9 = (t7 = (n9 = (2097151 & n9) << 11 | It3 >>> 21) >>> 0 > (Ct3 = n9 + qt3 | 0) >>> 0 ? t7 + 1 | 0 : t7) >> 21) + Dt3 | 0, t7 = (t7 = (r11 = (t7 = (2097151 & t7) << 11 | Ct3 >>> 21) >>> 0 > (lt3 = t7 + Tt3 | 0) >>> 0 ? r11 + 1 | 0 : r11) >> 21) + Wt3 | 0, r11 = (r11 = (t7 = (r11 = (2097151 & r11) << 11 | lt3 >>> 21) >>> 0 > (mt3 = r11 + Gt3 | 0) >>> 0 ? t7 + 1 | 0 : t7) >> 21) + St3 | 0, n9 = (t7 = (r11 = (t7 = (2097151 & t7) << 11 | mt3 >>> 21) >>> 0 > (wt3 = t7 + Xt3 | 0) >>> 0 ? r11 + 1 | 0 : r11) >> 21) + te3 | 0, t7 = (r11 = (n9 = (r11 = (2097151 & r11) << 11 | wt3 >>> 21) >>> 0 > (dt3 = r11 + ie3 | 0) >>> 0 ? n9 + 1 | 0 : n9) >> 21) + Ae3 | 0, ft3 = (_t3 = A8 - (r11 = -2097152 & _t3) | 0) + ((2097151 & (t7 = (n9 = (2097151 & n9) << 11 | dt3 >>> 21) >>> 0 > (ut3 = n9 + ne3 | 0) >>> 0 ? t7 + 1 | 0 : t7)) << 11 | ut3 >>> 21) | 0, t7 = (Et3 - ((r11 >>> 0 > A8 >>> 0) + Lt3 | 0) | 0) + (t7 >> 21) | 0, _t3 = r11 = (t7 = ft3 >>> 0 < _t3 >>> 0 ? t7 + 1 | 0 : t7) >> 21, vt3 = (t7 = Bt2(Dt3 = (2097151 & t7) << 11 | ft3 >>> 21, r11, 666643, 0)) + (r11 = 2097151 & vt3) | 0, t7 = y4, A8 = t7 = r11 >>> 0 > vt3 >>> 0 ? t7 + 1 | 0 : t7, s4[0 | i4] = vt3, s4[i4 + 1 | 0] = (255 & t7) << 24 | vt3 >>> 8, t7 = 2097151 & Qt3, r11 = Bt2(Dt3, _t3, 470296, 0) + t7 | 0, n9 = y4, t7 = (A8 >> 21) + (t7 >>> 0 > r11 >>> 0 ? n9 + 1 | 0 : n9) | 0, t7 = (Et3 = (2097151 & A8) << 11 | vt3 >>> 21) >>> 0 > (Qt3 = Et3 + r11 | 0) >>> 0 ? t7 + 1 | 0 : t7, s4[i4 + 4 | 0] = (2047 & t7) << 21 | Qt3 >>> 11, r11 = t7, n9 = Qt3, s4[i4 + 3 | 0] = (7 & t7) << 29 | n9 >>> 3, s4[i4 + 2 | 0] = 31 & ((65535 & A8) << 16 | vt3 >>> 16) | n9 << 5, A8 = 2097151 & pt3, pt3 = Bt2(Dt3, _t3, 654183, 0) + A8 | 0, t7 = y4, Qt3 = (2097151 & r11) << 11 | n9 >>> 21, r11 = (r11 >> 21) + (A8 = A8 >>> 0 > pt3 >>> 0 ? t7 + 1 | 0 : t7) | 0, t7 = r11 = (pt3 = Qt3 + pt3 | 0) >>> 0 < Qt3 >>> 0 ? r11 + 1 | 0 : r11, s4[i4 + 6 | 0] = (63 & t7) << 26 | pt3 >>> 6, A8 = pt3, pt3 = 0, s4[i4 + 5 | 0] = pt3 << 13 | (1572864 & n9) >>> 19 | A8 << 2, n9 = 2097151 & o5, o5 = Bt2(Dt3, _t3, -997805, -1) + n9 | 0, r11 = y4, r11 = n9 >>> 0 > o5 >>> 0 ? r11 + 1 | 0 : r11, pt3 = (2097151 & (n9 = t7)) << 11 | A8 >>> 21, n9 = (t7 >>= 21) + r11 | 0, n9 = (o5 = pt3 + o5 | 0) >>> 0 < pt3 >>> 0 ? n9 + 1 | 0 : n9, s4[i4 + 9 | 0] = (511 & n9) << 23 | o5 >>> 9, s4[i4 + 8 | 0] = (1 & n9) << 31 | o5 >>> 1, r11 = 0, s4[i4 + 7 | 0] = r11 << 18 | (2080768 & A8) >>> 14 | o5 << 7, r11 = 2097151 & It3, A8 = Bt2(Dt3, _t3, 136657, 0) + r11 | 0, t7 = y4, t7 = r11 >>> 0 > A8 >>> 0 ? t7 + 1 | 0 : t7, It3 = (2097151 & (r11 = n9)) << 11 | o5 >>> 21, r11 = t7 + (n9 = r11 >> 21) | 0, r11 = (A8 = It3 + A8 | 0) >>> 0 < It3 >>> 0 ? r11 + 1 | 0 : r11, s4[i4 + 12 | 0] = (4095 & r11) << 20 | A8 >>> 12, n9 = A8, s4[i4 + 11 | 0] = (15 & r11) << 28 | n9 >>> 4, A8 = 0, s4[i4 + 10 | 0] = A8 << 15 | (1966080 & o5) >>> 17 | n9 << 4, A8 = 2097151 & Ct3, o5 = Bt2(Dt3, _t3, -683901, -1) + A8 | 0, t7 = y4, t7 = A8 >>> 0 > o5 >>> 0 ? t7 + 1 | 0 : t7, A8 = r11, r11 = t7 + (r11 >>= 21) | 0, r11 = (A8 = (Ct3 = o5) + (o5 = (2097151 & A8) << 11 | n9 >>> 21) | 0) >>> 0 < o5 >>> 0 ? r11 + 1 | 0 : r11, s4[i4 + 14 | 0] = (127 & r11) << 25 | A8 >>> 7, o5 = 0, s4[i4 + 13 | 0] = o5 << 12 | (1048576 & n9) >>> 20 | A8 << 1, t7 = r11 >> 21, n9 = (r11 = (2097151 & r11) << 11 | A8 >>> 21) >>> 0 > (o5 = r11 + (2097151 & lt3) | 0) >>> 0 ? t7 + 1 | 0 : t7, s4[i4 + 17 | 0] = (1023 & n9) << 22 | o5 >>> 10, s4[i4 + 16 | 0] = (3 & n9) << 30 | o5 >>> 2, r11 = 0, s4[i4 + 15 | 0] = r11 << 17 | (2064384 & A8) >>> 15 | o5 << 6, t7 = n9 >> 21, t7 = (r11 = (2097151 & n9) << 11 | o5 >>> 21) >>> 0 > (n9 = r11 + (2097151 & mt3) | 0) >>> 0 ? t7 + 1 | 0 : t7, s4[i4 + 20 | 0] = (8191 & t7) << 19 | n9 >>> 13, s4[i4 + 19 | 0] = (31 & t7) << 27 | n9 >>> 5, A8 = (r11 = 2097151 & wt3) + (wt3 = (2097151 & t7) << 11 | n9 >>> 21) | 0, r11 = t7 >> 21, r11 = A8 >>> 0 < wt3 >>> 0 ? r11 + 1 | 0 : r11, wt3 = A8, s4[i4 + 21 | 0] = A8, mt3 = 0, s4[i4 + 18 | 0] = mt3 << 14 | (1835008 & o5) >>> 18 | n9 << 3, s4[i4 + 22 | 0] = (255 & r11) << 24 | A8 >>> 8, n9 = r11 >> 21, n9 = (A8 = (o5 = (2097151 & r11) << 11 | A8 >>> 21) + (2097151 & dt3) | 0) >>> 0 < o5 >>> 0 ? n9 + 1 | 0 : n9, s4[i4 + 25 | 0] = (2047 & n9) << 21 | A8 >>> 11, s4[i4 + 24 | 0] = (7 & n9) << 29 | A8 >>> 3, s4[i4 + 23 | 0] = 31 & ((65535 & r11) << 16 | wt3 >>> 16) | A8 << 5, t7 = n9 >> 21, t7 = (r11 = (2097151 & n9) << 11 | A8 >>> 21) >>> 0 > (n9 = r11 + (2097151 & ut3) | 0) >>> 0 ? t7 + 1 | 0 : t7, s4[i4 + 27 | 0] = (63 & t7) << 26 | n9 >>> 6, o5 = 0, s4[i4 + 26 | 0] = o5 << 13 | (1572864 & A8) >>> 19 | n9 << 2, r11 = t7 >> 21, r11 = (t7 = (A8 = (2097151 & t7) << 11 | n9 >>> 21) + (2097151 & ft3) | 0) >>> 0 < A8 >>> 0 ? r11 + 1 | 0 : r11, s4[i4 + 31 | 0] = (131071 & r11) << 15 | t7 >>> 17, s4[i4 + 30 | 0] = (511 & r11) << 23 | t7 >>> 9, s4[i4 + 29 | 0] = (1 & r11) << 31 | t7 >>> 1, A8 = 0, s4[i4 + 28 | 0] = A8 << 18 | (2080768 & n9) >>> 14 | t7 << 7, oe2(g5, 64), oe2(h5, 64), e6 && (a4[e6 >> 2] = 64, a4[e6 + 4 >> 2] = 0), I4 = u5 + 560 | 0, 0;
                            }
                            function B4(t7, e6, r11, n9) {
                              for (var A8 = 0, i4 = 0, o5 = 0, s5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0; o5 = (A8 = h5 << 3) + r11 | 0, i4 = c4[0 | (A8 = e6 + A8 | 0)] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, b5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, g5 = i4 << 24 | (65280 & i4) << 8, u5 = (s5 = 16711680 & i4) << 24, s5 = s5 >>> 8 | 0, A8 = (f5 = -16777216 & i4) >>> 24 | 0, a4[o5 >> 2] = u5 | f5 << 8 | -16777216 & ((255 & b5) << 24 | i4 >>> 8) | 16711680 & ((16777215 & b5) << 8 | i4 >>> 24) | b5 >>> 8 & 65280 | b5 >>> 24, i4 = A8 | s5 | g5, A8 = 0, a4[o5 + 4 >> 2] = i4 | A8 | A8, 16 != (0 | (h5 = h5 + 1 | 0)); )
                                ;
                              for (e6 = a4[t7 + 4 >> 2], a4[n9 >> 2] = a4[t7 >> 2], a4[n9 + 4 >> 2] = e6, e6 = a4[t7 + 60 >> 2], a4[n9 + 56 >> 2] = a4[t7 + 56 >> 2], a4[n9 + 60 >> 2] = e6, e6 = a4[t7 + 52 >> 2], a4[n9 + 48 >> 2] = a4[t7 + 48 >> 2], a4[n9 + 52 >> 2] = e6, e6 = a4[t7 + 44 >> 2], a4[n9 + 40 >> 2] = a4[t7 + 40 >> 2], a4[n9 + 44 >> 2] = e6, e6 = a4[t7 + 36 >> 2], a4[n9 + 32 >> 2] = a4[t7 + 32 >> 2], a4[n9 + 36 >> 2] = e6, e6 = a4[t7 + 28 >> 2], a4[n9 + 24 >> 2] = a4[t7 + 24 >> 2], a4[n9 + 28 >> 2] = e6, e6 = a4[t7 + 20 >> 2], a4[n9 + 16 >> 2] = a4[t7 + 16 >> 2], a4[n9 + 20 >> 2] = e6, e6 = a4[t7 + 12 >> 2], a4[n9 + 8 >> 2] = a4[t7 + 8 >> 2], a4[n9 + 12 >> 2] = e6; o5 = a4[n9 + 56 >> 2], s5 = a4[n9 + 60 >> 2], A8 = a4[(e6 = b5 = (k5 = Y5 << 3) + r11 | 0) >> 2], e6 = a4[e6 + 4 >> 2], w5 = i4 = a4[n9 + 36 >> 2], i4 = ft2(m5 = a4[n9 + 32 >> 2], i4, 50), h5 = y4, i4 = ft2(m5, w5, 46) ^ i4, h5 ^= y4, i4 = ft2(m5, w5, 23) ^ i4, e6 = (y4 ^ h5) + e6 | 0, e6 = (A8 = i4 + A8 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = (h5 = a4[(i4 = k5 + 34368 | 0) >> 2]) + A8 | 0, e6 = a4[i4 + 4 >> 2] + e6 | 0, e6 = A8 >>> 0 < h5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (h5 = ((u5 = a4[n9 + 48 >> 2]) ^ (p5 = a4[n9 + 40 >> 2])) & m5 ^ u5) + A8 | 0, A8 = (((B5 = a4[n9 + 52 >> 2]) ^ (v5 = a4[n9 + 44 >> 2])) & w5 ^ B5) + e6 | 0, e6 = (i4 >>> 0 < h5 >>> 0 ? A8 + 1 | 0 : A8) + s5 | 0, e6 = (o5 = i4 + o5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, h5 = (i4 = a4[n9 + 24 >> 2]) + o5 | 0, A8 = a4[n9 + 28 >> 2] + e6 | 0, d5 = A8 = i4 >>> 0 > h5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 24 >> 2] = h5, a4[n9 + 28 >> 2] = A8, E5 = A8 = a4[n9 + 4 >> 2], A8 = ft2(i4 = a4[n9 >> 2], A8, 36), s5 = y4, A8 = ft2(i4, E5, 30) ^ A8, s5 ^= y4, f5 = o5 + (ft2(i4, E5, 25) ^ A8) | 0, A8 = e6 + (y4 ^ s5) | 0, A8 = o5 >>> 0 > f5 >>> 0 ? A8 + 1 | 0 : A8, g5 = (e6 = f5) + (f5 = i4 & ((s5 = a4[n9 + 16 >> 2]) | (o5 = a4[n9 + 8 >> 2])) | o5 & s5) | 0, e6 = (e6 = A8) + (E5 & ((A8 = a4[n9 + 20 >> 2]) | (I5 = a4[n9 + 12 >> 2])) | A8 & I5) | 0, f5 = e6 = g5 >>> 0 < f5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 56 >> 2] = g5, a4[n9 + 60 >> 2] = e6, l5 = s5, C5 = A8, Q5 = a4[(e6 = R5 = (_5 = 8 | k5) + r11 | 0) >> 2], S5 = a4[e6 + 4 >> 2], A8 = ((w5 ^ v5) & d5 ^ v5) + B5 | 0, A8 = (e6 = (s5 = (p5 ^ m5) & h5 ^ p5) + u5 | 0) >>> 0 < s5 >>> 0 ? A8 + 1 | 0 : A8, s5 = ft2(h5, d5, 50), u5 = y4, s5 = ft2(h5, d5, 46) ^ s5, u5 ^= y4, s5 = (B5 = ft2(h5, d5, 23) ^ s5) + e6 | 0, e6 = (y4 ^ u5) + A8 | 0, e6 = (s5 >>> 0 < B5 >>> 0 ? e6 + 1 | 0 : e6) + S5 | 0, e6 = (A8 = s5 + Q5 | 0) >>> 0 < s5 >>> 0 ? e6 + 1 | 0 : e6, s5 = (s5 = A8) + (u5 = a4[(A8 = _5 + 34368 | 0) >> 2]) | 0, A8 = a4[A8 + 4 >> 2] + e6 | 0, A8 = (e6 = s5 >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8) + C5 | 0, B5 = A8 = (u5 = s5 + l5 | 0) >>> 0 < s5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 16 >> 2] = u5, a4[n9 + 20 >> 2] = A8, e6 = e6 + ((I5 | E5) & f5 | I5 & E5) | 0, e6 = (A8 = s5 + ((i4 | o5) & g5 | i4 & o5) | 0) >>> 0 < s5 >>> 0 ? e6 + 1 | 0 : e6, s5 = ft2(g5, f5, 36), l5 = y4, s5 = ft2(g5, f5, 30) ^ s5, l5 ^= y4, C5 = A8, A8 = ft2(g5, f5, 25) ^ s5, e6 = (y4 ^ l5) + e6 | 0, l5 = e6 = A8 >>> 0 > (s5 = C5 + A8 | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 48 >> 2] = s5, a4[n9 + 52 >> 2] = e6, C5 = o5, _5 = I5, e6 = (I5 = a4[(A8 = x5 = (o5 = 16 | k5) + r11 | 0) >> 2]) + p5 | 0, A8 = a4[A8 + 4 >> 2] + v5 | 0, A8 = e6 >>> 0 < I5 >>> 0 ? A8 + 1 | 0 : A8, o5 = (p5 = e6) + (I5 = a4[(e6 = o5 + 34368 | 0) >> 2]) | 0, e6 = a4[e6 + 4 >> 2] + A8 | 0, e6 = ((d5 ^ w5) & B5 ^ w5) + (e6 = o5 >>> 0 < I5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (A8 = o5) + (o5 = (h5 ^ m5) & u5 ^ m5) | 0) >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, o5 = ft2(u5, B5, 50), I5 = y4, o5 = ft2(u5, B5, 46) ^ o5, I5 ^= y4, o5 = (p5 = ft2(u5, B5, 23) ^ o5) + A8 | 0, A8 = (y4 ^ I5) + e6 | 0, A8 = (p5 = o5 >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8) + _5 | 0, _5 = A8 = (I5 = o5) >>> 0 > (o5 = o5 + C5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 8 >> 2] = o5, a4[n9 + 12 >> 2] = A8, e6 = ft2(s5, l5, 36), A8 = y4, e6 = ft2(s5, l5, 30) ^ e6, A8 ^= y4, v5 = ft2(s5, l5, 25) ^ e6, e6 = ((f5 | E5) & l5 | f5 & E5) + (y4 ^ A8) | 0, A8 = p5 + ((C5 = v5 + ((i4 | g5) & s5 | i4 & g5) | 0) >>> 0 < v5 >>> 0 ? e6 + 1 | 0 : e6) | 0, I5 = A8 = (p5 = I5 + C5 | 0) >>> 0 < I5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 40 >> 2] = p5, a4[n9 + 44 >> 2] = A8, C5 = i4, A8 = (A8 = m5) + (m5 = a4[(e6 = U5 = (i4 = 24 | k5) + r11 | 0) >> 2]) | 0, e6 = a4[e6 + 4 >> 2] + w5 | 0, e6 = A8 >>> 0 < m5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (v5 = A8) + (m5 = a4[(A8 = i4 + 34368 | 0) >> 2]) | 0, A8 = a4[A8 + 4 >> 2] + e6 | 0, A8 = (d5 ^ (d5 ^ B5) & _5) + (A8 = i4 >>> 0 < m5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (e6 = i4) + (i4 = h5 ^ (h5 ^ u5) & o5) | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(o5, _5, 50), m5 = y4, i4 = ft2(o5, _5, 46) ^ i4, m5 ^= y4, i4 = (w5 = ft2(o5, _5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ m5) + A8 | 0, A8 = (e6 = i4 >>> 0 < w5 >>> 0 ? e6 + 1 | 0 : e6) + E5 | 0, w5 = A8 = (E5 = i4 + C5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 >> 2] = E5, a4[n9 + 4 >> 2] = A8, A8 = ft2(p5, I5, 36), m5 = y4, A8 = ft2(p5, I5, 30) ^ A8, C5 = y4 ^ m5, v5 = ft2(p5, I5, 25) ^ A8, A8 = ((f5 | l5) & I5 | f5 & l5) + (y4 ^ C5) | 0, e6 = e6 + ((m5 = v5 + ((s5 | g5) & p5 | s5 & g5) | 0) >>> 0 < v5 >>> 0 ? A8 + 1 | 0 : A8) | 0, m5 = e6 = (C5 = i4 + m5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 32 >> 2] = C5, a4[n9 + 36 >> 2] = e6, i4 = a4[(A8 = T3 = (e6 = 32 | k5) + r11 | 0) >> 2], A8 = d5 + a4[A8 + 4 >> 2] | 0, A8 = (i4 = i4 + h5 | 0) >>> 0 < h5 >>> 0 ? A8 + 1 | 0 : A8, i4 = (h5 = a4[(e6 = e6 + 34368 | 0) >> 2]) + i4 | 0, e6 = a4[e6 + 4 >> 2] + A8 | 0, e6 = (B5 ^ (B5 ^ _5) & w5) + (e6 = i4 >>> 0 < h5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (A8 = i4) + (i4 = u5 ^ (o5 ^ u5) & E5) | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, i4 = ft2(E5, w5, 50), h5 = y4, i4 = ft2(E5, w5, 46) ^ i4, h5 ^= y4, i4 = (d5 = ft2(E5, w5, 23) ^ i4) + A8 | 0, A8 = (y4 ^ h5) + e6 | 0, v5 = A8 = i4 >>> 0 < d5 >>> 0 ? A8 + 1 | 0 : A8, e6 = A8, A8 = ft2(C5, m5, 36), h5 = y4, A8 = ft2(C5, m5, 30) ^ A8, d5 = y4 ^ h5, Q5 = ft2(C5, m5, 25) ^ A8, A8 = ((l5 | I5) & m5 | l5 & I5) + (y4 ^ d5) | 0, e6 = ((h5 = Q5 + ((s5 | p5) & C5 | s5 & p5) | 0) >>> 0 < Q5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, h5 = e6 = (d5 = i4 + h5 | 0) >>> 0 < h5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 24 >> 2] = d5, a4[n9 + 28 >> 2] = e6, A8 = f5 + v5 | 0, v5 = A8 = (f5 = i4 + g5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 56 >> 2] = f5, a4[n9 + 60 >> 2] = A8, i4 = a4[(e6 = F5 = (A8 = 40 | k5) + r11 | 0) >> 2], e6 = B5 + a4[e6 + 4 >> 2] | 0, e6 = (i4 = i4 + u5 | 0) >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (g5 = a4[(A8 = A8 + 34368 | 0) >> 2]) + i4 | 0, A8 = a4[A8 + 4 >> 2] + e6 | 0, A8 = (_5 ^ (w5 ^ _5) & v5) + (A8 = i4 >>> 0 < g5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (e6 = i4) + (i4 = o5 ^ (o5 ^ E5) & f5) | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(f5, v5, 50), g5 = y4, i4 = ft2(f5, v5, 46) ^ i4, g5 ^= y4, i4 = (u5 = ft2(f5, v5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ g5) + A8 | 0, e6 = i4 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, A8 = ft2(d5, h5, 36), g5 = y4, A8 = ft2(d5, h5, 30) ^ A8, u5 = y4 ^ g5, B5 = ft2(d5, h5, 25) ^ A8, A8 = ((I5 | m5) & h5 | I5 & m5) + (y4 ^ u5) | 0, A8 = ((g5 = B5 + ((p5 | C5) & d5 | p5 & C5) | 0) >>> 0 < B5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, g5 = A8 = (u5 = i4 + g5 | 0) >>> 0 < g5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 16 >> 2] = u5, a4[n9 + 20 >> 2] = A8, e6 = e6 + l5 | 0, Q5 = e6 = (l5 = i4 + s5 | 0) >>> 0 < s5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 48 >> 2] = l5, a4[n9 + 52 >> 2] = e6, i4 = a4[(A8 = M5 = (e6 = 48 | k5) + r11 | 0) >> 2], A8 = _5 + a4[A8 + 4 >> 2] | 0, A8 = (i4 = i4 + o5 | 0) >>> 0 < o5 >>> 0 ? A8 + 1 | 0 : A8, i4 = (o5 = a4[(e6 = e6 + 34368 | 0) >> 2]) + i4 | 0, e6 = a4[e6 + 4 >> 2] + A8 | 0, e6 = (w5 ^ (w5 ^ v5) & Q5) + (e6 = i4 >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (A8 = i4) + (i4 = E5 ^ (f5 ^ E5) & l5) | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, i4 = ft2(l5, Q5, 50), o5 = y4, i4 = ft2(l5, Q5, 46) ^ i4, o5 ^= y4, i4 = (s5 = ft2(l5, Q5, 23) ^ i4) + A8 | 0, A8 = (y4 ^ o5) + e6 | 0, s5 = A8 = i4 >>> 0 < s5 >>> 0 ? A8 + 1 | 0 : A8, e6 = A8, A8 = ft2(u5, g5, 36), o5 = y4, A8 = ft2(u5, g5, 30) ^ A8, B5 = y4 ^ o5, _5 = ft2(u5, g5, 25) ^ A8, A8 = ((h5 | m5) & g5 | h5 & m5) + (y4 ^ B5) | 0, e6 = ((o5 = _5 + ((d5 | C5) & u5 | d5 & C5) | 0) >>> 0 < _5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, B5 = e6 = (A8 = o5) >>> 0 > (o5 = i4 + o5 | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 8 >> 2] = o5, a4[n9 + 12 >> 2] = e6, A8 = s5 + I5 | 0, _5 = A8 = (S5 = i4 + p5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 40 >> 2] = S5, a4[n9 + 44 >> 2] = A8, i4 = a4[(e6 = P5 = (A8 = 56 | k5) + r11 | 0) >> 2], e6 = w5 + a4[e6 + 4 >> 2] | 0, e6 = (i4 = i4 + E5 | 0) >>> 0 < E5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (s5 = a4[(A8 = A8 + 34368 | 0) >> 2]) + i4 | 0, A8 = a4[A8 + 4 >> 2] + e6 | 0, A8 = (v5 ^ (v5 ^ Q5) & _5) + (A8 = i4 >>> 0 < s5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (e6 = i4) + (i4 = f5 ^ (f5 ^ l5) & S5) | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(S5, _5, 50), s5 = y4, i4 = ft2(S5, _5, 46) ^ i4, s5 ^= y4, i4 = (I5 = ft2(S5, _5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ s5) + A8 | 0, e6 = i4 >>> 0 < I5 >>> 0 ? e6 + 1 | 0 : e6, A8 = ft2(o5, B5, 36), s5 = y4, A8 = ft2(o5, B5, 30) ^ A8, I5 = y4 ^ s5, p5 = ft2(o5, B5, 25) ^ A8, A8 = ((h5 | g5) & B5 | h5 & g5) + (y4 ^ I5) | 0, A8 = ((s5 = p5 + ((u5 | d5) & o5 | u5 & d5) | 0) >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, I5 = A8 = (I5 = s5) >>> 0 > (s5 = i4 + s5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[n9 >> 2] = s5, a4[n9 + 4 >> 2] = A8, e6 = e6 + m5 | 0, w5 = e6 = (p5 = i4 + C5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 32 >> 2] = p5, a4[n9 + 36 >> 2] = e6, i4 = a4[(A8 = G5 = (e6 = 64 | k5) + r11 | 0) >> 2], A8 = v5 + a4[A8 + 4 >> 2] | 0, A8 = (i4 = i4 + f5 | 0) >>> 0 < f5 >>> 0 ? A8 + 1 | 0 : A8, i4 = (f5 = a4[(e6 = e6 + 34368 | 0) >> 2]) + i4 | 0, e6 = a4[e6 + 4 >> 2] + A8 | 0, e6 = (Q5 ^ (_5 ^ Q5) & w5) + (e6 = i4 >>> 0 < f5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (A8 = i4) + (i4 = l5 ^ (l5 ^ S5) & p5) | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, i4 = ft2(p5, w5, 50), f5 = y4, i4 = ft2(p5, w5, 46) ^ i4, f5 ^= y4, i4 = (E5 = ft2(p5, w5, 23) ^ i4) + A8 | 0, A8 = (y4 ^ f5) + e6 | 0, m5 = A8 = i4 >>> 0 < E5 >>> 0 ? A8 + 1 | 0 : A8, e6 = A8, A8 = ft2(s5, I5, 36), f5 = y4, A8 = ft2(s5, I5, 30) ^ A8, E5 = y4 ^ f5, C5 = ft2(s5, I5, 25) ^ A8, A8 = ((g5 | B5) & I5 | g5 & B5) + (y4 ^ E5) | 0, e6 = ((f5 = C5 + ((o5 | u5) & s5 | o5 & u5) | 0) >>> 0 < C5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, f5 = e6 = (E5 = i4 + f5 | 0) >>> 0 < f5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 56 >> 2] = E5, a4[n9 + 60 >> 2] = e6, A8 = h5 + m5 | 0, v5 = A8 = (h5 = i4 + d5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 24 >> 2] = h5, a4[n9 + 28 >> 2] = A8, i4 = a4[(e6 = N6 = (A8 = 72 | k5) + r11 | 0) >> 2], e6 = Q5 + a4[e6 + 4 >> 2] | 0, e6 = (i4 = i4 + l5 | 0) >>> 0 < l5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (l5 = a4[(A8 = A8 + 34368 | 0) >> 2]) + i4 | 0, A8 = a4[A8 + 4 >> 2] + e6 | 0, A8 = (_5 ^ (w5 ^ _5) & v5) + (A8 = i4 >>> 0 < l5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (e6 = i4) + (i4 = S5 ^ (p5 ^ S5) & h5) | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(h5, v5, 50), l5 = y4, i4 = ft2(h5, v5, 46) ^ i4, l5 ^= y4, i4 = (m5 = ft2(h5, v5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ l5) + A8 | 0, e6 = i4 >>> 0 < m5 >>> 0 ? e6 + 1 | 0 : e6, A8 = ft2(E5, f5, 36), l5 = y4, A8 = ft2(E5, f5, 30) ^ A8, m5 = y4 ^ l5, C5 = ft2(E5, f5, 25) ^ A8, A8 = ((I5 | B5) & f5 | I5 & B5) + (y4 ^ m5) | 0, A8 = ((l5 = C5 + ((o5 | s5) & E5 | o5 & s5) | 0) >>> 0 < C5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, l5 = A8 = (m5 = i4 + l5 | 0) >>> 0 < l5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 48 >> 2] = m5, a4[n9 + 52 >> 2] = A8, e6 = e6 + g5 | 0, Q5 = e6 = (g5 = i4 + u5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 16 >> 2] = g5, a4[n9 + 20 >> 2] = e6, e6 = (e6 = S5) + (u5 = a4[(A8 = S5 = (i4 = 80 | k5) + r11 | 0) >> 2]) | 0, A8 = a4[A8 + 4 >> 2] + _5 | 0, A8 = e6 >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, i4 = (d5 = e6) + (u5 = a4[(e6 = i4 + 34368 | 0) >> 2]) | 0, e6 = a4[e6 + 4 >> 2] + A8 | 0, e6 = (w5 ^ (w5 ^ v5) & Q5) + (e6 = i4 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (A8 = i4) + (i4 = p5 ^ (h5 ^ p5) & g5) | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, i4 = ft2(g5, Q5, 50), u5 = y4, i4 = ft2(g5, Q5, 46) ^ i4, u5 ^= y4, i4 = (C5 = ft2(g5, Q5, 23) ^ i4) + A8 | 0, A8 = (y4 ^ u5) + e6 | 0, d5 = A8 = i4 >>> 0 < C5 >>> 0 ? A8 + 1 | 0 : A8, e6 = A8, A8 = ft2(m5, l5, 36), u5 = y4, A8 = ft2(m5, l5, 30) ^ A8, C5 = y4 ^ u5, _5 = ft2(m5, l5, 25) ^ A8, A8 = ((f5 | I5) & l5 | f5 & I5) + (y4 ^ C5) | 0, e6 = ((u5 = _5 + ((s5 | E5) & m5 | s5 & E5) | 0) >>> 0 < _5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, u5 = e6 = (C5 = i4 + u5 | 0) >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 40 >> 2] = C5, a4[n9 + 44 >> 2] = e6, A8 = d5 + B5 | 0, B5 = A8 = (d5 = i4 + o5 | 0) >>> 0 < o5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 8 >> 2] = d5, a4[n9 + 12 >> 2] = A8, A8 = 34368 + (e6 = 88 | k5) | 0, o5 = a4[(e6 = D5 = e6 + r11 | 0) >> 2], i4 = a4[A8 >> 2] + o5 | 0, e6 = a4[A8 + 4 >> 2] + a4[e6 + 4 >> 2] | 0, A8 = w5 + (i4 >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = (v5 ^ (v5 ^ Q5) & B5) + (A8 = (e6 = i4 + p5 | 0) >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (i4 = h5 ^ (h5 ^ g5) & d5) + e6 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(d5, B5, 50), o5 = y4, i4 = ft2(d5, B5, 46) ^ i4, o5 ^= y4, i4 = (p5 = ft2(d5, B5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ o5) + A8 | 0, e6 = i4 >>> 0 < p5 >>> 0 ? e6 + 1 | 0 : e6, A8 = ft2(C5, u5, 36), o5 = y4, A8 = ft2(C5, u5, 30) ^ A8, p5 = y4 ^ o5, _5 = ft2(C5, u5, 25) ^ A8, A8 = ((f5 | l5) & u5 | f5 & l5) + (y4 ^ p5) | 0, A8 = ((o5 = _5 + ((m5 | E5) & C5 | m5 & E5) | 0) >>> 0 < _5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, p5 = A8 = (p5 = o5) >>> 0 > (o5 = i4 + o5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 32 >> 2] = o5, a4[n9 + 36 >> 2] = A8, e6 = e6 + I5 | 0, I5 = e6 = (A8 = s5) >>> 0 > (s5 = i4 + s5 | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[n9 >> 2] = s5, a4[n9 + 4 >> 2] = e6, A8 = 34368 + (e6 = 96 | k5) | 0, _5 = a4[(e6 = H5 = e6 + r11 | 0) >> 2], i4 = a4[A8 >> 2] + _5 | 0, A8 = a4[A8 + 4 >> 2] + a4[e6 + 4 >> 2] | 0, e6 = v5 + (i4 >>> 0 < _5 >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (A8 = i4 + h5 | 0) >>> 0 < h5 >>> 0 ? e6 + 1 | 0 : e6, i4 = (h5 = g5 ^ (g5 ^ d5) & s5) + A8 | 0, A8 = (Q5 ^ (B5 ^ Q5) & I5) + e6 | 0, A8 = i4 >>> 0 < h5 >>> 0 ? A8 + 1 | 0 : A8, e6 = ft2(s5, I5, 50), h5 = y4, e6 = ft2(s5, I5, 46) ^ e6, h5 ^= y4, v5 = i4, i4 = ft2(s5, I5, 23) ^ e6, A8 = (y4 ^ h5) + A8 | 0, w5 = A8 = (e6 = v5 + i4 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = e6, e6 = ft2(o5, p5, 36), h5 = y4, e6 = ft2(o5, p5, 30) ^ e6, _5 = y4 ^ h5, v5 = ft2(o5, p5, 25) ^ e6, e6 = ((u5 | l5) & p5 | u5 & l5) + (y4 ^ _5) | 0, A8 = ((h5 = v5 + ((m5 | C5) & o5 | m5 & C5) | 0) >>> 0 < v5 >>> 0 ? e6 + 1 | 0 : e6) + A8 | 0, h5 = A8 = (_5 = i4 + h5 | 0) >>> 0 < h5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 24 >> 2] = _5, a4[n9 + 28 >> 2] = A8, A8 = f5 + w5 | 0, f5 = A8 = (E5 = i4 + E5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 56 >> 2] = E5, a4[n9 + 60 >> 2] = A8, A8 = 34368 + (e6 = 104 | k5) | 0, w5 = a4[(e6 = O5 = e6 + r11 | 0) >> 2], i4 = a4[A8 >> 2] + w5 | 0, e6 = a4[A8 + 4 >> 2] + a4[e6 + 4 >> 2] | 0, A8 = Q5 + (i4 >>> 0 < w5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = (e6 = i4 + g5 | 0) >>> 0 < g5 >>> 0 ? A8 + 1 | 0 : A8, i4 = (g5 = d5 ^ (s5 ^ d5) & E5) + e6 | 0, e6 = (B5 ^ (I5 ^ B5) & f5) + A8 | 0, e6 = i4 >>> 0 < g5 >>> 0 ? e6 + 1 | 0 : e6, A8 = ft2(E5, f5, 50), g5 = y4, A8 = ft2(E5, f5, 46) ^ A8, g5 ^= y4, w5 = ft2(E5, f5, 23) ^ A8, A8 = (y4 ^ g5) + e6 | 0, v5 = A8 = (i4 = w5 + i4 | 0) >>> 0 < w5 >>> 0 ? A8 + 1 | 0 : A8, e6 = A8, A8 = ft2(_5, h5, 36), g5 = y4, A8 = ft2(_5, h5, 30) ^ A8, w5 = y4 ^ g5, Q5 = ft2(_5, h5, 25) ^ A8, A8 = ((u5 | p5) & h5 | u5 & p5) + (y4 ^ w5) | 0, e6 = ((g5 = Q5 + ((o5 | C5) & _5 | o5 & C5) | 0) >>> 0 < Q5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, g5 = e6 = (w5 = i4 + g5 | 0) >>> 0 < g5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 16 >> 2] = w5, a4[n9 + 20 >> 2] = e6, e6 = l5 + v5 | 0, l5 = e6 = (m5 = i4 + m5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 + 48 >> 2] = m5, a4[n9 + 52 >> 2] = e6, A8 = 34368 + (e6 = 112 | k5) | 0, v5 = a4[(i4 = Q5 = e6 + r11 | 0) >> 2], e6 = a4[A8 >> 2] + v5 | 0, A8 = a4[A8 + 4 >> 2] + a4[i4 + 4 >> 2] | 0, A8 = B5 + (e6 >>> 0 < v5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (I5 ^ (f5 ^ I5) & l5) + (A8 = (e6 = e6 + d5 | 0) >>> 0 < d5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (e6 = (i4 = s5 ^ (s5 ^ E5) & m5) + e6 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = ft2(m5, l5, 50), d5 = y4, i4 = ft2(m5, l5, 46) ^ i4, d5 ^= y4, i4 = (B5 = ft2(m5, l5, 23) ^ i4) + e6 | 0, e6 = (y4 ^ d5) + A8 | 0, v5 = e6 = i4 >>> 0 < B5 >>> 0 ? e6 + 1 | 0 : e6, A8 = e6, e6 = ft2(w5, g5, 36), d5 = y4, e6 = ft2(w5, g5, 30) ^ e6, B5 = y4 ^ d5, L5 = ft2(w5, g5, 25) ^ e6, e6 = ((h5 | p5) & g5 | h5 & p5) + (y4 ^ B5) | 0, A8 = ((d5 = L5 + ((o5 | _5) & w5 | o5 & _5) | 0) >>> 0 < L5 >>> 0 ? e6 + 1 | 0 : e6) + A8 | 0, d5 = A8 = (B5 = i4 + d5 | 0) >>> 0 < d5 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 8 >> 2] = B5, a4[n9 + 12 >> 2] = A8, A8 = u5 + v5 | 0, i4 = A8 = (u5 = i4 + C5 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 40 >> 2] = u5, a4[n9 + 44 >> 2] = A8, A8 = 34368 + (e6 = 120 | k5) | 0, k5 = a4[(e6 = C5 = e6 + r11 | 0) >> 2], v5 = a4[A8 >> 2] + k5 | 0, A8 = a4[A8 + 4 >> 2] + a4[e6 + 4 >> 2] | 0, e6 = I5 + (v5 >>> 0 < k5 >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (f5 ^ (f5 ^ l5) & i4) + (e6 = (A8 = s5 + v5 | 0) >>> 0 < s5 >>> 0 ? e6 + 1 | 0 : e6) | 0, e6 = (A8 = (s5 = E5 ^ (m5 ^ E5) & u5) + A8 | 0) >>> 0 < s5 >>> 0 ? e6 + 1 | 0 : e6, s5 = ft2(u5, i4, 50), f5 = y4, s5 = ft2(u5, i4, 46) ^ s5, f5 ^= y4, i4 = (s5 = ft2(u5, i4, 23) ^ s5) + A8 | 0, A8 = (y4 ^ f5) + e6 | 0, A8 = i4 >>> 0 < s5 >>> 0 ? A8 + 1 | 0 : A8, s5 = i4, f5 = A8, e6 = A8, A8 = ft2(B5, d5, 36), u5 = y4, A8 = ft2(B5, d5, 30) ^ A8, l5 = y4 ^ u5, I5 = ft2(B5, d5, 25) ^ A8, A8 = ((h5 | g5) & d5 | h5 & g5) + (y4 ^ l5) | 0, e6 = ((u5 = I5 + ((w5 | _5) & B5 | w5 & _5) | 0) >>> 0 < I5 >>> 0 ? A8 + 1 | 0 : A8) + e6 | 0, e6 = (i4 = i4 + u5 | 0) >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, a4[n9 >> 2] = i4, a4[n9 + 4 >> 2] = e6, A8 = f5 + p5 | 0, A8 = (l5 = o5) >>> 0 > (o5 = o5 + s5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[n9 + 32 >> 2] = o5, a4[n9 + 36 >> 2] = A8, 64 != (0 | Y5); )
                                g5 = ((Y5 = Y5 + 16 | 0) << 3) + r11 | 0, s5 = a4[b5 >> 2], h5 = a4[b5 + 4 >> 2], L5 = a4[N6 >> 2], f5 = e6 = a4[N6 + 4 >> 2], A8 = e6, i4 = e6 = a4[Q5 + 4 >> 2], e6 = ft2(_5 = a4[Q5 >> 2], e6, 45), o5 = y4, l5 = ((63 & i4) << 26 | _5 >>> 6) ^ (e6 = ft2(_5, i4, 3) ^ e6), e6 = (i4 >>> 6 ^ (u5 = y4 ^ o5)) + A8 | 0, A8 = ((o5 = l5 + L5 | 0) >>> 0 < l5 >>> 0 ? e6 + 1 | 0 : e6) + h5 | 0, A8 = (e6 = o5 + s5 | 0) >>> 0 < o5 >>> 0 ? A8 + 1 | 0 : A8, s5 = o5 = a4[R5 + 4 >> 2], o5 = ft2(h5 = a4[R5 >> 2], o5, 63), u5 = y4, o5 = ((127 & s5) << 25 | h5 >>> 7) ^ ft2(h5, s5, 56) ^ o5, A8 = (y4 ^ u5 ^ s5 >>> 7) + A8 | 0, o5 = A8 = o5 >>> 0 > (w5 = o5 + e6 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[g5 >> 2] = w5, a4[g5 + 4 >> 2] = A8, h5 = (Q5 = a4[S5 >> 2]) + h5 | 0, e6 = (g5 = a4[S5 + 4 >> 2]) + s5 | 0, A8 = h5 >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6, s5 = e6 = a4[C5 + 4 >> 2], e6 = ft2(v5 = a4[C5 >> 2], e6, 45), u5 = y4, l5 = h5, h5 = ((63 & s5) << 26 | v5 >>> 6) ^ ft2(v5, s5, 3) ^ e6, A8 = (y4 ^ u5 ^ s5 >>> 6) + A8 | 0, h5 = h5 >>> 0 > (l5 = l5 + h5 | 0) >>> 0 ? A8 + 1 | 0 : A8, A8 = ft2(u5 = a4[x5 >> 2], e6 = a4[x5 + 4 >> 2], 63), I5 = y4, d5 = l5, l5 = ((127 & e6) << 25 | u5 >>> 7) ^ ft2(u5, e6, 56) ^ A8, A8 = (y4 ^ I5 ^ e6 >>> 7) + h5 | 0, h5 = A8 = l5 >>> 0 > (B5 = d5 + l5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 136 >> 2] = B5, a4[b5 + 140 >> 2] = A8, A8 = (S5 = a4[D5 >> 2]) + u5 | 0, e6 = (u5 = a4[D5 + 4 >> 2]) + e6 | 0, l5 = ft2(w5, o5, 45), I5 = y4, l5 = (p5 = ((63 & o5) << 26 | w5 >>> 6) ^ ft2(w5, o5, 3) ^ l5) + A8 | 0, A8 = (y4 ^ I5 ^ o5 >>> 6) + (A8 >>> 0 < S5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = l5 >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8, I5 = e6 = a4[U5 + 4 >> 2], e6 = ft2(p5 = a4[U5 >> 2], e6, 63), E5 = y4, d5 = l5, l5 = ((127 & I5) << 25 | p5 >>> 7) ^ ft2(p5, I5, 56) ^ e6, A8 = (y4 ^ E5 ^ I5 >>> 7) + A8 | 0, l5 = A8 = l5 >>> 0 > (k5 = d5 + l5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 144 >> 2] = k5, a4[b5 + 148 >> 2] = A8, p5 = (R5 = a4[H5 >> 2]) + p5 | 0, e6 = (e6 = I5) + (I5 = a4[H5 + 4 >> 2]) | 0, A8 = p5 >>> 0 < R5 >>> 0 ? e6 + 1 | 0 : e6, e6 = ft2(B5, h5, 45), E5 = y4, m5 = ((63 & h5) << 26 | B5 >>> 6) ^ ft2(B5, h5, 3) ^ e6, A8 = (y4 ^ E5 ^ h5 >>> 6) + A8 | 0, A8 = (p5 = m5 + p5 | 0) >>> 0 < m5 >>> 0 ? A8 + 1 | 0 : A8, E5 = e6 = a4[T3 + 4 >> 2], e6 = ft2(m5 = a4[T3 >> 2], e6, 63), C5 = y4, d5 = p5, p5 = ((127 & E5) << 25 | m5 >>> 7) ^ ft2(m5, E5, 56) ^ e6, A8 = (y4 ^ C5 ^ E5 >>> 7) + A8 | 0, p5 = A8 = p5 >>> 0 > (x5 = d5 + p5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 152 >> 2] = x5, a4[b5 + 156 >> 2] = A8, e6 = (U5 = a4[O5 >> 2]) + m5 | 0, A8 = (A8 = E5) + (E5 = a4[O5 + 4 >> 2]) | 0, m5 = ft2(k5, l5, 45), C5 = y4, m5 = ((63 & l5) << 26 | k5 >>> 6) ^ ft2(k5, l5, 3) ^ m5, A8 = (y4 ^ C5 ^ l5 >>> 6) + (e6 >>> 0 < U5 >>> 0 ? A8 + 1 | 0 : A8) | 0, m5 = (d5 = m5 + e6 | 0) >>> 0 < m5 >>> 0 ? A8 + 1 | 0 : A8, A8 = ft2(C5 = a4[F5 >> 2], e6 = a4[F5 + 4 >> 2], 63), T3 = y4, D5 = d5, d5 = ((127 & e6) << 25 | C5 >>> 7) ^ (A8 = ft2(C5, e6, 56) ^ A8), A8 = (e6 >>> 7 ^ (F5 = y4 ^ T3)) + m5 | 0, m5 = A8 = d5 >>> 0 > (T3 = D5 + d5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 160 >> 2] = T3, a4[b5 + 164 >> 2] = A8, e6 = e6 + i4 | 0, e6 = (A8 = C5 + _5 | 0) >>> 0 < C5 >>> 0 ? e6 + 1 | 0 : e6, C5 = ft2(x5, p5, 45), d5 = y4, C5 = (F5 = ((63 & p5) << 26 | x5 >>> 6) ^ ft2(x5, p5, 3) ^ C5) + A8 | 0, A8 = (y4 ^ d5 ^ p5 >>> 6) + e6 | 0, A8 = C5 >>> 0 < F5 >>> 0 ? A8 + 1 | 0 : A8, d5 = a4[M5 >> 2], M5 = e6 = a4[M5 + 4 >> 2], e6 = ft2(d5, e6, 63), F5 = y4, e6 = ft2(d5, M5, 56) ^ e6, D5 = C5, A8 = (M5 >>> 7 ^ (N6 = y4 ^ F5)) + A8 | 0, C5 = A8 = (C5 = ((127 & M5) << 25 | d5 >>> 7) ^ e6) >>> 0 > (F5 = D5 + C5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 168 >> 2] = F5, a4[b5 + 172 >> 2] = A8, e6 = s5 + M5 | 0, e6 = (A8 = d5 + v5 | 0) >>> 0 < d5 >>> 0 ? e6 + 1 | 0 : e6, D5 = d5 = a4[P5 + 4 >> 2], d5 = ft2(N6 = a4[P5 >> 2], d5, 63), M5 = y4, d5 = (P5 = ((127 & D5) << 25 | N6 >>> 7) ^ ft2(N6, D5, 56) ^ d5) + A8 | 0, A8 = (y4 ^ M5 ^ D5 >>> 7) + e6 | 0, e6 = d5 >>> 0 < P5 >>> 0 ? A8 + 1 | 0 : A8, A8 = ft2(T3, m5, 45), M5 = y4, A8 = ft2(T3, m5, 3) ^ A8, P5 = y4 ^ M5, M5 = d5, e6 = (m5 >>> 6 ^ P5) + e6 | 0, d5 = e6 = (d5 = ((63 & m5) << 26 | T3 >>> 6) ^ A8) >>> 0 > (M5 = M5 + d5 | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[b5 + 176 >> 2] = M5, a4[b5 + 180 >> 2] = e6, H5 = a4[G5 >> 2], G5 = e6 = a4[G5 + 4 >> 2], P5 = e6, e6 = ft2(L5, f5, 63), A8 = y4, O5 = ((127 & f5) << 25 | L5 >>> 7) ^ ft2(L5, f5, 56) ^ e6, e6 = (y4 ^ A8 ^ f5 >>> 7) + h5 | 0, A8 = ((B5 = O5 + B5 | 0) >>> 0 < O5 >>> 0 ? e6 + 1 | 0 : e6) + P5 | 0, A8 = (e6 = B5 + H5 | 0) >>> 0 < B5 >>> 0 ? A8 + 1 | 0 : A8, h5 = ft2(M5, d5, 45), B5 = y4, P5 = (h5 = ((63 & d5) << 26 | M5 >>> 6) ^ ft2(M5, d5, 3) ^ h5) + e6 | 0, e6 = (y4 ^ B5 ^ d5 >>> 6) + A8 | 0, h5 = e6 = h5 >>> 0 > P5 >>> 0 ? e6 + 1 | 0 : e6, a4[b5 + 192 >> 2] = P5, a4[b5 + 196 >> 2] = e6, A8 = o5 + D5 | 0, A8 = (e6 = w5 + N6 | 0) >>> 0 < N6 >>> 0 ? A8 + 1 | 0 : A8, B5 = ft2(H5, G5, 63), N6 = y4, D5 = ((127 & G5) << 25 | H5 >>> 7) ^ ft2(H5, G5, 56) ^ B5, A8 = (y4 ^ N6 ^ G5 >>> 7) + A8 | 0, e6 = (B5 = D5 + e6 | 0) >>> 0 < D5 >>> 0 ? A8 + 1 | 0 : A8, A8 = ft2(F5, C5, 45), N6 = y4, A8 = ft2(F5, C5, 3) ^ A8, G5 = B5, e6 = (C5 >>> 6 ^ (D5 = y4 ^ N6)) + e6 | 0, B5 = e6 = (B5 = ((63 & C5) << 26 | F5 >>> 6) ^ A8) >>> 0 > (N6 = G5 + B5 | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[b5 + 184 >> 2] = N6, a4[b5 + 188 >> 2] = e6, e6 = ft2(S5, u5, 63), A8 = y4, e6 = ((127 & u5) << 25 | S5 >>> 7) ^ ft2(S5, u5, 56) ^ e6, A8 = (y4 ^ A8 ^ u5 >>> 7) + g5 | 0, e6 = p5 + (e6 >>> 0 > (D5 = e6 + Q5 | 0) >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (A8 = x5 + D5 | 0) >>> 0 < x5 >>> 0 ? e6 + 1 | 0 : e6, p5 = ft2(P5, h5, 45), x5 = y4, p5 = ft2(P5, h5, 3) ^ p5, D5 = y4 ^ x5, x5 = (p5 ^= (63 & h5) << 26 | P5 >>> 6) + A8 | 0, A8 = (h5 >>> 6 ^ D5) + e6 | 0, p5 = A8 = p5 >>> 0 > x5 >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 208 >> 2] = x5, a4[b5 + 212 >> 2] = A8, e6 = ft2(Q5, g5, 63), A8 = y4, D5 = ft2(Q5, g5, 56) ^ e6, A8 = ((e6 = g5 >>> 7 | 0) ^ y4 ^ A8) + f5 | 0, e6 = l5 + ((g5 = (Q5 = D5 ^ ((127 & g5) << 25 | Q5 >>> 7)) + L5 | 0) >>> 0 < Q5 >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (A8 = g5 + k5 | 0) >>> 0 < k5 >>> 0 ? e6 + 1 | 0 : e6, f5 = ft2(N6, B5, 45), g5 = y4, l5 = (f5 = ((63 & B5) << 26 | N6 >>> 6) ^ ft2(N6, B5, 3) ^ f5) + A8 | 0, A8 = (y4 ^ g5 ^ B5 >>> 6) + e6 | 0, f5 = A8 = f5 >>> 0 > l5 >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 200 >> 2] = l5, a4[b5 + 204 >> 2] = A8, e6 = ft2(U5, E5, 63), A8 = y4, Q5 = ((127 & E5) << 25 | U5 >>> 7) ^ ft2(U5, E5, 56) ^ e6, e6 = (y4 ^ A8 ^ E5 >>> 7) + I5 | 0, A8 = C5 + ((g5 = Q5 + R5 | 0) >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = (e6 = g5 + F5 | 0) >>> 0 < F5 >>> 0 ? A8 + 1 | 0 : A8, g5 = ft2(x5, p5, 45), C5 = y4, Q5 = e6, e6 = p5 >>> 6 | 0, g5 = ((63 & p5) << 26 | x5 >>> 6) ^ ft2(x5, p5, 3) ^ g5, A8 = (e6 ^ y4 ^ C5) + A8 | 0, g5 = A8 = g5 >>> 0 > (p5 = Q5 + g5 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 224 >> 2] = p5, a4[b5 + 228 >> 2] = A8, e6 = ft2(R5, I5, 63), A8 = y4, e6 = ft2(R5, I5, 56) ^ e6, C5 = y4 ^ A8, Q5 = ((127 & I5) << 25 | R5 >>> 7) ^ e6, e6 = ((A8 = I5 >>> 7 | 0) ^ C5) + u5 | 0, A8 = m5 + ((I5 = Q5 + S5 | 0) >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = (e6 = I5 + T3 | 0) >>> 0 < T3 >>> 0 ? A8 + 1 | 0 : A8, u5 = ft2(l5, f5, 45), I5 = y4, C5 = e6, e6 = f5 >>> 6 | 0, f5 = ((63 & f5) << 26 | l5 >>> 6) ^ ft2(l5, f5, 3) ^ u5, e6 = (e6 ^ y4 ^ I5) + A8 | 0, f5 = e6 = (u5 = C5 + f5 | 0) >>> 0 < f5 >>> 0 ? e6 + 1 | 0 : e6, a4[b5 + 216 >> 2] = u5, a4[b5 + 220 >> 2] = e6, e6 = ft2(v5, s5, 63), A8 = y4, I5 = ((127 & s5) << 25 | v5 >>> 7) ^ ft2(v5, s5, 56) ^ e6, A8 = (y4 ^ A8 ^ s5 >>> 7) + i4 | 0, A8 = B5 + ((e6 = I5 + _5 | 0) >>> 0 < I5 >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (l5 = e6 + N6 | 0) >>> 0 < N6 >>> 0 ? A8 + 1 | 0 : A8, A8 = ft2(p5, g5, 45), I5 = y4, C5 = l5, l5 = ft2(p5, g5, 3) ^ A8, A8 = g5 >>> 6 | 0, g5 = C5 + (l5 ^= (63 & g5) << 26 | p5 >>> 6) | 0, e6 = (A8 ^ y4 ^ I5) + e6 | 0, a4[b5 + 240 >> 2] = g5, a4[b5 + 244 >> 2] = g5 >>> 0 < l5 >>> 0 ? e6 + 1 | 0 : e6, e6 = ft2(_5, i4, 63), A8 = y4, e6 = ft2(_5, i4, 56) ^ e6, g5 = y4 ^ A8, A8 = ((A8 = i4 >>> 7 | 0) ^ g5) + E5 | 0, e6 = d5 + ((e6 ^= (127 & i4) << 25 | _5 >>> 7) >>> 0 > (i4 = e6 + U5 | 0) >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (A8 = i4 + M5 | 0) >>> 0 < M5 >>> 0 ? e6 + 1 | 0 : e6, i4 = ft2(u5, f5, 45), g5 = y4, l5 = A8, A8 = f5 >>> 6 | 0, i4 = ((63 & f5) << 26 | u5 >>> 6) ^ ft2(u5, f5, 3) ^ i4, A8 = (A8 ^ y4 ^ g5) + e6 | 0, i4 = A8 = i4 >>> 0 > (f5 = l5 + i4 | 0) >>> 0 ? A8 + 1 | 0 : A8, a4[b5 + 232 >> 2] = f5, a4[b5 + 236 >> 2] = A8, e6 = ft2(w5, o5, 63), A8 = y4, l5 = ft2(w5, o5, 56) ^ e6, A8 = ((e6 = o5 >>> 7 | 0) ^ y4 ^ A8) + s5 | 0, e6 = h5 + ((o5 = (g5 = l5 ^ ((127 & o5) << 25 | w5 >>> 7)) + v5 | 0) >>> 0 < g5 >>> 0 ? A8 + 1 | 0 : A8) | 0, e6 = (A8 = o5 + P5 | 0) >>> 0 < P5 >>> 0 ? e6 + 1 | 0 : e6, o5 = ft2(f5, i4, 45), s5 = y4, l5 = A8, A8 = i4 >>> 6 | 0, i4 = l5 + (o5 = ((63 & i4) << 26 | f5 >>> 6) ^ ft2(f5, i4, 3) ^ o5) | 0, A8 = (A8 ^ y4 ^ s5) + e6 | 0, a4[b5 + 248 >> 2] = i4, a4[b5 + 252 >> 2] = i4 >>> 0 < o5 >>> 0 ? A8 + 1 | 0 : A8;
                              e6 = e6 + a4[t7 + 4 >> 2] | 0, e6 = (r11 = i4 + a4[t7 >> 2] | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, a4[t7 >> 2] = r11, a4[t7 + 4 >> 2] = e6, A8 = a4[t7 + 12 >> 2] + a4[n9 + 12 >> 2] | 0, e6 = (r11 = a4[n9 + 8 >> 2]) + a4[t7 + 8 >> 2] | 0, a4[t7 + 8 >> 2] = e6, a4[t7 + 12 >> 2] = e6 >>> 0 < r11 >>> 0 ? A8 + 1 | 0 : A8, A8 = a4[t7 + 20 >> 2] + a4[n9 + 20 >> 2] | 0, e6 = (r11 = a4[n9 + 16 >> 2]) + a4[t7 + 16 >> 2] | 0, a4[t7 + 16 >> 2] = e6, a4[t7 + 20 >> 2] = e6 >>> 0 < r11 >>> 0 ? A8 + 1 | 0 : A8, e6 = a4[t7 + 28 >> 2] + a4[n9 + 28 >> 2] | 0, r11 = (A8 = a4[n9 + 24 >> 2]) + a4[t7 + 24 >> 2] | 0, a4[t7 + 24 >> 2] = r11, a4[t7 + 28 >> 2] = r11 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = a4[t7 + 36 >> 2] + a4[n9 + 36 >> 2] | 0, e6 = (r11 = a4[n9 + 32 >> 2]) + a4[t7 + 32 >> 2] | 0, a4[t7 + 32 >> 2] = e6, a4[t7 + 36 >> 2] = e6 >>> 0 < r11 >>> 0 ? A8 + 1 | 0 : A8, e6 = a4[t7 + 44 >> 2] + a4[n9 + 44 >> 2] | 0, r11 = (A8 = a4[n9 + 40 >> 2]) + a4[t7 + 40 >> 2] | 0, a4[t7 + 40 >> 2] = r11, a4[t7 + 44 >> 2] = r11 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = a4[t7 + 52 >> 2] + a4[n9 + 52 >> 2] | 0, e6 = (r11 = a4[n9 + 48 >> 2]) + a4[t7 + 48 >> 2] | 0, a4[t7 + 48 >> 2] = e6, a4[t7 + 52 >> 2] = e6 >>> 0 < r11 >>> 0 ? A8 + 1 | 0 : A8, A8 = a4[t7 + 60 >> 2] + a4[n9 + 60 >> 2] | 0, e6 = (r11 = a4[n9 + 56 >> 2]) + a4[t7 + 56 >> 2] | 0, a4[t7 + 56 >> 2] = e6, a4[t7 + 60 >> 2] = e6 >>> 0 < r11 >>> 0 ? A8 + 1 | 0 : A8;
                            }
                            function E4(t7) {
                              var e6, r11, n9, A8, i4, o5, a5, h5, g5, u5, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0;
                              d5 = (_5 = c4[t7 + 44 | 0] | c4[t7 + 45 | 0] << 8 | c4[t7 + 46 | 0] << 16 | c4[t7 + 47 | 0] << 24) >>> 5 & 2097151, p5 = Bt2(P5 = (c4[t7 + 60 | 0] | c4[t7 + 61 | 0] << 8 | c4[t7 + 62 | 0] << 16 | c4[t7 + 63 | 0] << 24) >>> 3 | 0, 0, -683901, -1), f5 = (l5 = c4[t7 + 44 | 0]) << 16 & 2031616 | c4[t7 + 42 | 0] | c4[t7 + 43 | 0] << 8, l5 = y4, B5 = l5 = f5 >>> 0 > (E5 = p5 + f5 | 0) >>> 0 ? l5 + 1 | 0 : l5, D5 = l5 = l5 - ((E5 >>> 0 < 4293918720) - 1 | 0) | 0, p5 = l5 >> 21, l5 = (f5 = d5) + (d5 = (2097151 & l5) << 11 | (C5 = E5 - -1048576 | 0) >>> 21) | 0, f5 = p5, Y5 = f5 = l5 >>> 0 < d5 >>> 0 ? f5 + 1 | 0 : f5, K5 = l5, M5 = Bt2(l5, f5, -683901, -1), w5 = y4, m5 = Bt2(e6 = (c4[t7 + 49 | 0] | c4[t7 + 50 | 0] << 8 | c4[t7 + 51 | 0] << 16 | c4[t7 + 52 | 0] << 24) >>> 7 & 2097151, 0, -997805, -1), p5 = (l5 = c4[t7 + 27 | 0]) >>> 24 | 0, d5 = l5 << 8 | (Q5 = c4[t7 + 23 | 0] | c4[t7 + 24 | 0] << 8 | c4[t7 + 25 | 0] << 16 | c4[t7 + 26 | 0] << 24) >>> 24, f5 = (l5 = c4[t7 + 28 | 0]) >>> 16 | 0, f5 = 2097151 & ((3 & (f5 |= p5)) << 30 | (l5 = d5 | l5 << 16) >>> 2), l5 = y4, l5 = f5 >>> 0 > (p5 = f5 + m5 | 0) >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(H5 = (b5 = c4[t7 + 52 | 0] | c4[t7 + 53 | 0] << 8 | c4[t7 + 54 | 0] << 16 | c4[t7 + 55 | 0] << 24) >>> 4 & 2097151, 0, 654183, 0), l5 = y4 + l5 | 0, m5 = p5 = f5 + p5 | 0, p5 = f5 >>> 0 > p5 >>> 0 ? l5 + 1 | 0 : l5, I5 = (f5 = c4[t7 + 48 | 0]) << 8 | _5 >>> 24, f5 = l5 = f5 >>> 24 | 0, l5 = Bt2(r11 = 2097151 & ((3 & (_5 = (l5 = (d5 = c4[t7 + 49 | 0]) >>> 16 | 0) | f5)) << 30 | (f5 = (d5 <<= 16) | I5) >>> 2), 0, 136657, 0), p5 = y4 + p5 | 0, p5 = l5 >>> 0 > (f5 = l5 + m5 | 0) >>> 0 ? p5 + 1 | 0 : p5, d5 = (l5 = Bt2(n9 = (c4[t7 + 57 | 0] | c4[t7 + 58 | 0] << 8 | c4[t7 + 59 | 0] << 16 | c4[t7 + 60 | 0] << 24) >>> 6 & 2097151, 0, 666643, 0)) + f5 | 0, f5 = y4 + p5 | 0, m5 = d5, p5 = l5 >>> 0 > d5 >>> 0 ? f5 + 1 | 0 : f5, f5 = (l5 = c4[t7 + 56 | 0]) >>> 24 | 0, I5 = l5 << 8 | b5 >>> 24, f5 = Bt2(A8 = 2097151 & ((1 & (b5 = (l5 = (d5 = c4[t7 + 57 | 0]) >>> 16 | 0) | f5)) << 31 | (f5 = (d5 <<= 16) | I5) >>> 1), 0, 470296, 0), l5 = y4 + p5 | 0, f5 = (l5 = (p5 = d5 = f5 + m5 | 0) >>> 0 < f5 >>> 0 ? l5 + 1 | 0 : l5) + w5 | 0, f5 = p5 >>> 0 > (d5 = p5 + M5 | 0) >>> 0 ? f5 + 1 | 0 : f5, S5 = p5 - -1048576 | 0, N6 = p5 = l5 - ((p5 >>> 0 < 4293918720) - 1 | 0) | 0, w5 = d5 - (l5 = -2097152 & S5) | 0, M5 = f5 - ((l5 >>> 0 > d5 >>> 0) + p5 | 0) | 0, f5 = Bt2(e6, 0, 654183, 0), l5 = y4, l5 = f5 >>> 0 > (p5 = f5 + (Q5 >>> 5 & 2097151) | 0) >>> 0 ? l5 + 1 | 0 : l5, d5 = (f5 = p5) + (p5 = Bt2(H5, 0, 470296, 0)) | 0, f5 = y4 + l5 | 0, f5 = p5 >>> 0 > d5 >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(r11, j5, -997805, -1), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + d5 | 0) >>> 0 ? f5 + 1 | 0 : f5, d5 = (l5 = p5) + (p5 = Bt2(A8, z4, 666643, 0)) | 0, l5 = y4 + f5 | 0, I5 = d5, d5 = p5 >>> 0 > d5 >>> 0 ? l5 + 1 | 0 : l5, m5 = (p5 = Bt2(e6, 0, 470296, 0)) + (l5 = (l5 = c4[t7 + 23 | 0]) << 16 & 2031616 | c4[t7 + 21 | 0] | c4[t7 + 22 | 0] << 8) | 0, p5 = y4, p5 = l5 >>> 0 > m5 >>> 0 ? p5 + 1 | 0 : p5, m5 = (f5 = Bt2(H5, 0, 666643, 0)) + m5 | 0, l5 = y4 + p5 | 0, p5 = Bt2(r11, j5, 654183, 0), f5 = y4 + (f5 >>> 0 > m5 >>> 0 ? l5 + 1 | 0 : l5) | 0, b5 = f5 = p5 >>> 0 > (Q5 = p5 + m5 | 0) >>> 0 ? f5 + 1 | 0 : f5, G5 = f5 = f5 - ((Q5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = (l5 = f5 >>> 21 | 0) + d5 | 0, p5 = l5 = (f5 = (2097151 & f5) << 11 | (m5 = Q5 - -1048576 | 0) >>> 21) >>> 0 > (I5 = f5 + I5 | 0) >>> 0 ? l5 + 1 | 0 : l5, v5 = f5 = l5 - ((I5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = w5, w5 = (2097151 & f5) << 11 | (d5 = I5 - -1048576 | 0) >>> 21, f5 = (f5 >> 21) + M5 | 0, _5 = w5 = (f5 = w5 >>> 0 > (k5 = l5 + w5 | 0) >>> 0 ? f5 + 1 | 0 : f5) - ((k5 >>> 0 < 4293918720) - 1 | 0) | 0, L5 = k5 - (l5 = -2097152 & (M5 = k5 - -1048576 | 0)) | 0, q4 = f5 - ((l5 >>> 0 > k5 >>> 0) + w5 | 0) | 0, l5 = Bt2(K5, Y5, 136657, 0), p5 = y4 + p5 | 0, p5 = l5 >>> 0 > (f5 = l5 + I5 | 0) >>> 0 ? p5 + 1 | 0 : p5, F5 = f5 - (l5 = -2097152 & d5) | 0, O5 = p5 - ((l5 >>> 0 > f5 >>> 0) + v5 | 0) | 0, k5 = E5 - (l5 = -2097152 & C5) | 0, D5 = B5 - ((l5 >>> 0 > E5 >>> 0) + D5 | 0) | 0, B5 = Bt2(P5, 0, 136657, 0), f5 = (l5 = c4[t7 + 40 | 0]) >>> 24 | 0, d5 = l5 << 8 | (C5 = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24) >>> 24, p5 = (l5 = c4[t7 + 41 | 0]) >>> 16 | 0, f5 = (p5 |= f5) >>> 3 | 0, p5 = (7 & p5) << 29 | (l5 = d5 | l5 << 16) >>> 3, l5 = f5 + y4 | 0, l5 = p5 >>> 0 > (d5 = p5 + B5 | 0) >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(n9, 0, -683901, -1), l5 = y4 + l5 | 0, l5 = f5 >>> 0 > (p5 = f5 + d5 | 0) >>> 0 ? l5 + 1 | 0 : l5, I5 = p5, f5 = Bt2(P5, 0, -997805, -1), p5 = y4, p5 = f5 >>> 0 > (d5 = f5 + (C5 >>> 6 & 2097151) | 0) >>> 0 ? p5 + 1 | 0 : p5, C5 = (f5 = d5) + (d5 = Bt2(n9, 0, 136657, 0)) | 0, f5 = y4 + p5 | 0, p5 = Bt2(A8, z4, -683901, -1), f5 = y4 + (d5 >>> 0 > C5 >>> 0 ? f5 + 1 | 0 : f5) | 0, w5 = f5 = p5 >>> 0 > (T3 = p5 + C5 | 0) >>> 0 ? f5 + 1 | 0 : f5, X3 = p5 = f5 - ((T3 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = l5 + (f5 = p5 >> 21) | 0, C5 = l5 = (p5 = (2097151 & p5) << 11 | (E5 = T3 - -1048576 | 0) >>> 21) >>> 0 > (v5 = p5 + I5 | 0) >>> 0 ? l5 + 1 | 0 : l5, R5 = l5 = l5 - ((v5 >>> 0 < 4293918720) - 1 | 0) | 0, f5 = (f5 = l5 >> 21) + D5 | 0, J5 = f5 = (l5 = (p5 = (2097151 & l5) << 11 | (I5 = v5 - -1048576 | 0) >>> 21) + k5 | 0) >>> 0 < p5 >>> 0 ? f5 + 1 | 0 : f5, U5 = l5, f5 = Bt2(l5, f5, -683901, -1), l5 = y4 + O5 | 0, x5 = p5 = f5 + F5 | 0, d5 = f5 >>> 0 > p5 >>> 0 ? l5 + 1 | 0 : l5, O5 = Q5 - (l5 = -2097152 & m5) | 0, D5 = b5 - ((4095 & G5) + (l5 >>> 0 > Q5 >>> 0) | 0) | 0, Q5 = Bt2(e6, 0, 666643, 0), l5 = (f5 = c4[t7 + 19 | 0]) >>> 24 | 0, m5 = f5 << 8 | (b5 = c4[t7 + 15 | 0] | c4[t7 + 16 | 0] << 8 | c4[t7 + 17 | 0] << 16 | c4[t7 + 18 | 0] << 24) >>> 24, p5 = l5, f5 = (7 & (p5 |= f5 = (l5 = c4[t7 + 20 | 0]) >>> 16 | 0)) << 29 | (f5 = (l5 <<= 16) | m5) >>> 3, p5 = y4 + (p5 >>> 3 | 0) | 0, p5 = f5 >>> 0 > (m5 = f5 + Q5 | 0) >>> 0 ? p5 + 1 | 0 : p5, l5 = Bt2(r11, j5, 470296, 0), f5 = y4 + p5 | 0, l5 = l5 >>> 0 > (m5 = l5 + m5 | 0) >>> 0 ? f5 + 1 | 0 : f5, p5 = Bt2(r11, j5, 666643, 0), f5 = y4, Q5 = f5 = p5 >>> 0 > (F5 = p5 + (b5 >>> 6 & 2097151) | 0) >>> 0 ? f5 + 1 | 0 : f5, V3 = p5 = f5 - ((F5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = l5 + (f5 = p5 >>> 21 | 0) | 0, b5 = l5 = (p5 = (2097151 & p5) << 11 | (B5 = F5 - -1048576 | 0) >>> 21) >>> 0 > (k5 = p5 + m5 | 0) >>> 0 ? l5 + 1 | 0 : l5, W3 = l5 = l5 - ((k5 >>> 0 < 4293918720) - 1 | 0) | 0, f5 = (f5 = l5 >>> 21 | 0) + D5 | 0, f5 = (l5 = (2097151 & l5) << 11 | (m5 = k5 - -1048576 | 0) >>> 21) >>> 0 > (p5 = l5 + O5 | 0) >>> 0 ? f5 + 1 | 0 : f5, D5 = (l5 = p5) + (p5 = Bt2(K5, Y5, -997805, -1)) | 0, l5 = y4 + f5 | 0, l5 = p5 >>> 0 > D5 >>> 0 ? l5 + 1 | 0 : l5, G5 = f5 = v5 - (p5 = -2097152 & I5) | 0, i4 = I5 = C5 - ((p5 >>> 0 > v5 >>> 0) + R5 | 0) | 0, p5 = Bt2(U5, J5, 136657, 0), l5 = y4 + l5 | 0, l5 = p5 >>> 0 > (C5 = p5 + D5 | 0) >>> 0 ? l5 + 1 | 0 : l5, p5 = Bt2(f5, I5, -683901, -1), f5 = y4 + l5 | 0, C5 = f5 = p5 >>> 0 > (D5 = p5 + C5 | 0) >>> 0 ? f5 + 1 | 0 : f5, R5 = l5 = f5 - ((D5 >>> 0 < 4293918720) - 1 | 0) | 0, f5 = (2097151 & l5) << 11 | (I5 = D5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + d5 | 0, x5 = f5 = (l5 = f5 >>> 0 > (v5 = f5 + x5 | 0) >>> 0 ? l5 + 1 | 0 : l5) - ((v5 >>> 0 < 4293918720) - 1 | 0) | 0, O5 = (2097151 & f5) << 11 | (d5 = v5 - -1048576 | 0) >>> 21, f5 = (f5 >> 21) + q4 | 0, a5 = L5 = O5 + L5 | 0, O5 = L5 >>> 0 < O5 >>> 0 ? f5 + 1 | 0 : f5, h5 = v5 - (f5 = -2097152 & d5) | 0, g5 = l5 - ((f5 >>> 0 > v5 >>> 0) + x5 | 0) | 0, L5 = D5 - (l5 = -2097152 & I5) | 0, q4 = C5 - ((l5 >>> 0 > D5 >>> 0) + R5 | 0) | 0, p5 = (l5 = Bt2(K5, Y5, 654183, 0)) + (k5 - (f5 = -2097152 & m5) | 0) | 0, f5 = y4 + (b5 - ((2147483647 & W3) + (f5 >>> 0 > k5 >>> 0) | 0) | 0) | 0, f5 = l5 >>> 0 > p5 >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(U5, J5, -997805, -1), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + p5 | 0) >>> 0 ? f5 + 1 | 0 : f5, d5 = (l5 = p5) + (p5 = Bt2(G5, i4, 136657, 0)) | 0, l5 = y4 + f5 | 0, x5 = d5, C5 = p5 >>> 0 > d5 >>> 0 ? l5 + 1 | 0 : l5, k5 = T3 - (l5 = -2097152 & E5) | 0, v5 = w5 - ((l5 >>> 0 > T3 >>> 0) + X3 | 0) | 0, b5 = Bt2(H5, 0, -683901, -1), l5 = (f5 = c4[t7 + 35 | 0]) >>> 24 | 0, d5 = f5 << 8 | (m5 = c4[t7 + 31 | 0] | c4[t7 + 32 | 0] << 8 | c4[t7 + 33 | 0] << 16 | c4[t7 + 34 | 0] << 24) >>> 24, p5 = l5, f5 = (l5 = c4[t7 + 36 | 0]) >>> 16 | 0, f5 |= p5, p5 = y4, p5 = (l5 = 2097151 & ((1 & f5) << 31 | (l5 = l5 << 16 | d5) >>> 1)) >>> 0 > (f5 = l5 + b5 | 0) >>> 0 ? p5 + 1 | 0 : p5, d5 = (l5 = Bt2(P5, 0, 654183, 0)) + f5 | 0, f5 = y4 + p5 | 0, f5 = l5 >>> 0 > d5 >>> 0 ? f5 + 1 | 0 : f5, p5 = Bt2(n9, 0, -997805, -1), l5 = y4 + f5 | 0, l5 = p5 >>> 0 > (d5 = p5 + d5 | 0) >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(A8, z4, 136657, 0), l5 = y4 + l5 | 0, I5 = p5 = f5 + d5 | 0, d5 = f5 >>> 0 > p5 >>> 0 ? l5 + 1 | 0 : l5, l5 = Bt2(e6, 0, -683901, -1), f5 = y4, f5 = l5 >>> 0 > (p5 = l5 + (m5 >>> 4 & 2097151) | 0) >>> 0 ? f5 + 1 | 0 : f5, m5 = (l5 = Bt2(H5, 0, 136657, 0)) + p5 | 0, p5 = y4 + f5 | 0, p5 = l5 >>> 0 > m5 >>> 0 ? p5 + 1 | 0 : p5, l5 = Bt2(P5, 0, 470296, 0), f5 = y4 + p5 | 0, f5 = l5 >>> 0 > (m5 = l5 + m5 | 0) >>> 0 ? f5 + 1 | 0 : f5, m5 = (p5 = Bt2(n9, 0, 654183, 0)) + m5 | 0, l5 = y4 + f5 | 0, f5 = Bt2(A8, z4, -997805, -1), l5 = y4 + (p5 >>> 0 > m5 >>> 0 ? l5 + 1 | 0 : l5) | 0, b5 = l5 = f5 >>> 0 > (w5 = f5 + m5 | 0) >>> 0 ? l5 + 1 | 0 : l5, u5 = f5 = l5 - ((w5 >>> 0 < 4293918720) - 1 | 0) | 0, p5 = (l5 = f5 >> 21) + d5 | 0, D5 = f5 = (p5 = (f5 = (2097151 & f5) << 11 | (m5 = w5 - -1048576 | 0) >>> 21) >>> 0 > (E5 = f5 + I5 | 0) >>> 0 ? p5 + 1 | 0 : p5) - ((E5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = (l5 = f5 >> 21) + v5 | 0, R5 = l5 = (f5 = (d5 = (2097151 & f5) << 11 | (I5 = E5 - -1048576 | 0) >>> 21) + k5 | 0) >>> 0 < d5 >>> 0 ? l5 + 1 | 0 : l5, d5 = x5, x5 = f5, l5 = Bt2(f5, l5, -683901, -1), f5 = y4 + C5 | 0, v5 = d5 = d5 + l5 | 0, d5 = l5 >>> 0 > d5 >>> 0 ? f5 + 1 | 0 : f5, C5 = (l5 = Bt2(K5, Y5, 470296, 0)) + (F5 - (f5 = -2097152 & B5) | 0) | 0, f5 = y4 + (Q5 - ((2047 & V3) + (f5 >>> 0 > F5 >>> 0) | 0) | 0) | 0, f5 = l5 >>> 0 > C5 >>> 0 ? f5 + 1 | 0 : f5, B5 = (l5 = C5) + (C5 = Bt2(U5, J5, 654183, 0)) | 0, l5 = y4 + f5 | 0, l5 = C5 >>> 0 > B5 >>> 0 ? l5 + 1 | 0 : l5, C5 = Bt2(G5, i4, -997805, -1), f5 = y4 + l5 | 0, f5 = C5 >>> 0 > (B5 = C5 + B5 | 0) >>> 0 ? f5 + 1 | 0 : f5, T3 = I5 = E5 - (l5 = -2097152 & I5) | 0, o5 = C5 = p5 - ((l5 >>> 0 > E5 >>> 0) + D5 | 0) | 0, p5 = Bt2(x5, R5, 136657, 0), l5 = y4 + f5 | 0, l5 = p5 >>> 0 > (B5 = p5 + B5 | 0) >>> 0 ? l5 + 1 | 0 : l5, p5 = Bt2(I5, C5, -683901, -1), f5 = y4 + l5 | 0, C5 = f5 = p5 >>> 0 > (Q5 = p5 + B5 | 0) >>> 0 ? f5 + 1 | 0 : f5, D5 = l5 = f5 - ((Q5 >>> 0 < 4293918720) - 1 | 0) | 0, f5 = (2097151 & l5) << 11 | (I5 = Q5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + d5 | 0, v5 = f5 = (l5 = f5 >>> 0 > (B5 = f5 + v5 | 0) >>> 0 ? l5 + 1 | 0 : l5) - ((B5 >>> 0 < 4293918720) - 1 | 0) | 0, E5 = (2097151 & f5) << 11 | (d5 = B5 - -1048576 | 0) >>> 21, f5 = (f5 >> 21) + q4 | 0, X3 = k5 = E5 + L5 | 0, k5 = E5 >>> 0 > k5 >>> 0 ? f5 + 1 | 0 : f5, V3 = B5 - (f5 = -2097152 & d5) | 0, W3 = l5 - ((f5 >>> 0 > B5 >>> 0) + v5 | 0) | 0, L5 = Q5 - (l5 = -2097152 & I5) | 0, q4 = C5 - ((l5 >>> 0 > Q5 >>> 0) + D5 | 0) | 0, C5 = Bt2(K5, Y5, 666643, 0), l5 = (f5 = c4[t7 + 14 | 0]) >>> 24 | 0, d5 = f5 << 8 | (D5 = c4[t7 + 10 | 0] | c4[t7 + 11 | 0] << 8 | c4[t7 + 12 | 0] << 16 | c4[t7 + 13 | 0] << 24) >>> 24, p5 = l5, f5 = (l5 = c4[t7 + 15 | 0]) >>> 16 | 0, f5 |= p5, p5 = y4, p5 = (l5 = 2097151 & ((1 & f5) << 31 | (l5 = l5 << 16 | d5) >>> 1)) >>> 0 > (f5 = l5 + C5 | 0) >>> 0 ? p5 + 1 | 0 : p5, d5 = (l5 = f5) + (f5 = Bt2(U5, J5, 470296, 0)) | 0, l5 = y4 + p5 | 0, l5 = f5 >>> 0 > d5 >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(G5, i4, 654183, 0), l5 = y4 + l5 | 0, l5 = f5 >>> 0 > (p5 = f5 + d5 | 0) >>> 0 ? l5 + 1 | 0 : l5, d5 = (f5 = p5) + (p5 = Bt2(x5, R5, -997805, -1)) | 0, f5 = y4 + l5 | 0, f5 = p5 >>> 0 > d5 >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(T3, o5, 136657, 0), f5 = y4 + f5 | 0, Q5 = p5 = l5 + d5 | 0, d5 = l5 >>> 0 > p5 >>> 0 ? f5 + 1 | 0 : f5, m5 = w5 - (l5 = -2097152 & m5) | 0, C5 = b5 - ((l5 >>> 0 > w5 >>> 0) + u5 | 0) | 0, p5 = Bt2(e6, 0, 136657, 0), l5 = y4, l5 = (f5 = (c4[t7 + 28 | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24) >>> 7 & 2097151) >>> 0 > (p5 = f5 + p5 | 0) >>> 0 ? l5 + 1 | 0 : l5, I5 = (f5 = p5) + (p5 = Bt2(H5, 0, -997805, -1)) | 0, f5 = y4 + l5 | 0, f5 = p5 >>> 0 > I5 >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(r11, j5, -683901, -1), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + I5 | 0) >>> 0 ? f5 + 1 | 0 : f5, I5 = (l5 = Bt2(P5, 0, 666643, 0)) + p5 | 0, p5 = y4 + f5 | 0, p5 = l5 >>> 0 > I5 >>> 0 ? p5 + 1 | 0 : p5, f5 = Bt2(n9, 0, 470296, 0), l5 = y4 + p5 | 0, l5 = f5 >>> 0 > (I5 = f5 + I5 | 0) >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(A8, z4, 654183, 0), l5 = y4 + l5 | 0, f5 = (N6 >> 21) + (f5 >>> 0 > (p5 = f5 + I5 | 0) >>> 0 ? l5 + 1 | 0 : l5) | 0, E5 = f5 = (I5 = (2097151 & N6) << 11 | S5 >>> 21) >>> 0 > (S5 = I5 + p5 | 0) >>> 0 ? f5 + 1 | 0 : f5, v5 = l5 = f5 - ((S5 >>> 0 < 4293918720) - 1 | 0) | 0, I5 = (2097151 & l5) << 11 | (B5 = S5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + C5 | 0, F5 = l5 = (f5 = I5 + m5 | 0) >>> 0 < I5 >>> 0 ? l5 + 1 | 0 : l5, N6 = f5, f5 = Bt2(f5, l5, -683901, -1), l5 = y4 + d5 | 0, I5 = p5 = f5 + Q5 | 0, d5 = f5 >>> 0 > p5 >>> 0 ? l5 + 1 | 0 : l5, l5 = Bt2(U5, J5, 666643, 0), f5 = y4, f5 = l5 >>> 0 > (p5 = l5 + (D5 >>> 4 & 2097151) | 0) >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(G5, i4, 470296, 0), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + p5 | 0) >>> 0 ? f5 + 1 | 0 : f5, C5 = (l5 = Bt2(x5, R5, 654183, 0)) + p5 | 0, p5 = y4 + f5 | 0, p5 = l5 >>> 0 > C5 >>> 0 ? p5 + 1 | 0 : p5, f5 = Bt2(T3, o5, -997805, -1), l5 = y4 + p5 | 0, l5 = f5 >>> 0 > (C5 = f5 + C5 | 0) >>> 0 ? l5 + 1 | 0 : l5, f5 = Bt2(N6, F5, 136657, 0), l5 = y4 + l5 | 0, b5 = l5 = f5 >>> 0 > (w5 = f5 + C5 | 0) >>> 0 ? l5 + 1 | 0 : l5, Y5 = f5 = l5 - ((w5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = I5, I5 = (2097151 & f5) << 11 | (m5 = w5 - -1048576 | 0) >>> 21, f5 = (f5 >> 21) + d5 | 0, U5 = d5 = (f5 = (p5 = l5 + I5 | 0) >>> 0 < I5 >>> 0 ? f5 + 1 | 0 : f5) - ((p5 >>> 0 < 4293918720) - 1 | 0) | 0, l5 = (l5 = d5 >> 21) + q4 | 0, K5 = I5 = (d5 = (2097151 & d5) << 11 | (C5 = p5 - -1048576 | 0) >>> 21) + L5 | 0, Q5 = d5 >>> 0 > I5 >>> 0 ? l5 + 1 | 0 : l5, I5 = p5, p5 = f5, d5 = (S5 - (f5 = -2097152 & B5) | 0) + (B5 = (2097151 & _5) << 11 | M5 >>> 21) | 0, f5 = (E5 - ((f5 >>> 0 > S5 >>> 0) + v5 | 0) | 0) + (_5 >> 21) | 0, D5 = f5 = d5 >>> 0 < B5 >>> 0 ? f5 + 1 | 0 : f5, H5 = f5 = f5 - ((d5 >>> 0 < 4293918720) - 1 | 0) | 0, M5 = l5 = f5 >> 21, l5 = Bt2(P5 = (2097151 & f5) << 11 | (v5 = d5 - -1048576 | 0) >>> 21, l5, -683901, -1), p5 = y4 + p5 | 0, p5 = l5 >>> 0 > (f5 = l5 + I5 | 0) >>> 0 ? p5 + 1 | 0 : p5, j5 = f5 - (l5 = -2097152 & C5) | 0, z4 = p5 - ((l5 >>> 0 > f5 >>> 0) + U5 | 0) | 0, l5 = Bt2(P5, M5, 136657, 0), f5 = b5 + y4 | 0, J5 = (p5 = l5 + w5 | 0) - (l5 = -2097152 & m5) | 0, U5 = (f5 = p5 >>> 0 < w5 >>> 0 ? f5 + 1 | 0 : f5) - ((l5 >>> 0 > p5 >>> 0) + Y5 | 0) | 0, f5 = Bt2(G5, i4, 666643, 0), p5 = y4, p5 = (l5 = (c4[t7 + 7 | 0] | c4[t7 + 8 | 0] << 8 | c4[t7 + 9 | 0] << 16 | c4[t7 + 10 | 0] << 24) >>> 7 & 2097151) >>> 0 > (f5 = l5 + f5 | 0) >>> 0 ? p5 + 1 | 0 : p5, I5 = (l5 = Bt2(x5, R5, 470296, 0)) + f5 | 0, f5 = y4 + p5 | 0, f5 = l5 >>> 0 > I5 >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(T3, o5, 654183, 0), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + I5 | 0) >>> 0 ? f5 + 1 | 0 : f5, I5 = (l5 = p5) + (p5 = Bt2(N6, F5, -997805, -1)) | 0, l5 = y4 + f5 | 0, B5 = I5, I5 = p5 >>> 0 > I5 >>> 0 ? l5 + 1 | 0 : l5, b5 = Bt2(x5, R5, 666643, 0), l5 = (f5 = c4[t7 + 6 | 0]) >>> 24 | 0, C5 = f5 << 8 | (S5 = c4[t7 + 2 | 0] | c4[t7 + 3 | 0] << 8 | c4[t7 + 4 | 0] << 16 | c4[t7 + 5 | 0] << 24) >>> 24, p5 = l5, f5 = (l5 = c4[t7 + 7 | 0]) >>> 16 | 0, f5 = 2097151 & ((3 & (f5 |= p5)) << 30 | (l5 = l5 << 16 | C5) >>> 2), l5 = y4, l5 = f5 >>> 0 > (p5 = f5 + b5 | 0) >>> 0 ? l5 + 1 | 0 : l5, C5 = (f5 = Bt2(T3, o5, 470296, 0)) + p5 | 0, p5 = y4 + l5 | 0, p5 = f5 >>> 0 > C5 >>> 0 ? p5 + 1 | 0 : p5, f5 = Bt2(N6, F5, 654183, 0), l5 = y4 + p5 | 0, b5 = l5 = f5 >>> 0 > (E5 = f5 + C5 | 0) >>> 0 ? l5 + 1 | 0 : l5, _5 = l5 = l5 - ((E5 >>> 0 < 4293918720) - 1 | 0) | 0, f5 = (p5 = l5 >> 21) + I5 | 0, w5 = l5 = (f5 = (l5 = (2097151 & l5) << 11 | (m5 = E5 - -1048576 | 0) >>> 21) >>> 0 > (C5 = l5 + B5 | 0) >>> 0 ? f5 + 1 | 0 : f5) - ((C5 >>> 0 < 4293918720) - 1 | 0) | 0, B5 = (2097151 & l5) << 11 | (I5 = C5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + U5 | 0, U5 = x5 = B5 + J5 | 0, B5 = B5 >>> 0 > x5 >>> 0 ? l5 + 1 | 0 : l5, l5 = Bt2(P5, M5, -997805, -1), f5 = y4 + f5 | 0, f5 = l5 >>> 0 > (p5 = l5 + C5 | 0) >>> 0 ? f5 + 1 | 0 : f5, G5 = p5 - (l5 = -2097152 & I5) | 0, R5 = f5 - ((l5 >>> 0 > p5 >>> 0) + w5 | 0) | 0, f5 = Bt2(P5, M5, 654183, 0), l5 = b5 + y4 | 0, x5 = (p5 = f5 + E5 | 0) - (f5 = -2097152 & m5) | 0, _5 = (l5 = p5 >>> 0 < E5 >>> 0 ? l5 + 1 | 0 : l5) - ((f5 >>> 0 > p5 >>> 0) + _5 | 0) | 0, l5 = Bt2(T3, o5, 666643, 0), f5 = y4, f5 = l5 >>> 0 > (p5 = l5 + (S5 >>> 5 & 2097151) | 0) >>> 0 ? f5 + 1 | 0 : f5, l5 = Bt2(N6, F5, 470296, 0), f5 = y4 + f5 | 0, C5 = p5 = l5 + p5 | 0, p5 = l5 >>> 0 > p5 >>> 0 ? f5 + 1 | 0 : f5, I5 = Bt2(N6, F5, 666643, 0), f5 = (l5 = c4[t7 + 2 | 0]) << 16 & 2031616 | c4[0 | t7] | c4[t7 + 1 | 0] << 8, l5 = y4, b5 = l5 = f5 >>> 0 > (w5 = I5 + f5 | 0) >>> 0 ? l5 + 1 | 0 : l5, F5 = l5 = l5 - ((w5 >>> 0 < 4293918720) - 1 | 0) | 0, I5 = (2097151 & l5) << 11 | (m5 = w5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + p5 | 0, p5 = l5 = I5 >>> 0 > (E5 = I5 + C5 | 0) >>> 0 ? l5 + 1 | 0 : l5, S5 = l5 = l5 - ((E5 >>> 0 < 4293918720) - 1 | 0) | 0, I5 = (2097151 & l5) << 11 | (C5 = E5 - -1048576 | 0) >>> 21, l5 = (l5 >> 21) + _5 | 0, I5 = I5 >>> 0 > (_5 = N6 = I5 + x5 | 0) >>> 0 ? l5 + 1 | 0 : l5, l5 = Bt2(P5, M5, 470296, 0), p5 = p5 + y4 | 0, p5 = (f5 = l5 + E5 | 0) >>> 0 < E5 >>> 0 ? p5 + 1 | 0 : p5, E5 = f5 - (l5 = -2097152 & C5) | 0, C5 = p5 - ((l5 >>> 0 > f5 >>> 0) + S5 | 0) | 0, f5 = Bt2(P5, M5, 666643, 0), l5 = y4 + (b5 - (((p5 = -2097152 & m5) >>> 0 > w5 >>> 0) + F5 | 0) | 0) | 0, f5 = (p5 = (l5 = f5 >>> 0 > (N6 = f5 + (w5 - p5 | 0) | 0) >>> 0 ? l5 + 1 | 0 : l5) >> 21) + C5 | 0, l5 = (l5 = (f5 = (l5 = (2097151 & l5) << 11 | N6 >>> 21) >>> 0 > (S5 = l5 + E5 | 0) >>> 0 ? f5 + 1 | 0 : f5) >> 21) + I5 | 0, f5 = (f5 = (l5 = (f5 = (2097151 & f5) << 11 | S5 >>> 21) >>> 0 > (_5 = f5 + _5 | 0) >>> 0 ? l5 + 1 | 0 : l5) >> 21) + R5 | 0, p5 = (l5 = (f5 = (l5 = (2097151 & l5) << 11 | _5 >>> 21) >>> 0 > (I5 = l5 + G5 | 0) >>> 0 ? f5 + 1 | 0 : f5) >> 21) + B5 | 0, l5 = (f5 = (p5 = (f5 = (2097151 & f5) << 11 | I5 >>> 21) >>> 0 > (M5 = f5 + U5 | 0) >>> 0 ? p5 + 1 | 0 : p5) >> 21) + z4 | 0, f5 = (p5 = (l5 = (p5 = (2097151 & p5) << 11 | M5 >>> 21) >>> 0 > (w5 = p5 + j5 | 0) >>> 0 ? l5 + 1 | 0 : l5) >> 21) + Q5 | 0, l5 = (l5 = (f5 = (l5 = (2097151 & l5) << 11 | w5 >>> 21) >>> 0 > (E5 = l5 + K5 | 0) >>> 0 ? f5 + 1 | 0 : f5) >> 21) + W3 | 0, f5 = (f5 = (l5 = (f5 = (2097151 & f5) << 11 | E5 >>> 21) >>> 0 > (Q5 = f5 + V3 | 0) >>> 0 ? l5 + 1 | 0 : l5) >> 21) + k5 | 0, p5 = (l5 = (f5 = (l5 = (2097151 & l5) << 11 | Q5 >>> 21) >>> 0 > (B5 = l5 + X3 | 0) >>> 0 ? f5 + 1 | 0 : f5) >> 21) + g5 | 0, l5 = (f5 = (p5 = (f5 = (2097151 & f5) << 11 | B5 >>> 21) >>> 0 > (b5 = f5 + h5 | 0) >>> 0 ? p5 + 1 | 0 : p5) >> 21) + O5 | 0, C5 = (v5 = d5 - (f5 = -2097152 & v5) | 0) + ((2097151 & (l5 = (p5 = (2097151 & p5) << 11 | b5 >>> 21) >>> 0 > (m5 = p5 + a5 | 0) >>> 0 ? l5 + 1 | 0 : l5)) << 11 | m5 >>> 21) | 0, l5 = (D5 - ((f5 >>> 0 > d5 >>> 0) + H5 | 0) | 0) + (l5 >> 21) | 0, v5 = f5 = (l5 = C5 >>> 0 < v5 >>> 0 ? l5 + 1 | 0 : l5) >> 21, N6 = (l5 = Bt2(k5 = (2097151 & l5) << 11 | C5 >>> 21, f5, 666643, 0)) + (f5 = 2097151 & N6) | 0, l5 = y4, d5 = l5 = f5 >>> 0 > N6 >>> 0 ? l5 + 1 | 0 : l5, s4[0 | t7] = N6, s4[t7 + 1 | 0] = (255 & l5) << 24 | N6 >>> 8, l5 = 2097151 & S5, f5 = Bt2(k5, v5, 470296, 0) + l5 | 0, p5 = y4, l5 = (d5 >> 21) + (l5 >>> 0 > f5 >>> 0 ? p5 + 1 | 0 : p5) | 0, l5 = (D5 = (2097151 & d5) << 11 | N6 >>> 21) >>> 0 > (S5 = D5 + f5 | 0) >>> 0 ? l5 + 1 | 0 : l5, s4[t7 + 4 | 0] = (2047 & l5) << 21 | S5 >>> 11, f5 = l5, p5 = S5, s4[t7 + 3 | 0] = (7 & l5) << 29 | p5 >>> 3, s4[t7 + 2 | 0] = 31 & ((65535 & d5) << 16 | N6 >>> 16) | p5 << 5, d5 = 2097151 & _5, _5 = Bt2(k5, v5, 654183, 0) + d5 | 0, l5 = y4, S5 = (2097151 & f5) << 11 | p5 >>> 21, f5 = (f5 >> 21) + (d5 = d5 >>> 0 > _5 >>> 0 ? l5 + 1 | 0 : l5) | 0, l5 = f5 = (_5 = S5 + _5 | 0) >>> 0 < S5 >>> 0 ? f5 + 1 | 0 : f5, s4[t7 + 6 | 0] = (63 & l5) << 26 | _5 >>> 6, d5 = _5, _5 = 0, s4[t7 + 5 | 0] = _5 << 13 | (1572864 & p5) >>> 19 | d5 << 2, p5 = 2097151 & I5, I5 = Bt2(k5, v5, -997805, -1) + p5 | 0, f5 = y4, f5 = p5 >>> 0 > I5 >>> 0 ? f5 + 1 | 0 : f5, _5 = (2097151 & (p5 = l5)) << 11 | d5 >>> 21, p5 = (l5 >>= 21) + f5 | 0, p5 = (I5 = _5 + I5 | 0) >>> 0 < _5 >>> 0 ? p5 + 1 | 0 : p5, s4[t7 + 9 | 0] = (511 & p5) << 23 | I5 >>> 9, s4[t7 + 8 | 0] = (1 & p5) << 31 | I5 >>> 1, f5 = 0, s4[t7 + 7 | 0] = f5 << 18 | (2080768 & d5) >>> 14 | I5 << 7, f5 = 2097151 & M5, d5 = Bt2(k5, v5, 136657, 0) + f5 | 0, l5 = y4, l5 = f5 >>> 0 > d5 >>> 0 ? l5 + 1 | 0 : l5, M5 = (2097151 & (f5 = p5)) << 11 | I5 >>> 21, f5 = l5 + (p5 = f5 >> 21) | 0, f5 = (d5 = M5 + d5 | 0) >>> 0 < M5 >>> 0 ? f5 + 1 | 0 : f5, s4[t7 + 12 | 0] = (4095 & f5) << 20 | d5 >>> 12, p5 = d5, s4[t7 + 11 | 0] = (15 & f5) << 28 | p5 >>> 4, d5 = 0, s4[t7 + 10 | 0] = d5 << 15 | (1966080 & I5) >>> 17 | p5 << 4, d5 = 2097151 & w5, I5 = Bt2(k5, v5, -683901, -1) + d5 | 0, l5 = y4, l5 = d5 >>> 0 > I5 >>> 0 ? l5 + 1 | 0 : l5, d5 = f5, f5 = l5 + (f5 >>= 21) | 0, f5 = (d5 = (x5 = I5) + (I5 = (2097151 & d5) << 11 | p5 >>> 21) | 0) >>> 0 < I5 >>> 0 ? f5 + 1 | 0 : f5, s4[t7 + 14 | 0] = (127 & f5) << 25 | d5 >>> 7, I5 = 0, s4[t7 + 13 | 0] = I5 << 12 | (1048576 & p5) >>> 20 | d5 << 1, l5 = f5 >> 21, p5 = (f5 = (2097151 & f5) << 11 | d5 >>> 21) >>> 0 > (I5 = f5 + (2097151 & E5) | 0) >>> 0 ? l5 + 1 | 0 : l5, s4[t7 + 17 | 0] = (1023 & p5) << 22 | I5 >>> 10, s4[t7 + 16 | 0] = (3 & p5) << 30 | I5 >>> 2, f5 = 0, s4[t7 + 15 | 0] = f5 << 17 | (2064384 & d5) >>> 15 | I5 << 6, l5 = p5 >> 21, l5 = (f5 = (2097151 & p5) << 11 | I5 >>> 21) >>> 0 > (p5 = f5 + (2097151 & Q5) | 0) >>> 0 ? l5 + 1 | 0 : l5, s4[t7 + 20 | 0] = (8191 & l5) << 19 | p5 >>> 13, s4[t7 + 19 | 0] = (31 & l5) << 27 | p5 >>> 5, d5 = (f5 = 2097151 & B5) + (B5 = (2097151 & l5) << 11 | p5 >>> 21) | 0, f5 = l5 >> 21, f5 = d5 >>> 0 < B5 >>> 0 ? f5 + 1 | 0 : f5, B5 = d5, s4[t7 + 21 | 0] = d5, Q5 = 0, s4[t7 + 18 | 0] = Q5 << 14 | (1835008 & I5) >>> 18 | p5 << 3, s4[t7 + 22 | 0] = (255 & f5) << 24 | d5 >>> 8, p5 = f5 >> 21, p5 = (d5 = (I5 = (2097151 & f5) << 11 | d5 >>> 21) + (2097151 & b5) | 0) >>> 0 < I5 >>> 0 ? p5 + 1 | 0 : p5, s4[t7 + 25 | 0] = (2047 & p5) << 21 | d5 >>> 11, s4[t7 + 24 | 0] = (7 & p5) << 29 | d5 >>> 3, s4[t7 + 23 | 0] = 31 & ((65535 & f5) << 16 | B5 >>> 16) | d5 << 5, l5 = p5 >> 21, l5 = (f5 = (2097151 & p5) << 11 | d5 >>> 21) >>> 0 > (p5 = f5 + (2097151 & m5) | 0) >>> 0 ? l5 + 1 | 0 : l5, s4[t7 + 27 | 0] = (63 & l5) << 26 | p5 >>> 6, I5 = 0, s4[t7 + 26 | 0] = I5 << 13 | (1572864 & d5) >>> 19 | p5 << 2, f5 = l5 >> 21, f5 = (l5 = (d5 = (2097151 & l5) << 11 | p5 >>> 21) + (2097151 & C5) | 0) >>> 0 < d5 >>> 0 ? f5 + 1 | 0 : f5, s4[t7 + 31 | 0] = (131071 & f5) << 15 | l5 >>> 17, s4[t7 + 30 | 0] = (511 & f5) << 23 | l5 >>> 9, s4[t7 + 29 | 0] = (1 & f5) << 31 | l5 >>> 1, d5 = 0, s4[t7 + 28 | 0] = d5 << 18 | (2080768 & p5) >>> 14 | l5 << 7;
                            }
                            function w4(t7, e6, r11, n9, A8, i4) {
                              var o5, h5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, w5 = 0, Q5 = 0, b5 = 0, k5 = 0, S5 = 0, M5 = 0, x5 = 0, F5 = 0, U5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0, $3 = 0, tt3 = 0, et3 = 0, rt3 = 0, nt3 = 0, At3 = 0, it3 = 0;
                              for (I4 = o5 = I4 - 592 | 0, k5 = -1, w5 = t7 + 32 | 0, B5 = 32, Q5 = 1; S5 = c4[2672 + (p5 = B5 - 1 | 0) | 0], l5 = (p5 = ((u5 = c4[p5 + w5 | 0]) ^ S5) - 1 >> 8 & Q5) & (d5 = c4[w5 + (B5 = B5 - 2 | 0) | 0]) - (f5 = c4[B5 + 2672 | 0]) >> 8 | 255 & (u5 - S5 >>> 8 & Q5 | l5), Q5 = p5 & (f5 ^ d5) - 1 >> 8, B5; )
                                ;
                              if (255 & l5 && !(lt2(t7) | !(~((127 & ~c4[A8 + 31 | 0] | c4[A8 + 1 | 0] & c4[A8 + 2 | 0] & c4[A8 + 3 | 0] & c4[A8 + 4 | 0] & c4[A8 + 5 | 0] & c4[A8 + 6 | 0] & c4[A8 + 7 | 0] & c4[A8 + 8 | 0] & c4[A8 + 9 | 0] & c4[A8 + 10 | 0] & c4[A8 + 11 | 0] & c4[A8 + 12 | 0] & c4[A8 + 13 | 0] & c4[A8 + 14 | 0] & c4[A8 + 15 | 0] & c4[A8 + 16 | 0] & c4[A8 + 17 | 0] & c4[A8 + 18 | 0] & c4[A8 + 19 | 0] & c4[A8 + 20 | 0] & c4[A8 + 21 | 0] & c4[A8 + 22 | 0] & c4[A8 + 23 | 0] & c4[A8 + 24 | 0] & c4[A8 + 25 | 0] & c4[A8 + 26 | 0] & c4[A8 + 27 | 0] & c4[A8 + 28 | 0] & c4[A8 + 30 | 0] & c4[A8 + 29 | 0] ^ 255) - 1 & 236 - c4[0 | A8]) >>> 8 & 1) || lt2(A8) || N5(p5 = o5 + 128 | 0, A8))) {
                                for (gt2(u5 = o5 + 384 | 0), i4 && G4(u5, 35136, 34, 0), G4(u5, t7, 32, 0), G4(u5, A8, 32, 0), G4(u5, e6, r11, n9), D4(u5, r11 = o5 + 320 | 0), E4(r11), n9 = o5 + 8 | 0, A8 = 0, e6 = 0, I4 = h5 = I4 - 2272 | 0; u5 = r11 + (A8 >>> 3 | 0) | 0, s4[(i4 = h5 + 2016 | 0) + A8 | 0] = c4[0 | u5] >>> (6 & A8) & 1, s4[(l5 = i4) + (i4 = 1 | A8) | 0] = c4[0 | u5] >>> (7 & i4) & 1, 256 != (0 | (A8 = A8 + 2 | 0)); )
                                  ;
                                for (; ; ) {
                                  e6 = (r11 = e6) + 1 | 0;
                                  t:
                                    if (!(r11 >>> 0 > 254) && c4[0 | (l5 = (A8 = h5 + 2016 | 0) + r11 | 0)]) {
                                      e:
                                        if (A8 = s4[0 | (f5 = e6 + A8 | 0)])
                                          if ((0 | (A8 = (u5 = A8 << 1) + (i4 = s4[0 | l5]) | 0)) <= 15)
                                            s4[0 | l5] = A8, s4[0 | f5] = 0;
                                          else {
                                            if ((0 | (A8 = i4 - u5 | 0)) < -15)
                                              break t;
                                            for (s4[0 | l5] = A8, A8 = e6; ; ) {
                                              if (!c4[0 | (i4 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                s4[0 | i4] = 1;
                                                break e;
                                              }
                                              if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, !i4)
                                                break;
                                            }
                                          }
                                      if (!(r11 >>> 0 > 253)) {
                                        e:
                                          if (i4 = s4[0 | (d5 = (A8 = r11 + 2 | 0) + (h5 + 2016 | 0) | 0)])
                                            if ((0 | (i4 = (f5 = i4 << 2) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                              if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                break t;
                                              for (s4[0 | l5] = i4; ; ) {
                                                if (c4[0 | (i4 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                  if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                    continue;
                                                  break e;
                                                }
                                                break;
                                              }
                                              s4[0 | i4] = 1;
                                            } else
                                              s4[0 | l5] = i4, s4[0 | d5] = 0;
                                        if (!(r11 >>> 0 > 252)) {
                                          e:
                                            if (i4 = s4[0 | (d5 = (A8 = r11 + 3 | 0) + (h5 + 2016 | 0) | 0)])
                                              if ((0 | (i4 = (f5 = i4 << 3) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                  break t;
                                                for (s4[0 | l5] = i4; ; ) {
                                                  if (c4[0 | (i4 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                    if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                      continue;
                                                    break e;
                                                  }
                                                  break;
                                                }
                                                s4[0 | i4] = 1;
                                              } else
                                                s4[0 | l5] = i4, s4[0 | d5] = 0;
                                          if (!(r11 >>> 0 > 251)) {
                                            e:
                                              if (i4 = s4[0 | (d5 = (A8 = r11 + 4 | 0) + (h5 + 2016 | 0) | 0)])
                                                if ((0 | (i4 = (f5 = i4 << 4) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                  if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                    break t;
                                                  for (s4[0 | l5] = i4; ; ) {
                                                    if (c4[0 | (i4 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                      if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                        continue;
                                                      break e;
                                                    }
                                                    break;
                                                  }
                                                  s4[0 | i4] = 1;
                                                } else
                                                  s4[0 | l5] = i4, s4[0 | d5] = 0;
                                            if (!(r11 >>> 0 > 250)) {
                                              e:
                                                if (i4 = s4[0 | (d5 = (A8 = r11 + 5 | 0) + (h5 + 2016 | 0) | 0)])
                                                  if ((0 | (i4 = (f5 = i4 << 5) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                    if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                      break t;
                                                    for (s4[0 | l5] = i4; ; ) {
                                                      if (c4[0 | (i4 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                        if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                          continue;
                                                        break e;
                                                      }
                                                      break;
                                                    }
                                                    s4[0 | i4] = 1;
                                                  } else
                                                    s4[0 | l5] = i4, s4[0 | d5] = 0;
                                              if (!(r11 >>> 0 > 249) && (r11 = s4[0 | (f5 = (A8 = r11 + 6 | 0) + (h5 + 2016 | 0) | 0)]))
                                                if ((0 | (r11 = (u5 = r11 << 6) + (i4 = s4[0 | l5]) | 0)) >= 16) {
                                                  if ((0 | (r11 = i4 - u5 | 0)) < -15)
                                                    break t;
                                                  for (s4[0 | l5] = r11; ; ) {
                                                    if (c4[0 | (r11 = (h5 + 2016 | 0) + A8 | 0)]) {
                                                      if (s4[0 | r11] = 0, r11 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, r11)
                                                        continue;
                                                      break t;
                                                    }
                                                    break;
                                                  }
                                                  s4[0 | r11] = 1;
                                                } else
                                                  s4[0 | l5] = r11, s4[0 | f5] = 0;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  if (256 == (0 | e6))
                                    break;
                                }
                                for (A8 = 0; r11 = w5 + (A8 >>> 3 | 0) | 0, s4[(e6 = h5 + 1760 | 0) + A8 | 0] = c4[0 | r11] >>> (6 & A8) & 1, s4[(i4 = e6) + (e6 = 1 | A8) | 0] = c4[0 | r11] >>> (7 & e6) & 1, 256 != (0 | (A8 = A8 + 2 | 0)); )
                                  ;
                                for (e6 = 0; ; ) {
                                  e6 = (r11 = e6) + 1 | 0;
                                  t:
                                    if (!(r11 >>> 0 > 254) && c4[0 | (l5 = (A8 = h5 + 1760 | 0) + r11 | 0)]) {
                                      e:
                                        if (A8 = s4[0 | (f5 = e6 + A8 | 0)])
                                          if ((0 | (A8 = (u5 = A8 << 1) + (i4 = s4[0 | l5]) | 0)) <= 15)
                                            s4[0 | l5] = A8, s4[0 | f5] = 0;
                                          else {
                                            if ((0 | (A8 = i4 - u5 | 0)) < -15)
                                              break t;
                                            for (s4[0 | l5] = A8, A8 = e6; ; ) {
                                              if (!c4[0 | (i4 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                s4[0 | i4] = 1;
                                                break e;
                                              }
                                              if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, !i4)
                                                break;
                                            }
                                          }
                                      if (!(r11 >>> 0 > 253)) {
                                        e:
                                          if (i4 = s4[0 | (d5 = (A8 = r11 + 2 | 0) + (h5 + 1760 | 0) | 0)])
                                            if ((0 | (i4 = (f5 = i4 << 2) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                              if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                break t;
                                              for (s4[0 | l5] = i4; ; ) {
                                                if (c4[0 | (i4 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                  if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                    continue;
                                                  break e;
                                                }
                                                break;
                                              }
                                              s4[0 | i4] = 1;
                                            } else
                                              s4[0 | l5] = i4, s4[0 | d5] = 0;
                                        if (!(r11 >>> 0 > 252)) {
                                          e:
                                            if (i4 = s4[0 | (d5 = (A8 = r11 + 3 | 0) + (h5 + 1760 | 0) | 0)])
                                              if ((0 | (i4 = (f5 = i4 << 3) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                  break t;
                                                for (s4[0 | l5] = i4; ; ) {
                                                  if (c4[0 | (i4 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                    if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                      continue;
                                                    break e;
                                                  }
                                                  break;
                                                }
                                                s4[0 | i4] = 1;
                                              } else
                                                s4[0 | l5] = i4, s4[0 | d5] = 0;
                                          if (!(r11 >>> 0 > 251)) {
                                            e:
                                              if (i4 = s4[0 | (d5 = (A8 = r11 + 4 | 0) + (h5 + 1760 | 0) | 0)])
                                                if ((0 | (i4 = (f5 = i4 << 4) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                  if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                    break t;
                                                  for (s4[0 | l5] = i4; ; ) {
                                                    if (c4[0 | (i4 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                      if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                        continue;
                                                      break e;
                                                    }
                                                    break;
                                                  }
                                                  s4[0 | i4] = 1;
                                                } else
                                                  s4[0 | l5] = i4, s4[0 | d5] = 0;
                                            if (!(r11 >>> 0 > 250)) {
                                              e:
                                                if (i4 = s4[0 | (d5 = (A8 = r11 + 5 | 0) + (h5 + 1760 | 0) | 0)])
                                                  if ((0 | (i4 = (f5 = i4 << 5) + (u5 = s4[0 | l5]) | 0)) >= 16) {
                                                    if ((0 | (i4 = u5 - f5 | 0)) < -15)
                                                      break t;
                                                    for (s4[0 | l5] = i4; ; ) {
                                                      if (c4[0 | (i4 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                        if (s4[0 | i4] = 0, i4 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, i4)
                                                          continue;
                                                        break e;
                                                      }
                                                      break;
                                                    }
                                                    s4[0 | i4] = 1;
                                                  } else
                                                    s4[0 | l5] = i4, s4[0 | d5] = 0;
                                              if (!(r11 >>> 0 > 249) && (r11 = s4[0 | (f5 = (A8 = r11 + 6 | 0) + (h5 + 1760 | 0) | 0)]))
                                                if ((0 | (r11 = (u5 = r11 << 6) + (i4 = s4[0 | l5]) | 0)) >= 16) {
                                                  if ((0 | (r11 = i4 - u5 | 0)) < -15)
                                                    break t;
                                                  for (s4[0 | l5] = r11; ; ) {
                                                    if (c4[0 | (r11 = (h5 + 1760 | 0) + A8 | 0)]) {
                                                      if (s4[0 | r11] = 0, r11 = A8 >>> 0 < 255, A8 = A8 + 1 | 0, r11)
                                                        continue;
                                                      break t;
                                                    }
                                                    break;
                                                  }
                                                  s4[0 | r11] = 1;
                                                } else
                                                  s4[0 | l5] = r11, s4[0 | f5] = 0;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  if (256 == (0 | e6))
                                    break;
                                }
                                for (Z2(A8 = h5 + 480 | 0, p5), e6 = a4[p5 + 36 >> 2], a4[h5 + 192 >> 2] = a4[p5 + 32 >> 2], a4[h5 + 196 >> 2] = e6, e6 = a4[p5 + 28 >> 2], a4[h5 + 184 >> 2] = a4[p5 + 24 >> 2], a4[h5 + 188 >> 2] = e6, e6 = a4[p5 + 20 >> 2], a4[h5 + 176 >> 2] = a4[p5 + 16 >> 2], a4[h5 + 180 >> 2] = e6, e6 = a4[p5 + 12 >> 2], a4[h5 + 168 >> 2] = a4[p5 + 8 >> 2], a4[h5 + 172 >> 2] = e6, e6 = a4[p5 + 4 >> 2], a4[h5 + 160 >> 2] = a4[p5 >> 2], a4[h5 + 164 >> 2] = e6, e6 = a4[p5 + 52 >> 2], a4[h5 + 208 >> 2] = a4[p5 + 48 >> 2], a4[h5 + 212 >> 2] = e6, e6 = a4[p5 + 60 >> 2], a4[h5 + 216 >> 2] = a4[p5 + 56 >> 2], a4[h5 + 220 >> 2] = e6, e6 = a4[4 + (r11 = p5 - -64 | 0) >> 2], a4[h5 + 224 >> 2] = a4[r11 >> 2], a4[h5 + 228 >> 2] = e6, e6 = a4[p5 + 76 >> 2], a4[h5 + 232 >> 2] = a4[p5 + 72 >> 2], a4[h5 + 236 >> 2] = e6, e6 = a4[p5 + 44 >> 2], a4[h5 + 200 >> 2] = a4[p5 + 40 >> 2], a4[h5 + 204 >> 2] = e6, e6 = a4[p5 + 92 >> 2], a4[h5 + 248 >> 2] = a4[p5 + 88 >> 2], a4[h5 + 252 >> 2] = e6, e6 = a4[p5 + 100 >> 2], a4[h5 + 256 >> 2] = a4[p5 + 96 >> 2], a4[h5 + 260 >> 2] = e6, e6 = a4[p5 + 108 >> 2], a4[h5 + 264 >> 2] = a4[p5 + 104 >> 2], a4[h5 + 268 >> 2] = e6, e6 = a4[p5 + 116 >> 2], a4[h5 + 272 >> 2] = a4[p5 + 112 >> 2], a4[h5 + 276 >> 2] = e6, e6 = a4[p5 + 84 >> 2], a4[h5 + 240 >> 2] = a4[p5 + 80 >> 2], a4[h5 + 244 >> 2] = e6, _4(i4 = h5 + 320 | 0, r11 = h5 + 160 | 0), v4(h5, i4, y5 = h5 + 440 | 0), v4(h5 + 40 | 0, C5 = h5 + 360 | 0, m5 = h5 + 400 | 0), v4(h5 + 80 | 0, m5, y5), v4(h5 + 120 | 0, i4, C5), P4(i4, h5, A8), v4(r11, i4, y5), v4(M5 = h5 + 200 | 0, C5, m5), v4(x5 = h5 + 240 | 0, m5, y5), v4(b5 = h5 + 280 | 0, i4, C5), Z2(e6 = h5 + 640 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(e6 = h5 + 800 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(e6 = h5 + 960 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(e6 = h5 + 1120 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(e6 = h5 + 1280 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(e6 = h5 + 1440 | 0, r11), P4(i4, h5, e6), v4(r11, i4, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, i4, C5), Z2(h5 + 1600 | 0, r11), a4[n9 + 32 >> 2] = 0, a4[n9 + 36 >> 2] = 0, a4[n9 + 24 >> 2] = 0, a4[n9 + 28 >> 2] = 0, a4[n9 + 16 >> 2] = 0, a4[n9 + 20 >> 2] = 0, a4[n9 + 8 >> 2] = 0, a4[n9 + 12 >> 2] = 0, a4[n9 >> 2] = 0, a4[n9 + 4 >> 2] = 0, a4[n9 + 44 >> 2] = 0, a4[n9 + 48 >> 2] = 0, a4[(z4 = n9 + 40 | 0) >> 2] = 1, a4[n9 + 52 >> 2] = 0, a4[n9 + 56 >> 2] = 0, a4[n9 + 60 >> 2] = 0, a4[n9 + 64 >> 2] = 0, a4[n9 + 68 >> 2] = 0, a4[n9 + 72 >> 2] = 0, a4[n9 + 84 >> 2] = 0, a4[n9 + 88 >> 2] = 0, a4[n9 + 76 >> 2] = 0, a4[n9 + 80 >> 2] = 1, a4[n9 + 92 >> 2] = 0, a4[n9 + 96 >> 2] = 0, a4[n9 + 100 >> 2] = 0, a4[n9 + 104 >> 2] = 0, a4[n9 + 108 >> 2] = 0, a4[n9 + 112 >> 2] = 0, a4[n9 + 116 >> 2] = 0, et3 = n9 + 80 | 0, e6 = 255; ; ) {
                                  t: {
                                    e: {
                                      if (!c4[(r11 = h5 + 2016 | 0) + e6 | 0] && !c4[(A8 = h5 + 1760 | 0) + e6 | 0]) {
                                        if (!(c4[(i4 = r11) + (r11 = e6 - 1 | 0) | 0] | c4[r11 + A8 | 0]))
                                          break e;
                                        e6 = r11;
                                      }
                                      if ((0 | e6) < 0)
                                        break t;
                                      for (; _4(A8 = h5 + 320 | 0, n9), (0 | (i4 = s4[(r11 = e6) + (h5 + 2016 | 0) | 0])) > 0 ? (v4(e6 = h5 + 160 | 0, A8, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, A8, C5), P4(A8, e6, (h5 + 480 | 0) + g4((254 & i4) >>> 1 | 0, 160) | 0)) : (0 | i4) >= 0 || (v4(e6 = h5 + 160 | 0, A8 = h5 + 320 | 0, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, A8, C5), T2(A8, e6, (h5 + 480 | 0) + g4((0 - i4 & 254) >>> 1 | 0, 160) | 0)), (0 | (J5 = s4[r11 + (h5 + 1760 | 0) | 0])) > 0 ? (v4(e6 = h5 + 160 | 0, A8 = h5 + 320 | 0, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, A8, C5), R4(A8, e6, g4((254 & J5) >>> 1 | 0, 120) + 1488 | 0)) : (0 | J5) >= 0 || (v4(h5 + 160 | 0, j5 = h5 + 320 | 0, y5), v4(M5, C5, m5), v4(x5, m5, y5), v4(b5, j5, C5), F5 = a4[h5 + 160 >> 2], U5 = a4[h5 + 200 >> 2], H5 = a4[h5 + 164 >> 2], L5 = a4[h5 + 204 >> 2], O5 = a4[h5 + 168 >> 2], Y5 = a4[h5 + 208 >> 2], K5 = a4[h5 + 172 >> 2], B5 = a4[h5 + 212 >> 2], w5 = a4[h5 + 176 >> 2], Q5 = a4[h5 + 216 >> 2], k5 = a4[h5 + 180 >> 2], S5 = a4[h5 + 220 >> 2], l5 = a4[h5 + 184 >> 2], d5 = a4[h5 + 224 >> 2], f5 = a4[h5 + 188 >> 2], u5 = a4[h5 + 228 >> 2], p5 = a4[h5 + 192 >> 2], i4 = a4[h5 + 232 >> 2], A8 = a4[h5 + 236 >> 2], e6 = a4[h5 + 196 >> 2], a4[h5 + 396 >> 2] = A8 - e6, a4[h5 + 392 >> 2] = i4 - p5, a4[h5 + 388 >> 2] = u5 - f5, a4[h5 + 384 >> 2] = d5 - l5, a4[h5 + 380 >> 2] = S5 - k5, a4[h5 + 376 >> 2] = Q5 - w5, a4[h5 + 372 >> 2] = B5 - K5, a4[h5 + 368 >> 2] = Y5 - O5, a4[h5 + 364 >> 2] = L5 - H5, a4[h5 + 360 >> 2] = U5 - F5, a4[h5 + 356 >> 2] = e6 + A8, a4[h5 + 352 >> 2] = i4 + p5, a4[h5 + 348 >> 2] = u5 + f5, a4[h5 + 344 >> 2] = l5 + d5, a4[h5 + 340 >> 2] = k5 + S5, a4[h5 + 336 >> 2] = w5 + Q5, a4[h5 + 332 >> 2] = B5 + K5, a4[h5 + 328 >> 2] = O5 + Y5, a4[h5 + 324 >> 2] = H5 + L5, a4[h5 + 320 >> 2] = F5 + U5, v4(m5, j5, 40 + (e6 = g4((0 - J5 & 254) >>> 1 | 0, 120) + 1488 | 0) | 0), v4(C5, C5, e6), v4(y5, e6 + 80 | 0, b5), rt3 = a4[h5 + 276 >> 2], nt3 = a4[h5 + 272 >> 2], J5 = a4[h5 + 268 >> 2], j5 = a4[h5 + 264 >> 2], l5 = a4[h5 + 260 >> 2], d5 = a4[h5 + 256 >> 2], f5 = a4[h5 + 252 >> 2], u5 = a4[h5 + 248 >> 2], p5 = a4[h5 + 244 >> 2], i4 = a4[h5 + 240 >> 2], q4 = a4[h5 + 360 >> 2], X3 = a4[h5 + 400 >> 2], V3 = a4[h5 + 364 >> 2], W3 = a4[h5 + 404 >> 2], $3 = a4[h5 + 368 >> 2], tt3 = a4[h5 + 408 >> 2], F5 = a4[h5 + 372 >> 2], U5 = a4[h5 + 412 >> 2], H5 = a4[h5 + 376 >> 2], L5 = a4[h5 + 416 >> 2], O5 = a4[h5 + 380 >> 2], Y5 = a4[h5 + 420 >> 2], K5 = a4[h5 + 384 >> 2], B5 = a4[h5 + 424 >> 2], w5 = a4[h5 + 388 >> 2], Q5 = a4[h5 + 428 >> 2], k5 = a4[h5 + 392 >> 2], S5 = a4[h5 + 432 >> 2], A8 = a4[h5 + 396 >> 2], e6 = a4[h5 + 436 >> 2], a4[h5 + 396 >> 2] = A8 + e6, a4[h5 + 392 >> 2] = k5 + S5, a4[h5 + 388 >> 2] = w5 + Q5, a4[h5 + 384 >> 2] = B5 + K5, a4[h5 + 380 >> 2] = O5 + Y5, a4[h5 + 376 >> 2] = H5 + L5, a4[h5 + 372 >> 2] = F5 + U5, a4[h5 + 368 >> 2] = $3 + tt3, a4[h5 + 364 >> 2] = V3 + W3, a4[h5 + 360 >> 2] = q4 + X3, a4[h5 + 356 >> 2] = e6 - A8, a4[h5 + 352 >> 2] = S5 - k5, a4[h5 + 348 >> 2] = Q5 - w5, a4[h5 + 344 >> 2] = B5 - K5, a4[h5 + 340 >> 2] = Y5 - O5, a4[h5 + 336 >> 2] = L5 - H5, a4[h5 + 332 >> 2] = U5 - F5, a4[h5 + 328 >> 2] = tt3 - $3, a4[h5 + 324 >> 2] = W3 - V3, a4[h5 + 320 >> 2] = X3 - q4, F5 = i4 << 1, U5 = a4[h5 + 440 >> 2], a4[h5 + 400 >> 2] = F5 - U5, H5 = p5 << 1, L5 = a4[h5 + 444 >> 2], a4[h5 + 404 >> 2] = H5 - L5, O5 = u5 << 1, Y5 = a4[h5 + 448 >> 2], a4[h5 + 408 >> 2] = O5 - Y5, K5 = f5 << 1, B5 = a4[h5 + 452 >> 2], a4[h5 + 412 >> 2] = K5 - B5, w5 = d5 << 1, Q5 = a4[h5 + 456 >> 2], a4[h5 + 416 >> 2] = w5 - Q5, k5 = l5 << 1, S5 = a4[h5 + 460 >> 2], a4[h5 + 420 >> 2] = k5 - S5, l5 = j5 << 1, d5 = a4[h5 + 464 >> 2], a4[h5 + 424 >> 2] = l5 - d5, f5 = J5 << 1, u5 = a4[h5 + 468 >> 2], a4[h5 + 428 >> 2] = f5 - u5, p5 = nt3 << 1, i4 = a4[h5 + 472 >> 2], a4[h5 + 432 >> 2] = p5 - i4, A8 = rt3 << 1, e6 = a4[h5 + 476 >> 2], a4[h5 + 436 >> 2] = A8 - e6, a4[h5 + 440 >> 2] = F5 + U5, a4[h5 + 444 >> 2] = H5 + L5, a4[h5 + 448 >> 2] = O5 + Y5, a4[h5 + 452 >> 2] = B5 + K5, a4[h5 + 456 >> 2] = w5 + Q5, a4[h5 + 460 >> 2] = k5 + S5, a4[h5 + 464 >> 2] = l5 + d5, a4[h5 + 468 >> 2] = u5 + f5, a4[h5 + 472 >> 2] = i4 + p5, a4[h5 + 476 >> 2] = e6 + A8), v4(n9, h5 + 320 | 0, y5), v4(z4, C5, m5), v4(et3, m5, y5), e6 = r11 - 1 | 0, (0 | r11) > 0; )
                                        ;
                                      break t;
                                    }
                                    if (e6 = e6 - 2 | 0, r11)
                                      continue;
                                  }
                                  break;
                                }
                                I4 = h5 + 2272 | 0, bt2(e6 = o5 + 288 | 0, n9), At3 = -1, it3 = Ct2(e6, t7), k5 = ((0 | t7) == (0 | e6) ? At3 : it3) | ut2(t7, e6, 32);
                              }
                              return I4 = o5 + 592 | 0, k5;
                            }
                            function v4(t7, e6, r11) {
                              var n9, A8, i4, o5, s5, c5, h5, u5, l5, f5, p5, d5, I5, C5, m5, B5, E5, w5, v5, _5, Q5, b5, k5, D5, S5, N6, M5, x5, F5, P5, T3, R5, U5, G5, H5, L5, O5, Y5, K5, J5, j5, z4, q4, X3, V3, W3, Z3, $3, tt3, et3, rt3, nt3, At3, it3 = 0, ot3 = 0, st3 = 0, at3 = 0, ct3 = 0, ht3 = 0, gt3 = 0, ut3 = 0, lt3 = 0, ft3 = 0, pt3 = 0, dt3 = 0, It3 = 0, yt3 = 0, Ct3 = 0, mt3 = 0, Et3 = 0, wt3 = 0, vt3 = 0, _t3 = 0, Qt3 = 0, bt3 = 0, kt3 = 0, Dt3 = 0, St3 = 0;
                              it3 = Bt2(n9 = a4[r11 + 4 >> 2], f5 = n9 >> 31, Et3 = (B5 = a4[e6 + 20 >> 2]) << 1, T3 = Et3 >> 31), st3 = y4, ot3 = (It3 = Bt2(Ct3 = a4[r11 >> 2], i4 = Ct3 >> 31, A8 = a4[e6 + 24 >> 2], o5 = A8 >> 31)) + it3 | 0, it3 = y4 + st3 | 0, it3 = ot3 >>> 0 < It3 >>> 0 ? it3 + 1 | 0 : it3, lt3 = Bt2(s5 = a4[r11 + 8 >> 2], I5 = s5 >> 31, It3 = a4[e6 + 16 >> 2], c5 = It3 >> 31), st3 = y4 + it3 | 0, st3 = (ot3 = lt3 + ot3 | 0) >>> 0 < lt3 >>> 0 ? st3 + 1 | 0 : st3, it3 = (lt3 = Bt2(p5 = a4[r11 + 12 >> 2], E5 = p5 >> 31, D5 = (w5 = a4[e6 + 12 >> 2]) << 1, R5 = D5 >> 31)) + ot3 | 0, ot3 = y4 + st3 | 0, ot3 = it3 >>> 0 < lt3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = (yt3 = Bt2(C5 = a4[r11 + 16 >> 2], S5 = C5 >> 31, lt3 = a4[e6 + 8 >> 2], h5 = lt3 >> 31)) + it3 | 0, it3 = y4 + ot3 | 0, it3 = st3 >>> 0 < yt3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = st3, st3 = Bt2(v5 = a4[r11 + 20 >> 2], U5 = v5 >> 31, N6 = (_5 = a4[e6 + 4 >> 2]) << 1, G5 = N6 >> 31), it3 = y4 + it3 | 0, it3 = (ot3 = ot3 + st3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, W3 = gt3 = a4[r11 + 24 >> 2], st3 = (ft3 = Bt2(gt3, X3 = gt3 >> 31, yt3 = a4[e6 >> 2], u5 = yt3 >> 31)) + ot3 | 0, ot3 = y4 + it3 | 0, ot3 = st3 >>> 0 < ft3 >>> 0 ? ot3 + 1 | 0 : ot3, H5 = a4[r11 + 28 >> 2], it3 = (ft3 = Bt2(dt3 = g4(H5, 19), Q5 = dt3 >> 31, M5 = (b5 = a4[e6 + 36 >> 2]) << 1, L5 = M5 >> 31)) + st3 | 0, st3 = y4 + ot3 | 0, st3 = it3 >>> 0 < ft3 >>> 0 ? st3 + 1 | 0 : st3, Qt3 = a4[r11 + 32 >> 2], ot3 = (ut3 = Bt2(at3 = g4(Qt3, 19), m5 = at3 >> 31, ft3 = a4[e6 + 32 >> 2], l5 = ft3 >> 31)) + it3 | 0, it3 = y4 + st3 | 0, it3 = ot3 >>> 0 < ut3 >>> 0 ? it3 + 1 | 0 : it3, Z3 = a4[r11 + 36 >> 2], r11 = Bt2(ut3 = g4(Z3, 19), d5 = ut3 >> 31, x5 = (k5 = a4[e6 + 28 >> 2]) << 1, O5 = x5 >> 31), it3 = y4 + it3 | 0, ct3 = e6 = r11 + ot3 | 0, r11 = e6 >>> 0 < r11 >>> 0 ? it3 + 1 | 0 : it3, e6 = Bt2(It3, c5, n9, f5), it3 = y4, ot3 = Bt2(Ct3, i4, B5, Y5 = B5 >> 31), st3 = y4 + it3 | 0, st3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, it3 = Bt2(s5, I5, w5, K5 = w5 >> 31), ot3 = y4 + st3 | 0, ot3 = (e6 = it3 + e6 | 0) >>> 0 < it3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = Bt2(lt3, h5, p5, E5), it3 = y4 + ot3 | 0, it3 = (e6 = st3 + e6 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(C5, S5, _5, J5 = _5 >> 31), it3 = y4 + it3 | 0, it3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(yt3, u5, v5, U5), it3 = y4 + it3 | 0, it3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(gt3 = g4(gt3, 19), F5 = gt3 >> 31, b5, j5 = b5 >> 31), st3 = y4 + it3 | 0, st3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, it3 = Bt2(ft3, l5, dt3, Q5), ot3 = y4 + st3 | 0, ot3 = (e6 = it3 + e6 | 0) >>> 0 < it3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = Bt2(at3, m5, k5, z4 = k5 >> 31), it3 = y4 + ot3 | 0, it3 = (e6 = st3 + e6 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(ut3, d5, A8, o5), it3 = y4 + it3 | 0, kt3 = e6 = ot3 + e6 | 0, wt3 = e6 >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, e6 = Bt2(n9, f5, D5, R5), it3 = y4, ot3 = Bt2(Ct3, i4, It3, c5), it3 = y4 + it3 | 0, it3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(lt3, h5, s5, I5), st3 = y4 + it3 | 0, st3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, it3 = Bt2(p5, E5, N6, G5), ot3 = y4 + st3 | 0, ot3 = (e6 = it3 + e6 | 0) >>> 0 < it3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = Bt2(yt3, u5, C5, S5), it3 = y4 + ot3 | 0, it3 = (e6 = st3 + e6 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(P5 = g4(v5, 19), q4 = P5 >> 31, M5, L5), it3 = y4 + it3 | 0, it3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(ft3, l5, gt3, F5), it3 = y4 + it3 | 0, it3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(dt3, Q5, x5, O5), st3 = y4 + it3 | 0, st3 = (e6 = ot3 + e6 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, it3 = Bt2(at3, m5, A8, o5), ot3 = y4 + st3 | 0, ot3 = (e6 = it3 + e6 | 0) >>> 0 < it3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = Bt2(ut3, d5, Et3, T3), it3 = y4 + ot3 | 0, $3 = e6 = st3 + e6 | 0, tt3 = it3 = e6 >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, et3 = e6 = e6 + 33554432 | 0, rt3 = it3 = e6 >>> 0 < 33554432 ? it3 + 1 | 0 : it3, st3 = (67108863 & it3) << 6 | e6 >>> 26, it3 = (it3 >> 26) + wt3 | 0, kt3 = e6 = st3 + kt3 | 0, it3 = e6 >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, nt3 = e6 = e6 + 16777216 | 0, it3 = r11 + (ot3 = (st3 = e6 >>> 0 < 16777216 ? it3 + 1 | 0 : it3) >> 25) | 0, it3 = (e6 = (st3 = (33554431 & st3) << 7 | e6 >>> 25) + ct3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, vt3 = r11 = (ot3 = e6) + 33554432 | 0, e6 = it3 = r11 >>> 0 < 33554432 ? it3 + 1 | 0 : it3, a4[t7 + 24 >> 2] = ot3 - (-67108864 & r11), r11 = Bt2(n9, f5, N6, G5), it3 = y4, ot3 = Bt2(Ct3, i4, lt3, h5), st3 = y4 + it3 | 0, st3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, ot3 = (it3 = r11) + (r11 = Bt2(yt3, u5, s5, I5)) | 0, it3 = y4 + st3 | 0, it3 = r11 >>> 0 > ot3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(r11 = g4(p5, 19), _t3 = r11 >> 31, M5, L5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = (ct3 = Bt2(ft3, l5, wt3 = g4(C5, 19), V3 = wt3 >> 31)) + ot3 | 0, ot3 = y4 + it3 | 0, ot3 = st3 >>> 0 < ct3 >>> 0 ? ot3 + 1 | 0 : ot3, ct3 = Bt2(x5, O5, P5, q4), it3 = y4 + ot3 | 0, it3 = (st3 = ct3 + st3 | 0) >>> 0 < ct3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = (ct3 = Bt2(A8, o5, gt3, F5)) + st3 | 0, st3 = y4 + it3 | 0, st3 = ot3 >>> 0 < ct3 >>> 0 ? st3 + 1 | 0 : st3, ct3 = Bt2(dt3, Q5, Et3, T3), it3 = y4 + st3 | 0, it3 = (ot3 = ct3 + ot3 | 0) >>> 0 < ct3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(at3, m5, It3, c5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = (ct3 = Bt2(ut3, d5, D5, R5)) + ot3 | 0, ot3 = y4 + it3 | 0, pt3 = st3, Dt3 = st3 >>> 0 < ct3 >>> 0 ? ot3 + 1 | 0 : ot3, it3 = Bt2(yt3, u5, n9, f5), ot3 = y4, st3 = (ct3 = Bt2(Ct3, i4, _5, J5)) + it3 | 0, it3 = y4 + ot3 | 0, it3 = st3 >>> 0 < ct3 >>> 0 ? it3 + 1 | 0 : it3, ct3 = ot3 = g4(s5, 19), ot3 = (ht3 = Bt2(ot3, bt3 = ot3 >> 31, b5, j5)) + st3 | 0, st3 = y4 + it3 | 0, st3 = ot3 >>> 0 < ht3 >>> 0 ? st3 + 1 | 0 : st3, ht3 = Bt2(ft3, l5, r11, _t3), it3 = y4 + st3 | 0, it3 = (ot3 = ht3 + ot3 | 0) >>> 0 < ht3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(wt3, V3, k5, z4), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = (ht3 = Bt2(A8, o5, P5, q4)) + ot3 | 0, ot3 = y4 + it3 | 0, ot3 = st3 >>> 0 < ht3 >>> 0 ? ot3 + 1 | 0 : ot3, ht3 = Bt2(gt3, F5, B5, Y5), it3 = y4 + ot3 | 0, it3 = (st3 = ht3 + st3 | 0) >>> 0 < ht3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = (ht3 = Bt2(It3, c5, dt3, Q5)) + st3 | 0, st3 = y4 + it3 | 0, st3 = ot3 >>> 0 < ht3 >>> 0 ? st3 + 1 | 0 : st3, ht3 = Bt2(at3, m5, w5, K5), it3 = y4 + st3 | 0, it3 = (ot3 = ht3 + ot3 | 0) >>> 0 < ht3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(ut3, d5, lt3, h5), it3 = y4 + it3 | 0, St3 = ot3 = st3 + ot3 | 0, ht3 = ot3 >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, it3 = Bt2(it3 = g4(n9, 19), it3 >> 31, M5, L5), ot3 = y4, st3 = Bt2(Ct3, i4, yt3, u5), ot3 = y4 + ot3 | 0, ot3 = (it3 = st3 + it3 | 0) >>> 0 < st3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = (ct3 = Bt2(ft3, l5, ct3, bt3)) + it3 | 0, it3 = y4 + ot3 | 0, r11 = (ot3 = Bt2(r11, _t3, x5, O5)) + st3 | 0, st3 = y4 + (st3 >>> 0 < ct3 >>> 0 ? it3 + 1 | 0 : it3) | 0, st3 = r11 >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, ot3 = Bt2(A8, o5, wt3, V3), it3 = y4 + st3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(Et3, T3, P5, q4), it3 = y4 + it3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(It3, c5, gt3, F5), ot3 = y4 + it3 | 0, ot3 = (r11 = st3 + r11 | 0) >>> 0 < st3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = Bt2(dt3, Q5, D5, R5), it3 = y4 + ot3 | 0, it3 = (r11 = st3 + r11 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(at3, m5, lt3, h5), st3 = y4 + it3 | 0, st3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? st3 + 1 | 0 : st3, ot3 = Bt2(ut3, d5, N6, G5), it3 = y4 + st3 | 0, ct3 = r11 = ot3 + r11 | 0, _t3 = it3 = r11 >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, bt3 = r11 = r11 + 33554432 | 0, At3 = it3 = r11 >>> 0 < 33554432 ? it3 + 1 | 0 : it3, ot3 = (st3 = it3 >> 26) + ht3 | 0, ht3 = r11 = (it3 = (67108863 & it3) << 6 | r11 >>> 26) + St3 | 0, it3 = r11 >>> 0 < it3 >>> 0 ? ot3 + 1 | 0 : ot3, St3 = r11 = r11 + 16777216 | 0, ot3 = (33554431 & (it3 = r11 >>> 0 < 16777216 ? it3 + 1 | 0 : it3)) << 7 | r11 >>> 25, it3 = (it3 >> 25) + Dt3 | 0, it3 = (r11 = ot3 + pt3 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, Dt3 = ot3 = (st3 = r11) + 33554432 | 0, r11 = it3 = ot3 >>> 0 < 33554432 ? it3 + 1 | 0 : it3, a4[t7 + 8 >> 2] = st3 - (-67108864 & ot3), it3 = Bt2(A8, o5, n9, f5), st3 = y4, ot3 = (pt3 = Bt2(Ct3, i4, k5, z4)) + it3 | 0, it3 = y4 + st3 | 0, it3 = ot3 >>> 0 < pt3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(s5, I5, B5, Y5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(It3, c5, p5, E5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, pt3 = Bt2(C5, S5, w5, K5), st3 = y4 + it3 | 0, st3 = (ot3 = pt3 + ot3 | 0) >>> 0 < pt3 >>> 0 ? st3 + 1 | 0 : st3, it3 = (pt3 = Bt2(lt3, h5, v5, U5)) + ot3 | 0, ot3 = y4 + st3 | 0, ot3 = it3 >>> 0 < pt3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = (pt3 = Bt2(_5, J5, W3, X3)) + it3 | 0, it3 = y4 + ot3 | 0, it3 = st3 >>> 0 < pt3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = st3, st3 = Bt2(yt3, u5, H5, pt3 = H5 >> 31), it3 = y4 + it3 | 0, it3 = (ot3 = ot3 + st3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(at3, m5, b5, j5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, mt3 = Bt2(ut3, d5, ft3, l5), st3 = y4 + it3 | 0, it3 = e6 >> 26, e6 = (vt3 = (67108863 & e6) << 6 | vt3 >>> 26) + (ot3 = mt3 + ot3 | 0) | 0, ot3 = it3 + (ot3 >>> 0 < mt3 >>> 0 ? st3 + 1 | 0 : st3) | 0, it3 = (st3 = e6) >>> 0 < vt3 >>> 0 ? ot3 + 1 | 0 : ot3, vt3 = ot3 = st3 + 16777216 | 0, e6 = it3 = ot3 >>> 0 < 16777216 ? it3 + 1 | 0 : it3, a4[t7 + 28 >> 2] = st3 - (-33554432 & ot3), it3 = Bt2(lt3, h5, n9, f5), ot3 = y4, mt3 = Bt2(Ct3, i4, w5, K5), st3 = y4 + ot3 | 0, st3 = (it3 = mt3 + it3 | 0) >>> 0 < mt3 >>> 0 ? st3 + 1 | 0 : st3, mt3 = Bt2(s5, I5, _5, J5), ot3 = y4 + st3 | 0, ot3 = (it3 = mt3 + it3 | 0) >>> 0 < mt3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = (mt3 = Bt2(yt3, u5, p5, E5)) + it3 | 0, it3 = y4 + ot3 | 0, it3 = st3 >>> 0 < mt3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = st3, st3 = Bt2(wt3, V3, b5, j5), it3 = y4 + it3 | 0, it3 = (ot3 = ot3 + st3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(ft3, l5, P5, q4), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = (gt3 = Bt2(gt3, F5, k5, z4)) + ot3 | 0, st3 = y4 + it3 | 0, it3 = (dt3 = Bt2(A8, o5, dt3, Q5)) + ot3 | 0, ot3 = y4 + (ot3 >>> 0 < gt3 >>> 0 ? st3 + 1 | 0 : st3) | 0, st3 = (at3 = Bt2(at3, m5, B5, Y5)) + it3 | 0, it3 = y4 + (it3 >>> 0 < dt3 >>> 0 ? ot3 + 1 | 0 : ot3) | 0, it3 = st3 >>> 0 < at3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = st3, st3 = Bt2(ut3, d5, It3, c5), it3 = y4 + it3 | 0, at3 = ot3 = ot3 + st3 | 0, it3 = (it3 = ot3 >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3) + (ot3 = r11 >> 26) | 0, at3 = r11 = at3 + (st3 = (67108863 & r11) << 6 | Dt3 >>> 26) | 0, it3 = r11 >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, dt3 = ot3 = r11 + 16777216 | 0, r11 = st3 = ot3 >>> 0 < 16777216 ? it3 + 1 | 0 : it3, a4[t7 + 12 >> 2] = at3 - (-33554432 & ot3), it3 = Bt2(n9, f5, x5, O5), st3 = y4, ot3 = (at3 = Bt2(Ct3, i4, ft3, l5)) + it3 | 0, it3 = y4 + st3 | 0, it3 = ot3 >>> 0 < at3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(A8, o5, s5, I5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, at3 = Bt2(p5, E5, Et3, T3), st3 = y4 + it3 | 0, st3 = (ot3 = at3 + ot3 | 0) >>> 0 < at3 >>> 0 ? st3 + 1 | 0 : st3, it3 = (at3 = Bt2(It3, c5, C5, S5)) + ot3 | 0, ot3 = y4 + st3 | 0, ot3 = it3 >>> 0 < at3 >>> 0 ? ot3 + 1 | 0 : ot3, st3 = (at3 = Bt2(D5, R5, v5, U5)) + it3 | 0, it3 = y4 + ot3 | 0, it3 = st3 >>> 0 < at3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = st3, st3 = Bt2(lt3, h5, W3, X3), it3 = y4 + it3 | 0, it3 = (ot3 = ot3 + st3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(H5, pt3, N6, G5), it3 = y4 + it3 | 0, it3 = (ot3 = st3 + ot3 | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = (Et3 = Bt2(yt3, u5, at3 = Qt3, gt3 = at3 >> 31)) + ot3 | 0, st3 = y4 + it3 | 0, it3 = (ut3 = Bt2(ut3, d5, M5, L5)) + ot3 | 0, ot3 = y4 + (ot3 >>> 0 < Et3 >>> 0 ? st3 + 1 | 0 : st3) | 0, ot3 = it3 >>> 0 < ut3 >>> 0 ? ot3 + 1 | 0 : ot3, Qt3 = it3, it3 = (it3 = e6 >> 25) + ot3 | 0, it3 = (e6 = Qt3 + (st3 = (33554431 & e6) << 7 | vt3 >>> 25) | 0) >>> 0 < st3 >>> 0 ? it3 + 1 | 0 : it3, ut3 = ot3 = (st3 = e6) + 33554432 | 0, e6 = it3 = ot3 >>> 0 < 33554432 ? it3 + 1 | 0 : it3, a4[t7 + 32 >> 2] = st3 - (-67108864 & ot3), ot3 = r11 >> 25, r11 = (dt3 = (33554431 & r11) << 7 | dt3 >>> 25) + ($3 - (it3 = -67108864 & et3) | 0) | 0, it3 = ot3 + (tt3 - ((it3 >>> 0 > $3 >>> 0) + rt3 | 0) | 0) | 0, it3 = r11 >>> 0 < dt3 >>> 0 ? it3 + 1 | 0 : it3, it3 = ((67108863 & (it3 = (r11 = (ot3 = r11) + 33554432 | 0) >>> 0 < 33554432 ? it3 + 1 | 0 : it3)) << 6 | r11 >>> 26) + (st3 = kt3 - (-33554432 & nt3) | 0) | 0, a4[t7 + 20 >> 2] = it3, a4[t7 + 16 >> 2] = ot3 - (-67108864 & r11), r11 = Bt2(ft3, l5, n9, f5), it3 = y4, ot3 = Bt2(Ct3, i4, b5, j5), it3 = y4 + it3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(s5, I5, k5, z4), ot3 = y4 + it3 | 0, ot3 = (r11 = st3 + r11 | 0) >>> 0 < st3 >>> 0 ? ot3 + 1 | 0 : ot3, it3 = Bt2(A8, o5, p5, E5), st3 = y4 + ot3 | 0, st3 = (r11 = it3 + r11 | 0) >>> 0 < it3 >>> 0 ? st3 + 1 | 0 : st3, ot3 = Bt2(C5, S5, B5, Y5), it3 = y4 + st3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(It3, c5, v5, U5), it3 = y4 + it3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, ot3 = Bt2(w5, K5, W3, X3), it3 = y4 + it3 | 0, it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3, st3 = Bt2(lt3, h5, H5, pt3), ot3 = y4 + it3 | 0, ot3 = (r11 = st3 + r11 | 0) >>> 0 < st3 >>> 0 ? ot3 + 1 | 0 : ot3, it3 = Bt2(at3, gt3, _5, J5), st3 = y4 + ot3 | 0, st3 = (r11 = it3 + r11 | 0) >>> 0 < it3 >>> 0 ? st3 + 1 | 0 : st3, ot3 = Bt2(yt3, u5, Z3, Z3 >> 31), it3 = y4 + st3 | 0, it3 = (it3 = (r11 = ot3 + r11 | 0) >>> 0 < ot3 >>> 0 ? it3 + 1 | 0 : it3) + (ot3 = e6 >> 26) | 0, it3 = (e6 = (st3 = r11) + (r11 = (67108863 & e6) << 6 | ut3 >>> 26) | 0) >>> 0 < r11 >>> 0 ? it3 + 1 | 0 : it3, it3 = (e6 = (r11 = e6) + 16777216 | 0) >>> 0 < 16777216 ? it3 + 1 | 0 : it3, a4[t7 + 36 >> 2] = r11 - (-33554432 & e6), st3 = ht3 - (-33554432 & St3) | 0, ot3 = ct3 - (r11 = -67108864 & bt3) | 0, Ct3 = _t3 - ((r11 >>> 0 > ct3 >>> 0) + At3 | 0) | 0, e6 = (r11 = Bt2((33554431 & (r11 = it3)) << 7 | e6 >>> 25, it3 >>= 25, 19, 0)) + ot3 | 0, ot3 = y4 + Ct3 | 0, it3 = e6 >>> 0 < r11 >>> 0 ? ot3 + 1 | 0 : ot3, it3 = ((67108863 & (it3 = (e6 = (r11 = e6) + 33554432 | 0) >>> 0 < 33554432 ? it3 + 1 | 0 : it3)) << 6 | e6 >>> 26) + st3 | 0, a4[t7 + 4 >> 2] = it3, a4[t7 >> 2] = r11 - (-67108864 & e6);
                            }
                            function _4(t7, e6) {
                              var r11, n9, A8, i4, o5, s5, c5, h5, u5, l5, f5, p5, d5, C5, m5, B5, E5, w5, v5, _5, Q5, k5, D5, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0, Z3 = 0, $3 = 0, tt3 = 0, et3 = 0, rt3 = 0, nt3 = 0, At3 = 0, it3 = 0, ot3 = 0, st3 = 0, at3 = 0, ct3 = 0, ht3 = 0, gt3 = 0;
                              I4 = r11 = I4 - 48 | 0, b4(t7, e6), b4(t7 + 80 | 0, e6 + 40 | 0), S5 = Bt2(Y5 = (Z3 = a4[e6 + 92 >> 2]) << 1, o5 = Y5 >> 31, R5 = (x5 = a4[e6 + 84 >> 2]) << 1, n9 = R5 >> 31), M5 = y4, nt3 = j5 = a4[e6 + 88 >> 2], N6 = (H5 = Bt2(j5, q4 = j5 >> 31, j5, q4)) + S5 | 0, S5 = y4 + M5 | 0, S5 = N6 >>> 0 < H5 >>> 0 ? S5 + 1 | 0 : S5, M5 = Bt2(F5 = a4[e6 + 96 >> 2], s5 = F5 >> 31, H5 = (U5 = a4[e6 + 80 >> 2]) << 1, A8 = H5 >> 31), S5 = y4 + S5 | 0, S5 = (N6 = M5 + N6 | 0) >>> 0 < M5 >>> 0 ? S5 + 1 | 0 : S5, rt3 = a4[e6 + 108 >> 2], M5 = Bt2(L5 = g4(rt3, 38), f5 = L5 >> 31, rt3, C5 = rt3 >> 31), S5 = y4 + S5 | 0, S5 = (N6 = M5 + N6 | 0) >>> 0 < M5 >>> 0 ? S5 + 1 | 0 : S5, M5 = N6, $3 = a4[e6 + 112 >> 2], G5 = Bt2(P5 = g4($3, 19), c5 = P5 >> 31, N6 = (X3 = a4[e6 + 104 >> 2]) << 1, N6 >> 31), N6 = y4 + S5 | 0, N6 = (M5 = M5 + G5 | 0) >>> 0 < G5 >>> 0 ? N6 + 1 | 0 : N6, ot3 = a4[e6 + 116 >> 2], S5 = Bt2(G5 = g4(ot3, 38), i4 = G5 >> 31, z4 = (V3 = a4[e6 + 100 >> 2]) << 1, u5 = z4 >> 31), N6 = y4 + N6 | 0, st3 = S5 = (S5 >>> 0 > (M5 = S5 + M5 | 0) >>> 0 ? N6 + 1 : N6) << 1 | M5 >>> 31, at3 = M5 = 33554432 + (m5 = M5 << 1) | 0, ct3 = S5 = M5 >>> 0 < 33554432 ? S5 + 1 | 0 : S5, T3 = (67108863 & S5) << 6 | M5 >>> 26, W3 = S5 >> 26, S5 = Bt2(R5, n9, F5, s5), M5 = y4, N6 = (tt3 = Bt2(j5 <<= 1, l5 = j5 >> 31, Z3, B5 = Z3 >> 31)) + S5 | 0, S5 = y4 + M5 | 0, S5 = N6 >>> 0 < tt3 >>> 0 ? S5 + 1 | 0 : S5, M5 = (tt3 = Bt2(V3, p5 = V3 >> 31, H5, A8)) + N6 | 0, N6 = y4 + S5 | 0, N6 = M5 >>> 0 < tt3 >>> 0 ? N6 + 1 | 0 : N6, At3 = Bt2(P5, c5, tt3 = rt3 << 1, E5 = tt3 >> 31), S5 = y4 + N6 | 0, S5 = (M5 = At3 + M5 | 0) >>> 0 < At3 >>> 0 ? S5 + 1 | 0 : S5, N6 = Bt2(G5, i4, X3, h5 = X3 >> 31), S5 = y4 + S5 | 0, N6 = (N6 = (N6 >>> 0 > (M5 = N6 + M5 | 0) >>> 0 ? S5 + 1 : S5) << 1 | M5 >>> 31) + W3 | 0, At3 = M5 = (S5 = M5 << 1) + T3 | 0, S5 = N6 = S5 >>> 0 > M5 >>> 0 ? N6 + 1 | 0 : N6, ht3 = M5 = M5 + 16777216 | 0, T3 = (33554431 & (S5 = M5 >>> 0 < 16777216 ? S5 + 1 | 0 : S5)) << 7 | M5 >>> 25, W3 = S5 >> 25, S5 = Bt2(Y5, o5, Z3, B5), M5 = y4, N6 = (O5 = Bt2(F5, s5, j5, l5)) + S5 | 0, S5 = y4 + M5 | 0, S5 = N6 >>> 0 < O5 >>> 0 ? S5 + 1 | 0 : S5, M5 = Bt2(R5, n9, z4, u5), S5 = y4 + S5 | 0, S5 = (N6 = M5 + N6 | 0) >>> 0 < M5 >>> 0 ? S5 + 1 | 0 : S5, M5 = (O5 = Bt2(H5, A8, X3, h5)) + N6 | 0, N6 = y4 + S5 | 0, N6 = M5 >>> 0 < O5 >>> 0 ? N6 + 1 | 0 : N6, O5 = Bt2(P5, c5, $3, d5 = $3 >> 31), S5 = y4 + N6 | 0, S5 = (M5 = O5 + M5 | 0) >>> 0 < O5 >>> 0 ? S5 + 1 | 0 : S5, O5 = Bt2(G5, i4, tt3, E5), N6 = y4 + S5 | 0, N6 = ((M5 = O5 + M5 | 0) >>> 0 < O5 >>> 0 ? N6 + 1 : N6) << 1 | M5 >>> 31, M5 = (S5 = T3) + (T3 = M5 << 1) | 0, S5 = N6 + W3 | 0, S5 = M5 >>> 0 < T3 >>> 0 ? S5 + 1 | 0 : S5, W3 = M5, O5 = N6 = M5 + 33554432 | 0, M5 = S5 = N6 >>> 0 < 33554432 ? S5 + 1 | 0 : S5, a4[t7 + 144 >> 2] = W3 - (-67108864 & N6), W3 = Bt2(S5 = g4(V3, 38), S5 >> 31, V3, p5), T3 = y4, U5 = Bt2(S5 = U5, N6 = S5 >> 31, S5, N6), N6 = y4 + T3 | 0, N6 = (S5 = U5 + W3 | 0) >>> 0 < U5 >>> 0 ? N6 + 1 | 0 : N6, T3 = (et3 = Bt2(U5 = g4(X3, 19), w5 = U5 >> 31, W3 = F5 << 1, v5 = W3 >> 31)) + S5 | 0, S5 = y4 + N6 | 0, S5 = T3 >>> 0 < et3 >>> 0 ? S5 + 1 | 0 : S5, N6 = T3, T3 = Bt2(Y5, o5, L5, f5), S5 = y4 + S5 | 0, S5 = (N6 = N6 + T3 | 0) >>> 0 < T3 >>> 0 ? S5 + 1 | 0 : S5, T3 = (et3 = Bt2(P5, c5, j5, l5)) + N6 | 0, N6 = y4 + S5 | 0, N6 = T3 >>> 0 < et3 >>> 0 ? N6 + 1 | 0 : N6, et3 = Bt2(R5, n9, G5, i4), S5 = y4 + N6 | 0, et3 = S5 = ((T3 = et3 + T3 | 0) >>> 0 < et3 >>> 0 ? S5 + 1 : S5) << 1 | T3 >>> 31, k5 = N6 = (T3 = 33554432 + (_5 = T3 << 1) | 0) >>> 0 < 33554432 ? S5 + 1 | 0 : S5, it3 = (67108863 & N6) << 6 | T3 >>> 26, gt3 = N6 >> 26, S5 = Bt2(U5, w5, z4, u5), K5 = y4, J5 = x5, N6 = (x5 = Bt2(H5, A8, x5, Q5 = x5 >> 31)) + S5 | 0, S5 = y4 + K5 | 0, S5 = N6 >>> 0 < x5 >>> 0 ? S5 + 1 | 0 : S5, x5 = (K5 = Bt2(F5, s5, L5, f5)) + N6 | 0, N6 = y4 + S5 | 0, N6 = x5 >>> 0 < K5 >>> 0 ? N6 + 1 | 0 : N6, K5 = Bt2(P5, c5, Y5, o5), S5 = y4 + N6 | 0, S5 = (x5 = K5 + x5 | 0) >>> 0 < K5 >>> 0 ? S5 + 1 | 0 : S5, K5 = Bt2(G5, i4, nt3, q4), N6 = y4 + S5 | 0, N6 = ((x5 = K5 + x5 | 0) >>> 0 < K5 >>> 0 ? N6 + 1 : N6) << 1 | x5 >>> 31, x5 = (S5 = it3) + (it3 = x5 << 1) | 0, S5 = N6 + gt3 | 0, S5 = x5 >>> 0 < it3 >>> 0 ? S5 + 1 | 0 : S5, gt3 = x5, it3 = x5 = x5 + 16777216 | 0, D5 = (33554431 & (S5 = x5 >>> 0 < 16777216 ? S5 + 1 | 0 : S5)) << 7 | x5 >>> 25, K5 = S5 >> 25, S5 = Bt2(H5, A8, nt3, q4), x5 = y4, N6 = (J5 = Bt2(R5, n9, J5, Q5)) + S5 | 0, S5 = y4 + x5 | 0, x5 = (U5 = Bt2(U5, w5, X3, h5)) + N6 | 0, N6 = y4 + (N6 >>> 0 < J5 >>> 0 ? S5 + 1 | 0 : S5) | 0, N6 = x5 >>> 0 < U5 >>> 0 ? N6 + 1 | 0 : N6, U5 = Bt2(z4, u5, L5, f5), S5 = y4 + N6 | 0, S5 = (x5 = U5 + x5 | 0) >>> 0 < U5 >>> 0 ? S5 + 1 | 0 : S5, N6 = x5, x5 = Bt2(P5, c5, W3, v5), S5 = y4 + S5 | 0, S5 = (N6 = N6 + x5 | 0) >>> 0 < x5 >>> 0 ? S5 + 1 | 0 : S5, x5 = (U5 = Bt2(G5, i4, Y5, o5)) + N6 | 0, N6 = y4 + S5 | 0, S5 = (S5 = (x5 >>> 0 < U5 >>> 0 ? N6 + 1 : N6) << 1 | x5 >>> 31) + K5 | 0, J5 = x5 = (N6 = x5 << 1) + D5 | 0, S5 = N6 >>> 0 > x5 >>> 0 ? S5 + 1 | 0 : S5, x5 = (U5 = x5 + 33554432 | 0) >>> 0 < 33554432 ? S5 + 1 | 0 : S5, a4[t7 + 128 >> 2] = J5 - (-67108864 & U5), S5 = Bt2(j5, l5, V3, p5), N6 = y4, J5 = Bt2(F5, s5, Y5, o5), N6 = y4 + N6 | 0, N6 = (S5 = J5 + S5 | 0) >>> 0 < J5 >>> 0 ? N6 + 1 | 0 : N6, J5 = (K5 = Bt2(R5, n9, X3, h5)) + S5 | 0, S5 = y4 + N6 | 0, S5 = J5 >>> 0 < K5 >>> 0 ? S5 + 1 | 0 : S5, K5 = Bt2(H5, A8, rt3, C5), N6 = y4 + S5 | 0, N6 = (J5 = K5 + J5 | 0) >>> 0 < K5 >>> 0 ? N6 + 1 | 0 : N6, K5 = Bt2(G5, i4, $3, d5), S5 = y4 + N6 | 0, S5 = (N6 = M5 >> 26) + (((J5 = K5 + J5 | 0) >>> 0 < K5 >>> 0 ? S5 + 1 : S5) << 1 | J5 >>> 31) | 0, S5 = (M5 = (O5 = (67108863 & M5) << 6 | O5 >>> 26) + (J5 << 1) | 0) >>> 0 < O5 >>> 0 ? S5 + 1 | 0 : S5, O5 = M5, N6 = S5, J5 = S5 = M5 + 16777216 | 0, M5 = N6 = S5 >>> 0 < 16777216 ? N6 + 1 | 0 : N6, a4[t7 + 148 >> 2] = O5 - (-33554432 & S5), S5 = Bt2(H5, A8, Z3, B5), Z3 = y4, N6 = (q4 = Bt2(R5, n9, nt3, q4)) + S5 | 0, S5 = y4 + Z3 | 0, S5 = N6 >>> 0 < q4 >>> 0 ? S5 + 1 | 0 : S5, L5 = Bt2(X3, h5, L5, f5), S5 = y4 + S5 | 0, S5 = (N6 = L5 + N6 | 0) >>> 0 < L5 >>> 0 ? S5 + 1 | 0 : S5, P5 = (L5 = Bt2(P5, c5, z4, u5)) + N6 | 0, N6 = y4 + S5 | 0, N6 = P5 >>> 0 < L5 >>> 0 ? N6 + 1 | 0 : N6, S5 = P5, P5 = Bt2(G5, i4, F5, s5), N6 = y4 + N6 | 0, N6 = ((S5 = S5 + P5 | 0) >>> 0 < P5 >>> 0 ? N6 + 1 : N6) << 1, P5 = S5, S5 = (S5 = N6 | S5 >>> 31) + (N6 = x5 >> 26) | 0, S5 = (x5 = (O5 = P5 << 1) + (P5 = (67108863 & x5) << 6 | U5 >>> 26) | 0) >>> 0 < P5 >>> 0 ? S5 + 1 | 0 : S5, P5 = x5, L5 = N6 = x5 + 16777216 | 0, x5 = S5 = N6 >>> 0 < 16777216 ? S5 + 1 | 0 : S5, a4[t7 + 132 >> 2] = P5 - (-33554432 & N6), S5 = Bt2(X3, h5, j5, l5), P5 = y4, N6 = (F5 = Bt2(F5, s5, F5, s5)) + S5 | 0, S5 = y4 + P5 | 0, S5 = N6 >>> 0 < F5 >>> 0 ? S5 + 1 | 0 : S5, F5 = Bt2(Y5, o5, z4, u5), S5 = y4 + S5 | 0, S5 = (N6 = F5 + N6 | 0) >>> 0 < F5 >>> 0 ? S5 + 1 | 0 : S5, F5 = Bt2(R5, n9, tt3, E5), S5 = y4 + S5 | 0, S5 = (N6 = F5 + N6 | 0) >>> 0 < F5 >>> 0 ? S5 + 1 | 0 : S5, F5 = (P5 = Bt2(H5, A8, $3, d5)) + N6 | 0, N6 = y4 + S5 | 0, N6 = F5 >>> 0 < P5 >>> 0 ? N6 + 1 | 0 : N6, S5 = F5, F5 = Bt2(F5 = G5, i4, G5 = ot3, z4 = G5 >> 31), N6 = y4 + N6 | 0, N6 = ((S5 = S5 + F5 | 0) >>> 0 < F5 >>> 0 ? N6 + 1 : N6) << 1, F5 = S5, S5 = (S5 = N6 | S5 >>> 31) + (N6 = M5 >> 25) | 0, S5 = (M5 = (P5 = F5 << 1) + (F5 = (33554431 & M5) << 7 | J5 >>> 25) | 0) >>> 0 < F5 >>> 0 ? S5 + 1 | 0 : S5, F5 = M5, P5 = N6 = M5 + 33554432 | 0, M5 = S5 = N6 >>> 0 < 33554432 ? S5 + 1 | 0 : S5, a4[t7 + 152 >> 2] = F5 - (-67108864 & N6), N6 = m5 - (S5 = -67108864 & at3) | 0, F5 = st3 - ((S5 >>> 0 > m5 >>> 0) + ct3 | 0) | 0, S5 = x5 >> 25, x5 = (L5 = (33554431 & x5) << 7 | L5 >>> 25) + N6 | 0, N6 = S5 + F5 | 0, F5 = x5, S5 = N6 = x5 >>> 0 < L5 >>> 0 ? N6 + 1 | 0 : N6, S5 = ((67108863 & (S5 = (x5 = x5 + 33554432 | 0) >>> 0 < 33554432 ? S5 + 1 | 0 : S5)) << 6 | x5 >>> 26) + (q4 = At3 - (-33554432 & ht3) | 0) | 0, a4[t7 + 140 >> 2] = S5, a4[t7 + 136 >> 2] = F5 - (-67108864 & x5), S5 = Bt2(Y5, o5, X3, h5), N6 = y4, x5 = Bt2(V3, p5, W3, v5), N6 = y4 + N6 | 0, N6 = (S5 = x5 + S5 | 0) >>> 0 < x5 >>> 0 ? N6 + 1 | 0 : N6, x5 = (Y5 = Bt2(j5, l5, rt3, C5)) + S5 | 0, S5 = y4 + N6 | 0, S5 = x5 >>> 0 < Y5 >>> 0 ? S5 + 1 | 0 : S5, R5 = Bt2(R5, n9, $3, d5), N6 = y4 + S5 | 0, N6 = (x5 = R5 + x5 | 0) >>> 0 < R5 >>> 0 ? N6 + 1 | 0 : N6, R5 = Bt2(H5, A8, G5, z4), S5 = y4 + N6 | 0, S5 = (S5 = ((x5 = R5 + x5 | 0) >>> 0 < R5 >>> 0 ? S5 + 1 : S5) << 1 | x5 >>> 31) + (N6 = M5 >> 26) | 0, N6 = (M5 = (F5 = x5 << 1) + (x5 = (67108863 & M5) << 6 | P5 >>> 26) | 0) >>> 0 < x5 >>> 0 ? S5 + 1 | 0 : S5, N6 = (S5 = M5 + 16777216 | 0) >>> 0 < 16777216 ? N6 + 1 | 0 : N6, a4[t7 + 156 >> 2] = M5 - (-33554432 & S5), x5 = gt3 - (-33554432 & it3) | 0, R5 = _5 - (M5 = -67108864 & T3) | 0, H5 = et3 - ((M5 >>> 0 > _5 >>> 0) + k5 | 0) | 0, M5 = Bt2((33554431 & N6) << 7 | S5 >>> 25, N6 >> 25, 19, 0), N6 = y4 + H5 | 0, N6 = (S5 = M5 + R5 | 0) >>> 0 < M5 >>> 0 ? N6 + 1 | 0 : N6, M5 = S5, N6 = ((67108863 & (N6 = (S5 = S5 + 33554432 | 0) >>> 0 < 33554432 ? N6 + 1 | 0 : N6)) << 6 | S5 >>> 26) + x5 | 0, a4[t7 + 124 >> 2] = N6, a4[t7 + 120 >> 2] = M5 - (-67108864 & S5), S5 = a4[e6 + 40 >> 2], N6 = a4[e6 + 44 >> 2], M5 = a4[e6 + 4 >> 2], x5 = a4[e6 + 48 >> 2], R5 = a4[e6 + 8 >> 2], H5 = a4[e6 + 52 >> 2], G5 = a4[e6 + 12 >> 2], Y5 = a4[e6 + 56 >> 2], F5 = a4[e6 + 16 >> 2], P5 = a4[e6 + 60 >> 2], X3 = a4[e6 + 20 >> 2], z4 = a4[e6 - -64 >> 2], j5 = a4[e6 + 24 >> 2], L5 = a4[e6 + 68 >> 2], q4 = a4[e6 + 28 >> 2], V3 = a4[e6 + 72 >> 2], $3 = a4[e6 + 32 >> 2], nt3 = a4[e6 >> 2], a4[t7 + 76 >> 2] = a4[e6 + 76 >> 2] + a4[e6 + 36 >> 2], a4[t7 + 72 >> 2] = V3 + $3, a4[t7 + 68 >> 2] = L5 + q4, a4[(rt3 = t7 - -64 | 0) >> 2] = j5 + z4, a4[t7 + 60 >> 2] = P5 + X3, a4[t7 + 56 >> 2] = F5 + Y5, a4[t7 + 52 >> 2] = G5 + H5, a4[t7 + 48 >> 2] = x5 + R5, a4[t7 + 44 >> 2] = N6 + M5, a4[(e6 = t7 + 40 | 0) >> 2] = S5 + nt3, b4(r11, e6), S5 = a4[t7 + 80 >> 2], N6 = a4[t7 + 4 >> 2], M5 = a4[t7 + 84 >> 2], x5 = a4[t7 + 8 >> 2], R5 = a4[t7 + 88 >> 2], H5 = a4[t7 + 12 >> 2], G5 = a4[t7 + 92 >> 2], Y5 = a4[t7 + 16 >> 2], F5 = a4[t7 + 96 >> 2], P5 = a4[t7 + 20 >> 2], X3 = a4[t7 + 100 >> 2], z4 = a4[t7 + 24 >> 2], j5 = a4[t7 + 104 >> 2], L5 = a4[t7 + 28 >> 2], q4 = a4[t7 + 108 >> 2], V3 = a4[t7 + 32 >> 2], $3 = a4[t7 + 112 >> 2], nt3 = a4[t7 >> 2], U5 = (Z3 = a4[t7 + 116 >> 2]) - (tt3 = a4[t7 + 36 >> 2]) | 0, a4[t7 + 116 >> 2] = U5, W3 = $3 - V3 | 0, a4[t7 + 112 >> 2] = W3, T3 = q4 - L5 | 0, a4[t7 + 108 >> 2] = T3, ot3 = j5 - z4 | 0, a4[t7 + 104 >> 2] = ot3, st3 = X3 - P5 | 0, a4[t7 + 100 >> 2] = st3, at3 = F5 - Y5 | 0, a4[t7 + 96 >> 2] = at3, ct3 = G5 - H5 | 0, a4[t7 + 92 >> 2] = ct3, At3 = R5 - x5 | 0, a4[t7 + 88 >> 2] = At3, ht3 = M5 - N6 | 0, a4[t7 + 84 >> 2] = ht3, O5 = S5 - nt3 | 0, a4[t7 + 80 >> 2] = O5, Z3 = Z3 + tt3 | 0, a4[t7 + 76 >> 2] = Z3, V3 = V3 + $3 | 0, a4[t7 + 72 >> 2] = V3, L5 = L5 + q4 | 0, a4[t7 + 68 >> 2] = L5, z4 = j5 + z4 | 0, a4[rt3 >> 2] = z4, P5 = P5 + X3 | 0, a4[t7 + 60 >> 2] = P5, Y5 = F5 + Y5 | 0, a4[t7 + 56 >> 2] = Y5, H5 = G5 + H5 | 0, a4[t7 + 52 >> 2] = H5, x5 = x5 + R5 | 0, a4[t7 + 48 >> 2] = x5, N6 = N6 + M5 | 0, a4[t7 + 44 >> 2] = N6, M5 = e6, e6 = S5 + nt3 | 0, a4[M5 >> 2] = e6, S5 = a4[r11 >> 2], M5 = a4[r11 + 4 >> 2], R5 = a4[r11 + 8 >> 2], G5 = a4[r11 + 12 >> 2], F5 = a4[r11 + 16 >> 2], X3 = a4[r11 + 20 >> 2], j5 = a4[r11 + 24 >> 2], q4 = a4[r11 + 28 >> 2], $3 = a4[r11 + 32 >> 2], a4[t7 + 36 >> 2] = a4[r11 + 36 >> 2] - Z3, a4[t7 + 32 >> 2] = $3 - V3, a4[t7 + 28 >> 2] = q4 - L5, a4[t7 + 24 >> 2] = j5 - z4, a4[t7 + 20 >> 2] = X3 - P5, a4[t7 + 16 >> 2] = F5 - Y5, a4[t7 + 12 >> 2] = G5 - H5, a4[t7 + 8 >> 2] = R5 - x5, a4[t7 + 4 >> 2] = M5 - N6, a4[t7 >> 2] = S5 - e6, e6 = a4[t7 + 120 >> 2], S5 = a4[t7 + 124 >> 2], N6 = a4[t7 + 128 >> 2], M5 = a4[t7 + 132 >> 2], x5 = a4[t7 + 136 >> 2], R5 = a4[t7 + 140 >> 2], H5 = a4[t7 + 144 >> 2], G5 = a4[t7 + 148 >> 2], Y5 = a4[t7 + 152 >> 2], a4[t7 + 156 >> 2] = a4[t7 + 156 >> 2] - U5, a4[t7 + 152 >> 2] = Y5 - W3, a4[t7 + 148 >> 2] = G5 - T3, a4[t7 + 144 >> 2] = H5 - ot3, a4[t7 + 140 >> 2] = R5 - st3, a4[t7 + 136 >> 2] = x5 - at3, a4[t7 + 132 >> 2] = M5 - ct3, a4[t7 + 128 >> 2] = N6 - At3, a4[t7 + 124 >> 2] = S5 - ht3, a4[t7 + 120 >> 2] = e6 - O5, I4 = r11 + 48 | 0;
                            }
                            function Q4(t7, e6, r11, n9) {
                              var A8 = 0, i4 = 0, o5 = 0, s5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0;
                              for (A8 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24, a4[r11 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24, a4[r11 + 4 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, a4[r11 + 8 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, a4[r11 + 12 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, a4[r11 + 16 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24, a4[r11 + 20 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 24 | 0] | c4[e6 + 25 | 0] << 8 | c4[e6 + 26 | 0] << 16 | c4[e6 + 27 | 0] << 24, a4[r11 + 24 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24, a4[r11 + 28 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 32 | 0] | c4[e6 + 33 | 0] << 8 | c4[e6 + 34 | 0] << 16 | c4[e6 + 35 | 0] << 24, a4[r11 + 32 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 36 | 0] | c4[e6 + 37 | 0] << 8 | c4[e6 + 38 | 0] << 16 | c4[e6 + 39 | 0] << 24, a4[r11 + 36 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 40 | 0] | c4[e6 + 41 | 0] << 8 | c4[e6 + 42 | 0] << 16 | c4[e6 + 43 | 0] << 24, a4[r11 + 40 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 44 | 0] | c4[e6 + 45 | 0] << 8 | c4[e6 + 46 | 0] << 16 | c4[e6 + 47 | 0] << 24, a4[r11 + 44 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 48 | 0] | c4[e6 + 49 | 0] << 8 | c4[e6 + 50 | 0] << 16 | c4[e6 + 51 | 0] << 24, a4[r11 + 48 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 52 | 0] | c4[e6 + 53 | 0] << 8 | c4[e6 + 54 | 0] << 16 | c4[e6 + 55 | 0] << 24, a4[r11 + 52 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, A8 = c4[e6 + 56 | 0] | c4[e6 + 57 | 0] << 8 | c4[e6 + 58 | 0] << 16 | c4[e6 + 59 | 0] << 24, a4[r11 + 56 >> 2] = A8 << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, e6 = c4[e6 + 60 | 0] | c4[e6 + 61 | 0] << 8 | c4[e6 + 62 | 0] << 16 | c4[e6 + 63 | 0] << 24, a4[r11 + 60 >> 2] = e6 << 24 | (65280 & e6) << 8 | e6 >>> 8 & 65280 | e6 >>> 24, e6 = a4[t7 + 28 >> 2], a4[n9 + 24 >> 2] = a4[t7 + 24 >> 2], a4[n9 + 28 >> 2] = e6, e6 = a4[t7 + 20 >> 2], a4[n9 + 16 >> 2] = a4[t7 + 16 >> 2], a4[n9 + 20 >> 2] = e6, e6 = a4[t7 + 12 >> 2], a4[n9 + 8 >> 2] = a4[t7 + 8 >> 2], a4[n9 + 12 >> 2] = e6, e6 = a4[t7 + 4 >> 2], a4[n9 >> 2] = a4[t7 >> 2], a4[n9 + 4 >> 2] = e6; h5 = a4[n9 + 28 >> 2], A8 = (e6 = E5 << 2) + r11 | 0, o5 = a4[n9 + 16 >> 2], g5 = a4[A8 >> 2] + (Gt2(o5, 26) ^ Gt2(o5, 21) ^ Gt2(o5, 7)) | 0, l5 = (h5 = ((i4 = a4[e6 + 33968 >> 2] + g5 | 0) + (o5 & ((g5 = a4[n9 + 24 >> 2]) ^ (f5 = a4[n9 + 20 >> 2])) ^ g5) | 0) + h5 | 0) + a4[n9 + 12 >> 2] | 0, a4[n9 + 12 >> 2] = l5, h5 = (d5 = h5 + (Gt2(u5 = a4[n9 >> 2], 30) ^ Gt2(u5, 19) ^ Gt2(u5, 10)) | 0) + (u5 & ((i4 = a4[n9 + 8 >> 2]) | (s5 = a4[n9 + 4 >> 2])) | i4 & s5) | 0, a4[n9 + 28 >> 2] = h5, i4 = (d5 = i4) + (g5 = (a4[(y5 = (i4 = 4 | e6) + r11 | 0) >> 2] + ((g5 + (f5 ^ l5 & (o5 ^ f5)) | 0) + (Gt2(l5, 26) ^ Gt2(l5, 21) ^ Gt2(l5, 7)) | 0) | 0) + a4[i4 + 33968 >> 2] | 0) | 0, a4[n9 + 8 >> 2] = i4, g5 = (g5 + (h5 & (s5 | u5) | s5 & u5) | 0) + (Gt2(h5, 30) ^ Gt2(h5, 19) ^ Gt2(h5, 10)) | 0, a4[n9 + 24 >> 2] = g5, f5 = (d5 = s5) + (s5 = (((f5 + a4[(B5 = (s5 = 8 | e6) + r11 | 0) >> 2] | 0) + a4[s5 + 33968 >> 2] | 0) + (o5 ^ i4 & (o5 ^ l5)) | 0) + (Gt2(i4, 26) ^ Gt2(i4, 21) ^ Gt2(i4, 7)) | 0) | 0, a4[n9 + 4 >> 2] = f5, s5 = s5 + ((g5 & (h5 | u5) | h5 & u5) + (Gt2(g5, 30) ^ Gt2(g5, 19) ^ Gt2(g5, 10)) | 0) | 0, a4[n9 + 20 >> 2] = s5, o5 = (d5 = u5) + (u5 = (((o5 + a4[(w5 = (u5 = 12 | e6) + r11 | 0) >> 2] | 0) + a4[u5 + 33968 >> 2] | 0) + (l5 ^ f5 & (i4 ^ l5)) | 0) + (Gt2(f5, 26) ^ Gt2(f5, 21) ^ Gt2(f5, 7)) | 0) | 0, a4[n9 >> 2] = o5, u5 = u5 + ((s5 & (h5 | g5) | h5 & g5) + (Gt2(s5, 30) ^ Gt2(s5, 19) ^ Gt2(s5, 10)) | 0) | 0, a4[n9 + 16 >> 2] = u5, l5 = (p5 = ((((d5 = l5) + a4[(v5 = (l5 = 16 | e6) + r11 | 0) >> 2] | 0) + a4[l5 + 33968 >> 2] | 0) + (i4 ^ o5 & (i4 ^ f5)) | 0) + (Gt2(o5, 26) ^ Gt2(o5, 21) ^ Gt2(o5, 7)) | 0) + ((u5 & (s5 | g5) | s5 & g5) + (Gt2(u5, 30) ^ Gt2(u5, 19) ^ Gt2(u5, 10)) | 0) | 0, a4[n9 + 12 >> 2] = l5, p5 = h5 + p5 | 0, a4[n9 + 28 >> 2] = p5, h5 = (i4 = (((i4 + a4[(_5 = (h5 = 20 | e6) + r11 | 0) >> 2] | 0) + a4[h5 + 33968 >> 2] | 0) + (f5 ^ p5 & (o5 ^ f5)) | 0) + (Gt2(p5, 26) ^ Gt2(p5, 21) ^ Gt2(p5, 7)) | 0) + ((l5 & (s5 | u5) | s5 & u5) + (Gt2(l5, 30) ^ Gt2(l5, 19) ^ Gt2(l5, 10)) | 0) | 0, a4[n9 + 8 >> 2] = h5, i4 = i4 + g5 | 0, a4[n9 + 24 >> 2] = i4, g5 = (f5 = (((f5 + a4[(Q5 = (g5 = 24 | e6) + r11 | 0) >> 2] | 0) + a4[g5 + 33968 >> 2] | 0) + (o5 ^ i4 & (o5 ^ p5)) | 0) + (Gt2(i4, 26) ^ Gt2(i4, 21) ^ Gt2(i4, 7)) | 0) + ((h5 & (u5 | l5) | u5 & l5) + (Gt2(h5, 30) ^ Gt2(h5, 19) ^ Gt2(h5, 10)) | 0) | 0, a4[n9 + 4 >> 2] = g5, f5 = s5 + f5 | 0, a4[n9 + 20 >> 2] = f5, s5 = (o5 = (((o5 + a4[(b5 = (s5 = 28 | e6) + r11 | 0) >> 2] | 0) + a4[s5 + 33968 >> 2] | 0) + (p5 ^ f5 & (i4 ^ p5)) | 0) + (Gt2(f5, 26) ^ Gt2(f5, 21) ^ Gt2(f5, 7)) | 0) + ((g5 & (h5 | l5) | h5 & l5) + (Gt2(g5, 30) ^ Gt2(g5, 19) ^ Gt2(g5, 10)) | 0) | 0, a4[n9 >> 2] = s5, o5 = o5 + u5 | 0, a4[n9 + 16 >> 2] = o5, u5 = (p5 = (((p5 + a4[(k5 = (u5 = 32 | e6) + r11 | 0) >> 2] | 0) + a4[u5 + 33968 >> 2] | 0) + (i4 ^ o5 & (i4 ^ f5)) | 0) + (Gt2(o5, 26) ^ Gt2(o5, 21) ^ Gt2(o5, 7)) | 0) + ((s5 & (h5 | g5) | h5 & g5) + (Gt2(s5, 30) ^ Gt2(s5, 19) ^ Gt2(s5, 10)) | 0) | 0, a4[n9 + 28 >> 2] = u5, p5 = l5 + p5 | 0, a4[n9 + 12 >> 2] = p5, l5 = (i4 = (((i4 + a4[(D5 = (l5 = 36 | e6) + r11 | 0) >> 2] | 0) + a4[l5 + 33968 >> 2] | 0) + (f5 ^ p5 & (o5 ^ f5)) | 0) + (Gt2(p5, 26) ^ Gt2(p5, 21) ^ Gt2(p5, 7)) | 0) + ((u5 & (s5 | g5) | s5 & g5) + (Gt2(u5, 30) ^ Gt2(u5, 19) ^ Gt2(u5, 10)) | 0) | 0, a4[n9 + 24 >> 2] = l5, i4 = i4 + h5 | 0, a4[n9 + 8 >> 2] = i4, h5 = (f5 = (((f5 + a4[(S5 = (h5 = 40 | e6) + r11 | 0) >> 2] | 0) + a4[h5 + 33968 >> 2] | 0) + (o5 ^ i4 & (o5 ^ p5)) | 0) + (Gt2(i4, 26) ^ Gt2(i4, 21) ^ Gt2(i4, 7)) | 0) + ((l5 & (s5 | u5) | s5 & u5) + (Gt2(l5, 30) ^ Gt2(l5, 19) ^ Gt2(l5, 10)) | 0) | 0, a4[n9 + 20 >> 2] = h5, f5 = g5 + f5 | 0, a4[n9 + 4 >> 2] = f5, d5 = (g5 = 44 | e6) + r11 | 0, g5 = (o5 = ((o5 + (a4[g5 + 33968 >> 2] + a4[d5 >> 2] | 0) | 0) + (p5 ^ f5 & (i4 ^ p5)) | 0) + (Gt2(f5, 26) ^ Gt2(f5, 21) ^ Gt2(f5, 7)) | 0) + ((h5 & (u5 | l5) | u5 & l5) + (Gt2(h5, 30) ^ Gt2(h5, 19) ^ Gt2(h5, 10)) | 0) | 0, a4[n9 + 16 >> 2] = g5, s5 = s5 + o5 | 0, a4[n9 >> 2] = s5, m5 = (o5 = 48 | e6) + r11 | 0, o5 = (p5 = ((p5 + (a4[o5 + 33968 >> 2] + a4[m5 >> 2] | 0) | 0) + (i4 ^ s5 & (i4 ^ f5)) | 0) + (Gt2(s5, 26) ^ Gt2(s5, 21) ^ Gt2(s5, 7)) | 0) + ((g5 & (h5 | l5) | h5 & l5) + (Gt2(g5, 30) ^ Gt2(g5, 19) ^ Gt2(g5, 10)) | 0) | 0, a4[n9 + 12 >> 2] = o5, u5 = u5 + p5 | 0, a4[n9 + 28 >> 2] = u5, C5 = (p5 = 52 | e6) + r11 | 0, i4 = (p5 = (((a4[p5 + 33968 >> 2] + a4[C5 >> 2] | 0) + i4 | 0) + (f5 ^ u5 & (s5 ^ f5)) | 0) + (Gt2(u5, 26) ^ Gt2(u5, 21) ^ Gt2(u5, 7)) | 0) + ((o5 & (h5 | g5) | h5 & g5) + (Gt2(o5, 30) ^ Gt2(o5, 19) ^ Gt2(o5, 10)) | 0) | 0, a4[n9 + 8 >> 2] = i4, l5 = l5 + p5 | 0, a4[n9 + 24 >> 2] = l5, p5 = (I5 = 56 | e6) + r11 | 0, f5 = (I5 = (((a4[I5 + 33968 >> 2] + a4[p5 >> 2] | 0) + f5 | 0) + (s5 ^ l5 & (s5 ^ u5)) | 0) + (Gt2(l5, 26) ^ Gt2(l5, 21) ^ Gt2(l5, 7)) | 0) + ((i4 & (g5 | o5) | g5 & o5) + (Gt2(i4, 30) ^ Gt2(i4, 19) ^ Gt2(i4, 10)) | 0) | 0, a4[n9 + 4 >> 2] = f5, h5 = h5 + I5 | 0, a4[n9 + 20 >> 2] = h5, I5 = (e6 |= 60) + r11 | 0, h5 = (e6 = ((s5 + (a4[e6 + 33968 >> 2] + a4[I5 >> 2] | 0) | 0) + (u5 ^ h5 & (u5 ^ l5)) | 0) + (Gt2(h5, 26) ^ Gt2(h5, 21) ^ Gt2(h5, 7)) | 0) + ((f5 & (i4 | o5) | i4 & o5) + (Gt2(f5, 30) ^ Gt2(f5, 19) ^ Gt2(f5, 10)) | 0) | 0, a4[n9 >> 2] = h5, a4[n9 + 16 >> 2] = e6 + g5, 48 != (0 | E5); )
                                s5 = a4[D5 >> 2], E5 = E5 + 16 | 0, e6 = a4[p5 >> 2], h5 = (i4 = a4[A8 >> 2] + (s5 + (Gt2(e6, 15) ^ Gt2(e6, 13) ^ e6 >>> 10) | 0) | 0) + (Gt2(g5 = a4[y5 >> 2], 25) ^ Gt2(g5, 14) ^ g5 >>> 3) | 0, a4[(E5 << 2) + r11 >> 2] = h5, l5 = (o5 = (i4 = (u5 = a4[S5 >> 2]) + g5 | 0) + (Gt2(g5 = a4[I5 >> 2], 15) ^ Gt2(g5, 13) ^ g5 >>> 10) | 0) + (Gt2(i4 = a4[B5 >> 2], 25) ^ Gt2(i4, 14) ^ i4 >>> 3) | 0, a4[A8 + 68 >> 2] = l5, f5 = (d5 = ((o5 = i4) + (i4 = a4[d5 >> 2]) | 0) + (Gt2(h5, 15) ^ Gt2(h5, 13) ^ h5 >>> 10) | 0) + (Gt2(o5 = a4[w5 >> 2], 25) ^ Gt2(o5, 14) ^ o5 >>> 3) | 0, a4[A8 + 72 >> 2] = f5, p5 = (I5 = ((d5 = o5) + (o5 = a4[m5 >> 2]) | 0) + (Gt2(l5, 15) ^ Gt2(l5, 13) ^ l5 >>> 10) | 0) + (Gt2(d5 = a4[v5 >> 2], 25) ^ Gt2(d5, 14) ^ d5 >>> 3) | 0, a4[A8 + 76 >> 2] = p5, m5 = (I5 = ((I5 = d5) + (d5 = a4[C5 >> 2]) | 0) + (Gt2(f5, 15) ^ Gt2(f5, 13) ^ f5 >>> 10) | 0) + (Gt2(C5 = a4[_5 >> 2], 25) ^ Gt2(C5, 14) ^ C5 >>> 3) | 0, a4[A8 + 80 >> 2] = m5, C5 = (y5 = (e6 + C5 | 0) + (Gt2(p5, 15) ^ Gt2(p5, 13) ^ p5 >>> 10) | 0) + (Gt2(I5 = a4[Q5 >> 2], 25) ^ Gt2(I5, 14) ^ I5 >>> 3) | 0, a4[A8 + 84 >> 2] = C5, I5 = ((g5 + I5 | 0) + (Gt2(B5 = a4[b5 >> 2], 25) ^ Gt2(B5, 14) ^ B5 >>> 3) | 0) + (Gt2(m5, 15) ^ Gt2(m5, 13) ^ m5 >>> 10) | 0, a4[A8 + 88 >> 2] = I5, l5 = ((y5 = a4[k5 >> 2]) + (l5 + (Gt2(s5, 25) ^ Gt2(s5, 14) ^ s5 >>> 3) | 0) | 0) + (Gt2(I5, 15) ^ Gt2(I5, 13) ^ I5 >>> 10) | 0, a4[A8 + 96 >> 2] = l5, y5 = ((h5 + B5 | 0) + (Gt2(y5, 25) ^ Gt2(y5, 14) ^ y5 >>> 3) | 0) + (Gt2(C5, 15) ^ Gt2(C5, 13) ^ C5 >>> 10) | 0, a4[A8 + 92 >> 2] = y5, p5 = (p5 + (u5 + (Gt2(i4, 25) ^ Gt2(i4, 14) ^ i4 >>> 3) | 0) | 0) + (Gt2(l5, 15) ^ Gt2(l5, 13) ^ l5 >>> 10) | 0, a4[A8 + 104 >> 2] = p5, s5 = (f5 + (s5 + (Gt2(u5, 25) ^ Gt2(u5, 14) ^ u5 >>> 3) | 0) | 0) + (Gt2(y5, 15) ^ Gt2(y5, 13) ^ y5 >>> 10) | 0, a4[A8 + 100 >> 2] = s5, u5 = (C5 + (o5 + (Gt2(d5, 25) ^ Gt2(d5, 14) ^ d5 >>> 3) | 0) | 0) + (Gt2(p5, 15) ^ Gt2(p5, 13) ^ p5 >>> 10) | 0, a4[A8 + 112 >> 2] = u5, s5 = (m5 + (i4 + (Gt2(o5, 25) ^ Gt2(o5, 14) ^ o5 >>> 3) | 0) | 0) + (Gt2(s5, 15) ^ Gt2(s5, 13) ^ s5 >>> 10) | 0, a4[A8 + 108 >> 2] = s5, N6 = A8, M5 = (y5 + (e6 + (Gt2(g5, 25) ^ Gt2(g5, 14) ^ g5 >>> 3) | 0) | 0) + (Gt2(u5, 15) ^ Gt2(u5, 13) ^ u5 >>> 10) | 0, a4[N6 + 120 >> 2] = M5, e6 = (I5 + (d5 + (Gt2(e6, 25) ^ Gt2(e6, 14) ^ e6 >>> 3) | 0) | 0) + (Gt2(s5, 15) ^ Gt2(s5, 13) ^ s5 >>> 10) | 0, a4[A8 + 116 >> 2] = e6, N6 = A8, M5 = (l5 + (g5 + (Gt2(h5, 25) ^ Gt2(h5, 14) ^ h5 >>> 3) | 0) | 0) + (Gt2(e6, 15) ^ Gt2(e6, 13) ^ e6 >>> 10) | 0, a4[N6 + 124 >> 2] = M5;
                              a4[t7 >> 2] = h5 + a4[t7 >> 2], a4[t7 + 4 >> 2] = a4[t7 + 4 >> 2] + a4[n9 + 4 >> 2], a4[t7 + 8 >> 2] = a4[t7 + 8 >> 2] + a4[n9 + 8 >> 2], a4[t7 + 12 >> 2] = a4[t7 + 12 >> 2] + a4[n9 + 12 >> 2], a4[t7 + 16 >> 2] = a4[t7 + 16 >> 2] + a4[n9 + 16 >> 2], a4[t7 + 20 >> 2] = a4[t7 + 20 >> 2] + a4[n9 + 20 >> 2], a4[t7 + 24 >> 2] = a4[t7 + 24 >> 2] + a4[n9 + 24 >> 2], a4[t7 + 28 >> 2] = a4[t7 + 28 >> 2] + a4[n9 + 28 >> 2];
                            }
                            function b4(t7, e6) {
                              var r11, n9, A8, i4, o5, s5, c5, h5, u5, l5, f5, p5, d5, I5, C5, m5, B5, E5, w5, v5, _5, Q5, b5, k5, D5, S5, N6, M5, x5, F5, P5, T3, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0, Z3 = 0, $3 = 0, tt3 = 0, et3 = 0, rt3 = 0, nt3 = 0, At3 = 0;
                              R5 = Bt2(n9 = (m5 = a4[e6 + 12 >> 2]) << 1, s5 = n9 >> 31, m5, _5 = m5 >> 31), G5 = y4, U5 = (J5 = Bt2(L5 = a4[e6 + 16 >> 2], c5 = L5 >> 31, h5 = (H5 = a4[e6 + 8 >> 2]) << 1, p5 = h5 >> 31)) + R5 | 0, R5 = y4 + G5 | 0, R5 = U5 >>> 0 < J5 >>> 0 ? R5 + 1 | 0 : R5, G5 = (j5 = Bt2(X3 = (u5 = a4[e6 + 20 >> 2]) << 1, d5 = X3 >> 31, J5 = (O5 = a4[e6 + 4 >> 2]) << 1, A8 = J5 >> 31)) + U5 | 0, U5 = y4 + R5 | 0, U5 = G5 >>> 0 < j5 >>> 0 ? U5 + 1 | 0 : U5, Y5 = Bt2(r11 = a4[e6 + 24 >> 2], l5 = r11 >> 31, j5 = (Z3 = a4[e6 >> 2]) << 1, i4 = j5 >> 31), R5 = y4 + U5 | 0, R5 = (G5 = Y5 + G5 | 0) >>> 0 < Y5 >>> 0 ? R5 + 1 | 0 : R5, U5 = G5, I5 = a4[e6 + 32 >> 2], G5 = Bt2(z4 = g4(I5, 19), f5 = z4 >> 31, I5, E5 = I5 >> 31), R5 = y4 + R5 | 0, R5 = (U5 = U5 + G5 | 0) >>> 0 < G5 >>> 0 ? R5 + 1 | 0 : R5, S5 = a4[e6 + 36 >> 2], G5 = Bt2(Y5 = g4(S5, 38), o5 = Y5 >> 31, w5 = (C5 = a4[e6 + 28 >> 2]) << 1, Q5 = w5 >> 31), e6 = y4 + R5 | 0, W3 = U5 = G5 + U5 | 0, G5 = U5 >>> 0 < G5 >>> 0 ? e6 + 1 | 0 : e6, e6 = Bt2(J5, A8, L5, c5), R5 = y4, U5 = Bt2(h5, p5, m5, _5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, K5 = Bt2(u5, v5 = u5 >> 31, j5, i4), U5 = y4 + R5 | 0, U5 = (e6 = K5 + e6 | 0) >>> 0 < K5 >>> 0 ? U5 + 1 | 0 : U5, K5 = Bt2(z4, f5, w5, Q5), R5 = y4 + U5 | 0, R5 = (e6 = K5 + e6 | 0) >>> 0 < K5 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(Y5, o5, r11, l5), R5 = y4 + R5 | 0, nt3 = e6 = U5 + e6 | 0, q4 = e6 >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, R5 = Bt2(J5, A8, n9, s5), U5 = y4, b5 = e6 = H5, H5 = Bt2(e6, V3 = e6 >> 31, e6, V3), e6 = y4 + U5 | 0, e6 = (R5 = H5 + R5 | 0) >>> 0 < H5 >>> 0 ? e6 + 1 | 0 : e6, U5 = (H5 = Bt2(j5, i4, L5, c5)) + R5 | 0, R5 = y4 + e6 | 0, R5 = U5 >>> 0 < H5 >>> 0 ? R5 + 1 | 0 : R5, e6 = (H5 = Bt2(K5 = g4(C5, 38), B5 = K5 >> 31, C5, k5 = C5 >> 31)) + U5 | 0, U5 = y4 + R5 | 0, U5 = e6 >>> 0 < H5 >>> 0 ? U5 + 1 | 0 : U5, e6 = (R5 = e6) + (H5 = Bt2(z4, f5, e6 = r11 << 1, e6 >> 31)) | 0, R5 = y4 + U5 | 0, R5 = e6 >>> 0 < H5 >>> 0 ? R5 + 1 | 0 : R5, U5 = e6, e6 = Bt2(Y5, o5, X3, d5), R5 = y4 + R5 | 0, N6 = U5 = U5 + e6 | 0, M5 = R5 = e6 >>> 0 > U5 >>> 0 ? R5 + 1 | 0 : R5, e6 = R5, x5 = U5 = U5 + 33554432 | 0, F5 = e6 = U5 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, R5 = (R5 = e6 >> 26) + q4 | 0, nt3 = e6 = (U5 = (67108863 & e6) << 6 | U5 >>> 26) + nt3 | 0, R5 = e6 >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, P5 = e6 = e6 + 16777216 | 0, R5 = (R5 = (U5 = e6 >>> 0 < 16777216 ? R5 + 1 | 0 : R5) >> 25) + G5 | 0, e6 = (e6 = (33554431 & U5) << 7 | e6 >>> 25) >>> 0 > (U5 = e6 + W3 | 0) >>> 0 ? R5 + 1 | 0 : R5, W3 = R5 = U5 + 33554432 | 0, H5 = e6 = R5 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[t7 + 24 >> 2] = U5 - (-67108864 & R5), e6 = Bt2(j5, i4, b5, V3), R5 = y4, G5 = Bt2(J5, A8, O5, $3 = O5 >> 31), U5 = y4 + R5 | 0, U5 = (e6 = G5 + e6 | 0) >>> 0 < G5 >>> 0 ? U5 + 1 | 0 : U5, q4 = Bt2(G5 = g4(r11, 19), rt3 = G5 >> 31, r11, l5), R5 = y4 + U5 | 0, R5 = (e6 = q4 + e6 | 0) >>> 0 < q4 >>> 0 ? R5 + 1 | 0 : R5, U5 = (q4 = Bt2(X3, d5, K5, B5)) + e6 | 0, e6 = y4 + R5 | 0, e6 = U5 >>> 0 < q4 >>> 0 ? e6 + 1 | 0 : e6, tt3 = Bt2(z4, f5, q4 = L5 << 1, D5 = q4 >> 31), R5 = y4 + e6 | 0, R5 = (U5 = tt3 + U5 | 0) >>> 0 < tt3 >>> 0 ? R5 + 1 | 0 : R5, e6 = U5, U5 = Bt2(Y5, o5, n9, s5), R5 = y4 + R5 | 0, et3 = e6 = e6 + U5 | 0, tt3 = e6 >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, e6 = Bt2(X3, d5, G5, rt3), R5 = y4, O5 = Bt2(j5, i4, O5, $3), U5 = y4 + R5 | 0, U5 = (e6 = O5 + e6 | 0) >>> 0 < O5 >>> 0 ? U5 + 1 | 0 : U5, O5 = Bt2(L5, c5, K5, B5), R5 = y4 + U5 | 0, R5 = (e6 = O5 + e6 | 0) >>> 0 < O5 >>> 0 ? R5 + 1 | 0 : R5, U5 = (O5 = Bt2(z4, f5, n9, s5)) + e6 | 0, e6 = y4 + R5 | 0, e6 = U5 >>> 0 < O5 >>> 0 ? e6 + 1 | 0 : e6, O5 = Bt2(Y5, o5, b5, V3), R5 = y4 + e6 | 0, At3 = U5 = O5 + U5 | 0, $3 = U5 >>> 0 < O5 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(e6 = g4(u5, 38), e6 >> 31, u5, v5), O5 = y4, e6 = Z3, Z3 = U5, U5 = Bt2(e6, R5 = e6 >> 31, e6, R5), R5 = y4 + O5 | 0, R5 = (e6 = Z3 + U5 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, G5 = Bt2(G5, rt3, q4, D5), U5 = y4 + R5 | 0, U5 = (e6 = G5 + e6 | 0) >>> 0 < G5 >>> 0 ? U5 + 1 | 0 : U5, G5 = Bt2(n9, s5, K5, B5), R5 = y4 + U5 | 0, R5 = (e6 = G5 + e6 | 0) >>> 0 < G5 >>> 0 ? R5 + 1 | 0 : R5, U5 = (G5 = Bt2(z4, f5, h5, p5)) + e6 | 0, e6 = y4 + R5 | 0, e6 = U5 >>> 0 < G5 >>> 0 ? e6 + 1 | 0 : e6, G5 = Bt2(J5, A8, Y5, o5), R5 = y4 + e6 | 0, O5 = U5 = G5 + U5 | 0, Z3 = R5 = U5 >>> 0 < G5 >>> 0 ? R5 + 1 | 0 : R5, rt3 = U5 = U5 + 33554432 | 0, T3 = R5 = U5 >>> 0 < 33554432 ? R5 + 1 | 0 : R5, e6 = R5 >> 26, R5 = (67108863 & R5) << 6 | U5 >>> 26, U5 = e6 + $3 | 0, $3 = G5 = R5 + At3 | 0, R5 = R5 >>> 0 > G5 >>> 0 ? U5 + 1 | 0 : U5, At3 = U5 = G5 + 16777216 | 0, G5 = (33554431 & (R5 = U5 >>> 0 < 16777216 ? R5 + 1 | 0 : R5)) << 7 | U5 >>> 25, R5 = (R5 >> 25) + tt3 | 0, R5 = (U5 = G5 + et3 | 0) >>> 0 < G5 >>> 0 ? R5 + 1 | 0 : R5, tt3 = e6 = U5 + 33554432 | 0, G5 = R5 = e6 >>> 0 < 33554432 ? R5 + 1 | 0 : R5, a4[t7 + 8 >> 2] = U5 - (-67108864 & e6), e6 = Bt2(h5, p5, u5, v5), R5 = y4, U5 = Bt2(L5, c5, n9, s5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(J5, A8, r11, l5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(j5, i4, C5, k5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, et3 = (U5 = Bt2(Y5, o5, I5, E5)) + e6 | 0, e6 = y4 + R5 | 0, U5 = (R5 = H5 >> 26) + (U5 = U5 >>> 0 > et3 >>> 0 ? e6 + 1 | 0 : e6) | 0, W3 = e6 = (H5 = (67108863 & H5) << 6 | W3 >>> 26) + et3 | 0, R5 = e6 >>> 0 < H5 >>> 0 ? U5 + 1 | 0 : U5, et3 = e6 = e6 + 16777216 | 0, H5 = R5 = e6 >>> 0 < 16777216 ? R5 + 1 | 0 : R5, a4[t7 + 28 >> 2] = W3 - (-33554432 & e6), e6 = Bt2(j5, i4, m5, _5), U5 = y4, R5 = (V3 = Bt2(J5, A8, b5, V3)) + e6 | 0, e6 = y4 + U5 | 0, e6 = R5 >>> 0 < V3 >>> 0 ? e6 + 1 | 0 : e6, R5 = (K5 = Bt2(r11, l5, K5, B5)) + R5 | 0, U5 = y4 + e6 | 0, e6 = (z4 = Bt2(z4, f5, X3, d5)) + R5 | 0, R5 = y4 + (R5 >>> 0 < K5 >>> 0 ? U5 + 1 | 0 : U5) | 0, R5 = e6 >>> 0 < z4 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(Y5, o5, L5, c5), R5 = y4 + R5 | 0, R5 = (R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5) + (U5 = G5 >> 26) | 0, e6 = (U5 = G5 = (W3 = e6) + (e6 = (67108863 & G5) << 6 | tt3 >>> 26) | 0) >>> 0 < e6 >>> 0 ? R5 + 1 | 0 : R5, z4 = R5 = U5 + 16777216 | 0, G5 = e6 = R5 >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[t7 + 12 >> 2] = U5 - (-33554432 & R5), e6 = Bt2(r11, l5, h5, p5), R5 = y4, U5 = Bt2(L5, c5, L5, c5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, U5 = Bt2(n9, s5, X3, d5), R5 = y4 + R5 | 0, R5 = (e6 = U5 + e6 | 0) >>> 0 < U5 >>> 0 ? R5 + 1 | 0 : R5, U5 = (L5 = Bt2(J5, A8, w5, Q5)) + e6 | 0, e6 = y4 + R5 | 0, e6 = U5 >>> 0 < L5 >>> 0 ? e6 + 1 | 0 : e6, R5 = (L5 = Bt2(j5, i4, I5, E5)) + U5 | 0, U5 = y4 + e6 | 0, U5 = R5 >>> 0 < L5 >>> 0 ? U5 + 1 | 0 : U5, e6 = (L5 = Bt2(e6 = Y5, o5, Y5 = S5, X3 = Y5 >> 31)) + R5 | 0, R5 = y4 + U5 | 0, R5 = e6 >>> 0 < L5 >>> 0 ? R5 + 1 | 0 : R5, U5 = e6, R5 = (e6 = H5 >> 25) + R5 | 0, R5 = (U5 = U5 + (H5 = (33554431 & H5) << 7 | et3 >>> 25) | 0) >>> 0 < H5 >>> 0 ? R5 + 1 | 0 : R5, L5 = e6 = U5 + 33554432 | 0, H5 = R5 = e6 >>> 0 < 33554432 ? R5 + 1 | 0 : R5, a4[t7 + 32 >> 2] = U5 - (-67108864 & e6), R5 = G5 >> 25, U5 = (G5 = (33554431 & G5) << 7 | z4 >>> 25) + (N6 - (e6 = -67108864 & x5) | 0) | 0, e6 = R5 + (M5 - ((e6 >>> 0 > N6 >>> 0) + F5 | 0) | 0) | 0, e6 = U5 >>> 0 < G5 >>> 0 ? e6 + 1 | 0 : e6, G5 = U5, e6 = ((67108863 & (R5 = (U5 = U5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6)) << 6 | U5 >>> 26) + (K5 = nt3 - (-33554432 & P5) | 0) | 0, a4[t7 + 20 >> 2] = e6, a4[t7 + 16 >> 2] = G5 - (-67108864 & U5), e6 = Bt2(n9, s5, r11, l5), U5 = y4, R5 = (G5 = Bt2(u5, v5, q4, D5)) + e6 | 0, e6 = y4 + U5 | 0, e6 = R5 >>> 0 < G5 >>> 0 ? e6 + 1 | 0 : e6, U5 = (G5 = Bt2(h5, p5, C5, k5)) + R5 | 0, R5 = y4 + e6 | 0, R5 = U5 >>> 0 < G5 >>> 0 ? R5 + 1 | 0 : R5, e6 = (G5 = Bt2(J5, A8, I5, E5)) + U5 | 0, U5 = y4 + R5 | 0, U5 = e6 >>> 0 < G5 >>> 0 ? U5 + 1 | 0 : U5, G5 = (R5 = e6) + (e6 = Bt2(j5, i4, Y5, X3)) | 0, R5 = y4 + U5 | 0, R5 = (e6 = e6 >>> 0 > G5 >>> 0 ? R5 + 1 | 0 : R5) + (R5 = H5 >> 26) | 0, e6 = (U5 = (H5 = (67108863 & H5) << 6 | L5 >>> 26) + G5 | 0) >>> 0 < H5 >>> 0 ? R5 + 1 | 0 : R5, e6 = (R5 = U5 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[t7 + 36 >> 2] = U5 - (-33554432 & R5), H5 = $3 - (-33554432 & At3) | 0, G5 = O5 - (U5 = -67108864 & rt3) | 0, J5 = Z3 - ((U5 >>> 0 > O5 >>> 0) + T3 | 0) | 0, e6 = Bt2((33554431 & e6) << 7 | R5 >>> 25, e6 >> 25, 19, 0), R5 = y4 + J5 | 0, e6 = e6 >>> 0 > (U5 = e6 + G5 | 0) >>> 0 ? R5 + 1 | 0 : R5, e6 = ((67108863 & (e6 = (R5 = U5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6)) << 6 | R5 >>> 26) + H5 | 0, a4[t7 + 4 >> 2] = e6, a4[t7 >> 2] = U5 - (-67108864 & R5);
                            }
                            function k4(t7, e6, r11, n9, A8) {
                              var i4, o5, h5, g5, u5, l5, f5, p5, d5, y5, C5, m5, B5, E5, w5, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, X3 = 0, V3 = 0, W3 = 0, Z3 = 0, $3 = 0, tt3 = 0, et3 = 0, rt3 = 0, nt3 = 0;
                              for (i4 = I4 + -64 | 0, o5 = a4[t7 + 60 >> 2], h5 = a4[t7 + 56 >> 2], Y5 = a4[t7 + 52 >> 2], O5 = a4[t7 + 48 >> 2], g5 = a4[t7 + 44 >> 2], u5 = a4[t7 + 40 >> 2], l5 = a4[t7 + 36 >> 2], f5 = a4[t7 + 32 >> 2], p5 = a4[t7 + 28 >> 2], d5 = a4[t7 + 24 >> 2], y5 = a4[t7 + 20 >> 2], C5 = a4[t7 + 16 >> 2], m5 = a4[t7 + 12 >> 2], B5 = a4[t7 + 8 >> 2], E5 = a4[t7 + 4 >> 2], w5 = a4[t7 >> 2]; ; ) {
                                if (!A8 & n9 >>> 0 > 63 | A8)
                                  v5 = r11;
                                else {
                                  if (a4[i4 + 56 >> 2] = 0, a4[i4 + 60 >> 2] = 0, a4[i4 + 48 >> 2] = 0, a4[i4 + 52 >> 2] = 0, a4[i4 + 40 >> 2] = 0, a4[i4 + 44 >> 2] = 0, a4[i4 + 32 >> 2] = 0, a4[i4 + 36 >> 2] = 0, a4[i4 + 24 >> 2] = 0, a4[i4 + 28 >> 2] = 0, a4[i4 + 16 >> 2] = 0, a4[i4 + 20 >> 2] = 0, a4[i4 + 8 >> 2] = 0, a4[i4 + 12 >> 2] = 0, a4[i4 >> 2] = 0, a4[i4 + 4 >> 2] = 0, Q5 = 0, n9 | A8)
                                    for (; s4[Q5 + i4 | 0] = c4[e6 + Q5 | 0], !A8 & (Q5 = Q5 + 1 | 0) >>> 0 < n9 >>> 0 | A8; )
                                      ;
                                  e6 = v5 = i4, q4 = r11;
                                }
                                for (K5 = 20, _5 = w5, x5 = E5, F5 = B5, R5 = m5, Q5 = C5, r11 = y5, k5 = d5, D5 = p5, S5 = f5, G5 = l5, P5 = u5, b5 = o5, H5 = h5, U5 = Y5, T3 = O5, N6 = g5; M5 = Q5, _5 = Gt2((Q5 = _5 + Q5 | 0) ^ T3, 16), M5 = T3 = Gt2(M5 ^ (S5 = _5 + S5 | 0), 12), T3 = Gt2((L5 = Q5 + T3 | 0) ^ _5, 8), Q5 = Gt2(M5 ^ (S5 = T3 + S5 | 0), 7), b5 = Gt2((_5 = D5 + R5 | 0) ^ b5, 16), D5 = Gt2((N6 = b5 + N6 | 0) ^ D5, 12), R5 = Gt2((F5 = k5 + F5 | 0) ^ H5, 16), k5 = Gt2((P5 = R5 + P5 | 0) ^ k5, 12), H5 = (J5 = _5 + D5 | 0) + Q5 | 0, j5 = Gt2((F5 = k5 + F5 | 0) ^ R5, 8), _5 = Gt2(H5 ^ j5, 16), R5 = Gt2((x5 = r11 + x5 | 0) ^ U5, 16), r11 = Gt2((G5 = R5 + G5 | 0) ^ r11, 12), M5 = Q5, U5 = Gt2((x5 = r11 + x5 | 0) ^ R5, 8), M5 = Gt2(M5 ^ (Q5 = (z4 = U5 + G5 | 0) + _5 | 0), 12), H5 = Gt2(_5 ^ (R5 = M5 + H5 | 0), 8), Q5 = Gt2((G5 = H5 + Q5 | 0) ^ M5, 7), M5 = S5, S5 = F5, _5 = Gt2(b5 ^ J5, 8), F5 = Gt2((b5 = _5 + N6 | 0) ^ D5, 7), U5 = Gt2((S5 = S5 + F5 | 0) ^ U5, 16), N6 = Gt2((D5 = M5 + U5 | 0) ^ F5, 12), U5 = Gt2(U5 ^ (F5 = N6 + S5 | 0), 8), D5 = Gt2((S5 = D5 + U5 | 0) ^ N6, 7), N6 = b5, b5 = x5, x5 = Gt2((P5 = P5 + j5 | 0) ^ k5, 7), k5 = N6 + (T3 = Gt2((b5 = b5 + x5 | 0) ^ T3, 16)) | 0, N6 = b5, b5 = Gt2(k5 ^ x5, 12), T3 = Gt2(T3 ^ (x5 = N6 + b5 | 0), 8), k5 = Gt2((N6 = k5 + T3 | 0) ^ b5, 7), M5 = P5, b5 = _5, _5 = Gt2(r11 ^ z4, 7), b5 = Gt2(b5 ^ (P5 = _5 + L5 | 0), 16), L5 = Gt2((r11 = M5 + b5 | 0) ^ _5, 12), b5 = Gt2(b5 ^ (_5 = L5 + P5 | 0), 8), r11 = Gt2((P5 = r11 + b5 | 0) ^ L5, 7), K5 = K5 - 2 | 0; )
                                  ;
                                if (K5 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24, L5 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, J5 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, j5 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, z4 = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24, M5 = c4[e6 + 24 | 0] | c4[e6 + 25 | 0] << 8 | c4[e6 + 26 | 0] << 16 | c4[e6 + 27 | 0] << 24, X3 = c4[e6 + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24, V3 = c4[e6 + 32 | 0] | c4[e6 + 33 | 0] << 8 | c4[e6 + 34 | 0] << 16 | c4[e6 + 35 | 0] << 24, W3 = c4[e6 + 36 | 0] | c4[e6 + 37 | 0] << 8 | c4[e6 + 38 | 0] << 16 | c4[e6 + 39 | 0] << 24, Z3 = c4[e6 + 40 | 0] | c4[e6 + 41 | 0] << 8 | c4[e6 + 42 | 0] << 16 | c4[e6 + 43 | 0] << 24, $3 = c4[e6 + 44 | 0] | c4[e6 + 45 | 0] << 8 | c4[e6 + 46 | 0] << 16 | c4[e6 + 47 | 0] << 24, tt3 = c4[e6 + 48 | 0] | c4[e6 + 49 | 0] << 8 | c4[e6 + 50 | 0] << 16 | c4[e6 + 51 | 0] << 24, et3 = c4[e6 + 52 | 0] | c4[e6 + 53 | 0] << 8 | c4[e6 + 54 | 0] << 16 | c4[e6 + 55 | 0] << 24, rt3 = c4[e6 + 56 | 0] | c4[e6 + 57 | 0] << 8 | c4[e6 + 58 | 0] << 16 | c4[e6 + 59 | 0] << 24, nt3 = c4[e6 + 60 | 0] | c4[e6 + 61 | 0] << 8 | c4[e6 + 62 | 0] << 16 | c4[e6 + 63 | 0] << 24, _5 = _5 + w5 ^ (c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24), s4[0 | v5] = _5, s4[v5 + 1 | 0] = _5 >>> 8, s4[v5 + 2 | 0] = _5 >>> 16, s4[v5 + 3 | 0] = _5 >>> 24, _5 = b5 + o5 ^ nt3, s4[v5 + 60 | 0] = _5, s4[v5 + 61 | 0] = _5 >>> 8, s4[v5 + 62 | 0] = _5 >>> 16, s4[v5 + 63 | 0] = _5 >>> 24, _5 = H5 + h5 ^ rt3, s4[v5 + 56 | 0] = _5, s4[v5 + 57 | 0] = _5 >>> 8, s4[v5 + 58 | 0] = _5 >>> 16, s4[v5 + 59 | 0] = _5 >>> 24, _5 = U5 + Y5 ^ et3, s4[v5 + 52 | 0] = _5, s4[v5 + 53 | 0] = _5 >>> 8, s4[v5 + 54 | 0] = _5 >>> 16, s4[v5 + 55 | 0] = _5 >>> 24, _5 = T3 + O5 ^ tt3, s4[v5 + 48 | 0] = _5, s4[v5 + 49 | 0] = _5 >>> 8, s4[v5 + 50 | 0] = _5 >>> 16, s4[v5 + 51 | 0] = _5 >>> 24, _5 = N6 + g5 ^ $3, s4[v5 + 44 | 0] = _5, s4[v5 + 45 | 0] = _5 >>> 8, s4[v5 + 46 | 0] = _5 >>> 16, s4[v5 + 47 | 0] = _5 >>> 24, _5 = P5 + u5 ^ Z3, s4[v5 + 40 | 0] = _5, s4[v5 + 41 | 0] = _5 >>> 8, s4[v5 + 42 | 0] = _5 >>> 16, s4[v5 + 43 | 0] = _5 >>> 24, _5 = G5 + l5 ^ W3, s4[v5 + 36 | 0] = _5, s4[v5 + 37 | 0] = _5 >>> 8, s4[v5 + 38 | 0] = _5 >>> 16, s4[v5 + 39 | 0] = _5 >>> 24, _5 = S5 + f5 ^ V3, s4[v5 + 32 | 0] = _5, s4[v5 + 33 | 0] = _5 >>> 8, s4[v5 + 34 | 0] = _5 >>> 16, s4[v5 + 35 | 0] = _5 >>> 24, D5 = D5 + p5 ^ X3, s4[v5 + 28 | 0] = D5, s4[v5 + 29 | 0] = D5 >>> 8, s4[v5 + 30 | 0] = D5 >>> 16, s4[v5 + 31 | 0] = D5 >>> 24, k5 = M5 ^ k5 + d5, s4[v5 + 24 | 0] = k5, s4[v5 + 25 | 0] = k5 >>> 8, s4[v5 + 26 | 0] = k5 >>> 16, s4[v5 + 27 | 0] = k5 >>> 24, r11 = z4 ^ r11 + y5, s4[v5 + 20 | 0] = r11, s4[v5 + 21 | 0] = r11 >>> 8, s4[v5 + 22 | 0] = r11 >>> 16, s4[v5 + 23 | 0] = r11 >>> 24, r11 = j5 ^ Q5 + C5, s4[v5 + 16 | 0] = r11, s4[v5 + 17 | 0] = r11 >>> 8, s4[v5 + 18 | 0] = r11 >>> 16, s4[v5 + 19 | 0] = r11 >>> 24, r11 = J5 ^ R5 + m5, s4[v5 + 12 | 0] = r11, s4[v5 + 13 | 0] = r11 >>> 8, s4[v5 + 14 | 0] = r11 >>> 16, s4[v5 + 15 | 0] = r11 >>> 24, r11 = L5 ^ F5 + B5, s4[v5 + 8 | 0] = r11, s4[v5 + 9 | 0] = r11 >>> 8, s4[v5 + 10 | 0] = r11 >>> 16, s4[v5 + 11 | 0] = r11 >>> 24, r11 = K5 ^ x5 + E5, s4[v5 + 4 | 0] = r11, s4[v5 + 5 | 0] = r11 >>> 8, s4[v5 + 6 | 0] = r11 >>> 16, s4[v5 + 7 | 0] = r11 >>> 24, Y5 = !(O5 = O5 + 1 | 0) + Y5 | 0, !A8 & n9 >>> 0 <= 64) {
                                  if (!(!n9 | !A8 & n9 >>> 0 > 63 | !!(0 | A8)))
                                    for (Q5 = 0; s4[Q5 + q4 | 0] = c4[v5 + Q5 | 0], n9 >>> 0 > (Q5 = Q5 + 1 | 0) >>> 0; )
                                      ;
                                  a4[t7 + 52 >> 2] = Y5, a4[t7 + 48 >> 2] = O5;
                                  break;
                                }
                                e6 = e6 - -64 | 0, r11 = v5 - -64 | 0, A8 = A8 - 1 | 0, A8 = (n9 = n9 + -64 | 0) >>> 0 < 4294967232 ? A8 + 1 | 0 : A8;
                              }
                            }
                            function D4(t7, e6) {
                              var r11, n9 = 0, A8 = 0, i4 = 0, o5 = 0, c5 = 0, h5 = 0, g5 = 0;
                              I4 = r11 = I4 - 704 | 0, n9 = 80 + ((A8 = a4[t7 + 72 >> 2] >>> 3 & 127) + t7 | 0) | 0, A8 >>> 0 >= 112 ? (Mt2(n9, 35008, 128 - A8 | 0), B4(t7, A8 = t7 + 80 | 0, r11, r11 + 640 | 0), xt2(A8, 0, 112)) : Mt2(n9, 35008, 112 - A8 | 0), h5 = (i4 = a4[t7 + 64 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 68 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[t7 + 192 | 0] = n9, s4[t7 + 193 | 0] = n9 >>> 8, s4[t7 + 194 | 0] = n9 >>> 16, s4[t7 + 195 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[t7 + 196 | 0] = A8, s4[t7 + 197 | 0] = A8 >>> 8, s4[t7 + 198 | 0] = A8 >>> 16, s4[t7 + 199 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 72 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 76 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[t7 + 200 | 0] = n9, s4[t7 + 201 | 0] = n9 >>> 8, s4[t7 + 202 | 0] = n9 >>> 16, s4[t7 + 203 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[t7 + 204 | 0] = A8, s4[t7 + 205 | 0] = A8 >>> 8, s4[t7 + 206 | 0] = A8 >>> 16, s4[t7 + 207 | 0] = A8 >>> 24, B4(t7, t7 + 80 | 0, r11, r11 + 640 | 0), h5 = (i4 = a4[t7 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 4 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[0 | e6] = n9, s4[e6 + 1 | 0] = n9 >>> 8, s4[e6 + 2 | 0] = n9 >>> 16, s4[e6 + 3 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 4 | 0] = A8, s4[e6 + 5 | 0] = A8 >>> 8, s4[e6 + 6 | 0] = A8 >>> 16, s4[e6 + 7 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 8 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 12 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 8 | 0] = n9, s4[e6 + 9 | 0] = n9 >>> 8, s4[e6 + 10 | 0] = n9 >>> 16, s4[e6 + 11 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 12 | 0] = A8, s4[e6 + 13 | 0] = A8 >>> 8, s4[e6 + 14 | 0] = A8 >>> 16, s4[e6 + 15 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 16 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 20 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 16 | 0] = n9, s4[e6 + 17 | 0] = n9 >>> 8, s4[e6 + 18 | 0] = n9 >>> 16, s4[e6 + 19 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 20 | 0] = A8, s4[e6 + 21 | 0] = A8 >>> 8, s4[e6 + 22 | 0] = A8 >>> 16, s4[e6 + 23 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 24 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 28 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 24 | 0] = n9, s4[e6 + 25 | 0] = n9 >>> 8, s4[e6 + 26 | 0] = n9 >>> 16, s4[e6 + 27 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 28 | 0] = A8, s4[e6 + 29 | 0] = A8 >>> 8, s4[e6 + 30 | 0] = A8 >>> 16, s4[e6 + 31 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 32 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 36 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 32 | 0] = n9, s4[e6 + 33 | 0] = n9 >>> 8, s4[e6 + 34 | 0] = n9 >>> 16, s4[e6 + 35 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 36 | 0] = A8, s4[e6 + 37 | 0] = A8 >>> 8, s4[e6 + 38 | 0] = A8 >>> 16, s4[e6 + 39 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 40 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 44 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 40 | 0] = n9, s4[e6 + 41 | 0] = n9 >>> 8, s4[e6 + 42 | 0] = n9 >>> 16, s4[e6 + 43 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 44 | 0] = A8, s4[e6 + 45 | 0] = A8 >>> 8, s4[e6 + 46 | 0] = A8 >>> 16, s4[e6 + 47 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 48 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, n9 = g5 | c5 << 8 | -16777216 & ((255 & (n9 = a4[t7 + 52 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & n9) << 8 | i4 >>> 24) | n9 >>> 8 & 65280 | n9 >>> 24, s4[e6 + 48 | 0] = n9, s4[e6 + 49 | 0] = n9 >>> 8, s4[e6 + 50 | 0] = n9 >>> 16, s4[e6 + 51 | 0] = n9 >>> 24, A8 = (n9 = A8 | o5 | h5) | (A8 = 0) | A8, s4[e6 + 52 | 0] = A8, s4[e6 + 53 | 0] = A8 >>> 8, s4[e6 + 54 | 0] = A8 >>> 16, s4[e6 + 55 | 0] = A8 >>> 24, h5 = (i4 = a4[t7 + 56 >> 2]) << 24 | (65280 & i4) << 8, A8 = (o5 = 16711680 & i4) >>> 8 | 0, n9 = e6, g5 = o5 << 24, o5 = (c5 = -16777216 & i4) >>> 24 | 0, e6 = g5 | c5 << 8 | -16777216 & ((255 & (e6 = a4[t7 + 60 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & e6) << 8 | i4 >>> 24) | e6 >>> 8 & 65280 | e6 >>> 24, s4[n9 + 56 | 0] = e6, s4[n9 + 57 | 0] = e6 >>> 8, s4[n9 + 58 | 0] = e6 >>> 16, s4[n9 + 59 | 0] = e6 >>> 24, e6 = (e6 = A8 | o5 | h5) | (A8 = 0) | A8, s4[n9 + 60 | 0] = e6, s4[n9 + 61 | 0] = e6 >>> 8, s4[n9 + 62 | 0] = e6 >>> 16, s4[n9 + 63 | 0] = e6 >>> 24, oe2(r11, 704), oe2(t7, 208), I4 = r11 + 704 | 0;
                            }
                            function S4(t7, e6, r11) {
                              var n9, A8 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0;
                              I4 = n9 = I4 + -64 | 0;
                              t: {
                                if ((r11 - 65 & 255) >>> 0 > 191) {
                                  if (A8 = -1, !(c4[t7 + 80 | 0] | c4[t7 + 81 | 0] << 8 | c4[t7 + 82 | 0] << 16 | c4[t7 + 83 | 0] << 24 | c4[t7 + 84 | 0] | c4[t7 + 85 | 0] << 8 | c4[t7 + 86 | 0] << 16 | c4[t7 + 87 | 0] << 24)) {
                                    if ((g5 = c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) >>> 0 >= 129) {
                                      if (h5 = c4[0 | (A8 = t7 - -64 | 0)] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, u5 = o5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, o5 = (g5 = h5 + 128 | 0) >>> 0 < 128 ? o5 + 1 | 0 : o5, s4[0 | A8] = g5, s4[A8 + 1 | 0] = g5 >>> 8, s4[A8 + 2 | 0] = g5 >>> 16, s4[A8 + 3 | 0] = g5 >>> 24, s4[A8 + 4 | 0] = o5, s4[A8 + 5 | 0] = o5 >>> 8, s4[A8 + 6 | 0] = o5 >>> 16, s4[A8 + 7 | 0] = o5 >>> 24, o5 = c4[t7 + 76 | 0] | c4[t7 + 77 | 0] << 8 | c4[t7 + 78 | 0] << 16 | c4[t7 + 79 | 0] << 24, o5 = (A8 = -1 == (0 | u5) & h5 >>> 0 > 4294967167) >>> 0 > (h5 = A8 + (c4[t7 + 72 | 0] | c4[t7 + 73 | 0] << 8 | c4[t7 + 74 | 0] << 16 | c4[t7 + 75 | 0] << 24) | 0) >>> 0 ? o5 + 1 | 0 : o5, s4[t7 + 72 | 0] = h5, s4[t7 + 73 | 0] = h5 >>> 8, s4[t7 + 74 | 0] = h5 >>> 16, s4[t7 + 75 | 0] = h5 >>> 24, s4[t7 + 76 | 0] = o5, s4[t7 + 77 | 0] = o5 >>> 8, s4[t7 + 78 | 0] = o5 >>> 16, s4[t7 + 79 | 0] = o5 >>> 24, C4(t7, o5 = t7 + 96 | 0), A8 = (c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) - 128 | 0, s4[t7 + 352 | 0] = A8, s4[t7 + 353 | 0] = A8 >>> 8, s4[t7 + 354 | 0] = A8 >>> 16, s4[t7 + 355 | 0] = A8 >>> 24, A8 >>> 0 >= 129)
                                        break t;
                                      Mt2(o5, t7 + 224 | 0, A8), g5 = c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24;
                                    }
                                    o5 = c4[0 | (A8 = t7 - -64 | 0)] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, h5 = l5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, h5 = (u5 = o5 + g5 | 0) >>> 0 < g5 >>> 0 ? h5 + 1 | 0 : h5, s4[0 | A8] = u5, s4[A8 + 1 | 0] = u5 >>> 8, s4[A8 + 2 | 0] = u5 >>> 16, s4[A8 + 3 | 0] = u5 >>> 24, s4[A8 + 4 | 0] = h5, s4[A8 + 5 | 0] = h5 >>> 8, s4[A8 + 6 | 0] = h5 >>> 16, s4[A8 + 7 | 0] = h5 >>> 24, A8 = (0 | h5) == (0 | l5) & o5 >>> 0 > u5 >>> 0 | h5 >>> 0 < l5 >>> 0, o5 = c4[t7 + 76 | 0] | c4[t7 + 77 | 0] << 8 | c4[t7 + 78 | 0] << 16 | c4[t7 + 79 | 0] << 24, o5 = (h5 = A8 + (c4[t7 + 72 | 0] | c4[t7 + 73 | 0] << 8 | c4[t7 + 74 | 0] << 16 | c4[t7 + 75 | 0] << 24) | 0) >>> 0 < A8 >>> 0 ? o5 + 1 | 0 : o5, s4[t7 + 72 | 0] = h5, s4[t7 + 73 | 0] = h5 >>> 8, s4[t7 + 74 | 0] = h5 >>> 16, s4[t7 + 75 | 0] = h5 >>> 24, s4[t7 + 76 | 0] = o5, s4[t7 + 77 | 0] = o5 >>> 8, s4[t7 + 78 | 0] = o5 >>> 16, s4[t7 + 79 | 0] = o5 >>> 24, c4[t7 + 356 | 0] && (s4[t7 + 88 | 0] = 255, s4[t7 + 89 | 0] = 255, s4[t7 + 90 | 0] = 255, s4[t7 + 91 | 0] = 255, s4[t7 + 92 | 0] = 255, s4[t7 + 93 | 0] = 255, s4[t7 + 94 | 0] = 255, s4[t7 + 95 | 0] = 255), s4[t7 + 80 | 0] = 255, s4[t7 + 81 | 0] = 255, s4[t7 + 82 | 0] = 255, s4[t7 + 83 | 0] = 255, s4[t7 + 84 | 0] = 255, s4[t7 + 85 | 0] = 255, s4[t7 + 86 | 0] = 255, s4[t7 + 87 | 0] = 255, xt2((A8 = t7 + 96 | 0) + g5 | 0, 0, 256 - g5 | 0), C4(t7, A8), o5 = c4[t7 + 4 | 0] | c4[t7 + 5 | 0] << 8 | c4[t7 + 6 | 0] << 16 | c4[t7 + 7 | 0] << 24, a4[n9 >> 2] = c4[0 | t7] | c4[t7 + 1 | 0] << 8 | c4[t7 + 2 | 0] << 16 | c4[t7 + 3 | 0] << 24, a4[n9 + 4 >> 2] = o5, o5 = c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24, a4[n9 + 8 >> 2] = c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24, a4[n9 + 12 >> 2] = o5, o5 = c4[t7 + 20 | 0] | c4[t7 + 21 | 0] << 8 | c4[t7 + 22 | 0] << 16 | c4[t7 + 23 | 0] << 24, a4[n9 + 16 >> 2] = c4[t7 + 16 | 0] | c4[t7 + 17 | 0] << 8 | c4[t7 + 18 | 0] << 16 | c4[t7 + 19 | 0] << 24, a4[n9 + 20 >> 2] = o5, o5 = c4[t7 + 28 | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24, a4[n9 + 24 >> 2] = c4[t7 + 24 | 0] | c4[t7 + 25 | 0] << 8 | c4[t7 + 26 | 0] << 16 | c4[t7 + 27 | 0] << 24, a4[n9 + 28 >> 2] = o5, o5 = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24, a4[n9 + 32 >> 2] = c4[t7 + 32 | 0] | c4[t7 + 33 | 0] << 8 | c4[t7 + 34 | 0] << 16 | c4[t7 + 35 | 0] << 24, a4[n9 + 36 >> 2] = o5, o5 = c4[t7 + 44 | 0] | c4[t7 + 45 | 0] << 8 | c4[t7 + 46 | 0] << 16 | c4[t7 + 47 | 0] << 24, a4[n9 + 40 >> 2] = c4[t7 + 40 | 0] | c4[t7 + 41 | 0] << 8 | c4[t7 + 42 | 0] << 16 | c4[t7 + 43 | 0] << 24, a4[n9 + 44 >> 2] = o5, o5 = c4[t7 + 52 | 0] | c4[t7 + 53 | 0] << 8 | c4[t7 + 54 | 0] << 16 | c4[t7 + 55 | 0] << 24, a4[n9 + 48 >> 2] = c4[t7 + 48 | 0] | c4[t7 + 49 | 0] << 8 | c4[t7 + 50 | 0] << 16 | c4[t7 + 51 | 0] << 24, a4[n9 + 52 >> 2] = o5, o5 = c4[t7 + 60 | 0] | c4[t7 + 61 | 0] << 8 | c4[t7 + 62 | 0] << 16 | c4[t7 + 63 | 0] << 24, a4[n9 + 56 >> 2] = c4[t7 + 56 | 0] | c4[t7 + 57 | 0] << 8 | c4[t7 + 58 | 0] << 16 | c4[t7 + 59 | 0] << 24, a4[n9 + 60 >> 2] = o5, Mt2(e6, n9, r11), oe2(t7, 64), oe2(A8, 256), A8 = 0;
                                  }
                                  return I4 = n9 - -64 | 0, A8;
                                }
                                Kt2(), i3();
                              }
                              f4(1280, 1142, 306, 1086), i3();
                            }
                            function N5(t7, e6) {
                              var r11, n9, A8, i4, o5, h5, g5, u5, l5, f5, p5, d5, y5, C5, m5, B5, E5 = 0, w5 = 0, _5 = 0, Q5 = 0, k5 = 0, D5 = 0, S5 = 0;
                              for (I4 = r11 = I4 - 320 | 0, U4(n9 = t7 + 40 | 0, e6), a4[t7 + 84 >> 2] = 0, a4[t7 + 88 >> 2] = 0, a4[t7 + 80 >> 2] = 1, a4[t7 + 92 >> 2] = 0, a4[t7 + 96 >> 2] = 0, a4[t7 + 100 >> 2] = 0, a4[t7 + 104 >> 2] = 0, a4[t7 + 108 >> 2] = 0, a4[t7 + 112 >> 2] = 0, a4[t7 + 116 >> 2] = 0, b4(D5 = r11 + 240 | 0, n9), v4(Q5 = r11 + 192 | 0, D5, 1344), S5 = -1, A8 = a4[r11 + 240 >> 2] - 1 | 0, a4[r11 + 240 >> 2] = A8, a4[r11 + 192 >> 2] = a4[r11 + 192 >> 2] + 1, i4 = a4[r11 + 244 >> 2], o5 = a4[r11 + 248 >> 2], h5 = a4[r11 + 252 >> 2], g5 = a4[r11 + 256 >> 2], u5 = a4[r11 + 260 >> 2], l5 = a4[r11 + 264 >> 2], f5 = a4[r11 + 268 >> 2], p5 = a4[r11 + 272 >> 2], d5 = a4[r11 + 276 >> 2], b4(k5 = r11 + 144 | 0, Q5), v4(k5, k5, Q5), b4(t7, k5), v4(t7, t7, Q5), v4(t7, t7, D5), I4 = w5 = I4 - 144 | 0, b4(_5 = w5 + 96 | 0, t7), b4(E5 = w5 + 48 | 0, _5), b4(E5, E5), v4(E5, t7, E5), v4(_5, _5, E5), b4(_5, _5), v4(_5, E5, _5), b4(E5, _5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), v4(_5, E5, _5), b4(E5, _5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), v4(E5, E5, _5), b4(w5, E5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), b4(w5, w5), v4(E5, w5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), v4(_5, E5, _5), b4(E5, _5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), v4(E5, E5, _5), b4(w5, E5), E5 = 1; b4(w5, w5), 100 != (0 | (E5 = E5 + 1 | 0)); )
                                ;
                              v4(E5 = w5 + 48 | 0, w5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), b4(E5, E5), v4(_5 = w5 + 96 | 0, E5, _5), b4(_5, _5), b4(_5, _5), v4(t7, _5, t7), I4 = w5 + 144 | 0, v4(t7, t7, k5), v4(t7, t7, D5), b4(E5 = r11 + 96 | 0, t7), v4(E5, E5, Q5), E5 = a4[r11 + 132 >> 2], a4[r11 + 84 >> 2] = E5 - d5, w5 = a4[r11 + 128 >> 2], a4[r11 + 80 >> 2] = w5 - p5, _5 = a4[r11 + 124 >> 2], a4[r11 + 76 >> 2] = _5 - f5, Q5 = a4[r11 + 120 >> 2], a4[r11 + 72 >> 2] = Q5 - l5, k5 = a4[r11 + 116 >> 2], a4[r11 + 68 >> 2] = k5 - u5, D5 = a4[r11 + 112 >> 2], a4[r11 + 64 >> 2] = D5 - g5, y5 = a4[r11 + 108 >> 2], a4[r11 + 60 >> 2] = y5 - h5, C5 = a4[r11 + 104 >> 2], a4[r11 + 56 >> 2] = C5 - o5, m5 = a4[r11 + 100 >> 2], a4[r11 + 52 >> 2] = m5 - i4, B5 = a4[r11 + 96 >> 2], a4[r11 + 48 >> 2] = B5 - A8, et2(r11, r11 + 48 | 0);
                              t: {
                                if (!ht2(r11, 32)) {
                                  if (a4[r11 + 36 >> 2] = E5 + d5, a4[r11 + 32 >> 2] = w5 + p5, a4[r11 + 28 >> 2] = _5 + f5, a4[r11 + 24 >> 2] = Q5 + l5, a4[r11 + 20 >> 2] = k5 + u5, a4[r11 + 16 >> 2] = D5 + g5, a4[r11 + 12 >> 2] = h5 + y5, a4[r11 + 8 >> 2] = o5 + C5, a4[r11 + 4 >> 2] = i4 + m5, a4[r11 >> 2] = A8 + B5, et2(E5 = r11 + 288 | 0, r11), !ht2(E5, 32))
                                    break t;
                                  v4(t7, t7, 1392);
                                }
                                et2(r11 + 288 | 0, t7), (1 & s4[r11 + 288 | 0]) == (c4[e6 + 31 | 0] >>> 7 | 0) && (a4[t7 >> 2] = 0 - a4[t7 >> 2], a4[t7 + 36 >> 2] = 0 - a4[t7 + 36 >> 2], a4[t7 + 32 >> 2] = 0 - a4[t7 + 32 >> 2], a4[t7 + 28 >> 2] = 0 - a4[t7 + 28 >> 2], a4[t7 + 24 >> 2] = 0 - a4[t7 + 24 >> 2], a4[t7 + 20 >> 2] = 0 - a4[t7 + 20 >> 2], a4[t7 + 16 >> 2] = 0 - a4[t7 + 16 >> 2], a4[t7 + 12 >> 2] = 0 - a4[t7 + 12 >> 2], a4[t7 + 8 >> 2] = 0 - a4[t7 + 8 >> 2], a4[t7 + 4 >> 2] = 0 - a4[t7 + 4 >> 2]), v4(t7 + 120 | 0, t7, n9), S5 = 0;
                              }
                              return I4 = r11 + 320 | 0, S5;
                            }
                            function M4(t7, e6, r11) {
                              var n9, A8, i4, o5, a5, h5, g5, u5, l5, f5, p5, d5, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0;
                              for (B5 = 1634760805, y5 = n9 = c4[0 | r11] | c4[r11 + 1 | 0] << 8 | c4[r11 + 2 | 0] << 16 | c4[r11 + 3 | 0] << 24, E5 = A8 = c4[r11 + 4 | 0] | c4[r11 + 5 | 0] << 8 | c4[r11 + 6 | 0] << 16 | c4[r11 + 7 | 0] << 24, w5 = i4 = c4[r11 + 8 | 0] | c4[r11 + 9 | 0] << 8 | c4[r11 + 10 | 0] << 16 | c4[r11 + 11 | 0] << 24, v5 = o5 = c4[r11 + 12 | 0] | c4[r11 + 13 | 0] << 8 | c4[r11 + 14 | 0] << 16 | c4[r11 + 15 | 0] << 24, k5 = 857760878, _5 = a5 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24, C5 = h5 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24, b5 = g5 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, S5 = u5 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, e6 = 2036477234, m5 = l5 = c4[r11 + 16 | 0] | c4[r11 + 17 | 0] << 8 | c4[r11 + 18 | 0] << 16 | c4[r11 + 19 | 0] << 24, I5 = 1797285236, N6 = f5 = c4[r11 + 28 | 0] | c4[r11 + 29 | 0] << 8 | c4[r11 + 30 | 0] << 16 | c4[r11 + 31 | 0] << 24, D5 = p5 = c4[r11 + 24 | 0] | c4[r11 + 25 | 0] << 8 | c4[r11 + 26 | 0] << 16 | c4[r11 + 27 | 0] << 24, r11 = d5 = c4[r11 + 20 | 0] | c4[r11 + 21 | 0] << 8 | c4[r11 + 22 | 0] << 16 | c4[r11 + 23 | 0] << 24; Q5 = Gt2(y5 + k5 | 0, 7) ^ S5, M5 = Gt2(Q5 + k5 | 0, 9) ^ D5, v5 = Gt2(r11 + B5 | 0, 7) ^ v5, x5 = Gt2(v5 + B5 | 0, 9) ^ b5, P5 = Gt2(x5 + v5 | 0, 13) ^ r11, w5 = Gt2(I5 + m5 | 0, 7) ^ w5, F5 = Gt2(w5 + I5 | 0, 9) ^ C5, b5 = Gt2(w5 + F5 | 0, 13) ^ m5, m5 = Gt2(F5 + b5 | 0, 18) ^ I5, C5 = Gt2(e6 + _5 | 0, 7) ^ N6, r11 = P5 ^ Gt2(m5 + C5 | 0, 7), D5 = M5 ^ Gt2(r11 + m5 | 0, 9), N6 = Gt2(r11 + D5 | 0, 13) ^ C5, I5 = Gt2(D5 + N6 | 0, 18) ^ m5, E5 = Gt2(e6 + C5 | 0, 9) ^ E5, _5 = Gt2(E5 + C5 | 0, 13) ^ _5, e6 = Gt2(_5 + E5 | 0, 18) ^ e6, m5 = Gt2(e6 + Q5 | 0, 7) ^ b5, b5 = Gt2(m5 + e6 | 0, 9) ^ x5, S5 = Gt2(m5 + b5 | 0, 13) ^ Q5, e6 = Gt2(b5 + S5 | 0, 18) ^ e6, Q5 = Gt2(Q5 + M5 | 0, 13) ^ y5, y5 = Gt2(Q5 + M5 | 0, 18) ^ k5, _5 = Gt2(y5 + v5 | 0, 7) ^ _5, C5 = Gt2(_5 + y5 | 0, 9) ^ F5, v5 = Gt2(C5 + _5 | 0, 13) ^ v5, k5 = Gt2(C5 + v5 | 0, 18) ^ y5, B5 = Gt2(x5 + P5 | 0, 18) ^ B5, y5 = Gt2(B5 + w5 | 0, 7) ^ Q5, E5 = Gt2(y5 + B5 | 0, 9) ^ E5, w5 = Gt2(y5 + E5 | 0, 13) ^ w5, B5 = Gt2(E5 + w5 | 0, 18) ^ B5, Q5 = T3 >>> 0 < 18, T3 = T3 + 2 | 0, Q5; )
                                ;
                              I5 = I5 + 1797285236 | 0, s4[t7 + 60 | 0] = I5, s4[t7 + 61 | 0] = I5 >>> 8, s4[t7 + 62 | 0] = I5 >>> 16, s4[t7 + 63 | 0] = I5 >>> 24, I5 = N6 + f5 | 0, s4[t7 + 56 | 0] = I5, s4[t7 + 57 | 0] = I5 >>> 8, s4[t7 + 58 | 0] = I5 >>> 16, s4[t7 + 59 | 0] = I5 >>> 24, I5 = D5 + p5 | 0, s4[t7 + 52 | 0] = I5, s4[t7 + 53 | 0] = I5 >>> 8, s4[t7 + 54 | 0] = I5 >>> 16, s4[t7 + 55 | 0] = I5 >>> 24, r11 = r11 + d5 | 0, s4[t7 + 48 | 0] = r11, s4[t7 + 49 | 0] = r11 >>> 8, s4[t7 + 50 | 0] = r11 >>> 16, s4[t7 + 51 | 0] = r11 >>> 24, r11 = m5 + l5 | 0, s4[t7 + 44 | 0] = r11, s4[t7 + 45 | 0] = r11 >>> 8, s4[t7 + 46 | 0] = r11 >>> 16, s4[t7 + 47 | 0] = r11 >>> 24, e6 = e6 + 2036477234 | 0, s4[t7 + 40 | 0] = e6, s4[t7 + 41 | 0] = e6 >>> 8, s4[t7 + 42 | 0] = e6 >>> 16, s4[t7 + 43 | 0] = e6 >>> 24, e6 = S5 + u5 | 0, s4[t7 + 36 | 0] = e6, s4[t7 + 37 | 0] = e6 >>> 8, s4[t7 + 38 | 0] = e6 >>> 16, s4[t7 + 39 | 0] = e6 >>> 24, e6 = b5 + g5 | 0, s4[t7 + 32 | 0] = e6, s4[t7 + 33 | 0] = e6 >>> 8, s4[t7 + 34 | 0] = e6 >>> 16, s4[t7 + 35 | 0] = e6 >>> 24, e6 = C5 + h5 | 0, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, e6 = _5 + a5 | 0, s4[t7 + 24 | 0] = e6, s4[t7 + 25 | 0] = e6 >>> 8, s4[t7 + 26 | 0] = e6 >>> 16, s4[t7 + 27 | 0] = e6 >>> 24, e6 = k5 + 857760878 | 0, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = v5 + o5 | 0, s4[t7 + 16 | 0] = e6, s4[t7 + 17 | 0] = e6 >>> 8, s4[t7 + 18 | 0] = e6 >>> 16, s4[t7 + 19 | 0] = e6 >>> 24, e6 = w5 + i4 | 0, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = E5 + A8 | 0, s4[t7 + 8 | 0] = e6, s4[t7 + 9 | 0] = e6 >>> 8, s4[t7 + 10 | 0] = e6 >>> 16, s4[t7 + 11 | 0] = e6 >>> 24, e6 = y5 + n9 | 0, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, e6 = B5 + 1634760805 | 0, s4[0 | t7] = e6, s4[t7 + 1 | 0] = e6 >>> 8, s4[t7 + 2 | 0] = e6 >>> 16, s4[t7 + 3 | 0] = e6 >>> 24;
                            }
                            function x4(t7, e6, r11, n9) {
                              var A8 = 0, i4 = 0, o5 = 0, s5 = 0, h5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0;
                              if (I5 = a4[t7 + 36 >> 2], p5 = a4[t7 + 32 >> 2], d5 = a4[t7 + 28 >> 2], l5 = a4[t7 + 24 >> 2], f5 = a4[t7 + 20 >> 2], !n9 & r11 >>> 0 >= 16 | n9)
                                for (k5 = !c4[t7 + 80 | 0] << 24, m5 = a4[t7 + 4 >> 2], D5 = g4(m5, 5), E5 = a4[t7 + 8 >> 2], Q5 = g4(E5, 5), v5 = a4[t7 + 12 >> 2], _5 = g4(v5, 5), b5 = a4[t7 + 16 >> 2], w5 = g4(b5, 5), B5 = a4[t7 >> 2]; A8 = Bt2(o5 = ((c4[e6 + 3 | 0] | c4[e6 + 4 | 0] << 8 | c4[e6 + 5 | 0] << 16 | c4[e6 + 6 | 0] << 24) >>> 2 & 67108863) + l5 | 0, 0, v5, 0), h5 = y4, f5 = (s5 = Bt2(l5 = (67108863 & (c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24)) + f5 | 0, 0, b5, 0)) + A8 | 0, A8 = y4 + h5 | 0, A8 = s5 >>> 0 > f5 >>> 0 ? A8 + 1 | 0 : A8, h5 = Bt2(d5 = ((c4[e6 + 6 | 0] | c4[e6 + 7 | 0] << 8 | c4[e6 + 8 | 0] << 16 | c4[e6 + 9 | 0] << 24) >>> 4 & 67108863) + d5 | 0, 0, E5, 0), A8 = y4 + A8 | 0, A8 = h5 >>> 0 > (f5 = h5 + f5 | 0) >>> 0 ? A8 + 1 | 0 : A8, h5 = Bt2(p5 = ((c4[e6 + 9 | 0] | c4[e6 + 10 | 0] << 8 | c4[e6 + 11 | 0] << 16 | c4[e6 + 12 | 0] << 24) >>> 6 | 0) + p5 | 0, 0, m5, 0), A8 = y4 + A8 | 0, A8 = h5 >>> 0 > (f5 = h5 + f5 | 0) >>> 0 ? A8 + 1 | 0 : A8, h5 = Bt2(I5 = I5 + k5 + ((c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24) >>> 8) | 0, 0, B5, 0), A8 = y4 + A8 | 0, S5 = f5 = h5 + f5 | 0, f5 = h5 >>> 0 > f5 >>> 0 ? A8 + 1 | 0 : A8, A8 = Bt2(o5, 0, E5, 0), h5 = y4, s5 = Bt2(l5, 0, v5, 0), i4 = y4 + h5 | 0, i4 = (A8 = s5 + A8 | 0) >>> 0 < s5 >>> 0 ? i4 + 1 | 0 : i4, h5 = (s5 = Bt2(d5, 0, m5, 0)) + A8 | 0, A8 = y4 + i4 | 0, A8 = s5 >>> 0 > h5 >>> 0 ? A8 + 1 | 0 : A8, s5 = Bt2(p5, 0, B5, 0), A8 = y4 + A8 | 0, A8 = s5 >>> 0 > (h5 = s5 + h5 | 0) >>> 0 ? A8 + 1 | 0 : A8, s5 = Bt2(I5, 0, w5, 0), A8 = y4 + A8 | 0, N6 = h5 = s5 + h5 | 0, h5 = s5 >>> 0 > h5 >>> 0 ? A8 + 1 | 0 : A8, A8 = Bt2(o5, 0, m5, 0), u5 = y4, s5 = (i4 = Bt2(l5, 0, E5, 0)) + A8 | 0, A8 = y4 + u5 | 0, A8 = i4 >>> 0 > s5 >>> 0 ? A8 + 1 | 0 : A8, u5 = Bt2(d5, 0, B5, 0), i4 = y4 + A8 | 0, i4 = (s5 = u5 + s5 | 0) >>> 0 < u5 >>> 0 ? i4 + 1 | 0 : i4, u5 = Bt2(p5, 0, w5, 0), A8 = y4 + i4 | 0, A8 = (s5 = u5 + s5 | 0) >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, u5 = Bt2(I5, 0, _5, 0), A8 = y4 + A8 | 0, M5 = s5 = u5 + s5 | 0, s5 = s5 >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, A8 = Bt2(o5, 0, B5, 0), i4 = y4, u5 = (C5 = Bt2(l5, 0, m5, 0)) + A8 | 0, A8 = y4 + i4 | 0, A8 = u5 >>> 0 < C5 >>> 0 ? A8 + 1 | 0 : A8, i4 = Bt2(d5, 0, w5, 0), A8 = y4 + A8 | 0, A8 = i4 >>> 0 > (u5 = i4 + u5 | 0) >>> 0 ? A8 + 1 | 0 : A8, C5 = Bt2(p5, 0, _5, 0), i4 = y4 + A8 | 0, i4 = (u5 = C5 + u5 | 0) >>> 0 < C5 >>> 0 ? i4 + 1 | 0 : i4, C5 = Bt2(I5, 0, Q5, 0), A8 = y4 + i4 | 0, A8 = (u5 = C5 + u5 | 0) >>> 0 < C5 >>> 0 ? A8 + 1 | 0 : A8, C5 = u5, u5 = A8, A8 = Bt2(o5, 0, w5, 0), i4 = y4, o5 = (l5 = Bt2(l5, 0, B5, 0)) + A8 | 0, A8 = y4 + i4 | 0, A8 = o5 >>> 0 < l5 >>> 0 ? A8 + 1 | 0 : A8, l5 = Bt2(d5, 0, _5, 0), A8 = y4 + A8 | 0, A8 = (o5 = l5 + o5 | 0) >>> 0 < l5 >>> 0 ? A8 + 1 | 0 : A8, l5 = Bt2(p5, 0, Q5, 0), A8 = y4 + A8 | 0, A8 = (o5 = l5 + o5 | 0) >>> 0 < l5 >>> 0 ? A8 + 1 | 0 : A8, l5 = Bt2(I5, 0, D5, 0), i4 = y4 + A8 | 0, i4 = (o5 = l5 + o5 | 0) >>> 0 < l5 >>> 0 ? i4 + 1 | 0 : i4, l5 = o5, A8 = u5, A8 = (o5 = (d5 = (67108863 & i4) << 6 | o5 >>> 26) + C5 | 0) >>> 0 < d5 >>> 0 ? A8 + 1 | 0 : A8, d5 = o5, p5 = (67108863 & A8) << 6 | o5 >>> 26, A8 = s5, A8 = (o5 = p5 + M5 | 0) >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8, p5 = o5, i4 = h5, I5 = A8 = (o5 = (67108863 & A8) << 6 | o5 >>> 26) + N6 | 0, h5 = (67108863 & (i4 = A8 >>> 0 < o5 >>> 0 ? i4 + 1 | 0 : i4)) << 6 | A8 >>> 26, A8 = f5, l5 = (67108863 & d5) + ((A8 = g4((67108863 & ((o5 = h5 + S5 | 0) >>> 0 < h5 >>> 0 ? A8 + 1 : A8)) << 6 | o5 >>> 26, 5) + (67108863 & l5) | 0) >>> 26 | 0) | 0, d5 = 67108863 & p5, p5 = 67108863 & I5, I5 = 67108863 & o5, f5 = 67108863 & A8, e6 = e6 + 16 | 0, !(n9 = n9 - (r11 >>> 0 < 16) | 0) & (r11 = r11 - 16 | 0) >>> 0 > 15 | n9; )
                                  ;
                              a4[t7 + 20 >> 2] = f5, a4[t7 + 36 >> 2] = I5, a4[t7 + 32 >> 2] = p5, a4[t7 + 28 >> 2] = d5, a4[t7 + 24 >> 2] = l5;
                            }
                            function F4(t7, e6, r11, n9) {
                              t7 |= 0, e6 |= 0;
                              var A8 = 0;
                              return A8 = -1, (n9 |= 0) - 65 >>> 0 < 4294967232 | (r11 |= 0) >>> 0 > 64 || (r11 && e6 ? (I4 = A8 = I4 - 128 | 0, !e6 | ((n9 &= 255) - 65 & 255) >>> 0 <= 191 | ((r11 &= 255) - 65 & 255) >>> 0 <= 191 ? (Kt2(), i3()) : (xt2(t7 - -64 | 0, 0, 293), s4[t7 + 56 | 0] = 121, s4[t7 + 57 | 0] = 33, s4[t7 + 58 | 0] = 126, s4[t7 + 59 | 0] = 19, s4[t7 + 60 | 0] = 25, s4[t7 + 61 | 0] = 205, s4[t7 + 62 | 0] = 224, s4[t7 + 63 | 0] = 91, s4[t7 + 48 | 0] = 107, s4[t7 + 49 | 0] = 189, s4[t7 + 50 | 0] = 65, s4[t7 + 51 | 0] = 251, s4[t7 + 52 | 0] = 171, s4[t7 + 53 | 0] = 217, s4[t7 + 54 | 0] = 131, s4[t7 + 55 | 0] = 31, s4[t7 + 40 | 0] = 31, s4[t7 + 41 | 0] = 108, s4[t7 + 42 | 0] = 62, s4[t7 + 43 | 0] = 43, s4[t7 + 44 | 0] = 140, s4[t7 + 45 | 0] = 104, s4[t7 + 46 | 0] = 5, s4[t7 + 47 | 0] = 155, s4[t7 + 32 | 0] = 209, s4[t7 + 33 | 0] = 130, s4[t7 + 34 | 0] = 230, s4[t7 + 35 | 0] = 173, s4[t7 + 36 | 0] = 127, s4[t7 + 37 | 0] = 82, s4[t7 + 38 | 0] = 14, s4[t7 + 39 | 0] = 81, s4[t7 + 24 | 0] = 241, s4[t7 + 25 | 0] = 54, s4[t7 + 26 | 0] = 29, s4[t7 + 27 | 0] = 95, s4[t7 + 28 | 0] = 58, s4[t7 + 29 | 0] = 245, s4[t7 + 30 | 0] = 79, s4[t7 + 31 | 0] = 165, s4[t7 + 16 | 0] = 43, s4[t7 + 17 | 0] = 248, s4[t7 + 18 | 0] = 148, s4[t7 + 19 | 0] = 254, s4[t7 + 20 | 0] = 114, s4[t7 + 21 | 0] = 243, s4[t7 + 22 | 0] = 110, s4[t7 + 23 | 0] = 60, s4[t7 + 8 | 0] = 59, s4[t7 + 9 | 0] = 167, s4[t7 + 10 | 0] = 202, s4[t7 + 11 | 0] = 132, s4[t7 + 12 | 0] = 133, s4[t7 + 13 | 0] = 174, s4[t7 + 14 | 0] = 103, s4[t7 + 15 | 0] = 187, n9 = -222443256 ^ (r11 << 8 | n9), s4[0 | t7] = n9, s4[t7 + 1 | 0] = n9 >>> 8, s4[t7 + 2 | 0] = n9 >>> 16, s4[t7 + 3 | 0] = n9 >>> 24, n9 = r11 >>> 24 ^ 1779033703, s4[t7 + 4 | 0] = n9, s4[t7 + 5 | 0] = n9 >>> 8, s4[t7 + 6 | 0] = n9 >>> 16, s4[t7 + 7 | 0] = n9 >>> 24, xt2(r11 + A8 | 0, 0, r11 << 24 >> 24 >= 0 ? 128 - r11 | 0 : 0), r11 = Mt2(A8, e6, r11), Mt2(t7 + 96 | 0, r11, 128), e6 = 128 + (c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) | 0, s4[t7 + 352 | 0] = e6, s4[t7 + 353 | 0] = e6 >>> 8, s4[t7 + 354 | 0] = e6 >>> 16, s4[t7 + 355 | 0] = e6 >>> 24, oe2(r11, 128), I4 = r11 + 128 | 0)) : (((e6 = 255 & n9) - 65 & 255) >>> 0 <= 191 && (Kt2(), i3()), xt2(t7 - -64 | 0, 0, 293), s4[t7 + 56 | 0] = 121, s4[t7 + 57 | 0] = 33, s4[t7 + 58 | 0] = 126, s4[t7 + 59 | 0] = 19, s4[t7 + 60 | 0] = 25, s4[t7 + 61 | 0] = 205, s4[t7 + 62 | 0] = 224, s4[t7 + 63 | 0] = 91, s4[t7 + 48 | 0] = 107, s4[t7 + 49 | 0] = 189, s4[t7 + 50 | 0] = 65, s4[t7 + 51 | 0] = 251, s4[t7 + 52 | 0] = 171, s4[t7 + 53 | 0] = 217, s4[t7 + 54 | 0] = 131, s4[t7 + 55 | 0] = 31, s4[t7 + 40 | 0] = 31, s4[t7 + 41 | 0] = 108, s4[t7 + 42 | 0] = 62, s4[t7 + 43 | 0] = 43, s4[t7 + 44 | 0] = 140, s4[t7 + 45 | 0] = 104, s4[t7 + 46 | 0] = 5, s4[t7 + 47 | 0] = 155, s4[t7 + 32 | 0] = 209, s4[t7 + 33 | 0] = 130, s4[t7 + 34 | 0] = 230, s4[t7 + 35 | 0] = 173, s4[t7 + 36 | 0] = 127, s4[t7 + 37 | 0] = 82, s4[t7 + 38 | 0] = 14, s4[t7 + 39 | 0] = 81, s4[t7 + 24 | 0] = 241, s4[t7 + 25 | 0] = 54, s4[t7 + 26 | 0] = 29, s4[t7 + 27 | 0] = 95, s4[t7 + 28 | 0] = 58, s4[t7 + 29 | 0] = 245, s4[t7 + 30 | 0] = 79, s4[t7 + 31 | 0] = 165, s4[t7 + 16 | 0] = 43, s4[t7 + 17 | 0] = 248, s4[t7 + 18 | 0] = 148, s4[t7 + 19 | 0] = 254, s4[t7 + 20 | 0] = 114, s4[t7 + 21 | 0] = 243, s4[t7 + 22 | 0] = 110, s4[t7 + 23 | 0] = 60, s4[t7 + 8 | 0] = 59, s4[t7 + 9 | 0] = 167, s4[t7 + 10 | 0] = 202, s4[t7 + 11 | 0] = 132, s4[t7 + 12 | 0] = 133, s4[t7 + 13 | 0] = 174, s4[t7 + 14 | 0] = 103, s4[t7 + 15 | 0] = 187, e6 ^= -222443256, s4[0 | t7] = e6, s4[t7 + 1 | 0] = e6 >>> 8, s4[t7 + 2 | 0] = e6 >>> 16, s4[t7 + 3 | 0] = e6 >>> 24, s4[t7 + 4 | 0] = 103, s4[t7 + 5 | 0] = 230, s4[t7 + 6 | 0] = 9, s4[t7 + 7 | 0] = 106), A8 = 0), 0 | A8;
                            }
                            function P4(t7, e6, r11) {
                              var n9, A8, i4, o5, s5, c5, h5, g5, u5, l5, f5, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0;
                              p5 = a4[e6 + 40 >> 2], d5 = a4[e6 + 4 >> 2], y5 = a4[e6 + 44 >> 2], C5 = a4[e6 + 8 >> 2], m5 = a4[e6 + 48 >> 2], B5 = a4[e6 + 12 >> 2], E5 = a4[e6 + 52 >> 2], w5 = a4[e6 + 16 >> 2], _5 = a4[e6 + 56 >> 2], Q5 = a4[e6 + 20 >> 2], b5 = a4[e6 + 60 >> 2], k5 = a4[e6 + 24 >> 2], D5 = a4[(I5 = e6 - -64 | 0) >> 2], S5 = a4[e6 + 28 >> 2], N6 = a4[e6 + 68 >> 2], M5 = a4[e6 + 32 >> 2], x5 = a4[e6 + 72 >> 2], F5 = a4[e6 >> 2], a4[t7 + 36 >> 2] = a4[e6 + 36 >> 2] + a4[e6 + 76 >> 2], a4[t7 + 32 >> 2] = M5 + x5, a4[t7 + 28 >> 2] = S5 + N6, a4[t7 + 24 >> 2] = k5 + D5, a4[t7 + 20 >> 2] = Q5 + b5, a4[t7 + 16 >> 2] = w5 + _5, a4[t7 + 12 >> 2] = B5 + E5, a4[t7 + 8 >> 2] = C5 + m5, a4[t7 + 4 >> 2] = d5 + y5, a4[t7 >> 2] = p5 + F5, y5 = a4[e6 + 40 >> 2], p5 = a4[e6 + 4 >> 2], C5 = a4[e6 + 44 >> 2], m5 = a4[e6 + 8 >> 2], B5 = a4[e6 + 48 >> 2], E5 = a4[e6 + 12 >> 2], w5 = a4[e6 + 52 >> 2], _5 = a4[e6 + 16 >> 2], Q5 = a4[e6 + 56 >> 2], b5 = a4[e6 + 20 >> 2], k5 = a4[e6 + 60 >> 2], D5 = a4[e6 + 24 >> 2], I5 = a4[I5 >> 2], d5 = a4[e6 + 28 >> 2], S5 = a4[e6 + 68 >> 2], N6 = a4[e6 + 32 >> 2], M5 = a4[e6 + 72 >> 2], x5 = a4[e6 >> 2], a4[t7 + 76 >> 2] = a4[e6 + 76 >> 2] - a4[e6 + 36 >> 2], a4[t7 + 72 >> 2] = M5 - N6, a4[t7 + 68 >> 2] = S5 - d5, a4[(d5 = t7 - -64 | 0) >> 2] = I5 - D5, a4[t7 + 60 >> 2] = k5 - b5, a4[t7 + 56 >> 2] = Q5 - _5, a4[t7 + 52 >> 2] = w5 - E5, a4[t7 + 48 >> 2] = B5 - m5, a4[t7 + 44 >> 2] = C5 - p5, a4[(p5 = t7 + 40 | 0) >> 2] = y5 - x5, v4(t7 + 80 | 0, t7, r11), v4(p5, p5, r11 + 40 | 0), v4(t7 + 120 | 0, r11 + 120 | 0, e6 + 120 | 0), v4(t7, e6 + 80 | 0, r11 + 80 | 0), F5 = a4[t7 + 4 >> 2], i4 = a4[t7 + 8 >> 2], o5 = a4[t7 + 12 >> 2], s5 = a4[t7 + 16 >> 2], c5 = a4[t7 + 20 >> 2], h5 = a4[t7 + 24 >> 2], g5 = a4[t7 + 28 >> 2], u5 = a4[t7 + 32 >> 2], l5 = a4[t7 + 36 >> 2], e6 = a4[p5 >> 2], r11 = a4[t7 + 80 >> 2], y5 = a4[t7 + 44 >> 2], C5 = a4[t7 + 84 >> 2], m5 = a4[t7 + 48 >> 2], B5 = a4[t7 + 88 >> 2], E5 = a4[t7 + 52 >> 2], w5 = a4[t7 + 92 >> 2], _5 = a4[t7 + 56 >> 2], Q5 = a4[t7 + 96 >> 2], b5 = a4[t7 + 60 >> 2], k5 = a4[t7 + 100 >> 2], I5 = a4[d5 >> 2], D5 = a4[t7 + 104 >> 2], S5 = a4[t7 + 68 >> 2], N6 = a4[t7 + 108 >> 2], M5 = a4[t7 + 72 >> 2], x5 = a4[t7 + 112 >> 2], f5 = a4[t7 >> 2], n9 = a4[t7 + 76 >> 2], A8 = a4[t7 + 116 >> 2], a4[t7 + 76 >> 2] = n9 + A8, a4[t7 + 72 >> 2] = M5 + x5, a4[t7 + 68 >> 2] = S5 + N6, a4[d5 >> 2] = I5 + D5, a4[t7 + 60 >> 2] = b5 + k5, a4[t7 + 56 >> 2] = _5 + Q5, a4[t7 + 52 >> 2] = E5 + w5, a4[t7 + 48 >> 2] = m5 + B5, a4[t7 + 44 >> 2] = y5 + C5, a4[p5 >> 2] = e6 + r11, a4[t7 + 36 >> 2] = A8 - n9, a4[t7 + 32 >> 2] = x5 - M5, a4[t7 + 28 >> 2] = N6 - S5, a4[t7 + 24 >> 2] = D5 - I5, a4[t7 + 20 >> 2] = k5 - b5, a4[t7 + 16 >> 2] = Q5 - _5, a4[t7 + 12 >> 2] = w5 - E5, a4[t7 + 8 >> 2] = B5 - m5, a4[t7 + 4 >> 2] = C5 - y5, a4[t7 >> 2] = r11 - e6, e6 = l5 << 1, r11 = a4[t7 + 156 >> 2], a4[t7 + 156 >> 2] = e6 - r11, p5 = u5 << 1, d5 = a4[t7 + 152 >> 2], a4[t7 + 152 >> 2] = p5 - d5, y5 = g5 << 1, C5 = a4[t7 + 148 >> 2], a4[t7 + 148 >> 2] = y5 - C5, m5 = h5 << 1, B5 = a4[t7 + 144 >> 2], a4[t7 + 144 >> 2] = m5 - B5, E5 = c5 << 1, w5 = a4[t7 + 140 >> 2], a4[t7 + 140 >> 2] = E5 - w5, _5 = s5 << 1, Q5 = a4[t7 + 136 >> 2], a4[t7 + 136 >> 2] = _5 - Q5, b5 = o5 << 1, k5 = a4[t7 + 132 >> 2], a4[t7 + 132 >> 2] = b5 - k5, I5 = i4 << 1, D5 = a4[t7 + 128 >> 2], a4[t7 + 128 >> 2] = I5 - D5, S5 = F5 << 1, N6 = a4[t7 + 124 >> 2], a4[t7 + 124 >> 2] = S5 - N6, M5 = f5 << 1, x5 = a4[t7 + 120 >> 2], a4[t7 + 120 >> 2] = M5 - x5, a4[t7 + 112 >> 2] = p5 + d5, a4[t7 + 108 >> 2] = y5 + C5, a4[t7 + 104 >> 2] = m5 + B5, a4[t7 + 100 >> 2] = E5 + w5, a4[t7 + 96 >> 2] = _5 + Q5, a4[t7 + 92 >> 2] = b5 + k5, a4[t7 + 88 >> 2] = I5 + D5, a4[t7 + 84 >> 2] = S5 + N6, a4[t7 + 80 >> 2] = M5 + x5, a4[t7 + 116 >> 2] = e6 + r11;
                            }
                            function T2(t7, e6, r11) {
                              var n9, A8, i4, o5, s5, c5, h5, g5, u5, l5, f5, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0;
                              p5 = a4[e6 + 40 >> 2], d5 = a4[e6 + 4 >> 2], y5 = a4[e6 + 44 >> 2], C5 = a4[e6 + 8 >> 2], m5 = a4[e6 + 48 >> 2], B5 = a4[e6 + 12 >> 2], E5 = a4[e6 + 52 >> 2], w5 = a4[e6 + 16 >> 2], _5 = a4[e6 + 56 >> 2], Q5 = a4[e6 + 20 >> 2], b5 = a4[e6 + 60 >> 2], k5 = a4[e6 + 24 >> 2], D5 = a4[(I5 = e6 - -64 | 0) >> 2], S5 = a4[e6 + 28 >> 2], N6 = a4[e6 + 68 >> 2], M5 = a4[e6 + 32 >> 2], x5 = a4[e6 + 72 >> 2], F5 = a4[e6 >> 2], a4[t7 + 36 >> 2] = a4[e6 + 36 >> 2] + a4[e6 + 76 >> 2], a4[t7 + 32 >> 2] = M5 + x5, a4[t7 + 28 >> 2] = S5 + N6, a4[t7 + 24 >> 2] = k5 + D5, a4[t7 + 20 >> 2] = Q5 + b5, a4[t7 + 16 >> 2] = w5 + _5, a4[t7 + 12 >> 2] = B5 + E5, a4[t7 + 8 >> 2] = C5 + m5, a4[t7 + 4 >> 2] = d5 + y5, a4[t7 >> 2] = p5 + F5, y5 = a4[e6 + 40 >> 2], p5 = a4[e6 + 4 >> 2], C5 = a4[e6 + 44 >> 2], m5 = a4[e6 + 8 >> 2], B5 = a4[e6 + 48 >> 2], E5 = a4[e6 + 12 >> 2], w5 = a4[e6 + 52 >> 2], _5 = a4[e6 + 16 >> 2], Q5 = a4[e6 + 56 >> 2], b5 = a4[e6 + 20 >> 2], k5 = a4[e6 + 60 >> 2], D5 = a4[e6 + 24 >> 2], I5 = a4[I5 >> 2], d5 = a4[e6 + 28 >> 2], S5 = a4[e6 + 68 >> 2], N6 = a4[e6 + 32 >> 2], M5 = a4[e6 + 72 >> 2], x5 = a4[e6 >> 2], a4[t7 + 76 >> 2] = a4[e6 + 76 >> 2] - a4[e6 + 36 >> 2], a4[t7 + 72 >> 2] = M5 - N6, a4[t7 + 68 >> 2] = S5 - d5, a4[(d5 = t7 - -64 | 0) >> 2] = I5 - D5, a4[t7 + 60 >> 2] = k5 - b5, a4[t7 + 56 >> 2] = Q5 - _5, a4[t7 + 52 >> 2] = w5 - E5, a4[t7 + 48 >> 2] = B5 - m5, a4[t7 + 44 >> 2] = C5 - p5, a4[(p5 = t7 + 40 | 0) >> 2] = y5 - x5, v4(t7 + 80 | 0, t7, r11 + 40 | 0), v4(p5, p5, r11), v4(t7 + 120 | 0, r11 + 120 | 0, e6 + 120 | 0), v4(t7, e6 + 80 | 0, r11 + 80 | 0), F5 = a4[t7 + 4 >> 2], i4 = a4[t7 + 8 >> 2], o5 = a4[t7 + 12 >> 2], s5 = a4[t7 + 16 >> 2], c5 = a4[t7 + 20 >> 2], h5 = a4[t7 + 24 >> 2], g5 = a4[t7 + 28 >> 2], u5 = a4[t7 + 32 >> 2], l5 = a4[t7 + 36 >> 2], e6 = a4[p5 >> 2], r11 = a4[t7 + 80 >> 2], y5 = a4[t7 + 44 >> 2], C5 = a4[t7 + 84 >> 2], m5 = a4[t7 + 48 >> 2], B5 = a4[t7 + 88 >> 2], E5 = a4[t7 + 52 >> 2], w5 = a4[t7 + 92 >> 2], _5 = a4[t7 + 56 >> 2], Q5 = a4[t7 + 96 >> 2], b5 = a4[t7 + 60 >> 2], k5 = a4[t7 + 100 >> 2], I5 = a4[d5 >> 2], D5 = a4[t7 + 104 >> 2], S5 = a4[t7 + 68 >> 2], N6 = a4[t7 + 108 >> 2], M5 = a4[t7 + 72 >> 2], x5 = a4[t7 + 112 >> 2], f5 = a4[t7 >> 2], n9 = a4[t7 + 76 >> 2], A8 = a4[t7 + 116 >> 2], a4[t7 + 76 >> 2] = n9 + A8, a4[t7 + 72 >> 2] = M5 + x5, a4[t7 + 68 >> 2] = S5 + N6, a4[d5 >> 2] = I5 + D5, a4[t7 + 60 >> 2] = b5 + k5, a4[t7 + 56 >> 2] = _5 + Q5, a4[t7 + 52 >> 2] = E5 + w5, a4[t7 + 48 >> 2] = m5 + B5, a4[t7 + 44 >> 2] = y5 + C5, a4[p5 >> 2] = e6 + r11, a4[t7 + 36 >> 2] = A8 - n9, a4[t7 + 32 >> 2] = x5 - M5, a4[t7 + 28 >> 2] = N6 - S5, a4[t7 + 24 >> 2] = D5 - I5, a4[t7 + 20 >> 2] = k5 - b5, a4[t7 + 16 >> 2] = Q5 - _5, a4[t7 + 12 >> 2] = w5 - E5, a4[t7 + 8 >> 2] = B5 - m5, a4[t7 + 4 >> 2] = C5 - y5, a4[t7 >> 2] = r11 - e6, e6 = a4[t7 + 156 >> 2], r11 = l5 << 1, a4[t7 + 156 >> 2] = e6 + r11, p5 = a4[t7 + 152 >> 2], d5 = u5 << 1, a4[t7 + 152 >> 2] = p5 + d5, y5 = a4[t7 + 148 >> 2], C5 = g5 << 1, a4[t7 + 148 >> 2] = y5 + C5, m5 = a4[t7 + 144 >> 2], B5 = h5 << 1, a4[t7 + 144 >> 2] = m5 + B5, E5 = a4[t7 + 140 >> 2], w5 = c5 << 1, a4[t7 + 140 >> 2] = E5 + w5, _5 = a4[t7 + 136 >> 2], Q5 = s5 << 1, a4[t7 + 136 >> 2] = _5 + Q5, b5 = a4[t7 + 132 >> 2], k5 = o5 << 1, a4[t7 + 132 >> 2] = b5 + k5, I5 = a4[t7 + 128 >> 2], D5 = i4 << 1, a4[t7 + 128 >> 2] = I5 + D5, S5 = a4[t7 + 124 >> 2], N6 = F5 << 1, a4[t7 + 124 >> 2] = S5 + N6, M5 = a4[t7 + 120 >> 2], x5 = f5 << 1, a4[t7 + 120 >> 2] = M5 + x5, a4[t7 + 112 >> 2] = d5 - p5, a4[t7 + 108 >> 2] = C5 - y5, a4[t7 + 104 >> 2] = B5 - m5, a4[t7 + 100 >> 2] = w5 - E5, a4[t7 + 96 >> 2] = Q5 - _5, a4[t7 + 92 >> 2] = k5 - b5, a4[t7 + 88 >> 2] = D5 - I5, a4[t7 + 84 >> 2] = N6 - S5, a4[t7 + 80 >> 2] = x5 - M5, a4[t7 + 116 >> 2] = r11 - e6;
                            }
                            function R4(t7, e6, r11) {
                              var n9, A8, i4, o5, s5, c5, h5, g5, u5, l5, f5, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0;
                              p5 = a4[e6 + 40 >> 2], d5 = a4[e6 + 4 >> 2], y5 = a4[e6 + 44 >> 2], C5 = a4[e6 + 8 >> 2], m5 = a4[e6 + 48 >> 2], B5 = a4[e6 + 12 >> 2], E5 = a4[e6 + 52 >> 2], w5 = a4[e6 + 16 >> 2], _5 = a4[e6 + 56 >> 2], Q5 = a4[e6 + 20 >> 2], b5 = a4[e6 + 60 >> 2], k5 = a4[e6 + 24 >> 2], D5 = a4[(I5 = e6 - -64 | 0) >> 2], S5 = a4[e6 + 28 >> 2], N6 = a4[e6 + 68 >> 2], M5 = a4[e6 + 32 >> 2], x5 = a4[e6 + 72 >> 2], F5 = a4[e6 >> 2], a4[t7 + 36 >> 2] = a4[e6 + 36 >> 2] + a4[e6 + 76 >> 2], a4[t7 + 32 >> 2] = M5 + x5, a4[t7 + 28 >> 2] = S5 + N6, a4[t7 + 24 >> 2] = k5 + D5, a4[t7 + 20 >> 2] = Q5 + b5, a4[t7 + 16 >> 2] = w5 + _5, a4[t7 + 12 >> 2] = B5 + E5, a4[t7 + 8 >> 2] = C5 + m5, a4[t7 + 4 >> 2] = d5 + y5, a4[t7 >> 2] = p5 + F5, y5 = a4[e6 + 40 >> 2], p5 = a4[e6 + 4 >> 2], C5 = a4[e6 + 44 >> 2], m5 = a4[e6 + 8 >> 2], B5 = a4[e6 + 48 >> 2], E5 = a4[e6 + 12 >> 2], w5 = a4[e6 + 52 >> 2], _5 = a4[e6 + 16 >> 2], Q5 = a4[e6 + 56 >> 2], b5 = a4[e6 + 20 >> 2], k5 = a4[e6 + 60 >> 2], D5 = a4[e6 + 24 >> 2], I5 = a4[I5 >> 2], d5 = a4[e6 + 28 >> 2], S5 = a4[e6 + 68 >> 2], N6 = a4[e6 + 32 >> 2], M5 = a4[e6 + 72 >> 2], x5 = a4[e6 >> 2], a4[t7 + 76 >> 2] = a4[e6 + 76 >> 2] - a4[e6 + 36 >> 2], a4[t7 + 72 >> 2] = M5 - N6, a4[t7 + 68 >> 2] = S5 - d5, a4[(d5 = t7 - -64 | 0) >> 2] = I5 - D5, a4[t7 + 60 >> 2] = k5 - b5, a4[t7 + 56 >> 2] = Q5 - _5, a4[t7 + 52 >> 2] = w5 - E5, a4[t7 + 48 >> 2] = B5 - m5, a4[t7 + 44 >> 2] = C5 - p5, a4[(p5 = t7 + 40 | 0) >> 2] = y5 - x5, v4(t7 + 80 | 0, t7, r11), v4(p5, p5, r11 + 40 | 0), v4(t7 + 120 | 0, r11 + 80 | 0, e6 + 120 | 0), F5 = a4[e6 + 80 >> 2], i4 = a4[e6 + 84 >> 2], o5 = a4[e6 + 88 >> 2], s5 = a4[e6 + 92 >> 2], c5 = a4[e6 + 96 >> 2], h5 = a4[e6 + 100 >> 2], g5 = a4[e6 + 104 >> 2], u5 = a4[e6 + 108 >> 2], l5 = a4[e6 + 112 >> 2], f5 = a4[e6 + 116 >> 2], e6 = a4[p5 >> 2], r11 = a4[t7 + 80 >> 2], y5 = a4[t7 + 44 >> 2], C5 = a4[t7 + 84 >> 2], m5 = a4[t7 + 48 >> 2], B5 = a4[t7 + 88 >> 2], E5 = a4[t7 + 52 >> 2], w5 = a4[t7 + 92 >> 2], _5 = a4[t7 + 56 >> 2], Q5 = a4[t7 + 96 >> 2], b5 = a4[t7 + 60 >> 2], k5 = a4[t7 + 100 >> 2], I5 = a4[d5 >> 2], D5 = a4[t7 + 104 >> 2], S5 = a4[t7 + 68 >> 2], N6 = a4[t7 + 108 >> 2], M5 = a4[t7 + 72 >> 2], x5 = a4[t7 + 112 >> 2], n9 = a4[t7 + 76 >> 2], A8 = a4[t7 + 116 >> 2], a4[t7 + 76 >> 2] = n9 + A8, a4[t7 + 72 >> 2] = M5 + x5, a4[t7 + 68 >> 2] = S5 + N6, a4[d5 >> 2] = I5 + D5, a4[t7 + 60 >> 2] = b5 + k5, a4[t7 + 56 >> 2] = _5 + Q5, a4[t7 + 52 >> 2] = E5 + w5, a4[t7 + 48 >> 2] = m5 + B5, a4[t7 + 44 >> 2] = y5 + C5, a4[p5 >> 2] = e6 + r11, a4[t7 + 36 >> 2] = A8 - n9, a4[t7 + 32 >> 2] = x5 - M5, a4[t7 + 28 >> 2] = N6 - S5, a4[t7 + 24 >> 2] = D5 - I5, a4[t7 + 20 >> 2] = k5 - b5, a4[t7 + 16 >> 2] = Q5 - _5, a4[t7 + 12 >> 2] = w5 - E5, a4[t7 + 8 >> 2] = B5 - m5, a4[t7 + 4 >> 2] = C5 - y5, a4[t7 >> 2] = r11 - e6, e6 = f5 << 1, r11 = a4[t7 + 156 >> 2], a4[t7 + 156 >> 2] = e6 - r11, p5 = l5 << 1, d5 = a4[t7 + 152 >> 2], a4[t7 + 152 >> 2] = p5 - d5, y5 = u5 << 1, C5 = a4[t7 + 148 >> 2], a4[t7 + 148 >> 2] = y5 - C5, m5 = g5 << 1, B5 = a4[t7 + 144 >> 2], a4[t7 + 144 >> 2] = m5 - B5, E5 = h5 << 1, w5 = a4[t7 + 140 >> 2], a4[t7 + 140 >> 2] = E5 - w5, _5 = c5 << 1, Q5 = a4[t7 + 136 >> 2], a4[t7 + 136 >> 2] = _5 - Q5, b5 = s5 << 1, k5 = a4[t7 + 132 >> 2], a4[t7 + 132 >> 2] = b5 - k5, I5 = o5 << 1, D5 = a4[t7 + 128 >> 2], a4[t7 + 128 >> 2] = I5 - D5, S5 = i4 << 1, N6 = a4[t7 + 124 >> 2], a4[t7 + 124 >> 2] = S5 - N6, M5 = F5 << 1, x5 = a4[t7 + 120 >> 2], a4[t7 + 120 >> 2] = M5 - x5, a4[t7 + 112 >> 2] = p5 + d5, a4[t7 + 108 >> 2] = y5 + C5, a4[t7 + 104 >> 2] = m5 + B5, a4[t7 + 100 >> 2] = E5 + w5, a4[t7 + 96 >> 2] = _5 + Q5, a4[t7 + 92 >> 2] = b5 + k5, a4[t7 + 88 >> 2] = I5 + D5, a4[t7 + 84 >> 2] = S5 + N6, a4[t7 + 80 >> 2] = M5 + x5, a4[t7 + 116 >> 2] = e6 + r11;
                            }
                            function U4(t7, e6) {
                              var r11, n9, A8, i4, o5, s5, h5, g5, u5, l5, f5, p5, d5, I5, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0, _5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0;
                              d5 = c4[e6 + 31 | 0], r11 = c4[e6 + 30 | 0], n9 = c4[e6 + 29 | 0], A8 = c4[e6 + 6 | 0], i4 = c4[e6 + 5 | 0], o5 = c4[e6 + 4 | 0], s5 = c4[e6 + 9 | 0], h5 = c4[e6 + 8 | 0], g5 = c4[e6 + 7 | 0], u5 = c4[e6 + 12 | 0], D5 = c4[e6 + 11 | 0], S5 = c4[e6 + 10 | 0], l5 = c4[e6 + 15 | 0], N6 = c4[e6 + 14 | 0], f5 = c4[e6 + 13 | 0], _5 = c4[e6 + 28 | 0], k5 = c4[e6 + 27 | 0], Q5 = c4[e6 + 26 | 0], v5 = c4[e6 + 25 | 0], E5 = c4[e6 + 24 | 0], B5 = c4[e6 + 23 | 0], I5 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24, w5 = (m5 = c4[e6 + 21 | 0]) << 15, m5 = C5 = m5 >>> 17 | 0, b5 = w5, b5 |= (w5 = c4[e6 + 20 | 0]) << 7, w5 = (C5 = w5 >>> 25 | 0) | m5, m5 = (C5 = c4[e6 + 22 | 0]) >>> 9 | 0, C5 = C5 << 23 | b5, m5 |= w5, p5 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, e6 = 0, w5 = C5, C5 = (33554431 & (e6 = (b5 = p5 + 16777216 | 0) >>> 0 < 16777216 ? 1 : e6)) << 7 | b5 >>> 25, e6 = (e6 >>> 25 | 0) + m5 | 0, C5 = (m5 = w5 = w5 + C5 | 0) >>> 0 < C5 >>> 0 ? e6 + 1 | 0 : e6, e6 = (w5 = m5 + 33554432 | 0) >>> 0 < 33554432 ? C5 + 1 | 0 : C5, a4[t7 + 24 >> 2] = m5 - (-67108864 & w5), C5 = (m5 = B5 >>> 27 | 0) | E5 >>> 19 | v5 >>> 11, m5 = B5 = (E5 = v5 << 21 | (B5 = E5 << 13 | B5 << 5)) + (m5 = (67108863 & (m5 = e6)) << 6 | w5 >>> 26) | 0, e6 = C5, C5 = (B5 = E5 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[t7 + 28 >> 2] = m5 - (1040187392 & B5), m5 = (C5 = (e6 = C5) >>> 25 | 0) + (m5 = k5 >>> 20 | Q5 >>> 28 | _5 >>> 12) | 0, e6 = m5 = (C5 = B5 = (e6 = (33554431 & e6) << 7 | B5 >>> 25) + (k5 << 12 | Q5 << 4 | _5 << 20) | 0) >>> 0 < e6 >>> 0 ? m5 + 1 | 0 : m5, B5 = (_5 = C5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[t7 + 32 >> 2] = C5 - (-67108864 & _5), m5 = u5 >>> 13 | (C5 = D5 >>> 21 | S5 >>> 29), e6 = (m5 = (k5 = 16777216 + (D5 = D5 << 11 | S5 << 3 | u5 << 19) | 0) >>> 0 < 16777216 ? m5 + 1 | 0 : m5) >>> 25 | 0, m5 = (C5 = E5 = N6 << 10 | f5 << 2 | l5 << 18) + (E5 = (33554431 & m5) << 7 | k5 >>> 25) | 0, C5 = e6 + (v5 = N6 >>> 22 | f5 >>> 30 | l5 >>> 14) | 0, e6 = C5 = m5 >>> 0 < E5 >>> 0 ? C5 + 1 | 0 : C5, E5 = ((67108863 & (e6 = (E5 = m5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6)) << 6 | (C5 = E5) >>> 26) + (Q5 = p5 - (-33554432 & b5) | 0) | 0, a4[t7 + 20 >> 2] = E5, a4[t7 + 16 >> 2] = m5 - (-67108864 & C5), C5 = i4 >>> 18 | o5 >>> 26 | A8 >>> 10, m5 = (C5 = (Q5 = 16777216 + (S5 = i4 << 14 | o5 << 6 | A8 << 22) | 0) >>> 0 < 16777216 ? C5 + 1 | 0 : C5) >>> 25 | 0, C5 = (e6 = E5 = h5 << 13 | g5 << 5 | s5 << 21) + (E5 = (33554431 & C5) << 7 | Q5 >>> 25) | 0, e6 = m5 + (v5 = h5 >>> 19 | g5 >>> 27 | s5 >>> 11) | 0, e6 = C5 >>> 0 < E5 >>> 0 ? e6 + 1 | 0 : e6, m5 = (v5 = C5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[t7 + 8 >> 2] = C5 - (-67108864 & v5), _5 = (B5 = (67108863 & B5) << 6 | _5 >>> 26) + (N6 = d5 << 18 & 33292288 | r11 << 10 | n9 << 2) | 0, e6 = C5 = r11 >>> 22 | n9 >>> 30, C5 = (B5 = N6 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[t7 + 36 >> 2] = _5 - (33554432 & B5), m5 = D5 + ((67108863 & m5) << 6 | v5 >>> 26) | 0, a4[t7 + 12 >> 2] = m5 - (234881024 & k5), E5 = S5 - (2113929216 & Q5) | 0, m5 = Bt2((33554431 & (e6 = C5)) << 7 | B5 >>> 25, C5 = e6 >>> 25 | 0, 19, 0), e6 = y4, m5 = (C5 = m5 + I5 | 0) >>> 0 < m5 >>> 0 ? e6 + 1 | 0 : e6, B5 = ((67108863 & (m5 = (e6 = C5 + 33554432 | 0) >>> 0 < 33554432 ? m5 + 1 | 0 : m5)) << 6 | e6 >>> 26) + E5 | 0, a4[t7 + 4 >> 2] = B5, a4[t7 >> 2] = C5 - (-67108864 & e6);
                            }
                            function G4(t7, e6, r11, n9) {
                              var A8, i4 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, y5 = 0, C5 = 0, m5 = 0;
                              if (I4 = A8 = I4 - 704 | 0, r11 | n9)
                                if (i4 = (n9 << 3 | r11 >>> 29) + (o5 = h5 = a4[t7 + 76 >> 2]) | 0, u5 = (l5 = a4[t7 + 72 >> 2]) + (g5 = r11 << 3) | 0, a4[t7 + 72 >> 2] = u5, i4 = g5 >>> 0 > u5 >>> 0 ? i4 + 1 | 0 : i4, a4[t7 + 76 >> 2] = i4, h5 = a4[4 + (g5 = t7 - -64 | 0) >> 2], h5 = (f5 = i4 = (0 | i4) == (0 | o5) & u5 >>> 0 < l5 >>> 0 | i4 >>> 0 < o5 >>> 0) >>> 0 > (i4 = i4 + a4[g5 >> 2] | 0) >>> 0 ? h5 + 1 | 0 : h5, u5 = (f5 = n9 >>> 29 | 0) + i4 | 0, i4 = h5, a4[g5 >> 2] = u5, a4[g5 + 4 >> 2] = u5 >>> 0 < f5 >>> 0 ? i4 + 1 | 0 : i4, (0 | n9) == (0 | (h5 = f5 = 0 - ((i4 = 0) + ((g5 = 127 & ((7 & o5) << 29 | l5 >>> 3)) >>> 0 > 128) | 0) | 0)) & r11 >>> 0 >= (u5 = 128 - g5 | 0) >>> 0 | n9 >>> 0 > h5 >>> 0) {
                                  if (o5 = 0, h5 = 0, !i4 & (127 ^ g5) >>> 0 >= 3 | i4)
                                    for (m5 = 252 & u5, l5 = t7 + 80 | 0; s4[(i4 = o5 + g5 | 0) + l5 | 0] = c4[e6 + o5 | 0], s4[l5 + (g5 + (i4 = 1 | o5) | 0) | 0] = c4[e6 + i4 | 0], s4[l5 + (g5 + (i4 = 2 | o5) | 0) | 0] = c4[e6 + i4 | 0], s4[l5 + (g5 + (i4 = 3 | o5) | 0) | 0] = c4[e6 + i4 | 0], i4 = h5, h5 = (o5 = o5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, i4 = d5, d5 = i4 = (y5 = y5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (0 | y5) != (0 | m5) | (0 | C5) != (0 | i4); )
                                      ;
                                  if (l5 = i4 = 0, i4 | (d5 = 3 & u5))
                                    for (; s4[80 + (t7 + (i4 = o5 + g5 | 0) | 0) | 0] = c4[e6 + o5 | 0], i4 = h5, h5 = (o5 = o5 + 1 | 0) ? i4 : i4 + 1 | 0, i4 = C5, C5 = i4 = (p5 = p5 + 1 | 0) ? i4 : i4 + 1 | 0, (0 | d5) != (0 | p5) | (0 | l5) != (0 | i4); )
                                      ;
                                  if (B4(t7, t7 + 80 | 0, A8, o5 = A8 + 640 | 0), e6 = e6 + u5 | 0, !(n9 = n9 - ((r11 >>> 0 < u5 >>> 0) + f5 | 0) | 0) & (r11 = r11 - u5 | 0) >>> 0 > 127 | n9)
                                    for (; B4(t7, e6, A8, o5), e6 = e6 + 128 | 0, !(n9 = n9 - (r11 >>> 0 < 128) | 0) & (r11 = r11 - 128 | 0) >>> 0 > 127 | n9; )
                                      ;
                                  if (r11 | n9) {
                                    if (y5 = 3 & r11, u5 = 0, p5 = 0, C5 = 0, o5 = 0, h5 = 0, !n9 & r11 >>> 0 >= 4 | n9)
                                      for (g5 = -4 & r11, l5 = n9, d5 = t7 + 80 | 0, r11 = 0, n9 = 0; s4[o5 + d5 | 0] = c4[e6 + o5 | 0], s4[(i4 = 1 | o5) + d5 | 0] = c4[e6 + i4 | 0], s4[(i4 = 2 | o5) + d5 | 0] = c4[e6 + i4 | 0], s4[(i4 = 3 | o5) + d5 | 0] = c4[e6 + i4 | 0], i4 = h5, h5 = (o5 = o5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, i4 = n9, n9 = i4 = (r11 = r11 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (0 | r11) != (0 | g5) | (0 | l5) != (0 | i4); )
                                        ;
                                    if (u5 | y5)
                                      for (; s4[80 + (t7 + o5 | 0) | 0] = c4[e6 + o5 | 0], h5 = (o5 = o5 + 1 | 0) ? h5 : h5 + 1 | 0, i4 = C5, C5 = i4 = (p5 = p5 + 1 | 0) ? i4 : i4 + 1 | 0, (0 | p5) != (0 | y5) | (0 | u5) != (0 | i4); )
                                        ;
                                  }
                                  oe2(A8, 704);
                                } else {
                                  if (o5 = 0, h5 = 0, !n9 & r11 >>> 0 >= 4 | n9)
                                    for (u5 = -4 & r11, l5 = n9, n9 = t7 + 80 | 0; s4[n9 + (i4 = o5 + g5 | 0) | 0] = c4[e6 + o5 | 0], s4[n9 + (f5 = g5 + (i4 = 1 | o5) | 0) | 0] = c4[e6 + i4 | 0], s4[n9 + (f5 = g5 + (i4 = 2 | o5) | 0) | 0] = c4[e6 + i4 | 0], s4[n9 + (f5 = g5 + (i4 = 3 | o5) | 0) | 0] = c4[e6 + i4 | 0], i4 = h5, h5 = (o5 = o5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, i4 = d5, d5 = i4 = (y5 = y5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4, (0 | u5) != (0 | y5) | (0 | l5) != (0 | i4); )
                                      ;
                                  if ((r11 &= 3) | (n9 = 0))
                                    for (; s4[80 + (t7 + (i4 = o5 + g5 | 0) | 0) | 0] = c4[e6 + o5 | 0], h5 = (o5 = o5 + 1 | 0) ? h5 : h5 + 1 | 0, i4 = C5, C5 = i4 = (p5 = p5 + 1 | 0) ? i4 : i4 + 1 | 0, (0 | r11) != (0 | p5) | (0 | n9) != (0 | i4); )
                                      ;
                                }
                              return I4 = A8 + 704 | 0, 0;
                            }
                            function H4(t7, e6) {
                              var r11, n9, A8, i4, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0;
                              for (I4 = r11 = I4 - 480 | 0; g5 = (h5 = r11 + 288 | 0) + (o5 << 1) | 0, u5 = c4[e6 + o5 | 0], s4[g5 + 1 | 0] = u5 >>> 4, s4[0 | g5] = 15 & u5, h5 = h5 + ((g5 = 1 | o5) << 1) | 0, g5 = c4[e6 + g5 | 0], s4[h5 + 1 | 0] = g5 >>> 4, s4[0 | h5] = 15 & g5, 32 != (0 | (o5 = o5 + 2 | 0)); )
                                ;
                              for (e6 = 0; o5 = 8 + (h5 = (o5 = e6) + c4[0 | (e6 = (r11 + 288 | 0) + l5 | 0)] | 0) | 0, s4[0 | e6] = h5 - (240 & o5), o5 = 8 + (h5 = c4[e6 + 1 | 0] + (o5 << 24 >> 24 >> 4) | 0) | 0, s4[e6 + 1 | 0] = h5 - (240 & o5), o5 = 8 + (h5 = c4[e6 + 2 | 0] + (o5 << 24 >> 24 >> 4) | 0) | 0, s4[e6 + 2 | 0] = h5 - (240 & o5), e6 = o5 << 24 >> 24 >> 4, 63 != (0 | (l5 = l5 + 3 | 0)); )
                                ;
                              for (s4[r11 + 351 | 0] = c4[r11 + 351 | 0] + e6, a4[t7 + 32 >> 2] = 0, a4[t7 + 36 >> 2] = 0, a4[t7 + 24 >> 2] = 0, a4[t7 + 28 >> 2] = 0, a4[t7 + 16 >> 2] = 0, a4[t7 + 20 >> 2] = 0, a4[t7 + 8 >> 2] = 0, a4[t7 + 12 >> 2] = 0, a4[t7 >> 2] = 0, a4[t7 + 4 >> 2] = 0, a4[t7 + 44 >> 2] = 0, a4[t7 + 48 >> 2] = 0, a4[(e6 = t7 + 40 | 0) >> 2] = 1, a4[t7 + 52 >> 2] = 0, a4[t7 + 56 >> 2] = 0, a4[t7 + 60 >> 2] = 0, a4[t7 + 64 >> 2] = 0, a4[t7 + 68 >> 2] = 0, a4[t7 + 72 >> 2] = 0, a4[t7 + 76 >> 2] = 0, a4[t7 + 80 >> 2] = 1, xt2(t7 + 84 | 0, 0, 76), A8 = t7 + 120 | 0, l5 = t7 + 80 | 0, h5 = r11 + 208 | 0, n9 = r11 + 168 | 0, g5 = r11 + 248 | 0, o5 = 1; V2(f5 = r11 + 8 | 0, o5 >>> 1 | 0, s4[(r11 + 288 | 0) + o5 | 0]), R4(u5 = r11 + 128 | 0, t7, f5), v4(t7, u5, g5), v4(e6, n9, h5), v4(l5, h5, g5), v4(A8, u5, n9), f5 = o5 >>> 0 < 62, o5 = o5 + 2 | 0, f5; )
                                ;
                              for (o5 = a4[t7 + 36 >> 2], a4[r11 + 392 >> 2] = a4[t7 + 32 >> 2], a4[r11 + 396 >> 2] = o5, o5 = a4[t7 + 28 >> 2], a4[r11 + 384 >> 2] = a4[t7 + 24 >> 2], a4[r11 + 388 >> 2] = o5, o5 = a4[t7 + 20 >> 2], a4[r11 + 376 >> 2] = a4[t7 + 16 >> 2], a4[r11 + 380 >> 2] = o5, o5 = a4[t7 + 12 >> 2], a4[r11 + 368 >> 2] = a4[t7 + 8 >> 2], a4[r11 + 372 >> 2] = o5, o5 = a4[t7 + 4 >> 2], a4[r11 + 360 >> 2] = a4[t7 >> 2], a4[r11 + 364 >> 2] = o5, o5 = a4[e6 + 12 >> 2], a4[r11 + 408 >> 2] = a4[e6 + 8 >> 2], a4[r11 + 412 >> 2] = o5, o5 = a4[e6 + 20 >> 2], a4[r11 + 416 >> 2] = a4[e6 + 16 >> 2], a4[r11 + 420 >> 2] = o5, o5 = a4[e6 + 28 >> 2], a4[r11 + 424 >> 2] = a4[e6 + 24 >> 2], a4[r11 + 428 >> 2] = o5, o5 = a4[e6 + 36 >> 2], a4[r11 + 432 >> 2] = a4[e6 + 32 >> 2], a4[r11 + 436 >> 2] = o5, o5 = a4[e6 + 4 >> 2], a4[r11 + 400 >> 2] = a4[e6 >> 2], a4[r11 + 404 >> 2] = o5, o5 = a4[l5 + 12 >> 2], a4[r11 + 448 >> 2] = a4[l5 + 8 >> 2], a4[r11 + 452 >> 2] = o5, o5 = a4[l5 + 20 >> 2], a4[r11 + 456 >> 2] = a4[l5 + 16 >> 2], a4[r11 + 460 >> 2] = o5, o5 = a4[l5 + 28 >> 2], a4[r11 + 464 >> 2] = a4[l5 + 24 >> 2], a4[r11 + 468 >> 2] = o5, o5 = a4[l5 + 36 >> 2], a4[r11 + 472 >> 2] = a4[l5 + 32 >> 2], a4[r11 + 476 >> 2] = o5, o5 = a4[l5 + 4 >> 2], a4[r11 + 440 >> 2] = a4[l5 >> 2], a4[r11 + 444 >> 2] = o5, _4(u5, o5 = r11 + 360 | 0), v4(o5, u5, g5), v4(f5 = r11 + 400 | 0, n9, h5), v4(i4 = r11 + 440 | 0, h5, g5), _4(u5, o5), v4(o5, u5, g5), v4(f5, n9, h5), v4(i4, h5, g5), _4(u5, o5), v4(o5, u5, g5), v4(f5, n9, h5), v4(i4, h5, g5), _4(u5, o5), v4(t7, u5, g5), v4(e6, n9, h5), v4(l5, h5, g5), v4(A8, u5, n9), o5 = 0; V2(f5 = r11 + 8 | 0, o5 >>> 1 | 0, s4[(r11 + 288 | 0) + o5 | 0]), R4(u5 = r11 + 128 | 0, t7, f5), v4(t7, u5, g5), v4(e6, n9, h5), v4(l5, h5, g5), v4(A8, u5, n9), u5 = o5 >>> 0 < 62, o5 = o5 + 2 | 0, u5; )
                                ;
                              I4 = r11 + 480 | 0;
                            }
                            function L4(t7, e6, r11) {
                              var n9 = 0, A8 = 0, i4 = 0, o5 = 0, a5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0;
                              for (A8 = 2036477234, o5 = 857760878, n9 = 1634760805, h5 = 1797285236, i4 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, l5 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, a5 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24, f5 = c4[r11 + 28 | 0] | c4[r11 + 29 | 0] << 8 | c4[r11 + 30 | 0] << 16 | c4[r11 + 31 | 0] << 24, g5 = c4[r11 + 24 | 0] | c4[r11 + 25 | 0] << 8 | c4[r11 + 26 | 0] << 16 | c4[r11 + 27 | 0] << 24, B5 = c4[r11 + 20 | 0] | c4[r11 + 21 | 0] << 8 | c4[r11 + 22 | 0] << 16 | c4[r11 + 23 | 0] << 24, p5 = c4[r11 + 16 | 0] | c4[r11 + 17 | 0] << 8 | c4[r11 + 18 | 0] << 16 | c4[r11 + 19 | 0] << 24, d5 = c4[r11 + 12 | 0] | c4[r11 + 13 | 0] << 8 | c4[r11 + 14 | 0] << 16 | c4[r11 + 15 | 0] << 24, I5 = c4[r11 + 8 | 0] | c4[r11 + 9 | 0] << 8 | c4[r11 + 10 | 0] << 16 | c4[r11 + 11 | 0] << 24, y5 = c4[r11 + 4 | 0] | c4[r11 + 5 | 0] << 8 | c4[r11 + 6 | 0] << 16 | c4[r11 + 7 | 0] << 24, e6 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24, r11 = c4[0 | r11] | c4[r11 + 1 | 0] << 8 | c4[r11 + 2 | 0] << 16 | c4[r11 + 3 | 0] << 24; u5 = r11, r11 = Gt2((C5 = e6) ^ (e6 = r11 + n9 | 0), 16), u5 = p5 = Gt2(u5 ^ (n9 = r11 + p5 | 0), 12), E5 = Gt2((C5 = e6 + p5 | 0) ^ r11, 8), e6 = Gt2(u5 ^ (p5 = E5 + n9 | 0), 7), n9 = d5, d5 = Gt2((r11 = h5 + d5 | 0) ^ i4, 16), n9 = Gt2(n9 ^ (f5 = d5 + f5 | 0), 12), i4 = I5, h5 = Gt2((A8 = A8 + I5 | 0) ^ l5, 16), i4 = Gt2(i4 ^ (I5 = h5 + g5 | 0), 12), g5 = Gt2((A8 = i4 + A8 | 0) ^ h5, 8), r11 = Gt2(g5 ^ (h5 = e6 + (m5 = r11 + n9 | 0) | 0), 16), l5 = Gt2((o5 = o5 + y5 | 0) ^ a5, 16), y5 = Gt2((a5 = l5 + B5 | 0) ^ y5, 12), u5 = e6, e6 = Gt2((o5 = o5 + y5 | 0) ^ l5, 8), u5 = Gt2(u5 ^ (a5 = r11 + (w5 = e6 + a5 | 0) | 0), 12), l5 = Gt2(r11 ^ (h5 = u5 + h5 | 0), 8), r11 = Gt2((B5 = l5 + a5 | 0) ^ u5, 7), u5 = A8, A8 = n9, m5 = Gt2(d5 ^ m5, 8), A8 = Gt2(A8 ^ (n9 = m5 + f5 | 0), 7), d5 = Gt2((a5 = u5 + A8 | 0) ^ e6, 16), f5 = Gt2((e6 = d5 + p5 | 0) ^ A8, 12), a5 = Gt2(d5 ^ (A8 = f5 + a5 | 0), 8), d5 = Gt2((p5 = e6 + a5 | 0) ^ f5, 7), e6 = Gt2((e6 = i4) ^ (i4 = g5 + I5 | 0), 7), I5 = Gt2((o5 = e6 + o5 | 0) ^ E5, 16), g5 = Gt2(e6 ^ (n9 = I5 + n9 | 0), 12), e6 = Gt2(I5 ^ (o5 = g5 + o5 | 0), 8), I5 = Gt2((f5 = n9 + e6 | 0) ^ g5, 7), u5 = i4, n9 = Gt2(y5 ^ w5, 7), g5 = Gt2((i4 = n9 + C5 | 0) ^ m5, 16), C5 = Gt2(n9 ^ (y5 = u5 + g5 | 0), 12), i4 = Gt2(g5 ^ (n9 = C5 + i4 | 0), 8), y5 = Gt2((g5 = y5 + i4 | 0) ^ C5, 7), 10 != (0 | (v5 = v5 + 1 | 0)); )
                                ;
                              s4[0 | t7] = n9, s4[t7 + 1 | 0] = n9 >>> 8, s4[t7 + 2 | 0] = n9 >>> 16, s4[t7 + 3 | 0] = n9 >>> 24, s4[t7 + 28 | 0] = i4, s4[t7 + 29 | 0] = i4 >>> 8, s4[t7 + 30 | 0] = i4 >>> 16, s4[t7 + 31 | 0] = i4 >>> 24, s4[t7 + 24 | 0] = l5, s4[t7 + 25 | 0] = l5 >>> 8, s4[t7 + 26 | 0] = l5 >>> 16, s4[t7 + 27 | 0] = l5 >>> 24, s4[t7 + 20 | 0] = a5, s4[t7 + 21 | 0] = a5 >>> 8, s4[t7 + 22 | 0] = a5 >>> 16, s4[t7 + 23 | 0] = a5 >>> 24, s4[t7 + 16 | 0] = e6, s4[t7 + 17 | 0] = e6 >>> 8, s4[t7 + 18 | 0] = e6 >>> 16, s4[t7 + 19 | 0] = e6 >>> 24, s4[t7 + 12 | 0] = h5, s4[t7 + 13 | 0] = h5 >>> 8, s4[t7 + 14 | 0] = h5 >>> 16, s4[t7 + 15 | 0] = h5 >>> 24, s4[t7 + 8 | 0] = A8, s4[t7 + 9 | 0] = A8 >>> 8, s4[t7 + 10 | 0] = A8 >>> 16, s4[t7 + 11 | 0] = A8 >>> 24, s4[t7 + 4 | 0] = o5, s4[t7 + 5 | 0] = o5 >>> 8, s4[t7 + 6 | 0] = o5 >>> 16, s4[t7 + 7 | 0] = o5 >>> 24;
                            }
                            function O4(t7, e6, r11) {
                              var n9 = 0, A8 = 0, i4 = 0, o5 = 0, a5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, v5 = 0;
                              for (n9 = 1797285236, g5 = 2036477234, u5 = 857760878, A8 = 1634760805, i4 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, a5 = c4[e6 + 8 | 0] | c4[e6 + 9 | 0] << 8 | c4[e6 + 10 | 0] << 16 | c4[e6 + 11 | 0] << 24, o5 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24, C5 = c4[r11 + 28 | 0] | c4[r11 + 29 | 0] << 8 | c4[r11 + 30 | 0] << 16 | c4[r11 + 31 | 0] << 24, y5 = c4[r11 + 24 | 0] | c4[r11 + 25 | 0] << 8 | c4[r11 + 26 | 0] << 16 | c4[r11 + 27 | 0] << 24, m5 = 20, d5 = c4[r11 + 20 | 0] | c4[r11 + 21 | 0] << 8 | c4[r11 + 22 | 0] << 16 | c4[r11 + 23 | 0] << 24, I5 = c4[r11 + 16 | 0] | c4[r11 + 17 | 0] << 8 | c4[r11 + 18 | 0] << 16 | c4[r11 + 19 | 0] << 24, l5 = c4[r11 + 12 | 0] | c4[r11 + 13 | 0] << 8 | c4[r11 + 14 | 0] << 16 | c4[r11 + 15 | 0] << 24, f5 = c4[r11 + 8 | 0] | c4[r11 + 9 | 0] << 8 | c4[r11 + 10 | 0] << 16 | c4[r11 + 11 | 0] << 24, p5 = c4[r11 + 4 | 0] | c4[r11 + 5 | 0] << 8 | c4[r11 + 6 | 0] << 16 | c4[r11 + 7 | 0] << 24, e6 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24, r11 = c4[0 | r11] | c4[r11 + 1 | 0] << 8 | c4[r11 + 2 | 0] << 16 | c4[r11 + 3 | 0] << 24; h5 = Gt2(r11 + u5 | 0, 7) ^ i4, B5 = Gt2(h5 + u5 | 0, 9) ^ y5, l5 = Gt2(A8 + d5 | 0, 7) ^ l5, E5 = Gt2(l5 + A8 | 0, 9) ^ a5, w5 = Gt2(E5 + l5 | 0, 13) ^ d5, f5 = Gt2(n9 + I5 | 0, 7) ^ f5, o5 = Gt2(f5 + n9 | 0, 9) ^ o5, a5 = Gt2(o5 + f5 | 0, 13) ^ I5, n9 = Gt2(o5 + a5 | 0, 18) ^ n9, i4 = Gt2(e6 + g5 | 0, 7) ^ C5, d5 = w5 ^ Gt2(n9 + i4 | 0, 7), y5 = B5 ^ Gt2(d5 + n9 | 0, 9), C5 = Gt2(d5 + y5 | 0, 13) ^ i4, n9 = Gt2(y5 + C5 | 0, 18) ^ n9, p5 = Gt2(i4 + g5 | 0, 9) ^ p5, v5 = Gt2(p5 + i4 | 0, 13) ^ e6, e6 = Gt2(v5 + p5 | 0, 18) ^ g5, I5 = Gt2(e6 + h5 | 0, 7) ^ a5, a5 = Gt2(I5 + e6 | 0, 9) ^ E5, i4 = Gt2(a5 + I5 | 0, 13) ^ h5, g5 = Gt2(i4 + a5 | 0, 18) ^ e6, h5 = Gt2(h5 + B5 | 0, 13) ^ r11, r11 = Gt2(h5 + B5 | 0, 18) ^ u5, e6 = Gt2(r11 + l5 | 0, 7) ^ v5, o5 = Gt2(e6 + r11 | 0, 9) ^ o5, l5 = Gt2(e6 + o5 | 0, 13) ^ l5, u5 = Gt2(o5 + l5 | 0, 18) ^ r11, A8 = Gt2(E5 + w5 | 0, 18) ^ A8, r11 = Gt2(A8 + f5 | 0, 7) ^ h5, p5 = Gt2(r11 + A8 | 0, 9) ^ p5, f5 = Gt2(r11 + p5 | 0, 13) ^ f5, A8 = Gt2(p5 + f5 | 0, 18) ^ A8, h5 = m5 >>> 0 > 2, m5 = m5 - 2 | 0, h5; )
                                ;
                              return s4[0 | t7] = A8, s4[t7 + 1 | 0] = A8 >>> 8, s4[t7 + 2 | 0] = A8 >>> 16, s4[t7 + 3 | 0] = A8 >>> 24, s4[t7 + 28 | 0] = i4, s4[t7 + 29 | 0] = i4 >>> 8, s4[t7 + 30 | 0] = i4 >>> 16, s4[t7 + 31 | 0] = i4 >>> 24, s4[t7 + 24 | 0] = a5, s4[t7 + 25 | 0] = a5 >>> 8, s4[t7 + 26 | 0] = a5 >>> 16, s4[t7 + 27 | 0] = a5 >>> 24, s4[t7 + 20 | 0] = o5, s4[t7 + 21 | 0] = o5 >>> 8, s4[t7 + 22 | 0] = o5 >>> 16, s4[t7 + 23 | 0] = o5 >>> 24, s4[t7 + 16 | 0] = e6, s4[t7 + 17 | 0] = e6 >>> 8, s4[t7 + 18 | 0] = e6 >>> 16, s4[t7 + 19 | 0] = e6 >>> 24, s4[t7 + 12 | 0] = n9, s4[t7 + 13 | 0] = n9 >>> 8, s4[t7 + 14 | 0] = n9 >>> 16, s4[t7 + 15 | 0] = n9 >>> 24, s4[t7 + 8 | 0] = g5, s4[t7 + 9 | 0] = g5 >>> 8, s4[t7 + 10 | 0] = g5 >>> 16, s4[t7 + 11 | 0] = g5 >>> 24, s4[t7 + 4 | 0] = u5, s4[t7 + 5 | 0] = u5 >>> 8, s4[t7 + 6 | 0] = u5 >>> 16, s4[t7 + 7 | 0] = u5 >>> 24, 0;
                            }
                            function Y4(t7, e6) {
                              var r11, n9, A8 = 0, i4 = 0, o5 = 0, c5 = 0;
                              I4 = r11 = I4 - 288 | 0, i4 = 40 + ((A8 = a4[t7 + 32 >> 2] >>> 3 & 63) + t7 | 0) | 0, A8 >>> 0 >= 56 ? (Mt2(i4, 34224, 64 - A8 | 0), Q4(t7, t7 + 40 | 0, r11, r11 + 256 | 0), a4[t7 + 88 >> 2] = 0, a4[t7 + 92 >> 2] = 0, a4[t7 + 80 >> 2] = 0, a4[t7 + 84 >> 2] = 0, a4[t7 + 72 >> 2] = 0, a4[t7 + 76 >> 2] = 0, a4[(A8 = t7 - -64 | 0) >> 2] = 0, a4[A8 + 4 >> 2] = 0, a4[t7 + 56 >> 2] = 0, a4[t7 + 60 >> 2] = 0, a4[t7 + 48 >> 2] = 0, a4[t7 + 52 >> 2] = 0, a4[t7 + 40 >> 2] = 0, a4[t7 + 44 >> 2] = 0) : Mt2(i4, 34224, 56 - A8 | 0), o5 = (A8 = 16711680 & (i4 = a4[t7 + 32 >> 2])) >>> 8 | 0, c5 = A8 << 24, n9 = (A8 = -16777216 & i4) >>> 24 | 0, A8 = (c5 |= A8 << 8) | -16777216 & ((255 & (A8 = a4[t7 + 36 >> 2])) << 24 | i4 >>> 8) | 16711680 & ((16777215 & A8) << 8 | i4 >>> 24) | A8 >>> 8 & 65280 | A8 >>> 24, s4[t7 + 96 | 0] = A8, s4[t7 + 97 | 0] = A8 >>> 8, s4[t7 + 98 | 0] = A8 >>> 16, s4[t7 + 99 | 0] = A8 >>> 24, A8 = (A8 = o5 | n9 | i4 << 24 | (65280 & i4) << 8) | (o5 = 0) | o5, s4[t7 + 100 | 0] = A8, s4[t7 + 101 | 0] = A8 >>> 8, s4[t7 + 102 | 0] = A8 >>> 16, s4[t7 + 103 | 0] = A8 >>> 24, Q4(t7, t7 + 40 | 0, r11, r11 + 256 | 0), A8 = (A8 = a4[t7 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[0 | e6] = A8, s4[e6 + 1 | 0] = A8 >>> 8, s4[e6 + 2 | 0] = A8 >>> 16, s4[e6 + 3 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 4 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 4 | 0] = A8, s4[e6 + 5 | 0] = A8 >>> 8, s4[e6 + 6 | 0] = A8 >>> 16, s4[e6 + 7 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 8 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 8 | 0] = A8, s4[e6 + 9 | 0] = A8 >>> 8, s4[e6 + 10 | 0] = A8 >>> 16, s4[e6 + 11 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 12 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 12 | 0] = A8, s4[e6 + 13 | 0] = A8 >>> 8, s4[e6 + 14 | 0] = A8 >>> 16, s4[e6 + 15 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 16 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 16 | 0] = A8, s4[e6 + 17 | 0] = A8 >>> 8, s4[e6 + 18 | 0] = A8 >>> 16, s4[e6 + 19 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 20 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 20 | 0] = A8, s4[e6 + 21 | 0] = A8 >>> 8, s4[e6 + 22 | 0] = A8 >>> 16, s4[e6 + 23 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 24 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 24 | 0] = A8, s4[e6 + 25 | 0] = A8 >>> 8, s4[e6 + 26 | 0] = A8 >>> 16, s4[e6 + 27 | 0] = A8 >>> 24, A8 = (A8 = a4[t7 + 28 >> 2]) << 24 | (65280 & A8) << 8 | A8 >>> 8 & 65280 | A8 >>> 24, s4[e6 + 28 | 0] = A8, s4[e6 + 29 | 0] = A8 >>> 8, s4[e6 + 30 | 0] = A8 >>> 16, s4[e6 + 31 | 0] = A8 >>> 24, oe2(r11, 288), oe2(t7, 104), I4 = r11 + 288 | 0;
                            }
                            function K4(t7, e6, r11) {
                              var n9, A8 = 0, i4 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, y5 = 0, C5 = 0;
                              if (I4 = n9 = I4 - 288 | 0, r11)
                                if (u5 = (A8 = a4[t7 + 36 >> 2]) + (r11 >>> 29 | 0) | 0, p5 = (o5 = a4[t7 + 32 >> 2]) + (h5 = r11 << 3) | 0, a4[t7 + 32 >> 2] = p5, a4[t7 + 36 >> 2] = h5 >>> 0 > p5 >>> 0 ? u5 + 1 | 0 : u5, true & (h5 = 64 - (u5 = 63 & ((7 & A8) << 29 | o5 >>> 3)) | 0) >>> 0 <= r11 >>> 0) {
                                  if (A8 = 0, o5 = 0, (63 ^ u5) >>> 0 >= 3)
                                    for (C5 = 124 & h5, p5 = t7 + 40 | 0; s4[(A8 + u5 | 0) + p5 | 0] = c4[e6 + A8 | 0], s4[(u5 + (y5 = 1 | A8) | 0) + p5 | 0] = c4[e6 + y5 | 0], s4[(u5 + (y5 = 2 | A8) | 0) + p5 | 0] = c4[e6 + y5 | 0], s4[(u5 + (y5 = 3 | A8) | 0) + p5 | 0] = c4[e6 + y5 | 0], o5 = (A8 = A8 + 4 | 0) >>> 0 < 4 ? o5 + 1 | 0 : o5, (i4 = (d5 = d5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4) | (0 | d5) != (0 | C5); )
                                      ;
                                  if (i4 = 3 & h5)
                                    for (; s4[40 + ((A8 + u5 | 0) + t7 | 0) | 0] = c4[e6 + A8 | 0], o5 = (A8 = A8 + 1 | 0) ? o5 : o5 + 1 | 0, (l5 = (f5 = f5 + 1 | 0) ? l5 : l5 + 1 | 0) | (0 | i4) != (0 | f5); )
                                      ;
                                  if (Q4(t7, t7 + 40 | 0, n9, l5 = n9 + 256 | 0), e6 = e6 + h5 | 0, !(i4 = 0 - ((r11 >>> 0 < h5 >>> 0) + g5 | 0) | 0) & (r11 = r11 - h5 | 0) >>> 0 > 63 | i4)
                                    for (; Q4(t7, e6, n9, l5), e6 = e6 - -64 | 0, i4 = i4 - 1 | 0, !(i4 = (r11 = r11 + -64 | 0) >>> 0 < 4294967232 ? i4 + 1 | 0 : i4) & r11 >>> 0 > 63 | i4; )
                                      ;
                                  if (r11 | i4) {
                                    if (d5 = 3 & r11, f5 = 0, l5 = 0, A8 = 0, o5 = 0, !i4 & r11 >>> 0 >= 4 | i4)
                                      for (p5 = -4 & r11, u5 = i4, h5 = t7 + 40 | 0, r11 = 0, i4 = 0; s4[A8 + h5 | 0] = c4[e6 + A8 | 0], s4[(g5 = 1 | A8) + h5 | 0] = c4[e6 + g5 | 0], s4[(g5 = 2 | A8) + h5 | 0] = c4[e6 + g5 | 0], s4[(g5 = 3 | A8) + h5 | 0] = c4[e6 + g5 | 0], o5 = (A8 = A8 + 4 | 0) >>> 0 < 4 ? o5 + 1 | 0 : o5, (0 | (r11 = r11 + 4 | 0)) != (0 | p5) | (0 | (i4 = r11 >>> 0 < 4 ? i4 + 1 | 0 : i4)) != (0 | u5); )
                                        ;
                                    if (d5)
                                      for (; s4[40 + (t7 + A8 | 0) | 0] = c4[e6 + A8 | 0], o5 = (A8 = A8 + 1 | 0) ? o5 : o5 + 1 | 0, (l5 = (f5 = f5 + 1 | 0) ? l5 : l5 + 1 | 0) | (0 | f5) != (0 | d5); )
                                        ;
                                  }
                                  oe2(n9, 288);
                                } else {
                                  if (A8 = 0, o5 = 0, r11 >>> 0 >= 4)
                                    for (p5 = -4 & r11, h5 = t7 + 40 | 0; s4[(A8 + u5 | 0) + h5 | 0] = c4[e6 + A8 | 0], s4[(u5 + (g5 = 1 | A8) | 0) + h5 | 0] = c4[e6 + g5 | 0], s4[(u5 + (g5 = 2 | A8) | 0) + h5 | 0] = c4[e6 + g5 | 0], s4[(u5 + (g5 = 3 | A8) | 0) + h5 | 0] = c4[e6 + g5 | 0], o5 = (A8 = A8 + 4 | 0) >>> 0 < 4 ? o5 + 1 | 0 : o5, (i4 = (d5 = d5 + 4 | 0) >>> 0 < 4 ? i4 + 1 | 0 : i4) | (0 | p5) != (0 | d5); )
                                      ;
                                  if (r11 &= 3)
                                    for (; s4[40 + ((A8 + u5 | 0) + t7 | 0) | 0] = c4[e6 + A8 | 0], o5 = (A8 = A8 + 1 | 0) ? o5 : o5 + 1 | 0, (l5 = (f5 = f5 + 1 | 0) ? l5 : l5 + 1 | 0) | (0 | r11) != (0 | f5); )
                                      ;
                                }
                              I4 = n9 + 288 | 0;
                            }
                            function J4(t7, e6, r11) {
                              var n9, A8 = 0, i4 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0;
                              if (I4 = n9 = I4 - 96 | 0, r11 >>> 0 >= 65 && (wt2(t7), K4(t7, e6, r11), Y4(t7, n9), r11 = 32, e6 = n9), wt2(t7), a4[n9 + 88 >> 2] = 909522486, a4[n9 + 92 >> 2] = 909522486, a4[n9 + 80 >> 2] = 909522486, a4[n9 + 84 >> 2] = 909522486, a4[n9 + 72 >> 2] = 909522486, a4[n9 + 76 >> 2] = 909522486, a4[(o5 = l5 = n9 - -64 | 0) >> 2] = 909522486, a4[o5 + 4 >> 2] = 909522486, a4[n9 + 56 >> 2] = 909522486, a4[n9 + 60 >> 2] = 909522486, a4[n9 + 48 >> 2] = 909522486, a4[n9 + 52 >> 2] = 909522486, a4[n9 + 40 >> 2] = 909522486, a4[n9 + 44 >> 2] = 909522486, a4[n9 + 32 >> 2] = 909522486, a4[n9 + 36 >> 2] = 909522486, r11) {
                                if (r11 >>> 0 >= 4)
                                  for (h5 = 124 & r11; s4[0 | (i4 = (o5 = n9 + 32 | 0) + A8 | 0)] = c4[0 | i4] ^ c4[e6 + A8 | 0], s4[0 | (f5 = (i4 = 1 | A8) + o5 | 0)] = c4[0 | f5] ^ c4[e6 + i4 | 0], s4[0 | (f5 = (i4 = 2 | A8) + o5 | 0)] = c4[0 | f5] ^ c4[e6 + i4 | 0], s4[0 | (i4 = (i4 = o5) + (o5 = 3 | A8) | 0)] = c4[0 | i4] ^ c4[e6 + o5 | 0], A8 = A8 + 4 | 0, (0 | h5) != (0 | (g5 = g5 + 4 | 0)); )
                                    ;
                                if (g5 = 3 & r11)
                                  for (; s4[0 | (o5 = (n9 + 32 | 0) + A8 | 0)] = c4[0 | o5] ^ c4[e6 + A8 | 0], A8 = A8 + 1 | 0, (0 | g5) != (0 | (u5 = u5 + 1 | 0)); )
                                    ;
                              }
                              if (K4(t7, n9 + 32 | 0, 64), wt2(o5 = t7 + 104 | 0), a4[n9 + 88 >> 2] = 1549556828, a4[n9 + 92 >> 2] = 1549556828, a4[n9 + 80 >> 2] = 1549556828, a4[n9 + 84 >> 2] = 1549556828, a4[n9 + 72 >> 2] = 1549556828, a4[n9 + 76 >> 2] = 1549556828, a4[l5 >> 2] = 1549556828, a4[l5 + 4 >> 2] = 1549556828, a4[n9 + 56 >> 2] = 1549556828, a4[n9 + 60 >> 2] = 1549556828, a4[n9 + 48 >> 2] = 1549556828, a4[n9 + 52 >> 2] = 1549556828, a4[n9 + 40 >> 2] = 1549556828, a4[n9 + 44 >> 2] = 1549556828, a4[n9 + 32 >> 2] = 1549556828, a4[n9 + 36 >> 2] = 1549556828, r11) {
                                if (u5 = 0, A8 = 0, r11 >>> 0 >= 4)
                                  for (l5 = 124 & r11, g5 = 0; s4[0 | (h5 = (t7 = n9 + 32 | 0) + A8 | 0)] = c4[0 | h5] ^ c4[e6 + A8 | 0], s4[0 | (i4 = (h5 = 1 | A8) + t7 | 0)] = c4[0 | i4] ^ c4[e6 + h5 | 0], s4[0 | (i4 = (h5 = 2 | A8) + t7 | 0)] = c4[0 | i4] ^ c4[e6 + h5 | 0], s4[0 | (h5 = (i4 = t7) + (t7 = 3 | A8) | 0)] = c4[0 | h5] ^ c4[t7 + e6 | 0], A8 = A8 + 4 | 0, (0 | l5) != (0 | (g5 = g5 + 4 | 0)); )
                                    ;
                                if (t7 = 3 & r11)
                                  for (; s4[0 | (r11 = (n9 + 32 | 0) + A8 | 0)] = c4[0 | r11] ^ c4[e6 + A8 | 0], A8 = A8 + 1 | 0, (0 | t7) != (0 | (u5 = u5 + 1 | 0)); )
                                    ;
                              }
                              return K4(o5, t7 = n9 + 32 | 0, 64), oe2(t7, 64), oe2(n9, 32), I4 = n9 + 96 | 0, 0;
                            }
                            function j4(t7, e6, r11, n9, A8, o5, s5) {
                              var c5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0;
                              if (e6 - 65 >>> 0 < 4294967232 | s5 >>> 0 > 64)
                                t7 = -1;
                              else {
                                f5 = c5 = I4, I4 = c5 = c5 - 512 & -64;
                                t: {
                                  e:
                                    if (!(!(!(n9 | A8) | r11) | !t7 | ((h5 = 255 & e6) - 65 & 255) >>> 0 <= 191 | !(!(e6 = 255 & s5) || o5) | e6 >>> 0 >= 65)) {
                                      if (e6) {
                                        if (!o5)
                                          break e;
                                        xt2(c5 - -64 | 0, 0, 293), a4[c5 + 56 >> 2] = 327033209, a4[c5 + 60 >> 2] = 1541459225, a4[c5 + 48 >> 2] = -79577749, a4[c5 + 52 >> 2] = 528734635, a4[c5 + 40 >> 2] = 725511199, a4[c5 + 44 >> 2] = -1694144372, a4[c5 + 32 >> 2] = -1377402159, a4[c5 + 36 >> 2] = 1359893119, a4[c5 + 24 >> 2] = 1595750129, a4[c5 + 28 >> 2] = -1521486534, a4[c5 + 16 >> 2] = -23791573, a4[c5 + 20 >> 2] = 1013904242, a4[c5 + 8 >> 2] = -2067093701, a4[c5 + 12 >> 2] = -1150833019, a4[c5 >> 2] = -222443256 ^ (e6 << 8 | h5), a4[c5 + 4 >> 2] = e6 >>> 24 ^ 1779033703, xt2((s5 = c5 + 384 | 0) + e6 | 0, 0, 128 - e6 | 0), Mt2(s5, o5, e6), Mt2(c5 + 96 | 0, s5, 128), a4[c5 + 352 >> 2] = 128, oe2(s5, 128), e6 = 128;
                                      } else
                                        xt2(c5 - -64 | 0, 0, 293), a4[c5 + 56 >> 2] = 327033209, a4[c5 + 60 >> 2] = 1541459225, a4[c5 + 48 >> 2] = -79577749, a4[c5 + 52 >> 2] = 528734635, a4[c5 + 40 >> 2] = 725511199, a4[c5 + 44 >> 2] = -1694144372, a4[c5 + 32 >> 2] = -1377402159, a4[c5 + 36 >> 2] = 1359893119, a4[c5 + 24 >> 2] = 1595750129, a4[c5 + 28 >> 2] = -1521486534, a4[c5 + 16 >> 2] = -23791573, a4[c5 + 20 >> 2] = 1013904242, a4[c5 + 8 >> 2] = -2067093701, a4[c5 + 12 >> 2] = -1150833019, a4[c5 >> 2] = -222443256 ^ h5, a4[c5 + 4 >> 2] = 1779033703, e6 = 0;
                                      r:
                                        if (n9 | A8)
                                          for (p5 = c5 + 224 | 0, g5 = c5 + 96 | 0; ; ) {
                                            if (s5 = e6 + g5 | 0, !A8 & n9 >>> 0 <= (o5 = 256 - e6 | 0) >>> 0) {
                                              Mt2(s5, r11, n9), a4[c5 + 352 >> 2] = n9 + a4[c5 + 352 >> 2];
                                              break r;
                                            }
                                            if (Mt2(s5, r11, o5), a4[c5 + 352 >> 2] = o5 + a4[c5 + 352 >> 2], u5 = e6 = a4[c5 + 68 >> 2], e6 = (l5 = (s5 = a4[c5 + 64 >> 2]) + 128 | 0) >>> 0 < 128 ? e6 + 1 | 0 : e6, a4[c5 + 64 >> 2] = l5, a4[c5 + 68 >> 2] = e6, e6 = a4[c5 + 76 >> 2], e6 = (u5 = s5 = -1 == (0 | u5) & s5 >>> 0 > 4294967167) >>> 0 > (s5 = s5 + a4[c5 + 72 >> 2] | 0) >>> 0 ? e6 + 1 | 0 : e6, a4[c5 + 72 >> 2] = s5, a4[c5 + 76 >> 2] = e6, C4(c5, g5), Mt2(g5, p5, 128), e6 = a4[c5 + 352 >> 2] - 128 | 0, a4[c5 + 352 >> 2] = e6, r11 = r11 + o5 | 0, !((A8 = A8 - (n9 >>> 0 < o5 >>> 0) | 0) | (n9 = n9 - o5 | 0)))
                                              break;
                                          }
                                      S4(c5, t7, h5), I4 = f5;
                                      break t;
                                    }
                                  Kt2(), i3();
                                }
                                t7 = 0;
                              }
                              return t7;
                            }
                            function z3(t7, e6, r11, n9) {
                              var A8 = 0, i4 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0;
                              t: {
                                if ((o5 = a4[t7 + 56 >> 2]) | (A8 = a4[t7 + 60 >> 2])) {
                                  if (p5 = i4 = 16 - o5 | 0, g5 = (i4 = (0 | (h5 = 0 - ((o5 >>> 0 > 16) + A8 | 0) | 0)) == (0 | n9) & r11 >>> 0 > i4 >>> 0 | n9 >>> 0 > h5 >>> 0) ? p5 : r11, p5 = i4 = i4 ? h5 : n9, i4 | g5) {
                                    if (i4 = 0, o5 = 0, !p5 & g5 >>> 0 >= 4 | p5)
                                      for (u5 = -4 & g5, h5 = t7 - -64 | 0; A8 = i4 + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + i4 | 0], A8 = (d5 = 1 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + d5 | 0], A8 = (d5 = 2 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + d5 | 0], A8 = (d5 = 3 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + d5 | 0], A8 = o5, o5 = (i4 = i4 + 4 | 0) >>> 0 < 4 ? A8 + 1 | 0 : A8, A8 = l5, l5 = A8 = (f5 = f5 + 4 | 0) >>> 0 < 4 ? A8 + 1 | 0 : A8, (0 | f5) != (0 | u5) | (0 | p5) != (0 | A8); )
                                        ;
                                    if (h5 = A8 = 0, A8 | (l5 = 3 & g5))
                                      for (; f5 = i4 + a4[t7 + 56 >> 2] | 0, s4[(t7 + f5 | 0) - -64 | 0] = c4[e6 + i4 | 0], o5 = (i4 = i4 + 1 | 0) ? o5 : o5 + 1 | 0, A8 = y5, y5 = A8 = (I5 = I5 + 1 | 0) ? A8 : A8 + 1 | 0, (0 | l5) != (0 | I5) | (0 | h5) != (0 | A8); )
                                        ;
                                    o5 = a4[t7 + 56 >> 2], A8 = a4[t7 + 60 >> 2];
                                  }
                                  if (A8 = A8 + p5 | 0, A8 = (o5 = o5 + g5 | 0) >>> 0 < g5 >>> 0 ? A8 + 1 | 0 : A8, a4[t7 + 56 >> 2] = o5, a4[t7 + 60 >> 2] = A8, !A8 & o5 >>> 0 < 16)
                                    break t;
                                  x4(t7, t7 - -64 | 0, 16, 0), a4[t7 + 56 >> 2] = 0, a4[t7 + 60 >> 2] = 0, r11 = (o5 = r11) - g5 | 0, n9 = n9 - ((o5 >>> 0 < g5 >>> 0) + p5 | 0) | 0, e6 = e6 + g5 | 0;
                                }
                                if (!n9 & r11 >>> 0 >= 16 | n9 && (x4(t7, e6, o5 = -16 & r11, n9), r11 &= 15, n9 = 0, e6 = e6 + o5 | 0), r11 | n9) {
                                  if (I5 = 0, y5 = 0, i4 = 0, o5 = 0, !n9 & r11 >>> 0 >= 4 | n9)
                                    for (g5 = 12 & r11, p5 = 0, h5 = t7 - -64 | 0, f5 = 0, l5 = 0; A8 = i4 + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + i4 | 0], A8 = (u5 = 1 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + u5 | 0], A8 = (u5 = 2 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + u5 | 0], A8 = (u5 = 3 | i4) + a4[t7 + 56 >> 2] | 0, s4[A8 + h5 | 0] = c4[e6 + u5 | 0], o5 = (i4 = i4 + 4 | 0) >>> 0 < 4 ? o5 + 1 | 0 : o5, A8 = l5, l5 = A8 = (f5 = f5 + 4 | 0) >>> 0 < 4 ? A8 + 1 | 0 : A8, (0 | g5) != (0 | f5) | (0 | p5) != (0 | A8); )
                                      ;
                                  if (h5 = A8 = 0, A8 | (l5 = 3 & r11))
                                    for (; A8 = i4 + a4[t7 + 56 >> 2] | 0, s4[(t7 + A8 | 0) - -64 | 0] = c4[e6 + i4 | 0], o5 = (i4 = i4 + 1 | 0) ? o5 : o5 + 1 | 0, A8 = y5, y5 = A8 = (I5 = I5 + 1 | 0) ? A8 : A8 + 1 | 0, (0 | l5) != (0 | I5) | (0 | h5) != (0 | A8); )
                                      ;
                                  o5 = n9 + a4[t7 + 60 >> 2] | 0, o5 = (e6 = r11 + a4[t7 + 56 >> 2] | 0) >>> 0 < r11 >>> 0 ? o5 + 1 | 0 : o5, a4[t7 + 56 >> 2] = e6, a4[t7 + 60 >> 2] = o5;
                                }
                              }
                            }
                            function q3(t7, e6, r11) {
                              var n9, A8 = 0, i4 = 0, o5 = 0, s5 = 0, c5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0;
                              d5 = a4[e6 + 4 >> 2], A8 = a4[t7 + 4 >> 2], I5 = a4[e6 + 8 >> 2], i4 = a4[t7 + 8 >> 2], y5 = a4[e6 + 12 >> 2], o5 = a4[t7 + 12 >> 2], C5 = a4[e6 + 16 >> 2], s5 = a4[t7 + 16 >> 2], m5 = a4[e6 + 20 >> 2], c5 = a4[t7 + 20 >> 2], B5 = a4[e6 + 24 >> 2], h5 = a4[t7 + 24 >> 2], f5 = a4[e6 + 28 >> 2], g5 = a4[t7 + 28 >> 2], E5 = a4[e6 + 32 >> 2], u5 = a4[t7 + 32 >> 2], w5 = a4[e6 + 36 >> 2], l5 = a4[t7 + 36 >> 2], r11 = 0 - r11 | 0, p5 = a4[t7 >> 2], a4[t7 >> 2] = r11 & (p5 ^ a4[e6 >> 2]) ^ p5, a4[t7 + 36 >> 2] = l5 ^ r11 & (l5 ^ w5), a4[t7 + 32 >> 2] = u5 ^ r11 & (u5 ^ E5), a4[t7 + 28 >> 2] = g5 ^ r11 & (g5 ^ f5), a4[t7 + 24 >> 2] = h5 ^ r11 & (h5 ^ B5), a4[t7 + 20 >> 2] = c5 ^ r11 & (c5 ^ m5), a4[t7 + 16 >> 2] = s5 ^ r11 & (s5 ^ C5), a4[t7 + 12 >> 2] = o5 ^ r11 & (o5 ^ y5), a4[t7 + 8 >> 2] = i4 ^ r11 & (i4 ^ I5), a4[t7 + 4 >> 2] = A8 ^ r11 & (A8 ^ d5), A8 = a4[t7 + 40 >> 2], d5 = a4[e6 + 40 >> 2], i4 = a4[t7 + 44 >> 2], I5 = a4[e6 + 44 >> 2], o5 = a4[t7 + 48 >> 2], y5 = a4[e6 + 48 >> 2], s5 = a4[t7 + 52 >> 2], C5 = a4[e6 + 52 >> 2], c5 = a4[t7 + 56 >> 2], m5 = a4[e6 + 56 >> 2], h5 = a4[t7 + 60 >> 2], B5 = a4[e6 + 60 >> 2], g5 = a4[(f5 = t7 - -64 | 0) >> 2], E5 = a4[e6 - -64 >> 2], u5 = a4[t7 + 68 >> 2], w5 = a4[e6 + 68 >> 2], l5 = a4[t7 + 72 >> 2], p5 = a4[e6 + 72 >> 2], n9 = a4[t7 + 76 >> 2], a4[t7 + 76 >> 2] = n9 ^ r11 & (a4[e6 + 76 >> 2] ^ n9), a4[t7 + 72 >> 2] = l5 ^ r11 & (l5 ^ p5), a4[t7 + 68 >> 2] = u5 ^ r11 & (u5 ^ w5), a4[f5 >> 2] = g5 ^ r11 & (g5 ^ E5), a4[t7 + 60 >> 2] = h5 ^ r11 & (h5 ^ B5), a4[t7 + 56 >> 2] = c5 ^ r11 & (c5 ^ m5), a4[t7 + 52 >> 2] = s5 ^ r11 & (s5 ^ C5), a4[t7 + 48 >> 2] = o5 ^ r11 & (o5 ^ y5), a4[t7 + 44 >> 2] = i4 ^ r11 & (i4 ^ I5), a4[t7 + 40 >> 2] = A8 ^ r11 & (A8 ^ d5), A8 = a4[t7 + 80 >> 2], d5 = a4[e6 + 80 >> 2], i4 = a4[t7 + 84 >> 2], I5 = a4[e6 + 84 >> 2], o5 = a4[t7 + 88 >> 2], y5 = a4[e6 + 88 >> 2], s5 = a4[t7 + 92 >> 2], C5 = a4[e6 + 92 >> 2], c5 = a4[t7 + 96 >> 2], m5 = a4[e6 + 96 >> 2], h5 = a4[t7 + 100 >> 2], B5 = a4[e6 + 100 >> 2], g5 = a4[t7 + 104 >> 2], f5 = a4[e6 + 104 >> 2], u5 = a4[t7 + 108 >> 2], E5 = a4[e6 + 108 >> 2], l5 = a4[t7 + 112 >> 2], w5 = a4[e6 + 112 >> 2], p5 = a4[e6 + 116 >> 2], e6 = a4[t7 + 116 >> 2], a4[t7 + 116 >> 2] = r11 & (p5 ^ e6) ^ e6, a4[t7 + 112 >> 2] = l5 ^ r11 & (l5 ^ w5), a4[t7 + 108 >> 2] = u5 ^ r11 & (u5 ^ E5), a4[t7 + 104 >> 2] = g5 ^ r11 & (g5 ^ f5), a4[t7 + 100 >> 2] = h5 ^ r11 & (h5 ^ B5), a4[t7 + 96 >> 2] = c5 ^ r11 & (c5 ^ m5), a4[t7 + 92 >> 2] = s5 ^ r11 & (s5 ^ C5), a4[t7 + 88 >> 2] = o5 ^ r11 & (o5 ^ y5), a4[t7 + 84 >> 2] = i4 ^ r11 & (i4 ^ I5), a4[t7 + 80 >> 2] = A8 ^ r11 & (A8 ^ d5);
                            }
                            function X2(t7, e6) {
                              var r11, n9, A8 = 0;
                              for (I4 = r11 = I4 - 192 | 0, b4(n9 = r11 + 144 | 0, e6), b4(A8 = r11 + 96 | 0, n9), b4(A8, A8), v4(A8, e6, A8), v4(n9, n9, A8), b4(e6 = r11 + 48 | 0, n9), v4(A8, A8, e6), b4(e6, A8), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), v4(A8, e6, A8), b4(e6, A8), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), v4(e6, e6, A8), b4(r11, e6), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), b4(r11, r11), v4(e6, r11, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), v4(A8, e6, A8), b4(e6, A8), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), v4(e6, e6, A8), b4(r11, e6), e6 = 1; b4(r11, r11), 100 != (0 | (e6 = e6 + 1 | 0)); )
                                ;
                              v4(e6 = r11 + 48 | 0, r11, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), b4(e6, e6), v4(A8 = r11 + 96 | 0, e6, A8), b4(A8, A8), b4(A8, A8), b4(A8, A8), b4(A8, A8), b4(A8, A8), v4(t7, A8, r11 + 144 | 0), I4 = r11 + 192 | 0;
                            }
                            function V2(t7, e6, r11) {
                              var n9, A8, i4, o5, s5, c5, h5, u5, l5 = 0;
                              I4 = n9 = I4 - 128 | 0, a4[t7 >> 2] = 1, a4[t7 + 4 >> 2] = 0, a4[t7 + 8 >> 2] = 0, a4[t7 + 12 >> 2] = 0, a4[t7 + 16 >> 2] = 0, a4[t7 + 20 >> 2] = 0, a4[t7 + 24 >> 2] = 0, a4[t7 + 28 >> 2] = 0, a4[t7 + 32 >> 2] = 0, a4[t7 + 36 >> 2] = 0, a4[t7 + 40 >> 2] = 1, xt2(t7 + 44 | 0, 0, 76), q3(t7, e6 = g4(e6, 960) + 2704 | 0, (255 & (1 ^ (l5 = r11 - ((r11 >> 31 & r11) << 1) | 0))) - 1 >>> 31 | 0), q3(t7, e6 + 120 | 0, (255 & (2 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 240 | 0, (255 & (3 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 360 | 0, (255 & (4 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 480 | 0, (255 & (5 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 600 | 0, (255 & (6 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 720 | 0, (255 & (7 ^ l5)) - 1 >>> 31 | 0), q3(t7, e6 + 840 | 0, (255 & (8 ^ l5)) - 1 >>> 31 | 0), e6 = a4[t7 + 76 >> 2], a4[n9 + 40 >> 2] = a4[t7 + 72 >> 2], a4[n9 + 44 >> 2] = e6, l5 = a4[4 + (e6 = t7 - -64 | 0) >> 2], a4[n9 + 32 >> 2] = a4[e6 >> 2], a4[n9 + 36 >> 2] = l5, e6 = a4[t7 + 60 >> 2], a4[n9 + 24 >> 2] = a4[t7 + 56 >> 2], a4[n9 + 28 >> 2] = e6, e6 = a4[t7 + 52 >> 2], a4[n9 + 16 >> 2] = a4[t7 + 48 >> 2], a4[n9 + 20 >> 2] = e6, e6 = a4[t7 + 44 >> 2], a4[n9 + 8 >> 2] = a4[t7 + 40 >> 2], a4[n9 + 12 >> 2] = e6, e6 = a4[t7 + 12 >> 2], a4[n9 + 56 >> 2] = a4[t7 + 8 >> 2], a4[n9 + 60 >> 2] = e6, l5 = a4[t7 + 20 >> 2], a4[(e6 = n9 - -64 | 0) >> 2] = a4[t7 + 16 >> 2], a4[e6 + 4 >> 2] = l5, e6 = a4[t7 + 28 >> 2], a4[n9 + 72 >> 2] = a4[t7 + 24 >> 2], a4[n9 + 76 >> 2] = e6, e6 = a4[t7 + 36 >> 2], a4[n9 + 80 >> 2] = a4[t7 + 32 >> 2], a4[n9 + 84 >> 2] = e6, e6 = a4[t7 + 4 >> 2], a4[n9 + 48 >> 2] = a4[t7 >> 2], a4[n9 + 52 >> 2] = e6, e6 = a4[t7 + 80 >> 2], l5 = a4[t7 + 84 >> 2], A8 = a4[t7 + 88 >> 2], i4 = a4[t7 + 92 >> 2], o5 = a4[t7 + 96 >> 2], s5 = a4[t7 + 100 >> 2], c5 = a4[t7 + 104 >> 2], h5 = a4[t7 + 108 >> 2], u5 = a4[t7 + 112 >> 2], a4[n9 + 124 >> 2] = 0 - a4[t7 + 116 >> 2], a4[n9 + 120 >> 2] = 0 - u5, a4[n9 + 116 >> 2] = 0 - h5, a4[n9 + 112 >> 2] = 0 - c5, a4[n9 + 108 >> 2] = 0 - s5, a4[n9 + 104 >> 2] = 0 - o5, a4[n9 + 100 >> 2] = 0 - i4, a4[n9 + 96 >> 2] = 0 - A8, a4[n9 + 92 >> 2] = 0 - l5, a4[n9 + 88 >> 2] = 0 - e6, q3(t7, n9 + 8 | 0, (128 & r11) >>> 7 | 0), I4 = n9 + 128 | 0;
                            }
                            function W2(t7, e6, r11, n9) {
                              var A8 = 0, i4 = 0, o5 = 0, a5 = 0, h5 = 0, g5 = 0, u5 = 0;
                              if (r11 | n9)
                                t:
                                  for (u5 = t7 + 224 | 0, h5 = t7 + 96 | 0, i4 = c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24; ; ) {
                                    if (A8 = i4 + h5 | 0, !n9 & r11 >>> 0 <= (o5 = 256 - i4 | 0) >>> 0) {
                                      Mt2(A8, e6, r11), e6 = r11 + (c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) | 0, s4[t7 + 352 | 0] = e6, s4[t7 + 353 | 0] = e6 >>> 8, s4[t7 + 354 | 0] = e6 >>> 16, s4[t7 + 355 | 0] = e6 >>> 24;
                                      break t;
                                    }
                                    if (Mt2(A8, e6, o5), A8 = (c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) + o5 | 0, s4[t7 + 352 | 0] = A8, s4[t7 + 353 | 0] = A8 >>> 8, s4[t7 + 354 | 0] = A8 >>> 16, s4[t7 + 355 | 0] = A8 >>> 24, g5 = i4 = c4[t7 + 68 | 0] | c4[t7 + 69 | 0] << 8 | c4[t7 + 70 | 0] << 16 | c4[t7 + 71 | 0] << 24, i4 = (a5 = 128 + (A8 = c4[t7 + 64 | 0] | c4[t7 + 65 | 0] << 8 | c4[t7 + 66 | 0] << 16 | c4[t7 + 67 | 0] << 24) | 0) >>> 0 < 128 ? i4 + 1 | 0 : i4, s4[t7 + 64 | 0] = a5, s4[t7 + 65 | 0] = a5 >>> 8, s4[t7 + 66 | 0] = a5 >>> 16, s4[t7 + 67 | 0] = a5 >>> 24, s4[t7 + 68 | 0] = i4, s4[t7 + 69 | 0] = i4 >>> 8, s4[t7 + 70 | 0] = i4 >>> 16, s4[t7 + 71 | 0] = i4 >>> 24, i4 = c4[t7 + 76 | 0] | c4[t7 + 77 | 0] << 8 | c4[t7 + 78 | 0] << 16 | c4[t7 + 79 | 0] << 24, i4 = (g5 = A8 = -1 == (0 | g5) & A8 >>> 0 > 4294967167) >>> 0 > (A8 = A8 + (c4[t7 + 72 | 0] | c4[t7 + 73 | 0] << 8 | c4[t7 + 74 | 0] << 16 | c4[t7 + 75 | 0] << 24) | 0) >>> 0 ? i4 + 1 | 0 : i4, s4[t7 + 72 | 0] = A8, s4[t7 + 73 | 0] = A8 >>> 8, s4[t7 + 74 | 0] = A8 >>> 16, s4[t7 + 75 | 0] = A8 >>> 24, s4[t7 + 76 | 0] = i4, s4[t7 + 77 | 0] = i4 >>> 8, s4[t7 + 78 | 0] = i4 >>> 16, s4[t7 + 79 | 0] = i4 >>> 24, C4(t7, h5), Mt2(h5, u5, 128), A8 = i4 = (c4[t7 + 352 | 0] | c4[t7 + 353 | 0] << 8 | c4[t7 + 354 | 0] << 16 | c4[t7 + 355 | 0] << 24) - 128 | 0, s4[t7 + 352 | 0] = A8, s4[t7 + 353 | 0] = A8 >>> 8, s4[t7 + 354 | 0] = A8 >>> 16, s4[t7 + 355 | 0] = A8 >>> 24, e6 = e6 + o5 | 0, !((n9 = n9 - (r11 >>> 0 < o5 >>> 0) | 0) | (r11 = r11 - o5 | 0)))
                                      break;
                                  }
                              return 0;
                            }
                            function Z2(t7, e6) {
                              var r11, n9 = 0, A8 = 0, i4 = 0, o5 = 0, s5 = 0, c5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0;
                              n9 = a4[e6 + 40 >> 2], i4 = a4[e6 + 4 >> 2], o5 = a4[e6 + 44 >> 2], s5 = a4[e6 + 8 >> 2], c5 = a4[e6 + 48 >> 2], h5 = a4[e6 + 12 >> 2], g5 = a4[e6 + 52 >> 2], u5 = a4[e6 + 16 >> 2], l5 = a4[e6 + 56 >> 2], f5 = a4[e6 + 20 >> 2], p5 = a4[e6 + 60 >> 2], d5 = a4[e6 + 24 >> 2], I5 = a4[(A8 = e6 - -64 | 0) >> 2], y5 = a4[e6 + 28 >> 2], C5 = a4[e6 + 68 >> 2], m5 = a4[e6 + 32 >> 2], B5 = a4[e6 + 72 >> 2], r11 = a4[e6 >> 2], a4[t7 + 36 >> 2] = a4[e6 + 36 >> 2] + a4[e6 + 76 >> 2], a4[t7 + 32 >> 2] = m5 + B5, a4[t7 + 28 >> 2] = y5 + C5, a4[t7 + 24 >> 2] = d5 + I5, a4[t7 + 20 >> 2] = f5 + p5, a4[t7 + 16 >> 2] = u5 + l5, a4[t7 + 12 >> 2] = h5 + g5, a4[t7 + 8 >> 2] = s5 + c5, a4[t7 + 4 >> 2] = i4 + o5, a4[t7 >> 2] = n9 + r11, n9 = a4[e6 + 40 >> 2], i4 = a4[e6 + 4 >> 2], o5 = a4[e6 + 44 >> 2], s5 = a4[e6 + 8 >> 2], c5 = a4[e6 + 48 >> 2], h5 = a4[e6 + 12 >> 2], g5 = a4[e6 + 52 >> 2], u5 = a4[e6 + 16 >> 2], l5 = a4[e6 + 56 >> 2], f5 = a4[e6 + 20 >> 2], p5 = a4[e6 + 60 >> 2], d5 = a4[e6 + 24 >> 2], A8 = a4[A8 >> 2], I5 = a4[e6 + 28 >> 2], y5 = a4[e6 + 68 >> 2], C5 = a4[e6 + 32 >> 2], m5 = a4[e6 + 72 >> 2], B5 = a4[e6 >> 2], a4[t7 + 76 >> 2] = a4[e6 + 76 >> 2] - a4[e6 + 36 >> 2], a4[t7 + 72 >> 2] = m5 - C5, a4[t7 + 68 >> 2] = y5 - I5, a4[t7 - -64 >> 2] = A8 - d5, a4[t7 + 60 >> 2] = p5 - f5, a4[t7 + 56 >> 2] = l5 - u5, a4[t7 + 52 >> 2] = g5 - h5, a4[t7 + 48 >> 2] = c5 - s5, a4[t7 + 44 >> 2] = o5 - i4, a4[t7 + 40 >> 2] = n9 - B5, n9 = a4[e6 + 84 >> 2], a4[t7 + 80 >> 2] = a4[e6 + 80 >> 2], a4[t7 + 84 >> 2] = n9, n9 = a4[e6 + 92 >> 2], a4[t7 + 88 >> 2] = a4[e6 + 88 >> 2], a4[t7 + 92 >> 2] = n9, n9 = a4[e6 + 100 >> 2], a4[t7 + 96 >> 2] = a4[e6 + 96 >> 2], a4[t7 + 100 >> 2] = n9, n9 = a4[e6 + 108 >> 2], a4[t7 + 104 >> 2] = a4[e6 + 104 >> 2], a4[t7 + 108 >> 2] = n9, n9 = a4[e6 + 116 >> 2], a4[t7 + 112 >> 2] = a4[e6 + 112 >> 2], a4[t7 + 116 >> 2] = n9, v4(t7 + 120 | 0, e6 + 120 | 0, 1440);
                            }
                            function $2(t7, e6) {
                              var r11, n9, A8, i4, o5, c5 = 0, h5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0;
                              (c5 = a4[t7 + 56 >> 2]) | (h5 = a4[t7 + 60 >> 2]) && (s4[(l5 = t7 - -64 | 0) + c5 | 0] = 1, !((C5 = c5 + 1 | 0) ? h5 : h5 + 1 | 0) & C5 >>> 0 <= 15 && xt2(65 + (t7 + c5 | 0) | 0, 0, 15 - c5 | 0), s4[t7 + 80 | 0] = 1, x4(t7, l5, 16, 0)), C5 = a4[t7 + 52 >> 2], I5 = a4[t7 + 48 >> 2], l5 = a4[t7 + 44 >> 2], c5 = a4[t7 + 24 >> 2], f5 = a4[t7 + 28 >> 2] + (c5 >>> 26 | 0) | 0, u5 = a4[t7 + 32 >> 2] + (f5 >>> 26 | 0) | 0, r11 = a4[t7 + 36 >> 2] + (u5 >>> 26 | 0) | 0, h5 = (d5 = (c5 = (c5 = (67108863 & c5) + ((p5 = a4[t7 + 20 >> 2] + g4(r11 >>> 26 | 0, 5) | 0) >>> 26 | 0) | 0) & (f5 = (u5 = (o5 = (67108863 & r11) + ((i4 = (n9 = 67108863 & u5) + ((A8 = (y5 = 67108863 & f5) + ((p5 = c5 + ((h5 = 5 + (d5 = 67108863 & p5) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) >>> 26 | 0) | 0) - 67108864 | 0) >> 31) | p5 & (u5 = 67108863 & (p5 = (u5 >>> 31 | 0) - 1 | 0))) << 26 | h5 & u5 | f5 & d5) + a4[t7 + 40 >> 2] | 0, s4[0 | e6] = h5, s4[e6 + 1 | 0] = h5 >>> 8, s4[e6 + 2 | 0] = h5 >>> 16, s4[e6 + 3 | 0] = h5 >>> 24, d5 = h5 >>> 0 < d5 >>> 0, h5 = 0, h5 = (c5 = (y5 = f5 & y5 | u5 & A8) << 20 | c5 >>> 6) >>> 0 > (c5 = c5 + l5 | 0) >>> 0 ? 1 : h5, h5 = (l5 = c5) >>> 0 > (c5 = c5 + d5 | 0) >>> 0 ? h5 + 1 | 0 : h5, s4[e6 + 4 | 0] = c5, s4[e6 + 5 | 0] = c5 >>> 8, s4[e6 + 6 | 0] = c5 >>> 16, s4[e6 + 7 | 0] = c5 >>> 24, c5 = 0, l5 = (l5 = (u5 = f5 & n9 | u5 & i4) << 14 | y5 >>> 12) >>> 0 > (I5 = l5 + I5 | 0) >>> 0 ? 1 : c5, c5 = I5, I5 = h5, c5 = c5 + h5 | 0, h5 = l5, h5 = c5 >>> 0 < I5 >>> 0 ? h5 + 1 | 0 : h5, s4[e6 + 8 | 0] = c5, s4[e6 + 9 | 0] = c5 >>> 8, s4[e6 + 10 | 0] = c5 >>> 16, s4[e6 + 11 | 0] = c5 >>> 24, h5 = (c5 = (c5 = (p5 & o5 | f5 & r11) << 8 | u5 >>> 18) + C5 | 0) + h5 | 0, s4[e6 + 12 | 0] = h5, s4[e6 + 13 | 0] = h5 >>> 8, s4[e6 + 14 | 0] = h5 >>> 16, s4[e6 + 15 | 0] = h5 >>> 24, oe2(t7, 88);
                            }
                            function tt2(t7, e6, r11) {
                              var n9, A8 = 0;
                              return I4 = n9 = I4 - 16 | 0, s4[n9 + 15 | 0] = 0, A8 = -1, 0 | Ie2[a4[8806]](t7, e6, r11) || (s4[n9 + 15 | 0] = c4[0 | t7] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 1 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 2 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 3 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 4 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 5 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 6 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 7 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 8 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 9 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 10 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 11 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 12 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 13 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 14 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 15 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 16 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 17 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 18 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 19 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 20 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 21 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 22 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 23 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 24 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 25 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 26 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 27 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 28 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 29 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 30 | 0] | c4[n9 + 15 | 0], s4[n9 + 15 | 0] = c4[t7 + 31 | 0] | c4[n9 + 15 | 0], A8 = (c4[n9 + 15 | 0] << 23) - 8388608 >> 31), I4 = n9 + 16 | 0, A8;
                            }
                            function et2(t7, e6) {
                              var r11, n9, A8, i4, o5, c5, h5, u5 = 0, l5 = 0;
                              n9 = a4[e6 + 32 >> 2], A8 = a4[e6 + 28 >> 2], i4 = a4[e6 + 24 >> 2], o5 = a4[e6 + 20 >> 2], c5 = a4[e6 + 16 >> 2], h5 = a4[e6 + 12 >> 2], u5 = a4[e6 + 4 >> 2], l5 = a4[e6 >> 2], r11 = a4[e6 + 36 >> 2], e6 = a4[e6 + 8 >> 2], l5 = g4((n9 + (A8 + (i4 + (o5 + (c5 + (h5 + ((u5 + (l5 + (g4(r11, 19) + 16777216 >>> 25 | 0) >> 26) >> 25) + e6 >> 26) >> 25) >> 26) >> 25) >> 26) >> 25) >> 26) + r11 >> 25, 19) + l5 | 0, s4[0 | t7] = l5, s4[t7 + 2 | 0] = l5 >>> 16, s4[t7 + 1 | 0] = l5 >>> 8, u5 = u5 + (l5 >> 26) | 0, s4[t7 + 5 | 0] = u5 >>> 14, s4[t7 + 4 | 0] = u5 >>> 6, s4[t7 + 3 | 0] = l5 >>> 24 & 3 | u5 << 2, e6 = e6 + (u5 >> 25) | 0, s4[t7 + 8 | 0] = e6 >>> 13, s4[t7 + 7 | 0] = e6 >>> 5, s4[t7 + 6 | 0] = e6 << 3 | (29360128 & u5) >>> 22, l5 = (e6 >> 26) + h5 | 0, s4[t7 + 11 | 0] = l5 >>> 11, s4[t7 + 10 | 0] = l5 >>> 3, s4[t7 + 9 | 0] = l5 << 5 | (65011712 & e6) >>> 21, u5 = (l5 >> 25) + c5 | 0, s4[t7 + 15 | 0] = u5 >>> 18, s4[t7 + 14 | 0] = u5 >>> 10, s4[t7 + 13 | 0] = u5 >>> 2, e6 = (u5 >> 26) + o5 | 0, s4[t7 + 16 | 0] = e6, s4[t7 + 12 | 0] = u5 << 6 | (33030144 & l5) >>> 19, s4[t7 + 18 | 0] = e6 >>> 16, s4[t7 + 17 | 0] = e6 >>> 8, u5 = (e6 >> 25) + i4 | 0, s4[t7 + 21 | 0] = u5 >>> 15, s4[t7 + 20 | 0] = u5 >>> 7, s4[t7 + 19 | 0] = e6 >>> 24 & 1 | u5 << 1, e6 = (u5 >> 26) + A8 | 0, s4[t7 + 24 | 0] = e6 >>> 13, s4[t7 + 23 | 0] = e6 >>> 5, s4[t7 + 22 | 0] = e6 << 3 | (58720256 & u5) >>> 23, u5 = (e6 >> 25) + n9 | 0, s4[t7 + 27 | 0] = u5 >>> 12, s4[t7 + 26 | 0] = u5 >>> 4, s4[t7 + 25 | 0] = u5 << 4 | (31457280 & e6) >>> 21, e6 = r11 + (u5 >> 26) | 0, s4[t7 + 30 | 0] = e6 >>> 10, s4[t7 + 29 | 0] = e6 >>> 2, s4[t7 + 31 | 0] = (33292288 & e6) >>> 18, s4[t7 + 28 | 0] = e6 << 6 | (66060288 & u5) >>> 20;
                            }
                            function rt2(t7, e6, r11) {
                              var n9, A8 = 0, i4 = 0, o5 = 0, a5 = 0, h5 = 0, g5 = 0, u5 = 0;
                              if (I4 = n9 = I4 - 192 | 0, r11 >>> 0 >= 129 && (gt2(t7), G4(t7, e6, r11, 0), D4(t7, n9), r11 = 64, e6 = n9), gt2(t7), xt2(n9 - -64 | 0, 54, 128), r11) {
                                if (r11 >>> 0 >= 4)
                                  for (u5 = 252 & r11; s4[0 | (A8 = (o5 = n9 - -64 | 0) + i4 | 0)] = c4[0 | A8] ^ c4[e6 + i4 | 0], s4[0 | (a5 = (A8 = 1 | i4) + o5 | 0)] = c4[0 | a5] ^ c4[e6 + A8 | 0], s4[0 | (a5 = (A8 = 2 | i4) + o5 | 0)] = c4[0 | a5] ^ c4[e6 + A8 | 0], s4[0 | (A8 = (A8 = o5) + (o5 = 3 | i4) | 0)] = c4[0 | A8] ^ c4[e6 + o5 | 0], i4 = i4 + 4 | 0, (0 | u5) != (0 | (h5 = h5 + 4 | 0)); )
                                    ;
                                if (h5 = 3 & r11)
                                  for (; s4[0 | (o5 = (n9 - -64 | 0) + i4 | 0)] = c4[0 | o5] ^ c4[e6 + i4 | 0], i4 = i4 + 1 | 0, (0 | h5) != (0 | (g5 = g5 + 1 | 0)); )
                                    ;
                              }
                              if (G4(t7, i4 = n9 - -64 | 0, 128, 0), gt2(o5 = t7 + 208 | 0), xt2(i4, 92, 128), r11) {
                                if (g5 = 0, i4 = 0, r11 >>> 0 >= 4)
                                  for (u5 = 252 & r11, h5 = 0; s4[0 | (A8 = (t7 = n9 - -64 | 0) + i4 | 0)] = c4[0 | A8] ^ c4[e6 + i4 | 0], s4[0 | (a5 = (A8 = 1 | i4) + t7 | 0)] = c4[0 | a5] ^ c4[e6 + A8 | 0], s4[0 | (a5 = (A8 = 2 | i4) + t7 | 0)] = c4[0 | a5] ^ c4[e6 + A8 | 0], s4[0 | (A8 = (A8 = t7) + (t7 = 3 | i4) | 0)] = c4[0 | A8] ^ c4[t7 + e6 | 0], i4 = i4 + 4 | 0, (0 | u5) != (0 | (h5 = h5 + 4 | 0)); )
                                    ;
                                if (t7 = 3 & r11)
                                  for (; s4[0 | (r11 = (n9 - -64 | 0) + i4 | 0)] = c4[0 | r11] ^ c4[e6 + i4 | 0], i4 = i4 + 1 | 0, (0 | t7) != (0 | (g5 = g5 + 1 | 0)); )
                                    ;
                              }
                              return G4(o5, t7 = n9 - -64 | 0, 128, 0), oe2(t7, 128), oe2(n9, 64), I4 = n9 + 192 | 0, 0;
                            }
                            function nt2(t7, e6) {
                              var r11;
                              return a4[12 + (r11 = I4 - 16 | 0) >> 2] = t7, a4[r11 + 8 >> 2] = e6, a4[r11 + 4 >> 2] = 0, a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2]] ^ c4[a4[r11 + 8 >> 2]], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 1 | 0] ^ c4[a4[r11 + 8 >> 2] + 1 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 2 | 0] ^ c4[a4[r11 + 8 >> 2] + 2 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 3 | 0] ^ c4[a4[r11 + 8 >> 2] + 3 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 4 | 0] ^ c4[a4[r11 + 8 >> 2] + 4 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 5 | 0] ^ c4[a4[r11 + 8 >> 2] + 5 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 6 | 0] ^ c4[a4[r11 + 8 >> 2] + 6 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 7 | 0] ^ c4[a4[r11 + 8 >> 2] + 7 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 8 | 0] ^ c4[a4[r11 + 8 >> 2] + 8 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 9 | 0] ^ c4[a4[r11 + 8 >> 2] + 9 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 10 | 0] ^ c4[a4[r11 + 8 >> 2] + 10 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 11 | 0] ^ c4[a4[r11 + 8 >> 2] + 11 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 12 | 0] ^ c4[a4[r11 + 8 >> 2] + 12 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 13 | 0] ^ c4[a4[r11 + 8 >> 2] + 13 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 14 | 0] ^ c4[a4[r11 + 8 >> 2] + 14 | 0], a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + 15 | 0] ^ c4[a4[r11 + 8 >> 2] + 15 | 0], (a4[r11 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                            }
                            function At2(t7, e6) {
                              var r11, n9 = 0, A8 = 0;
                              r11 = e6;
                              t:
                                if (n9 = 255 & e6) {
                                  if (3 & t7)
                                    for (; ; ) {
                                      if (!(e6 = c4[0 | t7]) | (0 | e6) == (255 & r11))
                                        break t;
                                      if (!(3 & (t7 = t7 + 1 | 0)))
                                        break;
                                    }
                                  e:
                                    if (!(~(e6 = a4[t7 >> 2]) & e6 - 16843009 & -2139062144))
                                      for (n9 = g4(n9, 16843009); ; ) {
                                        if (~(e6 ^= n9) & e6 - 16843009 & -2139062144)
                                          break e;
                                        if (e6 = a4[t7 + 4 >> 2], t7 = t7 + 4 | 0, e6 - 16843009 & ~e6 & -2139062144)
                                          break;
                                      }
                                  for (; e6 = t7, (n9 = c4[0 | t7]) && (t7 = t7 + 1 | 0, (0 | n9) != (255 & r11)); )
                                    ;
                                  t7 = e6;
                                } else {
                                  n9 = t7;
                                  e: {
                                    r: {
                                      n:
                                        if (3 & t7) {
                                          if (e6 = 0, !c4[0 | t7])
                                            break e;
                                          for (; ; ) {
                                            if (!(3 & (t7 = t7 + 1 | 0)))
                                              break n;
                                            if (!c4[0 | t7])
                                              break;
                                          }
                                          break r;
                                        }
                                      for (; e6 = t7, t7 = t7 + 4 | 0, !(~(A8 = a4[e6 >> 2]) & A8 - 16843009 & -2139062144); )
                                        ;
                                      for (; e6 = (t7 = e6) + 1 | 0, c4[0 | t7]; )
                                        ;
                                    }
                                    e6 = t7 - n9 | 0;
                                  }
                                  t7 = e6 + n9 | 0;
                                }
                              return c4[0 | t7] == (255 & r11) ? t7 : 0;
                            }
                            function it2(t7, e6, r11, n9, A8, i4, o5) {
                              var s5, c5, h5 = 0, g5 = 0, u5 = 0;
                              I4 = s5 = I4 - 96 | 0, O4(s5, i4, o5), o5 = s5 + 32 | 0, c5 = i4 + 16 | 0, Ie2[a4[8808]](o5, 32, 0, c5, s5), i4 = -1;
                              t: {
                                if (!(0 | Ie2[a4[8802]](r11, e6, n9, A8, o5))) {
                                  if (i4 = 0, !t7)
                                    break t;
                                  !((!A8 & n9 >>> 0 > e6 - t7 >>> 0 | !!(0 | A8)) & t7 >>> 0 < e6 >>> 0) & (!A8 & n9 >>> 0 <= t7 - e6 >>> 0 | t7 >>> 0 <= e6 >>> 0) || (e6 = kt2(t7, e6, n9)), g5 = o5 = (i4 = !A8 & n9 >>> 0 >= 32 | !!(0 | A8)) ? 0 : A8, (r11 = i4 ? 32 : n9) | o5 ? (u5 = Mt2(s5 - -64 | 0, e6, r11), Jt2(i4 = s5 + 32 | 0, i4, h5 = r11 + 32 | 0, o5 = h5 >>> 0 < 32 ? o5 + 1 | 0 : o5, c5, s5), Mt2(t7, u5, r11)) : Jt2(i4 = s5 + 32 | 0, i4, h5 = r11 + 32 | 0, o5 = h5 >>> 0 < 32 ? o5 + 1 | 0 : o5, c5, s5), oe2(s5 + 32 | 0, 64), i4 = 0, !A8 & n9 >>> 0 < 33 || zt2(t7 + r11 | 0, e6 + r11 | 0, n9 - r11 | 0, A8 - (g5 + (r11 >>> 0 > n9 >>> 0) | 0) | 0, c5, s5);
                                }
                                oe2(s5, 32);
                              }
                              return I4 = s5 + 96 | 0, i4;
                            }
                            function ot2(t7, e6, r11, n9, A8, i4, o5) {
                              var s5, c5, h5, g5, u5 = 0;
                              return I4 = s5 = I4 - 352 | 0, O4(s5, i4, o5), !((!A8 & n9 >>> 0 > t7 - r11 >>> 0 | !!(0 | A8)) & t7 >>> 0 > r11 >>> 0) & (!A8 & n9 >>> 0 <= r11 - t7 >>> 0 | t7 >>> 0 >= r11 >>> 0) || (r11 = kt2(t7, r11, n9)), a4[s5 + 56 >> 2] = 0, a4[s5 + 60 >> 2] = 0, a4[s5 + 48 >> 2] = 0, a4[s5 + 52 >> 2] = 0, a4[s5 + 40 >> 2] = 0, a4[s5 + 44 >> 2] = 0, a4[s5 + 32 >> 2] = 0, a4[s5 + 36 >> 2] = 0, (h5 = !((o5 = (u5 = !A8 & n9 >>> 0 >= 32 | !!(0 | A8)) ? 32 : n9) | (u5 = u5 ? 0 : A8))) || Mt2(s5 - -64 | 0, r11, o5), Jt2(c5 = s5 + 32 | 0, c5, g5 = o5 + 32 | 0, g5 >>> 0 < 32 ? u5 + 1 | 0 : u5, i4 = i4 + 16 | 0, s5), ne2(s5 + 96 | 0, c5), h5 || Mt2(t7, s5 - -64 | 0, o5), oe2(s5 + 32 | 0, 64), !A8 & n9 >>> 0 >= 33 | A8 && zt2(t7 + o5 | 0, r11 + o5 | 0, n9 - o5 | 0, A8 - (u5 + (n9 >>> 0 < o5 >>> 0) | 0) | 0, i4, s5), oe2(s5, 32), $t2(r11 = s5 + 96 | 0, t7, n9, A8), Ae2(r11, e6), oe2(r11, 256), I4 = s5 + 352 | 0, 0;
                            }
                            function st2(t7, e6, r11, n9, A8, i4, o5, s5, h5, g5) {
                              var u5, l5;
                              return I4 = u5 = I4 - 400 | 0, a4[u5 + 4 >> 2] = 0, L4(l5 = u5 + 16 | 0, h5, g5), g5 = c4[h5 + 20 | 0] | c4[h5 + 21 | 0] << 8 | c4[h5 + 22 | 0] << 16 | c4[h5 + 23 | 0] << 24, a4[u5 + 8 >> 2] = c4[h5 + 16 | 0] | c4[h5 + 17 | 0] << 8 | c4[h5 + 18 | 0] << 16 | c4[h5 + 19 | 0] << 24, a4[u5 + 12 >> 2] = g5, Wt2(g5 = u5 + 80 | 0, 64, u5 + 4 | 0, l5), ne2(h5 = u5 + 144 | 0, g5), oe2(g5, 64), $t2(h5, i4, o5, s5), $t2(h5, 33904, 0 - o5 & 15, 0), $t2(h5, e6, r11, n9), $t2(h5, 33904, 0 - r11 & 15, 0), a4[u5 + 72 >> 2] = o5, a4[u5 + 76 >> 2] = s5, $t2(h5, i4 = u5 + 72 | 0, 8, 0), a4[u5 + 72 >> 2] = r11, a4[u5 + 76 >> 2] = n9, $t2(h5, i4, 8, 0), Ae2(h5, i4 = u5 + 48 | 0), oe2(h5, 256), h5 = nt2(i4, A8), oe2(i4, 16), t7 && (h5 ? (xt2(t7, 0, r11), h5 = -1) : (Lt2(t7, e6, r11, n9, u5 + 4 | 0, u5 + 16 | 0), h5 = 0)), oe2(u5 + 16 | 0, 32), I4 = u5 + 400 | 0, h5;
                            }
                            function at2(t7, e6, r11, n9, A8, i4, o5, s5, h5, g5, u5) {
                              var l5, f5, p5;
                              return I4 = l5 = I4 - 384 | 0, a4[l5 + 4 >> 2] = 0, L4(f5 = l5 + 16 | 0, g5, u5), u5 = c4[g5 + 20 | 0] | c4[g5 + 21 | 0] << 8 | c4[g5 + 22 | 0] << 16 | c4[g5 + 23 | 0] << 24, a4[l5 + 8 >> 2] = c4[g5 + 16 | 0] | c4[g5 + 17 | 0] << 8 | c4[g5 + 18 | 0] << 16 | c4[g5 + 19 | 0] << 24, a4[l5 + 12 >> 2] = u5, Wt2(u5 = l5 - -64 | 0, 64, p5 = l5 + 4 | 0, f5), ne2(g5 = l5 + 128 | 0, u5), oe2(u5, 64), $t2(g5, o5, s5, h5), $t2(g5, 33904, 0 - s5 & 15, 0), Lt2(t7, n9, A8, i4, p5, f5), $t2(g5, t7, A8, i4), $t2(g5, 33904, 0 - A8 & 15, 0), a4[l5 + 56 >> 2] = s5, a4[l5 + 60 >> 2] = h5, $t2(g5, t7 = l5 + 56 | 0, 8, 0), a4[l5 + 56 >> 2] = A8, a4[l5 + 60 >> 2] = i4, $t2(g5, t7, 8, 0), Ae2(g5, e6), oe2(g5, 256), r11 && (a4[r11 >> 2] = 16, a4[r11 + 4 >> 2] = 0), oe2(l5 + 16 | 0, 32), I4 = l5 + 384 | 0, 0;
                            }
                            function ct2(t7, e6, r11, n9) {
                              var A8, i4 = 0;
                              return I4 = A8 = I4 - 208 | 0, a4[A8 + 72 >> 2] = 0, a4[A8 + 76 >> 2] = 0, i4 = a4[8579], a4[A8 + 8 >> 2] = a4[8578], a4[A8 + 12 >> 2] = i4, i4 = a4[8581], a4[A8 + 16 >> 2] = a4[8580], a4[A8 + 20 >> 2] = i4, i4 = a4[8583], a4[A8 + 24 >> 2] = a4[8582], a4[A8 + 28 >> 2] = i4, i4 = a4[8585], a4[A8 + 32 >> 2] = a4[8584], a4[A8 + 36 >> 2] = i4, i4 = a4[8587], a4[A8 + 40 >> 2] = a4[8586], a4[A8 + 44 >> 2] = i4, i4 = a4[8589], a4[A8 + 48 >> 2] = a4[8588], a4[A8 + 52 >> 2] = i4, i4 = a4[8591], a4[A8 + 56 >> 2] = a4[8590], a4[A8 + 60 >> 2] = i4, a4[A8 + 64 >> 2] = 0, a4[A8 + 68 >> 2] = 0, i4 = a4[8577], a4[A8 >> 2] = a4[8576], a4[A8 + 4 >> 2] = i4, G4(A8, e6, r11, n9), D4(A8, t7), I4 = A8 + 208 | 0, 0;
                            }
                            function ht2(t7, e6) {
                              var r11, n9 = 0, A8 = 0, i4 = 0;
                              if (s4[15 + (r11 = I4 - 16 | 0) | 0] = 0, e6) {
                                if (A8 = 3 & e6, e6 >>> 0 >= 4)
                                  for (i4 = -4 & e6, e6 = 0; s4[r11 + 15 | 0] = c4[t7 + n9 | 0] | c4[r11 + 15 | 0], s4[r11 + 15 | 0] = c4[(1 | n9) + t7 | 0] | c4[r11 + 15 | 0], s4[r11 + 15 | 0] = c4[(2 | n9) + t7 | 0] | c4[r11 + 15 | 0], s4[r11 + 15 | 0] = c4[(3 | n9) + t7 | 0] | c4[r11 + 15 | 0], n9 = n9 + 4 | 0, (0 | i4) != (0 | (e6 = e6 + 4 | 0)); )
                                    ;
                                if (A8)
                                  for (e6 = 0; s4[r11 + 15 | 0] = c4[t7 + n9 | 0] | c4[r11 + 15 | 0], n9 = n9 + 1 | 0, (0 | A8) != (0 | (e6 = e6 + 1 | 0)); )
                                    ;
                              }
                              return c4[r11 + 15 | 0] - 1 >>> 8 & 1;
                            }
                            function gt2(t7) {
                              var e6 = 0;
                              a4[t7 + 64 >> 2] = 0, a4[t7 + 68 >> 2] = 0, a4[t7 + 72 >> 2] = 0, a4[t7 + 76 >> 2] = 0, e6 = a4[8577], a4[t7 >> 2] = a4[8576], a4[t7 + 4 >> 2] = e6, e6 = a4[8579], a4[t7 + 8 >> 2] = a4[8578], a4[t7 + 12 >> 2] = e6, e6 = a4[8581], a4[t7 + 16 >> 2] = a4[8580], a4[t7 + 20 >> 2] = e6, e6 = a4[8583], a4[t7 + 24 >> 2] = a4[8582], a4[t7 + 28 >> 2] = e6, e6 = a4[8585], a4[t7 + 32 >> 2] = a4[8584], a4[t7 + 36 >> 2] = e6, e6 = a4[8587], a4[t7 + 40 >> 2] = a4[8586], a4[t7 + 44 >> 2] = e6, e6 = a4[8589], a4[t7 + 48 >> 2] = a4[8588], a4[t7 + 52 >> 2] = e6, e6 = a4[8591], a4[t7 + 56 >> 2] = a4[8590], a4[t7 + 60 >> 2] = e6;
                            }
                            function ut2(t7, e6, r11) {
                              var n9, A8 = 0, i4 = 0;
                              if (a4[12 + (n9 = I4 - 16 | 0) >> 2] = t7, a4[n9 + 8 >> 2] = e6, t7 = 0, s4[n9 + 7 | 0] = 0, r11) {
                                if (e6 = 1 & r11, 1 != (0 | r11))
                                  for (i4 = -2 & r11, r11 = 0; s4[n9 + 7 | 0] = c4[n9 + 7 | 0] | c4[a4[n9 + 12 >> 2] + t7 | 0] ^ c4[a4[n9 + 8 >> 2] + t7 | 0], A8 = 1 | t7, s4[n9 + 7 | 0] = c4[n9 + 7 | 0] | c4[A8 + a4[n9 + 12 >> 2] | 0] ^ c4[a4[n9 + 8 >> 2] + A8 | 0], t7 = t7 + 2 | 0, (0 | i4) != (0 | (r11 = r11 + 2 | 0)); )
                                    ;
                                e6 && (s4[n9 + 7 | 0] = c4[n9 + 7 | 0] | c4[a4[n9 + 12 >> 2] + t7 | 0] ^ c4[a4[n9 + 8 >> 2] + t7 | 0]);
                              }
                              return (c4[n9 + 7 | 0] - 1 >>> 8 & 1) - 1 | 0;
                            }
                            function lt2(t7) {
                              for (var e6 = 0, r11 = 0, n9 = 0, A8 = 0, i4 = 0, o5 = 0, s5 = 0, a5 = 0, h5 = 0, g5 = 0; A8 = (r11 = c4[t7 + n9 | 0]) ^ c4[0 | (e6 = n9 + 2448 | 0)] | A8, i4 = r11 ^ c4[e6 + 192 | 0] | i4, o5 = r11 ^ c4[e6 + 160 | 0] | o5, s5 = r11 ^ c4[e6 + 128 | 0] | s5, a5 = r11 ^ c4[e6 + 96 | 0] | a5, h5 = r11 ^ c4[e6 - -64 | 0] | h5, g5 = r11 ^ c4[e6 + 32 | 0] | g5, 31 != (0 | (n9 = n9 + 1 | 0)); )
                                ;
                              return ((255 & ((e6 = 127 ^ (t7 = 127 & c4[t7 + 31 | 0])) | i4)) - 1 | (255 & (e6 | o5)) - 1 | (255 & (e6 | s5)) - 1 | (255 & (122 ^ t7 | a5)) - 1 | (255 & (5 ^ t7 | h5)) - 1 | (255 & (t7 | g5)) - 1 | (255 & (t7 | A8)) - 1) >>> 8 & 1;
                            }
                            function ft2(t7, e6, r11) {
                              var n9 = 0, A8 = 0, i4 = 0, o5 = 0;
                              return A8 = 31 & (i4 = o5 = 63 & r11), i4 = i4 >>> 0 >= 32 ? -1 >>> A8 | 0 : (n9 = -1 >>> A8 | 0) | (1 << A8) - 1 << 32 - A8, i4 &= t7, n9 &= e6, A8 = 31 & o5, o5 >>> 0 >= 32 ? (n9 = i4 << A8, o5 = 0) : (n9 = (1 << A8) - 1 & i4 >>> 32 - A8 | n9 << A8, o5 = i4 << A8), i4 = n9, n9 = 31 & (A8 = 0 - r11 & 63), A8 >>> 0 >= 32 ? (n9 = -1 << n9, r11 = 0) : n9 = (r11 = -1 << n9) | (1 << n9) - 1 & -1 >>> 32 - n9, t7 &= r11, e6 &= n9, n9 = 31 & A8, A8 >>> 0 >= 32 ? (r11 = 0, t7 = e6 >>> n9 | 0) : (r11 = e6 >>> n9 | 0, t7 = ((1 << n9) - 1 & e6) << 32 - n9 | t7 >>> n9), y4 = r11 | i4, t7 | o5;
                            }
                            function pt2(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5) {
                              var g5, u5, l5;
                              return I4 = g5 = I4 - 352 | 0, Wt2(l5 = g5 + 32 | 0, 64, c5, h5), ne2(u5 = g5 + 96 | 0, l5), oe2(l5, 64), $t2(u5, i4, o5, s5), $t2(u5, 33920, 0 - o5 & 15, 0), $t2(u5, e6, r11, n9), $t2(u5, 33920, 0 - r11 & 15, 0), a4[g5 + 24 >> 2] = o5, a4[g5 + 28 >> 2] = s5, $t2(u5, i4 = g5 + 24 | 0, 8, 0), a4[g5 + 24 >> 2] = r11, a4[g5 + 28 >> 2] = n9, $t2(u5, i4, 8, 0), Ae2(u5, g5), oe2(u5, 256), i4 = nt2(g5, A8), oe2(g5, 16), t7 && (i4 ? (xt2(t7, 0, r11), i4 = -1) : (Et2(t7, e6, r11, n9, c5, 1, h5), i4 = 0)), I4 = g5 + 352 | 0, i4;
                            }
                            function dt2(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5, g5) {
                              var u5, l5, f5;
                              return I4 = u5 = I4 - 336 | 0, Wt2(f5 = u5 + 16 | 0, 64, h5, g5), ne2(l5 = u5 + 80 | 0, f5), oe2(f5, 64), $t2(l5, o5, s5, c5), $t2(l5, 33920, 0 - s5 & 15, 0), Et2(t7, n9, A8, i4, h5, 1, g5), $t2(l5, t7, A8, i4), $t2(l5, 33920, 0 - A8 & 15, 0), a4[u5 + 8 >> 2] = s5, a4[u5 + 12 >> 2] = c5, $t2(l5, t7 = u5 + 8 | 0, 8, 0), a4[u5 + 8 >> 2] = A8, a4[u5 + 12 >> 2] = i4, $t2(l5, t7, 8, 0), Ae2(l5, e6), oe2(l5, 256), r11 && (a4[r11 >> 2] = 16, a4[r11 + 4 >> 2] = 0), I4 = u5 + 336 | 0, 0;
                            }
                            function It2(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5) {
                              var g5, u5, l5;
                              return I4 = g5 = I4 - 352 | 0, Zt2(l5 = g5 + 32 | 0, c5, h5), ne2(u5 = g5 + 96 | 0, l5), oe2(l5, 64), $t2(u5, i4, o5, s5), a4[g5 + 24 >> 2] = o5, a4[g5 + 28 >> 2] = s5, $t2(u5, i4 = g5 + 24 | 0, 8, 0), $t2(u5, e6, r11, n9), a4[g5 + 24 >> 2] = r11, a4[g5 + 28 >> 2] = n9, $t2(u5, i4, 8, 0), Ae2(u5, g5), oe2(u5, 256), i4 = nt2(g5, A8), oe2(g5, 16), t7 && (i4 ? (xt2(t7, 0, r11), i4 = -1) : (Ht2(t7, e6, r11, n9, c5, h5), i4 = 0)), I4 = g5 + 352 | 0, i4;
                            }
                            function yt2(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5, g5) {
                              var u5, l5, f5;
                              return I4 = u5 = I4 - 336 | 0, Zt2(f5 = u5 + 16 | 0, h5, g5), ne2(l5 = u5 + 80 | 0, f5), oe2(f5, 64), $t2(l5, o5, s5, c5), a4[u5 + 8 >> 2] = s5, a4[u5 + 12 >> 2] = c5, $t2(l5, o5 = u5 + 8 | 0, 8, 0), Ht2(t7, n9, A8, i4, h5, g5), $t2(l5, t7, A8, i4), a4[u5 + 8 >> 2] = A8, a4[u5 + 12 >> 2] = i4, $t2(l5, o5, 8, 0), Ae2(l5, e6), oe2(l5, 256), r11 && (a4[r11 >> 2] = 16, a4[r11 + 4 >> 2] = 0), I4 = u5 + 336 | 0, 0;
                            }
                            function Ct2(t7, e6) {
                              var r11;
                              for (a4[12 + (r11 = I4 - 16 | 0) >> 2] = t7, a4[r11 + 8 >> 2] = e6, t7 = 0, a4[r11 + 4 >> 2] = 0; a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[a4[r11 + 12 >> 2] + t7 | 0] ^ c4[a4[r11 + 8 >> 2] + t7 | 0], e6 = 1 | t7, a4[r11 + 4 >> 2] = a4[r11 + 4 >> 2] | c4[e6 + a4[r11 + 12 >> 2] | 0] ^ c4[e6 + a4[r11 + 8 >> 2] | 0], 32 != (0 | (t7 = t7 + 2 | 0)); )
                                ;
                              return (a4[r11 + 4 >> 2] - 1 >>> 8 & 1) - 1 | 0;
                            }
                            function mt2(t7) {
                              var e6 = 0, r11 = 0, n9 = 0, A8 = 0;
                              for (e6 = 1; e6 = c4[0 | (r11 = t7 + n9 | 0)] + e6 | 0, s4[0 | r11] = e6, e6 = c4[0 | (r11 = (1 | n9) + t7 | 0)] + (e6 >>> 8 | 0) | 0, s4[0 | r11] = e6, e6 = c4[0 | (r11 = (2 | n9) + t7 | 0)] + (e6 >>> 8 | 0) | 0, s4[0 | r11] = e6, e6 = c4[0 | (r11 = (3 | n9) + t7 | 0)] + (e6 >>> 8 | 0) | 0, s4[0 | r11] = e6, e6 = e6 >>> 8 | 0, n9 = n9 + 4 | 0, 4 != (0 | (A8 = A8 + 4 | 0)); )
                                ;
                            }
                            function Bt2(t7, e6, r11, n9) {
                              var A8, i4, o5, s5, a5 = 0, c5 = 0;
                              return s5 = g4(a5 = r11 >>> 16 | 0, c5 = t7 >>> 16 | 0), a5 = (65535 & (c5 = ((o5 = g4(A8 = 65535 & r11, i4 = 65535 & t7)) >>> 16 | 0) + g4(c5, A8) | 0)) + g4(a5, i4) | 0, y4 = (g4(e6, r11) + s5 | 0) + g4(t7, n9) + (c5 >>> 16) + (a5 >>> 16) | 0, 65535 & o5 | a5 << 16;
                            }
                            function Et2(t7, e6, r11, n9, A8, o5, s5) {
                              var c5 = 0, h5 = 0;
                              c5 = n9, 1 == (((c5 = (h5 = r11 + 63 | 0) >>> 0 < 63 ? c5 + 1 | 0 : c5) >>> 6 | 0) + !!(0 | (c5 = (63 & c5) << 26 | h5 >>> 6)) | 0) & o5 >>> 0 > (h5 = 0 - c5 | 0) >>> 0 | 1 == (0 | n9) | n9 >>> 0 > 1 ? (Kt2(), i3()) : Ie2[a4[8813]](t7, e6, r11, n9, A8, o5, s5);
                            }
                            function wt2(t7) {
                              var e6 = 0;
                              a4[t7 + 32 >> 2] = 0, a4[t7 + 36 >> 2] = 0, e6 = a4[8485], a4[t7 >> 2] = a4[8484], a4[t7 + 4 >> 2] = e6, e6 = a4[8487], a4[t7 + 8 >> 2] = a4[8486], a4[t7 + 12 >> 2] = e6, e6 = a4[8489], a4[t7 + 16 >> 2] = a4[8488], a4[t7 + 20 >> 2] = e6, e6 = a4[8491], a4[t7 + 24 >> 2] = a4[8490], a4[t7 + 28 >> 2] = e6;
                            }
                            function vt2(t7, e6) {
                              t7 |= 0;
                              var r11, n9 = 0, A8 = 0, i4 = 0;
                              if (I4 = r11 = I4 - 16 | 0, e6 |= 0)
                                for (; s4[r11 + 15 | 0] = 0, A8 = t7 + n9 | 0, i4 = 0 | l4(35256, r11 + 15 | 0, 0), s4[0 | A8] = i4, (0 | (n9 = n9 + 1 | 0)) != (0 | e6); )
                                  ;
                              I4 = r11 + 16 | 0;
                            }
                            function _t2(t7, e6, r11, n9, A8, i4, o5) {
                              var s5, a5, c5 = 0;
                              return I4 = s5 = I4 - 32 | 0, c5 = -1, (a5 = r11 >>> 0 < 16) & !n9 || Nt2(s5, i4, o5) || (c5 = it2(t7, e6 + 16 | 0, e6, r11 - 16 | 0, n9 - a5 | 0, A8, s5), oe2(s5, 32)), I4 = s5 + 32 | 0, c5;
                            }
                            function Qt2(t7) {
                              var e6, r11;
                              return (t7 = (e6 = a4[8800]) + (r11 = t7 + 7 & -8) | 0) >>> 0 <= e6 >>> 0 && r11 || t7 >>> 0 > ye2() << 16 >>> 0 && !(0 | d4(0 | t7)) ? (a4[9005] = 48, -1) : (a4[8800] = t7, e6);
                            }
                            function bt2(t7, e6) {
                              var r11, n9, A8;
                              I4 = r11 = I4 - 176 | 0, X2(n9 = r11 + 96 | 0, e6 + 80 | 0), v4(A8 = r11 + 48 | 0, e6, n9), v4(r11, e6 + 40 | 0, n9), et2(t7, r11), et2(r11 + 144 | 0, A8), s4[t7 + 31 | 0] = c4[t7 + 31 | 0] ^ c4[r11 + 144 | 0] << 7, I4 = r11 + 176 | 0;
                            }
                            function kt2(t7, e6, r11) {
                              var n9 = 0;
                              if (t7 >>> 0 < e6 >>> 0)
                                return Mt2(t7, e6, r11);
                              if (r11)
                                for (n9 = t7 + r11 | 0, e6 = e6 + r11 | 0; e6 = e6 - 1 | 0, s4[0 | (n9 = n9 - 1 | 0)] = c4[0 | e6], r11 = r11 - 1 | 0; )
                                  ;
                              return t7;
                            }
                            function Dt2(t7, e6, r11, n9, A8, o5, s5) {
                              var a5, c5 = 0;
                              if (I4 = a5 = I4 - 32 | 0, !n9 & r11 >>> 0 < 4294967280)
                                return c5 = -1, Nt2(a5, o5, s5) || (c5 = ot2(t7 + 16 | 0, t7, e6, r11, n9, A8, a5), oe2(a5, 32)), I4 = a5 + 32 | 0, c5;
                              Kt2(), i3();
                            }
                            function St2(t7, e6, r11, n9, A8, i4) {
                              return e6 |= 0, 0 | (!(n9 |= 0) & (r11 |= 0) >>> 0 >= 16 | n9 ? it2(t7 |= 0, e6 + 16 | 0, e6, r11 - 16 | 0, n9 - (r11 >>> 0 < 16) | 0, A8 |= 0, i4 |= 0) : -1);
                            }
                            function Nt2(t7, e6, r11) {
                              t7 |= 0;
                              var n9, A8 = 0;
                              return I4 = n9 = I4 - 32 | 0, A8 = -1, tt2(n9, r11 |= 0, e6 |= 0) || (A8 = O4(t7, 35184, n9)), I4 = n9 + 32 | 0, 0 | A8;
                            }
                            function Mt2(t7, e6, r11) {
                              var n9 = 0;
                              if (r11)
                                for (n9 = t7; s4[0 | n9] = c4[0 | e6], n9 = n9 + 1 | 0, e6 = e6 + 1 | 0, r11 = r11 - 1 | 0; )
                                  ;
                              return t7;
                            }
                            function xt2(t7, e6, r11) {
                              var n9 = 0;
                              if (r11)
                                for (n9 = t7; s4[0 | n9] = e6, n9 = n9 + 1 | 0, r11 = r11 - 1 | 0; )
                                  ;
                              return t7;
                            }
                            function Ft2(t7, e6, r11) {
                              return t7 |= 0, e6 |= 0, (r11 |= 0) >>> 0 >= 256 && (f4(1260, 1187, 107, 1067), i3()), 0 | S4(t7, e6, 255 & r11);
                            }
                            function Pt2(t7, e6) {
                              var r11;
                              I4 = r11 = I4 + -64 | 0, D4(t7, r11), G4(t7 = t7 + 208 | 0, r11, 64, 0), D4(t7, e6), oe2(r11, 64), I4 = r11 - -64 | 0;
                            }
                            function Tt2(t7, e6, r11, n9, A8, i4, o5) {
                              return 0 | ot2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, o5 |= 0);
                            }
                            function Rt2(t7, e6, r11, n9, A8, i4, o5) {
                              return 0 | it2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, o5 |= 0);
                            }
                            function Ut2(t7, e6) {
                              var r11;
                              I4 = r11 = I4 - 32 | 0, Y4(t7, r11), K4(t7 = t7 + 104 | 0, r11, 32), Y4(t7, e6), oe2(r11, 32), I4 = r11 + 32 | 0;
                            }
                            function Gt2(t7, e6) {
                              var r11 = 0;
                              return (-1 >>> (r11 = 31 & e6) & t7) << r11 | ((r11 = t7) & -1 << (t7 = 0 - e6 & 31)) >>> t7;
                            }
                            function Ht2(t7, e6, r11, n9, A8, o5) {
                              1 == (0 | n9) | n9 >>> 0 > 1 && (Kt2(), i3()), Ie2[a4[8812]](t7, e6, r11, n9, A8, 1, 0, o5);
                            }
                            function Lt2(t7, e6, r11, n9, A8, o5) {
                              1 == (0 | n9) | n9 >>> 0 > 1 && (Kt2(), i3()), Ie2[a4[8813]](t7, e6, r11, n9, A8, 1, o5);
                            }
                            function Ot2() {
                              var t7;
                              I4 = t7 = I4 - 16 | 0, s4[t7 + 15 | 0] = 0, l4(35292, t7 + 15 | 0, 0), I4 = t7 + 16 | 0;
                            }
                            function Yt2(t7, e6, r11) {
                              return 0 | tt2(t7 |= 0, e6 |= 0, r11 |= 0);
                            }
                            function Kt2() {
                              var t7;
                              (t7 = a4[9137]) && Ie2[0 | t7](), p4(), i3();
                            }
                            function Jt2(t7, e6, r11, n9, A8, i4) {
                              Ie2[a4[8809]](t7, e6, r11, n9, A8, 0, 0, i4);
                            }
                            function jt2(t7, e6) {
                              return t7 |= 0, vt2(e6 |= 0, 32), 0 | ee2(t7, e6);
                            }
                            function zt2(t7, e6, r11, n9, A8, i4) {
                              Ie2[a4[8809]](t7, e6, r11, n9, A8, 1, 0, i4);
                            }
                            function qt2(t7) {
                              return t7 ? 31 - u4(t7 - 1 ^ t7) | 0 : 32;
                            }
                            function Xt2(t7, e6, r11, n9) {
                              Ie2[a4[8813]](t7, e6, 40, 0, r11, 0, n9);
                            }
                            function Vt2(t7, e6) {
                              return 0 | ee2(t7 |= 0, e6 |= 0);
                            }
                            function Wt2(t7, e6, r11, n9) {
                              Ie2[a4[8811]](t7, e6, 0, r11, n9);
                            }
                            function Zt2(t7, e6, r11) {
                              Ie2[a4[8810]](t7, 64, 0, e6, r11);
                            }
                            function $t2(t7, e6, r11, n9) {
                              Ie2[a4[8804]](t7, e6, r11, n9);
                            }
                            function te2(t7, e6, r11, n9) {
                              return G4(t7, e6, r11, n9), 0;
                            }
                            function ee2(t7, e6) {
                              return 0 | Ie2[a4[8807]](t7, e6);
                            }
                            function re2(t7, e6, r11) {
                              return K4(t7, e6, r11), 0;
                            }
                            function ne2(t7, e6) {
                              Ie2[a4[8803]](t7, e6);
                            }
                            function Ae2(t7, e6) {
                              Ie2[a4[8805]](t7, e6);
                            }
                            function ie2(t7) {
                              vt2(t7 |= 0, 32);
                            }
                            function oe2(t7, e6) {
                              xt2(t7, 0, e6);
                            }
                            function se2() {
                              return 208;
                            }
                            function ae2() {
                              return 16;
                            }
                            function ce2() {
                              return 32;
                            }
                            function he2() {
                              return 24;
                            }
                            function ge2() {
                              return -17;
                            }
                            function ue2() {
                              return 64;
                            }
                            function le2() {
                              return 1;
                            }
                            function fe2() {
                              return 8;
                            }
                            function pe2() {
                              return 0;
                            }
                            A7(e5 = c4, 1024, "TGlic29kaXVtRFJHcmFuZG9tYnl0ZXMAYjY0X3BvcyA8PSBiNjRfbGVuAGNyeXB0b19nZW5lcmljaGFzaF9ibGFrZTJiX2ZpbmFsAHJhbmRvbWJ5dGVzL3JhbmRvbWJ5dGVzLmMAc29kaXVtL2NvZGVjcy5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9ibGFrZTJiLXJlZi5jAGNyeXB0b19nZW5lcmljaGFzaC9ibGFrZTJiL3JlZi9nZW5lcmljaGFzaF9ibGFrZTJiLmMAYnVmX2xlbiA8PSBTSVpFX01BWABvdXRsZW4gPD0gVUlOVDhfTUFYAFMtPmJ1ZmxlbiA8PSBCTEFLRTJCX0JMT0NLQllURVMAMS4wLjE5AHNvZGl1bV9iaW4yYmFzZTY0AAAAAAAAAAC2eFn/hXLTAL1uFf8PCmoAKcABAJjoef+8PKD/mXHO/wC34v60DUj/AAAAAAAAAACwoA7+08mG/54YjwB/aTUAYAy9AKfX+/+fTID+amXh/x78BACSDK4="), A7(e5, 1440, "WfGy/grlpv973Sr+HhTUAFKAAwAw0fMAd3lA/zLjnP8AbsUBZxuQ"), A7(e5, 1488, "hTuMAb3xJP/4JcMBYNw3ALdMPv/DQj0AMkykAeGkTP9MPaP/dT4fAFGRQP92QQ4AonPW/waKLgB85vT/CoqPADQawgC49EwAgY8pAb70E/97qnr/YoFEAHnVkwBWZR7/oWebAIxZQ//v5b4BQwu1AMbwif7uRbz/Q5fuABMqbP/lVXEBMkSH/xFqCQAyZwH/UAGoASOYHv8QqLkBOFno/2XS/AAp+kcAzKpP/w4u7/9QTe8AvdZL/xGN+QAmUEz/vlV1AFbkqgCc2NABw8+k/5ZCTP+v4RD/jVBiAUzb8gDGonIALtqYAJsr8f6boGj/M7ulAAIRrwBCVKAB9zoeACNBNf5F7L8ALYb1AaN73QAgbhT/NBelALrWRwDpsGAA8u82ATlZigBTAFT/iKBkAFyOeP5ofL4AtbE+//opVQCYgioBYPz2AJeXP/7vhT4AIDicAC2nvf+OhbMBg1bTALuzlv76qg7/0qNOACU0lwBjTRoA7pzV/9XA0QFJLlQAFEEpATbOTwDJg5L+qm8Y/7EhMv6rJsv/Tvd0ANHdmQCFgLIBOiwZAMknOwG9E/wAMeXSAXW7dQC1s7gBAHLbADBekwD1KTgAfQ3M/vStdwAs3SD+VOoUAPmgxgHsfur/L2Oo/qrimf9ms9gA4o16/3pCmf629YYA4+QZAdY56//YrTj/tefSAHeAnf+BX4j/bn4zAAKpt/8HgmL+RbBe/3QE4wHZ8pH/yq0fAWkBJ/8ur0UA5C86/9fgRf7POEX/EP6L/xfP1P/KFH7/X9Vg/wmwIQDIBc//8SqA/iMhwP/45cQBgRF4APtnl/8HNHD/jDhC/yji9f/ZRiX+rNYJ/0hDhgGSwNb/LCZwAES4S//OWvsAleuNALWqOgB09O8AXJ0CAGatYgDpiWABfzHLAAWblAAXlAn/03oMACKGGv/bzIgAhggp/+BTK/5VGfcAbX8A/qmIMADud9v/563VAM4S/v4Iugf/fgkHAW8qSABvNOz+YD+NAJO/f/7NTsD/DmrtAbvbTACv87v+aVmtAFUZWQGi85QAAnbR/iGeCQCLoy7/XUYoAGwqjv5v/I7/m9+QADPlp/9J/Jv/XnQM/5ig2v+c7iX/s+rP/8UAs/+apI0A4cRoAAojGf7R1PL/Yf3e/rhl5QDeEn8BpIiH/x7PjP6SYfMAgcAa/slUIf9vCk7/k1Gy/wQEGACh7tf/Bo0hADXXDv8ptdD/54udALPL3f//uXEAveKs/3FC1v/KPi3/ZkAI/06uEP6FdUT/"), A7(e5, 2480, "AQ=="), A7(e5, 2512, "JuiVj8KyJ7BFw/SJ8u+Y8NXfrAXTxjM5sTgCiG1T/AXHF2pwPU3YT7o8C3YNEGcPKiBT+iw5zMZOx/13kqwDeuz///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////f+3T9VwaYxJY1pz3ot753hQ="), A7(e5, 2703, ""), A7(e5, 33676, "AQ=="), A7(e5, 33712, "AQ=="), A7(e5, 33744, "4Ot6fDtBuK4WVuP68Z/EatoJjeucMrH9hmIFFl9JuABfnJW8o1CMJLHQsVWcg+9bBERcxFgcjobYIk7d0J8RV+z///////////////////////////////////////9/7f///////////////////////////////////////3/u////////////////////////////////////////fw=="), A7(e5, 33936, "Z+YJaoWuZ7ty8248OvVPpX9SDlGMaAWbq9mDHxnN4FuYL4pCkUQ3cc/7wLWl27XpW8JWOfER8Vmkgj+S1V4cq5iqB9gBW4MSvoUxJMN9DFV0Xb5y/rHegKcG3Jt08ZvBwWmb5IZHvu/GncEPzKEMJG8s6S2qhHRK3KmwXNqI+XZSUT6YbcYxqMgnA7DHf1m/8wvgxkeRp9VRY8oGZykpFIUKtyc4IRsu/G0sTRMNOFNUcwpluwpqdi7JwoGFLHKSoei/oktmGqhwi0vCo1FsxxnoktEkBpnWhTUO9HCgahAWwaQZCGw3Hkx3SCe1vLA0swwcOUqq2E5Pypxb828uaO6Cj3RvY6V4FHjIhAgCx4z6/76Q62xQpPej+b7yeHHGgA=="), A7(e5, 34304, "CMm882fmCWo7p8qEha5nuyv4lP5y82488TYdXzr1T6XRguatf1IOUR9sPiuMaAWba71B+6vZgx95IX4TGc3gWyKuKNeYL4pCzWXvI5FEN3EvO03sz/vAtbzbiYGl27XpOLVI81vCVjkZ0AW28RHxWZtPGa+kgj+SGIFt2tVeHKtCAgOjmKoH2L5vcEUBW4MSjLLkTr6FMSTitP/Vw30MVW+Je/J0Xb5ysZYWO/6x3oA1Esclpwbcm5Qmac908ZvB0krxnsFpm+TjJU84hke+77XVjIvGncEPZZysd8yhDCR1AitZbyzpLYPkpm6qhHRK1PtBvdypsFy1UxGD2oj5dqvfZu5SUT6YEDK0LW3GMag/IfuYyCcDsOQO777Hf1m/wo+oPfML4MYlpwqTR5Gn1W+CA+BRY8oGcG4OCmcpKRT8L9JGhQq3JybJJlw4IRsu7SrEWvxtLE3fs5WdEw04U95jr4tUcwplqLJ3PLsKanbmru1HLsnCgTs1ghSFLHKSZAPxTKHov6IBMEK8S2YaqJGX+NBwi0vCML5UBqNRbMcYUu/WGeiS0RCpZVUkBpnWKiBxV4U1DvS40bsycKBqEMjQ0rgWwaQZU6tBUQhsNx6Z647fTHdIJ6hIm+G1vLA0Y1rJxbMMHDnLikHjSqrYTnPjY3dPypxbo7iy1vNvLmj8su9d7oKPdGAvF0NvY6V4cqvwoRR4yITsOWQaCALHjCgeYyP6/76Q6b2C3utsUKQVecay96P5vitTcuPyeHHGnGEm6s4+J8oHwsAhx7iG0R7r4M3WfdrqeNFu7n9PffW6bxdyqmfwBqaYyKLFfWMKrg35vgSYPxEbRxwTNQtxG4R9BCP1d9sokyTHQHuryjK8vskVCr6ePEwNEJzEZx1DtkI+y77UxUwqfmX8nCl/Wez61jqrb8tfF1hHSowZRGyA"), A7(e5, 35136, "U2lnRWQyNTUxOSBubyBFZDI1NTE5IGNvbGxpc2lvbnMB"), A7(e5, 35200, "0I4BAAEAAAACAAAAAwAAAAQAAAAFAAAABgAAAAcAAAAIAAAACQAAAAoAAAALAAAADAAAAA0=");
                            var de2, Ie2 = (de2 = [null, function(t7, e6, r11, n9, A8) {
                              var i4, o5, h5;
                              return t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = (o5 = I4) - 128 & -64, a4[i4 >> 2] = 67108863 & (c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24), a4[i4 + 4 >> 2] = (c4[A8 + 3 | 0] | c4[A8 + 4 | 0] << 8 | c4[A8 + 5 | 0] << 16 | c4[A8 + 6 | 0] << 24) >>> 2 & 67108611, a4[i4 + 8 >> 2] = (c4[A8 + 6 | 0] | c4[A8 + 7 | 0] << 8 | c4[A8 + 8 | 0] << 16 | c4[A8 + 9 | 0] << 24) >>> 4 & 67092735, a4[i4 + 12 >> 2] = (c4[A8 + 9 | 0] | c4[A8 + 10 | 0] << 8 | c4[A8 + 11 | 0] << 16 | c4[A8 + 12 | 0] << 24) >>> 6 & 66076671, h5 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[i4 + 20 >> 2] = 0, a4[i4 + 24 >> 2] = 0, a4[i4 + 28 >> 2] = 0, a4[i4 + 32 >> 2] = 0, a4[i4 + 36 >> 2] = 0, a4[i4 + 16 >> 2] = h5 >>> 8 & 1048575, a4[i4 + 40 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[i4 + 44 >> 2] = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[i4 + 48 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, A8 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, s4[i4 + 80 | 0] = 0, a4[i4 + 56 >> 2] = 0, a4[i4 + 60 >> 2] = 0, a4[i4 + 52 >> 2] = A8, z3(i4, e6, r11, n9), $2(i4, t7), I4 = o5, 0;
                            }, function(t7, e6, r11, n9, A8) {
                              var i4, o5, h5;
                              return t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = (o5 = I4) - 192 & -64, a4[i4 + 64 >> 2] = 67108863 & (c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24), a4[i4 + 68 >> 2] = (c4[A8 + 3 | 0] | c4[A8 + 4 | 0] << 8 | c4[A8 + 5 | 0] << 16 | c4[A8 + 6 | 0] << 24) >>> 2 & 67108611, a4[i4 + 72 >> 2] = (c4[A8 + 6 | 0] | c4[A8 + 7 | 0] << 8 | c4[A8 + 8 | 0] << 16 | c4[A8 + 9 | 0] << 24) >>> 4 & 67092735, a4[i4 + 76 >> 2] = (c4[A8 + 9 | 0] | c4[A8 + 10 | 0] << 8 | c4[A8 + 11 | 0] << 16 | c4[A8 + 12 | 0] << 24) >>> 6 & 66076671, h5 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[i4 + 84 >> 2] = 0, a4[i4 + 88 >> 2] = 0, a4[i4 + 92 >> 2] = 0, a4[i4 + 96 >> 2] = 0, a4[i4 + 100 >> 2] = 0, a4[i4 + 80 >> 2] = h5 >>> 8 & 1048575, a4[i4 + 104 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[i4 + 108 >> 2] = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[i4 + 112 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, A8 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, s4[i4 + 144 | 0] = 0, a4[i4 + 120 >> 2] = 0, a4[i4 + 124 >> 2] = 0, a4[i4 + 116 >> 2] = A8, z3(A8 = i4 - -64 | 0, e6, r11, n9), $2(A8, e6 = i4 + 48 | 0), t7 = nt2(t7, e6), I4 = o5, 0 | t7;
                            }, function(t7, e6) {
                              var r11;
                              return e6 |= 0, a4[(t7 |= 0) >> 2] = 67108863 & (c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24), a4[t7 + 4 >> 2] = (c4[e6 + 3 | 0] | c4[e6 + 4 | 0] << 8 | c4[e6 + 5 | 0] << 16 | c4[e6 + 6 | 0] << 24) >>> 2 & 67108611, a4[t7 + 8 >> 2] = (c4[e6 + 6 | 0] | c4[e6 + 7 | 0] << 8 | c4[e6 + 8 | 0] << 16 | c4[e6 + 9 | 0] << 24) >>> 4 & 67092735, a4[t7 + 12 >> 2] = (c4[e6 + 9 | 0] | c4[e6 + 10 | 0] << 8 | c4[e6 + 11 | 0] << 16 | c4[e6 + 12 | 0] << 24) >>> 6 & 66076671, r11 = c4[e6 + 12 | 0] | c4[e6 + 13 | 0] << 8 | c4[e6 + 14 | 0] << 16 | c4[e6 + 15 | 0] << 24, a4[t7 + 20 >> 2] = 0, a4[t7 + 24 >> 2] = 0, a4[t7 + 28 >> 2] = 0, a4[t7 + 32 >> 2] = 0, a4[t7 + 36 >> 2] = 0, a4[t7 + 16 >> 2] = r11 >>> 8 & 1048575, a4[t7 + 40 >> 2] = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, a4[t7 + 44 >> 2] = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24, a4[t7 + 48 >> 2] = c4[e6 + 24 | 0] | c4[e6 + 25 | 0] << 8 | c4[e6 + 26 | 0] << 16 | c4[e6 + 27 | 0] << 24, e6 = c4[e6 + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24, s4[t7 + 80 | 0] = 0, a4[t7 + 56 >> 2] = 0, a4[t7 + 60 >> 2] = 0, a4[t7 + 52 >> 2] = e6, 0;
                            }, function(t7, e6, r11, n9) {
                              return z3(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0), 0;
                            }, function(t7, e6) {
                              return $2(t7 |= 0, e6 |= 0), 0;
                            }, function(t7, e6, r11) {
                              t7 |= 0, e6 |= 0, r11 |= 0;
                              var n9, A8 = 0, i4 = 0, o5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, _5 = 0, Q5 = 0, k5 = 0, D5 = 0, S5 = 0, N6 = 0, M5 = 0, x5 = 0, F5 = 0, P5 = 0, T3 = 0, R5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, V3 = 0, W3 = 0, Z3 = 0, $3 = 0, tt3 = 0, rt3 = 0, nt3 = 0, At3 = 0, it3 = 0, ot3 = 0, st3 = 0, at3 = 0, ct3 = 0, ht3 = 0, gt3 = 0, ut3 = 0, lt3 = 0, ft3 = 0, pt3 = 0, dt3 = 0, It3 = 0, yt3 = 0, Ct3 = 0, mt3 = 0, Et3 = 0, wt3 = 0, vt3 = 0, _t3 = 0, Qt3 = 0;
                              for (I4 = n9 = I4 - 368 | 0; C5 = (o5 = c4[r11 + A8 | 0]) ^ c4[0 | (g5 = A8 + 33680 | 0)] | C5, d5 = o5 ^ c4[g5 + 192 | 0] | d5, p5 = o5 ^ c4[g5 + 160 | 0] | p5, f5 = o5 ^ c4[g5 + 128 | 0] | f5, h5 = o5 ^ c4[g5 + 96 | 0] | h5, u5 = o5 ^ c4[g5 - -64 | 0] | u5, i4 = o5 ^ c4[g5 + 32 | 0] | i4, 31 != (0 | (A8 = A8 + 1 | 0)); )
                                ;
                              if (A8 = -1, !(256 & ((255 & ((o5 = 127 ^ (g5 = 127 & c4[r11 + 31 | 0])) | d5)) - 1 | (255 & (o5 | p5)) - 1 | (255 & (o5 | f5)) - 1 | (255 & (87 ^ g5 | h5)) - 1 | (255 & (u5 | g5)) - 1 | (255 & (i4 | g5)) - 1 | (255 & (g5 | C5)) - 1))) {
                                for (A8 = e6, e6 = c4[e6 + 28 | 0] | c4[e6 + 29 | 0] << 8 | c4[e6 + 30 | 0] << 16 | c4[e6 + 31 | 0] << 24, a4[n9 + 360 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, a4[n9 + 364 >> 2] = e6, e6 = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[n9 + 352 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[n9 + 356 >> 2] = e6, i4 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, e6 = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[n9 + 336 >> 2] = e6, a4[n9 + 340 >> 2] = i4, i4 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[n9 + 344 >> 2] = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, a4[n9 + 348 >> 2] = i4, s4[n9 + 336 | 0] = 248 & e6, s4[n9 + 367 | 0] = 63 & c4[n9 + 367 | 0] | 64, U4(n9 + 288 | 0, r11), a4[n9 + 260 >> 2] = 0, a4[n9 + 264 >> 2] = 0, a4[n9 + 268 >> 2] = 0, a4[n9 + 272 >> 2] = 0, a4[n9 + 276 >> 2] = 0, a4[n9 + 208 >> 2] = 0, a4[n9 + 212 >> 2] = 0, a4[n9 + 216 >> 2] = 0, a4[n9 + 220 >> 2] = 0, a4[n9 + 224 >> 2] = 0, a4[n9 + 228 >> 2] = 0, e6 = a4[n9 + 308 >> 2], a4[n9 + 160 >> 2] = a4[n9 + 304 >> 2], a4[n9 + 164 >> 2] = e6, e6 = a4[n9 + 316 >> 2], a4[n9 + 168 >> 2] = a4[n9 + 312 >> 2], a4[n9 + 172 >> 2] = e6, e6 = a4[n9 + 324 >> 2], a4[n9 + 176 >> 2] = a4[n9 + 320 >> 2], a4[n9 + 180 >> 2] = e6, a4[n9 + 244 >> 2] = 0, a4[n9 + 248 >> 2] = 0, a4[n9 + 240 >> 2] = 1, a4[n9 + 252 >> 2] = 0, a4[n9 + 256 >> 2] = 0, a4[n9 + 192 >> 2] = 0, a4[n9 + 196 >> 2] = 0, a4[n9 + 200 >> 2] = 0, a4[n9 + 204 >> 2] = 0, e6 = a4[n9 + 292 >> 2], a4[n9 + 144 >> 2] = a4[n9 + 288 >> 2], a4[n9 + 148 >> 2] = e6, e6 = a4[n9 + 300 >> 2], a4[n9 + 152 >> 2] = a4[n9 + 296 >> 2], a4[n9 + 156 >> 2] = e6, a4[n9 + 116 >> 2] = 0, a4[n9 + 120 >> 2] = 0, a4[n9 + 124 >> 2] = 0, a4[n9 + 128 >> 2] = 0, a4[n9 + 132 >> 2] = 0, a4[n9 + 100 >> 2] = 0, a4[n9 + 104 >> 2] = 0, a4[n9 + 96 >> 2] = 1, a4[n9 + 108 >> 2] = 0, a4[n9 + 112 >> 2] = 0, r11 = 254; $3 = a4[n9 + 276 >> 2], o5 = a4[n9 + 180 >> 2], tt3 = a4[n9 + 96 >> 2], rt3 = a4[n9 + 192 >> 2], nt3 = a4[n9 + 144 >> 2], At3 = a4[n9 + 240 >> 2], it3 = a4[n9 + 100 >> 2], ot3 = a4[n9 + 196 >> 2], st3 = a4[n9 + 148 >> 2], at3 = a4[n9 + 244 >> 2], M5 = a4[n9 + 104 >> 2], ct3 = a4[n9 + 200 >> 2], x5 = a4[n9 + 152 >> 2], ht3 = a4[n9 + 248 >> 2], T3 = a4[n9 + 108 >> 2], gt3 = a4[n9 + 204 >> 2], R5 = a4[n9 + 156 >> 2], ut3 = a4[n9 + 252 >> 2], F5 = a4[n9 + 112 >> 2], lt3 = a4[n9 + 208 >> 2], S5 = a4[n9 + 160 >> 2], ft3 = a4[n9 + 256 >> 2], C5 = a4[n9 + 116 >> 2], pt3 = a4[n9 + 212 >> 2], l5 = a4[n9 + 164 >> 2], dt3 = a4[n9 + 260 >> 2], d5 = a4[n9 + 120 >> 2], It3 = a4[n9 + 216 >> 2], p5 = a4[n9 + 168 >> 2], yt3 = a4[n9 + 264 >> 2], f5 = a4[n9 + 124 >> 2], Ct3 = a4[n9 + 220 >> 2], h5 = a4[n9 + 172 >> 2], mt3 = a4[n9 + 268 >> 2], u5 = a4[n9 + 128 >> 2], Et3 = a4[n9 + 224 >> 2], i4 = a4[n9 + 176 >> 2], D5 = a4[n9 + 272 >> 2], wt3 = r11, N6 = (_5 = (e6 = 0 - ((e6 = Z3) ^ (Z3 = c4[(vt3 = n9 + 336 | 0) + (r11 >>> 3 | 0) | 0] >>> (7 & r11) & 1)) | 0) & ((A8 = a4[n9 + 132 >> 2]) ^ (z4 = a4[n9 + 228 >> 2]))) ^ A8, a4[n9 + 132 >> 2] = N6, q4 = o5 ^ (Q5 = e6 & (o5 ^ $3)), a4[n9 + 84 >> 2] = q4 - N6, P5 = u5 ^ (B5 = e6 & (u5 ^ Et3)), a4[n9 + 128 >> 2] = P5, V3 = (k5 = e6 & (i4 ^ D5)) ^ i4, a4[n9 + 80 >> 2] = V3 - P5, H5 = f5 ^ (E5 = e6 & (f5 ^ Ct3)), a4[n9 + 124 >> 2] = H5, _t3 = h5 ^ (w5 = e6 & (h5 ^ mt3)), a4[n9 + 76 >> 2] = _t3 - H5, L5 = d5 ^ (m5 = e6 & (d5 ^ It3)), a4[n9 + 120 >> 2] = L5, Qt3 = p5 ^ (g5 = e6 & (p5 ^ yt3)), a4[n9 + 72 >> 2] = Qt3 - L5, O5 = C5 ^ (o5 = e6 & (C5 ^ pt3)), a4[n9 + 116 >> 2] = O5, Y5 = l5 ^ (C5 = e6 & (l5 ^ dt3)), a4[n9 + 68 >> 2] = Y5 - O5, K5 = F5 ^ (d5 = e6 & (F5 ^ lt3)), a4[n9 + 112 >> 2] = K5, G5 = S5 ^ (p5 = e6 & (S5 ^ ft3)), a4[n9 + 64 >> 2] = G5 - K5, J5 = T3 ^ (f5 = e6 & (T3 ^ gt3)), a4[n9 + 108 >> 2] = J5, W3 = R5 ^ (h5 = e6 & (R5 ^ ut3)), a4[n9 + 60 >> 2] = W3 - J5, j5 = M5 ^ (u5 = e6 & (M5 ^ ct3)), a4[n9 + 104 >> 2] = j5, T3 = x5 ^ (i4 = e6 & (x5 ^ ht3)), a4[n9 + 56 >> 2] = T3 - j5, M5 = it3 ^ (A8 = e6 & (it3 ^ ot3)), a4[n9 + 100 >> 2] = M5, R5 = st3 ^ (r11 = e6 & (st3 ^ at3)), a4[n9 + 52 >> 2] = R5 - M5, x5 = tt3 ^ (F5 = e6 & (tt3 ^ rt3)), a4[n9 + 96 >> 2] = x5, S5 = (e6 &= nt3 ^ At3) ^ nt3, a4[n9 + 48 >> 2] = S5 - x5, l5 = Q5 ^ $3, _5 ^= z4, a4[n9 + 36 >> 2] = l5 - _5, Q5 = k5 ^ D5, B5 ^= Et3, a4[n9 + 32 >> 2] = Q5 - B5, k5 = w5 ^ mt3, E5 ^= Ct3, a4[n9 + 28 >> 2] = k5 - E5, w5 = g5 ^ yt3, m5 ^= It3, a4[n9 + 24 >> 2] = w5 - m5, g5 = C5 ^ dt3, o5 ^= pt3, a4[n9 + 20 >> 2] = g5 - o5, C5 = p5 ^ ft3, d5 ^= lt3, a4[n9 + 16 >> 2] = C5 - d5, p5 = h5 ^ ut3, f5 ^= gt3, a4[n9 + 12 >> 2] = p5 - f5, h5 = i4 ^ ht3, u5 ^= ct3, a4[n9 + 8 >> 2] = h5 - u5, i4 = r11 ^ at3, A8 ^= ot3, a4[n9 + 4 >> 2] = i4 - A8, r11 = e6 ^ At3, e6 = F5 ^ rt3, a4[n9 >> 2] = r11 - e6, a4[n9 + 276 >> 2] = l5 + _5, a4[n9 + 272 >> 2] = Q5 + B5, a4[n9 + 268 >> 2] = E5 + k5, a4[n9 + 264 >> 2] = m5 + w5, a4[n9 + 260 >> 2] = o5 + g5, a4[n9 + 256 >> 2] = d5 + C5, a4[n9 + 248 >> 2] = h5 + u5, a4[n9 + 244 >> 2] = A8 + i4, a4[n9 + 240 >> 2] = e6 + r11, a4[n9 + 252 >> 2] = f5 + p5, a4[n9 + 228 >> 2] = N6 + q4, a4[n9 + 224 >> 2] = P5 + V3, a4[n9 + 220 >> 2] = H5 + _t3, a4[n9 + 216 >> 2] = L5 + Qt3, a4[n9 + 212 >> 2] = O5 + Y5, a4[n9 + 208 >> 2] = G5 + K5, a4[n9 + 204 >> 2] = J5 + W3, a4[n9 + 200 >> 2] = T3 + j5, a4[n9 + 196 >> 2] = M5 + R5, a4[n9 + 192 >> 2] = S5 + x5, v4(q4 = n9 + 96 | 0, P5 = n9 + 48 | 0, N6 = n9 + 240 | 0), v4(D5 = n9 + 192 | 0, D5, n9), b4(P5, n9), b4(n9, N6), l5 = a4[n9 + 192 >> 2], _5 = a4[n9 + 96 >> 2], Q5 = a4[n9 + 196 >> 2], B5 = a4[n9 + 100 >> 2], k5 = a4[n9 + 200 >> 2], E5 = a4[n9 + 104 >> 2], w5 = a4[n9 + 204 >> 2], m5 = a4[n9 + 108 >> 2], g5 = a4[n9 + 208 >> 2], o5 = a4[n9 + 112 >> 2], C5 = a4[n9 + 212 >> 2], d5 = a4[n9 + 116 >> 2], p5 = a4[n9 + 216 >> 2], f5 = a4[n9 + 120 >> 2], h5 = a4[n9 + 220 >> 2], u5 = a4[n9 + 124 >> 2], i4 = a4[n9 + 224 >> 2], A8 = a4[n9 + 128 >> 2], r11 = a4[n9 + 228 >> 2], e6 = a4[n9 + 132 >> 2], a4[n9 + 180 >> 2] = r11 + e6, a4[n9 + 176 >> 2] = A8 + i4, a4[n9 + 172 >> 2] = h5 + u5, a4[n9 + 168 >> 2] = f5 + p5, a4[n9 + 164 >> 2] = d5 + C5, a4[n9 + 160 >> 2] = o5 + g5, a4[n9 + 156 >> 2] = m5 + w5, a4[n9 + 152 >> 2] = E5 + k5, a4[n9 + 148 >> 2] = Q5 + B5, a4[n9 + 144 >> 2] = l5 + _5, a4[n9 + 228 >> 2] = e6 - r11, a4[n9 + 224 >> 2] = A8 - i4, a4[n9 + 220 >> 2] = u5 - h5, a4[n9 + 216 >> 2] = f5 - p5, a4[n9 + 212 >> 2] = d5 - C5, a4[n9 + 208 >> 2] = o5 - g5, a4[n9 + 204 >> 2] = m5 - w5, a4[n9 + 200 >> 2] = E5 - k5, a4[n9 + 196 >> 2] = B5 - Q5, a4[n9 + 192 >> 2] = _5 - l5, v4(N6, n9, P5), H5 = a4[n9 + 52 >> 2], m5 = a4[n9 + 4 >> 2], L5 = a4[n9 + 56 >> 2], g5 = a4[n9 + 8 >> 2], O5 = a4[n9 + 64 >> 2], p5 = a4[n9 + 16 >> 2], K5 = a4[n9 + 60 >> 2], f5 = a4[n9 + 12 >> 2], J5 = a4[n9 + 72 >> 2], h5 = a4[n9 + 24 >> 2], j5 = a4[n9 + 68 >> 2], u5 = a4[n9 + 20 >> 2], M5 = a4[n9 + 80 >> 2], i4 = a4[n9 + 32 >> 2], x5 = a4[n9 + 76 >> 2], A8 = a4[n9 + 28 >> 2], z4 = a4[n9 + 84 >> 2], e6 = a4[n9 + 36 >> 2], V3 = a4[n9 + 48 >> 2], r11 = a4[n9 >> 2] - V3 | 0, a4[n9 >> 2] = r11, e6 = e6 - z4 | 0, a4[n9 + 36 >> 2] = e6, F5 = A8 - x5 | 0, a4[n9 + 28 >> 2] = F5, S5 = i4 - M5 | 0, a4[n9 + 32 >> 2] = S5, o5 = u5 - j5 | 0, a4[n9 + 20 >> 2] = o5, C5 = h5 - J5 | 0, a4[n9 + 24 >> 2] = C5, d5 = f5 - K5 | 0, a4[n9 + 12 >> 2] = d5, p5 = p5 - O5 | 0, a4[n9 + 16 >> 2] = p5, f5 = g5 - L5 | 0, a4[n9 + 8 >> 2] = f5, i4 = m5 - H5 | 0, a4[n9 + 4 >> 2] = i4, b4(D5, D5), e6 = Bt2(e6, e6 >> 31, 121666, 0), A8 = y4, W3 = e6, e6 = Bt2((33554431 & (A8 = (l5 = e6 + 16777216 | 0) >>> 0 < 16777216 ? A8 + 1 | 0 : A8)) << 7 | l5 >>> 25, A8 >> 25, 19, 0), u5 = y4, A8 = e6, e6 = Bt2(r11, r11 >> 31, 121666, 0), G5 = y4 + u5 | 0, e6 = e6 >>> 0 > (A8 = A8 + e6 | 0) >>> 0 ? G5 + 1 | 0 : G5, r11 = (h5 = A8 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, _5 = A8 - (-67108864 & h5) | 0, a4[n9 + 96 >> 2] = _5, u5 = Bt2(i4, i4 >> 31, 121666, 0), A8 = y4, A8 = (i4 = u5 + 16777216 | 0) >>> 0 < 16777216 ? A8 + 1 | 0 : A8, Q5 = (u5 - (-33554432 & i4) | 0) + ((67108863 & r11) << 6 | h5 >>> 26) | 0, a4[n9 + 100 >> 2] = Q5, G5 = (e6 = A8) >> 25, A8 = (33554431 & e6) << 7 | i4 >>> 25, r11 = Bt2(f5, f5 >> 31, 121666, 0) + A8 | 0, e6 = G5 + y4 | 0, e6 = r11 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, u5 = (B5 = r11 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, k5 = r11 - (-67108864 & B5) | 0, a4[n9 + 104 >> 2] = k5, A8 = Bt2(p5, p5 >> 31, 121666, 0), i4 = y4, r11 = Bt2(d5, d5 >> 31, 121666, 0), e6 = y4, Y5 = A8, T3 = r11, A8 = (33554431 & (e6 = (E5 = r11 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6)) << 7 | E5 >>> 25, e6 = (e6 >> 25) + i4 | 0, e6 = (r11 = Y5 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, i4 = (w5 = r11 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, m5 = r11 - (-67108864 & w5) | 0, a4[n9 + 112 >> 2] = m5, A8 = Bt2(C5, C5 >> 31, 121666, 0), h5 = y4, r11 = Bt2(o5, o5 >> 31, 121666, 0), e6 = y4, Y5 = A8, R5 = r11, A8 = (33554431 & (e6 = (g5 = r11 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6)) << 7 | g5 >>> 25, e6 = (e6 >> 25) + h5 | 0, e6 = (r11 = Y5 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (o5 = r11 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, C5 = r11 - (-67108864 & o5) | 0, a4[n9 + 120 >> 2] = C5, h5 = Bt2(S5, S5 >> 31, 121666, 0), f5 = y4, r11 = Bt2(F5, F5 >> 31, 121666, 0), e6 = y4, S5 = r11, r11 = (33554431 & (e6 = (d5 = r11 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6)) << 7 | d5 >>> 25, e6 = (e6 >> 25) + f5 | 0, e6 = r11 >>> 0 > (h5 = r11 + h5 | 0) >>> 0 ? e6 + 1 | 0 : e6, r11 = (p5 = h5 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6, f5 = h5 - (-67108864 & p5) | 0, a4[n9 + 128 >> 2] = f5, h5 = (u5 = T3 + ((67108863 & u5) << 6 | B5 >>> 26) | 0) - (-33554432 & E5) | 0, a4[n9 + 108 >> 2] = h5, u5 = (i4 = R5 + ((67108863 & i4) << 6 | w5 >>> 26) | 0) - (-33554432 & g5) | 0, a4[n9 + 116 >> 2] = u5, i4 = (e6 = S5 + ((67108863 & A8) << 6 | o5 >>> 26) | 0) - (-33554432 & d5) | 0, a4[n9 + 124 >> 2] = i4, r11 = (r11 = W3 + ((67108863 & r11) << 6 | p5 >>> 26) | 0) - (-33554432 & l5) | 0, a4[n9 + 132 >> 2] = r11, b4(e6 = n9 + 144 | 0, e6), a4[n9 + 84 >> 2] = r11 + z4, a4[n9 + 80 >> 2] = f5 + M5, a4[n9 + 76 >> 2] = i4 + x5, a4[n9 + 72 >> 2] = C5 + J5, a4[n9 + 68 >> 2] = u5 + j5, a4[n9 + 64 >> 2] = m5 + O5, a4[n9 + 60 >> 2] = h5 + K5, a4[n9 + 56 >> 2] = k5 + L5, a4[n9 + 52 >> 2] = Q5 + H5, a4[n9 + 48 >> 2] = _5 + V3, r11 = wt3 - 1 | 0, v4(q4, n9 + 288 | 0, D5), v4(D5, n9, P5), wt3; )
                                  ;
                                C5 = a4[n9 + 144 >> 2], _5 = a4[n9 + 240 >> 2], d5 = a4[n9 + 148 >> 2], Q5 = a4[n9 + 244 >> 2], p5 = a4[n9 + 152 >> 2], B5 = a4[n9 + 248 >> 2], f5 = a4[n9 + 156 >> 2], k5 = a4[n9 + 252 >> 2], h5 = a4[n9 + 160 >> 2], E5 = a4[n9 + 256 >> 2], u5 = a4[n9 + 164 >> 2], w5 = a4[n9 + 260 >> 2], i4 = a4[n9 + 168 >> 2], m5 = a4[n9 + 264 >> 2], A8 = a4[n9 + 172 >> 2], g5 = a4[n9 + 268 >> 2], r11 = a4[n9 + 176 >> 2], o5 = a4[n9 + 272 >> 2], l5 = 0 - Z3 | 0, e6 = a4[n9 + 276 >> 2], a4[n9 + 276 >> 2] = l5 & (e6 ^ a4[n9 + 180 >> 2]) ^ e6, a4[n9 + 272 >> 2] = o5 ^ l5 & (r11 ^ o5), a4[n9 + 268 >> 2] = g5 ^ l5 & (A8 ^ g5), a4[n9 + 264 >> 2] = m5 ^ l5 & (i4 ^ m5), a4[n9 + 260 >> 2] = w5 ^ l5 & (u5 ^ w5), a4[n9 + 256 >> 2] = E5 ^ l5 & (h5 ^ E5), a4[n9 + 252 >> 2] = k5 ^ l5 & (f5 ^ k5), a4[n9 + 248 >> 2] = B5 ^ l5 & (p5 ^ B5), a4[n9 + 244 >> 2] = Q5 ^ l5 & (d5 ^ Q5), a4[n9 + 240 >> 2] = _5 ^ l5 & (C5 ^ _5), _5 = a4[n9 + 192 >> 2], C5 = a4[n9 + 96 >> 2], Q5 = a4[n9 + 196 >> 2], d5 = a4[n9 + 100 >> 2], B5 = a4[n9 + 200 >> 2], p5 = a4[n9 + 104 >> 2], k5 = a4[n9 + 204 >> 2], f5 = a4[n9 + 108 >> 2], E5 = a4[n9 + 208 >> 2], h5 = a4[n9 + 112 >> 2], w5 = a4[n9 + 212 >> 2], u5 = a4[n9 + 116 >> 2], m5 = a4[n9 + 216 >> 2], i4 = a4[n9 + 120 >> 2], g5 = a4[n9 + 220 >> 2], A8 = a4[n9 + 124 >> 2], o5 = a4[n9 + 224 >> 2], r11 = a4[n9 + 128 >> 2], e6 = a4[n9 + 228 >> 2], a4[n9 + 228 >> 2] = l5 & (e6 ^ a4[n9 + 132 >> 2]) ^ e6, a4[n9 + 224 >> 2] = o5 ^ l5 & (r11 ^ o5), a4[n9 + 220 >> 2] = g5 ^ l5 & (A8 ^ g5), a4[n9 + 216 >> 2] = m5 ^ l5 & (i4 ^ m5), a4[n9 + 212 >> 2] = w5 ^ l5 & (u5 ^ w5), a4[n9 + 208 >> 2] = E5 ^ l5 & (h5 ^ E5), a4[n9 + 204 >> 2] = k5 ^ l5 & (f5 ^ k5), a4[n9 + 200 >> 2] = B5 ^ l5 & (p5 ^ B5), a4[n9 + 196 >> 2] = Q5 ^ l5 & (d5 ^ Q5), a4[n9 + 192 >> 2] = _5 ^ l5 & (C5 ^ _5), X2(D5, D5), v4(N6, N6, D5), et2(t7, N6), oe2(vt3, 32), A8 = 0;
                              }
                              return I4 = n9 + 368 | 0, 0 | A8;
                            }, function(t7, e6) {
                              var r11, n9, A8, i4, o5, h5, g5, u5, l5, f5, p5, d5, y5, C5, m5, B5, E5, w5, _5, Q5;
                              return e6 |= 0, I4 = r11 = I4 - 304 | 0, s4[0 | (t7 |= 0)] = c4[0 | e6], s4[t7 + 1 | 0] = c4[e6 + 1 | 0], s4[t7 + 2 | 0] = c4[e6 + 2 | 0], s4[t7 + 3 | 0] = c4[e6 + 3 | 0], s4[t7 + 4 | 0] = c4[e6 + 4 | 0], s4[t7 + 5 | 0] = c4[e6 + 5 | 0], s4[t7 + 6 | 0] = c4[e6 + 6 | 0], s4[t7 + 7 | 0] = c4[e6 + 7 | 0], s4[t7 + 8 | 0] = c4[e6 + 8 | 0], s4[t7 + 9 | 0] = c4[e6 + 9 | 0], s4[t7 + 10 | 0] = c4[e6 + 10 | 0], s4[t7 + 11 | 0] = c4[e6 + 11 | 0], s4[t7 + 12 | 0] = c4[e6 + 12 | 0], s4[t7 + 13 | 0] = c4[e6 + 13 | 0], s4[t7 + 14 | 0] = c4[e6 + 14 | 0], s4[t7 + 15 | 0] = c4[e6 + 15 | 0], s4[t7 + 16 | 0] = c4[e6 + 16 | 0], s4[t7 + 17 | 0] = c4[e6 + 17 | 0], s4[t7 + 18 | 0] = c4[e6 + 18 | 0], s4[t7 + 19 | 0] = c4[e6 + 19 | 0], s4[t7 + 20 | 0] = c4[e6 + 20 | 0], s4[t7 + 21 | 0] = c4[e6 + 21 | 0], s4[t7 + 22 | 0] = c4[e6 + 22 | 0], s4[t7 + 23 | 0] = c4[e6 + 23 | 0], s4[t7 + 24 | 0] = c4[e6 + 24 | 0], s4[t7 + 25 | 0] = c4[e6 + 25 | 0], s4[t7 + 26 | 0] = c4[e6 + 26 | 0], s4[t7 + 27 | 0] = c4[e6 + 27 | 0], s4[t7 + 28 | 0] = c4[e6 + 28 | 0], s4[t7 + 29 | 0] = c4[e6 + 29 | 0], s4[t7 + 30 | 0] = c4[e6 + 30 | 0], e6 = c4[e6 + 31 | 0], s4[0 | t7] = 248 & c4[0 | t7], s4[t7 + 31 | 0] = 63 & e6 | 64, H4(r11 + 48 | 0, t7), e6 = a4[r11 + 132 >> 2], n9 = a4[r11 + 92 >> 2], A8 = a4[r11 + 136 >> 2], i4 = a4[r11 + 96 >> 2], o5 = a4[r11 + 140 >> 2], h5 = a4[r11 + 100 >> 2], g5 = a4[r11 + 144 >> 2], u5 = a4[r11 + 104 >> 2], l5 = a4[r11 + 148 >> 2], f5 = a4[r11 + 108 >> 2], p5 = a4[r11 + 152 >> 2], d5 = a4[r11 + 112 >> 2], y5 = a4[r11 + 156 >> 2], C5 = a4[r11 + 116 >> 2], m5 = a4[r11 + 160 >> 2], B5 = a4[r11 + 120 >> 2], E5 = a4[r11 + 128 >> 2], w5 = a4[r11 + 88 >> 2], _5 = a4[r11 + 124 >> 2], Q5 = a4[r11 + 164 >> 2], a4[r11 + 292 >> 2] = _5 + Q5, a4[r11 + 288 >> 2] = m5 + B5, a4[r11 + 284 >> 2] = y5 + C5, a4[r11 + 280 >> 2] = p5 + d5, a4[r11 + 276 >> 2] = l5 + f5, a4[r11 + 272 >> 2] = g5 + u5, a4[r11 + 268 >> 2] = o5 + h5, a4[r11 + 264 >> 2] = A8 + i4, a4[r11 + 260 >> 2] = e6 + n9, a4[r11 + 256 >> 2] = E5 + w5, a4[r11 + 244 >> 2] = Q5 - _5, a4[r11 + 240 >> 2] = m5 - B5, a4[r11 + 236 >> 2] = y5 - C5, a4[r11 + 232 >> 2] = p5 - d5, a4[r11 + 228 >> 2] = l5 - f5, a4[r11 + 224 >> 2] = g5 - u5, a4[r11 + 220 >> 2] = o5 - h5, a4[r11 + 216 >> 2] = A8 - i4, a4[r11 + 212 >> 2] = e6 - n9, a4[r11 + 208 >> 2] = E5 - w5, X2(e6 = r11 + 208 | 0, e6), v4(r11, r11 + 256 | 0, e6), et2(t7, r11), I4 = r11 + 304 | 0, 0;
                            }, function(t7, e6, r11, n9, A8) {
                              t7 |= 0, n9 |= 0, A8 |= 0;
                              var i4, o5 = 0, h5 = 0, g5 = 0, u5 = 0;
                              if (I4 = i4 = I4 - 112 | 0, (e6 |= 0) | (r11 |= 0)) {
                                o5 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, a4[i4 + 24 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, a4[i4 + 28 >> 2] = o5, o5 = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[i4 + 16 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[i4 + 20 >> 2] = o5, o5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[i4 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[i4 + 4 >> 2] = o5, o5 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[i4 + 8 >> 2] = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, a4[i4 + 12 >> 2] = o5, A8 = c4[0 | n9] | c4[n9 + 1 | 0] << 8 | c4[n9 + 2 | 0] << 16 | c4[n9 + 3 | 0] << 24, n9 = c4[n9 + 4 | 0] | c4[n9 + 5 | 0] << 8 | c4[n9 + 6 | 0] << 16 | c4[n9 + 7 | 0] << 24, a4[i4 + 104 >> 2] = 0, a4[i4 + 108 >> 2] = 0, a4[i4 + 96 >> 2] = A8, a4[i4 + 100 >> 2] = n9;
                                t: {
                                  if (!r11 & e6 >>> 0 >= 64 | r11) {
                                    for (; M4(t7, i4 + 96 | 0, i4), n9 = c4[i4 + 104 | 0] + 1 | 0, s4[i4 + 104 | 0] = n9, n9 = c4[i4 + 105 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 105 | 0] = n9, n9 = c4[i4 + 106 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 106 | 0] = n9, n9 = c4[i4 + 107 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 107 | 0] = n9, n9 = c4[i4 + 108 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 108 | 0] = n9, n9 = c4[i4 + 109 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 109 | 0] = n9, n9 = c4[i4 + 110 | 0] + (n9 >>> 8 | 0) | 0, s4[i4 + 110 | 0] = n9, s4[i4 + 111 | 0] = c4[i4 + 111 | 0] + (n9 >>> 8 | 0), t7 = t7 - -64 | 0, r11 = r11 - 1 | 0, !(r11 = (e6 = e6 + -64 | 0) >>> 0 < 4294967232 ? r11 + 1 | 0 : r11) & e6 >>> 0 > 63 | r11; )
                                      ;
                                    if (!(e6 | r11))
                                      break t;
                                  }
                                  if (n9 = 0, M4(i4 + 32 | 0, i4 + 96 | 0, i4), r11 = 3 & e6, A8 = 0, e6 - 1 >>> 0 >= 3)
                                    for (o5 = -4 & e6, e6 = 0; h5 = g5 = i4 + 32 | 0, s4[t7 + A8 | 0] = c4[h5 + A8 | 0], s4[(u5 = 1 | A8) + t7 | 0] = c4[h5 + u5 | 0], s4[(h5 = 2 | A8) + t7 | 0] = c4[h5 + g5 | 0], s4[(h5 = 3 | A8) + t7 | 0] = c4[h5 + (i4 + 32 | 0) | 0], A8 = A8 + 4 | 0, (0 | o5) != (0 | (e6 = e6 + 4 | 0)); )
                                      ;
                                  if (r11)
                                    for (; s4[t7 + A8 | 0] = c4[(i4 + 32 | 0) + A8 | 0], A8 = A8 + 1 | 0, (0 | r11) != (0 | (n9 = n9 + 1 | 0)); )
                                      ;
                                }
                                oe2(i4 + 32 | 0, 64), oe2(i4, 32);
                              }
                              return I4 = i4 + 112 | 0, 0;
                            }, function(t7, e6, r11, n9, A8, i4, o5, h5) {
                              t7 |= 0, e6 |= 0, A8 |= 0, i4 |= 0, o5 |= 0, h5 |= 0;
                              var g5, u5 = 0;
                              if (I4 = g5 = I4 - 112 | 0, (r11 |= 0) | (n9 |= 0)) {
                                u5 = c4[h5 + 28 | 0] | c4[h5 + 29 | 0] << 8 | c4[h5 + 30 | 0] << 16 | c4[h5 + 31 | 0] << 24, a4[g5 + 24 >> 2] = c4[h5 + 24 | 0] | c4[h5 + 25 | 0] << 8 | c4[h5 + 26 | 0] << 16 | c4[h5 + 27 | 0] << 24, a4[g5 + 28 >> 2] = u5, u5 = c4[h5 + 20 | 0] | c4[h5 + 21 | 0] << 8 | c4[h5 + 22 | 0] << 16 | c4[h5 + 23 | 0] << 24, a4[g5 + 16 >> 2] = c4[h5 + 16 | 0] | c4[h5 + 17 | 0] << 8 | c4[h5 + 18 | 0] << 16 | c4[h5 + 19 | 0] << 24, a4[g5 + 20 >> 2] = u5, u5 = c4[h5 + 4 | 0] | c4[h5 + 5 | 0] << 8 | c4[h5 + 6 | 0] << 16 | c4[h5 + 7 | 0] << 24, a4[g5 >> 2] = c4[0 | h5] | c4[h5 + 1 | 0] << 8 | c4[h5 + 2 | 0] << 16 | c4[h5 + 3 | 0] << 24, a4[g5 + 4 >> 2] = u5, u5 = c4[h5 + 12 | 0] | c4[h5 + 13 | 0] << 8 | c4[h5 + 14 | 0] << 16 | c4[h5 + 15 | 0] << 24, a4[g5 + 8 >> 2] = c4[h5 + 8 | 0] | c4[h5 + 9 | 0] << 8 | c4[h5 + 10 | 0] << 16 | c4[h5 + 11 | 0] << 24, a4[g5 + 12 >> 2] = u5, h5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[g5 + 96 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[g5 + 100 >> 2] = h5, s4[g5 + 104 | 0] = i4, s4[g5 + 111 | 0] = o5 >>> 24, s4[g5 + 110 | 0] = o5 >>> 16, s4[g5 + 109 | 0] = o5 >>> 8, s4[g5 + 108 | 0] = o5, s4[g5 + 107 | 0] = (16777215 & o5) << 8 | i4 >>> 24, s4[g5 + 106 | 0] = (65535 & o5) << 16 | i4 >>> 16, s4[g5 + 105 | 0] = (255 & o5) << 24 | i4 >>> 8;
                                t: {
                                  if (!n9 & r11 >>> 0 >= 64 | n9) {
                                    for (; ; ) {
                                      for (h5 = 0, M4(g5 + 32 | 0, g5 + 96 | 0, g5); i4 = g5 + 32 | 0, s4[t7 + h5 | 0] = c4[i4 + h5 | 0] ^ c4[e6 + h5 | 0], s4[(A8 = 1 | h5) + t7 | 0] = c4[A8 + i4 | 0] ^ c4[e6 + A8 | 0], 64 != (0 | (h5 = h5 + 2 | 0)); )
                                        ;
                                      if (A8 = c4[g5 + 104 | 0] + 1 | 0, s4[g5 + 104 | 0] = A8, A8 = c4[g5 + 105 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 105 | 0] = A8, A8 = c4[g5 + 106 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 106 | 0] = A8, A8 = c4[g5 + 107 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 107 | 0] = A8, A8 = c4[g5 + 108 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 108 | 0] = A8, A8 = c4[g5 + 109 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 109 | 0] = A8, A8 = c4[g5 + 110 | 0] + (A8 >>> 8 | 0) | 0, s4[g5 + 110 | 0] = A8, s4[g5 + 111 | 0] = c4[g5 + 111 | 0] + (A8 >>> 8 | 0), e6 = e6 - -64 | 0, t7 = t7 - -64 | 0, n9 = n9 - 1 | 0, !(!(n9 = (r11 = r11 + -64 | 0) >>> 0 < 4294967232 ? n9 + 1 | 0 : n9) & r11 >>> 0 > 63 | n9))
                                        break;
                                    }
                                    if (!(r11 | n9))
                                      break t;
                                  }
                                  if (h5 = 0, M4(g5 + 32 | 0, g5 + 96 | 0, g5), n9 = 1 & r11, 1 != (0 | r11))
                                    for (i4 = -2 & r11, A8 = 0; o5 = g5 + 32 | 0, s4[t7 + h5 | 0] = c4[o5 + h5 | 0] ^ c4[e6 + h5 | 0], s4[(r11 = 1 | h5) + t7 | 0] = c4[r11 + o5 | 0] ^ c4[e6 + r11 | 0], h5 = h5 + 2 | 0, (0 | i4) != (0 | (A8 = A8 + 2 | 0)); )
                                      ;
                                  n9 && (s4[t7 + h5 | 0] = c4[(g5 + 32 | 0) + h5 | 0] ^ c4[e6 + h5 | 0]);
                                }
                                oe2(g5 + 32 | 0, 64), oe2(g5, 32);
                              }
                              return I4 = g5 + 112 | 0, 0;
                            }, function(t7, e6, r11, n9, A8) {
                              var i4;
                              return t7 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = I4 + -64 | 0, (e6 |= 0) | (r11 |= 0) && (a4[i4 + 8 >> 2] = 2036477234, a4[i4 + 12 >> 2] = 1797285236, a4[i4 >> 2] = 1634760805, a4[i4 + 4 >> 2] = 857760878, a4[i4 + 16 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[i4 + 20 >> 2] = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[i4 + 24 >> 2] = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, a4[i4 + 28 >> 2] = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[i4 + 32 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[i4 + 36 >> 2] = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[i4 + 40 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, A8 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, a4[i4 + 48 >> 2] = 0, a4[i4 + 52 >> 2] = 0, a4[i4 + 44 >> 2] = A8, a4[i4 + 56 >> 2] = c4[0 | n9] | c4[n9 + 1 | 0] << 8 | c4[n9 + 2 | 0] << 16 | c4[n9 + 3 | 0] << 24, a4[i4 + 60 >> 2] = c4[n9 + 4 | 0] | c4[n9 + 5 | 0] << 8 | c4[n9 + 6 | 0] << 16 | c4[n9 + 7 | 0] << 24, k4(i4, t7 = xt2(t7, 0, e6), t7, e6, r11), oe2(i4, 64)), I4 = i4 - -64 | 0, 0;
                            }, function(t7, e6, r11, n9, A8) {
                              var i4;
                              return t7 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = I4 + -64 | 0, (e6 |= 0) | (r11 |= 0) && (a4[i4 + 8 >> 2] = 2036477234, a4[i4 + 12 >> 2] = 1797285236, a4[i4 >> 2] = 1634760805, a4[i4 + 4 >> 2] = 857760878, a4[i4 + 16 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[i4 + 20 >> 2] = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[i4 + 24 >> 2] = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, a4[i4 + 28 >> 2] = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, a4[i4 + 32 >> 2] = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, a4[i4 + 36 >> 2] = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, a4[i4 + 40 >> 2] = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, A8 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, a4[i4 + 48 >> 2] = 0, a4[i4 + 44 >> 2] = A8, a4[i4 + 52 >> 2] = c4[0 | n9] | c4[n9 + 1 | 0] << 8 | c4[n9 + 2 | 0] << 16 | c4[n9 + 3 | 0] << 24, a4[i4 + 56 >> 2] = c4[n9 + 4 | 0] | c4[n9 + 5 | 0] << 8 | c4[n9 + 6 | 0] << 16 | c4[n9 + 7 | 0] << 24, a4[i4 + 60 >> 2] = c4[n9 + 8 | 0] | c4[n9 + 9 | 0] << 8 | c4[n9 + 10 | 0] << 16 | c4[n9 + 11 | 0] << 24, k4(i4, t7 = xt2(t7, 0, e6), t7, e6, r11), oe2(i4, 64)), I4 = i4 - -64 | 0, 0;
                            }, function(t7, e6, r11, n9, A8, i4, o5, s5) {
                              var h5;
                              return t7 |= 0, e6 |= 0, A8 |= 0, i4 |= 0, o5 |= 0, s5 |= 0, I4 = h5 = I4 + -64 | 0, (r11 |= 0) | (n9 |= 0) && (a4[h5 + 8 >> 2] = 2036477234, a4[h5 + 12 >> 2] = 1797285236, a4[h5 >> 2] = 1634760805, a4[h5 + 4 >> 2] = 857760878, a4[h5 + 16 >> 2] = c4[0 | s5] | c4[s5 + 1 | 0] << 8 | c4[s5 + 2 | 0] << 16 | c4[s5 + 3 | 0] << 24, a4[h5 + 20 >> 2] = c4[s5 + 4 | 0] | c4[s5 + 5 | 0] << 8 | c4[s5 + 6 | 0] << 16 | c4[s5 + 7 | 0] << 24, a4[h5 + 24 >> 2] = c4[s5 + 8 | 0] | c4[s5 + 9 | 0] << 8 | c4[s5 + 10 | 0] << 16 | c4[s5 + 11 | 0] << 24, a4[h5 + 28 >> 2] = c4[s5 + 12 | 0] | c4[s5 + 13 | 0] << 8 | c4[s5 + 14 | 0] << 16 | c4[s5 + 15 | 0] << 24, a4[h5 + 32 >> 2] = c4[s5 + 16 | 0] | c4[s5 + 17 | 0] << 8 | c4[s5 + 18 | 0] << 16 | c4[s5 + 19 | 0] << 24, a4[h5 + 36 >> 2] = c4[s5 + 20 | 0] | c4[s5 + 21 | 0] << 8 | c4[s5 + 22 | 0] << 16 | c4[s5 + 23 | 0] << 24, a4[h5 + 40 >> 2] = c4[s5 + 24 | 0] | c4[s5 + 25 | 0] << 8 | c4[s5 + 26 | 0] << 16 | c4[s5 + 27 | 0] << 24, a4[h5 + 44 >> 2] = c4[s5 + 28 | 0] | c4[s5 + 29 | 0] << 8 | c4[s5 + 30 | 0] << 16 | c4[s5 + 31 | 0] << 24, a4[h5 + 48 >> 2] = i4, a4[h5 + 52 >> 2] = o5, a4[h5 + 56 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[h5 + 60 >> 2] = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, k4(h5, e6, t7, r11, n9), oe2(h5, 64)), I4 = h5 - -64 | 0, 0;
                            }, function(t7, e6, r11, n9, A8, i4, o5) {
                              var s5;
                              return t7 |= 0, e6 |= 0, A8 |= 0, i4 |= 0, o5 |= 0, I4 = s5 = I4 + -64 | 0, (r11 |= 0) | (n9 |= 0) && (a4[s5 + 8 >> 2] = 2036477234, a4[s5 + 12 >> 2] = 1797285236, a4[s5 >> 2] = 1634760805, a4[s5 + 4 >> 2] = 857760878, a4[s5 + 16 >> 2] = c4[0 | o5] | c4[o5 + 1 | 0] << 8 | c4[o5 + 2 | 0] << 16 | c4[o5 + 3 | 0] << 24, a4[s5 + 20 >> 2] = c4[o5 + 4 | 0] | c4[o5 + 5 | 0] << 8 | c4[o5 + 6 | 0] << 16 | c4[o5 + 7 | 0] << 24, a4[s5 + 24 >> 2] = c4[o5 + 8 | 0] | c4[o5 + 9 | 0] << 8 | c4[o5 + 10 | 0] << 16 | c4[o5 + 11 | 0] << 24, a4[s5 + 28 >> 2] = c4[o5 + 12 | 0] | c4[o5 + 13 | 0] << 8 | c4[o5 + 14 | 0] << 16 | c4[o5 + 15 | 0] << 24, a4[s5 + 32 >> 2] = c4[o5 + 16 | 0] | c4[o5 + 17 | 0] << 8 | c4[o5 + 18 | 0] << 16 | c4[o5 + 19 | 0] << 24, a4[s5 + 36 >> 2] = c4[o5 + 20 | 0] | c4[o5 + 21 | 0] << 8 | c4[o5 + 22 | 0] << 16 | c4[o5 + 23 | 0] << 24, a4[s5 + 40 >> 2] = c4[o5 + 24 | 0] | c4[o5 + 25 | 0] << 8 | c4[o5 + 26 | 0] << 16 | c4[o5 + 27 | 0] << 24, o5 = c4[o5 + 28 | 0] | c4[o5 + 29 | 0] << 8 | c4[o5 + 30 | 0] << 16 | c4[o5 + 31 | 0] << 24, a4[s5 + 48 >> 2] = i4, a4[s5 + 44 >> 2] = o5, a4[s5 + 52 >> 2] = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, a4[s5 + 56 >> 2] = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[s5 + 60 >> 2] = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, k4(s5, e6, t7, r11, n9), oe2(s5, 64)), I4 = s5 - -64 | 0, 0;
                            }], de2.grow = function(t7) {
                              var e6 = this.length;
                              return this.length = this.length + t7, e6;
                            }, de2.set = function(t7, e6) {
                              this[t7] = e6;
                            }, de2.get = function(t7) {
                              return this[t7];
                            }, de2);
                            function ye2() {
                              return o4.byteLength / 65536 | 0;
                            }
                            return { f: function() {
                            }, g: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5, g5) {
                              return 0 | yt2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, (t7 = 0) | (A8 |= 0), i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, h5 |= 0, g5 |= 0);
                            }, h: function(t7, e6, r11, n9, A8, o5, s5, c5, h5, g5, u5) {
                              return t7 |= 0, e6 |= 0, n9 |= 0, s5 |= 0, h5 |= 0, s5 |= h5 = 0, !(A8 |= 0) & (n9 |= h5) >>> 0 < 4294967280 ? (yt2(t7, t7 + n9 | 0, 0, r11 |= 0, n9, A8, o5 |= 0, s5, c5 |= 0, g5 |= 0, u5 |= 0), e6 && (A8 = (t7 = n9 + 16 | 0) >>> 0 < 16 ? A8 + 1 | 0 : A8, a4[e6 >> 2] = t7, a4[e6 + 4 >> 2] = A8)) : (Kt2(), i3()), 0;
                            }, i: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5, g5) {
                              return 0 | dt2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, (t7 = 0) | (A8 |= 0), i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, h5 |= 0, g5 |= 0);
                            }, j: function(t7, e6, r11, n9, A8, o5, s5, c5, h5, g5, u5) {
                              return t7 |= 0, e6 |= 0, n9 |= 0, s5 |= 0, h5 |= 0, s5 |= h5 = 0, !(A8 |= 0) & (n9 |= h5) >>> 0 < 4294967280 ? (dt2(t7, t7 + n9 | 0, 0, r11 |= 0, n9, A8, o5 |= 0, s5, c5 |= 0, g5 |= 0, u5 |= 0), e6 && (A8 = (t7 = n9 + 16 | 0) >>> 0 < 16 ? A8 + 1 | 0 : A8, a4[e6 >> 2] = t7, a4[e6 + 4 >> 2] = A8)) : (Kt2(), i3()), 0;
                            }, k: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5) {
                              return 0 | It2(t7 |= 0, r11 |= 0, (t7 = 0) | (n9 |= 0), A8 |= 0, i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, c5 |= 0, h5 |= 0);
                            }, l: function(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5, g5) {
                              return e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, s5 |= 0, s5 |= 0, r11 = -1, !(i4 |= 0) & (A8 |= 0) >>> 0 >= 16 | i4 && (r11 = It2(t7 |= 0, n9, A8 - 16 | 0, i4 - (A8 >>> 0 < 16) | 0, (n9 + A8 | 0) - 16 | 0, o5 |= 0, s5, c5 |= 0, h5 |= 0, g5 |= 0)), e6 && (a4[e6 >> 2] = r11 ? 0 : A8 - 16 | 0, a4[e6 + 4 >> 2] = r11 ? 0 : i4 - (A8 >>> 0 < 16) | 0), 0 | r11;
                            }, m: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5) {
                              return 0 | pt2(t7 |= 0, r11 |= 0, (t7 = 0) | (n9 |= 0), A8 |= 0, i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, c5 |= 0, h5 |= 0);
                            }, n: function(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5, g5) {
                              return e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, s5 |= 0, s5 |= 0, r11 = -1, !(i4 |= 0) & (A8 |= 0) >>> 0 >= 16 | i4 && (r11 = pt2(t7 |= 0, n9, A8 - 16 | 0, i4 - (A8 >>> 0 < 16) | 0, (n9 + A8 | 0) - 16 | 0, o5 |= 0, s5, c5 |= 0, h5 |= 0, g5 |= 0)), e6 && (a4[e6 >> 2] = r11 ? 0 : A8 - 16 | 0, a4[e6 + 4 >> 2] = r11 ? 0 : i4 - (A8 >>> 0 < 16) | 0), 0 | r11;
                            }, o: ce2, p: function() {
                              return 12;
                            }, q: pe2, r: ae2, s: ge2, t: ie2, u: ce2, v: fe2, w: pe2, x: ae2, y: ge2, z: ie2, A: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5, g5) {
                              return 0 | at2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, (t7 = 0) | (A8 |= 0), i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, h5 |= 0, g5 |= 0);
                            }, B: function(t7, e6, r11, n9, A8, o5, s5, c5, h5, g5, u5) {
                              return t7 |= 0, e6 |= 0, n9 |= 0, s5 |= 0, h5 |= 0, s5 |= h5 = 0, !(A8 |= 0) & (n9 |= h5) >>> 0 < 4294967280 ? (at2(t7, t7 + n9 | 0, 0, r11 |= 0, n9, A8, o5 |= 0, s5, c5 |= 0, g5 |= 0, u5 |= 0), e6 && (A8 = (t7 = n9 + 16 | 0) >>> 0 < 16 ? A8 + 1 | 0 : A8, a4[e6 >> 2] = t7, a4[e6 + 4 >> 2] = A8)) : (Kt2(), i3()), 0;
                            }, C: function(t7, e6, r11, n9, A8, i4, o5, s5, a5, c5, h5) {
                              return 0 | st2(t7 |= 0, r11 |= 0, (t7 = 0) | (n9 |= 0), A8 |= 0, i4 |= 0, o5 |= 0, t7 | (s5 |= 0), a5 |= 0, c5 |= 0, h5 |= 0);
                            }, D: function(t7, e6, r11, n9, A8, i4, o5, s5, c5, h5, g5) {
                              return e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, s5 |= 0, s5 |= 0, r11 = -1, !(i4 |= 0) & (A8 |= 0) >>> 0 >= 16 | i4 && (r11 = st2(t7 |= 0, n9, A8 - 16 | 0, i4 - (A8 >>> 0 < 16) | 0, (n9 + A8 | 0) - 16 | 0, o5 |= 0, s5, c5 |= 0, h5 |= 0, g5 |= 0)), e6 && (a4[e6 >> 2] = r11 ? 0 : A8 - 16 | 0, a4[e6 + 4 >> 2] = r11 ? 0 : i4 - (A8 >>> 0 < 16) | 0), 0 | r11;
                            }, E: ce2, F: he2, G: pe2, H: ae2, I: ge2, J: ie2, K: ce2, L: ce2, M: function(t7, e6, r11, n9, A8) {
                              var i4;
                              return t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, I4 = i4 = I4 - 480 | 0, rt2(i4, A8 |= 0, 32), te2(i4, e6, r11, n9), Pt2(i4, i4 + 416 | 0), e6 = a4[i4 + 444 >> 2], r11 = a4[i4 + 440 >> 2], s4[t7 + 24 | 0] = r11, s4[t7 + 25 | 0] = r11 >>> 8, s4[t7 + 26 | 0] = r11 >>> 16, s4[t7 + 27 | 0] = r11 >>> 24, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, e6 = a4[i4 + 436 >> 2], r11 = a4[i4 + 432 >> 2], s4[t7 + 16 | 0] = r11, s4[t7 + 17 | 0] = r11 >>> 8, s4[t7 + 18 | 0] = r11 >>> 16, s4[t7 + 19 | 0] = r11 >>> 24, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = a4[i4 + 428 >> 2], r11 = a4[i4 + 424 >> 2], s4[t7 + 8 | 0] = r11, s4[t7 + 9 | 0] = r11 >>> 8, s4[t7 + 10 | 0] = r11 >>> 16, s4[t7 + 11 | 0] = r11 >>> 24, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = a4[i4 + 420 >> 2], r11 = a4[i4 + 416 >> 2], s4[0 | t7] = r11, s4[t7 + 1 | 0] = r11 >>> 8, s4[t7 + 2 | 0] = r11 >>> 16, s4[t7 + 3 | 0] = r11 >>> 24, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, I4 = i4 + 480 | 0, 0;
                            }, N: function(t7, e6, r11, n9, A8) {
                              var i4, o5;
                              return t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, I4 = i4 = I4 - 512 | 0, rt2(o5 = i4 + 32 | 0, A8 |= 0, 32), te2(o5, e6, r11, n9), Pt2(o5, i4 + 448 | 0), e6 = a4[i4 + 476 >> 2], a4[i4 + 24 >> 2] = a4[i4 + 472 >> 2], a4[i4 + 28 >> 2] = e6, e6 = a4[i4 + 468 >> 2], a4[i4 + 16 >> 2] = a4[i4 + 464 >> 2], a4[i4 + 20 >> 2] = e6, e6 = a4[i4 + 460 >> 2], a4[i4 + 8 >> 2] = a4[i4 + 456 >> 2], a4[i4 + 12 >> 2] = e6, e6 = a4[i4 + 452 >> 2], a4[i4 >> 2] = a4[i4 + 448 >> 2], a4[i4 + 4 >> 2] = e6, e6 = Ct2(t7, i4), r11 = ut2(i4, t7, 32), I4 = i4 + 512 | 0, ((0 | t7) == (0 | i4) ? -1 : e6) | r11;
                            }, O: ie2, P: ce2, Q: ce2, R: ce2, S: ce2, T: he2, U: ae2, V: ge2, W: function(t7, e6, r11) {
                              t7 |= 0, e6 |= 0;
                              var n9, A8 = 0;
                              return I4 = n9 = I4 + -64 | 0, ct2(n9, r11 |= 0, 32, 0), r11 = a4[n9 + 28 >> 2], A8 = a4[n9 + 24 >> 2], s4[e6 + 24 | 0] = A8, s4[e6 + 25 | 0] = A8 >>> 8, s4[e6 + 26 | 0] = A8 >>> 16, s4[e6 + 27 | 0] = A8 >>> 24, s4[e6 + 28 | 0] = r11, s4[e6 + 29 | 0] = r11 >>> 8, s4[e6 + 30 | 0] = r11 >>> 16, s4[e6 + 31 | 0] = r11 >>> 24, r11 = a4[n9 + 20 >> 2], A8 = a4[n9 + 16 >> 2], s4[e6 + 16 | 0] = A8, s4[e6 + 17 | 0] = A8 >>> 8, s4[e6 + 18 | 0] = A8 >>> 16, s4[e6 + 19 | 0] = A8 >>> 24, s4[e6 + 20 | 0] = r11, s4[e6 + 21 | 0] = r11 >>> 8, s4[e6 + 22 | 0] = r11 >>> 16, s4[e6 + 23 | 0] = r11 >>> 24, r11 = a4[n9 + 12 >> 2], A8 = a4[n9 + 8 >> 2], s4[e6 + 8 | 0] = A8, s4[e6 + 9 | 0] = A8 >>> 8, s4[e6 + 10 | 0] = A8 >>> 16, s4[e6 + 11 | 0] = A8 >>> 24, s4[e6 + 12 | 0] = r11, s4[e6 + 13 | 0] = r11 >>> 8, s4[e6 + 14 | 0] = r11 >>> 16, s4[e6 + 15 | 0] = r11 >>> 24, r11 = a4[n9 + 4 >> 2], A8 = a4[n9 >> 2], s4[0 | e6] = A8, s4[e6 + 1 | 0] = A8 >>> 8, s4[e6 + 2 | 0] = A8 >>> 16, s4[e6 + 3 | 0] = A8 >>> 24, s4[e6 + 4 | 0] = r11, s4[e6 + 5 | 0] = r11 >>> 8, s4[e6 + 6 | 0] = r11 >>> 16, s4[e6 + 7 | 0] = r11 >>> 24, oe2(n9, 64), t7 = ee2(t7, e6), I4 = n9 - -64 | 0, 0 | t7;
                            }, X: jt2, Y: Nt2, Z: Tt2, _: function(t7, e6, r11, n9, A8, i4, o5, s5) {
                              t7 |= 0, e6 |= 0, r11 |= 0, i4 |= 0;
                              var a5, c5 = 0;
                              return c5 = n9 |= 0, n9 = A8 |= 0, a5 = 0 | c5, I4 = c5 = I4 - 32 | 0, A8 = -1, Nt2(c5, o5 |= 0, s5 |= 0) || (A8 = ot2(t7, e6, r11, a5, n9, i4, c5), oe2(c5, 32)), I4 = c5 + 32 | 0, 0 | A8;
                            }, $: function(t7, e6, r11, n9, A8, o5) {
                              return t7 |= 0, e6 |= 0, A8 |= 0, o5 |= 0, !(n9 |= 0) & (r11 |= 0) >>> 0 >= 4294967280 | n9 && (Kt2(), i3()), 0 | ot2(t7 + 16 | 0, t7, e6, r11, n9, A8, o5);
                            }, aa: function(t7, e6, r11, n9, A8, i4, o5) {
                              return 0 | Dt2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, o5 |= 0);
                            }, ba: Rt2, ca: function(t7, e6, r11, n9, A8, i4, o5, s5) {
                              t7 |= 0, e6 |= 0, r11 |= 0, i4 |= 0;
                              var a5, c5 = 0;
                              return c5 = n9 |= 0, n9 = A8 |= 0, a5 = 0 | c5, I4 = c5 = I4 - 32 | 0, A8 = -1, Nt2(c5, o5 |= 0, s5 |= 0) || (A8 = it2(t7, e6, r11, a5, n9, i4, c5), oe2(c5, 32)), I4 = c5 + 32 | 0, 0 | A8;
                            }, da: St2, ea: function(t7, e6, r11, n9, A8, i4, o5) {
                              return 0 | _t2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, o5 |= 0);
                            }, fa: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, A8 |= 0;
                              var i4, o5, c5, h5, g5 = 0, u5 = 0;
                              return g5 = r11 |= 0, r11 = n9 |= 0, h5 = 0 | g5, g5 = n9 = I4, I4 = i4 = n9 - 512 & -64, n9 = -1, jt2(o5 = i4 - -64 | 0, c5 = i4 + 32 | 0) || (F4(n9 = i4 + 128 | 0, 0, 0, 24), W2(n9, o5, 32, 0), W2(n9, A8, 32, 0), Ft2(n9, u5 = i4 + 96 | 0, 24), n9 = Dt2(t7 + 32 | 0, e6, h5, r11, u5, A8, c5), e6 = a4[i4 + 92 >> 2], r11 = a4[i4 + 88 >> 2], s4[t7 + 24 | 0] = r11, s4[t7 + 25 | 0] = r11 >>> 8, s4[t7 + 26 | 0] = r11 >>> 16, s4[t7 + 27 | 0] = r11 >>> 24, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, e6 = a4[i4 + 84 >> 2], r11 = a4[i4 + 80 >> 2], s4[t7 + 16 | 0] = r11, s4[t7 + 17 | 0] = r11 >>> 8, s4[t7 + 18 | 0] = r11 >>> 16, s4[t7 + 19 | 0] = r11 >>> 24, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = a4[i4 + 76 >> 2], r11 = a4[i4 + 72 >> 2], s4[t7 + 8 | 0] = r11, s4[t7 + 9 | 0] = r11 >>> 8, s4[t7 + 10 | 0] = r11 >>> 16, s4[t7 + 11 | 0] = r11 >>> 24, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = a4[i4 + 68 >> 2], r11 = a4[i4 + 64 >> 2], s4[0 | t7] = r11, s4[t7 + 1 | 0] = r11 >>> 8, s4[t7 + 2 | 0] = r11 >>> 16, s4[t7 + 3 | 0] = r11 >>> 24, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, oe2(c5, 32), oe2(o5, 32), oe2(u5, 24)), I4 = g5, 0 | n9;
                            }, ga: function(t7, e6, r11, n9, A8, i4) {
                              t7 |= 0, e6 |= 0, A8 |= 0, i4 |= 0;
                              var o5, s5, a5 = 0;
                              return s5 = a5 = I4, I4 = o5 = a5 - 448 & -64, a5 = -1, !(n9 |= 0) & (r11 |= 0) >>> 0 >= 48 | n9 && (F4(a5 = o5 - -64 | 0, 0, 0, 24), W2(a5, e6, 32, 0), W2(a5, A8, 32, 0), Ft2(a5, A8 = o5 + 32 | 0, 24), a5 = _t2(t7, e6 + 32 | 0, r11 - 32 | 0, n9 - (r11 >>> 0 < 32) | 0, A8, e6, i4)), I4 = s5, 0 | a5;
                            }, ha: function() {
                              return 48;
                            }, ia: ae2, ja: ue2, ka: ce2, la: ae2, ma: ue2, na: ce2, oa: function() {
                              return 384;
                            }, pa: function(t7, e6, r11, n9, A8, i4, o5) {
                              return 0 | j4(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, o5 |= 0);
                            }, qa: F4, ra: function(t7, e6, r11, n9) {
                              return 0 | W2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0);
                            }, sa: Ft2, ta: ie2, ua: ue2, va: function(t7, e6, r11, n9) {
                              return 0 | ct2(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0);
                            }, wa: ae2, xa: ue2, ya: fe2, za: ce2, Aa: function(t7, e6, r11, n9, A8, o5) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, o5 |= 0;
                              var s5, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0;
                              return I4 = s5 = I4 - 32 | 0, h5 = c4[0 | (A8 |= 0)] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, A8 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, a4[s5 + 24 >> 2] = 0, a4[s5 + 28 >> 2] = 0, a4[s5 + 16 >> 2] = h5, a4[s5 + 20 >> 2] = A8, a4[s5 + 8 >> 2] = 0, a4[s5 + 12 >> 2] = 0, a4[(A8 = s5) >> 2] = r11, a4[A8 + 4 >> 2] = n9, e6 - 65 >>> 0 <= 4294967246 ? (a4[9005] = 28, t7 = -1) : e6 - 65 >>> 0 < 4294967232 ? t7 = -1 : (I4 = A8 = (u5 = I4) - 512 & -64, !o5 | !t7 | ((g5 = 255 & e6) - 65 & 255) >>> 0 <= 191 ? (Kt2(), i3()) : (n9 = s5 + 16 | 0, s5 ? (l5 = 725511199 ^ (c4[s5 + 8 | 0] | c4[s5 + 9 | 0] << 8 | c4[s5 + 10 | 0] << 16 | c4[s5 + 11 | 0] << 24), f5 = -1694144372 ^ (c4[s5 + 12 | 0] | c4[s5 + 13 | 0] << 8 | c4[s5 + 14 | 0] << 16 | c4[s5 + 15 | 0] << 24), r11 = -1377402159 ^ (c4[0 | s5] | c4[s5 + 1 | 0] << 8 | c4[s5 + 2 | 0] << 16 | c4[s5 + 3 | 0] << 24), e6 = 1359893119 ^ (c4[s5 + 4 | 0] | c4[s5 + 5 | 0] << 8 | c4[s5 + 6 | 0] << 16 | c4[s5 + 7 | 0] << 24)) : (l5 = 725511199, f5 = -1694144372, r11 = -1377402159, e6 = 1359893119), n9 ? (p5 = 327033209 ^ (c4[n9 + 8 | 0] | c4[n9 + 9 | 0] << 8 | c4[n9 + 10 | 0] << 16 | c4[n9 + 11 | 0] << 24), d5 = 1541459225 ^ (c4[n9 + 12 | 0] | c4[n9 + 13 | 0] << 8 | c4[n9 + 14 | 0] << 16 | c4[n9 + 15 | 0] << 24), h5 = -79577749 ^ (c4[0 | n9] | c4[n9 + 1 | 0] << 8 | c4[n9 + 2 | 0] << 16 | c4[n9 + 3 | 0] << 24), n9 = 528734635 ^ (c4[n9 + 4 | 0] | c4[n9 + 5 | 0] << 8 | c4[n9 + 6 | 0] << 16 | c4[n9 + 7 | 0] << 24)) : (p5 = 327033209, d5 = 1541459225, h5 = -79577749, n9 = 528734635), xt2(A8 - -64 | 0, 0, 293), a4[A8 + 56 >> 2] = p5, a4[A8 + 60 >> 2] = d5, a4[A8 + 48 >> 2] = h5, a4[A8 + 52 >> 2] = n9, a4[A8 + 40 >> 2] = l5, a4[A8 + 44 >> 2] = f5, a4[A8 + 32 >> 2] = r11, a4[A8 + 36 >> 2] = e6, a4[A8 + 24 >> 2] = 1595750129, a4[A8 + 28 >> 2] = -1521486534, a4[A8 + 16 >> 2] = -23791573, a4[A8 + 20 >> 2] = 1013904242, a4[A8 + 8 >> 2] = -2067093701, a4[A8 + 12 >> 2] = -1150833019, a4[A8 >> 2] = -222443256 ^ (8192 | g5), a4[A8 + 4 >> 2] = 1779033703, xt2(32 + (e6 = A8 + 384 | 0) | 0, 0, 96), Mt2(e6, o5, 32), Mt2(A8 + 96 | 0, e6, 128), a4[A8 + 352 >> 2] = 128, oe2(e6, 128), S4(A8, t7, g5), I4 = u5), t7 = 0), I4 = s5 + 32 | 0, 0 | t7;
                            }, Ba: ie2, Ca: function(t7, e6, r11) {
                              return 0 | J4(t7 |= 0, e6 |= 0, r11 |= 0);
                            }, Da: function(t7, e6, r11) {
                              return 0 | re2(t7 |= 0, e6 |= 0, r11 |= 0);
                            }, Ea: function(t7, e6) {
                              return Ut2(t7 |= 0, e6 |= 0), oe2(t7, 4), 0;
                            }, Fa: function(t7, e6, r11, n9, A8) {
                              var i4;
                              return t7 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = I4 - 208 | 0, J4(i4, e6 |= 0, r11 |= 0), re2(i4, n9, A8), Ut2(i4, t7), oe2(i4, 4), I4 = i4 + 208 | 0, 0;
                            }, Ga: ie2, Ha: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0;
                              var i4, o5 = 0, h5 = 0, g5 = 0;
                              if (I4 = i4 = I4 - 256 | 0, s4[i4 + 15 | 0] = 1, e6 >>> 0 <= 8160) {
                                if (e6 >>> 0 >= 32)
                                  for (o5 = 32; g5 = o5, J4(o5 = i4 + 48 | 0, A8, 32), h5 && re2(o5, (t7 + h5 | 0) - 32 | 0, 32), re2(o5 = i4 + 48 | 0, r11, n9), re2(o5, i4 + 15 | 0, 1), Ut2(o5, t7 + h5 | 0), s4[i4 + 15 | 0] = c4[i4 + 15 | 0] + 1, (o5 = (h5 = g5) + 32 | 0) >>> 0 <= e6 >>> 0; )
                                    ;
                                (h5 = 31 & e6) && (J4(e6 = i4 + 48 | 0, A8, 32), g5 && re2(e6, (t7 + g5 | 0) - 32 | 0, 32), re2(e6 = i4 + 48 | 0, r11, n9), re2(e6, i4 + 15 | 0, 1), Ut2(r11 = e6, e6 = i4 + 16 | 0), Mt2(t7 + g5 | 0, e6, h5), oe2(e6, 32)), oe2(i4 + 48 | 0, 208), t7 = 0;
                              } else
                                a4[9005] = 28, t7 = -1;
                              return I4 = i4 + 256 | 0, 0 | t7;
                            }, Ia: ce2, Ja: pe2, Ka: function() {
                              return 8160;
                            }, La: se2, Ma: function(t7, e6, r11) {
                              return 0 | rt2(t7 |= 0, e6 |= 0, r11 |= 0);
                            }, Na: function(t7, e6, r11) {
                              return 0 | te2(t7 |= 0, e6 |= 0, r11 |= 0, 0);
                            }, Oa: function(t7, e6) {
                              return Pt2(t7 |= 0, e6 |= 0), oe2(t7, 4), 0;
                            }, Pa: function(t7, e6, r11, n9, A8) {
                              var i4;
                              return t7 |= 0, n9 |= 0, A8 |= 0, I4 = i4 = I4 - 416 | 0, rt2(i4, e6 |= 0, r11 |= 0), te2(i4, n9, A8, 0), Pt2(i4, t7), oe2(i4, 4), I4 = i4 + 416 | 0, 0;
                            }, Qa: function(t7) {
                              vt2(t7 |= 0, 64);
                            }, Ra: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0;
                              var i4, o5 = 0, h5 = 0, g5 = 0;
                              if (I4 = i4 = I4 - 496 | 0, s4[i4 + 15 | 0] = 1, e6 >>> 0 <= 16320) {
                                if (e6 >>> 0 >= 64)
                                  for (o5 = 64; g5 = o5, rt2(o5 = i4 + 80 | 0, A8, 64), h5 && te2(o5, (t7 + h5 | 0) - 64 | 0, 64, 0), te2(o5 = i4 + 80 | 0, r11, n9, 0), te2(o5, i4 + 15 | 0, 1, 0), Pt2(o5, t7 + h5 | 0), s4[i4 + 15 | 0] = c4[i4 + 15 | 0] + 1, (o5 = (h5 = g5) - -64 | 0) >>> 0 <= e6 >>> 0; )
                                    ;
                                (h5 = 63 & e6) && (rt2(e6 = i4 + 80 | 0, A8, 64), g5 && te2(e6, (t7 + g5 | 0) - 64 | 0, 64, 0), te2(e6 = i4 + 80 | 0, r11, n9, 0), te2(e6, i4 + 15 | 0, 1, 0), Pt2(r11 = e6, e6 = i4 + 16 | 0), Mt2(t7 + g5 | 0, e6, h5), oe2(e6, 64)), oe2(i4 + 80 | 0, 416), t7 = 0;
                              } else
                                a4[9005] = 28, t7 = -1;
                              return I4 = i4 + 496 | 0, 0 | t7;
                            }, Sa: ue2, Ta: pe2, Ua: function() {
                              return 16320;
                            }, Va: function(t7, e6, r11) {
                              return t7 |= 0, j4(e6 |= 0, 32, r11 |= 0, 32, 0, 0, 0), 0 | Vt2(t7, e6);
                            }, Wa: function(t7, e6) {
                              return t7 |= 0, vt2(e6 |= 0, 32), 0 | Vt2(t7, e6);
                            }, Xa: function(t7, e6, r11, n9, A8) {
                              e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0;
                              var o5, a5, h5 = 0, g5 = 0, u5 = 0;
                              if (a5 = h5 = I4, I4 = h5 = h5 - 512 & -64, o5 = (t7 |= 0) || e6) {
                                if (u5 = -1, !Yt2(g5 = h5 + 96 | 0, n9, A8)) {
                                  for (n9 = e6 || t7, t7 = 0, F4(e6 = h5 + 128 | 0, 0, 0, 64), W2(e6, g5, 32, 0), oe2(g5, 32), W2(e6, r11, 32, 0), W2(e6, A8, 32, 0), Ft2(e6, h5 + 32 | 0, 64), oe2(e6, 384); r11 = (e6 = h5 + 32 | 0) + t7 | 0, s4[t7 + o5 | 0] = c4[0 | r11], s4[t7 + n9 | 0] = c4[r11 + 32 | 0], s4[(A8 = 1 | t7) + o5 | 0] = c4[e6 + A8 | 0], s4[n9 + A8 | 0] = c4[r11 + 33 | 0], 32 != (0 | (t7 = t7 + 2 | 0)); )
                                    ;
                                  oe2(e6, 64), u5 = 0;
                                }
                                return I4 = a5, 0 | u5;
                              }
                              Kt2(), i3();
                            }, Ya: function(t7, e6, r11, n9, A8) {
                              e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0;
                              var o5, a5, h5 = 0, g5 = 0, u5 = 0;
                              if (a5 = h5 = I4, I4 = h5 = h5 - 512 & -64, o5 = (t7 |= 0) || e6) {
                                if (u5 = -1, !Yt2(g5 = h5 + 96 | 0, n9, A8)) {
                                  for (n9 = e6 || t7, t7 = 0, F4(e6 = h5 + 128 | 0, 0, 0, 64), W2(e6, g5, 32, 0), oe2(g5, 32), W2(e6, A8, 32, 0), W2(e6, r11, 32, 0), Ft2(e6, h5 + 32 | 0, 64), oe2(e6, 384); r11 = (e6 = h5 + 32 | 0) + t7 | 0, s4[t7 + n9 | 0] = c4[0 | r11], s4[t7 + o5 | 0] = c4[r11 + 32 | 0], s4[(A8 = 1 | t7) + n9 | 0] = c4[e6 + A8 | 0], s4[A8 + o5 | 0] = c4[r11 + 33 | 0], 32 != (0 | (t7 = t7 + 2 | 0)); )
                                    ;
                                  oe2(e6, 64), u5 = 0;
                                }
                                return I4 = a5, 0 | u5;
                              }
                              Kt2(), i3();
                            }, Za: ce2, _a: ce2, $a: ce2, ab: ce2, bb: Vt2, cb: Yt2, db: ce2, eb: ce2, fb: ce2, gb: he2, hb: ae2, ib: ge2, jb: ie2, kb: Tt2, lb: function(t7, e6, r11, n9, A8, o5) {
                              return t7 |= 0, e6 |= 0, A8 |= 0, o5 |= 0, !(n9 |= 0) & (r11 |= 0) >>> 0 >= 4294967280 | n9 && (Kt2(), i3()), ot2(t7 + 16 | 0, t7, e6, r11, n9, A8, o5), 0;
                            }, mb: Rt2, nb: St2, ob: ie2, pb: function(t7, e6, r11) {
                              return t7 |= 0, r11 |= 0, vt2(e6 |= 0, 24), L4(t7, e6, r11), s4[t7 + 32 | 0] = 1, s4[t7 + 33 | 0] = 0, s4[t7 + 34 | 0] = 0, s4[t7 + 35 | 0] = 0, r11 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, e6 = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24, s4[t7 + 44 | 0] = 0, s4[t7 + 45 | 0] = 0, s4[t7 + 46 | 0] = 0, s4[t7 + 47 | 0] = 0, s4[t7 + 48 | 0] = 0, s4[t7 + 49 | 0] = 0, s4[t7 + 50 | 0] = 0, s4[t7 + 51 | 0] = 0, s4[t7 + 36 | 0] = r11, s4[t7 + 37 | 0] = r11 >>> 8, s4[t7 + 38 | 0] = r11 >>> 16, s4[t7 + 39 | 0] = r11 >>> 24, s4[t7 + 40 | 0] = e6, s4[t7 + 41 | 0] = e6 >>> 8, s4[t7 + 42 | 0] = e6 >>> 16, s4[t7 + 43 | 0] = e6 >>> 24, 0;
                            }, qb: function(t7, e6, r11) {
                              return L4(t7 |= 0, e6 |= 0, r11 |= 0), s4[t7 + 32 | 0] = 1, s4[t7 + 33 | 0] = 0, s4[t7 + 34 | 0] = 0, s4[t7 + 35 | 0] = 0, r11 = c4[e6 + 16 | 0] | c4[e6 + 17 | 0] << 8 | c4[e6 + 18 | 0] << 16 | c4[e6 + 19 | 0] << 24, e6 = c4[e6 + 20 | 0] | c4[e6 + 21 | 0] << 8 | c4[e6 + 22 | 0] << 16 | c4[e6 + 23 | 0] << 24, s4[t7 + 44 | 0] = 0, s4[t7 + 45 | 0] = 0, s4[t7 + 46 | 0] = 0, s4[t7 + 47 | 0] = 0, s4[t7 + 48 | 0] = 0, s4[t7 + 49 | 0] = 0, s4[t7 + 50 | 0] = 0, s4[t7 + 51 | 0] = 0, s4[t7 + 36 | 0] = r11, s4[t7 + 37 | 0] = r11 >>> 8, s4[t7 + 38 | 0] = r11 >>> 16, s4[t7 + 39 | 0] = r11 >>> 24, s4[t7 + 40 | 0] = e6, s4[t7 + 41 | 0] = e6 >>> 8, s4[t7 + 42 | 0] = e6 >>> 16, s4[t7 + 43 | 0] = e6 >>> 24, 0;
                            }, rb: function(t7) {
                              var e6, r11 = 0, n9 = 0;
                              I4 = e6 = I4 - 48 | 0, r11 = c4[28 + (t7 |= 0) | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24, a4[e6 + 24 >> 2] = c4[t7 + 24 | 0] | c4[t7 + 25 | 0] << 8 | c4[t7 + 26 | 0] << 16 | c4[t7 + 27 | 0] << 24, a4[e6 + 28 >> 2] = r11, r11 = c4[t7 + 20 | 0] | c4[t7 + 21 | 0] << 8 | c4[t7 + 22 | 0] << 16 | c4[t7 + 23 | 0] << 24, a4[e6 + 16 >> 2] = c4[t7 + 16 | 0] | c4[t7 + 17 | 0] << 8 | c4[t7 + 18 | 0] << 16 | c4[t7 + 19 | 0] << 24, a4[e6 + 20 >> 2] = r11, r11 = c4[t7 + 4 | 0] | c4[t7 + 5 | 0] << 8 | c4[t7 + 6 | 0] << 16 | c4[t7 + 7 | 0] << 24, a4[e6 >> 2] = c4[0 | t7] | c4[t7 + 1 | 0] << 8 | c4[t7 + 2 | 0] << 16 | c4[t7 + 3 | 0] << 24, a4[e6 + 4 >> 2] = r11, r11 = c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24, a4[e6 + 8 >> 2] = c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24, a4[e6 + 12 >> 2] = r11, r11 = c4[t7 + 40 | 0] | c4[t7 + 41 | 0] << 8 | c4[t7 + 42 | 0] << 16 | c4[t7 + 43 | 0] << 24, a4[e6 + 32 >> 2] = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24, a4[e6 + 36 >> 2] = r11, Xt2(e6, e6, t7 + 32 | 0, t7), r11 = a4[e6 + 28 >> 2], n9 = a4[e6 + 24 >> 2], s4[t7 + 24 | 0] = n9, s4[t7 + 25 | 0] = n9 >>> 8, s4[t7 + 26 | 0] = n9 >>> 16, s4[t7 + 27 | 0] = n9 >>> 24, s4[t7 + 28 | 0] = r11, s4[t7 + 29 | 0] = r11 >>> 8, s4[t7 + 30 | 0] = r11 >>> 16, s4[t7 + 31 | 0] = r11 >>> 24, r11 = a4[e6 + 20 >> 2], n9 = a4[e6 + 16 >> 2], s4[t7 + 16 | 0] = n9, s4[t7 + 17 | 0] = n9 >>> 8, s4[t7 + 18 | 0] = n9 >>> 16, s4[t7 + 19 | 0] = n9 >>> 24, s4[t7 + 20 | 0] = r11, s4[t7 + 21 | 0] = r11 >>> 8, s4[t7 + 22 | 0] = r11 >>> 16, s4[t7 + 23 | 0] = r11 >>> 24, r11 = a4[e6 + 12 >> 2], n9 = a4[e6 + 8 >> 2], s4[t7 + 8 | 0] = n9, s4[t7 + 9 | 0] = n9 >>> 8, s4[t7 + 10 | 0] = n9 >>> 16, s4[t7 + 11 | 0] = n9 >>> 24, s4[t7 + 12 | 0] = r11, s4[t7 + 13 | 0] = r11 >>> 8, s4[t7 + 14 | 0] = r11 >>> 16, s4[t7 + 15 | 0] = r11 >>> 24, r11 = a4[e6 + 4 >> 2], n9 = a4[e6 >> 2], s4[0 | t7] = n9, s4[t7 + 1 | 0] = n9 >>> 8, s4[t7 + 2 | 0] = n9 >>> 16, s4[t7 + 3 | 0] = n9 >>> 24, s4[t7 + 4 | 0] = r11, s4[t7 + 5 | 0] = r11 >>> 8, s4[t7 + 6 | 0] = r11 >>> 16, s4[t7 + 7 | 0] = r11 >>> 24, n9 = a4[e6 + 36 >> 2], r11 = a4[e6 + 32 >> 2], s4[t7 + 32 | 0] = 1, s4[t7 + 33 | 0] = 0, s4[t7 + 34 | 0] = 0, s4[t7 + 35 | 0] = 0, s4[t7 + 36 | 0] = r11, s4[t7 + 37 | 0] = r11 >>> 8, s4[t7 + 38 | 0] = r11 >>> 16, s4[t7 + 39 | 0] = r11 >>> 24, s4[t7 + 40 | 0] = n9, s4[t7 + 41 | 0] = n9 >>> 8, s4[t7 + 42 | 0] = n9 >>> 16, s4[t7 + 43 | 0] = n9 >>> 24, I4 = e6 + 48 | 0;
                            }, sb: function(t7, e6, r11, n9, A8, o5, h5, g5, u5, l5) {
                              t7 |= 0, e6 |= 0, n9 |= 0, o5 |= 0, h5 |= 0, u5 |= 0, l5 |= 0;
                              var f5, p5 = 0, d5 = 0, y5 = 0;
                              return p5 = A8 |= 0, p5 |= A8 = 0, f5 = A8 | (g5 |= 0), I4 = A8 = I4 - 384 | 0, (r11 |= 0) && (a4[r11 >> 2] = 0, a4[r11 + 4 >> 2] = 0), !o5 & p5 >>> 0 < 4294967279 ? (Wt2(d5 = A8 + 16 | 0, 64, y5 = t7 + 32 | 0, t7), ne2(g5 = A8 + 80 | 0, d5), oe2(d5, 64), $t2(g5, h5, f5, u5), $t2(g5, 34288, 0 - f5 & 15, 0), a4[A8 + 72 >> 2] = 0, a4[A8 + 76 >> 2] = 0, a4[(h5 = A8 - -64 | 0) >> 2] = 0, a4[h5 + 4 >> 2] = 0, a4[A8 + 56 >> 2] = 0, a4[A8 + 60 >> 2] = 0, a4[A8 + 48 >> 2] = 0, a4[A8 + 52 >> 2] = 0, a4[A8 + 40 >> 2] = 0, a4[A8 + 44 >> 2] = 0, a4[A8 + 32 >> 2] = 0, a4[A8 + 36 >> 2] = 0, a4[A8 + 16 >> 2] = 0, a4[A8 + 20 >> 2] = 0, a4[A8 + 24 >> 2] = 0, a4[A8 + 28 >> 2] = 0, s4[A8 + 16 | 0] = l5, Et2(d5, d5, 64, 0, y5, 1, t7), $t2(g5, d5, 64, 0), s4[0 | e6] = c4[A8 + 16 | 0], Et2(e6 = e6 + 1 | 0, n9, p5, o5, y5, 2, t7), $t2(g5, e6, p5, o5), $t2(g5, 34288, 15 & p5, 0), a4[A8 + 8 >> 2] = f5, a4[A8 + 12 >> 2] = u5, $t2(g5, n9 = A8 + 8 | 0, 8, 0), a4[A8 + 8 >> 2] = p5 - -64, a4[A8 + 12 >> 2] = o5 - ((p5 >>> 0 < 4294967232) - 1 | 0), $t2(g5, n9, 8, 0), Ae2(g5, e6 = e6 + p5 | 0), oe2(g5, 256), s4[t7 + 36 | 0] = c4[t7 + 36 | 0] ^ c4[0 | e6], s4[t7 + 37 | 0] = c4[t7 + 37 | 0] ^ c4[e6 + 1 | 0], s4[t7 + 38 | 0] = c4[t7 + 38 | 0] ^ c4[e6 + 2 | 0], s4[t7 + 39 | 0] = c4[t7 + 39 | 0] ^ c4[e6 + 3 | 0], s4[t7 + 40 | 0] = c4[t7 + 40 | 0] ^ c4[e6 + 4 | 0], s4[t7 + 41 | 0] = c4[t7 + 41 | 0] ^ c4[e6 + 5 | 0], s4[t7 + 42 | 0] = c4[t7 + 42 | 0] ^ c4[e6 + 6 | 0], s4[t7 + 43 | 0] = c4[t7 + 43 | 0] ^ c4[e6 + 7 | 0], mt2(y5), (2 & l5 || ht2(y5, 4)) && (e6 = c4[t7 + 28 | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24, a4[A8 + 360 >> 2] = c4[t7 + 24 | 0] | c4[t7 + 25 | 0] << 8 | c4[t7 + 26 | 0] << 16 | c4[t7 + 27 | 0] << 24, a4[A8 + 364 >> 2] = e6, e6 = c4[t7 + 20 | 0] | c4[t7 + 21 | 0] << 8 | c4[t7 + 22 | 0] << 16 | c4[t7 + 23 | 0] << 24, a4[A8 + 352 >> 2] = c4[t7 + 16 | 0] | c4[t7 + 17 | 0] << 8 | c4[t7 + 18 | 0] << 16 | c4[t7 + 19 | 0] << 24, a4[A8 + 356 >> 2] = e6, e6 = c4[t7 + 4 | 0] | c4[t7 + 5 | 0] << 8 | c4[t7 + 6 | 0] << 16 | c4[t7 + 7 | 0] << 24, a4[A8 + 336 >> 2] = c4[0 | t7] | c4[t7 + 1 | 0] << 8 | c4[t7 + 2 | 0] << 16 | c4[t7 + 3 | 0] << 24, a4[A8 + 340 >> 2] = e6, e6 = c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24, a4[A8 + 344 >> 2] = c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24, a4[A8 + 348 >> 2] = e6, e6 = c4[t7 + 40 | 0] | c4[t7 + 41 | 0] << 8 | c4[t7 + 42 | 0] << 16 | c4[t7 + 43 | 0] << 24, a4[A8 + 368 >> 2] = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24, a4[A8 + 372 >> 2] = e6, Xt2(e6 = A8 + 336 | 0, e6, y5, t7), e6 = a4[A8 + 364 >> 2], n9 = a4[A8 + 360 >> 2], s4[t7 + 24 | 0] = n9, s4[t7 + 25 | 0] = n9 >>> 8, s4[t7 + 26 | 0] = n9 >>> 16, s4[t7 + 27 | 0] = n9 >>> 24, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, e6 = a4[A8 + 356 >> 2], n9 = a4[A8 + 352 >> 2], s4[t7 + 16 | 0] = n9, s4[t7 + 17 | 0] = n9 >>> 8, s4[t7 + 18 | 0] = n9 >>> 16, s4[t7 + 19 | 0] = n9 >>> 24, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = a4[A8 + 348 >> 2], n9 = a4[A8 + 344 >> 2], s4[t7 + 8 | 0] = n9, s4[t7 + 9 | 0] = n9 >>> 8, s4[t7 + 10 | 0] = n9 >>> 16, s4[t7 + 11 | 0] = n9 >>> 24, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = a4[A8 + 340 >> 2], n9 = a4[A8 + 336 >> 2], s4[0 | t7] = n9, s4[t7 + 1 | 0] = n9 >>> 8, s4[t7 + 2 | 0] = n9 >>> 16, s4[t7 + 3 | 0] = n9 >>> 24, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, e6 = a4[A8 + 368 >> 2], n9 = a4[A8 + 372 >> 2], s4[t7 + 32 | 0] = 1, s4[t7 + 33 | 0] = 0, s4[t7 + 34 | 0] = 0, s4[t7 + 35 | 0] = 0, s4[t7 + 36 | 0] = e6, s4[t7 + 37 | 0] = e6 >>> 8, s4[t7 + 38 | 0] = e6 >>> 16, s4[t7 + 39 | 0] = e6 >>> 24, s4[t7 + 40 | 0] = n9, s4[t7 + 41 | 0] = n9 >>> 8, s4[t7 + 42 | 0] = n9 >>> 16, s4[t7 + 43 | 0] = n9 >>> 24), r11 && (o5 = (t7 = p5 + 17 | 0) >>> 0 < 17 ? o5 + 1 | 0 : o5, a4[r11 >> 2] = t7, a4[r11 + 4 >> 2] = o5), I4 = A8 + 384 | 0) : (Kt2(), i3()), 0;
                            }, tb: function(t7, e6, r11, n9, A8, o5, h5, g5, u5, l5) {
                              t7 |= 0, e6 |= 0, n9 |= 0, A8 |= 0, g5 |= 0, l5 |= 0;
                              var f5, p5 = 0, d5 = 0, y5 = 0, C5 = 0, m5 = 0, B5 = 0;
                              p5 = o5 |= 0, o5 = h5 |= 0, d5 = 0 | p5, f5 = u5 |= 0, I4 = h5 = I4 - 400 | 0, (r11 |= 0) && (a4[r11 >> 2] = 0, a4[r11 + 4 >> 2] = 0), n9 && (s4[0 | n9] = 255), B5 = -1;
                              t: {
                                e: {
                                  if (!((u5 = d5 >>> 0 < 17) & !o5)) {
                                    if (m5 = p5 = o5 - u5 | 0, !p5 & (u5 = d5 - 17 | 0) >>> 0 >= 4294967279 | p5)
                                      break e;
                                    Wt2(y5 = h5 + 32 | 0, 64, C5 = t7 + 32 | 0, t7), ne2(p5 = h5 + 96 | 0, y5), oe2(y5, 64), $t2(p5, g5, f5, l5), $t2(p5, 34288, 0 - f5 & 15, 0), a4[h5 + 88 >> 2] = 0, a4[h5 + 92 >> 2] = 0, a4[h5 + 80 >> 2] = 0, a4[h5 + 84 >> 2] = 0, a4[h5 + 72 >> 2] = 0, a4[h5 + 76 >> 2] = 0, a4[(g5 = h5 - -64 | 0) >> 2] = 0, a4[g5 + 4 >> 2] = 0, a4[h5 + 56 >> 2] = 0, a4[h5 + 60 >> 2] = 0, a4[h5 + 48 >> 2] = 0, a4[h5 + 52 >> 2] = 0, a4[h5 + 40 >> 2] = 0, a4[h5 + 44 >> 2] = 0, a4[h5 + 32 >> 2] = 0, a4[h5 + 36 >> 2] = 0, s4[h5 + 32 | 0] = c4[0 | A8], Et2(y5, y5, 64, 0, C5, 1, t7), g5 = c4[h5 + 32 | 0], s4[h5 + 32 | 0] = c4[0 | A8], $t2(p5, y5, 64, 0), $t2(p5, A8 = A8 + 1 | 0, u5, m5), $t2(p5, 34288, d5 - 1 & 15, 0), a4[h5 + 24 >> 2] = f5, a4[h5 + 28 >> 2] = l5, $t2(p5, l5 = h5 + 24 | 0, 8, 0), o5 = (d5 = d5 + 47 | 0) >>> 0 < 47 ? o5 + 1 | 0 : o5, a4[h5 + 24 >> 2] = d5, a4[h5 + 28 >> 2] = o5, $t2(p5, l5, 8, 0), Ae2(p5, h5), oe2(p5, 256), ut2(h5, A8 + u5 | 0, 16) ? oe2(h5, 16) : (Et2(e6, A8, u5, m5, C5, 2, t7), s4[t7 + 36 | 0] = c4[t7 + 36 | 0] ^ c4[0 | h5], s4[t7 + 37 | 0] = c4[t7 + 37 | 0] ^ c4[h5 + 1 | 0], s4[t7 + 38 | 0] = c4[t7 + 38 | 0] ^ c4[h5 + 2 | 0], s4[t7 + 39 | 0] = c4[t7 + 39 | 0] ^ c4[h5 + 3 | 0], s4[t7 + 40 | 0] = c4[t7 + 40 | 0] ^ c4[h5 + 4 | 0], s4[t7 + 41 | 0] = c4[t7 + 41 | 0] ^ c4[h5 + 5 | 0], s4[t7 + 42 | 0] = c4[t7 + 42 | 0] ^ c4[h5 + 6 | 0], s4[t7 + 43 | 0] = c4[t7 + 43 | 0] ^ c4[h5 + 7 | 0], mt2(C5), (2 & g5 || ht2(C5, 4)) && (e6 = c4[t7 + 28 | 0] | c4[t7 + 29 | 0] << 8 | c4[t7 + 30 | 0] << 16 | c4[t7 + 31 | 0] << 24, a4[h5 + 376 >> 2] = c4[t7 + 24 | 0] | c4[t7 + 25 | 0] << 8 | c4[t7 + 26 | 0] << 16 | c4[t7 + 27 | 0] << 24, a4[h5 + 380 >> 2] = e6, e6 = c4[t7 + 20 | 0] | c4[t7 + 21 | 0] << 8 | c4[t7 + 22 | 0] << 16 | c4[t7 + 23 | 0] << 24, a4[h5 + 368 >> 2] = c4[t7 + 16 | 0] | c4[t7 + 17 | 0] << 8 | c4[t7 + 18 | 0] << 16 | c4[t7 + 19 | 0] << 24, a4[h5 + 372 >> 2] = e6, e6 = c4[t7 + 4 | 0] | c4[t7 + 5 | 0] << 8 | c4[t7 + 6 | 0] << 16 | c4[t7 + 7 | 0] << 24, a4[h5 + 352 >> 2] = c4[0 | t7] | c4[t7 + 1 | 0] << 8 | c4[t7 + 2 | 0] << 16 | c4[t7 + 3 | 0] << 24, a4[h5 + 356 >> 2] = e6, e6 = c4[t7 + 12 | 0] | c4[t7 + 13 | 0] << 8 | c4[t7 + 14 | 0] << 16 | c4[t7 + 15 | 0] << 24, a4[h5 + 360 >> 2] = c4[t7 + 8 | 0] | c4[t7 + 9 | 0] << 8 | c4[t7 + 10 | 0] << 16 | c4[t7 + 11 | 0] << 24, a4[h5 + 364 >> 2] = e6, e6 = c4[t7 + 40 | 0] | c4[t7 + 41 | 0] << 8 | c4[t7 + 42 | 0] << 16 | c4[t7 + 43 | 0] << 24, a4[h5 + 384 >> 2] = c4[t7 + 36 | 0] | c4[t7 + 37 | 0] << 8 | c4[t7 + 38 | 0] << 16 | c4[t7 + 39 | 0] << 24, a4[h5 + 388 >> 2] = e6, Xt2(e6 = h5 + 352 | 0, e6, C5, t7), e6 = a4[h5 + 380 >> 2], A8 = a4[h5 + 376 >> 2], s4[t7 + 24 | 0] = A8, s4[t7 + 25 | 0] = A8 >>> 8, s4[t7 + 26 | 0] = A8 >>> 16, s4[t7 + 27 | 0] = A8 >>> 24, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, e6 = a4[h5 + 372 >> 2], A8 = a4[h5 + 368 >> 2], s4[t7 + 16 | 0] = A8, s4[t7 + 17 | 0] = A8 >>> 8, s4[t7 + 18 | 0] = A8 >>> 16, s4[t7 + 19 | 0] = A8 >>> 24, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = a4[h5 + 364 >> 2], A8 = a4[h5 + 360 >> 2], s4[t7 + 8 | 0] = A8, s4[t7 + 9 | 0] = A8 >>> 8, s4[t7 + 10 | 0] = A8 >>> 16, s4[t7 + 11 | 0] = A8 >>> 24, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = a4[h5 + 356 >> 2], A8 = a4[h5 + 352 >> 2], s4[0 | t7] = A8, s4[t7 + 1 | 0] = A8 >>> 8, s4[t7 + 2 | 0] = A8 >>> 16, s4[t7 + 3 | 0] = A8 >>> 24, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, e6 = a4[h5 + 384 >> 2], A8 = a4[h5 + 388 >> 2], s4[t7 + 32 | 0] = 1, s4[t7 + 33 | 0] = 0, s4[t7 + 34 | 0] = 0, s4[t7 + 35 | 0] = 0, s4[t7 + 36 | 0] = e6, s4[t7 + 37 | 0] = e6 >>> 8, s4[t7 + 38 | 0] = e6 >>> 16, s4[t7 + 39 | 0] = e6 >>> 24, s4[t7 + 40 | 0] = A8, s4[t7 + 41 | 0] = A8 >>> 8, s4[t7 + 42 | 0] = A8 >>> 16, s4[t7 + 43 | 0] = A8 >>> 24), r11 && (a4[r11 >> 2] = u5, a4[r11 + 4 >> 2] = m5), B5 = 0, n9 && (s4[0 | n9] = g5));
                                  }
                                  I4 = h5 + 400 | 0;
                                  break t;
                                }
                                Kt2(), i3();
                              }
                              return 0 | B5;
                            }, ub: function() {
                              return 52;
                            }, vb: function() {
                              return 17;
                            }, wb: he2, xb: ce2, yb: function() {
                              return -18;
                            }, zb: pe2, Ab: le2, Bb: function() {
                              return 2;
                            }, Cb: function() {
                              return 3;
                            }, Db: fe2, Eb: ae2, Fb: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0;
                              var i4, o5 = 0, a5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0;
                              if (B5 = 1886610805 ^ (o5 = c4[0 | (A8 |= 0)] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24), p5 = 1936682341 ^ (a5 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24), o5 ^= 1852142177, h5 = 1819895653 ^ a5, E5 = 1852075885 ^ (a5 = c4[A8 + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24), w5 = 1685025377 ^ (A8 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24), f5 = 2037671283 ^ a5, a5 = 1952801890 ^ A8, C5 = r11, (0 | (I5 = (r11 + e6 | 0) - (i4 = 7 & r11) | 0)) != (0 | e6)) {
                                for (; r11 = (u5 = a5 ^ (m5 = c4[e6 + 4 | 0] | c4[e6 + 5 | 0] << 8 | c4[e6 + 6 | 0] << 16 | c4[e6 + 7 | 0] << 24)) + h5 | 0, f5 = n9 = o5 + (A8 = f5 ^ (d5 = c4[0 | e6] | c4[e6 + 1 | 0] << 8 | c4[e6 + 2 | 0] << 16 | c4[e6 + 3 | 0] << 24)) | 0, l5 = r11 = n9 >>> 0 < A8 >>> 0 ? r11 + 1 | 0 : r11, o5 = n9, n9 = r11, r11 = p5 + w5 | 0, r11 = (a5 = B5 + E5 | 0) >>> 0 < E5 >>> 0 ? r11 + 1 | 0 : r11, g5 = (h5 = ft2(E5, w5, 13) ^ a5) + o5 | 0, n9 = (o5 = y4 ^ r11) + n9 | 0, o5 = ft2(h5, o5, 17) ^ g5, B5 = ft2(o5, n9 = (h5 = h5 >>> 0 > g5 >>> 0 ? n9 + 1 | 0 : n9) ^ y4, 13), p5 = y4, u5 = ft2(A8, u5, 16), A8 = l5 ^ y4, u5 ^= f5, l5 = ft2(a5, r11, 32), r11 = y4 + A8 | 0, r11 = (f5 = n9) + (n9 = (a5 = u5 + l5 | 0) >>> 0 < l5 >>> 0 ? r11 + 1 | 0 : r11) | 0, l5 = r11 = (f5 = o5 + a5 | 0) >>> 0 < a5 >>> 0 ? r11 + 1 | 0 : r11, B5 = ft2(o5 = f5 ^ B5, r11 ^= p5, 17), p5 = y4, u5 = ft2(u5, A8, 21), A8 = n9 ^ y4, u5 ^= a5, a5 = ft2(g5, h5, 32), n9 = y4 + A8 | 0, r11 = (a5 = a5 >>> 0 > (h5 = u5 + a5 | 0) >>> 0 ? n9 + 1 | 0 : n9) + r11 | 0, E5 = (o5 = o5 + h5 | 0) ^ B5, n9 = r11 = o5 >>> 0 < h5 >>> 0 ? r11 + 1 | 0 : r11, w5 = r11 ^ p5, r11 = ft2(u5, A8, 16), u5 = a5 ^= y4, g5 = ft2(r11 ^= h5, a5, 21), h5 = y4, l5 = (a5 = ft2(f5, l5, 32)) + r11 | 0, r11 = y4 + u5 | 0, f5 = g5 ^ l5, a5 = (r11 = a5 >>> 0 > l5 >>> 0 ? r11 + 1 | 0 : r11) ^ h5, o5 = ft2(o5, n9, 32), h5 = y4, B5 = l5 ^ d5, p5 = r11 ^ m5, (0 | I5) != (0 | (e6 = e6 + 8 | 0)); )
                                  ;
                                e6 = I5;
                              }
                              switch (m5 = 0, g5 = C5 << 24, i4 - 1 | 0) {
                                case 6:
                                  g5 |= c4[e6 + 6 | 0] << 16;
                                case 5:
                                  g5 |= c4[e6 + 5 | 0] << 8;
                                case 4:
                                  g5 |= c4[e6 + 4 | 0];
                                case 3:
                                  m5 |= (r11 = c4[e6 + 3 | 0]) << 24, g5 |= n9 = r11 >>> 8 | 0;
                                case 2:
                                  m5 |= (n9 = c4[e6 + 2 | 0]) << 16, g5 |= r11 = n9 >>> 16 | 0;
                                case 1:
                                  m5 |= (r11 = c4[e6 + 1 | 0]) << 8, g5 |= n9 = r11 >>> 24 | 0;
                                case 0:
                                  m5 = c4[0 | e6] | m5;
                              }
                              return e6 = t7, n9 = ft2(A8 = f5 ^ m5, t7 = a5 ^ g5, 16), t7 = t7 + h5 | 0, l5 = t7 = (f5 = A8 + o5 | 0) >>> 0 < o5 >>> 0 ? t7 + 1 | 0 : t7, d5 = ft2(A8 = n9 ^ f5, t7 ^= r11 = y4, 21), a5 = y4, r11 = p5 + w5 | 0, n9 = r11 = (o5 = B5 + E5 | 0) >>> 0 < E5 >>> 0 ? r11 + 1 | 0 : r11, I5 = A8, A8 = ft2(o5, r11, 32), r11 = y4 + t7 | 0, t7 = a5, a5 = r11 = A8 >>> 0 > (h5 = I5 + A8 | 0) >>> 0 ? r11 + 1 | 0 : r11, u5 = ft2(A8 = h5 ^ d5, t7 ^= r11, 16), d5 = y4, C5 = ft2(E5, w5, 13) ^ o5, n9 = (I5 = y4 ^ n9) + l5 | 0, l5 = A8, A8 = ft2(r11 = (o5 = C5) + f5 | 0, n9 = r11 >>> 0 < o5 >>> 0 ? n9 + 1 | 0 : n9, 32), t7 = y4 + t7 | 0, p5 = ft2(o5 = u5 ^ (f5 = l5 + A8 | 0), A8 = (l5 = A8 >>> 0 > f5 >>> 0 ? t7 + 1 | 0 : t7) ^ d5, 21), d5 = y4, u5 = ft2(C5, I5, 17) ^ r11, r11 = (C5 = y4 ^ n9) + a5 | 0, t7 = r11 = (n9 = h5 = (t7 = u5) + h5 | 0) >>> 0 < t7 >>> 0 ? r11 + 1 | 0 : r11, a5 = o5, o5 = ft2(n9, r11, 32), r11 = y4 + A8 | 0, I5 = r11 = (a5 = o5 >>> 0 > (h5 = a5 + o5 | 0) >>> 0 ? r11 + 1 | 0 : r11) ^ d5, d5 = ft2(p5 ^= h5, r11, 16), o5 = y4, u5 = ft2(u5, C5, 13) ^ n9, t7 = (C5 = t7 ^ y4) + l5 | 0, n9 = t7 = (r11 = u5) >>> 0 > (A8 = r11 + f5 | 0) >>> 0 ? t7 + 1 | 0 : t7, t7 = ft2(A8, t7, 32), r11 = I5 + y4 | 0, I5 = r11 = (l5 = o5) ^ (o5 = (t7 = p5 + (255 ^ t7) | 0) >>> 0 < p5 >>> 0 ? r11 + 1 | 0 : r11), f5 = t7, d5 = ft2(p5 = d5 ^ t7, r11, 21), l5 = y4, u5 = ft2(u5, C5, 17) ^ A8, r11 = (C5 = n9 ^ y4) + (a5 ^ g5) | 0, n9 = r11 = (t7 = h5 ^ m5) >>> 0 > (A8 = u5 + t7 | 0) >>> 0 ? r11 + 1 | 0 : r11, t7 = ft2(A8, r11, 32), r11 = I5 + y4 | 0, I5 = r11 = (a5 = (t7 = t7 + p5 | 0) >>> 0 < p5 >>> 0 ? r11 + 1 | 0 : r11) ^ l5, l5 = t7, d5 = ft2(p5 = d5 ^ t7, r11, 16), h5 = y4, u5 = ft2(u5, C5, 13) ^ A8, t7 = o5 + (g5 = y4 ^ n9) | 0, t7 = ft2(A8 = f5 + u5 | 0, r11 = t7 = A8 >>> 0 < f5 >>> 0 ? t7 + 1 | 0 : t7, 32), n9 = I5 + y4 | 0, C5 = n9 = (o5 = (t7 = t7 + p5 | 0) >>> 0 < p5 >>> 0 ? n9 + 1 | 0 : n9) ^ h5, h5 = t7, I5 = ft2(p5 = d5 ^ t7, n9, 21), d5 = y4, t7 = ft2(u5, g5, 17), r11 = a5 + (g5 = r11 ^ y4) | 0, n9 = r11 = (A8 = l5 + (f5 = t7 ^ A8) | 0) >>> 0 < l5 >>> 0 ? r11 + 1 | 0 : r11, t7 = ft2(A8, r11, 32), r11 = C5 + y4 | 0, l5 = t7 = t7 + p5 | 0, a5 = r11 = t7 >>> 0 < p5 >>> 0 ? r11 + 1 | 0 : r11, C5 = ft2(u5 = I5 ^ t7, r11 ^= d5, 16), I5 = y4, t7 = ft2(f5, g5, 13), n9 = o5 + (d5 = n9 ^ y4) | 0, t7 = ft2(o5 = h5 + (g5 = t7 ^ A8) | 0, n9 = o5 >>> 0 < h5 >>> 0 ? n9 + 1 | 0 : n9, 32), r11 = r11 + y4 | 0, f5 = t7 = t7 + u5 | 0, h5 = r11 = t7 >>> 0 < u5 >>> 0 ? r11 + 1 | 0 : r11, u5 = ft2(A8 = C5 ^ t7, t7 = r11 ^ I5, 21), C5 = y4, g5 = ft2(g5, d5, 17), r11 = a5 + (I5 = n9 ^ y4) | 0, d5 = o5 ^ g5, o5 = A8, A8 = ft2(n9 = l5 + d5 | 0, r11 = n9 >>> 0 < l5 >>> 0 ? r11 + 1 | 0 : r11, 32), t7 = y4 + t7 | 0, C5 = ft2(o5 = u5 ^ (l5 = o5 + A8 | 0), A8 = (a5 = A8 >>> 0 > l5 >>> 0 ? t7 + 1 | 0 : t7) ^ C5, 16), g5 = y4, t7 = ft2(d5, I5, 13), r11 = h5 + (I5 = r11 ^ y4) | 0, t7 = r11 = (n9 = f5 + (d5 = t7 ^ n9) | 0) >>> 0 < f5 >>> 0 ? r11 + 1 | 0 : r11, h5 = ft2(n9, r11, 32), r11 = y4 + A8 | 0, g5 = ft2(C5 ^ (A8 = o5 = h5 + o5 | 0), (r11 = A8 >>> 0 < h5 >>> 0 ? r11 + 1 | 0 : r11) ^ g5, 21), f5 = y4, o5 = ft2(d5, I5, 17) ^ n9, h5 = ft2(o5, t7 ^= y4, 13), t7 = t7 + a5 | 0, n9 = t7 = y4 ^ ((o5 = o5 + l5 | 0) >>> 0 < l5 >>> 0 ? t7 + 1 : t7), o5 = ft2(a5 = o5 ^ h5, t7, 17) ^ g5, t7 = y4 ^ f5, n9 = r11 + n9 | 0, r11 = ft2(r11 = A8 + a5 | 0, n9 = r11 >>> 0 < A8 >>> 0 ? n9 + 1 | 0 : n9, 32) ^ o5 ^ r11, s4[0 | e6] = r11, s4[e6 + 1 | 0] = r11 >>> 8, s4[e6 + 2 | 0] = r11 >>> 16, s4[e6 + 3 | 0] = r11 >>> 24, t7 ^= n9 ^ y4, s4[e6 + 4 | 0] = t7, s4[e6 + 5 | 0] = t7 >>> 8, s4[e6 + 6 | 0] = t7 >>> 16, s4[e6 + 7 | 0] = t7 >>> 24, 0;
                            }, Gb: function(t7) {
                              vt2(t7 |= 0, 16);
                            }, Hb: se2, Ib: ue2, Jb: ce2, Kb: ce2, Lb: ue2, Mb: function() {
                              return -65;
                            }, Nb: function(t7, e6, r11) {
                              t7 |= 0;
                              var n9, A8, i4, o5, a5 = 0, h5 = 0, g5 = 0, u5 = 0, l5 = 0;
                              return I4 = i4 = I4 - 160 | 0, ct2(e6 |= 0, r11 |= 0, 32, 0), s4[0 | e6] = 248 & c4[0 | e6], s4[e6 + 31 | 0] = 63 & c4[e6 + 31 | 0] | 64, H4(i4, e6), bt2(t7, i4), h5 = c4[(A8 = r11) + 8 | 0] | c4[A8 + 9 | 0] << 8 | c4[A8 + 10 | 0] << 16 | c4[A8 + 11 | 0] << 24, a5 = c4[A8 + 12 | 0] | c4[A8 + 13 | 0] << 8 | c4[A8 + 14 | 0] << 16 | c4[A8 + 15 | 0] << 24, g5 = c4[A8 + 16 | 0] | c4[A8 + 17 | 0] << 8 | c4[A8 + 18 | 0] << 16 | c4[A8 + 19 | 0] << 24, u5 = c4[A8 + 20 | 0] | c4[A8 + 21 | 0] << 8 | c4[A8 + 22 | 0] << 16 | c4[A8 + 23 | 0] << 24, l5 = c4[0 | A8] | c4[A8 + 1 | 0] << 8 | c4[A8 + 2 | 0] << 16 | c4[A8 + 3 | 0] << 24, r11 = c4[A8 + 4 | 0] | c4[A8 + 5 | 0] << 8 | c4[A8 + 6 | 0] << 16 | c4[A8 + 7 | 0] << 24, o5 = c4[A8 + 28 | 0] | c4[A8 + 29 | 0] << 8 | c4[A8 + 30 | 0] << 16 | c4[A8 + 31 | 0] << 24, n9 = e6, e6 = c4[A8 + 24 | 0] | c4[A8 + 25 | 0] << 8 | c4[A8 + 26 | 0] << 16 | c4[A8 + 27 | 0] << 24, s4[n9 + 24 | 0] = e6, s4[n9 + 25 | 0] = e6 >>> 8, s4[n9 + 26 | 0] = e6 >>> 16, s4[n9 + 27 | 0] = e6 >>> 24, s4[n9 + 28 | 0] = o5, s4[n9 + 29 | 0] = o5 >>> 8, s4[n9 + 30 | 0] = o5 >>> 16, s4[n9 + 31 | 0] = o5 >>> 24, s4[n9 + 16 | 0] = g5, s4[n9 + 17 | 0] = g5 >>> 8, s4[n9 + 18 | 0] = g5 >>> 16, s4[n9 + 19 | 0] = g5 >>> 24, s4[n9 + 20 | 0] = u5, s4[n9 + 21 | 0] = u5 >>> 8, s4[n9 + 22 | 0] = u5 >>> 16, s4[n9 + 23 | 0] = u5 >>> 24, s4[n9 + 8 | 0] = h5, s4[n9 + 9 | 0] = h5 >>> 8, s4[n9 + 10 | 0] = h5 >>> 16, s4[n9 + 11 | 0] = h5 >>> 24, s4[n9 + 12 | 0] = a5, s4[n9 + 13 | 0] = a5 >>> 8, s4[n9 + 14 | 0] = a5 >>> 16, s4[n9 + 15 | 0] = a5 >>> 24, s4[0 | n9] = l5, s4[n9 + 1 | 0] = l5 >>> 8, s4[n9 + 2 | 0] = l5 >>> 16, s4[n9 + 3 | 0] = l5 >>> 24, s4[n9 + 4 | 0] = r11, s4[n9 + 5 | 0] = r11 >>> 8, s4[n9 + 6 | 0] = r11 >>> 16, s4[n9 + 7 | 0] = r11 >>> 24, g5 = c4[(a5 = t7) + 8 | 0] | c4[a5 + 9 | 0] << 8 | c4[a5 + 10 | 0] << 16 | c4[a5 + 11 | 0] << 24, u5 = c4[a5 + 12 | 0] | c4[a5 + 13 | 0] << 8 | c4[a5 + 14 | 0] << 16 | c4[a5 + 15 | 0] << 24, l5 = c4[a5 + 16 | 0] | c4[a5 + 17 | 0] << 8 | c4[a5 + 18 | 0] << 16 | c4[a5 + 19 | 0] << 24, r11 = c4[a5 + 20 | 0] | c4[a5 + 21 | 0] << 8 | c4[a5 + 22 | 0] << 16 | c4[a5 + 23 | 0] << 24, e6 = c4[0 | a5] | c4[a5 + 1 | 0] << 8 | c4[a5 + 2 | 0] << 16 | c4[a5 + 3 | 0] << 24, t7 = c4[a5 + 4 | 0] | c4[a5 + 5 | 0] << 8 | c4[a5 + 6 | 0] << 16 | c4[a5 + 7 | 0] << 24, h5 = c4[a5 + 28 | 0] | c4[a5 + 29 | 0] << 8 | c4[a5 + 30 | 0] << 16 | c4[a5 + 31 | 0] << 24, a5 = c4[a5 + 24 | 0] | c4[a5 + 25 | 0] << 8 | c4[a5 + 26 | 0] << 16 | c4[a5 + 27 | 0] << 24, s4[n9 + 56 | 0] = a5, s4[n9 + 57 | 0] = a5 >>> 8, s4[n9 + 58 | 0] = a5 >>> 16, s4[n9 + 59 | 0] = a5 >>> 24, s4[n9 + 60 | 0] = h5, s4[n9 + 61 | 0] = h5 >>> 8, s4[n9 + 62 | 0] = h5 >>> 16, s4[n9 + 63 | 0] = h5 >>> 24, s4[n9 + 48 | 0] = l5, s4[n9 + 49 | 0] = l5 >>> 8, s4[n9 + 50 | 0] = l5 >>> 16, s4[n9 + 51 | 0] = l5 >>> 24, s4[n9 + 52 | 0] = r11, s4[n9 + 53 | 0] = r11 >>> 8, s4[n9 + 54 | 0] = r11 >>> 16, s4[n9 + 55 | 0] = r11 >>> 24, s4[n9 + 40 | 0] = g5, s4[n9 + 41 | 0] = g5 >>> 8, s4[n9 + 42 | 0] = g5 >>> 16, s4[n9 + 43 | 0] = g5 >>> 24, s4[n9 + 44 | 0] = u5, s4[n9 + 45 | 0] = u5 >>> 8, s4[n9 + 46 | 0] = u5 >>> 16, s4[n9 + 47 | 0] = u5 >>> 24, s4[n9 + 32 | 0] = e6, s4[n9 + 33 | 0] = e6 >>> 8, s4[n9 + 34 | 0] = e6 >>> 16, s4[n9 + 35 | 0] = e6 >>> 24, s4[n9 + 36 | 0] = t7, s4[n9 + 37 | 0] = t7 >>> 8, s4[n9 + 38 | 0] = t7 >>> 16, s4[n9 + 39 | 0] = t7 >>> 24, I4 = i4 + 160 | 0, 0;
                            }, Ob: function(t7, e6) {
                              t7 |= 0, e6 |= 0;
                              var r11, n9, A8, i4, o5, h5 = 0, g5 = 0, u5 = 0;
                              return I4 = g5 = I4 - 192 | 0, vt2(g5, 32), ct2(e6, g5, 32, 0), s4[0 | e6] = 248 & c4[0 | e6], s4[e6 + 31 | 0] = 63 & c4[e6 + 31 | 0] | 64, H4(u5 = g5 + 32 | 0, e6), bt2(t7, u5), r11 = g5, u5 = a4[g5 + 28 >> 2], g5 = a4[g5 + 24 >> 2], s4[e6 + 24 | 0] = g5, s4[e6 + 25 | 0] = g5 >>> 8, s4[e6 + 26 | 0] = g5 >>> 16, s4[e6 + 27 | 0] = g5 >>> 24, s4[e6 + 28 | 0] = u5, s4[e6 + 29 | 0] = u5 >>> 8, s4[e6 + 30 | 0] = u5 >>> 16, s4[e6 + 31 | 0] = u5 >>> 24, u5 = a4[r11 + 20 >> 2], g5 = a4[r11 + 16 >> 2], s4[e6 + 16 | 0] = g5, s4[e6 + 17 | 0] = g5 >>> 8, s4[e6 + 18 | 0] = g5 >>> 16, s4[e6 + 19 | 0] = g5 >>> 24, s4[e6 + 20 | 0] = u5, s4[e6 + 21 | 0] = u5 >>> 8, s4[e6 + 22 | 0] = u5 >>> 16, s4[e6 + 23 | 0] = u5 >>> 24, u5 = a4[r11 + 12 >> 2], g5 = a4[r11 + 8 >> 2], s4[e6 + 8 | 0] = g5, s4[e6 + 9 | 0] = g5 >>> 8, s4[e6 + 10 | 0] = g5 >>> 16, s4[e6 + 11 | 0] = g5 >>> 24, s4[e6 + 12 | 0] = u5, s4[e6 + 13 | 0] = u5 >>> 8, s4[e6 + 14 | 0] = u5 >>> 16, s4[e6 + 15 | 0] = u5 >>> 24, u5 = a4[r11 + 4 >> 2], g5 = a4[r11 >> 2], s4[0 | e6] = g5, s4[e6 + 1 | 0] = g5 >>> 8, s4[e6 + 2 | 0] = g5 >>> 16, s4[e6 + 3 | 0] = g5 >>> 24, s4[e6 + 4 | 0] = u5, s4[e6 + 5 | 0] = u5 >>> 8, s4[e6 + 6 | 0] = u5 >>> 16, s4[e6 + 7 | 0] = u5 >>> 24, n9 = c4[(h5 = t7) + 8 | 0] | c4[h5 + 9 | 0] << 8 | c4[h5 + 10 | 0] << 16 | c4[h5 + 11 | 0] << 24, A8 = c4[h5 + 12 | 0] | c4[h5 + 13 | 0] << 8 | c4[h5 + 14 | 0] << 16 | c4[h5 + 15 | 0] << 24, i4 = c4[h5 + 16 | 0] | c4[h5 + 17 | 0] << 8 | c4[h5 + 18 | 0] << 16 | c4[h5 + 19 | 0] << 24, u5 = c4[h5 + 20 | 0] | c4[h5 + 21 | 0] << 8 | c4[h5 + 22 | 0] << 16 | c4[h5 + 23 | 0] << 24, g5 = c4[0 | h5] | c4[h5 + 1 | 0] << 8 | c4[h5 + 2 | 0] << 16 | c4[h5 + 3 | 0] << 24, t7 = c4[h5 + 4 | 0] | c4[h5 + 5 | 0] << 8 | c4[h5 + 6 | 0] << 16 | c4[h5 + 7 | 0] << 24, o5 = c4[h5 + 28 | 0] | c4[h5 + 29 | 0] << 8 | c4[h5 + 30 | 0] << 16 | c4[h5 + 31 | 0] << 24, h5 = c4[h5 + 24 | 0] | c4[h5 + 25 | 0] << 8 | c4[h5 + 26 | 0] << 16 | c4[h5 + 27 | 0] << 24, s4[e6 + 56 | 0] = h5, s4[e6 + 57 | 0] = h5 >>> 8, s4[e6 + 58 | 0] = h5 >>> 16, s4[e6 + 59 | 0] = h5 >>> 24, s4[e6 + 60 | 0] = o5, s4[e6 + 61 | 0] = o5 >>> 8, s4[e6 + 62 | 0] = o5 >>> 16, s4[e6 + 63 | 0] = o5 >>> 24, s4[e6 + 48 | 0] = i4, s4[e6 + 49 | 0] = i4 >>> 8, s4[e6 + 50 | 0] = i4 >>> 16, s4[e6 + 51 | 0] = i4 >>> 24, s4[e6 + 52 | 0] = u5, s4[e6 + 53 | 0] = u5 >>> 8, s4[e6 + 54 | 0] = u5 >>> 16, s4[e6 + 55 | 0] = u5 >>> 24, s4[e6 + 40 | 0] = n9, s4[e6 + 41 | 0] = n9 >>> 8, s4[e6 + 42 | 0] = n9 >>> 16, s4[e6 + 43 | 0] = n9 >>> 24, s4[e6 + 44 | 0] = A8, s4[e6 + 45 | 0] = A8 >>> 8, s4[e6 + 46 | 0] = A8 >>> 16, s4[e6 + 47 | 0] = A8 >>> 24, s4[e6 + 32 | 0] = g5, s4[e6 + 33 | 0] = g5 >>> 8, s4[e6 + 34 | 0] = g5 >>> 16, s4[e6 + 35 | 0] = g5 >>> 24, s4[e6 + 36 | 0] = t7, s4[e6 + 37 | 0] = t7 >>> 8, s4[e6 + 38 | 0] = t7 >>> 16, s4[e6 + 39 | 0] = t7 >>> 24, oe2(r11, 32), I4 = r11 + 192 | 0, 0;
                            }, Pb: function(t7, e6, r11, n9, A8, i4) {
                              e6 |= 0, A8 |= 0, i4 |= 0;
                              var o5, s5 = 0;
                              return I4 = o5 = I4 - 16 | 0, m4(t7 |= 0, o5 + 8 | 0, kt2(t7 - -64 | 0, r11 |= 0, n9 |= 0), n9, A8, i4, 0), 64 != a4[o5 + 8 >> 2] | a4[o5 + 12 >> 2] ? (e6 && (a4[e6 >> 2] = 0, a4[e6 + 4 >> 2] = 0), xt2(t7, 0, n9 - -64 | 0), s5 = -1) : e6 && (a4[e6 >> 2] = n9 - -64, a4[e6 + 4 >> 2] = A8 - ((n9 >>> 0 < 4294967232) - 1 | 0)), I4 = o5 + 16 | 0, 0 | s5;
                            }, Qb: function(t7, e6, r11, n9, A8, i4) {
                              t7 |= 0, e6 |= 0, r11 |= 0;
                              var o5 = 0;
                              t: {
                                e: {
                                  if (o5 = n9 |= 0, !(!(A8 |= 0) & n9 >>> 0 < 64 || (n9 = A8 - 1 | 0, !(n9 = (A8 = o5 + -64 | 0) >>> 0 < 4294967232 ? n9 + 1 | 0 : n9) & A8 >>> 0 > 4294967231 | n9))) {
                                    if (!w4(r11, o5 = r11 - -64 | 0, A8, n9, i4 |= 0, 0))
                                      break e;
                                    t7 && xt2(t7, 0, A8);
                                  }
                                  if (r11 = -1, !e6)
                                    break t;
                                  a4[e6 >> 2] = 0, a4[e6 + 4 >> 2] = 0;
                                  break t;
                                }
                                e6 && (a4[e6 >> 2] = A8, a4[e6 + 4 >> 2] = n9), r11 = 0, t7 && kt2(t7, o5, A8);
                              }
                              return 0 | r11;
                            }, Rb: function(t7, e6, r11, n9, A8, i4) {
                              return m4(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, i4 |= 0, 0), 0;
                            }, Sb: function(t7, e6, r11, n9, A8) {
                              return 0 | w4(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, 0);
                            }, Tb: function(t7) {
                              return gt2(t7 |= 0), 0;
                            }, Ub: function(t7, e6, r11, n9) {
                              return 0 | G4(t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0);
                            }, Vb: function(t7, e6, r11, n9) {
                              var A8;
                              return e6 |= 0, r11 |= 0, n9 |= 0, I4 = A8 = I4 + -64 | 0, D4(t7 |= 0, A8), t7 = m4(e6, r11, A8, 64, 0, n9, 1), I4 = A8 - -64 | 0, 0 | t7;
                            }, Wb: function(t7, e6, r11) {
                              var n9;
                              return e6 |= 0, r11 |= 0, I4 = n9 = I4 + -64 | 0, D4(t7 |= 0, n9), t7 = w4(e6, n9, 64, 0, r11, 1), I4 = n9 - -64 | 0, 0 | t7;
                            }, Xb: function(t7, e6) {
                              t7 |= 0;
                              var r11, n9 = 0, A8 = 0, i4 = 0, o5 = 0, c5 = 0, h5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, C5 = 0, m5 = 0, B5 = 0, E5 = 0, w5 = 0, Q5 = 0, b5 = 0, k5 = 0, D5 = 0, S5 = 0, M5 = 0, x5 = 0, F5 = 0, R5 = 0, U5 = 0, G5 = 0, H5 = 0, L5 = 0, O5 = 0, Y5 = 0, K5 = 0, J5 = 0, j5 = 0, z4 = 0, q4 = 0, V3 = 0, W3 = 0, $3 = 0, tt3 = 0, rt3 = 0, nt3 = 0, At3 = 0, it3 = 0, ot3 = 0, st3 = 0, at3 = 0, ct3 = 0, gt3 = 0, ut3 = 0, ft3 = 0, pt3 = 0, dt3 = 0, It3 = 0, yt3 = 0, Ct3 = 0, mt3 = 0, Et3 = 0, wt3 = 0, vt3 = 0, _t3 = 0, Qt3 = 0, bt3 = 0, kt3 = 0, Dt3 = 0, St3 = 0, Nt3 = 0, Mt3 = 0, Ft3 = 0, Pt3 = 0, Tt3 = 0, Rt3 = 0, Ut3 = 0, Gt3 = 0, Ht3 = 0, Lt3 = 0, Ot3 = 0, Yt3 = 0, Kt3 = 0, Jt3 = 0;
                              if (I4 = r11 = I4 - 256 | 0, Rt3 = -1, !lt2(e6 |= 0) && !N5(n9 = r11 + 96 | 0, e6)) {
                                for (I4 = i4 = I4 - 2048 | 0, Z2(o5 = i4 + 640 | 0, n9), n9 = a4[(e6 = n9) + 36 >> 2], a4[i4 + 352 >> 2] = a4[e6 + 32 >> 2], a4[i4 + 356 >> 2] = n9, n9 = a4[e6 + 28 >> 2], a4[i4 + 344 >> 2] = a4[e6 + 24 >> 2], a4[i4 + 348 >> 2] = n9, n9 = a4[e6 + 20 >> 2], a4[i4 + 336 >> 2] = a4[e6 + 16 >> 2], a4[i4 + 340 >> 2] = n9, n9 = a4[e6 + 12 >> 2], a4[i4 + 328 >> 2] = a4[e6 + 8 >> 2], a4[i4 + 332 >> 2] = n9, n9 = a4[e6 + 4 >> 2], a4[i4 + 320 >> 2] = a4[e6 >> 2], a4[i4 + 324 >> 2] = n9, n9 = a4[e6 + 52 >> 2], a4[i4 + 368 >> 2] = a4[e6 + 48 >> 2], a4[i4 + 372 >> 2] = n9, n9 = a4[e6 + 60 >> 2], a4[i4 + 376 >> 2] = a4[e6 + 56 >> 2], a4[i4 + 380 >> 2] = n9, A8 = a4[4 + (n9 = e6 - -64 | 0) >> 2], a4[i4 + 384 >> 2] = a4[n9 >> 2], a4[i4 + 388 >> 2] = A8, n9 = a4[e6 + 76 >> 2], a4[i4 + 392 >> 2] = a4[e6 + 72 >> 2], a4[i4 + 396 >> 2] = n9, n9 = a4[e6 + 44 >> 2], a4[i4 + 360 >> 2] = a4[e6 + 40 >> 2], a4[i4 + 364 >> 2] = n9, n9 = a4[e6 + 92 >> 2], a4[i4 + 408 >> 2] = a4[e6 + 88 >> 2], a4[i4 + 412 >> 2] = n9, n9 = a4[e6 + 100 >> 2], a4[i4 + 416 >> 2] = a4[e6 + 96 >> 2], a4[i4 + 420 >> 2] = n9, n9 = a4[e6 + 108 >> 2], a4[i4 + 424 >> 2] = a4[e6 + 104 >> 2], a4[i4 + 428 >> 2] = n9, n9 = a4[e6 + 116 >> 2], a4[i4 + 432 >> 2] = a4[e6 + 112 >> 2], a4[i4 + 436 >> 2] = n9, n9 = a4[e6 + 84 >> 2], a4[i4 + 400 >> 2] = a4[e6 + 80 >> 2], a4[i4 + 404 >> 2] = n9, _4(e6 = i4 + 480 | 0, n9 = i4 + 320 | 0), v4(A8 = i4 + 160 | 0, e6, h5 = i4 + 600 | 0), v4(i4 + 200 | 0, l5 = i4 + 520 | 0, f5 = i4 + 560 | 0), v4(i4 + 240 | 0, f5, h5), v4(i4 + 280 | 0, e6, l5), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5 = i4 + 360 | 0, l5, f5), v4(w5 = i4 + 400 | 0, f5, h5), v4(C5 = i4 + 440 | 0, e6, l5), Z2(o5 = i4 + 800 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(o5 = i4 + 960 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(o5 = i4 + 1120 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(o5 = i4 + 1280 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(o5 = i4 + 1440 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(o5 = i4 + 1600 | 0, n9), P4(e6, A8, o5), v4(n9, e6, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, e6, l5), Z2(i4 + 1760 | 0, n9), a4[i4 + 32 >> 2] = 0, a4[i4 + 36 >> 2] = 0, a4[i4 + 24 >> 2] = 0, a4[i4 + 28 >> 2] = 0, a4[i4 + 16 >> 2] = 0, a4[i4 + 20 >> 2] = 0, a4[i4 + 8 >> 2] = 0, a4[i4 + 12 >> 2] = 0, a4[i4 + 44 >> 2] = 0, a4[i4 + 48 >> 2] = 0, a4[i4 + 52 >> 2] = 0, a4[i4 + 56 >> 2] = 0, a4[i4 + 60 >> 2] = 0, a4[i4 + 64 >> 2] = 0, a4[i4 + 68 >> 2] = 0, a4[i4 + 72 >> 2] = 0, a4[i4 + 76 >> 2] = 0, a4[i4 + 80 >> 2] = 1, a4[i4 >> 2] = 0, a4[i4 + 4 >> 2] = 0, a4[i4 + 40 >> 2] = 1, xt2(i4 + 84 | 0, 0, 76), p5 = i4 + 120 | 0, B5 = i4 + 2008 | 0, m5 = i4 + 1968 | 0, n9 = i4 + 80 | 0, A8 = i4 + 40 | 0, o5 = 252; c5 = a4[i4 + 36 >> 2], a4[(e6 = i4 + 1960 | 0) >> 2] = a4[i4 + 32 >> 2], a4[e6 + 4 >> 2] = c5, c5 = a4[i4 + 28 >> 2], a4[(e6 = i4 + 1952 | 0) >> 2] = a4[i4 + 24 >> 2], a4[e6 + 4 >> 2] = c5, c5 = a4[i4 + 20 >> 2], a4[(e6 = i4 + 1944 | 0) >> 2] = a4[i4 + 16 >> 2], a4[e6 + 4 >> 2] = c5, c5 = a4[i4 + 12 >> 2], a4[(e6 = i4 + 1936 | 0) >> 2] = a4[i4 + 8 >> 2], a4[e6 + 4 >> 2] = c5, e6 = a4[i4 + 4 >> 2], a4[i4 + 1928 >> 2] = a4[i4 >> 2], a4[i4 + 1932 >> 2] = e6, c5 = a4[(e6 = A8) + 36 >> 2], a4[m5 + 32 >> 2] = a4[e6 + 32 >> 2], a4[m5 + 36 >> 2] = c5, c5 = a4[e6 + 28 >> 2], a4[m5 + 24 >> 2] = a4[e6 + 24 >> 2], a4[m5 + 28 >> 2] = c5, c5 = a4[e6 + 20 >> 2], a4[m5 + 16 >> 2] = a4[e6 + 16 >> 2], a4[m5 + 20 >> 2] = c5, c5 = a4[e6 + 12 >> 2], a4[m5 + 8 >> 2] = a4[e6 + 8 >> 2], a4[m5 + 12 >> 2] = c5, c5 = a4[e6 + 4 >> 2], a4[m5 >> 2] = a4[e6 >> 2], a4[m5 + 4 >> 2] = c5, c5 = a4[(e6 = n9) + 36 >> 2], a4[B5 + 32 >> 2] = a4[e6 + 32 >> 2], a4[B5 + 36 >> 2] = c5, c5 = a4[e6 + 28 >> 2], a4[B5 + 24 >> 2] = a4[e6 + 24 >> 2], a4[B5 + 28 >> 2] = c5, c5 = a4[e6 + 20 >> 2], a4[B5 + 16 >> 2] = a4[e6 + 16 >> 2], a4[B5 + 20 >> 2] = c5, c5 = a4[e6 + 12 >> 2], a4[B5 + 8 >> 2] = a4[e6 + 8 >> 2], a4[B5 + 12 >> 2] = c5, c5 = a4[e6 + 4 >> 2], a4[B5 >> 2] = a4[e6 >> 2], a4[B5 + 4 >> 2] = c5, o5 = s4[(e6 = o5) + 33424 | 0], _4(c5 = i4 + 480 | 0, i4 + 1928 | 0), (0 | o5) > 0 ? (v4(b5 = i4 + 320 | 0, c5, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, c5, l5), P4(c5, b5, (i4 + 640 | 0) + g4((254 & o5) >>> 1 | 0, 160) | 0)) : (0 | o5) >= 0 || (v4(b5 = i4 + 320 | 0, c5 = i4 + 480 | 0, h5), v4(E5, l5, f5), v4(w5, f5, h5), v4(C5, c5, l5), T2(c5, b5, (i4 + 640 | 0) + g4((0 - o5 & 254) >>> 1 | 0, 160) | 0)), v4(i4, o5 = i4 + 480 | 0, h5), v4(A8, l5, f5), v4(n9, f5, h5), v4(p5, o5, l5), o5 = e6 - 1 | 0, e6; )
                                  ;
                                et2(e6 = i4 + 640 | 0, i4), e6 = ht2(e6, 32), I4 = i4 + 2048 | 0, e6 && (i4 = a4[r11 + 136 >> 2], a4[r11 >> 2] = 1 - i4, Rt3 = 0, K5 = a4[r11 + 172 >> 2], a4[r11 + 36 >> 2] = 0 - K5, E5 = a4[r11 + 168 >> 2], a4[r11 + 32 >> 2] = 0 - E5, J5 = a4[r11 + 164 >> 2], a4[r11 + 28 >> 2] = 0 - J5, l5 = a4[r11 + 160 >> 2], a4[r11 + 24 >> 2] = 0 - l5, j5 = a4[r11 + 156 >> 2], a4[r11 + 20 >> 2] = 0 - j5, f5 = a4[r11 + 152 >> 2], a4[r11 + 16 >> 2] = 0 - f5, z4 = a4[r11 + 148 >> 2], a4[r11 + 12 >> 2] = 0 - z4, B5 = a4[r11 + 144 >> 2], a4[r11 + 8 >> 2] = 0 - B5, q4 = a4[r11 + 140 >> 2], a4[r11 + 4 >> 2] = 0 - q4, X2(r11, r11), e6 = Bt2(w5 = a4[r11 + 4 >> 2], L5 = w5 >> 31, M5 = j5 << 1, gt3 = M5 >> 31), n9 = y4, A8 = Bt2(h5 = a4[r11 >> 2], x5 = h5 >> 31, l5, F5 = l5 >> 31), n9 = y4 + n9 | 0, n9 = (e6 = A8 + e6 | 0) >>> 0 < A8 >>> 0 ? n9 + 1 | 0 : n9, A8 = (o5 = Bt2(c5 = a4[r11 + 8 >> 2], V3 = c5 >> 31, f5, R5 = f5 >> 31)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(O5 = a4[r11 + 12 >> 2], tt3 = O5 >> 31, At3 = z4 << 1, ut3 = At3 >> 31), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(W3 = a4[r11 + 16 >> 2], it3 = W3 >> 31, B5, U5 = B5 >> 31), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, St3 = o5 = a4[r11 + 20 >> 2], m5 = Bt2(o5, ft3 = o5 >> 31, ot3 = q4 << 1, pt3 = ot3 >> 31), A8 = y4 + e6 | 0, A8 = (n9 = m5 + n9 | 0) >>> 0 < m5 >>> 0 ? A8 + 1 | 0 : A8, Nt3 = k5 = a4[r11 + 24 >> 2], e6 = (i4 = Bt2(k5, bt3 = k5 >> 31, m5 = i4 + 1 | 0, G5 = m5 >> 31)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < i4 >>> 0 ? n9 + 1 | 0 : n9, dt3 = a4[r11 + 28 >> 2], A8 = (i4 = Bt2(b5 = g4(dt3, 19), rt3 = b5 >> 31, st3 = K5 << 1, It3 = st3 >> 31)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, Ut3 = a4[r11 + 32 >> 2], A8 = Bt2(p5 = g4(Ut3, 19), $3 = p5 >> 31, E5, H5 = E5 >> 31), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, Gt3 = a4[r11 + 36 >> 2], A8 = Bt2(C5 = g4(Gt3, 19), Y5 = C5 >> 31, at3 = J5 << 1, yt3 = at3 >> 31), e6 = y4 + e6 | 0, d5 = n9 = A8 + n9 | 0, i4 = n9 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, e6 = Bt2(f5, R5, w5, L5), n9 = y4, u5 = Bt2(h5, x5, j5, Ct3 = j5 >> 31), A8 = y4 + n9 | 0, A8 = (e6 = u5 + e6 | 0) >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, u5 = Bt2(c5, V3, z4, mt3 = z4 >> 31), n9 = y4 + A8 | 0, n9 = (e6 = u5 + e6 | 0) >>> 0 < u5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (u5 = Bt2(B5, U5, O5, tt3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(W3, it3, q4, Et3 = q4 >> 31), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(m5, G5, o5, ft3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, u5 = Bt2(k5 = g4(k5, 19), ct3 = k5 >> 31, K5, wt3 = K5 >> 31), A8 = y4 + e6 | 0, A8 = (n9 = u5 + n9 | 0) >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, e6 = (u5 = Bt2(E5, H5, b5, rt3)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < u5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (u5 = Bt2(p5, $3, J5, vt3 = J5 >> 31)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(l5, F5, C5, Y5), e6 = y4 + e6 | 0, Mt3 = n9 = n9 + A8 | 0, nt3 = n9 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, e6 = Bt2(w5, L5, At3, ut3), A8 = y4, n9 = (u5 = Bt2(h5, x5, f5, R5)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, u5 = Bt2(B5, U5, c5, V3), A8 = y4 + e6 | 0, A8 = (n9 = u5 + n9 | 0) >>> 0 < u5 >>> 0 ? A8 + 1 | 0 : A8, e6 = (u5 = Bt2(O5, tt3, ot3, pt3)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < u5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (u5 = Bt2(m5, G5, W3, it3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < u5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(u5 = g4(o5, 19), _t3 = u5 >> 31, st3, It3), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(E5, H5, k5, ct3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, o5 = Bt2(b5, rt3, at3, yt3), A8 = y4 + e6 | 0, A8 = (n9 = o5 + n9 | 0) >>> 0 < o5 >>> 0 ? A8 + 1 | 0 : A8, e6 = (o5 = Bt2(l5, F5, p5, $3)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < o5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (o5 = Bt2(C5, Y5, M5, gt3)) + e6 | 0, e6 = y4 + n9 | 0, Ht3 = A8, Lt3 = e6 = A8 >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, Ot3 = A8 = A8 + 33554432 | 0, Yt3 = e6 = A8 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, A8 = (67108863 & e6) << 6 | A8 >>> 26, e6 = (e6 >> 26) + nt3 | 0, Mt3 = o5 = A8 + Mt3 | 0, e6 = A8 >>> 0 > o5 >>> 0 ? e6 + 1 | 0 : e6, Kt3 = o5 = o5 + 16777216 | 0, e6 = (n9 = (A8 = o5 >>> 0 < 16777216 ? e6 + 1 | 0 : e6) >> 25) + i4 | 0, e6 = (A8 = (o5 = (33554431 & A8) << 7 | o5 >>> 25) + d5 | 0) >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, S5 = n9 = A8 + 33554432 | 0, o5 = e6 = n9 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[r11 + 72 >> 2] = A8 - (-67108864 & n9), e6 = Bt2(w5, L5, ot3, pt3), n9 = y4, i4 = Bt2(h5, x5, B5, U5), A8 = y4 + n9 | 0, A8 = (e6 = i4 + e6 | 0) >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, n9 = (i4 = Bt2(m5, G5, c5, V3)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(i4 = g4(O5, 19), Qt3 = i4 >> 31, st3, It3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (d5 = Bt2(nt3 = g4(W3, 19), kt3 = nt3 >> 31, E5, H5)) + n9 | 0, n9 = y4 + e6 | 0, n9 = A8 >>> 0 < d5 >>> 0 ? n9 + 1 | 0 : n9, d5 = Bt2(at3, yt3, u5, _t3), e6 = y4 + n9 | 0, e6 = (A8 = d5 + A8 | 0) >>> 0 < d5 >>> 0 ? e6 + 1 | 0 : e6, n9 = (d5 = Bt2(l5, F5, k5, ct3)) + A8 | 0, A8 = y4 + e6 | 0, A8 = n9 >>> 0 < d5 >>> 0 ? A8 + 1 | 0 : A8, d5 = Bt2(b5, rt3, M5, gt3), e6 = y4 + A8 | 0, e6 = (n9 = d5 + n9 | 0) >>> 0 < d5 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(f5, R5, p5, $3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (d5 = Bt2(C5, Y5, At3, ut3)) + n9 | 0, n9 = y4 + e6 | 0, D5 = A8, Ft3 = A8 >>> 0 < d5 >>> 0 ? n9 + 1 | 0 : n9, e6 = Bt2(m5, G5, w5, L5), n9 = y4, A8 = (d5 = Bt2(h5, x5, q4, Et3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < d5 >>> 0 ? e6 + 1 | 0 : e6, d5 = n9 = g4(c5, 19), n9 = (Q5 = Bt2(n9, Dt3 = n9 >> 31, K5, wt3)) + A8 | 0, A8 = y4 + e6 | 0, A8 = n9 >>> 0 < Q5 >>> 0 ? A8 + 1 | 0 : A8, Q5 = Bt2(i4, Qt3, E5, H5), e6 = y4 + A8 | 0, e6 = (n9 = Q5 + n9 | 0) >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(nt3, kt3, J5, vt3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (Q5 = Bt2(l5, F5, u5, _t3)) + n9 | 0, n9 = y4 + e6 | 0, n9 = A8 >>> 0 < Q5 >>> 0 ? n9 + 1 | 0 : n9, Q5 = Bt2(k5, ct3, j5, Ct3), e6 = y4 + n9 | 0, e6 = (A8 = Q5 + A8 | 0) >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6, n9 = (Q5 = Bt2(f5, R5, b5, rt3)) + A8 | 0, A8 = y4 + e6 | 0, A8 = n9 >>> 0 < Q5 >>> 0 ? A8 + 1 | 0 : A8, Q5 = Bt2(p5, $3, z4, mt3), e6 = y4 + A8 | 0, e6 = (n9 = Q5 + n9 | 0) >>> 0 < Q5 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(B5, U5, C5, Y5), e6 = y4 + e6 | 0, Pt3 = n9 = A8 + n9 | 0, Q5 = n9 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, e6 = Bt2(e6 = g4(w5, 19), e6 >> 31, st3, It3), n9 = y4, A8 = Bt2(h5, x5, m5, G5), n9 = y4 + n9 | 0, n9 = (e6 = A8 + e6 | 0) >>> 0 < A8 >>> 0 ? n9 + 1 | 0 : n9, A8 = (d5 = Bt2(d5, Dt3, E5, H5)) + e6 | 0, e6 = y4 + n9 | 0, n9 = (i4 = Bt2(i4, Qt3, at3, yt3)) + A8 | 0, A8 = y4 + (A8 >>> 0 < d5 >>> 0 ? e6 + 1 | 0 : e6) | 0, A8 = n9 >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = Bt2(l5, F5, nt3, kt3), e6 = y4 + A8 | 0, e6 = (n9 = i4 + n9 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(M5, gt3, u5, _t3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (i4 = Bt2(f5, R5, k5, ct3)) + n9 | 0, n9 = y4 + e6 | 0, n9 = A8 >>> 0 < i4 >>> 0 ? n9 + 1 | 0 : n9, i4 = Bt2(b5, rt3, At3, ut3), e6 = y4 + n9 | 0, e6 = (A8 = i4 + A8 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, n9 = (i4 = Bt2(B5, U5, p5, $3)) + A8 | 0, A8 = y4 + e6 | 0, A8 = n9 >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, i4 = Bt2(C5, Y5, ot3, pt3), e6 = y4 + A8 | 0, d5 = n9 = i4 + n9 | 0, Qt3 = e6 = n9 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, Dt3 = n9 = n9 + 33554432 | 0, Jt3 = e6 = n9 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, A8 = e6 >> 26, e6 = (67108863 & e6) << 6 | n9 >>> 26, n9 = A8 + Q5 | 0, Q5 = i4 = e6 + Pt3 | 0, e6 = n9 = e6 >>> 0 > i4 >>> 0 ? n9 + 1 | 0 : n9, Pt3 = i4 = i4 + 16777216 | 0, i4 = (33554431 & (e6 = i4 >>> 0 < 16777216 ? e6 + 1 | 0 : e6)) << 7 | i4 >>> 25, e6 = (e6 >> 25) + Ft3 | 0, e6 = (n9 = i4 + D5 | 0) >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = n9, Ft3 = n9 = n9 + 33554432 | 0, i4 = e6 = n9 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[r11 + 56 >> 2] = A8 - (-67108864 & n9), e6 = Bt2(l5, F5, w5, L5), A8 = y4, n9 = (D5 = Bt2(h5, x5, J5, vt3)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < D5 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(c5, V3, j5, Ct3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(f5, R5, O5, tt3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, D5 = Bt2(W3, it3, z4, mt3), A8 = y4 + e6 | 0, A8 = (n9 = D5 + n9 | 0) >>> 0 < D5 >>> 0 ? A8 + 1 | 0 : A8, e6 = (D5 = Bt2(B5, U5, St3, ft3)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < D5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (D5 = Bt2(q4, Et3, Nt3, bt3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < D5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(dt3, Tt3 = dt3 >> 31, m5, G5), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(p5, $3, K5, wt3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, D5 = (A8 = n9) + (n9 = Bt2(E5, H5, C5, Y5)) | 0, A8 = y4 + e6 | 0, n9 = (e6 = o5 >> 26) + (n9 = n9 >>> 0 > D5 >>> 0 ? A8 + 1 | 0 : A8) | 0, S5 = A8 = (o5 = (67108863 & o5) << 6 | S5 >>> 26) + D5 | 0, e6 = n9 = A8 >>> 0 < o5 >>> 0 ? n9 + 1 | 0 : n9, D5 = A8 = A8 + 16777216 | 0, o5 = e6 = A8 >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[r11 + 76 >> 2] = S5 - (-33554432 & A8), e6 = Bt2(B5, U5, w5, L5), n9 = y4, S5 = Bt2(h5, x5, z4, mt3), A8 = y4 + n9 | 0, A8 = (e6 = S5 + e6 | 0) >>> 0 < S5 >>> 0 ? A8 + 1 | 0 : A8, S5 = Bt2(c5, V3, q4, Et3), n9 = y4 + A8 | 0, n9 = (e6 = S5 + e6 | 0) >>> 0 < S5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (S5 = Bt2(m5, G5, O5, tt3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < S5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(nt3, kt3, K5, wt3), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(E5, H5, u5, _t3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, n9 = (k5 = Bt2(k5, ct3, J5, vt3)) + n9 | 0, A8 = y4 + e6 | 0, e6 = (b5 = Bt2(l5, F5, b5, rt3)) + n9 | 0, n9 = y4 + (n9 >>> 0 < k5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = (p5 = Bt2(p5, $3, j5, Ct3)) + e6 | 0, e6 = y4 + (e6 >>> 0 < b5 >>> 0 ? n9 + 1 | 0 : n9) | 0, e6 = A8 >>> 0 < p5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(f5, R5, C5, Y5), e6 = y4 + e6 | 0, S5 = n9 = n9 + A8 | 0, e6 = (e6 = n9 >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6) + (n9 = i4 >> 26) | 0, p5 = i4 = S5 + (A8 = (67108863 & i4) << 6 | Ft3 >>> 26) | 0, e6 = A8 >>> 0 > i4 >>> 0 ? e6 + 1 | 0 : e6, b5 = n9 = i4 + 16777216 | 0, i4 = A8 = n9 >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[r11 + 60 >> 2] = p5 - (-33554432 & n9), e6 = Bt2(w5, L5, at3, yt3), A8 = y4, n9 = (p5 = Bt2(h5, x5, E5, H5)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < p5 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(l5, F5, c5, V3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, p5 = Bt2(O5, tt3, M5, gt3), A8 = y4 + e6 | 0, A8 = (n9 = p5 + n9 | 0) >>> 0 < p5 >>> 0 ? A8 + 1 | 0 : A8, e6 = (p5 = Bt2(f5, R5, W3, it3)) + n9 | 0, n9 = y4 + A8 | 0, n9 = e6 >>> 0 < p5 >>> 0 ? n9 + 1 | 0 : n9, A8 = (p5 = Bt2(At3, ut3, St3, ft3)) + e6 | 0, e6 = y4 + n9 | 0, e6 = A8 >>> 0 < p5 >>> 0 ? e6 + 1 | 0 : e6, n9 = A8, A8 = Bt2(B5, U5, Nt3, bt3), e6 = y4 + e6 | 0, e6 = (n9 = n9 + A8 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = n9, n9 = Bt2(ot3, pt3, dt3, Tt3), e6 = y4 + e6 | 0, e6 = n9 >>> 0 > (A8 = A8 + n9 | 0) >>> 0 ? e6 + 1 | 0 : e6, p5 = n9 = Ut3, n9 = (M5 = Bt2(n9, k5 = n9 >> 31, m5, G5)) + A8 | 0, A8 = y4 + e6 | 0, e6 = (C5 = Bt2(C5, Y5, st3, It3)) + n9 | 0, n9 = y4 + (n9 >>> 0 < M5 >>> 0 ? A8 + 1 | 0 : A8) | 0, A8 = e6 >>> 0 < C5 >>> 0 ? n9 + 1 | 0 : n9, n9 = e6, e6 = (e6 = o5 >> 25) + A8 | 0, e6 = (n9 = n9 + (o5 = (33554431 & o5) << 7 | D5 >>> 25) | 0) >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, A8 = n9, C5 = n9 = n9 + 33554432 | 0, o5 = e6 = n9 >>> 0 < 33554432 ? e6 + 1 | 0 : e6, a4[r11 + 80 >> 2] = A8 - (-67108864 & n9), n9 = i4 >> 25, A8 = (i4 = (33554431 & i4) << 7 | b5 >>> 25) + (Ht3 - (e6 = -67108864 & Ot3) | 0) | 0, e6 = n9 + (Lt3 - ((e6 >>> 0 > Ht3 >>> 0) + Yt3 | 0) | 0) | 0, e6 = A8 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, e6 = ((67108863 & (e6 = (n9 = A8 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6)) << 6 | n9 >>> 26) + (M5 = Mt3 - (-33554432 & Kt3) | 0) | 0, a4[r11 + 68 >> 2] = e6, a4[r11 + 64 >> 2] = A8 - (-67108864 & n9), e6 = Bt2(E5, H5, w5, L5), A8 = y4, n9 = (i4 = Bt2(h5, x5, K5, wt3)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = (i4 = Bt2(c5, V3, J5, vt3)) + n9 | 0, n9 = y4 + e6 | 0, n9 = A8 >>> 0 < i4 >>> 0 ? n9 + 1 | 0 : n9, e6 = (i4 = Bt2(l5, F5, O5, tt3)) + A8 | 0, A8 = y4 + n9 | 0, A8 = e6 >>> 0 < i4 >>> 0 ? A8 + 1 | 0 : A8, n9 = (i4 = Bt2(W3, it3, j5, Ct3)) + e6 | 0, e6 = y4 + A8 | 0, e6 = n9 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(f5, R5, St3, ft3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = Bt2(z4, mt3, Nt3, bt3), e6 = y4 + e6 | 0, e6 = (n9 = A8 + n9 | 0) >>> 0 < A8 >>> 0 ? e6 + 1 | 0 : e6, A8 = (i4 = Bt2(B5, U5, dt3, Tt3)) + n9 | 0, n9 = y4 + e6 | 0, n9 = A8 >>> 0 < i4 >>> 0 ? n9 + 1 | 0 : n9, i4 = (e6 = Bt2(p5, k5, q4, Et3)) + A8 | 0, A8 = y4 + n9 | 0, A8 = e6 >>> 0 > i4 >>> 0 ? A8 + 1 | 0 : A8, n9 = i4, i4 = Bt2(e6 = Gt3, e6 >> 31, m5, G5), e6 = y4 + A8 | 0, A8 = n9 = n9 + i4 | 0, e6 = (e6 = n9 >>> 0 < i4 >>> 0 ? e6 + 1 | 0 : e6) + (n9 = o5 >> 26) | 0, e6 = (A8 = A8 + (o5 = (67108863 & o5) << 6 | C5 >>> 26) | 0) >>> 0 < o5 >>> 0 ? e6 + 1 | 0 : e6, e6 = (n9 = A8 + 16777216 | 0) >>> 0 < 16777216 ? e6 + 1 | 0 : e6, a4[r11 + 84 >> 2] = A8 - (-33554432 & n9), o5 = Q5 - (-33554432 & Pt3) | 0, i4 = d5 - (A8 = -67108864 & Dt3) | 0, h5 = Qt3 - ((A8 >>> 0 > d5 >>> 0) + Jt3 | 0) | 0, e6 = Bt2((33554431 & (A8 = e6)) << 7 | n9 >>> 25, e6 >>= 25, 19, 0), n9 = y4 + h5 | 0, e6 = e6 >>> 0 > (A8 = e6 + i4 | 0) >>> 0 ? n9 + 1 | 0 : n9, e6 = ((67108863 & (e6 = (n9 = A8 + 33554432 | 0) >>> 0 < 33554432 ? e6 + 1 | 0 : e6)) << 6 | n9 >>> 26) + o5 | 0, a4[r11 + 52 >> 2] = e6, a4[r11 + 48 >> 2] = A8 - (-67108864 & n9), et2(t7, r11 + 48 | 0));
                              }
                              return I4 = r11 + 256 | 0, 0 | Rt3;
                            }, Yb: function(t7, e6) {
                              t7 |= 0;
                              var r11, n9 = 0;
                              return I4 = r11 = I4 + -64 | 0, ct2(r11, e6 |= 0, 32, 0), s4[0 | r11] = 248 & c4[0 | r11], s4[r11 + 31 | 0] = 63 & c4[r11 + 31 | 0] | 64, e6 = a4[r11 + 20 >> 2], n9 = a4[r11 + 16 >> 2], s4[t7 + 16 | 0] = n9, s4[t7 + 17 | 0] = n9 >>> 8, s4[t7 + 18 | 0] = n9 >>> 16, s4[t7 + 19 | 0] = n9 >>> 24, s4[t7 + 20 | 0] = e6, s4[t7 + 21 | 0] = e6 >>> 8, s4[t7 + 22 | 0] = e6 >>> 16, s4[t7 + 23 | 0] = e6 >>> 24, e6 = a4[r11 + 12 >> 2], n9 = a4[r11 + 8 >> 2], s4[t7 + 8 | 0] = n9, s4[t7 + 9 | 0] = n9 >>> 8, s4[t7 + 10 | 0] = n9 >>> 16, s4[t7 + 11 | 0] = n9 >>> 24, s4[t7 + 12 | 0] = e6, s4[t7 + 13 | 0] = e6 >>> 8, s4[t7 + 14 | 0] = e6 >>> 16, s4[t7 + 15 | 0] = e6 >>> 24, e6 = a4[r11 + 4 >> 2], n9 = a4[r11 >> 2], s4[0 | t7] = n9, s4[t7 + 1 | 0] = n9 >>> 8, s4[t7 + 2 | 0] = n9 >>> 16, s4[t7 + 3 | 0] = n9 >>> 24, s4[t7 + 4 | 0] = e6, s4[t7 + 5 | 0] = e6 >>> 8, s4[t7 + 6 | 0] = e6 >>> 16, s4[t7 + 7 | 0] = e6 >>> 24, e6 = a4[r11 + 28 >> 2], n9 = a4[r11 + 24 >> 2], s4[t7 + 24 | 0] = n9, s4[t7 + 25 | 0] = n9 >>> 8, s4[t7 + 26 | 0] = n9 >>> 16, s4[t7 + 27 | 0] = n9 >>> 24, s4[t7 + 28 | 0] = e6, s4[t7 + 29 | 0] = e6 >>> 8, s4[t7 + 30 | 0] = e6 >>> 16, s4[t7 + 31 | 0] = e6 >>> 24, oe2(r11, 64), I4 = r11 - -64 | 0, 0;
                            }, Zb: function() {
                              var t7, e6;
                              return I4 = t7 = I4 - 16 | 0, s4[t7 + 15 | 0] = 0, e6 = 0 | l4(35256, t7 + 15 | 0, 0), I4 = t7 + 16 | 0, 0 | e6;
                            }, _b: Ot2, $b: function(t7) {
                              var e6, r11 = 0, n9 = 0;
                              if (I4 = e6 = I4 - 16 | 0, (t7 |= 0) >>> 0 >= 2) {
                                for (r11 = (0 - t7 >>> 0) % (t7 >>> 0) | 0; s4[e6 + 15 | 0] = 0, r11 >>> 0 > (n9 = 0 | l4(35256, e6 + 15 | 0, 0)) >>> 0; )
                                  ;
                                r11 = (n9 >>> 0) % (t7 >>> 0) | 0;
                              }
                              return I4 = e6 + 16 | 0, 0 | r11;
                            }, ac: vt2, bc: function(t7, e6, r11) {
                              Wt2(t7 |= 0, e6 |= 0, 1024, r11 |= 0);
                            }, cc: ce2, dc: function() {
                              var t7 = 0, e6 = 0;
                              return (t7 = a4[9004]) && (t7 = a4[t7 + 20 >> 2]) && (e6 = 0 | Ie2[0 | t7]()), 0 | e6;
                            }, ec: function(t7, e6, r11) {
                              t7 |= 0, e6 |= 0;
                              var n9, A8 = 0, o5 = 0, a5 = 0;
                              if (I4 = n9 = I4 - 16 | 0, r11 |= 0)
                                f4(1240, 1100, 197, 1036), i3();
                              else {
                                if (e6)
                                  for (; s4[n9 + 15 | 0] = 0, o5 = t7 + A8 | 0, a5 = 0 | l4(35256, n9 + 15 | 0, 0), s4[0 | o5] = a5, (0 | e6) != (0 | (A8 = A8 + 1 | 0)); )
                                    ;
                                I4 = n9 + 16 | 0;
                              }
                            }, fc: function(t7, e6, r11, n9) {
                              t7 |= 0, r11 |= 0;
                              var A8 = 0, o5 = 0, a5 = 0;
                              if (!((n9 |= 0) >>> 0 > 2147483646 | n9 << 1 >>> 0 >= (e6 |= 0) >>> 0)) {
                                if (e6 = 0, n9) {
                                  for (; A8 = (e6 << 1) + t7 | 0, o5 = 15 & (a5 = c4[e6 + r11 | 0]), s4[A8 + 1 | 0] = 22272 + ((o5 << 8) + (o5 + 65526 & 55552) | 0) >>> 8, o5 = A8, A8 = a5 >>> 4 | 0, s4[0 | o5] = 87 + ((A8 + 65526 >>> 8 & 217) + A8 | 0), (0 | n9) != (0 | (e6 = e6 + 1 | 0)); )
                                    ;
                                  e6 = n9 << 1;
                                } else
                                  e6 = 0;
                                return s4[e6 + t7 | 0] = 0, 0 | t7;
                              }
                              Kt2(), i3();
                            }, gc: function(t7, e6, r11, n9, A8, i4, o5) {
                              t7 |= 0, e6 |= 0, r11 |= 0, A8 |= 0, i4 |= 0, o5 |= 0;
                              var h5 = 0, g5 = 0, u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0;
                              t:
                                if (n9 |= 0) {
                                  e: {
                                    r: {
                                      n: {
                                        A: {
                                          if (!A8) {
                                            for (g5 = 1, A8 = 0; ; ) {
                                              if (!(255 & ((d5 = (65526 + (u5 = (223 & (f5 = c4[r11 + h5 | 0])) - 55 & 255) ^ u5 + 65520) >>> 8 | 0) | (I5 = 65526 + (f5 ^= 48) >>> 8 | 0))))
                                                break n;
                                              if (e6 >>> 0 <= p5 >>> 0)
                                                break A;
                                              if (u5 = u5 & d5 | f5 & I5, 255 & l5 ? (s4[t7 + p5 | 0] = A8 | u5, p5 = p5 + 1 | 0) : A8 = u5 << 4, l5 ^= -1, (0 | (h5 = h5 + 1 | 0)) == (0 | n9))
                                                break;
                                            }
                                            h5 = n9;
                                            break n;
                                          }
                                          for (; ; ) {
                                            i: {
                                              o: {
                                                s: {
                                                  a: {
                                                    c: {
                                                      if (!(255 & ((f5 = (65526 + (u5 = (223 & (g5 = c4[r11 + h5 | 0])) - 55 & 255) ^ u5 + 65520) >>> 8 | 0) | (I5 = 65526 + (d5 = 48 ^ g5) >>> 8 | 0)))) {
                                                        if (255 & l5)
                                                          break r;
                                                        if (!At2(A8, g5))
                                                          break t;
                                                        if ((h5 = l5 = h5 + 1 | 0) >>> 0 < n9 >>> 0)
                                                          break c;
                                                        break t;
                                                      }
                                                      if (e6 >>> 0 <= p5 >>> 0)
                                                        break A;
                                                      if (g5 = u5 & f5 | d5 & I5, !(255 & l5))
                                                        break a;
                                                      s4[t7 + p5 | 0] = g5 | C5, p5 = p5 + 1 | 0;
                                                      break i;
                                                    }
                                                    for (; ; ) {
                                                      if (!(255 & ((f5 = (65526 + (u5 = (223 & (g5 = c4[r11 + h5 | 0])) - 55 & 255) ^ u5 + 65520) >>> 8 | 0) | (I5 = 65526 + (d5 = 48 ^ g5) >>> 8 | 0)))) {
                                                        if (!At2(A8, g5))
                                                          break t;
                                                        if ((h5 = h5 + 1 | 0) >>> 0 < n9 >>> 0)
                                                          continue;
                                                        break s;
                                                      }
                                                      break;
                                                    }
                                                    if (e6 >>> 0 <= p5 >>> 0)
                                                      break o;
                                                    g5 = u5 & f5 | d5 & I5;
                                                  }
                                                  C5 = g5 << 4, l5 = 0;
                                                  break i;
                                                }
                                                h5 = n9 >>> 0 > l5 >>> 0 ? n9 : l5;
                                                break t;
                                              }
                                              l5 = 0;
                                              break A;
                                            }
                                            if (l5 ^= -1, g5 = 1, !((h5 = h5 + 1 | 0) >>> 0 < n9 >>> 0))
                                              break;
                                          }
                                          break n;
                                        }
                                        a4[9005] = 68, g5 = 0;
                                      }
                                      if (!(255 & l5))
                                        break e;
                                    }
                                    a4[9005] = 28, y5 = -1, h5 = h5 - 1 | 0, p5 = 0;
                                    break t;
                                  }
                                  g5 || (p5 = 0, y5 = -1);
                                }
                              return o5 ? a4[o5 >> 2] = r11 + h5 : (0 | n9) != (0 | h5) && (a4[9005] = 28, y5 = -1), i4 && (a4[i4 >> 2] = p5), 0 | y5;
                            }, hc: function(t7, e6) {
                              t7 |= 0;
                              var r11 = 0;
                              return 1 != (-7 & (e6 |= 0)) && (Kt2(), i3()), 1 + ((3 & (r11 = (r11 = t7) + g4(t7 = (t7 >>> 0) / 3 | 0, -3) | 0) ? 2 & e6 ? r11 + 1 | 0 : 4 : 0) + (t7 << 2) | 0) | 0;
                            }, ic: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0;
                              var o5 = 0, a5 = 0, h5 = 0, u5 = 0, l5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0;
                              t: {
                                e: {
                                  r: {
                                    n: {
                                      A: {
                                        i: {
                                          o: {
                                            if (1 == (-7 & (A8 |= 0)) && (l5 = (a5 = (n9 >>> 0) / 3 | 0) << 2, (a5 = g4(a5, -3) + n9 | 0) && (l5 = 2 & A8 ? (2 | l5) + (a5 >>> 1 | 0) | 0 : l5 + 4 | 0), !(e6 >>> 0 <= l5 >>> 0))) {
                                              if (!(4 & A8)) {
                                                if (!n9) {
                                                  A8 = 0;
                                                  break n;
                                                }
                                                A8 = 0;
                                                break o;
                                              }
                                              if (!n9) {
                                                A8 = 0;
                                                break n;
                                              }
                                              for (A8 = 0; ; ) {
                                                for (d5 = (I5 = c4[r11 + p5 | 0]) | d5 << 8, a5 = A8, A8 = 1 + ((((u5 |= 8) - 6 >>> 0) / 6 | 0) + A8 | 0) | 0; y5 = 65510 + (h5 = d5 >>> (u5 = (o5 = u5) - 6 | 0) & 63) >>> 8 | 0, C5 = h5 + 65484 >>> 8 | 0, s4[t7 + a5 | 0] = ~(1 + (16321 ^ h5)) >>> 8 & 45 | h5 + 252 & h5 + 65474 >>> 8 & ~C5 | ~(h5 + 32705) >>> 8 & 95 | y5 & h5 + 65 | C5 & h5 + 71 & ~y5, (0 | (a5 = a5 + 1 | 0)) != (0 | A8); )
                                                  ;
                                                if ((0 | (p5 = p5 + 1 | 0)) == (0 | n9))
                                                  break;
                                              }
                                              if (!u5)
                                                break A;
                                              a5 = (n9 = 65510 + (o5 = I5 << 12 - o5 & 63) >>> 8 | 0) & o5 + 65, u5 = o5 + 252 & o5 + 65474 >>> 8 & ~(r11 = o5 + 65484 >>> 8 | 0), n9 = r11 & o5 + 71 & ~n9, p5 = o5 + 32705 | 0, d5 = 95, r11 = ~(1 + (16321 ^ o5)) >>> 8 & 45;
                                              break i;
                                            }
                                            Kt2(), i3();
                                          }
                                          for (; ; ) {
                                            for (d5 = (I5 = c4[r11 + p5 | 0]) | d5 << 8, a5 = A8, A8 = 1 + ((((u5 |= 8) - 6 >>> 0) / 6 | 0) + A8 | 0) | 0; y5 = 65510 + (h5 = d5 >>> (u5 = (o5 = u5) - 6 | 0) & 63) >>> 8 | 0, C5 = h5 + 65484 >>> 8 | 0, s4[t7 + a5 | 0] = ~(1 + (16321 ^ h5)) >>> 8 & 43 | h5 + 252 & h5 + 65474 >>> 8 & ~C5 | ~(h5 + 16321) >>> 8 & 47 | y5 & h5 + 65 | C5 & h5 + 71 & ~y5, (0 | (a5 = a5 + 1 | 0)) != (0 | A8); )
                                              ;
                                            if ((0 | (p5 = p5 + 1 | 0)) == (0 | n9))
                                              break;
                                          }
                                          if (!u5)
                                            break A;
                                          a5 = (n9 = 65510 + (o5 = I5 << 12 - o5 & 63) >>> 8 | 0) & o5 + 65, u5 = o5 + 252 & o5 + 65474 >>> 8 & ~(r11 = o5 + 65484 >>> 8 | 0), n9 = r11 & o5 + 71 & ~n9, p5 = o5 + 16321 | 0, d5 = 47, r11 = ~(1 + (16321 ^ o5)) >>> 8 & 43;
                                        }
                                        s4[t7 + A8 | 0] = r11 | ~p5 >>> 8 & d5 | a5 | u5 | n9, A8 = A8 + 1 | 0;
                                      }
                                      if (A8 >>> 0 > l5 >>> 0)
                                        break r;
                                    }
                                    if (A8 >>> 0 < l5 >>> 0)
                                      break e;
                                    l5 = A8;
                                    break t;
                                  }
                                  f4(1048, 1126, 231, 1319), i3();
                                }
                                xt2(t7 + A8 | 0, 61, l5 - A8 | 0);
                              }
                              return xt2(t7 + l5 | 0, 0, (e6 >>> 0 > (r11 = l5 + 1 | 0) >>> 0 ? e6 : r11) - l5 | 0), 0 | t7;
                            }, jc: function(t7, e6, r11, n9, A8, o5, h5, g5) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0, A8 |= 0, o5 |= 0, h5 |= 0;
                              var u5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, I5 = 0, y5 = 0, C5 = 0;
                              t: {
                                e: {
                                  r: {
                                    n: {
                                      A: {
                                        i: {
                                          o: {
                                            s: {
                                              a: {
                                                c: {
                                                  h: {
                                                    if (1 == (-7 & (g5 |= 0))) {
                                                      if (f5 = 0, !n9)
                                                        break s;
                                                      if (4 & g5)
                                                        break h;
                                                      for (; ; ) {
                                                        f5 = l5;
                                                        g: {
                                                          u: {
                                                            l: {
                                                              f: {
                                                                for (; ; ) {
                                                                  if (u5 = (u5 = (p5 = s4[r11 + f5 | 0]) - 65 | 0) & (~(90 - p5) & ~u5) >>> 8 & 255 | p5 + 4 & (~(p5 + 65488) & ~(57 - p5)) >>> 8 & 255 | p5 + 185 & (~(p5 + 65439) & ~(122 - p5)) >>> 8 & 255 | ~(1 + (16336 ^ p5)) >>> 8 & 63 | ~(1 + (16340 ^ p5)) >>> 8 & 62, 255 != (0 | (u5 |= (u5 - 1 & 1 + (65470 ^ p5)) >>> 8 & 255)))
                                                                    break f;
                                                                  if (u5 = 0, !A8)
                                                                    break a;
                                                                  if (!At2(A8, p5))
                                                                    break;
                                                                  if ((f5 = f5 + 1 | 0) >>> 0 >= n9 >>> 0)
                                                                    break l;
                                                                }
                                                                l5 = f5;
                                                                break a;
                                                              }
                                                              if (y5 = u5 + (y5 << 6) | 0, d5 >>> 0 > 1)
                                                                break u;
                                                              d5 = d5 + 6 | 0;
                                                              break g;
                                                            }
                                                            l5 = (t7 = l5 + 1 | 0) >>> 0 < n9 >>> 0 ? n9 : t7;
                                                            break a;
                                                          }
                                                          if (d5 = d5 - 2 | 0, e6 >>> 0 <= I5 >>> 0)
                                                            break c;
                                                          s4[t7 + I5 | 0] = y5 >>> d5, I5 = I5 + 1 | 0;
                                                        }
                                                        if (u5 = 0, !((l5 = f5 + 1 | 0) >>> 0 < n9 >>> 0))
                                                          break;
                                                      }
                                                      break a;
                                                    }
                                                    Kt2(), i3();
                                                  }
                                                  h:
                                                    for (; ; ) {
                                                      for (f5 = l5; ; ) {
                                                        g: {
                                                          if (u5 = (u5 = (p5 = s4[r11 + f5 | 0]) - 65 | 0) & (~(90 - p5) & ~u5) >>> 8 & 255 | p5 + 4 & (~(p5 + 65488) & ~(57 - p5)) >>> 8 & 255 | p5 + 185 & (~(p5 + 65439) & ~(122 - p5)) >>> 8 & 255 | ~(1 + (16288 ^ p5)) >>> 8 & 63 | ~(1 + (16338 ^ p5)) >>> 8 & 62, 255 == (0 | (u5 |= (u5 - 1 & 1 + (65470 ^ p5)) >>> 8 & 255))) {
                                                            if (u5 = 0, !A8)
                                                              break a;
                                                            if (At2(A8, p5))
                                                              break g;
                                                            l5 = f5;
                                                            break a;
                                                          }
                                                          if (y5 = u5 + (y5 << 6) | 0, d5 >>> 0 < 2)
                                                            d5 = d5 + 6 | 0;
                                                          else {
                                                            if (d5 = d5 - 2 | 0, e6 >>> 0 <= I5 >>> 0)
                                                              break c;
                                                            s4[t7 + I5 | 0] = y5 >>> d5, I5 = I5 + 1 | 0;
                                                          }
                                                          if (u5 = 0, (l5 = f5 + 1 | 0) >>> 0 < n9 >>> 0)
                                                            continue h;
                                                          break a;
                                                        }
                                                        if (!((f5 = f5 + 1 | 0) >>> 0 < n9 >>> 0))
                                                          break;
                                                      }
                                                      break;
                                                    }
                                                  l5 = (t7 = l5 + 1 | 0) >>> 0 < n9 >>> 0 ? n9 : t7;
                                                  break a;
                                                }
                                                l5 = f5, a4[9005] = 68, u5 = 1;
                                              }
                                              if (d5 >>> 0 > 4)
                                                break o;
                                              f5 = l5;
                                            }
                                            if (t7 = f5, e6 = -1, u5) {
                                              l5 = t7;
                                              break t;
                                            }
                                            if (~(-1 << d5) & y5) {
                                              l5 = t7;
                                              break t;
                                            }
                                            if (2 & g5) {
                                              g5 = t7;
                                              break A;
                                            }
                                            if (d5 >>> 0 < 2) {
                                              g5 = t7;
                                              break A;
                                            }
                                            if (l5 = t7 >>> 0 > n9 >>> 0 ? t7 : n9, f5 = d5 >>> 1 | 0, !A8)
                                              break i;
                                            for (g5 = t7; ; ) {
                                              if ((0 | g5) == (0 | l5)) {
                                                u5 = 68;
                                                break n;
                                              }
                                              if (61 != (0 | (t7 = s4[r11 + g5 | 0]))) {
                                                if (!At2(A8, t7)) {
                                                  u5 = 28, l5 = g5;
                                                  break n;
                                                }
                                              } else
                                                f5 = f5 - 1 | 0;
                                              if (g5 = g5 + 1 | 0, !f5)
                                                break;
                                            }
                                            break A;
                                          }
                                          e6 = -1;
                                          break t;
                                        }
                                        if (u5 = 68, t7 >>> 0 >= n9 >>> 0)
                                          break n;
                                        if (61 != c4[t7 + r11 | 0]) {
                                          l5 = t7, u5 = 28;
                                          break n;
                                        }
                                        if (g5 = t7 + f5 | 0, 1 != (0 | f5)) {
                                          if ((0 | (d5 = t7 + 1 | 0)) == (0 | l5))
                                            break n;
                                          if (61 != c4[r11 + d5 | 0]) {
                                            l5 = d5, u5 = 28;
                                            break n;
                                          }
                                          if (2 != (0 | f5)) {
                                            if ((0 | (t7 = t7 + 2 | 0)) == (0 | l5))
                                              break n;
                                            if (u5 = 28, l5 = t7, 61 != c4[t7 + r11 | 0])
                                              break n;
                                          }
                                        }
                                      }
                                      if (e6 = 0, A8)
                                        break r;
                                      break e;
                                    }
                                    a4[9005] = u5;
                                    break t;
                                  }
                                  if (!(n9 >>> 0 <= g5 >>> 0)) {
                                    for (; ; ) {
                                      if (!At2(A8, s4[r11 + g5 | 0]))
                                        break e;
                                      if ((0 | (g5 = g5 + 1 | 0)) == (0 | n9))
                                        break;
                                    }
                                    g5 = n9;
                                  }
                                }
                                l5 = g5, C5 = I5;
                              }
                              return h5 ? a4[h5 >> 2] = r11 + l5 : (0 | n9) != (0 | l5) && (a4[9005] = 28, e6 = -1), o5 && (a4[o5 >> 2] = C5), 0 | e6;
                            }, kc: function() {
                              var t7 = 0;
                              return a4[9136] ? t7 = 1 : (Ot2(), vt2(36528, 16), a4[9136] = 1, t7 = 0), 0 | t7;
                            }, lc: function(t7, e6, r11, n9, A8) {
                              t7 |= 0, e6 |= 0, r11 |= 0, A8 |= 0;
                              var o5, h5 = 0, g5 = 0, u5 = 0;
                              I4 = o5 = I4 - 16 | 0;
                              t: {
                                if (n9 |= 0) {
                                  if ((h5 = n9 - 1 | 0) & n9 ? (g5 = ~r11, h5 = h5 - ((r11 >>> 0) % (n9 >>> 0) | 0) | 0) : h5 &= g5 = ~r11, g5 >>> 0 <= h5 >>> 0)
                                    break t;
                                  if (g5 = -1, !((r11 = r11 + h5 | 0) >>> 0 >= A8 >>> 0))
                                    for (t7 && (a4[t7 >> 2] = r11 + 1), t7 = e6 + r11 | 0, g5 = 0, s4[o5 + 15 | 0] = 0, r11 = 0; A8 = e6 = t7 - r11 | 0, u5 = c4[0 | e6] & c4[o5 + 15 | 0], e6 = (r11 ^ h5) - 1 >>> 24 | 0, s4[0 | A8] = u5 | 128 & e6, s4[o5 + 15 | 0] = e6 | c4[o5 + 15 | 0], (0 | n9) != (0 | (r11 = r11 + 1 | 0)); )
                                      ;
                                } else
                                  g5 = -1;
                                return I4 = o5 + 16 | 0, 0 | g5;
                              }
                              Kt2(), i3();
                            }, mc: function(t7, e6, r11, n9) {
                              t7 |= 0, e6 |= 0, r11 |= 0, n9 |= 0;
                              var A8, i4 = 0, o5 = 0, s5 = 0, h5 = 0, g5 = 0;
                              if (a4[12 + (A8 = I4 - 16 | 0) >> 2] = 0, n9 - 1 >>> 0 < r11 >>> 0) {
                                for (g5 = (i4 = r11 - 1 | 0) + e6 | 0, r11 = 0, e6 = 0; h5 = ((128 ^ (o5 = c4[g5 - r11 | 0])) - 1 & a4[A8 + 12 >> 2] - 1 & s5 - 1) >>> 8 & 1, a4[A8 + 12 >> 2] = a4[A8 + 12 >> 2] | 0 - h5 & r11, e6 |= h5, s5 |= o5, (0 | n9) != (0 | (r11 = r11 + 1 | 0)); )
                                  ;
                                a4[t7 >> 2] = i4 - a4[A8 + 12 >> 2], t7 = (255 & e6) - 1 | 0;
                              } else
                                t7 = -1;
                              return 0 | t7;
                            }, nc: function() {
                              return 1312;
                            }, oc: function() {
                              return 26;
                            }, pc: le2, qc: le2, rc: function(t7) {
                              var e6, r11 = 0, n9 = 0, A8 = 0, i4 = 0, o5 = 0, s5 = 0, g5 = 0, l5 = 0, f5 = 0, p5 = 0, d5 = 0, y5 = 0;
                              I4 = e6 = I4 - 16 | 0;
                              t: {
                                e: {
                                  r: {
                                    n: {
                                      A: {
                                        i: {
                                          o: {
                                            s: {
                                              a: {
                                                c: {
                                                  h: {
                                                    g: {
                                                      u: {
                                                        l: {
                                                          if ((t7 |= 0) >>> 0 <= 244) {
                                                            if (3 & (r11 = (s5 = a4[9006]) >>> (n9 = (g5 = t7 >>> 0 < 11 ? 16 : t7 + 11 & -8) >>> 3 | 0) | 0)) {
                                                              r11 = 36064 + (t7 = (n9 = n9 + (1 & ~r11) | 0) << 3) | 0, A8 = a4[t7 + 36072 >> 2], (0 | r11) != (0 | (t7 = a4[A8 + 8 >> 2])) ? (a4[t7 + 12 >> 2] = r11, a4[r11 + 8 >> 2] = t7) : (d5 = 36024, y5 = Gt2(-2, n9) & s5, a4[d5 >> 2] = y5), t7 = A8 + 8 | 0, r11 = n9 << 3, a4[A8 + 4 >> 2] = 3 | r11, a4[4 + (r11 = r11 + A8 | 0) >> 2] = 1 | a4[r11 + 4 >> 2];
                                                              break t;
                                                            }
                                                            if ((p5 = a4[9008]) >>> 0 >= g5 >>> 0)
                                                              break l;
                                                            if (r11) {
                                                              r11 = 36064 + (t7 = (A8 = qt2((0 - (t7 = 2 << n9) | t7) & r11 << n9)) << 3) | 0, i4 = a4[t7 + 36072 >> 2], (0 | r11) != (0 | (t7 = a4[i4 + 8 >> 2])) ? (a4[t7 + 12 >> 2] = r11, a4[r11 + 8 >> 2] = t7) : (s5 = Gt2(-2, A8) & s5, a4[9006] = s5), a4[i4 + 4 >> 2] = 3 | g5, A8 = (t7 = A8 << 3) - g5 | 0, a4[4 + (n9 = i4 + g5 | 0) >> 2] = 1 | A8, a4[t7 + i4 >> 2] = A8, p5 && (r11 = 36064 + (-8 & p5) | 0, o5 = a4[9011], (t7 = 1 << (p5 >>> 3)) & s5 ? t7 = a4[r11 + 8 >> 2] : (a4[9006] = t7 | s5, t7 = r11), a4[r11 + 8 >> 2] = o5, a4[t7 + 12 >> 2] = o5, a4[o5 + 12 >> 2] = r11, a4[o5 + 8 >> 2] = t7), t7 = i4 + 8 | 0, a4[9011] = n9, a4[9008] = A8;
                                                              break t;
                                                            }
                                                            if (!(f5 = a4[9007]))
                                                              break l;
                                                            for (n9 = a4[36328 + (qt2(f5) << 2) >> 2], o5 = (-8 & a4[n9 + 4 >> 2]) - g5 | 0, r11 = n9; (t7 = a4[r11 + 16 >> 2]) || (t7 = a4[r11 + 20 >> 2]); )
                                                              o5 = (A8 = (r11 = (-8 & a4[t7 + 4 >> 2]) - g5 | 0) >>> 0 < o5 >>> 0) ? r11 : o5, n9 = A8 ? t7 : n9, r11 = t7;
                                                            if (l5 = a4[n9 + 24 >> 2], (0 | (A8 = a4[n9 + 12 >> 2])) != (0 | n9)) {
                                                              t7 = a4[n9 + 8 >> 2], a4[t7 + 12 >> 2] = A8, a4[A8 + 8 >> 2] = t7;
                                                              break e;
                                                            }
                                                            if (!(t7 = a4[(r11 = n9 + 20 | 0) >> 2])) {
                                                              if (!(t7 = a4[n9 + 16 >> 2]))
                                                                break u;
                                                              r11 = n9 + 16 | 0;
                                                            }
                                                            for (; i4 = r11, A8 = t7, (t7 = a4[(r11 = t7 + 20 | 0) >> 2]) || (r11 = A8 + 16 | 0, t7 = a4[A8 + 16 >> 2]); )
                                                              ;
                                                            a4[i4 >> 2] = 0;
                                                            break e;
                                                          }
                                                          if (g5 = -1, !(t7 >>> 0 > 4294967231) && (g5 = -8 & (t7 = t7 + 11 | 0), f5 = a4[9007])) {
                                                            o5 = 0 - g5 | 0, s5 = 0, g5 >>> 0 < 256 || (s5 = 31, g5 >>> 0 > 16777215 || (s5 = 62 + ((g5 >>> 38 - (t7 = u4(t7 >>> 8 | 0)) & 1) - (t7 << 1) | 0) | 0));
                                                            f: {
                                                              p: {
                                                                if (r11 = a4[36328 + (s5 << 2) >> 2])
                                                                  for (t7 = 0, n9 = g5 << (31 != (0 | s5) ? 25 - (s5 >>> 1 | 0) : 0); ; ) {
                                                                    if (!((i4 = (-8 & a4[r11 + 4 >> 2]) - g5 | 0) >>> 0 >= o5 >>> 0 || (A8 = r11, o5 = i4, i4))) {
                                                                      o5 = 0, t7 = r11;
                                                                      break p;
                                                                    }
                                                                    if (i4 = a4[r11 + 20 >> 2], r11 = a4[16 + ((n9 >>> 29 & 4) + r11 | 0) >> 2], t7 = i4 ? (0 | i4) == (0 | r11) ? t7 : i4 : t7, n9 <<= 1, !r11)
                                                                      break;
                                                                  }
                                                                else
                                                                  t7 = 0;
                                                                if (!(t7 | A8)) {
                                                                  if (A8 = 0, !(t7 = (0 - (t7 = 2 << s5) | t7) & f5))
                                                                    break l;
                                                                  t7 = a4[36328 + (qt2(t7) << 2) >> 2];
                                                                }
                                                                if (!t7)
                                                                  break f;
                                                              }
                                                              for (; o5 = (n9 = (r11 = (-8 & a4[t7 + 4 >> 2]) - g5 | 0) >>> 0 < o5 >>> 0) ? r11 : o5, A8 = n9 ? t7 : A8, t7 = (r11 = a4[t7 + 16 >> 2]) || a4[t7 + 20 >> 2]; )
                                                                ;
                                                            }
                                                            if (!(!A8 | a4[9008] - g5 >>> 0 <= o5 >>> 0)) {
                                                              if (s5 = a4[A8 + 24 >> 2], (0 | A8) != (0 | (n9 = a4[A8 + 12 >> 2]))) {
                                                                t7 = a4[A8 + 8 >> 2], a4[t7 + 12 >> 2] = n9, a4[n9 + 8 >> 2] = t7;
                                                                break r;
                                                              }
                                                              if (!(t7 = a4[(r11 = A8 + 20 | 0) >> 2])) {
                                                                if (!(t7 = a4[A8 + 16 >> 2]))
                                                                  break g;
                                                                r11 = A8 + 16 | 0;
                                                              }
                                                              for (; i4 = r11, n9 = t7, (t7 = a4[(r11 = t7 + 20 | 0) >> 2]) || (r11 = n9 + 16 | 0, t7 = a4[n9 + 16 >> 2]); )
                                                                ;
                                                              a4[i4 >> 2] = 0;
                                                              break r;
                                                            }
                                                          }
                                                        }
                                                        if ((t7 = a4[9008]) >>> 0 >= g5 >>> 0) {
                                                          A8 = a4[9011], (r11 = t7 - g5 | 0) >>> 0 >= 16 ? (a4[4 + (n9 = A8 + g5 | 0) >> 2] = 1 | r11, a4[t7 + A8 >> 2] = r11, a4[A8 + 4 >> 2] = 3 | g5) : (a4[A8 + 4 >> 2] = 3 | t7, a4[4 + (t7 = t7 + A8 | 0) >> 2] = 1 | a4[t7 + 4 >> 2], n9 = 0, r11 = 0), a4[9008] = r11, a4[9011] = n9, t7 = A8 + 8 | 0;
                                                          break t;
                                                        }
                                                        if ((l5 = a4[9009]) >>> 0 > g5 >>> 0) {
                                                          r11 = l5 - g5 | 0, a4[9009] = r11, t7 = (n9 = a4[9012]) + g5 | 0, a4[9012] = t7, a4[t7 + 4 >> 2] = 1 | r11, a4[n9 + 4 >> 2] = 3 | g5, t7 = n9 + 8 | 0;
                                                          break t;
                                                        }
                                                        if (t7 = 0, f5 = g5 + 47 | 0, a4[9124] ? n9 = a4[9126] : (a4[9127] = -1, a4[9128] = -1, a4[9125] = 4096, a4[9126] = 4096, a4[9124] = e6 + 12 & -16 ^ 1431655768, a4[9129] = 0, a4[9117] = 0, n9 = 4096), (r11 = (i4 = f5 + n9 | 0) & (o5 = 0 - n9 | 0)) >>> 0 <= g5 >>> 0)
                                                          break t;
                                                        if ((A8 = a4[9116]) && A8 >>> 0 < (s5 = (n9 = a4[9114]) + r11 | 0) >>> 0 | n9 >>> 0 >= s5 >>> 0)
                                                          break t;
                                                        l: {
                                                          if (!(4 & c4[36468])) {
                                                            f: {
                                                              p: {
                                                                d: {
                                                                  I: {
                                                                    if (A8 = a4[9012])
                                                                      for (t7 = 36472; ; ) {
                                                                        if ((n9 = a4[t7 >> 2]) >>> 0 <= A8 >>> 0 & A8 >>> 0 < n9 + a4[t7 + 4 >> 2] >>> 0)
                                                                          break I;
                                                                        if (!(t7 = a4[t7 + 8 >> 2]))
                                                                          break;
                                                                      }
                                                                    if (-1 == (0 | (n9 = Qt2(0))))
                                                                      break f;
                                                                    if (s5 = r11, (t7 = (A8 = a4[9125]) - 1 | 0) & n9 && (s5 = (r11 - n9 | 0) + (t7 + n9 & 0 - A8) | 0), s5 >>> 0 <= g5 >>> 0)
                                                                      break f;
                                                                    if ((A8 = a4[9116]) && A8 >>> 0 < (o5 = (t7 = a4[9114]) + s5 | 0) >>> 0 | t7 >>> 0 >= o5 >>> 0)
                                                                      break f;
                                                                    if ((0 | n9) != (0 | (t7 = Qt2(s5))))
                                                                      break d;
                                                                    break l;
                                                                  }
                                                                  if ((0 | (n9 = Qt2(s5 = o5 & i4 - l5))) == (a4[t7 >> 2] + a4[t7 + 4 >> 2] | 0))
                                                                    break p;
                                                                  t7 = n9;
                                                                }
                                                                if (-1 == (0 | t7))
                                                                  break f;
                                                                if (g5 + 48 >>> 0 <= s5 >>> 0) {
                                                                  n9 = t7;
                                                                  break l;
                                                                }
                                                                if (-1 == (0 | Qt2(n9 = (n9 = a4[9126]) + (f5 - s5 | 0) & 0 - n9)))
                                                                  break f;
                                                                s5 = n9 + s5 | 0, n9 = t7;
                                                                break l;
                                                              }
                                                              if (-1 != (0 | n9))
                                                                break l;
                                                            }
                                                            a4[9117] = 4 | a4[9117];
                                                          }
                                                          if (-1 == (0 | (n9 = Qt2(r11))) | -1 == (0 | (t7 = Qt2(0))) | t7 >>> 0 <= n9 >>> 0)
                                                            break a;
                                                          if ((s5 = t7 - n9 | 0) >>> 0 <= g5 + 40 >>> 0)
                                                            break a;
                                                        }
                                                        t7 = a4[9114] + s5 | 0, a4[9114] = t7, t7 >>> 0 > h4[9115] && (a4[9115] = t7);
                                                        l: {
                                                          if (i4 = a4[9012]) {
                                                            for (t7 = 36472; ; ) {
                                                              if (((A8 = a4[t7 >> 2]) + (r11 = a4[t7 + 4 >> 2]) | 0) == (0 | n9))
                                                                break l;
                                                              if (!(t7 = a4[t7 + 8 >> 2]))
                                                                break;
                                                            }
                                                            break h;
                                                          }
                                                          for ((t7 = a4[9010]) >>> 0 <= n9 >>> 0 && t7 || (a4[9010] = n9), t7 = 0, a4[9119] = s5, a4[9118] = n9, a4[9014] = -1, a4[9015] = a4[9124], a4[9121] = 0; r11 = 36064 + (A8 = t7 << 3) | 0, a4[A8 + 36072 >> 2] = r11, a4[A8 + 36076 >> 2] = r11, 32 != (0 | (t7 = t7 + 1 | 0)); )
                                                            ;
                                                          r11 = (A8 = s5 - 40 | 0) - (t7 = -8 - n9 & 7) | 0, a4[9009] = r11, t7 = t7 + n9 | 0, a4[9012] = t7, a4[t7 + 4 >> 2] = 1 | r11, a4[4 + (n9 + A8 | 0) >> 2] = 40, a4[9013] = a4[9128];
                                                          break c;
                                                        }
                                                        if (8 & a4[t7 + 12 >> 2] | n9 >>> 0 <= i4 >>> 0 | A8 >>> 0 > i4 >>> 0)
                                                          break h;
                                                        a4[t7 + 4 >> 2] = r11 + s5, n9 = (t7 = -8 - i4 & 7) + i4 | 0, a4[9012] = n9, t7 = (r11 = a4[9009] + s5 | 0) - t7 | 0, a4[9009] = t7, a4[n9 + 4 >> 2] = 1 | t7, a4[4 + (r11 + i4 | 0) >> 2] = 40, a4[9013] = a4[9128];
                                                        break c;
                                                      }
                                                      A8 = 0;
                                                      break e;
                                                    }
                                                    n9 = 0;
                                                    break r;
                                                  }
                                                  h4[9010] > n9 >>> 0 && (a4[9010] = n9), r11 = n9 + s5 | 0, t7 = 36472;
                                                  h: {
                                                    g: {
                                                      u: {
                                                        for (; ; ) {
                                                          if ((0 | r11) != a4[t7 >> 2]) {
                                                            if (t7 = a4[t7 + 8 >> 2])
                                                              continue;
                                                            break u;
                                                          }
                                                          break;
                                                        }
                                                        if (!(8 & c4[t7 + 12 | 0]))
                                                          break g;
                                                      }
                                                      for (t7 = 36472; ; ) {
                                                        if ((r11 = a4[t7 >> 2]) >>> 0 <= i4 >>> 0 && (o5 = r11 + a4[t7 + 4 >> 2] | 0) >>> 0 > i4 >>> 0)
                                                          break h;
                                                        t7 = a4[t7 + 8 >> 2];
                                                      }
                                                    }
                                                    if (a4[t7 >> 2] = n9, a4[t7 + 4 >> 2] = a4[t7 + 4 >> 2] + s5, a4[4 + (f5 = (-8 - n9 & 7) + n9 | 0) >> 2] = 3 | g5, t7 = (s5 = r11 + (-8 - r11 & 7) | 0) - (l5 = g5 + f5 | 0) | 0, (0 | i4) == (0 | s5)) {
                                                      a4[9012] = l5, t7 = a4[9009] + t7 | 0, a4[9009] = t7, a4[l5 + 4 >> 2] = 1 | t7;
                                                      break n;
                                                    }
                                                    if (a4[9011] == (0 | s5)) {
                                                      a4[9011] = l5, t7 = a4[9008] + t7 | 0, a4[9008] = t7, a4[l5 + 4 >> 2] = 1 | t7, a4[t7 + l5 >> 2] = t7;
                                                      break n;
                                                    }
                                                    if (1 != (3 & (o5 = a4[s5 + 4 >> 2])))
                                                      break A;
                                                    if (i4 = -8 & o5, o5 >>> 0 <= 255) {
                                                      if ((0 | (n9 = a4[s5 + 12 >> 2])) == (0 | (r11 = a4[s5 + 8 >> 2]))) {
                                                        d5 = 36024, y5 = a4[9006] & Gt2(-2, o5 >>> 3 | 0), a4[d5 >> 2] = y5;
                                                        break i;
                                                      }
                                                      a4[r11 + 12 >> 2] = n9, a4[n9 + 8 >> 2] = r11;
                                                      break i;
                                                    }
                                                    if (g5 = a4[s5 + 24 >> 2], (0 | s5) != (0 | (n9 = a4[s5 + 12 >> 2]))) {
                                                      r11 = a4[s5 + 8 >> 2], a4[r11 + 12 >> 2] = n9, a4[n9 + 8 >> 2] = r11;
                                                      break o;
                                                    }
                                                    if (!(o5 = a4[(r11 = s5 + 20 | 0) >> 2])) {
                                                      if (!(o5 = a4[s5 + 16 >> 2]))
                                                        break s;
                                                      r11 = s5 + 16 | 0;
                                                    }
                                                    for (; A8 = r11, (o5 = a4[(r11 = (n9 = o5) + 20 | 0) >> 2]) || (r11 = n9 + 16 | 0, o5 = a4[n9 + 16 >> 2]); )
                                                      ;
                                                    a4[A8 >> 2] = 0;
                                                    break o;
                                                  }
                                                  for (r11 = (A8 = s5 - 40 | 0) - (t7 = -8 - n9 & 7) | 0, a4[9009] = r11, t7 = t7 + n9 | 0, a4[9012] = t7, a4[t7 + 4 >> 2] = 1 | r11, a4[4 + (n9 + A8 | 0) >> 2] = 40, a4[9013] = a4[9128], a4[(A8 = (t7 = (o5 + (39 - o5 & 7) | 0) - 47 | 0) >>> 0 < i4 + 16 >>> 0 ? i4 : t7) + 4 >> 2] = 27, t7 = a4[9121], a4[A8 + 16 >> 2] = a4[9120], a4[A8 + 20 >> 2] = t7, t7 = a4[9119], a4[A8 + 8 >> 2] = a4[9118], a4[A8 + 12 >> 2] = t7, a4[9120] = A8 + 8, a4[9119] = s5, a4[9118] = n9, a4[9121] = 0, t7 = A8 + 24 | 0; a4[t7 + 4 >> 2] = 7, r11 = t7 + 8 | 0, t7 = t7 + 4 | 0, r11 >>> 0 < o5 >>> 0; )
                                                    ;
                                                  if ((0 | A8) != (0 | i4))
                                                    if (a4[A8 + 4 >> 2] = -2 & a4[A8 + 4 >> 2], o5 = A8 - i4 | 0, a4[i4 + 4 >> 2] = 1 | o5, a4[A8 >> 2] = o5, o5 >>> 0 <= 255)
                                                      r11 = 36064 + (-8 & o5) | 0, (n9 = a4[9006]) & (t7 = 1 << (o5 >>> 3)) ? t7 = a4[r11 + 8 >> 2] : (a4[9006] = t7 | n9, t7 = r11), a4[r11 + 8 >> 2] = i4, a4[t7 + 12 >> 2] = i4, a4[i4 + 12 >> 2] = r11, a4[i4 + 8 >> 2] = t7;
                                                    else {
                                                      t7 = 31, o5 >>> 0 <= 16777215 && (t7 = 62 + ((o5 >>> 38 - (t7 = u4(o5 >>> 8 | 0)) & 1) - (t7 << 1) | 0) | 0), a4[i4 + 28 >> 2] = t7, a4[i4 + 16 >> 2] = 0, a4[i4 + 20 >> 2] = 0, r11 = 36328 + (t7 << 2) | 0;
                                                      h: {
                                                        if ((A8 = a4[9007]) & (n9 = 1 << t7)) {
                                                          for (t7 = o5 << (31 != (0 | t7) ? 25 - (t7 >>> 1 | 0) : 0), A8 = a4[r11 >> 2]; ; ) {
                                                            if ((0 | o5) == (-8 & a4[(r11 = A8) + 4 >> 2]))
                                                              break h;
                                                            if (n9 = t7 >>> 29 | 0, t7 <<= 1, !(A8 = a4[16 + (n9 = (4 & n9) + r11 | 0) >> 2]))
                                                              break;
                                                          }
                                                          a4[n9 + 16 >> 2] = i4;
                                                        } else
                                                          a4[9007] = n9 | A8, a4[r11 >> 2] = i4;
                                                        a4[i4 + 24 >> 2] = r11, a4[i4 + 12 >> 2] = i4, a4[i4 + 8 >> 2] = i4;
                                                        break c;
                                                      }
                                                      t7 = a4[r11 + 8 >> 2], a4[t7 + 12 >> 2] = i4, a4[r11 + 8 >> 2] = i4, a4[i4 + 24 >> 2] = 0, a4[i4 + 12 >> 2] = r11, a4[i4 + 8 >> 2] = t7;
                                                    }
                                                }
                                                if (!((t7 = a4[9009]) >>> 0 <= g5 >>> 0)) {
                                                  r11 = t7 - g5 | 0, a4[9009] = r11, t7 = (n9 = a4[9012]) + g5 | 0, a4[9012] = t7, a4[t7 + 4 >> 2] = 1 | r11, a4[n9 + 4 >> 2] = 3 | g5, t7 = n9 + 8 | 0;
                                                  break t;
                                                }
                                              }
                                              a4[9005] = 48, t7 = 0;
                                              break t;
                                            }
                                            n9 = 0;
                                          }
                                          if (g5) {
                                            A8 = a4[s5 + 28 >> 2];
                                            o: {
                                              if (a4[(r11 = 36328 + (A8 << 2) | 0) >> 2] == (0 | s5)) {
                                                if (a4[r11 >> 2] = n9, n9)
                                                  break o;
                                                d5 = 36028, y5 = a4[9007] & Gt2(-2, A8), a4[d5 >> 2] = y5;
                                                break i;
                                              }
                                              if (a4[g5 + (a4[g5 + 16 >> 2] == (0 | s5) ? 16 : 20) >> 2] = n9, !n9)
                                                break i;
                                            }
                                            a4[n9 + 24 >> 2] = g5, (r11 = a4[s5 + 16 >> 2]) && (a4[n9 + 16 >> 2] = r11, a4[r11 + 24 >> 2] = n9), (r11 = a4[s5 + 20 >> 2]) && (a4[n9 + 20 >> 2] = r11, a4[r11 + 24 >> 2] = n9);
                                          }
                                        }
                                        t7 = t7 + i4 | 0, o5 = a4[4 + (s5 = i4 + s5 | 0) >> 2];
                                      }
                                      if (a4[s5 + 4 >> 2] = -2 & o5, a4[l5 + 4 >> 2] = 1 | t7, a4[t7 + l5 >> 2] = t7, t7 >>> 0 <= 255)
                                        r11 = 36064 + (-8 & t7) | 0, (n9 = a4[9006]) & (t7 = 1 << (t7 >>> 3)) ? t7 = a4[r11 + 8 >> 2] : (a4[9006] = t7 | n9, t7 = r11), a4[r11 + 8 >> 2] = l5, a4[t7 + 12 >> 2] = l5, a4[l5 + 12 >> 2] = r11, a4[l5 + 8 >> 2] = t7;
                                      else {
                                        o5 = 31, t7 >>> 0 <= 16777215 && (o5 = 62 + ((t7 >>> 38 - (r11 = u4(t7 >>> 8 | 0)) & 1) - (r11 << 1) | 0) | 0), a4[l5 + 28 >> 2] = o5, a4[l5 + 16 >> 2] = 0, a4[l5 + 20 >> 2] = 0, r11 = 36328 + (o5 << 2) | 0;
                                        A: {
                                          if ((A8 = a4[9007]) & (n9 = 1 << o5)) {
                                            for (o5 = t7 << (31 != (0 | o5) ? 25 - (o5 >>> 1 | 0) : 0), n9 = a4[r11 >> 2]; ; ) {
                                              if (r11 = n9, (-8 & a4[n9 + 4 >> 2]) == (0 | t7))
                                                break A;
                                              if (A8 = o5 >>> 29 | 0, o5 <<= 1, !(n9 = a4[16 + (A8 = (4 & A8) + n9 | 0) >> 2]))
                                                break;
                                            }
                                            a4[A8 + 16 >> 2] = l5;
                                          } else
                                            a4[9007] = n9 | A8, a4[r11 >> 2] = l5;
                                          a4[l5 + 24 >> 2] = r11, a4[l5 + 12 >> 2] = l5, a4[l5 + 8 >> 2] = l5;
                                          break n;
                                        }
                                        t7 = a4[r11 + 8 >> 2], a4[t7 + 12 >> 2] = l5, a4[r11 + 8 >> 2] = l5, a4[l5 + 24 >> 2] = 0, a4[l5 + 12 >> 2] = r11, a4[l5 + 8 >> 2] = t7;
                                      }
                                    }
                                    t7 = f5 + 8 | 0;
                                    break t;
                                  }
                                  r:
                                    if (s5) {
                                      r11 = a4[A8 + 28 >> 2];
                                      n: {
                                        if (a4[(t7 = 36328 + (r11 << 2) | 0) >> 2] == (0 | A8)) {
                                          if (a4[t7 >> 2] = n9, n9)
                                            break n;
                                          f5 = Gt2(-2, r11) & f5, a4[9007] = f5;
                                          break r;
                                        }
                                        if (a4[s5 + (a4[s5 + 16 >> 2] == (0 | A8) ? 16 : 20) >> 2] = n9, !n9)
                                          break r;
                                      }
                                      a4[n9 + 24 >> 2] = s5, (t7 = a4[A8 + 16 >> 2]) && (a4[n9 + 16 >> 2] = t7, a4[t7 + 24 >> 2] = n9), (t7 = a4[A8 + 20 >> 2]) && (a4[n9 + 20 >> 2] = t7, a4[t7 + 24 >> 2] = n9);
                                    }
                                  r:
                                    if (o5 >>> 0 <= 15)
                                      t7 = o5 + g5 | 0, a4[A8 + 4 >> 2] = 3 | t7, a4[4 + (t7 = t7 + A8 | 0) >> 2] = 1 | a4[t7 + 4 >> 2];
                                    else if (a4[A8 + 4 >> 2] = 3 | g5, a4[4 + (i4 = A8 + g5 | 0) >> 2] = 1 | o5, a4[i4 + o5 >> 2] = o5, o5 >>> 0 <= 255)
                                      r11 = 36064 + (-8 & o5) | 0, (n9 = a4[9006]) & (t7 = 1 << (o5 >>> 3)) ? t7 = a4[r11 + 8 >> 2] : (a4[9006] = t7 | n9, t7 = r11), a4[r11 + 8 >> 2] = i4, a4[t7 + 12 >> 2] = i4, a4[i4 + 12 >> 2] = r11, a4[i4 + 8 >> 2] = t7;
                                    else {
                                      t7 = 31, o5 >>> 0 <= 16777215 && (t7 = 62 + ((o5 >>> 38 - (t7 = u4(o5 >>> 8 | 0)) & 1) - (t7 << 1) | 0) | 0), a4[i4 + 28 >> 2] = t7, a4[i4 + 16 >> 2] = 0, a4[i4 + 20 >> 2] = 0, r11 = 36328 + (t7 << 2) | 0;
                                      n: {
                                        if ((n9 = 1 << t7) & f5) {
                                          for (t7 = o5 << (31 != (0 | t7) ? 25 - (t7 >>> 1 | 0) : 0), g5 = a4[r11 >> 2]; ; ) {
                                            if ((-8 & a4[(r11 = g5) + 4 >> 2]) == (0 | o5))
                                              break n;
                                            if (n9 = t7 >>> 29 | 0, t7 <<= 1, !(g5 = a4[16 + (n9 = (4 & n9) + r11 | 0) >> 2]))
                                              break;
                                          }
                                          a4[n9 + 16 >> 2] = i4;
                                        } else
                                          a4[9007] = n9 | f5, a4[r11 >> 2] = i4;
                                        a4[i4 + 24 >> 2] = r11, a4[i4 + 12 >> 2] = i4, a4[i4 + 8 >> 2] = i4;
                                        break r;
                                      }
                                      t7 = a4[r11 + 8 >> 2], a4[t7 + 12 >> 2] = i4, a4[r11 + 8 >> 2] = i4, a4[i4 + 24 >> 2] = 0, a4[i4 + 12 >> 2] = r11, a4[i4 + 8 >> 2] = t7;
                                    }
                                  t7 = A8 + 8 | 0;
                                  break t;
                                }
                                e:
                                  if (l5) {
                                    r11 = a4[n9 + 28 >> 2];
                                    r: {
                                      if (a4[(t7 = 36328 + (r11 << 2) | 0) >> 2] == (0 | n9)) {
                                        if (a4[t7 >> 2] = A8, A8)
                                          break r;
                                        d5 = 36028, y5 = Gt2(-2, r11) & f5, a4[d5 >> 2] = y5;
                                        break e;
                                      }
                                      if (a4[l5 + (a4[l5 + 16 >> 2] == (0 | n9) ? 16 : 20) >> 2] = A8, !A8)
                                        break e;
                                    }
                                    a4[A8 + 24 >> 2] = l5, (t7 = a4[n9 + 16 >> 2]) && (a4[A8 + 16 >> 2] = t7, a4[t7 + 24 >> 2] = A8), (t7 = a4[n9 + 20 >> 2]) && (a4[A8 + 20 >> 2] = t7, a4[t7 + 24 >> 2] = A8);
                                  }
                                o5 >>> 0 <= 15 ? (t7 = o5 + g5 | 0, a4[n9 + 4 >> 2] = 3 | t7, a4[4 + (t7 = t7 + n9 | 0) >> 2] = 1 | a4[t7 + 4 >> 2]) : (a4[n9 + 4 >> 2] = 3 | g5, a4[4 + (A8 = n9 + g5 | 0) >> 2] = 1 | o5, a4[A8 + o5 >> 2] = o5, p5 && (r11 = 36064 + (-8 & p5) | 0, i4 = a4[9011], (t7 = 1 << (p5 >>> 3)) & s5 ? t7 = a4[r11 + 8 >> 2] : (a4[9006] = t7 | s5, t7 = r11), a4[r11 + 8 >> 2] = i4, a4[t7 + 12 >> 2] = i4, a4[i4 + 12 >> 2] = r11, a4[i4 + 8 >> 2] = t7), a4[9011] = A8, a4[9008] = o5), t7 = n9 + 8 | 0;
                              }
                              return I4 = e6 + 16 | 0, 0 | t7;
                            }, sc: function(t7) {
                              var e6 = 0, r11 = 0, n9 = 0, A8 = 0, i4 = 0, o5 = 0, s5 = 0, c5 = 0, g5 = 0;
                              t:
                                if (t7 |= 0) {
                                  i4 = (n9 = t7 - 8 | 0) + (t7 = -8 & (e6 = a4[t7 - 4 >> 2])) | 0;
                                  e:
                                    if (!(1 & e6)) {
                                      if (!(3 & e6))
                                        break t;
                                      if ((n9 = n9 - (e6 = a4[n9 >> 2]) | 0) >>> 0 < h4[9010])
                                        break t;
                                      t7 = t7 + e6 | 0;
                                      r: {
                                        n: {
                                          if (a4[9011] != (0 | n9)) {
                                            if (e6 >>> 0 <= 255) {
                                              if (A8 = e6 >>> 3 | 0, (0 | (e6 = a4[n9 + 12 >> 2])) == (0 | (r11 = a4[n9 + 8 >> 2]))) {
                                                c5 = 36024, g5 = a4[9006] & Gt2(-2, A8), a4[c5 >> 2] = g5;
                                                break e;
                                              }
                                              a4[r11 + 12 >> 2] = e6, a4[e6 + 8 >> 2] = r11;
                                              break e;
                                            }
                                            if (s5 = a4[n9 + 24 >> 2], (0 | n9) != (0 | (e6 = a4[n9 + 12 >> 2]))) {
                                              r11 = a4[n9 + 8 >> 2], a4[r11 + 12 >> 2] = e6, a4[e6 + 8 >> 2] = r11;
                                              break r;
                                            }
                                            if (!(r11 = a4[(A8 = n9 + 20 | 0) >> 2])) {
                                              if (!(r11 = a4[n9 + 16 >> 2]))
                                                break n;
                                              A8 = n9 + 16 | 0;
                                            }
                                            for (; o5 = A8, (r11 = a4[(A8 = (e6 = r11) + 20 | 0) >> 2]) || (A8 = e6 + 16 | 0, r11 = a4[e6 + 16 >> 2]); )
                                              ;
                                            a4[o5 >> 2] = 0;
                                            break r;
                                          }
                                          if (3 & ~(e6 = a4[i4 + 4 >> 2]))
                                            break e;
                                          return a4[9008] = t7, a4[i4 + 4 >> 2] = -2 & e6, a4[n9 + 4 >> 2] = 1 | t7, void (a4[i4 >> 2] = t7);
                                        }
                                        e6 = 0;
                                      }
                                      if (s5) {
                                        r11 = a4[n9 + 28 >> 2];
                                        r: {
                                          if (a4[(A8 = 36328 + (r11 << 2) | 0) >> 2] == (0 | n9)) {
                                            if (a4[A8 >> 2] = e6, e6)
                                              break r;
                                            c5 = 36028, g5 = a4[9007] & Gt2(-2, r11), a4[c5 >> 2] = g5;
                                            break e;
                                          }
                                          if (a4[s5 + (a4[s5 + 16 >> 2] == (0 | n9) ? 16 : 20) >> 2] = e6, !e6)
                                            break e;
                                        }
                                        a4[e6 + 24 >> 2] = s5, (r11 = a4[n9 + 16 >> 2]) && (a4[e6 + 16 >> 2] = r11, a4[r11 + 24 >> 2] = e6), (r11 = a4[n9 + 20 >> 2]) && (a4[e6 + 20 >> 2] = r11, a4[r11 + 24 >> 2] = e6);
                                      }
                                    }
                                  if (!(n9 >>> 0 >= i4 >>> 0) && 1 & (e6 = a4[i4 + 4 >> 2])) {
                                    e: {
                                      r: {
                                        n: {
                                          A: {
                                            if (!(2 & e6)) {
                                              if (a4[9012] == (0 | i4)) {
                                                if (a4[9012] = n9, t7 = a4[9009] + t7 | 0, a4[9009] = t7, a4[n9 + 4 >> 2] = 1 | t7, a4[9011] != (0 | n9))
                                                  break t;
                                                return a4[9008] = 0, void (a4[9011] = 0);
                                              }
                                              if (a4[9011] == (0 | i4))
                                                return a4[9011] = n9, t7 = a4[9008] + t7 | 0, a4[9008] = t7, a4[n9 + 4 >> 2] = 1 | t7, void (a4[t7 + n9 >> 2] = t7);
                                              if (t7 = (-8 & e6) + t7 | 0, e6 >>> 0 <= 255) {
                                                if (A8 = e6 >>> 3 | 0, (0 | (e6 = a4[i4 + 12 >> 2])) == (0 | (r11 = a4[i4 + 8 >> 2]))) {
                                                  c5 = 36024, g5 = a4[9006] & Gt2(-2, A8), a4[c5 >> 2] = g5;
                                                  break r;
                                                }
                                                a4[r11 + 12 >> 2] = e6, a4[e6 + 8 >> 2] = r11;
                                                break r;
                                              }
                                              if (s5 = a4[i4 + 24 >> 2], (0 | i4) != (0 | (e6 = a4[i4 + 12 >> 2]))) {
                                                r11 = a4[i4 + 8 >> 2], a4[r11 + 12 >> 2] = e6, a4[e6 + 8 >> 2] = r11;
                                                break n;
                                              }
                                              if (!(r11 = a4[(A8 = i4 + 20 | 0) >> 2])) {
                                                if (!(r11 = a4[i4 + 16 >> 2]))
                                                  break A;
                                                A8 = i4 + 16 | 0;
                                              }
                                              for (; o5 = A8, (r11 = a4[(A8 = (e6 = r11) + 20 | 0) >> 2]) || (A8 = e6 + 16 | 0, r11 = a4[e6 + 16 >> 2]); )
                                                ;
                                              a4[o5 >> 2] = 0;
                                              break n;
                                            }
                                            a4[i4 + 4 >> 2] = -2 & e6, a4[n9 + 4 >> 2] = 1 | t7, a4[t7 + n9 >> 2] = t7;
                                            break e;
                                          }
                                          e6 = 0;
                                        }
                                        if (s5) {
                                          r11 = a4[i4 + 28 >> 2];
                                          n: {
                                            if (a4[(A8 = 36328 + (r11 << 2) | 0) >> 2] == (0 | i4)) {
                                              if (a4[A8 >> 2] = e6, e6)
                                                break n;
                                              c5 = 36028, g5 = a4[9007] & Gt2(-2, r11), a4[c5 >> 2] = g5;
                                              break r;
                                            }
                                            if (a4[s5 + (a4[s5 + 16 >> 2] == (0 | i4) ? 16 : 20) >> 2] = e6, !e6)
                                              break r;
                                          }
                                          a4[e6 + 24 >> 2] = s5, (r11 = a4[i4 + 16 >> 2]) && (a4[e6 + 16 >> 2] = r11, a4[r11 + 24 >> 2] = e6), (r11 = a4[i4 + 20 >> 2]) && (a4[e6 + 20 >> 2] = r11, a4[r11 + 24 >> 2] = e6);
                                        }
                                      }
                                      if (a4[n9 + 4 >> 2] = 1 | t7, a4[t7 + n9 >> 2] = t7, a4[9011] == (0 | n9))
                                        return void (a4[9008] = t7);
                                    }
                                    if (t7 >>> 0 <= 255)
                                      return e6 = 36064 + (-8 & t7) | 0, (r11 = a4[9006]) & (t7 = 1 << (t7 >>> 3)) ? t7 = a4[e6 + 8 >> 2] : (a4[9006] = t7 | r11, t7 = e6), a4[e6 + 8 >> 2] = n9, a4[t7 + 12 >> 2] = n9, a4[n9 + 12 >> 2] = e6, void (a4[n9 + 8 >> 2] = t7);
                                    r11 = 31, t7 >>> 0 <= 16777215 && (r11 = 62 + ((t7 >>> 38 - (e6 = u4(t7 >>> 8 | 0)) & 1) - (e6 << 1) | 0) | 0), a4[n9 + 28 >> 2] = r11, a4[n9 + 16 >> 2] = 0, a4[n9 + 20 >> 2] = 0, e6 = 36328 + (r11 << 2) | 0;
                                    e: {
                                      r: {
                                        if ((A8 = a4[9007]) & (o5 = 1 << r11)) {
                                          for (r11 = t7 << (31 != (0 | r11) ? 25 - (r11 >>> 1 | 0) : 0), e6 = a4[e6 >> 2]; ; ) {
                                            if (A8 = e6, (-8 & a4[e6 + 4 >> 2]) == (0 | t7))
                                              break r;
                                            if (o5 = r11 >>> 29 | 0, r11 <<= 1, !(e6 = a4[16 + (o5 = e6 + (4 & o5) | 0) >> 2]))
                                              break;
                                          }
                                          a4[o5 + 16 >> 2] = n9, a4[n9 + 24 >> 2] = A8;
                                        } else
                                          a4[9007] = A8 | o5, a4[e6 >> 2] = n9, a4[n9 + 24 >> 2] = e6;
                                        a4[n9 + 12 >> 2] = n9, a4[n9 + 8 >> 2] = n9;
                                        break e;
                                      }
                                      t7 = a4[A8 + 8 >> 2], a4[t7 + 12 >> 2] = n9, a4[A8 + 8 >> 2] = n9, a4[n9 + 24 >> 2] = 0, a4[n9 + 12 >> 2] = A8, a4[n9 + 8 >> 2] = t7;
                                    }
                                    t7 = a4[9014] - 1 | 0, a4[9014] = t7 || -1;
                                  }
                                }
                            }, tc: Ie2 };
                          }(t5);
                        }(e4);
                      }, instantiate: function(t4, e4) {
                        return { then: function(r9) {
                          var n7 = new I3.Module(t4);
                          r9({ instance: new I3.Instance(n7, e4) });
                        } };
                      }, RuntimeError: Error };
                      f3 = [], "object" != typeof I3 && x3("no native wasm support detected");
                      var y3, C3, m3, B3, E3, w3, v3, _3 = false;
                      function Q3() {
                        var t4 = d3.buffer;
                        o3.HEAP8 = y3 = new Int8Array(t4), o3.HEAP16 = m3 = new Int16Array(t4), o3.HEAPU8 = C3 = new Uint8Array(t4), o3.HEAPU16 = new Uint16Array(t4), o3.HEAP32 = B3 = new Int32Array(t4), o3.HEAPU32 = E3 = new Uint32Array(t4), o3.HEAPF32 = w3 = new Float32Array(t4), o3.HEAPF64 = v3 = new Float64Array(t4);
                      }
                      var b3 = o3.INITIAL_MEMORY || 16777216;
                      b3 >= 65536 || x3("INITIAL_MEMORY should be larger than STACK_SIZE, was " + b3 + "! (STACK_SIZE=65536)"), d3 = o3.wasmMemory ? o3.wasmMemory : new I3.Memory({ initial: b3 / 65536, maximum: 32768 }), Q3(), b3 = d3.buffer.byteLength;
                      var k3 = [], D3 = [], S3 = [], N4 = 0, M3 = null;
                      function x3(t4) {
                        throw o3.onAbort && o3.onAbort(t4), p3(t4 = "Aborted(" + t4 + ")"), _3 = true, t4 += ". Build with -sASSERTIONS for more info.", new I3.RuntimeError(t4);
                      }
                      var F3, P3, R3 = "data:application/octet-stream;base64,";
                      function U3(t4) {
                        return t4.startsWith(R3);
                      }
                      U3(F3 = "<<< WASM_BINARY_FILE >>>") || (P3 = F3, F3 = o3.locateFile ? o3.locateFile(P3, g3) : g3 + P3);
                      var G3, H3 = { 35256: () => o3.getRandomValue(), 35292: () => {
                        if (void 0 === o3.getRandomValue)
                          try {
                            var t4 = "object" == typeof window ? window : self, e4 = void 0 !== t4.crypto ? t4.crypto : t4.msCrypto, r9 = function() {
                              var t5 = new Uint32Array(1);
                              return e4.getRandomValues(t5), t5[0] >>> 0;
                            };
                            r9(), o3.getRandomValue = r9;
                          } catch (t5) {
                            try {
                              var n7 = __require("crypto"), A7 = function() {
                                var t6 = n7.randomBytes(4);
                                return (t6[0] << 24 | t6[1] << 16 | t6[2] << 8 | t6[3]) >>> 0;
                              };
                              A7(), o3.getRandomValue = A7;
                            } catch (t6) {
                              throw "No secure random number generator found";
                            }
                          }
                      } }, L3 = (t4) => {
                        for (; t4.length > 0; )
                          t4.shift()(o3);
                      }, O3 = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, Y3 = (t4, e4) => t4 ? ((t5, e5, r9) => {
                        for (var n7 = e5 + r9, A7 = e5; t5[A7] && !(A7 >= n7); )
                          ++A7;
                        if (A7 - e5 > 16 && t5.buffer && O3)
                          return O3.decode(t5.subarray(e5, A7));
                        for (var i3 = ""; e5 < A7; ) {
                          var o4 = t5[e5++];
                          if (128 & o4) {
                            var s4 = 63 & t5[e5++];
                            if (192 != (224 & o4)) {
                              var a4 = 63 & t5[e5++];
                              if ((o4 = 224 == (240 & o4) ? (15 & o4) << 12 | s4 << 6 | a4 : (7 & o4) << 18 | s4 << 12 | a4 << 6 | 63 & t5[e5++]) < 65536)
                                i3 += String.fromCharCode(o4);
                              else {
                                var c4 = o4 - 65536;
                                i3 += String.fromCharCode(55296 | c4 >> 10, 56320 | 1023 & c4);
                              }
                            } else
                              i3 += String.fromCharCode((31 & o4) << 6 | s4);
                          } else
                            i3 += String.fromCharCode(o4);
                        }
                        return i3;
                      })(C3, t4, e4) : "", K3 = [], J3 = (t4) => {
                        var e4 = (t4 - d3.buffer.byteLength + 65535) / 65536;
                        try {
                          return d3.grow(e4), Q3(), 1;
                        } catch (t5) {
                        }
                      }, j3 = { c: (t4, e4, r9, n7) => {
                        x3(`Assertion failed: ${Y3(t4)}, at: ` + [e4 ? Y3(e4) : "unknown filename", r9, n7 ? Y3(n7) : "unknown function"]);
                      }, d: () => {
                        x3("");
                      }, b: (t4, e4, r9) => ((t5, e5, r10) => {
                        var n7 = ((t6, e6) => {
                          var r11;
                          for (K3.length = 0; r11 = C3[t6++]; )
                            e6 += 105 != r11 && e6 % 8 ? 4 : 0, K3.push(105 == r11 ? B3[e6 >> 2] : v3[e6 >> 3]), e6 += 105 == r11 ? 4 : 8;
                          return K3;
                        })(e5, r10);
                        return H3[t5].apply(null, n7);
                      })(t4, e4, r9), e: (t4) => {
                        var e4 = C3.length, r9 = 2147483648;
                        if ((t4 >>>= 0) > r9)
                          return false;
                        for (var n7, A7 = 1; A7 <= 4; A7 *= 2) {
                          var i3 = e4 * (1 + 0.2 / A7);
                          i3 = Math.min(i3, t4 + 100663296);
                          var o4 = Math.min(r9, (n7 = Math.max(t4, i3)) + (65536 - n7 % 65536) % 65536);
                          if (J3(o4))
                            return true;
                        }
                        return false;
                      }, a: d3 }, z2 = function() {
                        var t4, e4, r9 = { a: j3 };
                        function n7(t5, e5) {
                          var r10, n8 = t5.exports;
                          return (z2 = n8).tc, r10 = z2.f, D3.unshift(r10), function(t6) {
                            if (N4--, o3.monitorRunDependencies && o3.monitorRunDependencies(N4), 0 == N4 && M3) {
                              var e6 = M3;
                              M3 = null, e6();
                            }
                          }(), n8;
                        }
                        if (N4++, o3.monitorRunDependencies && o3.monitorRunDependencies(N4), o3.instantiateWasm)
                          try {
                            return o3.instantiateWasm(r9, n7);
                          } catch (t5) {
                            return p3(`Module.instantiateWasm callback failed with error: ${t5}`), false;
                          }
                        return t4 = r9, e4 = function(t5) {
                          n7(t5.instance);
                        }, function(t5) {
                          return Promise.resolve().then(() => function(t6) {
                            if (t6 == F3 && f3)
                              return new Uint8Array(f3);
                            var e5 = function(t7) {
                              if (U3(t7))
                                return function(t8) {
                                  if (void 0 !== h3 && h3) {
                                    var e6 = Buffer.from(t8, "base64");
                                    return new Uint8Array(e6.buffer, e6.byteOffset, e6.length);
                                  }
                                  try {
                                    for (var r10 = atob(t8), n8 = new Uint8Array(r10.length), A7 = 0; A7 < r10.length; ++A7)
                                      n8[A7] = r10.charCodeAt(A7);
                                    return n8;
                                  } catch (t9) {
                                    throw new Error("Converting base64 string to bytes failed.");
                                  }
                                }(t7.slice(37));
                            }(t6);
                            if (e5)
                              return e5;
                            if (A6)
                              return A6(t6);
                            throw "both async and sync fetching of the wasm failed";
                          }(t5));
                        }(F3).then((e5) => I3.instantiate(e5, t4)).then((t5) => t5).then(e4, (t5) => {
                          p3(`failed to asynchronously prepare wasm: ${t5}`), x3(t5);
                        }), {};
                      }();
                      function q2() {
                        function t4() {
                          G3 || (G3 = true, o3.calledRun = true, _3 || (L3(D3), o3.onRuntimeInitialized && o3.onRuntimeInitialized(), function() {
                            if (o3.postRun)
                              for ("function" == typeof o3.postRun && (o3.postRun = [o3.postRun]); o3.postRun.length; )
                                t5 = o3.postRun.shift(), S3.unshift(t5);
                            var t5;
                            L3(S3);
                          }()));
                        }
                        N4 > 0 || (function() {
                          if (o3.preRun)
                            for ("function" == typeof o3.preRun && (o3.preRun = [o3.preRun]); o3.preRun.length; )
                              t5 = o3.preRun.shift(), k3.unshift(t5);
                          var t5;
                          L3(k3);
                        }(), N4 > 0 || (o3.setStatus ? (o3.setStatus("Running..."), setTimeout(function() {
                          setTimeout(function() {
                            o3.setStatus("");
                          }, 1), t4();
                        }, 1)) : t4()));
                      }
                      if (o3._crypto_aead_chacha20poly1305_encrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4) => (o3._crypto_aead_chacha20poly1305_encrypt_detached = z2.g)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4), o3._crypto_aead_chacha20poly1305_encrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_encrypt = z2.h)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4) => (o3._crypto_aead_chacha20poly1305_ietf_encrypt_detached = z2.i)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4), o3._crypto_aead_chacha20poly1305_ietf_encrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_ietf_encrypt = z2.j)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_decrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_decrypt_detached = z2.k)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_decrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_decrypt = z2.l)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_ietf_decrypt_detached = z2.m)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_ietf_decrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_chacha20poly1305_ietf_decrypt = z2.n)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_chacha20poly1305_ietf_keybytes = () => (o3._crypto_aead_chacha20poly1305_ietf_keybytes = z2.o)(), o3._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (o3._crypto_aead_chacha20poly1305_ietf_npubbytes = z2.p)(), o3._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (o3._crypto_aead_chacha20poly1305_ietf_nsecbytes = z2.q)(), o3._crypto_aead_chacha20poly1305_ietf_abytes = () => (o3._crypto_aead_chacha20poly1305_ietf_abytes = z2.r)(), o3._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (o3._crypto_aead_chacha20poly1305_ietf_messagebytes_max = z2.s)(), o3._crypto_aead_chacha20poly1305_ietf_keygen = (t4) => (o3._crypto_aead_chacha20poly1305_ietf_keygen = z2.t)(t4), o3._crypto_aead_chacha20poly1305_keybytes = () => (o3._crypto_aead_chacha20poly1305_keybytes = z2.u)(), o3._crypto_aead_chacha20poly1305_npubbytes = () => (o3._crypto_aead_chacha20poly1305_npubbytes = z2.v)(), o3._crypto_aead_chacha20poly1305_nsecbytes = () => (o3._crypto_aead_chacha20poly1305_nsecbytes = z2.w)(), o3._crypto_aead_chacha20poly1305_abytes = () => (o3._crypto_aead_chacha20poly1305_abytes = z2.x)(), o3._crypto_aead_chacha20poly1305_messagebytes_max = () => (o3._crypto_aead_chacha20poly1305_messagebytes_max = z2.y)(), o3._crypto_aead_chacha20poly1305_keygen = (t4) => (o3._crypto_aead_chacha20poly1305_keygen = z2.z)(t4), o3._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4) => (o3._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = z2.A)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4, u4), o3._crypto_aead_xchacha20poly1305_ietf_encrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_xchacha20poly1305_ietf_encrypt = z2.B)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = z2.C)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_xchacha20poly1305_ietf_decrypt = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4) => (o3._crypto_aead_xchacha20poly1305_ietf_decrypt = z2.D)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4, g4), o3._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (o3._crypto_aead_xchacha20poly1305_ietf_keybytes = z2.E)(), o3._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (o3._crypto_aead_xchacha20poly1305_ietf_npubbytes = z2.F)(), o3._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (o3._crypto_aead_xchacha20poly1305_ietf_nsecbytes = z2.G)(), o3._crypto_aead_xchacha20poly1305_ietf_abytes = () => (o3._crypto_aead_xchacha20poly1305_ietf_abytes = z2.H)(), o3._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (o3._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = z2.I)(), o3._crypto_aead_xchacha20poly1305_ietf_keygen = (t4) => (o3._crypto_aead_xchacha20poly1305_ietf_keygen = z2.J)(t4), o3._crypto_auth_bytes = () => (o3._crypto_auth_bytes = z2.K)(), o3._crypto_auth_keybytes = () => (o3._crypto_auth_keybytes = z2.L)(), o3._crypto_auth = (t4, e4, r9, n7, A7) => (o3._crypto_auth = z2.M)(t4, e4, r9, n7, A7), o3._crypto_auth_verify = (t4, e4, r9, n7, A7) => (o3._crypto_auth_verify = z2.N)(t4, e4, r9, n7, A7), o3._crypto_auth_keygen = (t4) => (o3._crypto_auth_keygen = z2.O)(t4), o3._crypto_box_seedbytes = () => (o3._crypto_box_seedbytes = z2.P)(), o3._crypto_box_publickeybytes = () => (o3._crypto_box_publickeybytes = z2.Q)(), o3._crypto_box_secretkeybytes = () => (o3._crypto_box_secretkeybytes = z2.R)(), o3._crypto_box_beforenmbytes = () => (o3._crypto_box_beforenmbytes = z2.S)(), o3._crypto_box_noncebytes = () => (o3._crypto_box_noncebytes = z2.T)(), o3._crypto_box_macbytes = () => (o3._crypto_box_macbytes = z2.U)(), o3._crypto_box_messagebytes_max = () => (o3._crypto_box_messagebytes_max = z2.V)(), o3._crypto_box_seed_keypair = (t4, e4, r9) => (o3._crypto_box_seed_keypair = z2.W)(t4, e4, r9), o3._crypto_box_keypair = (t4, e4) => (o3._crypto_box_keypair = z2.X)(t4, e4), o3._crypto_box_beforenm = (t4, e4, r9) => (o3._crypto_box_beforenm = z2.Y)(t4, e4, r9), o3._crypto_box_detached_afternm = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_box_detached_afternm = z2.Z)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_box_detached = (t4, e4, r9, n7, A7, i3, s4, a4) => (o3._crypto_box_detached = z2._)(t4, e4, r9, n7, A7, i3, s4, a4), o3._crypto_box_easy_afternm = (t4, e4, r9, n7, A7, i3) => (o3._crypto_box_easy_afternm = z2.$)(t4, e4, r9, n7, A7, i3), o3._crypto_box_easy = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_box_easy = z2.aa)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_box_open_detached_afternm = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_box_open_detached_afternm = z2.ba)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_box_open_detached = (t4, e4, r9, n7, A7, i3, s4, a4) => (o3._crypto_box_open_detached = z2.ca)(t4, e4, r9, n7, A7, i3, s4, a4), o3._crypto_box_open_easy_afternm = (t4, e4, r9, n7, A7, i3) => (o3._crypto_box_open_easy_afternm = z2.da)(t4, e4, r9, n7, A7, i3), o3._crypto_box_open_easy = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_box_open_easy = z2.ea)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_box_seal = (t4, e4, r9, n7, A7) => (o3._crypto_box_seal = z2.fa)(t4, e4, r9, n7, A7), o3._crypto_box_seal_open = (t4, e4, r9, n7, A7, i3) => (o3._crypto_box_seal_open = z2.ga)(t4, e4, r9, n7, A7, i3), o3._crypto_box_sealbytes = () => (o3._crypto_box_sealbytes = z2.ha)(), o3._crypto_generichash_bytes_min = () => (o3._crypto_generichash_bytes_min = z2.ia)(), o3._crypto_generichash_bytes_max = () => (o3._crypto_generichash_bytes_max = z2.ja)(), o3._crypto_generichash_bytes = () => (o3._crypto_generichash_bytes = z2.ka)(), o3._crypto_generichash_keybytes_min = () => (o3._crypto_generichash_keybytes_min = z2.la)(), o3._crypto_generichash_keybytes_max = () => (o3._crypto_generichash_keybytes_max = z2.ma)(), o3._crypto_generichash_keybytes = () => (o3._crypto_generichash_keybytes = z2.na)(), o3._crypto_generichash_statebytes = () => (o3._crypto_generichash_statebytes = z2.oa)(), o3._crypto_generichash = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_generichash = z2.pa)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_generichash_init = (t4, e4, r9, n7) => (o3._crypto_generichash_init = z2.qa)(t4, e4, r9, n7), o3._crypto_generichash_update = (t4, e4, r9, n7) => (o3._crypto_generichash_update = z2.ra)(t4, e4, r9, n7), o3._crypto_generichash_final = (t4, e4, r9) => (o3._crypto_generichash_final = z2.sa)(t4, e4, r9), o3._crypto_generichash_keygen = (t4) => (o3._crypto_generichash_keygen = z2.ta)(t4), o3._crypto_hash_bytes = () => (o3._crypto_hash_bytes = z2.ua)(), o3._crypto_hash = (t4, e4, r9, n7) => (o3._crypto_hash = z2.va)(t4, e4, r9, n7), o3._crypto_kdf_bytes_min = () => (o3._crypto_kdf_bytes_min = z2.wa)(), o3._crypto_kdf_bytes_max = () => (o3._crypto_kdf_bytes_max = z2.xa)(), o3._crypto_kdf_contextbytes = () => (o3._crypto_kdf_contextbytes = z2.ya)(), o3._crypto_kdf_keybytes = () => (o3._crypto_kdf_keybytes = z2.za)(), o3._crypto_kdf_derive_from_key = (t4, e4, r9, n7, A7, i3) => (o3._crypto_kdf_derive_from_key = z2.Aa)(t4, e4, r9, n7, A7, i3), o3._crypto_kdf_keygen = (t4) => (o3._crypto_kdf_keygen = z2.Ba)(t4), o3._crypto_kdf_hkdf_sha256_extract_init = (t4, e4, r9) => (o3._crypto_kdf_hkdf_sha256_extract_init = z2.Ca)(t4, e4, r9), o3._crypto_kdf_hkdf_sha256_extract_update = (t4, e4, r9) => (o3._crypto_kdf_hkdf_sha256_extract_update = z2.Da)(t4, e4, r9), o3._crypto_kdf_hkdf_sha256_extract_final = (t4, e4) => (o3._crypto_kdf_hkdf_sha256_extract_final = z2.Ea)(t4, e4), o3._crypto_kdf_hkdf_sha256_extract = (t4, e4, r9, n7, A7) => (o3._crypto_kdf_hkdf_sha256_extract = z2.Fa)(t4, e4, r9, n7, A7), o3._crypto_kdf_hkdf_sha256_keygen = (t4) => (o3._crypto_kdf_hkdf_sha256_keygen = z2.Ga)(t4), o3._crypto_kdf_hkdf_sha256_expand = (t4, e4, r9, n7, A7) => (o3._crypto_kdf_hkdf_sha256_expand = z2.Ha)(t4, e4, r9, n7, A7), o3._crypto_kdf_hkdf_sha256_keybytes = () => (o3._crypto_kdf_hkdf_sha256_keybytes = z2.Ia)(), o3._crypto_kdf_hkdf_sha256_bytes_min = () => (o3._crypto_kdf_hkdf_sha256_bytes_min = z2.Ja)(), o3._crypto_kdf_hkdf_sha256_bytes_max = () => (o3._crypto_kdf_hkdf_sha256_bytes_max = z2.Ka)(), o3._crypto_kdf_hkdf_sha256_statebytes = () => (o3._crypto_kdf_hkdf_sha256_statebytes = z2.La)(), o3._crypto_kdf_hkdf_sha512_extract_init = (t4, e4, r9) => (o3._crypto_kdf_hkdf_sha512_extract_init = z2.Ma)(t4, e4, r9), o3._crypto_kdf_hkdf_sha512_extract_update = (t4, e4, r9) => (o3._crypto_kdf_hkdf_sha512_extract_update = z2.Na)(t4, e4, r9), o3._crypto_kdf_hkdf_sha512_extract_final = (t4, e4) => (o3._crypto_kdf_hkdf_sha512_extract_final = z2.Oa)(t4, e4), o3._crypto_kdf_hkdf_sha512_extract = (t4, e4, r9, n7, A7) => (o3._crypto_kdf_hkdf_sha512_extract = z2.Pa)(t4, e4, r9, n7, A7), o3._crypto_kdf_hkdf_sha512_keygen = (t4) => (o3._crypto_kdf_hkdf_sha512_keygen = z2.Qa)(t4), o3._crypto_kdf_hkdf_sha512_expand = (t4, e4, r9, n7, A7) => (o3._crypto_kdf_hkdf_sha512_expand = z2.Ra)(t4, e4, r9, n7, A7), o3._crypto_kdf_hkdf_sha512_keybytes = () => (o3._crypto_kdf_hkdf_sha512_keybytes = z2.Sa)(), o3._crypto_kdf_hkdf_sha512_bytes_min = () => (o3._crypto_kdf_hkdf_sha512_bytes_min = z2.Ta)(), o3._crypto_kdf_hkdf_sha512_bytes_max = () => (o3._crypto_kdf_hkdf_sha512_bytes_max = z2.Ua)(), o3._crypto_kx_seed_keypair = (t4, e4, r9) => (o3._crypto_kx_seed_keypair = z2.Va)(t4, e4, r9), o3._crypto_kx_keypair = (t4, e4) => (o3._crypto_kx_keypair = z2.Wa)(t4, e4), o3._crypto_kx_client_session_keys = (t4, e4, r9, n7, A7) => (o3._crypto_kx_client_session_keys = z2.Xa)(t4, e4, r9, n7, A7), o3._crypto_kx_server_session_keys = (t4, e4, r9, n7, A7) => (o3._crypto_kx_server_session_keys = z2.Ya)(t4, e4, r9, n7, A7), o3._crypto_kx_publickeybytes = () => (o3._crypto_kx_publickeybytes = z2.Za)(), o3._crypto_kx_secretkeybytes = () => (o3._crypto_kx_secretkeybytes = z2._a)(), o3._crypto_kx_seedbytes = () => (o3._crypto_kx_seedbytes = z2.$a)(), o3._crypto_kx_sessionkeybytes = () => (o3._crypto_kx_sessionkeybytes = z2.ab)(), o3._crypto_scalarmult_base = (t4, e4) => (o3._crypto_scalarmult_base = z2.bb)(t4, e4), o3._crypto_scalarmult = (t4, e4, r9) => (o3._crypto_scalarmult = z2.cb)(t4, e4, r9), o3._crypto_scalarmult_bytes = () => (o3._crypto_scalarmult_bytes = z2.db)(), o3._crypto_scalarmult_scalarbytes = () => (o3._crypto_scalarmult_scalarbytes = z2.eb)(), o3._crypto_secretbox_keybytes = () => (o3._crypto_secretbox_keybytes = z2.fb)(), o3._crypto_secretbox_noncebytes = () => (o3._crypto_secretbox_noncebytes = z2.gb)(), o3._crypto_secretbox_macbytes = () => (o3._crypto_secretbox_macbytes = z2.hb)(), o3._crypto_secretbox_messagebytes_max = () => (o3._crypto_secretbox_messagebytes_max = z2.ib)(), o3._crypto_secretbox_keygen = (t4) => (o3._crypto_secretbox_keygen = z2.jb)(t4), o3._crypto_secretbox_detached = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_secretbox_detached = z2.kb)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_secretbox_easy = (t4, e4, r9, n7, A7, i3) => (o3._crypto_secretbox_easy = z2.lb)(t4, e4, r9, n7, A7, i3), o3._crypto_secretbox_open_detached = (t4, e4, r9, n7, A7, i3, s4) => (o3._crypto_secretbox_open_detached = z2.mb)(t4, e4, r9, n7, A7, i3, s4), o3._crypto_secretbox_open_easy = (t4, e4, r9, n7, A7, i3) => (o3._crypto_secretbox_open_easy = z2.nb)(t4, e4, r9, n7, A7, i3), o3._crypto_secretstream_xchacha20poly1305_keygen = (t4) => (o3._crypto_secretstream_xchacha20poly1305_keygen = z2.ob)(t4), o3._crypto_secretstream_xchacha20poly1305_init_push = (t4, e4, r9) => (o3._crypto_secretstream_xchacha20poly1305_init_push = z2.pb)(t4, e4, r9), o3._crypto_secretstream_xchacha20poly1305_init_pull = (t4, e4, r9) => (o3._crypto_secretstream_xchacha20poly1305_init_pull = z2.qb)(t4, e4, r9), o3._crypto_secretstream_xchacha20poly1305_rekey = (t4) => (o3._crypto_secretstream_xchacha20poly1305_rekey = z2.rb)(t4), o3._crypto_secretstream_xchacha20poly1305_push = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4) => (o3._crypto_secretstream_xchacha20poly1305_push = z2.sb)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4), o3._crypto_secretstream_xchacha20poly1305_pull = (t4, e4, r9, n7, A7, i3, s4, a4, c4, h4) => (o3._crypto_secretstream_xchacha20poly1305_pull = z2.tb)(t4, e4, r9, n7, A7, i3, s4, a4, c4, h4), o3._crypto_secretstream_xchacha20poly1305_statebytes = () => (o3._crypto_secretstream_xchacha20poly1305_statebytes = z2.ub)(), o3._crypto_secretstream_xchacha20poly1305_abytes = () => (o3._crypto_secretstream_xchacha20poly1305_abytes = z2.vb)(), o3._crypto_secretstream_xchacha20poly1305_headerbytes = () => (o3._crypto_secretstream_xchacha20poly1305_headerbytes = z2.wb)(), o3._crypto_secretstream_xchacha20poly1305_keybytes = () => (o3._crypto_secretstream_xchacha20poly1305_keybytes = z2.xb)(), o3._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (o3._crypto_secretstream_xchacha20poly1305_messagebytes_max = z2.yb)(), o3._crypto_secretstream_xchacha20poly1305_tag_message = () => (o3._crypto_secretstream_xchacha20poly1305_tag_message = z2.zb)(), o3._crypto_secretstream_xchacha20poly1305_tag_push = () => (o3._crypto_secretstream_xchacha20poly1305_tag_push = z2.Ab)(), o3._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (o3._crypto_secretstream_xchacha20poly1305_tag_rekey = z2.Bb)(), o3._crypto_secretstream_xchacha20poly1305_tag_final = () => (o3._crypto_secretstream_xchacha20poly1305_tag_final = z2.Cb)(), o3._crypto_shorthash_bytes = () => (o3._crypto_shorthash_bytes = z2.Db)(), o3._crypto_shorthash_keybytes = () => (o3._crypto_shorthash_keybytes = z2.Eb)(), o3._crypto_shorthash = (t4, e4, r9, n7, A7) => (o3._crypto_shorthash = z2.Fb)(t4, e4, r9, n7, A7), o3._crypto_shorthash_keygen = (t4) => (o3._crypto_shorthash_keygen = z2.Gb)(t4), o3._crypto_sign_statebytes = () => (o3._crypto_sign_statebytes = z2.Hb)(), o3._crypto_sign_bytes = () => (o3._crypto_sign_bytes = z2.Ib)(), o3._crypto_sign_seedbytes = () => (o3._crypto_sign_seedbytes = z2.Jb)(), o3._crypto_sign_publickeybytes = () => (o3._crypto_sign_publickeybytes = z2.Kb)(), o3._crypto_sign_secretkeybytes = () => (o3._crypto_sign_secretkeybytes = z2.Lb)(), o3._crypto_sign_messagebytes_max = () => (o3._crypto_sign_messagebytes_max = z2.Mb)(), o3._crypto_sign_seed_keypair = (t4, e4, r9) => (o3._crypto_sign_seed_keypair = z2.Nb)(t4, e4, r9), o3._crypto_sign_keypair = (t4, e4) => (o3._crypto_sign_keypair = z2.Ob)(t4, e4), o3._crypto_sign = (t4, e4, r9, n7, A7, i3) => (o3._crypto_sign = z2.Pb)(t4, e4, r9, n7, A7, i3), o3._crypto_sign_open = (t4, e4, r9, n7, A7, i3) => (o3._crypto_sign_open = z2.Qb)(t4, e4, r9, n7, A7, i3), o3._crypto_sign_detached = (t4, e4, r9, n7, A7, i3) => (o3._crypto_sign_detached = z2.Rb)(t4, e4, r9, n7, A7, i3), o3._crypto_sign_verify_detached = (t4, e4, r9, n7, A7) => (o3._crypto_sign_verify_detached = z2.Sb)(t4, e4, r9, n7, A7), o3._crypto_sign_init = (t4) => (o3._crypto_sign_init = z2.Tb)(t4), o3._crypto_sign_update = (t4, e4, r9, n7) => (o3._crypto_sign_update = z2.Ub)(t4, e4, r9, n7), o3._crypto_sign_final_create = (t4, e4, r9, n7) => (o3._crypto_sign_final_create = z2.Vb)(t4, e4, r9, n7), o3._crypto_sign_final_verify = (t4, e4, r9) => (o3._crypto_sign_final_verify = z2.Wb)(t4, e4, r9), o3._crypto_sign_ed25519_pk_to_curve25519 = (t4, e4) => (o3._crypto_sign_ed25519_pk_to_curve25519 = z2.Xb)(t4, e4), o3._crypto_sign_ed25519_sk_to_curve25519 = (t4, e4) => (o3._crypto_sign_ed25519_sk_to_curve25519 = z2.Yb)(t4, e4), o3._randombytes_random = () => (o3._randombytes_random = z2.Zb)(), o3._randombytes_stir = () => (o3._randombytes_stir = z2._b)(), o3._randombytes_uniform = (t4) => (o3._randombytes_uniform = z2.$b)(t4), o3._randombytes_buf = (t4, e4) => (o3._randombytes_buf = z2.ac)(t4, e4), o3._randombytes_buf_deterministic = (t4, e4, r9) => (o3._randombytes_buf_deterministic = z2.bc)(t4, e4, r9), o3._randombytes_seedbytes = () => (o3._randombytes_seedbytes = z2.cc)(), o3._randombytes_close = () => (o3._randombytes_close = z2.dc)(), o3._randombytes = (t4, e4, r9) => (o3._randombytes = z2.ec)(t4, e4, r9), o3._sodium_bin2hex = (t4, e4, r9, n7) => (o3._sodium_bin2hex = z2.fc)(t4, e4, r9, n7), o3._sodium_hex2bin = (t4, e4, r9, n7, A7, i3, s4) => (o3._sodium_hex2bin = z2.gc)(t4, e4, r9, n7, A7, i3, s4), o3._sodium_base64_encoded_len = (t4, e4) => (o3._sodium_base64_encoded_len = z2.hc)(t4, e4), o3._sodium_bin2base64 = (t4, e4, r9, n7, A7) => (o3._sodium_bin2base64 = z2.ic)(t4, e4, r9, n7, A7), o3._sodium_base642bin = (t4, e4, r9, n7, A7, i3, s4, a4) => (o3._sodium_base642bin = z2.jc)(t4, e4, r9, n7, A7, i3, s4, a4), o3._sodium_init = () => (o3._sodium_init = z2.kc)(), o3._sodium_pad = (t4, e4, r9, n7, A7) => (o3._sodium_pad = z2.lc)(t4, e4, r9, n7, A7), o3._sodium_unpad = (t4, e4, r9, n7) => (o3._sodium_unpad = z2.mc)(t4, e4, r9, n7), o3._sodium_version_string = () => (o3._sodium_version_string = z2.nc)(), o3._sodium_library_version_major = () => (o3._sodium_library_version_major = z2.oc)(), o3._sodium_library_version_minor = () => (o3._sodium_library_version_minor = z2.pc)(), o3._sodium_library_minimal = () => (o3._sodium_library_minimal = z2.qc)(), o3._malloc = (t4) => (o3._malloc = z2.rc)(t4), o3._free = (t4) => (o3._free = z2.sc)(t4), o3.setValue = function(t4, e4, r9 = "i8") {
                        switch (r9.endsWith("*") && (r9 = "*"), r9) {
                          case "i1":
                          case "i8":
                            y3[0 | t4] = e4;
                            break;
                          case "i16":
                            m3[t4 >> 1] = e4;
                            break;
                          case "i32":
                            B3[t4 >> 2] = e4;
                            break;
                          case "i64":
                            x3("to do setValue(i64) use WASM_BIGINT");
                          case "float":
                            w3[t4 >> 2] = e4;
                            break;
                          case "double":
                            v3[t4 >> 3] = e4;
                            break;
                          case "*":
                            E3[t4 >> 2] = e4;
                            break;
                          default:
                            x3(`invalid type for setValue: ${r9}`);
                        }
                      }, o3.getValue = function(t4, e4 = "i8") {
                        switch (e4.endsWith("*") && (e4 = "*"), e4) {
                          case "i1":
                          case "i8":
                            return y3[0 | t4];
                          case "i16":
                            return m3[t4 >> 1];
                          case "i32":
                            return B3[t4 >> 2];
                          case "i64":
                            x3("to do getValue(i64) use WASM_BIGINT");
                          case "float":
                            return w3[t4 >> 2];
                          case "double":
                            return v3[t4 >> 3];
                          case "*":
                            return E3[t4 >> 2];
                          default:
                            x3(`invalid type for getValue: ${e4}`);
                        }
                      }, o3.UTF8ToString = Y3, M3 = function t4() {
                        G3 || q2(), G3 || (M3 = t4);
                      }, o3.preInit)
                        for ("function" == typeof o3.preInit && (o3.preInit = [o3.preInit]); o3.preInit.length > 0; )
                          o3.preInit.pop()();
                      q2();
                    });
                  };
                  var n5, A5, o2 = void 0 !== o2 ? o2 : {}, s2 = Object.assign({}, o2), a2 = "object" == typeof window, c2 = "function" == typeof importScripts, h2 = "object" == typeof process && "object" == typeof process.versions && "string" == typeof process.versions.node, g2 = "";
                  if (h2) {
                    var u2 = T, l2 = T;
                    g2 = c2 ? l2.dirname(g2) + "/" : __dirname + "/", n5 = (t3, e4) => (t3 = function(t4) {
                      return t4.startsWith("file://");
                    }(t3) ? new URL(t3) : l2.normalize(t3), u2.readFileSync(t3, e4 ? void 0 : "utf8")), A5 = (t3) => {
                      var e4 = n5(t3, true);
                      return e4.buffer || (e4 = new Uint8Array(e4)), e4;
                    }, !o2.thisProgram && process.argv.length > 1 && process.argv[1].replace(/\\/g, "/"), process.argv.slice(2), e3.exports = o2, o2.inspect = () => "[Emscripten Module object]";
                  } else
                    (a2 || c2) && (c2 ? g2 = self.location.href : "undefined" != typeof document && document.currentScript && (g2 = document.currentScript.src), g2 = 0 !== g2.indexOf("blob:") ? g2.substr(0, g2.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "", n5 = (t3) => {
                      var e4 = new XMLHttpRequest();
                      return e4.open("GET", t3, false), e4.send(null), e4.responseText;
                    }, c2 && (A5 = (t3) => {
                      var e4 = new XMLHttpRequest();
                      return e4.open("GET", t3, false), e4.responseType = "arraybuffer", e4.send(null), new Uint8Array(e4.response);
                    }));
                  o2.print;
                  var f2, p2, d2 = o2.printErr || void 0;
                  Object.assign(o2, s2), s2 = null, o2.arguments && o2.arguments, o2.thisProgram && o2.thisProgram, o2.quit && o2.quit, o2.wasmBinary && (f2 = o2.wasmBinary), o2.noExitRuntime, "object" != typeof WebAssembly && N3("no native wasm support detected");
                  var I2, y2, C2, m2, B2, E2, w2, v2 = false;
                  function _2() {
                    var t3 = p2.buffer;
                    o2.HEAP8 = I2 = new Int8Array(t3), o2.HEAP16 = C2 = new Int16Array(t3), o2.HEAPU8 = y2 = new Uint8Array(t3), o2.HEAPU16 = new Uint16Array(t3), o2.HEAP32 = m2 = new Int32Array(t3), o2.HEAPU32 = B2 = new Uint32Array(t3), o2.HEAPF32 = E2 = new Float32Array(t3), o2.HEAPF64 = w2 = new Float64Array(t3);
                  }
                  var Q2 = [], b2 = [], k2 = [], D2 = 0, S2 = null;
                  function N3(t3) {
                    throw o2.onAbort && o2.onAbort(t3), d2(t3 = "Aborted(" + t3 + ")"), v2 = true, t3 += ". Build with -sASSERTIONS for more info.", new WebAssembly.RuntimeError(t3);
                  }
                  var M2, x2, F2 = "data:application/octet-stream;base64,";
                  function P2(t3) {
                    return t3.startsWith(F2);
                  }
                  P2(M2 = "data:application/octet-stream;base64,") || (x2 = M2, M2 = o2.locateFile ? o2.locateFile(x2, g2) : g2 + x2);
                  var R2, U2 = { 35256: () => o2.getRandomValue(), 35292: () => {
                    if (void 0 === o2.getRandomValue)
                      try {
                        var t3 = "object" == typeof window ? window : self, e4 = void 0 !== t3.crypto ? t3.crypto : t3.msCrypto, r8 = function() {
                          var t4 = new Uint32Array(1);
                          return e4.getRandomValues(t4), t4[0] >>> 0;
                        };
                        r8(), o2.getRandomValue = r8;
                      } catch (t4) {
                        try {
                          var n6 = __require("crypto"), A6 = function() {
                            var t5 = n6.randomBytes(4);
                            return (t5[0] << 24 | t5[1] << 16 | t5[2] << 8 | t5[3]) >>> 0;
                          };
                          A6(), o2.getRandomValue = A6;
                        } catch (t5) {
                          throw "No secure random number generator found";
                        }
                      }
                  } }, G2 = (t3) => {
                    for (; t3.length > 0; )
                      t3.shift()(o2);
                  }, H2 = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, L2 = (t3, e4) => t3 ? ((t4, e5, r8) => {
                    for (var n6 = e5 + r8, A6 = e5; t4[A6] && !(A6 >= n6); )
                      ++A6;
                    if (A6 - e5 > 16 && t4.buffer && H2)
                      return H2.decode(t4.subarray(e5, A6));
                    for (var i3 = ""; e5 < A6; ) {
                      var o3 = t4[e5++];
                      if (128 & o3) {
                        var s3 = 63 & t4[e5++];
                        if (192 != (224 & o3)) {
                          var a3 = 63 & t4[e5++];
                          if ((o3 = 224 == (240 & o3) ? (15 & o3) << 12 | s3 << 6 | a3 : (7 & o3) << 18 | s3 << 12 | a3 << 6 | 63 & t4[e5++]) < 65536)
                            i3 += String.fromCharCode(o3);
                          else {
                            var c3 = o3 - 65536;
                            i3 += String.fromCharCode(55296 | c3 >> 10, 56320 | 1023 & c3);
                          }
                        } else
                          i3 += String.fromCharCode((31 & o3) << 6 | s3);
                      } else
                        i3 += String.fromCharCode(o3);
                    }
                    return i3;
                  })(y2, t3, e4) : "", O2 = [], Y2 = (t3) => {
                    var e4 = (t3 - p2.buffer.byteLength + 65535) / 65536;
                    try {
                      return p2.grow(e4), _2(), 1;
                    } catch (t4) {
                    }
                  }, K2 = { b: (t3, e4, r8, n6) => {
                    N3(`Assertion failed: ${L2(t3)}, at: ` + [e4 ? L2(e4) : "unknown filename", r8, n6 ? L2(n6) : "unknown function"]);
                  }, c: () => {
                    N3("");
                  }, a: (t3, e4, r8) => ((t4, e5, r9) => {
                    var n6 = ((t5, e6) => {
                      var r10;
                      for (O2.length = 0; r10 = y2[t5++]; )
                        e6 += 105 != r10 && e6 % 8 ? 4 : 0, O2.push(105 == r10 ? m2[e6 >> 2] : w2[e6 >> 3]), e6 += 105 == r10 ? 4 : 8;
                      return O2;
                    })(e5, r9);
                    return U2[t4].apply(null, n6);
                  })(t3, e4, r8), d: (t3, e4, r8) => y2.copyWithin(t3, e4, e4 + r8), e: (t3) => {
                    var e4 = y2.length, r8 = 2147483648;
                    if ((t3 >>>= 0) > r8)
                      return false;
                    for (var n6, A6 = 1; A6 <= 4; A6 *= 2) {
                      var i3 = e4 * (1 + 0.2 / A6);
                      i3 = Math.min(i3, t3 + 100663296);
                      var o3 = Math.min(r8, (n6 = Math.max(t3, i3)) + (65536 - n6 % 65536) % 65536);
                      if (Y2(o3))
                        return true;
                    }
                    return false;
                  } }, J2 = function() {
                    var t3, e4, r8 = { a: K2 };
                    function n6(t4, e5) {
                      var r9 = t4.exports;
                      return p2 = (J2 = r9).f, _2(), J2.tc, function(t5) {
                        if (D2--, o2.monitorRunDependencies && o2.monitorRunDependencies(D2), 0 == D2 && S2) {
                          var e6 = S2;
                          S2 = null, e6();
                        }
                      }(), r9;
                    }
                    if (D2++, o2.monitorRunDependencies && o2.monitorRunDependencies(D2), o2.instantiateWasm)
                      try {
                        return o2.instantiateWasm(r8, n6);
                      } catch (t4) {
                        return d2(`Module.instantiateWasm callback failed with error: ${t4}`), false;
                      }
                    return t3 = r8, e4 = function(t4) {
                      n6(t4.instance);
                    }, function(t4) {
                      return Promise.resolve().then(() => function(t5) {
                        if (t5 == M2 && f2)
                          return new Uint8Array(f2);
                        var e5 = function(t6) {
                          if (P2(t6))
                            return function(t7) {
                              if (void 0 !== h2 && h2) {
                                var e6 = Buffer.from(t7, "base64");
                                return new Uint8Array(e6.buffer, e6.byteOffset, e6.length);
                              }
                              try {
                                for (var r9 = atob(t7), n7 = new Uint8Array(r9.length), A6 = 0; A6 < r9.length; ++A6)
                                  n7[A6] = r9.charCodeAt(A6);
                                return n7;
                              } catch (t8) {
                                throw new Error("Converting base64 string to bytes failed.");
                              }
                            }(t6.slice(37));
                        }(t5);
                        if (e5)
                          return e5;
                        if (A5)
                          return A5(t5);
                        throw "both async and sync fetching of the wasm failed";
                      }(t4));
                    }(M2).then((e5) => WebAssembly.instantiate(e5, t3)).then((t4) => t4).then(e4, (t4) => {
                      d2(`failed to asynchronously prepare wasm: ${t4}`), N3(t4);
                    }), {};
                  }();
                  function j2() {
                    function t3() {
                      R2 || (R2 = true, o2.calledRun = true, v2 || (G2(b2), o2.onRuntimeInitialized && o2.onRuntimeInitialized(), function() {
                        if (o2.postRun)
                          for ("function" == typeof o2.postRun && (o2.postRun = [o2.postRun]); o2.postRun.length; )
                            t4 = o2.postRun.shift(), k2.unshift(t4);
                        var t4;
                        G2(k2);
                      }()));
                    }
                    D2 > 0 || (function() {
                      if (o2.preRun)
                        for ("function" == typeof o2.preRun && (o2.preRun = [o2.preRun]); o2.preRun.length; )
                          t4 = o2.preRun.shift(), Q2.unshift(t4);
                      var t4;
                      G2(Q2);
                    }(), D2 > 0 || (o2.setStatus ? (o2.setStatus("Running..."), setTimeout(function() {
                      setTimeout(function() {
                        o2.setStatus("");
                      }, 1), t3();
                    }, 1)) : t3()));
                  }
                  if (o2._crypto_aead_chacha20poly1305_encrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3) => (o2._crypto_aead_chacha20poly1305_encrypt_detached = J2.g)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3), o2._crypto_aead_chacha20poly1305_encrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_encrypt = J2.h)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3) => (o2._crypto_aead_chacha20poly1305_ietf_encrypt_detached = J2.i)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3), o2._crypto_aead_chacha20poly1305_ietf_encrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_ietf_encrypt = J2.j)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_decrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_decrypt_detached = J2.k)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_decrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_decrypt = J2.l)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_ietf_decrypt_detached = J2.m)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_ietf_decrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_chacha20poly1305_ietf_decrypt = J2.n)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_chacha20poly1305_ietf_keybytes = () => (o2._crypto_aead_chacha20poly1305_ietf_keybytes = J2.o)(), o2._crypto_aead_chacha20poly1305_ietf_npubbytes = () => (o2._crypto_aead_chacha20poly1305_ietf_npubbytes = J2.p)(), o2._crypto_aead_chacha20poly1305_ietf_nsecbytes = () => (o2._crypto_aead_chacha20poly1305_ietf_nsecbytes = J2.q)(), o2._crypto_aead_chacha20poly1305_ietf_abytes = () => (o2._crypto_aead_chacha20poly1305_ietf_abytes = J2.r)(), o2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = () => (o2._crypto_aead_chacha20poly1305_ietf_messagebytes_max = J2.s)(), o2._crypto_aead_chacha20poly1305_ietf_keygen = (t3) => (o2._crypto_aead_chacha20poly1305_ietf_keygen = J2.t)(t3), o2._crypto_aead_chacha20poly1305_keybytes = () => (o2._crypto_aead_chacha20poly1305_keybytes = J2.u)(), o2._crypto_aead_chacha20poly1305_npubbytes = () => (o2._crypto_aead_chacha20poly1305_npubbytes = J2.v)(), o2._crypto_aead_chacha20poly1305_nsecbytes = () => (o2._crypto_aead_chacha20poly1305_nsecbytes = J2.w)(), o2._crypto_aead_chacha20poly1305_abytes = () => (o2._crypto_aead_chacha20poly1305_abytes = J2.x)(), o2._crypto_aead_chacha20poly1305_messagebytes_max = () => (o2._crypto_aead_chacha20poly1305_messagebytes_max = J2.y)(), o2._crypto_aead_chacha20poly1305_keygen = (t3) => (o2._crypto_aead_chacha20poly1305_keygen = J2.z)(t3), o2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3) => (o2._crypto_aead_xchacha20poly1305_ietf_encrypt_detached = J2.A)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3, u3), o2._crypto_aead_xchacha20poly1305_ietf_encrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_xchacha20poly1305_ietf_encrypt = J2.B)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_xchacha20poly1305_ietf_decrypt_detached = J2.C)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_xchacha20poly1305_ietf_decrypt = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3) => (o2._crypto_aead_xchacha20poly1305_ietf_decrypt = J2.D)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3, g3), o2._crypto_aead_xchacha20poly1305_ietf_keybytes = () => (o2._crypto_aead_xchacha20poly1305_ietf_keybytes = J2.E)(), o2._crypto_aead_xchacha20poly1305_ietf_npubbytes = () => (o2._crypto_aead_xchacha20poly1305_ietf_npubbytes = J2.F)(), o2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = () => (o2._crypto_aead_xchacha20poly1305_ietf_nsecbytes = J2.G)(), o2._crypto_aead_xchacha20poly1305_ietf_abytes = () => (o2._crypto_aead_xchacha20poly1305_ietf_abytes = J2.H)(), o2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = () => (o2._crypto_aead_xchacha20poly1305_ietf_messagebytes_max = J2.I)(), o2._crypto_aead_xchacha20poly1305_ietf_keygen = (t3) => (o2._crypto_aead_xchacha20poly1305_ietf_keygen = J2.J)(t3), o2._crypto_auth_bytes = () => (o2._crypto_auth_bytes = J2.K)(), o2._crypto_auth_keybytes = () => (o2._crypto_auth_keybytes = J2.L)(), o2._crypto_auth = (t3, e4, r8, n6, A6) => (o2._crypto_auth = J2.M)(t3, e4, r8, n6, A6), o2._crypto_auth_verify = (t3, e4, r8, n6, A6) => (o2._crypto_auth_verify = J2.N)(t3, e4, r8, n6, A6), o2._crypto_auth_keygen = (t3) => (o2._crypto_auth_keygen = J2.O)(t3), o2._crypto_box_seedbytes = () => (o2._crypto_box_seedbytes = J2.P)(), o2._crypto_box_publickeybytes = () => (o2._crypto_box_publickeybytes = J2.Q)(), o2._crypto_box_secretkeybytes = () => (o2._crypto_box_secretkeybytes = J2.R)(), o2._crypto_box_beforenmbytes = () => (o2._crypto_box_beforenmbytes = J2.S)(), o2._crypto_box_noncebytes = () => (o2._crypto_box_noncebytes = J2.T)(), o2._crypto_box_macbytes = () => (o2._crypto_box_macbytes = J2.U)(), o2._crypto_box_messagebytes_max = () => (o2._crypto_box_messagebytes_max = J2.V)(), o2._crypto_box_seed_keypair = (t3, e4, r8) => (o2._crypto_box_seed_keypair = J2.W)(t3, e4, r8), o2._crypto_box_keypair = (t3, e4) => (o2._crypto_box_keypair = J2.X)(t3, e4), o2._crypto_box_beforenm = (t3, e4, r8) => (o2._crypto_box_beforenm = J2.Y)(t3, e4, r8), o2._crypto_box_detached_afternm = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_box_detached_afternm = J2.Z)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_box_detached = (t3, e4, r8, n6, A6, i3, s3, a3) => (o2._crypto_box_detached = J2._)(t3, e4, r8, n6, A6, i3, s3, a3), o2._crypto_box_easy_afternm = (t3, e4, r8, n6, A6, i3) => (o2._crypto_box_easy_afternm = J2.$)(t3, e4, r8, n6, A6, i3), o2._crypto_box_easy = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_box_easy = J2.aa)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_box_open_detached_afternm = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_box_open_detached_afternm = J2.ba)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_box_open_detached = (t3, e4, r8, n6, A6, i3, s3, a3) => (o2._crypto_box_open_detached = J2.ca)(t3, e4, r8, n6, A6, i3, s3, a3), o2._crypto_box_open_easy_afternm = (t3, e4, r8, n6, A6, i3) => (o2._crypto_box_open_easy_afternm = J2.da)(t3, e4, r8, n6, A6, i3), o2._crypto_box_open_easy = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_box_open_easy = J2.ea)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_box_seal = (t3, e4, r8, n6, A6) => (o2._crypto_box_seal = J2.fa)(t3, e4, r8, n6, A6), o2._crypto_box_seal_open = (t3, e4, r8, n6, A6, i3) => (o2._crypto_box_seal_open = J2.ga)(t3, e4, r8, n6, A6, i3), o2._crypto_box_sealbytes = () => (o2._crypto_box_sealbytes = J2.ha)(), o2._crypto_generichash_bytes_min = () => (o2._crypto_generichash_bytes_min = J2.ia)(), o2._crypto_generichash_bytes_max = () => (o2._crypto_generichash_bytes_max = J2.ja)(), o2._crypto_generichash_bytes = () => (o2._crypto_generichash_bytes = J2.ka)(), o2._crypto_generichash_keybytes_min = () => (o2._crypto_generichash_keybytes_min = J2.la)(), o2._crypto_generichash_keybytes_max = () => (o2._crypto_generichash_keybytes_max = J2.ma)(), o2._crypto_generichash_keybytes = () => (o2._crypto_generichash_keybytes = J2.na)(), o2._crypto_generichash_statebytes = () => (o2._crypto_generichash_statebytes = J2.oa)(), o2._crypto_generichash = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_generichash = J2.pa)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_generichash_init = (t3, e4, r8, n6) => (o2._crypto_generichash_init = J2.qa)(t3, e4, r8, n6), o2._crypto_generichash_update = (t3, e4, r8, n6) => (o2._crypto_generichash_update = J2.ra)(t3, e4, r8, n6), o2._crypto_generichash_final = (t3, e4, r8) => (o2._crypto_generichash_final = J2.sa)(t3, e4, r8), o2._crypto_generichash_keygen = (t3) => (o2._crypto_generichash_keygen = J2.ta)(t3), o2._crypto_hash_bytes = () => (o2._crypto_hash_bytes = J2.ua)(), o2._crypto_hash = (t3, e4, r8, n6) => (o2._crypto_hash = J2.va)(t3, e4, r8, n6), o2._crypto_kdf_bytes_min = () => (o2._crypto_kdf_bytes_min = J2.wa)(), o2._crypto_kdf_bytes_max = () => (o2._crypto_kdf_bytes_max = J2.xa)(), o2._crypto_kdf_contextbytes = () => (o2._crypto_kdf_contextbytes = J2.ya)(), o2._crypto_kdf_keybytes = () => (o2._crypto_kdf_keybytes = J2.za)(), o2._crypto_kdf_derive_from_key = (t3, e4, r8, n6, A6, i3) => (o2._crypto_kdf_derive_from_key = J2.Aa)(t3, e4, r8, n6, A6, i3), o2._crypto_kdf_keygen = (t3) => (o2._crypto_kdf_keygen = J2.Ba)(t3), o2._crypto_kdf_hkdf_sha256_extract_init = (t3, e4, r8) => (o2._crypto_kdf_hkdf_sha256_extract_init = J2.Ca)(t3, e4, r8), o2._crypto_kdf_hkdf_sha256_extract_update = (t3, e4, r8) => (o2._crypto_kdf_hkdf_sha256_extract_update = J2.Da)(t3, e4, r8), o2._crypto_kdf_hkdf_sha256_extract_final = (t3, e4) => (o2._crypto_kdf_hkdf_sha256_extract_final = J2.Ea)(t3, e4), o2._crypto_kdf_hkdf_sha256_extract = (t3, e4, r8, n6, A6) => (o2._crypto_kdf_hkdf_sha256_extract = J2.Fa)(t3, e4, r8, n6, A6), o2._crypto_kdf_hkdf_sha256_keygen = (t3) => (o2._crypto_kdf_hkdf_sha256_keygen = J2.Ga)(t3), o2._crypto_kdf_hkdf_sha256_expand = (t3, e4, r8, n6, A6) => (o2._crypto_kdf_hkdf_sha256_expand = J2.Ha)(t3, e4, r8, n6, A6), o2._crypto_kdf_hkdf_sha256_keybytes = () => (o2._crypto_kdf_hkdf_sha256_keybytes = J2.Ia)(), o2._crypto_kdf_hkdf_sha256_bytes_min = () => (o2._crypto_kdf_hkdf_sha256_bytes_min = J2.Ja)(), o2._crypto_kdf_hkdf_sha256_bytes_max = () => (o2._crypto_kdf_hkdf_sha256_bytes_max = J2.Ka)(), o2._crypto_kdf_hkdf_sha256_statebytes = () => (o2._crypto_kdf_hkdf_sha256_statebytes = J2.La)(), o2._crypto_kdf_hkdf_sha512_extract_init = (t3, e4, r8) => (o2._crypto_kdf_hkdf_sha512_extract_init = J2.Ma)(t3, e4, r8), o2._crypto_kdf_hkdf_sha512_extract_update = (t3, e4, r8) => (o2._crypto_kdf_hkdf_sha512_extract_update = J2.Na)(t3, e4, r8), o2._crypto_kdf_hkdf_sha512_extract_final = (t3, e4) => (o2._crypto_kdf_hkdf_sha512_extract_final = J2.Oa)(t3, e4), o2._crypto_kdf_hkdf_sha512_extract = (t3, e4, r8, n6, A6) => (o2._crypto_kdf_hkdf_sha512_extract = J2.Pa)(t3, e4, r8, n6, A6), o2._crypto_kdf_hkdf_sha512_keygen = (t3) => (o2._crypto_kdf_hkdf_sha512_keygen = J2.Qa)(t3), o2._crypto_kdf_hkdf_sha512_expand = (t3, e4, r8, n6, A6) => (o2._crypto_kdf_hkdf_sha512_expand = J2.Ra)(t3, e4, r8, n6, A6), o2._crypto_kdf_hkdf_sha512_keybytes = () => (o2._crypto_kdf_hkdf_sha512_keybytes = J2.Sa)(), o2._crypto_kdf_hkdf_sha512_bytes_min = () => (o2._crypto_kdf_hkdf_sha512_bytes_min = J2.Ta)(), o2._crypto_kdf_hkdf_sha512_bytes_max = () => (o2._crypto_kdf_hkdf_sha512_bytes_max = J2.Ua)(), o2._crypto_kx_seed_keypair = (t3, e4, r8) => (o2._crypto_kx_seed_keypair = J2.Va)(t3, e4, r8), o2._crypto_kx_keypair = (t3, e4) => (o2._crypto_kx_keypair = J2.Wa)(t3, e4), o2._crypto_kx_client_session_keys = (t3, e4, r8, n6, A6) => (o2._crypto_kx_client_session_keys = J2.Xa)(t3, e4, r8, n6, A6), o2._crypto_kx_server_session_keys = (t3, e4, r8, n6, A6) => (o2._crypto_kx_server_session_keys = J2.Ya)(t3, e4, r8, n6, A6), o2._crypto_kx_publickeybytes = () => (o2._crypto_kx_publickeybytes = J2.Za)(), o2._crypto_kx_secretkeybytes = () => (o2._crypto_kx_secretkeybytes = J2._a)(), o2._crypto_kx_seedbytes = () => (o2._crypto_kx_seedbytes = J2.$a)(), o2._crypto_kx_sessionkeybytes = () => (o2._crypto_kx_sessionkeybytes = J2.ab)(), o2._crypto_scalarmult_base = (t3, e4) => (o2._crypto_scalarmult_base = J2.bb)(t3, e4), o2._crypto_scalarmult = (t3, e4, r8) => (o2._crypto_scalarmult = J2.cb)(t3, e4, r8), o2._crypto_scalarmult_bytes = () => (o2._crypto_scalarmult_bytes = J2.db)(), o2._crypto_scalarmult_scalarbytes = () => (o2._crypto_scalarmult_scalarbytes = J2.eb)(), o2._crypto_secretbox_keybytes = () => (o2._crypto_secretbox_keybytes = J2.fb)(), o2._crypto_secretbox_noncebytes = () => (o2._crypto_secretbox_noncebytes = J2.gb)(), o2._crypto_secretbox_macbytes = () => (o2._crypto_secretbox_macbytes = J2.hb)(), o2._crypto_secretbox_messagebytes_max = () => (o2._crypto_secretbox_messagebytes_max = J2.ib)(), o2._crypto_secretbox_keygen = (t3) => (o2._crypto_secretbox_keygen = J2.jb)(t3), o2._crypto_secretbox_detached = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_secretbox_detached = J2.kb)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_secretbox_easy = (t3, e4, r8, n6, A6, i3) => (o2._crypto_secretbox_easy = J2.lb)(t3, e4, r8, n6, A6, i3), o2._crypto_secretbox_open_detached = (t3, e4, r8, n6, A6, i3, s3) => (o2._crypto_secretbox_open_detached = J2.mb)(t3, e4, r8, n6, A6, i3, s3), o2._crypto_secretbox_open_easy = (t3, e4, r8, n6, A6, i3) => (o2._crypto_secretbox_open_easy = J2.nb)(t3, e4, r8, n6, A6, i3), o2._crypto_secretstream_xchacha20poly1305_keygen = (t3) => (o2._crypto_secretstream_xchacha20poly1305_keygen = J2.ob)(t3), o2._crypto_secretstream_xchacha20poly1305_init_push = (t3, e4, r8) => (o2._crypto_secretstream_xchacha20poly1305_init_push = J2.pb)(t3, e4, r8), o2._crypto_secretstream_xchacha20poly1305_init_pull = (t3, e4, r8) => (o2._crypto_secretstream_xchacha20poly1305_init_pull = J2.qb)(t3, e4, r8), o2._crypto_secretstream_xchacha20poly1305_rekey = (t3) => (o2._crypto_secretstream_xchacha20poly1305_rekey = J2.rb)(t3), o2._crypto_secretstream_xchacha20poly1305_push = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3) => (o2._crypto_secretstream_xchacha20poly1305_push = J2.sb)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3), o2._crypto_secretstream_xchacha20poly1305_pull = (t3, e4, r8, n6, A6, i3, s3, a3, c3, h3) => (o2._crypto_secretstream_xchacha20poly1305_pull = J2.tb)(t3, e4, r8, n6, A6, i3, s3, a3, c3, h3), o2._crypto_secretstream_xchacha20poly1305_statebytes = () => (o2._crypto_secretstream_xchacha20poly1305_statebytes = J2.ub)(), o2._crypto_secretstream_xchacha20poly1305_abytes = () => (o2._crypto_secretstream_xchacha20poly1305_abytes = J2.vb)(), o2._crypto_secretstream_xchacha20poly1305_headerbytes = () => (o2._crypto_secretstream_xchacha20poly1305_headerbytes = J2.wb)(), o2._crypto_secretstream_xchacha20poly1305_keybytes = () => (o2._crypto_secretstream_xchacha20poly1305_keybytes = J2.xb)(), o2._crypto_secretstream_xchacha20poly1305_messagebytes_max = () => (o2._crypto_secretstream_xchacha20poly1305_messagebytes_max = J2.yb)(), o2._crypto_secretstream_xchacha20poly1305_tag_message = () => (o2._crypto_secretstream_xchacha20poly1305_tag_message = J2.zb)(), o2._crypto_secretstream_xchacha20poly1305_tag_push = () => (o2._crypto_secretstream_xchacha20poly1305_tag_push = J2.Ab)(), o2._crypto_secretstream_xchacha20poly1305_tag_rekey = () => (o2._crypto_secretstream_xchacha20poly1305_tag_rekey = J2.Bb)(), o2._crypto_secretstream_xchacha20poly1305_tag_final = () => (o2._crypto_secretstream_xchacha20poly1305_tag_final = J2.Cb)(), o2._crypto_shorthash_bytes = () => (o2._crypto_shorthash_bytes = J2.Db)(), o2._crypto_shorthash_keybytes = () => (o2._crypto_shorthash_keybytes = J2.Eb)(), o2._crypto_shorthash = (t3, e4, r8, n6, A6) => (o2._crypto_shorthash = J2.Fb)(t3, e4, r8, n6, A6), o2._crypto_shorthash_keygen = (t3) => (o2._crypto_shorthash_keygen = J2.Gb)(t3), o2._crypto_sign_statebytes = () => (o2._crypto_sign_statebytes = J2.Hb)(), o2._crypto_sign_bytes = () => (o2._crypto_sign_bytes = J2.Ib)(), o2._crypto_sign_seedbytes = () => (o2._crypto_sign_seedbytes = J2.Jb)(), o2._crypto_sign_publickeybytes = () => (o2._crypto_sign_publickeybytes = J2.Kb)(), o2._crypto_sign_secretkeybytes = () => (o2._crypto_sign_secretkeybytes = J2.Lb)(), o2._crypto_sign_messagebytes_max = () => (o2._crypto_sign_messagebytes_max = J2.Mb)(), o2._crypto_sign_seed_keypair = (t3, e4, r8) => (o2._crypto_sign_seed_keypair = J2.Nb)(t3, e4, r8), o2._crypto_sign_keypair = (t3, e4) => (o2._crypto_sign_keypair = J2.Ob)(t3, e4), o2._crypto_sign = (t3, e4, r8, n6, A6, i3) => (o2._crypto_sign = J2.Pb)(t3, e4, r8, n6, A6, i3), o2._crypto_sign_open = (t3, e4, r8, n6, A6, i3) => (o2._crypto_sign_open = J2.Qb)(t3, e4, r8, n6, A6, i3), o2._crypto_sign_detached = (t3, e4, r8, n6, A6, i3) => (o2._crypto_sign_detached = J2.Rb)(t3, e4, r8, n6, A6, i3), o2._crypto_sign_verify_detached = (t3, e4, r8, n6, A6) => (o2._crypto_sign_verify_detached = J2.Sb)(t3, e4, r8, n6, A6), o2._crypto_sign_init = (t3) => (o2._crypto_sign_init = J2.Tb)(t3), o2._crypto_sign_update = (t3, e4, r8, n6) => (o2._crypto_sign_update = J2.Ub)(t3, e4, r8, n6), o2._crypto_sign_final_create = (t3, e4, r8, n6) => (o2._crypto_sign_final_create = J2.Vb)(t3, e4, r8, n6), o2._crypto_sign_final_verify = (t3, e4, r8) => (o2._crypto_sign_final_verify = J2.Wb)(t3, e4, r8), o2._crypto_sign_ed25519_pk_to_curve25519 = (t3, e4) => (o2._crypto_sign_ed25519_pk_to_curve25519 = J2.Xb)(t3, e4), o2._crypto_sign_ed25519_sk_to_curve25519 = (t3, e4) => (o2._crypto_sign_ed25519_sk_to_curve25519 = J2.Yb)(t3, e4), o2._randombytes_random = () => (o2._randombytes_random = J2.Zb)(), o2._randombytes_stir = () => (o2._randombytes_stir = J2._b)(), o2._randombytes_uniform = (t3) => (o2._randombytes_uniform = J2.$b)(t3), o2._randombytes_buf = (t3, e4) => (o2._randombytes_buf = J2.ac)(t3, e4), o2._randombytes_buf_deterministic = (t3, e4, r8) => (o2._randombytes_buf_deterministic = J2.bc)(t3, e4, r8), o2._randombytes_seedbytes = () => (o2._randombytes_seedbytes = J2.cc)(), o2._randombytes_close = () => (o2._randombytes_close = J2.dc)(), o2._randombytes = (t3, e4, r8) => (o2._randombytes = J2.ec)(t3, e4, r8), o2._sodium_bin2hex = (t3, e4, r8, n6) => (o2._sodium_bin2hex = J2.fc)(t3, e4, r8, n6), o2._sodium_hex2bin = (t3, e4, r8, n6, A6, i3, s3) => (o2._sodium_hex2bin = J2.gc)(t3, e4, r8, n6, A6, i3, s3), o2._sodium_base64_encoded_len = (t3, e4) => (o2._sodium_base64_encoded_len = J2.hc)(t3, e4), o2._sodium_bin2base64 = (t3, e4, r8, n6, A6) => (o2._sodium_bin2base64 = J2.ic)(t3, e4, r8, n6, A6), o2._sodium_base642bin = (t3, e4, r8, n6, A6, i3, s3, a3) => (o2._sodium_base642bin = J2.jc)(t3, e4, r8, n6, A6, i3, s3, a3), o2._sodium_init = () => (o2._sodium_init = J2.kc)(), o2._sodium_pad = (t3, e4, r8, n6, A6) => (o2._sodium_pad = J2.lc)(t3, e4, r8, n6, A6), o2._sodium_unpad = (t3, e4, r8, n6) => (o2._sodium_unpad = J2.mc)(t3, e4, r8, n6), o2._sodium_version_string = () => (o2._sodium_version_string = J2.nc)(), o2._sodium_library_version_major = () => (o2._sodium_library_version_major = J2.oc)(), o2._sodium_library_version_minor = () => (o2._sodium_library_version_minor = J2.pc)(), o2._sodium_library_minimal = () => (o2._sodium_library_minimal = J2.qc)(), o2._malloc = (t3) => (o2._malloc = J2.rc)(t3), o2._free = (t3) => (o2._free = J2.sc)(t3), o2.setValue = function(t3, e4, r8 = "i8") {
                    switch (r8.endsWith("*") && (r8 = "*"), r8) {
                      case "i1":
                      case "i8":
                        I2[0 | t3] = e4;
                        break;
                      case "i16":
                        C2[t3 >> 1] = e4;
                        break;
                      case "i32":
                        m2[t3 >> 2] = e4;
                        break;
                      case "i64":
                        N3("to do setValue(i64) use WASM_BIGINT");
                      case "float":
                        E2[t3 >> 2] = e4;
                        break;
                      case "double":
                        w2[t3 >> 3] = e4;
                        break;
                      case "*":
                        B2[t3 >> 2] = e4;
                        break;
                      default:
                        N3(`invalid type for setValue: ${r8}`);
                    }
                  }, o2.getValue = function(t3, e4 = "i8") {
                    switch (e4.endsWith("*") && (e4 = "*"), e4) {
                      case "i1":
                      case "i8":
                        return I2[0 | t3];
                      case "i16":
                        return C2[t3 >> 1];
                      case "i32":
                        return m2[t3 >> 2];
                      case "i64":
                        N3("to do getValue(i64) use WASM_BIGINT");
                      case "float":
                        return E2[t3 >> 2];
                      case "double":
                        return w2[t3 >> 3];
                      case "*":
                        return B2[t3 >> 2];
                      default:
                        N3(`invalid type for getValue: ${e4}`);
                    }
                  }, o2.UTF8ToString = L2, S2 = function t3() {
                    R2 || j2(), R2 || (S2 = t3);
                  }, o2.preInit)
                    for ("function" == typeof o2.preInit && (o2.preInit = [o2.preInit]); o2.preInit.length > 0; )
                      o2.preInit.pop()();
                  j2();
                }).catch(function() {
                  return i2.useBackupModule();
                }), n4;
              }
              "string" != typeof r5.nodeName ? A3(r5) : n3.libsodium = A3(n3.libsodium_mod || (n3.commonJsStrict = {}));
            }(t);
          }(Yu, Yu.exports)), Yu.exports)) : r4.sodium = n2(r4.commonJsStrict = {}, r4.libsodium), A2 && r4.sodium.ready.then(function() {
            A2(r4.sodium);
          });
        }(t);
      }(Ou);
      var Ku = e(Ou);
      var Ju = "HSK_";
      async function ju(t2) {
        await Ku.ready;
        let e2 = null, r4 = null;
        const n2 = process.env.X25519_PRIVATE_KEY;
        if (!n2)
          return console.warn("X25519_PRIVATE_KEY is not defined"), { privateKey: null, publicKey: null };
        if (e2 = await async function(t3) {
          await Ku.ready;
          const e3 = Ku.from_base64(t3, Ku.base64_variants.URLSAFE_NO_PADDING);
          return Ku.crypto_scalarmult_base(e3, "base64");
        }(n2), !e2)
          return console.warn("Public key is null"), { privateKey: null, publicKey: null };
        if (!t2?.length)
          return console.warn("No cipherText was provided"), { privateKey: null, publicKey: null };
        const A2 = Ku.from_base64(e2, Ku.base64_variants.URLSAFE_NO_PADDING), i2 = Ku.from_base64(n2, Ku.base64_variants.URLSAFE_NO_PADDING), o2 = Ku.from_base64(t2, Ku.base64_variants.URLSAFE_NO_PADDING), s2 = Ku.crypto_box_seal_open(o2, A2, i2, "text");
        return r4 = s2?.replace(Ju, ""), { privateKey: r4, publicKey: e2 };
      }
      var zu;
      var qu;
      var Xu = Object.create;
      var Vu = Object.defineProperty;
      var Wu = Object.getOwnPropertyDescriptor;
      var Zu = Object.getOwnPropertyNames;
      var $u = Object.getPrototypeOf;
      var tl = Object.prototype.hasOwnProperty;
      var el = (t2, e2) => function() {
        return t2 && (e2 = (0, t2[Zu(t2)[0]])(t2 = 0)), e2;
      };
      var rl = (t2, e2) => function() {
        return e2 || (0, t2[Zu(t2)[0]])((e2 = { exports: {} }).exports, e2), e2.exports;
      };
      var nl = (t2, e2, r4) => (r4 = null != t2 ? Xu($u(t2)) : {}, ((t3, e3, r5, n2) => {
        if (e3 && "object" == typeof e3 || "function" == typeof e3)
          for (let A2 of Zu(e3))
            tl.call(t3, A2) || A2 === r5 || Vu(t3, A2, { get: () => e3[A2], enumerable: !(n2 = Wu(e3, A2)) || n2.enumerable });
        return t3;
      })(!e2 && t2 && t2.__esModule ? r4 : Vu(r4, "default", { value: t2, enumerable: true }), t2));
      var Al = el({ "<define:chainIDList>"() {
        zu = { 1: "ethereum", 8: "ubiq", 10: "optimism", 19: "songbird", 20: "elastos", 24: "kardiachain", 25: "cronos", 30: "rsk", 40: "telos", 50: "xdc", 52: "csc", 55: "zyx", 56: "binance", 57: "syscoin", 60: "gochain", 61: "ethereumclassic", 66: "okexchain", 70: "hoo", 82: "meter", 87: "nova network", 88: "viction", 100: "xdai", 106: "velas", 108: "thundercore", 122: "fuse", 128: "heco", 137: "polygon", 148: "shimmer_evm", 169: "manta", 200: "xdaiarb", 204: "op_bnb", 246: "energyweb", 248: "oasys", 250: "fantom", 269: "hpb", 288: "boba", 311: "omax", 314: "filecoin", 321: "kucoin", 324: "era", 336: "shiden", 361: "theta", 369: "pulse", 416: "sx", 463: "areon", 534: "candle", 570: "rollux", 592: "astar", 820: "callisto", 888: "wanchain", 1030: "conflux", 1088: "metis", 1101: "polygon_zkevm", 1116: "core", 1231: "ultron", 1234: "step", 1284: "moonbeam", 1285: "moonriver", 1440: "living assets mainnet", 1559: "tenet", 1975: "onus", 2e3: "dogechain", 2222: "kava", 2332: "soma", 4337: "beam", 4689: "iotex", 5e3: "mantle", 5050: "xlc", 5551: "nahmii", 6969: "tombchain", 7700: "canto", 8217: "klaytn", 8453: "base", 8899: "jbc", 9001: "evmos", 9790: "carbon", 1e4: "smartbch", 15551: "loop", 17777: "eos_evm", 32520: "bitgert", 32659: "fusion", 32769: "zilliqa", 42161: "arbitrum", 42170: "arbitrum_nova", 42220: "celo", 42262: "oasis", 43114: "avalanche", 47805: "rei", 55555: "reichain", 59144: "linea", 71402: "godwoken", 333999: "polis", 420420: "kekchain", 888888: "vision", 245022934: "neon", 1313161554: "aurora", 16666e5: "harmony", 11297108109: "palm", 836542336838601: "curio" };
      } });
      var il = el({ "<define:extraRpcs>"() {
        qu = { 1: ["https://mainnet.eth.cloud.ava.do/", "https://ethereumnodelight.app.runonflux.io", "https://eth-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://main-light.eth.linkpool.io", "https://rpc.notadegen.com/eth", "https://eth.llamarpc.com", "https://endpoints.omniatech.io/v1/eth/mainnet/public", "https://go.getblock.io/d7dab8149ec04390aaa923ff2768f914", "https://ethereum-rpc.publicnode.com", "https://1rpc.io/eth", "https://rpc.builder0x69.io/", "https://rpc.mevblocker.io", "https://rpc.flashbots.net/", "https://eth-pokt.nodies.app", "https://rpc.payload.de", "https://api.zmok.io/mainnet/oaen6dy8ff6hju9k", "https://eth.meowrpc.com", "https://eth.drpc.org", "https://eth.merkle.io", "https://rpc.lokibuilder.xyz/wallet", "https://api.stateless.solutions/ethereum/v1/0ec6cac0-ecac-4247-8a41-1e685deadfe4", "https://rpc.polysplit.cloud/v1/chain/1", "https://rpc.tornadoeth.cash/eth", "https://rpc.tornadoeth.cash/mev"], 2: ["https://node.eggs.cool", "https://node.expanse.tech"], 3: ["https://rpc.ankr.com/eth_ropsten", "https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"], 4: ["https://rpc.ankr.com/eth_rinkeby", "https://rinkeby.infura.io/3/9aa3d95b3bc440fa88ea12eaa4456161"], 5: ["https://endpoints.omniatech.io/v1/eth/goerli/public", "https://ethereum-goerli-rpc.publicnode.com", "https://rpc.tornadoeth.cash/goerli"], 6: ["https://www.ethercluster.com/kotti"], 7: ["https://rpc.dome.cloud"], 8: ["https://rpc.octano.dev"], 10: ["https://mainnet.optimism.io/", "https://optimism.llamarpc.com", "https://1rpc.io/op", "https://op-pokt.nodies.app", "https://endpoints.omniatech.io/v1/op/mainnet/public", "https://optimism-rpc.publicnode.com", "https://optimism.meowrpc.com", "https://optimism.drpc.org", "https://api.stateless.solutions/optimism/v1/f373feb1-c8e4-41c9-bb74-2c691988dd34", "https://rpc.tornadoeth.cash/optimism"], 11: ["https://api.metadium.com/dev"], 14: [], 15: ["https://prenet.diode.io:8443/"], 17: ["https://rpc.thaifi.com"], 19: ["https://songbird.towolabs.com/rpc"], 20: ["https://api.elastos.io/esc", "https://api.trinity-tech.io/esc"], 22: ["https://api.trinity-tech.io/eid", "https://api.elastos.io/eid"], 24: ["https://rpc.kardiachain.io"], 25: ["https://evm.cronos.org", "https://cronos-rpc.elk.finance/", "https://cronos-evm-rpc.publicnode.com", "https://1rpc.io/cro"], 27: ["https://rpc.shibachain.net"], 29: ["https://rpc.genesisl1.org"], 30: ["https://public-node.rsk.co"], 33: ["https://rpc.goodata.io"], 35: ["https://rpc.tbwg.io"], 38: ["https://rpc.valorbit.com/v2"], 40: ["https://mainnet.telos.net/evm", "https://rpc1.eu.telos.net/evm", "https://rpc1.us.telos.net/evm", "https://rpc2.us.telos.net/evm", "https://api.kainosbp.com/evm", "https://rpc2.eu.telos.net/evm", "https://evm.teloskorea.com/evm", "https://rpc2.teloskorea.com/evm", "https://rpc01.us.telosunlimited.io/evm", "https://rpc02.us.telosunlimited.io/evm", "https://1rpc.io/telos/evm"], 44: [], 50: ["https://rpc.xdcrpc.com", "https://rpc1.xinfin.network", "https://erpc.xinfin.network", "https://rpc.xinfin.network", "https://erpc.xdcrpc.com", "https://rpc.xdc.org"], 51: ["https://rpc.apothem.network", "https://erpc.apothem.network", "https://apothem.xdcrpc.com"], 52: ["https://rpc.coinex.net/", "https://rpc1.coinex.net/", "https://rpc2.coinex.net/", "https://rpc3.coinex.net/", "https://rpc4.coinex.net/"], 55: ["https://rpc-1.zyx.network/", "https://rpc-2.zyx.network/", "https://rpc-3.zyx.network/", "https://rpc-5.zyx.network/"], 56: ["https://bsc-dataseed.bnbchain.org/", "https://bsc-dataseed1.defibit.io/", "https://bsc-dataseed1.ninicoin.io/", "https://bsc-dataseed2.defibit.io/", "https://bsc-dataseed3.defibit.io/", "https://bsc-dataseed4.defibit.io/", "https://bsc-dataseed2.ninicoin.io/", "https://bsc-dataseed3.ninicoin.io/", "https://bsc-dataseed4.ninicoin.io/", "https://bsc-dataseed1.bnbchain.org/", "https://bsc-dataseed2.bnbchain.org/", "https://bsc-dataseed3.bnbchain.org/", "https://bsc-dataseed4.bnbchain.org/", "https://bsc-dataseed6.dict.life/", "https://bscrpc.com", "https://bsc.rpcgator.com/", "https://bsc-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://nodes.vefinetwork.org/smartchain", "https://binance.llamarpc.com", "https://endpoints.omniatech.io/v1/bsc/mainnet/public", "https://bsc-pokt.nodies.app", "https://1rpc.io/bnb", "https://bsc-rpc.publicnode.com", "https://bsc.meowrpc.com", "https://bsc.drpc.org", "https://rpc.polysplit.cloud/v1/chain/56", "https://rpc.tornadoeth.cash/bsc"], 57: ["https://rpc.syscoin.org", "https://syscoin-evm-rpc.publicnode.com"], 58: ["https://dappnode1.ont.io:10339", "https://dappnode2.ont.io:10339", "https://dappnode3.ont.io:10339", "https://dappnode4.ont.io:10339"], 59: ["https://api.eosargentina.io", "https://api.metahub.cash"], 60: ["https://rpc.gochain.io"], 61: ["https://etc.mytokenpocket.vip", "https://rpc.etcinscribe.com", "https://etc.etcdesktop.com", "https://etc.rivet.link"], 62: ["https://www.ethercluster.com/morden"], 63: ["https://rpc.mordor.etccooperative.org"], 64: [], 66: ["https://exchainrpc.okex.org", "https://1rpc.io/oktc"], 68: [], 70: ["https://http-mainnet.hoosmartchain.com"], 74: ["https://idchain.one/rpc/"], 76: [], 77: ["https://sokol.poa.network"], 78: ["https://ethnode.primusmoney.com/mainnet"], 79: ["https://dataserver-us-1.zenithchain.co/", "https://dataserver-asia-3.zenithchain.co/", "https://dataserver-asia-4.zenithchain.co/", "https://dataserver-asia-2.zenithchain.co/"], 80: [], 82: ["https://rpc.meter.io"], 86: ["https://evm.gatenode.cc"], 87: ["https://rpc.novanetwork.io:9070", "https://dev.rpc.novanetwork.io/"], 88: ["https://rpc.tomochain.com"], 90: ["https://s0.garizon.net/rpc"], 91: ["https://s1.garizon.net/rpc"], 92: ["https://s2.garizon.net/rpc"], 93: ["https://s3.garizon.net/rpc"], 96: ["https://rpc.bitkubchain.io"], 97: ["https://bsctestapi.terminet.io/rpc", "https://endpoints.omniatech.io/v1/bsc/testnet/public", "https://bsc-testnet-rpc.publicnode.com"], 99: ["https://core.poanetwork.dev"], 100: ["https://rpc.gnosischain.com", "https://xdai-archive.blockscout.com", "https://gnosis-pokt.nodies.app", "https://gnosis.drpc.org", "https://endpoints.omniatech.io/v1/gnosis/mainnet/public", "https://gnosis-rpc.publicnode.com", "https://1rpc.io/gnosis", "https://rpc.tornadoeth.cash/gnosis"], 101: [], 106: ["https://evmexplorer.velas.com/rpc", "https://velas-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf"], 108: ["https://mainnet-rpc.thundercore.com"], 111: ["https://rpc.etherlite.org"], 119: ["https://evmapi.nuls.io", "https://evmapi2.nuls.io"], 122: ["https://rpc.fuse.io", "https://fuse-pokt.nodies.app"], 123: ["https://rpc.fusespark.io"], 124: [], 126: ["https://rpc.mainnet.oychain.io", "https://rpc.oychain.io"], 127: [], 128: ["https://http-mainnet.hecochain.com", "https://http-mainnet-node.huobichain.com", "https://hecoapi.terminet.io/rpc"], 131: ["https://tokioswift.engram.tech", "https://tokio-archive.engram.tech"], 137: ["https://rpc-mainnet.maticvigil.com", "https://polygon-rpc.com", "https://rpc-mainnet.matic.network", "https://matic-mainnet-full-rpc.bwarelabs.com", "https://matic-mainnet-archive-rpc.bwarelabs.com", "https://polygonapi.terminet.io/rpc", "https://polygon-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://polygon-mainnet-public.unifra.io", "https://polygon.llamarpc.com", "https://endpoints.omniatech.io/v1/matic/mainnet/public", "https://polygon-pokt.nodies.app", "https://1rpc.io/matic", "https://polygon-bor-rpc.publicnode.com", "https://polygon.drpc.org", "https://polygon.meowrpc.com", "https://getblock.io/nodes/matic/", "https://api.stateless.solutions/polygon/v1/5850f066-209e-4e3c-a294-0757a4eb34b3", "https://rpc.tornadoeth.cash/polygon"], 142: ["https://rpc.prodax.io"], 163: ["https://node.mainnet.lightstreams.io"], 167: ["https://node.atoshi.io", "https://node2.atoshi.io", "https://node3.atoshi.io"], 169: ["https://pacific-rpc.manta.network/http", "https://1rpc.io/manta"], 186: ["https://rpc.seelen.pro/"], 188: ["https://mainnet.bmcchain.com/"], 195: [], 199: ["https://rpc.bittorrentchain.io/"], 200: ["https://arbitrum.xdaichain.com"], 204: ["https://opbnb-rpc.publicnode.com", "https://1rpc.io/opbnb"], 211: [], 217: ["https://rpc2.siriusnet.io"], 222: ["https://blockchain-api-mainnet.permission.io/rpc"], 246: ["https://rpc.energyweb.org"], 248: ["https://oasys-mainnet.gateway.pokt.network/v1/lb/c967bd31", "https://oasys-mainnet-archival.gateway.pokt.network/v1/lb/c967bd31"], 250: ["https://rpcapi.fantom.network", "https://rpc.ftm.tools/", "https://rpc.fantom.network", "https://rpc2.fantom.network", "https://rpc3.fantom.network", "https://endpoints.omniatech.io/v1/fantom/mainnet/public", "https://fantom-pokt.nodies.app", "https://1rpc.io/ftm", "https://fantom-rpc.publicnode.com", "https://fantom.drpc.org"], 255: ["https://1rpc.io/kroma"], 256: ["https://hecotestapi.terminet.io/rpc"], 258: [], 262: ["https://sur.nilin.org"], 288: ["https://mainnet.boba.network/", "https://1rpc.io/boba/eth"], 300: [], 311: ["https://mainapi.omaxray.com/"], 314: ["https://api.node.glif.io", "https://node.filutils.com/rpc/v1", "https://api.chain.love/rpc/v1"], 321: ["https://rpc-mainnet.kcc.network", "https://kcc.mytokenpocket.vip", "https://kcc-rpc.com"], 324: ["https://zksync.meowrpc.com", "https://zksync.drpc.org", "https://1rpc.io/zksync2-era"], 333: [], 336: ["https://rpc.shiden.astar.network:8545/"], 338: ["https://evm-t3.cronos.org/"], 361: ["https://eth-rpc-api.thetatoken.org/rpc"], 369: ["https://rpc.pulsechain.com", "https://rpc-pulsechain.g4mm4.io", "https://evex.cloud/pulserpc", "https://pulse-s.projectpi.xyz", "https://pulsechain-rpc.publicnode.com"], 385: [], 416: ["https://rpc.sx.technology"], 420: ["https://endpoints.omniatech.io/v1/op/goerli/public", "https://optimism-goerli-rpc.publicnode.com"], 463: ["https://mainnet-rpc.areon.network", "https://mainnet-rpc2.areon.network", "https://mainnet-rpc3.areon.network", "https://mainnet-rpc4.areon.network", "https://mainnet-rpc5.areon.network"], 499: [], 512: ["https://rpc.acuteangle.com"], 530: ["https://fx-json-web3.portfolio-x.xyz:8545/"], 555: ["https://rpc.velaverse.io"], 558: ["https://rpc.tao.network"], 570: ["https://rpc.rollux.com", "https://rollux.rpc.syscoin.org"], 592: ["https://evm.astar.network/", "https://rpc.astar.network:8545", "https://getblock.io/nodes/bsc/", "https://1rpc.io/astr"], 595: [], 686: ["https://eth-rpc-karura.aca-staging.network", "https://rpc.evm.karura.network"], 707: [], 777: ["https://node.cheapeth.org/rpc"], 787: ["https://eth-rpc-acala.aca-staging.network", "https://rpc.evm.acala.network"], 803: [], 813: ["https://mainnet.meerlabs.com"], 820: ["https://rpc.callisto.network", "https://clo-geth.0xinfra.com/"], 880: [], 888: ["https://gwan-ssl.wandevs.org:56891", "https://gwan2-ssl.wandevs.org"], 943: ["https://pulsetest-s.projectpi.xyz", "https://pulsechain-testnet-rpc.publicnode.com"], 977: [], 998: [], 1001: ["https://public-en-baobab.klaytn.net"], 1003: [], 1010: ["https://meta.evrice.com"], 1012: ["https://global.rpc.mainnet.newtonproject.org"], 1022: [], 1024: ["https://api-para.clover.finance"], 1030: ["https://evm.confluxrpc.com", "https://conflux-espace-public.unifra.io"], 1072: ["https://json-rpc.evm.testnet.shimmer.network/"], 1088: ["https://andromeda.metis.io/?owner=1088", "https://metis-pokt.nodies.app"], 1089: ["https://humans-mainnet-evm.itrocket.net"], 1100: ["https://jsonrpc.dymension.nodestake.org", "https://evm-archive.dymd.bitszn.com", "https://dymension.liquify.com/json-rpc", "https://dymension-evm.kynraze.com"], 1101: ["https://1rpc.io/polygon/zkevm", "https://polygon-zkevm.drpc.org"], 1115: ["https://rpc.test.btcs.network"], 1116: ["https://rpc.coredao.org", "https://core.public.infstones.com", "https://1rpc.io/core"], 1130: ["https://dmc.mydefichain.com/mainnet", "https://dmc01.mydefichain.com/mainnet"], 1131: ["https://dmc.mydefichain.com/testnet", "https://dmc01.mydefichain.com/testnet", "https://eth.testnet.ocean.jellyfishsdk.com/"], 1139: ["https://mathchain.maiziqianbao.net/rpc"], 1197: [], 1202: [], 1213: ["https://dataseed.popcateum.org"], 1214: [], 1231: ["https://ultron-rpc.net"], 1246: ["https://rpc-cnx.omplatform.com"], 1280: ["https://nodes.halo.land"], 1284: ["https://rpc.api.moonbeam.network", "https://1rpc.io/glmr", "https://endpoints.omniatech.io/v1/moonbeam/mainnet/public", "https://moonbeam-rpc.publicnode.com"], 1285: ["https://moonriver-rpc.publicnode.com"], 1287: ["https://rpc.testnet.moonbeam.network"], 1288: [], 1338: ["https://rpc.atlantischain.network/"], 1339: ["https://rpc.elysiumchain.tech/", "https://rpc.elysiumchain.us/"], 1440: [], 1442: [], 1501: ["https://rpc-canary-1.bevm.io/", "https://rpc-canary-2.bevm.io/"], 1506: ["https://mainnet.sherpax.io/rpc"], 1515: ["https://beagle.chat/eth"], 1618: ["https://send.catechain.com"], 1620: [], 1657: ["https://dataseed1.btachain.com/"], 1707: ["https://rpc.blockchain.or.th"], 1708: ["https://rpc.testnet.blockchain.or.th"], 1856: [], 1881: ["https://rpc.cartenz.works"], 1972: ["https://rpc2.redecoin.eu"], 1975: ["https://rpc.onuschain.io"], 1987: [], 2e3: ["https://rpc.dogechain.dog", "https://rpc-us.dogechain.dog", "https://rpc-sg.dogechain.dog", "https://rpc.dogechain.dog", "https://rpc01-sg.dogechain.dog", "https://rpc02-sg.dogechain.dog", "https://rpc03-sg.dogechain.dog"], 2016: ["https://eu-rpc.mainnetz.io"], 2021: ["https://mainnet2.edgewa.re/evm", "https://mainnet3.edgewa.re/evm", "https://edgeware-evm.jelliedowl.net/"], 2025: ["https://mainnet.rangersprotocol.com/api/jsonrpc"], 2049: ["https://msc-rpc.movoscan.com/"], 2077: [], 2100: ["https://api.ecoball.org/ecoball/"], 2213: ["https://seed4.evanesco.org:8546"], 2222: ["https://evm.kava.io", "https://kava-evm-rpc.publicnode.com", "https://kava-pokt.nodies.app"], 2323: [], 2332: [], 2458: [], 2468: [], 2559: [], 2612: ["https://api.ezchain.com/ext/bc/C/rpc"], 3501: ["https://rpc.jfinchain.com"], 3639: ["https://rpc.ichainscan.com"], 3690: [], 4002: ["https://rpc.testnet.fantom.network/", "https://endpoints.omniatech.io/v1/fantom/testnet/public", "https://fantom-testnet-rpc.publicnode.com"], 4139: ["https://humans-testnet-evm.itrocket.net"], 4181: ["https://rpc1.phi.network"], 4444: ["https://janus.htmlcoin.dev/janus/"], 4689: ["https://babel-api.mainnet.iotex.io", "https://babel-api.mainnet.iotex.one", "https://babel-api.fastblocks.io"], 5e3: ["https://mantle-rpc.publicnode.com", "https://mantle.drpc.org", "https://1rpc.io/mantle"], 5050: ["https://rpc.liquidchain.net/", "https://rpc.xlcscan.com/"], 5165: ["https://bahamut-rpc.publicnode.com"], 5177: [], 5197: ["https://mainnet.eraswap.network"], 5315: [], 5551: ["https://l2.nahmii.io/"], 5700: ["https://rollux.rpc.tanenbaum.io", "https://syscoin-tanenbaum-evm-rpc.publicnode.com"], 5729: ["https://rpc-testnet.hika.network"], 5869: ["https://proxy.wegochain.io"], 6363: ["https://dsc-rpc.digitsoul.co.th"], 6626: ["https://http-mainnet.chain.pixie.xyz"], 6688: ["https://iris-evm-rpc.publicnode.com"], 7e3: ["https://zeta.rpcgrid.com"], 7001: [], 7070: ["https://planq-rpc.nodies.app", "https://jsonrpc.planq.nodestake.top/"], 7341: ["https://rpc.shyft.network/"], 7700: ["https://canto.gravitychain.io/", "https://canto.evm.chandrastation.com/", "https://jsonrpc.canto.nodestake.top/", "https://canto.dexvaults.com/", "https://canto-rpc.ansybl.io"], 7777: ["https://testnet1.rotw.games", "https://testnet2.rotw.games", "https://testnet3.rotw.games", "https://testnet4.rotw.games", "https://testnet5.rotw.games"], 7895: [], 8e3: ["https://dataseed.testnet.teleport.network"], 8081: [], 8082: [], 8131: ["https://testnet.meerlabs.com"], 8217: ["https://public-en-cypress.klaytn.net", "https://1rpc.io/klay", "https://klaytn-pokt.nodies.app", "https://klaytn.drpc.org"], 8453: ["https://mainnet.base.org", "https://developer-access-mainnet.base.org", "https://rpc.notadegen.com/base", "https://base.llamarpc.com", "https://1rpc.io/base", "https://base-pokt.nodies.app", "https://base.meowrpc.com", "https://base-rpc.publicnode.com", "https://base.drpc.org", "https://endpoints.omniatech.io/v1/base/mainnet/public"], 8899: ["https://rpc-l1.jibchain.net", "https://jib-rpc.inan.in.th", "https://rpc-l1.jbc.aomwara.in.th", "https://rpc-l1.jbc.xpool.pw"], 8995: ["https://core.bloxberg.org"], 9e3: ["https://evmos-testnet-json.qubelabs.io", "https://evmos-tjson.antrixy.org", "https://evmos-testnet-rpc.kingsuper.services", "https://rpc.evmos.test.theamsolutions.info", "https://api.evmos-test.theamsolutions.info", "https://rpc.evmos.testnet.node75.org", "https://rpc-evm.testnet.evmos.dragonstake.io", "https://evmos-testnet-rpc.stake-town.com", "https://evmos-testnet-jsonrpc.stake-town.com", "https://api.evmos-test.theamsolutions.info", "https://jsonrpc-t.evmos.nodestake.top", "https://evmos-testnet-jsonrpc.autostake.com", "https://evmos-testnet-jsonrpc.alkadeta.com", "https://evm-rpc.evmost.silentvalidator.com", "https://testnet-evm-rpc-evmos.hoodrun.io", "https://alphab.ai/rpc/eth/evmos_testnet", "https://t-evmos-jsonrpc.kalia.network", "https://jsonrpc-evmos-testnet.mzonder.com", "https://evmos-testnet.lava.build/lava-referer-16223de7-12c0-49f3-8d87-e5f1e6a0eb3b"], 9001: ["https://jsonrpc-evmos.goldenratiostaking.net", "https://eth.bd.evmos.org:8545/", "https://evmos-json-rpc.stakely.io", "https://jsonrpc-evmos-ia.cosmosia.notional.ventures", "https://json-rpc.evmos.blockhunters.org", "https://evmos-json-rpc.agoranodes.com", "https://evmos-json.antrixy.org", "https://jsonrpc.evmos.nodestake.top", "https://evmos-jsonrpc.alkadeta.com", "https://evmos-json.qubelabs.io", "https://evmos-rpc.theamsolutions.info", "https://evmos-api.theamsolutions.info", "https://evmos-jsonrpc.theamsolutions.info", "https://evm-rpc-evmos.hoodrun.io", "https://evmos-json-rpc.0base.dev", "https://json-rpc.evmos.tcnetwork.io", "https://rpc-evm.evmos.dragonstake.io", "https://evmosevm.rpc.stakin-nodes.com", "https://evmos-jsonrpc.stake-town.com", "https://json-rpc-evmos.mainnet.validatrium.club", "https://rpc-evmos.imperator.co", "https://evm-rpc.evmos.silentvalidator.com", "https://alphab.ai/rpc/eth/evmos", "https://evmos-jsonrpc.kalia.network", "https://jsonrpc-evmos.mzonder.com", "https://evmos-pokt.nodies.app", "https://evmos-evm-rpc.publicnode.com"], 9100: [], 1e4: ["https://smartbch.fountainhead.cash/mainnet", "https://global.uat.cash", "https://rpc.uatvo.com"], 10086: [], 10101: ["https://eu.mainnet.xixoio.com"], 10200: ["https://rpc.chiadochain.net", "https://gnosis-chiado-rpc.publicnode.com", "https://1rpc.io/gnosis"], 10248: [], 11111: ["https://api.trywagmi.xyz/rpc"], 11235: ["https://haqq-evm-rpc.publicnode.com"], 12052: ["https://zerorpc.singularity.gold"], 13e3: ["https://rpc.ssquad.games"], 13381: ["https://rpc.phoenixplorer.com/"], 15551: [], 15557: [], 16e3: [], 17e3: ["https://ethereum-holesky-rpc.publicnode.com", "https://1rpc.io/holesky", "https://holesky-rpc.nocturnode.tech"], 17777: [], 18159: ["https://mainnet-rpc.memescan.io/", "https://mainnet-rpc2.memescan.io/", "https://mainnet-rpc3.memescan.io/", "https://mainnet-rpc4.memescan.io/"], 19845: [], 21816: ["https://seed.omlira.com"], 23294: ["https://1rpc.io/oasis/sapphire"], 24484: [], 24734: ["https://node1.mintme.com"], 31102: [], 32520: ["https://rpc.icecreamswap.com", "https://nodes.vefinetwork.org/bitgert", "https://flux-rpc.brisescan.com", "https://flux-rpc1.brisescan.com", "https://flux-rpc2.brisescan.com", "https://rpc-1.chainrpc.com", "https://rpc-2.chainrpc.com", "https://node1.serverrpc.com", "https://node2.serverrpc.com"], 32659: ["https://mainnet.fusionnetwork.io"], 34443: ["https://1rpc.io/mode"], 35011: [], 35441: [], 39797: ["https://nodeapi.energi.network", "https://explorer.energi.network/api/eth-rpc"], 39815: ["https://mainnet.oho.ai", "https://mainnet-rpc.ohoscan.com", "https://mainnet-rpc2.ohoscan.com"], 42069: [], 42161: ["https://arb1.arbitrum.io/rpc", "https://arbitrum.llamarpc.com", "https://1rpc.io/arb", "https://arb-pokt.nodies.app", "https://endpoints.omniatech.io/v1/arbitrum/one/public", "https://arbitrum-one-rpc.publicnode.com", "https://arbitrum.meowrpc.com", "https://arbitrum.drpc.org", "https://rpc.tornadoeth.cash/arbitrum"], 42170: ["https://nova.arbitrum.io/rpc", "https://arbitrum-nova-rpc.publicnode.com", "https://arbitrum-nova.drpc.org"], 42220: ["https://forno.celo.org", "https://1rpc.io/celo"], 42262: ["https://emerald.oasis.dev/", "https://1rpc.io/oasis/emerald"], 43110: [], 43113: ["https://api.avax-test.network/ext/bc/C/rpc", "https://avalanchetestapi.terminet.io/ext/bc/C/rpc", "https://endpoints.omniatech.io/v1/avax/fuji/public", "https://avalanche-fuji-c-chain-rpc.publicnode.com"], 43114: ["https://api.avax.network/ext/bc/C/rpc", "https://avalanche.public-rpc.com", "https://avalancheapi.terminet.io/ext/bc/C/rpc", "https://avalanche-c-chain-rpc.publicnode.com", "https://1rpc.io/avax/c", "https://avax-pokt.nodies.app/ext/bc/C/rpc", "https://endpoints.omniatech.io/v1/avax/mainnet/public", "https://avax.meowrpc.com", "https://avalanche.drpc.org", "https://rpc.tornadoeth.cash/avax"], 45e3: ["https://rpc.autobahn.network"], 47805: ["https://rpc.rei.network"], 50001: ["https://rpc.oracle.liveplex.io"], 53935: ["https://avax-pokt.nodies.app/ext/bc/q2aTwKuyzgs8pynF7UXBZCU7DejbZbZ6EUyHr3JQzYgwNPUPi/rpc"], 55555: ["https://rei-rpc.moonrhythm.io"], 59140: [], 59144: ["https://1rpc.io/linea", "https://linea.drpc.org", "https://linea.decubate.com"], 63e3: ["https://rpc.ecredits.com"], 7e4: [], 70001: ["https://proxy1.thinkiumrpc.net/"], 70002: ["https://proxy2.thinkiumrpc.net/"], 70103: ["https://proxy103.thinkiumrpc.net/"], 71394: ["https://mainnet.godwoken.io/rpc/eth-wallet"], 80001: ["https://rpc-mumbai.maticvigil.com", "https://polygontestapi.terminet.io/rpc", "https://endpoints.omniatech.io/v1/matic/mumbai/public", "https://polygon-mumbai-bor-rpc.publicnode.com", "https://polygon-mumbai-pokt.nodies.app"], 81457: ["https://rpc.blast.io", "https://blast.din.dev/rpc", "https://blastl2-mainnet.public.blastapi.io", "https://blast.blockpi.network/v1/rpc/public"], 84531: ["https://1rpc.io/base-goerli", "https://base-goerli-rpc.publicnode.com", "https://endpoints.omniatech.io/v1/base/goerli/public"], 84532: ["https://rpc.notadegen.com/base/sepolia"], 99999: ["https://rpc.uschain.network"], 1e5: [], 100001: [], 100002: [], 100003: [], 100004: [], 100005: [], 100006: [], 100007: [], 100008: [], 103090: ["https://evm.cryptocurrencydevs.org", "https://rpc.crystaleum.org"], 108801: [], 11e4: [], 110001: [], 110002: [], 110003: [], 110004: [], 110005: [], 110006: [], 110007: [], 110008: [], 142857: [], 167008: [], 200625: ["https://boot2.akroma.org/"], 201018: ["https://openapi.alaya.network/rpc"], 210425: [], 246529: [], 256256: ["https://mainnet.block.caduceus.foundation"], 281121: [], 314159: [], 333999: ["https://rpc.polis.tech"], 363636: ["https://dgs-rpc.digitsoul.co.th"], 420420: ["https://mainnet.kekchain.com", "https://rpc2.kekchain.com", "https://kek.interchained.org", "https://kekchain.interchained.org"], 420666: ["https://testnet.kekchain.com"], 421613: ["https://endpoints.omniatech.io/v1/arbitrum/goerli/public", "https://arbitrum-goerli-rpc.publicnode.com", "https://api.stateless.solutions/arbitrum-one/v1/77abba85-53e4-4430-a332-a46deb9900ea"], 421614: [], 431140: ["https://rpc.markr.io/ext/"], 512512: ["https://galaxy.block.caduceus.foundation"], 534351: ["https://scroll-sepolia.drpc.org", "https://scroll-testnet.rpc.grove.city/v1/a7a7c8e2"], 534352: ["https://rpc.scroll.io", "https://rpc-scroll.icecreamswap.com", "https://1rpc.io/scroll", "https://scroll.drpc.org", "https://scroll-mainnet.rpc.grove.city/v1/a7a7c8e2"], 534353: [], 534354: ["https://prealpha-rpc.scroll.io/l2"], 827431: ["https://mainnet-rpc.curvescan.io"], 888888: ["https://infragrid.v.network/ethereum/compatible"], 9e5: ["https://api.posichain.org", "https://api.s0.posichain.org"], 955305: ["https://host-76-74-28-226.contentfabric.io/eth/"], 1313114: ["https://rpc.ethoprotocol.com"], 1313500: ["https://rpc.xerom.org"], 2099156: ["https://mainnet.plian.io/pchain"], 7762959: [], 8007736: ["https://mainnet.plian.io/child_0"], 10067275: ["https://testnet.plian.io/child_test"], 11155111: ["https://rpc.notadegen.com/eth/sepolia", "https://endpoints.omniatech.io/v1/eth/sepolia/public", "https://ethereum-sepolia-rpc.publicnode.com", "https://1rpc.io/sepolia"], 11155420: [], 13371337: [], 16658437: ["https://testnet.plian.io/testnet"], 18289463: [], 20181205: ["https://hz.rpc.qkiscan.cn", "https://rpc1.qkiscan.cn", "https://rpc2.qkiscan.cn", "https://rpc3.qkiscan.cn", "https://rpc1.qkiscan.io", "https://rpc2.qkiscan.io", "https://rpc3.qkiscan.io"], 28945486: [], 35855456: ["https://node.joys.digital"], 61717561: ["https://c.onical.org"], 88888888: ["https://rpc.teamblockchain.team"], 168587773: [], 192837465: ["https://mainnet.gather.network"], 245022926: ["https://devnet.neonevm.org"], 245022934: ["https://neon-proxy-mainnet.solana.p2p.org", "https://neon-mainnet.everstake.one"], 311752642: ["https://mainnet-rpc.oneledger.network"], 356256156: ["https://testnet.gather.network"], 486217935: ["https://devnet.gather.network"], 1122334455: [], 1313161554: ["https://mainnet.aurora.dev", "https://endpoints.omniatech.io/v1/aurora/mainnet/public", "https://1rpc.io/aurora", "https://aurora.drpc.org"], 1313161555: ["https://endpoints.omniatech.io/v1/aurora/testnet/public"], 1313161556: [], 16666e5: ["https://api.harmony.one", "https://a.api.s0.t.hmny.io", "https://api.s0.t.hmny.io", "https://1rpc.io/one", "https://hmyone-pokt.nodies.app", "https://endpoints.omniatech.io/v1/harmony/mainnet-0/public"], 1666600001: ["https://s1.api.harmony.one"], 1666600002: ["https://s2.api.harmony.one"], 1666600003: [], 16667e5: ["https://endpoints.omniatech.io/v1/harmony/testnet-0/public"], 2021121117: [], 3125659152: [], 11297108109: [], 836542336838601: [], 11297108099: [], 197710212030: ["https://rpc.ntity.io"], 6022140761023: ["https://molereum.jdubedition.com"] };
      } });
      var ol = rl({ "(disabled):buffer"() {
        Al(), il();
      } });
      var sl = rl({ "node_modules/bn.js/lib/bn.js"(t2, e2) {
        Al(), il(), function(t3, e3) {
          function r4(t4, e4) {
            if (!t4)
              throw new Error(e4 || "Assertion failed");
          }
          function n2(t4, e4) {
            t4.super_ = e4;
            var r5 = function() {
            };
            r5.prototype = e4.prototype, t4.prototype = new r5(), t4.prototype.constructor = t4;
          }
          function A2(t4, e4, r5) {
            if (A2.isBN(t4))
              return t4;
            this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== t4 && ("le" !== e4 && "be" !== e4 || (r5 = e4, e4 = 10), this._init(t4 || 0, e4 || 10, r5 || "be"));
          }
          var i2;
          "object" == typeof t3 ? t3.exports = A2 : e3.BN = A2, A2.BN = A2, A2.wordSize = 26;
          try {
            i2 = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : ol().Buffer;
          } catch (t4) {
          }
          function o2(t4, e4) {
            var n3 = t4.charCodeAt(e4);
            return n3 >= 48 && n3 <= 57 ? n3 - 48 : n3 >= 65 && n3 <= 70 ? n3 - 55 : n3 >= 97 && n3 <= 102 ? n3 - 87 : void r4(false, "Invalid character in " + t4);
          }
          function s2(t4, e4, r5) {
            var n3 = o2(t4, r5);
            return r5 - 1 >= e4 && (n3 |= o2(t4, r5 - 1) << 4), n3;
          }
          function a2(t4, e4, n3, A3) {
            for (var i3 = 0, o3 = 0, s3 = Math.min(t4.length, n3), a3 = e4; a3 < s3; a3++) {
              var c3 = t4.charCodeAt(a3) - 48;
              i3 *= A3, o3 = c3 >= 49 ? c3 - 49 + 10 : c3 >= 17 ? c3 - 17 + 10 : c3, r4(c3 >= 0 && o3 < A3, "Invalid character"), i3 += o3;
            }
            return i3;
          }
          function c2(t4, e4) {
            t4.words = e4.words, t4.length = e4.length, t4.negative = e4.negative, t4.red = e4.red;
          }
          if (A2.isBN = function(t4) {
            return t4 instanceof A2 || null !== t4 && "object" == typeof t4 && t4.constructor.wordSize === A2.wordSize && Array.isArray(t4.words);
          }, A2.max = function(t4, e4) {
            return t4.cmp(e4) > 0 ? t4 : e4;
          }, A2.min = function(t4, e4) {
            return t4.cmp(e4) < 0 ? t4 : e4;
          }, A2.prototype._init = function(t4, e4, n3) {
            if ("number" == typeof t4)
              return this._initNumber(t4, e4, n3);
            if ("object" == typeof t4)
              return this._initArray(t4, e4, n3);
            "hex" === e4 && (e4 = 16), r4(e4 === (0 | e4) && e4 >= 2 && e4 <= 36);
            var A3 = 0;
            "-" === (t4 = t4.toString().replace(/\s+/g, ""))[0] && (A3++, this.negative = 1), A3 < t4.length && (16 === e4 ? this._parseHex(t4, A3, n3) : (this._parseBase(t4, e4, A3), "le" === n3 && this._initArray(this.toArray(), e4, n3)));
          }, A2.prototype._initNumber = function(t4, e4, n3) {
            t4 < 0 && (this.negative = 1, t4 = -t4), t4 < 67108864 ? (this.words = [67108863 & t4], this.length = 1) : t4 < 4503599627370496 ? (this.words = [67108863 & t4, t4 / 67108864 & 67108863], this.length = 2) : (r4(t4 < 9007199254740992), this.words = [67108863 & t4, t4 / 67108864 & 67108863, 1], this.length = 3), "le" === n3 && this._initArray(this.toArray(), e4, n3);
          }, A2.prototype._initArray = function(t4, e4, n3) {
            if (r4("number" == typeof t4.length), t4.length <= 0)
              return this.words = [0], this.length = 1, this;
            this.length = Math.ceil(t4.length / 3), this.words = new Array(this.length);
            for (var A3 = 0; A3 < this.length; A3++)
              this.words[A3] = 0;
            var i3, o3, s3 = 0;
            if ("be" === n3)
              for (A3 = t4.length - 1, i3 = 0; A3 >= 0; A3 -= 3)
                o3 = t4[A3] | t4[A3 - 1] << 8 | t4[A3 - 2] << 16, this.words[i3] |= o3 << s3 & 67108863, this.words[i3 + 1] = o3 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, i3++);
            else if ("le" === n3)
              for (A3 = 0, i3 = 0; A3 < t4.length; A3 += 3)
                o3 = t4[A3] | t4[A3 + 1] << 8 | t4[A3 + 2] << 16, this.words[i3] |= o3 << s3 & 67108863, this.words[i3 + 1] = o3 >>> 26 - s3 & 67108863, (s3 += 24) >= 26 && (s3 -= 26, i3++);
            return this._strip();
          }, A2.prototype._parseHex = function(t4, e4, r5) {
            this.length = Math.ceil((t4.length - e4) / 6), this.words = new Array(this.length);
            for (var n3 = 0; n3 < this.length; n3++)
              this.words[n3] = 0;
            var A3, i3 = 0, o3 = 0;
            if ("be" === r5)
              for (n3 = t4.length - 1; n3 >= e4; n3 -= 2)
                A3 = s2(t4, e4, n3) << i3, this.words[o3] |= 67108863 & A3, i3 >= 18 ? (i3 -= 18, o3 += 1, this.words[o3] |= A3 >>> 26) : i3 += 8;
            else
              for (n3 = (t4.length - e4) % 2 == 0 ? e4 + 1 : e4; n3 < t4.length; n3 += 2)
                A3 = s2(t4, e4, n3) << i3, this.words[o3] |= 67108863 & A3, i3 >= 18 ? (i3 -= 18, o3 += 1, this.words[o3] |= A3 >>> 26) : i3 += 8;
            this._strip();
          }, A2.prototype._parseBase = function(t4, e4, r5) {
            this.words = [0], this.length = 1;
            for (var n3 = 0, A3 = 1; A3 <= 67108863; A3 *= e4)
              n3++;
            n3--, A3 = A3 / e4 | 0;
            for (var i3 = t4.length - r5, o3 = i3 % n3, s3 = Math.min(i3, i3 - o3) + r5, c3 = 0, h3 = r5; h3 < s3; h3 += n3)
              c3 = a2(t4, h3, h3 + n3, e4), this.imuln(A3), this.words[0] + c3 < 67108864 ? this.words[0] += c3 : this._iaddn(c3);
            if (0 !== o3) {
              var g3 = 1;
              for (c3 = a2(t4, h3, t4.length, e4), h3 = 0; h3 < o3; h3++)
                g3 *= e4;
              this.imuln(g3), this.words[0] + c3 < 67108864 ? this.words[0] += c3 : this._iaddn(c3);
            }
            this._strip();
          }, A2.prototype.copy = function(t4) {
            t4.words = new Array(this.length);
            for (var e4 = 0; e4 < this.length; e4++)
              t4.words[e4] = this.words[e4];
            t4.length = this.length, t4.negative = this.negative, t4.red = this.red;
          }, A2.prototype._move = function(t4) {
            c2(t4, this);
          }, A2.prototype.clone = function() {
            var t4 = new A2(null);
            return this.copy(t4), t4;
          }, A2.prototype._expand = function(t4) {
            for (; this.length < t4; )
              this.words[this.length++] = 0;
            return this;
          }, A2.prototype._strip = function() {
            for (; this.length > 1 && 0 === this.words[this.length - 1]; )
              this.length--;
            return this._normSign();
          }, A2.prototype._normSign = function() {
            return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this;
          }, "undefined" != typeof Symbol && "function" == typeof Symbol.for)
            try {
              A2.prototype[Symbol.for("nodejs.util.inspect.custom")] = h2;
            } catch (t4) {
              A2.prototype.inspect = h2;
            }
          else
            A2.prototype.inspect = h2;
          function h2() {
            return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
          }
          var g2 = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], u2 = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], l2 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
          A2.prototype.toString = function(t4, e4) {
            var n3;
            if (e4 = 0 | e4 || 1, 16 === (t4 = t4 || 10) || "hex" === t4) {
              n3 = "";
              for (var A3 = 0, i3 = 0, o3 = 0; o3 < this.length; o3++) {
                var s3 = this.words[o3], a3 = (16777215 & (s3 << A3 | i3)).toString(16);
                i3 = s3 >>> 24 - A3 & 16777215, (A3 += 2) >= 26 && (A3 -= 26, o3--), n3 = 0 !== i3 || o3 !== this.length - 1 ? g2[6 - a3.length] + a3 + n3 : a3 + n3;
              }
              for (0 !== i3 && (n3 = i3.toString(16) + n3); n3.length % e4 != 0; )
                n3 = "0" + n3;
              return 0 !== this.negative && (n3 = "-" + n3), n3;
            }
            if (t4 === (0 | t4) && t4 >= 2 && t4 <= 36) {
              var c3 = u2[t4], h3 = l2[t4];
              n3 = "";
              var f3 = this.clone();
              for (f3.negative = 0; !f3.isZero(); ) {
                var p3 = f3.modrn(h3).toString(t4);
                n3 = (f3 = f3.idivn(h3)).isZero() ? p3 + n3 : g2[c3 - p3.length] + p3 + n3;
              }
              for (this.isZero() && (n3 = "0" + n3); n3.length % e4 != 0; )
                n3 = "0" + n3;
              return 0 !== this.negative && (n3 = "-" + n3), n3;
            }
            r4(false, "Base should be between 2 and 36");
          }, A2.prototype.toNumber = function() {
            var t4 = this.words[0];
            return 2 === this.length ? t4 += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? t4 += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && r4(false, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -t4 : t4;
          }, A2.prototype.toJSON = function() {
            return this.toString(16, 2);
          }, i2 && (A2.prototype.toBuffer = function(t4, e4) {
            return this.toArrayLike(i2, t4, e4);
          }), A2.prototype.toArray = function(t4, e4) {
            return this.toArrayLike(Array, t4, e4);
          };
          function f2(t4, e4, r5) {
            r5.negative = e4.negative ^ t4.negative;
            var n3 = t4.length + e4.length | 0;
            r5.length = n3, n3 = n3 - 1 | 0;
            var A3 = 0 | t4.words[0], i3 = 0 | e4.words[0], o3 = A3 * i3, s3 = 67108863 & o3, a3 = o3 / 67108864 | 0;
            r5.words[0] = s3;
            for (var c3 = 1; c3 < n3; c3++) {
              for (var h3 = a3 >>> 26, g3 = 67108863 & a3, u3 = Math.min(c3, e4.length - 1), l3 = Math.max(0, c3 - t4.length + 1); l3 <= u3; l3++) {
                var f3 = c3 - l3 | 0;
                h3 += (o3 = (A3 = 0 | t4.words[f3]) * (i3 = 0 | e4.words[l3]) + g3) / 67108864 | 0, g3 = 67108863 & o3;
              }
              r5.words[c3] = 0 | g3, a3 = 0 | h3;
            }
            return 0 !== a3 ? r5.words[c3] = 0 | a3 : r5.length--, r5._strip();
          }
          A2.prototype.toArrayLike = function(t4, e4, n3) {
            this._strip();
            var A3 = this.byteLength(), i3 = n3 || Math.max(1, A3);
            r4(A3 <= i3, "byte array longer than desired length"), r4(i3 > 0, "Requested array length <= 0");
            var o3 = function(t5, e5) {
              return t5.allocUnsafe ? t5.allocUnsafe(e5) : new t5(e5);
            }(t4, i3);
            return this["_toArrayLike" + ("le" === e4 ? "LE" : "BE")](o3, A3), o3;
          }, A2.prototype._toArrayLikeLE = function(t4, e4) {
            for (var r5 = 0, n3 = 0, A3 = 0, i3 = 0; A3 < this.length; A3++) {
              var o3 = this.words[A3] << i3 | n3;
              t4[r5++] = 255 & o3, r5 < t4.length && (t4[r5++] = o3 >> 8 & 255), r5 < t4.length && (t4[r5++] = o3 >> 16 & 255), 6 === i3 ? (r5 < t4.length && (t4[r5++] = o3 >> 24 & 255), n3 = 0, i3 = 0) : (n3 = o3 >>> 24, i3 += 2);
            }
            if (r5 < t4.length)
              for (t4[r5++] = n3; r5 < t4.length; )
                t4[r5++] = 0;
          }, A2.prototype._toArrayLikeBE = function(t4, e4) {
            for (var r5 = t4.length - 1, n3 = 0, A3 = 0, i3 = 0; A3 < this.length; A3++) {
              var o3 = this.words[A3] << i3 | n3;
              t4[r5--] = 255 & o3, r5 >= 0 && (t4[r5--] = o3 >> 8 & 255), r5 >= 0 && (t4[r5--] = o3 >> 16 & 255), 6 === i3 ? (r5 >= 0 && (t4[r5--] = o3 >> 24 & 255), n3 = 0, i3 = 0) : (n3 = o3 >>> 24, i3 += 2);
            }
            if (r5 >= 0)
              for (t4[r5--] = n3; r5 >= 0; )
                t4[r5--] = 0;
          }, Math.clz32 ? A2.prototype._countBits = function(t4) {
            return 32 - Math.clz32(t4);
          } : A2.prototype._countBits = function(t4) {
            var e4 = t4, r5 = 0;
            return e4 >= 4096 && (r5 += 13, e4 >>>= 13), e4 >= 64 && (r5 += 7, e4 >>>= 7), e4 >= 8 && (r5 += 4, e4 >>>= 4), e4 >= 2 && (r5 += 2, e4 >>>= 2), r5 + e4;
          }, A2.prototype._zeroBits = function(t4) {
            if (0 === t4)
              return 26;
            var e4 = t4, r5 = 0;
            return 8191 & e4 || (r5 += 13, e4 >>>= 13), 127 & e4 || (r5 += 7, e4 >>>= 7), 15 & e4 || (r5 += 4, e4 >>>= 4), 3 & e4 || (r5 += 2, e4 >>>= 2), 1 & e4 || r5++, r5;
          }, A2.prototype.bitLength = function() {
            var t4 = this.words[this.length - 1], e4 = this._countBits(t4);
            return 26 * (this.length - 1) + e4;
          }, A2.prototype.zeroBits = function() {
            if (this.isZero())
              return 0;
            for (var t4 = 0, e4 = 0; e4 < this.length; e4++) {
              var r5 = this._zeroBits(this.words[e4]);
              if (t4 += r5, 26 !== r5)
                break;
            }
            return t4;
          }, A2.prototype.byteLength = function() {
            return Math.ceil(this.bitLength() / 8);
          }, A2.prototype.toTwos = function(t4) {
            return 0 !== this.negative ? this.abs().inotn(t4).iaddn(1) : this.clone();
          }, A2.prototype.fromTwos = function(t4) {
            return this.testn(t4 - 1) ? this.notn(t4).iaddn(1).ineg() : this.clone();
          }, A2.prototype.isNeg = function() {
            return 0 !== this.negative;
          }, A2.prototype.neg = function() {
            return this.clone().ineg();
          }, A2.prototype.ineg = function() {
            return this.isZero() || (this.negative ^= 1), this;
          }, A2.prototype.iuor = function(t4) {
            for (; this.length < t4.length; )
              this.words[this.length++] = 0;
            for (var e4 = 0; e4 < t4.length; e4++)
              this.words[e4] = this.words[e4] | t4.words[e4];
            return this._strip();
          }, A2.prototype.ior = function(t4) {
            return r4(!(this.negative | t4.negative)), this.iuor(t4);
          }, A2.prototype.or = function(t4) {
            return this.length > t4.length ? this.clone().ior(t4) : t4.clone().ior(this);
          }, A2.prototype.uor = function(t4) {
            return this.length > t4.length ? this.clone().iuor(t4) : t4.clone().iuor(this);
          }, A2.prototype.iuand = function(t4) {
            var e4;
            e4 = this.length > t4.length ? t4 : this;
            for (var r5 = 0; r5 < e4.length; r5++)
              this.words[r5] = this.words[r5] & t4.words[r5];
            return this.length = e4.length, this._strip();
          }, A2.prototype.iand = function(t4) {
            return r4(!(this.negative | t4.negative)), this.iuand(t4);
          }, A2.prototype.and = function(t4) {
            return this.length > t4.length ? this.clone().iand(t4) : t4.clone().iand(this);
          }, A2.prototype.uand = function(t4) {
            return this.length > t4.length ? this.clone().iuand(t4) : t4.clone().iuand(this);
          }, A2.prototype.iuxor = function(t4) {
            var e4, r5;
            this.length > t4.length ? (e4 = this, r5 = t4) : (e4 = t4, r5 = this);
            for (var n3 = 0; n3 < r5.length; n3++)
              this.words[n3] = e4.words[n3] ^ r5.words[n3];
            if (this !== e4)
              for (; n3 < e4.length; n3++)
                this.words[n3] = e4.words[n3];
            return this.length = e4.length, this._strip();
          }, A2.prototype.ixor = function(t4) {
            return r4(!(this.negative | t4.negative)), this.iuxor(t4);
          }, A2.prototype.xor = function(t4) {
            return this.length > t4.length ? this.clone().ixor(t4) : t4.clone().ixor(this);
          }, A2.prototype.uxor = function(t4) {
            return this.length > t4.length ? this.clone().iuxor(t4) : t4.clone().iuxor(this);
          }, A2.prototype.inotn = function(t4) {
            r4("number" == typeof t4 && t4 >= 0);
            var e4 = 0 | Math.ceil(t4 / 26), n3 = t4 % 26;
            this._expand(e4), n3 > 0 && e4--;
            for (var A3 = 0; A3 < e4; A3++)
              this.words[A3] = 67108863 & ~this.words[A3];
            return n3 > 0 && (this.words[A3] = ~this.words[A3] & 67108863 >> 26 - n3), this._strip();
          }, A2.prototype.notn = function(t4) {
            return this.clone().inotn(t4);
          }, A2.prototype.setn = function(t4, e4) {
            r4("number" == typeof t4 && t4 >= 0);
            var n3 = t4 / 26 | 0, A3 = t4 % 26;
            return this._expand(n3 + 1), this.words[n3] = e4 ? this.words[n3] | 1 << A3 : this.words[n3] & ~(1 << A3), this._strip();
          }, A2.prototype.iadd = function(t4) {
            var e4, r5, n3;
            if (0 !== this.negative && 0 === t4.negative)
              return this.negative = 0, e4 = this.isub(t4), this.negative ^= 1, this._normSign();
            if (0 === this.negative && 0 !== t4.negative)
              return t4.negative = 0, e4 = this.isub(t4), t4.negative = 1, e4._normSign();
            this.length > t4.length ? (r5 = this, n3 = t4) : (r5 = t4, n3 = this);
            for (var A3 = 0, i3 = 0; i3 < n3.length; i3++)
              e4 = (0 | r5.words[i3]) + (0 | n3.words[i3]) + A3, this.words[i3] = 67108863 & e4, A3 = e4 >>> 26;
            for (; 0 !== A3 && i3 < r5.length; i3++)
              e4 = (0 | r5.words[i3]) + A3, this.words[i3] = 67108863 & e4, A3 = e4 >>> 26;
            if (this.length = r5.length, 0 !== A3)
              this.words[this.length] = A3, this.length++;
            else if (r5 !== this)
              for (; i3 < r5.length; i3++)
                this.words[i3] = r5.words[i3];
            return this;
          }, A2.prototype.add = function(t4) {
            var e4;
            return 0 !== t4.negative && 0 === this.negative ? (t4.negative = 0, e4 = this.sub(t4), t4.negative ^= 1, e4) : 0 === t4.negative && 0 !== this.negative ? (this.negative = 0, e4 = t4.sub(this), this.negative = 1, e4) : this.length > t4.length ? this.clone().iadd(t4) : t4.clone().iadd(this);
          }, A2.prototype.isub = function(t4) {
            if (0 !== t4.negative) {
              t4.negative = 0;
              var e4 = this.iadd(t4);
              return t4.negative = 1, e4._normSign();
            }
            if (0 !== this.negative)
              return this.negative = 0, this.iadd(t4), this.negative = 1, this._normSign();
            var r5, n3, A3 = this.cmp(t4);
            if (0 === A3)
              return this.negative = 0, this.length = 1, this.words[0] = 0, this;
            A3 > 0 ? (r5 = this, n3 = t4) : (r5 = t4, n3 = this);
            for (var i3 = 0, o3 = 0; o3 < n3.length; o3++)
              i3 = (e4 = (0 | r5.words[o3]) - (0 | n3.words[o3]) + i3) >> 26, this.words[o3] = 67108863 & e4;
            for (; 0 !== i3 && o3 < r5.length; o3++)
              i3 = (e4 = (0 | r5.words[o3]) + i3) >> 26, this.words[o3] = 67108863 & e4;
            if (0 === i3 && o3 < r5.length && r5 !== this)
              for (; o3 < r5.length; o3++)
                this.words[o3] = r5.words[o3];
            return this.length = Math.max(this.length, o3), r5 !== this && (this.negative = 1), this._strip();
          }, A2.prototype.sub = function(t4) {
            return this.clone().isub(t4);
          };
          var p2 = function(t4, e4, r5) {
            var n3, A3, i3, o3 = t4.words, s3 = e4.words, a3 = r5.words, c3 = 0, h3 = 0 | o3[0], g3 = 8191 & h3, u3 = h3 >>> 13, l3 = 0 | o3[1], f3 = 8191 & l3, p3 = l3 >>> 13, d3 = 0 | o3[2], I3 = 8191 & d3, y3 = d3 >>> 13, C3 = 0 | o3[3], m3 = 8191 & C3, B3 = C3 >>> 13, E3 = 0 | o3[4], w3 = 8191 & E3, v3 = E3 >>> 13, _3 = 0 | o3[5], Q2 = 8191 & _3, b2 = _3 >>> 13, k2 = 0 | o3[6], D2 = 8191 & k2, S2 = k2 >>> 13, N3 = 0 | o3[7], M2 = 8191 & N3, x2 = N3 >>> 13, F2 = 0 | o3[8], P2 = 8191 & F2, T2 = F2 >>> 13, R2 = 0 | o3[9], U2 = 8191 & R2, G2 = R2 >>> 13, H2 = 0 | s3[0], L2 = 8191 & H2, O2 = H2 >>> 13, Y2 = 0 | s3[1], K2 = 8191 & Y2, J2 = Y2 >>> 13, j2 = 0 | s3[2], z2 = 8191 & j2, q2 = j2 >>> 13, X2 = 0 | s3[3], V2 = 8191 & X2, W2 = X2 >>> 13, Z2 = 0 | s3[4], $2 = 8191 & Z2, tt2 = Z2 >>> 13, et2 = 0 | s3[5], rt2 = 8191 & et2, nt2 = et2 >>> 13, At2 = 0 | s3[6], it2 = 8191 & At2, ot2 = At2 >>> 13, st2 = 0 | s3[7], at2 = 8191 & st2, ct2 = st2 >>> 13, ht2 = 0 | s3[8], gt2 = 8191 & ht2, ut2 = ht2 >>> 13, lt2 = 0 | s3[9], ft2 = 8191 & lt2, pt2 = lt2 >>> 13;
            r5.negative = t4.negative ^ e4.negative, r5.length = 19;
            var dt2 = (c3 + (n3 = Math.imul(g3, L2)) | 0) + ((8191 & (A3 = (A3 = Math.imul(g3, O2)) + Math.imul(u3, L2) | 0)) << 13) | 0;
            c3 = ((i3 = Math.imul(u3, O2)) + (A3 >>> 13) | 0) + (dt2 >>> 26) | 0, dt2 &= 67108863, n3 = Math.imul(f3, L2), A3 = (A3 = Math.imul(f3, O2)) + Math.imul(p3, L2) | 0, i3 = Math.imul(p3, O2);
            var It2 = (c3 + (n3 = n3 + Math.imul(g3, K2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, J2) | 0) + Math.imul(u3, K2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, J2) | 0) + (A3 >>> 13) | 0) + (It2 >>> 26) | 0, It2 &= 67108863, n3 = Math.imul(I3, L2), A3 = (A3 = Math.imul(I3, O2)) + Math.imul(y3, L2) | 0, i3 = Math.imul(y3, O2), n3 = n3 + Math.imul(f3, K2) | 0, A3 = (A3 = A3 + Math.imul(f3, J2) | 0) + Math.imul(p3, K2) | 0, i3 = i3 + Math.imul(p3, J2) | 0;
            var yt2 = (c3 + (n3 = n3 + Math.imul(g3, z2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, q2) | 0) + Math.imul(u3, z2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, q2) | 0) + (A3 >>> 13) | 0) + (yt2 >>> 26) | 0, yt2 &= 67108863, n3 = Math.imul(m3, L2), A3 = (A3 = Math.imul(m3, O2)) + Math.imul(B3, L2) | 0, i3 = Math.imul(B3, O2), n3 = n3 + Math.imul(I3, K2) | 0, A3 = (A3 = A3 + Math.imul(I3, J2) | 0) + Math.imul(y3, K2) | 0, i3 = i3 + Math.imul(y3, J2) | 0, n3 = n3 + Math.imul(f3, z2) | 0, A3 = (A3 = A3 + Math.imul(f3, q2) | 0) + Math.imul(p3, z2) | 0, i3 = i3 + Math.imul(p3, q2) | 0;
            var Ct2 = (c3 + (n3 = n3 + Math.imul(g3, V2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, W2) | 0) + Math.imul(u3, V2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, W2) | 0) + (A3 >>> 13) | 0) + (Ct2 >>> 26) | 0, Ct2 &= 67108863, n3 = Math.imul(w3, L2), A3 = (A3 = Math.imul(w3, O2)) + Math.imul(v3, L2) | 0, i3 = Math.imul(v3, O2), n3 = n3 + Math.imul(m3, K2) | 0, A3 = (A3 = A3 + Math.imul(m3, J2) | 0) + Math.imul(B3, K2) | 0, i3 = i3 + Math.imul(B3, J2) | 0, n3 = n3 + Math.imul(I3, z2) | 0, A3 = (A3 = A3 + Math.imul(I3, q2) | 0) + Math.imul(y3, z2) | 0, i3 = i3 + Math.imul(y3, q2) | 0, n3 = n3 + Math.imul(f3, V2) | 0, A3 = (A3 = A3 + Math.imul(f3, W2) | 0) + Math.imul(p3, V2) | 0, i3 = i3 + Math.imul(p3, W2) | 0;
            var mt2 = (c3 + (n3 = n3 + Math.imul(g3, $2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, tt2) | 0) + Math.imul(u3, $2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, tt2) | 0) + (A3 >>> 13) | 0) + (mt2 >>> 26) | 0, mt2 &= 67108863, n3 = Math.imul(Q2, L2), A3 = (A3 = Math.imul(Q2, O2)) + Math.imul(b2, L2) | 0, i3 = Math.imul(b2, O2), n3 = n3 + Math.imul(w3, K2) | 0, A3 = (A3 = A3 + Math.imul(w3, J2) | 0) + Math.imul(v3, K2) | 0, i3 = i3 + Math.imul(v3, J2) | 0, n3 = n3 + Math.imul(m3, z2) | 0, A3 = (A3 = A3 + Math.imul(m3, q2) | 0) + Math.imul(B3, z2) | 0, i3 = i3 + Math.imul(B3, q2) | 0, n3 = n3 + Math.imul(I3, V2) | 0, A3 = (A3 = A3 + Math.imul(I3, W2) | 0) + Math.imul(y3, V2) | 0, i3 = i3 + Math.imul(y3, W2) | 0, n3 = n3 + Math.imul(f3, $2) | 0, A3 = (A3 = A3 + Math.imul(f3, tt2) | 0) + Math.imul(p3, $2) | 0, i3 = i3 + Math.imul(p3, tt2) | 0;
            var Bt2 = (c3 + (n3 = n3 + Math.imul(g3, rt2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, nt2) | 0) + Math.imul(u3, rt2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, nt2) | 0) + (A3 >>> 13) | 0) + (Bt2 >>> 26) | 0, Bt2 &= 67108863, n3 = Math.imul(D2, L2), A3 = (A3 = Math.imul(D2, O2)) + Math.imul(S2, L2) | 0, i3 = Math.imul(S2, O2), n3 = n3 + Math.imul(Q2, K2) | 0, A3 = (A3 = A3 + Math.imul(Q2, J2) | 0) + Math.imul(b2, K2) | 0, i3 = i3 + Math.imul(b2, J2) | 0, n3 = n3 + Math.imul(w3, z2) | 0, A3 = (A3 = A3 + Math.imul(w3, q2) | 0) + Math.imul(v3, z2) | 0, i3 = i3 + Math.imul(v3, q2) | 0, n3 = n3 + Math.imul(m3, V2) | 0, A3 = (A3 = A3 + Math.imul(m3, W2) | 0) + Math.imul(B3, V2) | 0, i3 = i3 + Math.imul(B3, W2) | 0, n3 = n3 + Math.imul(I3, $2) | 0, A3 = (A3 = A3 + Math.imul(I3, tt2) | 0) + Math.imul(y3, $2) | 0, i3 = i3 + Math.imul(y3, tt2) | 0, n3 = n3 + Math.imul(f3, rt2) | 0, A3 = (A3 = A3 + Math.imul(f3, nt2) | 0) + Math.imul(p3, rt2) | 0, i3 = i3 + Math.imul(p3, nt2) | 0;
            var Et2 = (c3 + (n3 = n3 + Math.imul(g3, it2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ot2) | 0) + Math.imul(u3, it2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, ot2) | 0) + (A3 >>> 13) | 0) + (Et2 >>> 26) | 0, Et2 &= 67108863, n3 = Math.imul(M2, L2), A3 = (A3 = Math.imul(M2, O2)) + Math.imul(x2, L2) | 0, i3 = Math.imul(x2, O2), n3 = n3 + Math.imul(D2, K2) | 0, A3 = (A3 = A3 + Math.imul(D2, J2) | 0) + Math.imul(S2, K2) | 0, i3 = i3 + Math.imul(S2, J2) | 0, n3 = n3 + Math.imul(Q2, z2) | 0, A3 = (A3 = A3 + Math.imul(Q2, q2) | 0) + Math.imul(b2, z2) | 0, i3 = i3 + Math.imul(b2, q2) | 0, n3 = n3 + Math.imul(w3, V2) | 0, A3 = (A3 = A3 + Math.imul(w3, W2) | 0) + Math.imul(v3, V2) | 0, i3 = i3 + Math.imul(v3, W2) | 0, n3 = n3 + Math.imul(m3, $2) | 0, A3 = (A3 = A3 + Math.imul(m3, tt2) | 0) + Math.imul(B3, $2) | 0, i3 = i3 + Math.imul(B3, tt2) | 0, n3 = n3 + Math.imul(I3, rt2) | 0, A3 = (A3 = A3 + Math.imul(I3, nt2) | 0) + Math.imul(y3, rt2) | 0, i3 = i3 + Math.imul(y3, nt2) | 0, n3 = n3 + Math.imul(f3, it2) | 0, A3 = (A3 = A3 + Math.imul(f3, ot2) | 0) + Math.imul(p3, it2) | 0, i3 = i3 + Math.imul(p3, ot2) | 0;
            var wt2 = (c3 + (n3 = n3 + Math.imul(g3, at2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ct2) | 0) + Math.imul(u3, at2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, ct2) | 0) + (A3 >>> 13) | 0) + (wt2 >>> 26) | 0, wt2 &= 67108863, n3 = Math.imul(P2, L2), A3 = (A3 = Math.imul(P2, O2)) + Math.imul(T2, L2) | 0, i3 = Math.imul(T2, O2), n3 = n3 + Math.imul(M2, K2) | 0, A3 = (A3 = A3 + Math.imul(M2, J2) | 0) + Math.imul(x2, K2) | 0, i3 = i3 + Math.imul(x2, J2) | 0, n3 = n3 + Math.imul(D2, z2) | 0, A3 = (A3 = A3 + Math.imul(D2, q2) | 0) + Math.imul(S2, z2) | 0, i3 = i3 + Math.imul(S2, q2) | 0, n3 = n3 + Math.imul(Q2, V2) | 0, A3 = (A3 = A3 + Math.imul(Q2, W2) | 0) + Math.imul(b2, V2) | 0, i3 = i3 + Math.imul(b2, W2) | 0, n3 = n3 + Math.imul(w3, $2) | 0, A3 = (A3 = A3 + Math.imul(w3, tt2) | 0) + Math.imul(v3, $2) | 0, i3 = i3 + Math.imul(v3, tt2) | 0, n3 = n3 + Math.imul(m3, rt2) | 0, A3 = (A3 = A3 + Math.imul(m3, nt2) | 0) + Math.imul(B3, rt2) | 0, i3 = i3 + Math.imul(B3, nt2) | 0, n3 = n3 + Math.imul(I3, it2) | 0, A3 = (A3 = A3 + Math.imul(I3, ot2) | 0) + Math.imul(y3, it2) | 0, i3 = i3 + Math.imul(y3, ot2) | 0, n3 = n3 + Math.imul(f3, at2) | 0, A3 = (A3 = A3 + Math.imul(f3, ct2) | 0) + Math.imul(p3, at2) | 0, i3 = i3 + Math.imul(p3, ct2) | 0;
            var vt2 = (c3 + (n3 = n3 + Math.imul(g3, gt2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, ut2) | 0) + Math.imul(u3, gt2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, ut2) | 0) + (A3 >>> 13) | 0) + (vt2 >>> 26) | 0, vt2 &= 67108863, n3 = Math.imul(U2, L2), A3 = (A3 = Math.imul(U2, O2)) + Math.imul(G2, L2) | 0, i3 = Math.imul(G2, O2), n3 = n3 + Math.imul(P2, K2) | 0, A3 = (A3 = A3 + Math.imul(P2, J2) | 0) + Math.imul(T2, K2) | 0, i3 = i3 + Math.imul(T2, J2) | 0, n3 = n3 + Math.imul(M2, z2) | 0, A3 = (A3 = A3 + Math.imul(M2, q2) | 0) + Math.imul(x2, z2) | 0, i3 = i3 + Math.imul(x2, q2) | 0, n3 = n3 + Math.imul(D2, V2) | 0, A3 = (A3 = A3 + Math.imul(D2, W2) | 0) + Math.imul(S2, V2) | 0, i3 = i3 + Math.imul(S2, W2) | 0, n3 = n3 + Math.imul(Q2, $2) | 0, A3 = (A3 = A3 + Math.imul(Q2, tt2) | 0) + Math.imul(b2, $2) | 0, i3 = i3 + Math.imul(b2, tt2) | 0, n3 = n3 + Math.imul(w3, rt2) | 0, A3 = (A3 = A3 + Math.imul(w3, nt2) | 0) + Math.imul(v3, rt2) | 0, i3 = i3 + Math.imul(v3, nt2) | 0, n3 = n3 + Math.imul(m3, it2) | 0, A3 = (A3 = A3 + Math.imul(m3, ot2) | 0) + Math.imul(B3, it2) | 0, i3 = i3 + Math.imul(B3, ot2) | 0, n3 = n3 + Math.imul(I3, at2) | 0, A3 = (A3 = A3 + Math.imul(I3, ct2) | 0) + Math.imul(y3, at2) | 0, i3 = i3 + Math.imul(y3, ct2) | 0, n3 = n3 + Math.imul(f3, gt2) | 0, A3 = (A3 = A3 + Math.imul(f3, ut2) | 0) + Math.imul(p3, gt2) | 0, i3 = i3 + Math.imul(p3, ut2) | 0;
            var _t2 = (c3 + (n3 = n3 + Math.imul(g3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(g3, pt2) | 0) + Math.imul(u3, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(u3, pt2) | 0) + (A3 >>> 13) | 0) + (_t2 >>> 26) | 0, _t2 &= 67108863, n3 = Math.imul(U2, K2), A3 = (A3 = Math.imul(U2, J2)) + Math.imul(G2, K2) | 0, i3 = Math.imul(G2, J2), n3 = n3 + Math.imul(P2, z2) | 0, A3 = (A3 = A3 + Math.imul(P2, q2) | 0) + Math.imul(T2, z2) | 0, i3 = i3 + Math.imul(T2, q2) | 0, n3 = n3 + Math.imul(M2, V2) | 0, A3 = (A3 = A3 + Math.imul(M2, W2) | 0) + Math.imul(x2, V2) | 0, i3 = i3 + Math.imul(x2, W2) | 0, n3 = n3 + Math.imul(D2, $2) | 0, A3 = (A3 = A3 + Math.imul(D2, tt2) | 0) + Math.imul(S2, $2) | 0, i3 = i3 + Math.imul(S2, tt2) | 0, n3 = n3 + Math.imul(Q2, rt2) | 0, A3 = (A3 = A3 + Math.imul(Q2, nt2) | 0) + Math.imul(b2, rt2) | 0, i3 = i3 + Math.imul(b2, nt2) | 0, n3 = n3 + Math.imul(w3, it2) | 0, A3 = (A3 = A3 + Math.imul(w3, ot2) | 0) + Math.imul(v3, it2) | 0, i3 = i3 + Math.imul(v3, ot2) | 0, n3 = n3 + Math.imul(m3, at2) | 0, A3 = (A3 = A3 + Math.imul(m3, ct2) | 0) + Math.imul(B3, at2) | 0, i3 = i3 + Math.imul(B3, ct2) | 0, n3 = n3 + Math.imul(I3, gt2) | 0, A3 = (A3 = A3 + Math.imul(I3, ut2) | 0) + Math.imul(y3, gt2) | 0, i3 = i3 + Math.imul(y3, ut2) | 0;
            var Qt2 = (c3 + (n3 = n3 + Math.imul(f3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(f3, pt2) | 0) + Math.imul(p3, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(p3, pt2) | 0) + (A3 >>> 13) | 0) + (Qt2 >>> 26) | 0, Qt2 &= 67108863, n3 = Math.imul(U2, z2), A3 = (A3 = Math.imul(U2, q2)) + Math.imul(G2, z2) | 0, i3 = Math.imul(G2, q2), n3 = n3 + Math.imul(P2, V2) | 0, A3 = (A3 = A3 + Math.imul(P2, W2) | 0) + Math.imul(T2, V2) | 0, i3 = i3 + Math.imul(T2, W2) | 0, n3 = n3 + Math.imul(M2, $2) | 0, A3 = (A3 = A3 + Math.imul(M2, tt2) | 0) + Math.imul(x2, $2) | 0, i3 = i3 + Math.imul(x2, tt2) | 0, n3 = n3 + Math.imul(D2, rt2) | 0, A3 = (A3 = A3 + Math.imul(D2, nt2) | 0) + Math.imul(S2, rt2) | 0, i3 = i3 + Math.imul(S2, nt2) | 0, n3 = n3 + Math.imul(Q2, it2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ot2) | 0) + Math.imul(b2, it2) | 0, i3 = i3 + Math.imul(b2, ot2) | 0, n3 = n3 + Math.imul(w3, at2) | 0, A3 = (A3 = A3 + Math.imul(w3, ct2) | 0) + Math.imul(v3, at2) | 0, i3 = i3 + Math.imul(v3, ct2) | 0, n3 = n3 + Math.imul(m3, gt2) | 0, A3 = (A3 = A3 + Math.imul(m3, ut2) | 0) + Math.imul(B3, gt2) | 0, i3 = i3 + Math.imul(B3, ut2) | 0;
            var bt2 = (c3 + (n3 = n3 + Math.imul(I3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(I3, pt2) | 0) + Math.imul(y3, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(y3, pt2) | 0) + (A3 >>> 13) | 0) + (bt2 >>> 26) | 0, bt2 &= 67108863, n3 = Math.imul(U2, V2), A3 = (A3 = Math.imul(U2, W2)) + Math.imul(G2, V2) | 0, i3 = Math.imul(G2, W2), n3 = n3 + Math.imul(P2, $2) | 0, A3 = (A3 = A3 + Math.imul(P2, tt2) | 0) + Math.imul(T2, $2) | 0, i3 = i3 + Math.imul(T2, tt2) | 0, n3 = n3 + Math.imul(M2, rt2) | 0, A3 = (A3 = A3 + Math.imul(M2, nt2) | 0) + Math.imul(x2, rt2) | 0, i3 = i3 + Math.imul(x2, nt2) | 0, n3 = n3 + Math.imul(D2, it2) | 0, A3 = (A3 = A3 + Math.imul(D2, ot2) | 0) + Math.imul(S2, it2) | 0, i3 = i3 + Math.imul(S2, ot2) | 0, n3 = n3 + Math.imul(Q2, at2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ct2) | 0) + Math.imul(b2, at2) | 0, i3 = i3 + Math.imul(b2, ct2) | 0, n3 = n3 + Math.imul(w3, gt2) | 0, A3 = (A3 = A3 + Math.imul(w3, ut2) | 0) + Math.imul(v3, gt2) | 0, i3 = i3 + Math.imul(v3, ut2) | 0;
            var kt2 = (c3 + (n3 = n3 + Math.imul(m3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(m3, pt2) | 0) + Math.imul(B3, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(B3, pt2) | 0) + (A3 >>> 13) | 0) + (kt2 >>> 26) | 0, kt2 &= 67108863, n3 = Math.imul(U2, $2), A3 = (A3 = Math.imul(U2, tt2)) + Math.imul(G2, $2) | 0, i3 = Math.imul(G2, tt2), n3 = n3 + Math.imul(P2, rt2) | 0, A3 = (A3 = A3 + Math.imul(P2, nt2) | 0) + Math.imul(T2, rt2) | 0, i3 = i3 + Math.imul(T2, nt2) | 0, n3 = n3 + Math.imul(M2, it2) | 0, A3 = (A3 = A3 + Math.imul(M2, ot2) | 0) + Math.imul(x2, it2) | 0, i3 = i3 + Math.imul(x2, ot2) | 0, n3 = n3 + Math.imul(D2, at2) | 0, A3 = (A3 = A3 + Math.imul(D2, ct2) | 0) + Math.imul(S2, at2) | 0, i3 = i3 + Math.imul(S2, ct2) | 0, n3 = n3 + Math.imul(Q2, gt2) | 0, A3 = (A3 = A3 + Math.imul(Q2, ut2) | 0) + Math.imul(b2, gt2) | 0, i3 = i3 + Math.imul(b2, ut2) | 0;
            var Dt2 = (c3 + (n3 = n3 + Math.imul(w3, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(w3, pt2) | 0) + Math.imul(v3, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(v3, pt2) | 0) + (A3 >>> 13) | 0) + (Dt2 >>> 26) | 0, Dt2 &= 67108863, n3 = Math.imul(U2, rt2), A3 = (A3 = Math.imul(U2, nt2)) + Math.imul(G2, rt2) | 0, i3 = Math.imul(G2, nt2), n3 = n3 + Math.imul(P2, it2) | 0, A3 = (A3 = A3 + Math.imul(P2, ot2) | 0) + Math.imul(T2, it2) | 0, i3 = i3 + Math.imul(T2, ot2) | 0, n3 = n3 + Math.imul(M2, at2) | 0, A3 = (A3 = A3 + Math.imul(M2, ct2) | 0) + Math.imul(x2, at2) | 0, i3 = i3 + Math.imul(x2, ct2) | 0, n3 = n3 + Math.imul(D2, gt2) | 0, A3 = (A3 = A3 + Math.imul(D2, ut2) | 0) + Math.imul(S2, gt2) | 0, i3 = i3 + Math.imul(S2, ut2) | 0;
            var St2 = (c3 + (n3 = n3 + Math.imul(Q2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(Q2, pt2) | 0) + Math.imul(b2, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(b2, pt2) | 0) + (A3 >>> 13) | 0) + (St2 >>> 26) | 0, St2 &= 67108863, n3 = Math.imul(U2, it2), A3 = (A3 = Math.imul(U2, ot2)) + Math.imul(G2, it2) | 0, i3 = Math.imul(G2, ot2), n3 = n3 + Math.imul(P2, at2) | 0, A3 = (A3 = A3 + Math.imul(P2, ct2) | 0) + Math.imul(T2, at2) | 0, i3 = i3 + Math.imul(T2, ct2) | 0, n3 = n3 + Math.imul(M2, gt2) | 0, A3 = (A3 = A3 + Math.imul(M2, ut2) | 0) + Math.imul(x2, gt2) | 0, i3 = i3 + Math.imul(x2, ut2) | 0;
            var Nt2 = (c3 + (n3 = n3 + Math.imul(D2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(D2, pt2) | 0) + Math.imul(S2, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(S2, pt2) | 0) + (A3 >>> 13) | 0) + (Nt2 >>> 26) | 0, Nt2 &= 67108863, n3 = Math.imul(U2, at2), A3 = (A3 = Math.imul(U2, ct2)) + Math.imul(G2, at2) | 0, i3 = Math.imul(G2, ct2), n3 = n3 + Math.imul(P2, gt2) | 0, A3 = (A3 = A3 + Math.imul(P2, ut2) | 0) + Math.imul(T2, gt2) | 0, i3 = i3 + Math.imul(T2, ut2) | 0;
            var Mt2 = (c3 + (n3 = n3 + Math.imul(M2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(M2, pt2) | 0) + Math.imul(x2, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(x2, pt2) | 0) + (A3 >>> 13) | 0) + (Mt2 >>> 26) | 0, Mt2 &= 67108863, n3 = Math.imul(U2, gt2), A3 = (A3 = Math.imul(U2, ut2)) + Math.imul(G2, gt2) | 0, i3 = Math.imul(G2, ut2);
            var xt2 = (c3 + (n3 = n3 + Math.imul(P2, ft2) | 0) | 0) + ((8191 & (A3 = (A3 = A3 + Math.imul(P2, pt2) | 0) + Math.imul(T2, ft2) | 0)) << 13) | 0;
            c3 = ((i3 = i3 + Math.imul(T2, pt2) | 0) + (A3 >>> 13) | 0) + (xt2 >>> 26) | 0, xt2 &= 67108863;
            var Ft2 = (c3 + (n3 = Math.imul(U2, ft2)) | 0) + ((8191 & (A3 = (A3 = Math.imul(U2, pt2)) + Math.imul(G2, ft2) | 0)) << 13) | 0;
            return c3 = ((i3 = Math.imul(G2, pt2)) + (A3 >>> 13) | 0) + (Ft2 >>> 26) | 0, Ft2 &= 67108863, a3[0] = dt2, a3[1] = It2, a3[2] = yt2, a3[3] = Ct2, a3[4] = mt2, a3[5] = Bt2, a3[6] = Et2, a3[7] = wt2, a3[8] = vt2, a3[9] = _t2, a3[10] = Qt2, a3[11] = bt2, a3[12] = kt2, a3[13] = Dt2, a3[14] = St2, a3[15] = Nt2, a3[16] = Mt2, a3[17] = xt2, a3[18] = Ft2, 0 !== c3 && (a3[19] = c3, r5.length++), r5;
          };
          function d2(t4, e4, r5) {
            r5.negative = e4.negative ^ t4.negative, r5.length = t4.length + e4.length;
            for (var n3 = 0, A3 = 0, i3 = 0; i3 < r5.length - 1; i3++) {
              var o3 = A3;
              A3 = 0;
              for (var s3 = 67108863 & n3, a3 = Math.min(i3, e4.length - 1), c3 = Math.max(0, i3 - t4.length + 1); c3 <= a3; c3++) {
                var h3 = i3 - c3, g3 = (0 | t4.words[h3]) * (0 | e4.words[c3]), u3 = 67108863 & g3;
                s3 = 67108863 & (u3 = u3 + s3 | 0), A3 += (o3 = (o3 = o3 + (g3 / 67108864 | 0) | 0) + (u3 >>> 26) | 0) >>> 26, o3 &= 67108863;
              }
              r5.words[i3] = s3, n3 = o3, o3 = A3;
            }
            return 0 !== n3 ? r5.words[i3] = n3 : r5.length--, r5._strip();
          }
          function I2(t4, e4, r5) {
            return d2(t4, e4, r5);
          }
          Math.imul || (p2 = f2), A2.prototype.mulTo = function(t4, e4) {
            var r5 = this.length + t4.length;
            return 10 === this.length && 10 === t4.length ? p2(this, t4, e4) : r5 < 63 ? f2(this, t4, e4) : r5 < 1024 ? d2(this, t4, e4) : I2(this, t4, e4);
          }, A2.prototype.mul = function(t4) {
            var e4 = new A2(null);
            return e4.words = new Array(this.length + t4.length), this.mulTo(t4, e4);
          }, A2.prototype.mulf = function(t4) {
            var e4 = new A2(null);
            return e4.words = new Array(this.length + t4.length), I2(this, t4, e4);
          }, A2.prototype.imul = function(t4) {
            return this.clone().mulTo(t4, this);
          }, A2.prototype.imuln = function(t4) {
            var e4 = t4 < 0;
            e4 && (t4 = -t4), r4("number" == typeof t4), r4(t4 < 67108864);
            for (var n3 = 0, A3 = 0; A3 < this.length; A3++) {
              var i3 = (0 | this.words[A3]) * t4, o3 = (67108863 & i3) + (67108863 & n3);
              n3 >>= 26, n3 += i3 / 67108864 | 0, n3 += o3 >>> 26, this.words[A3] = 67108863 & o3;
            }
            return 0 !== n3 && (this.words[A3] = n3, this.length++), e4 ? this.ineg() : this;
          }, A2.prototype.muln = function(t4) {
            return this.clone().imuln(t4);
          }, A2.prototype.sqr = function() {
            return this.mul(this);
          }, A2.prototype.isqr = function() {
            return this.imul(this.clone());
          }, A2.prototype.pow = function(t4) {
            var e4 = function(t5) {
              for (var e5 = new Array(t5.bitLength()), r6 = 0; r6 < e5.length; r6++) {
                var n4 = r6 / 26 | 0, A3 = r6 % 26;
                e5[r6] = t5.words[n4] >>> A3 & 1;
              }
              return e5;
            }(t4);
            if (0 === e4.length)
              return new A2(1);
            for (var r5 = this, n3 = 0; n3 < e4.length && 0 === e4[n3]; n3++, r5 = r5.sqr())
              ;
            if (++n3 < e4.length)
              for (var i3 = r5.sqr(); n3 < e4.length; n3++, i3 = i3.sqr())
                0 !== e4[n3] && (r5 = r5.mul(i3));
            return r5;
          }, A2.prototype.iushln = function(t4) {
            r4("number" == typeof t4 && t4 >= 0);
            var e4, n3 = t4 % 26, A3 = (t4 - n3) / 26, i3 = 67108863 >>> 26 - n3 << 26 - n3;
            if (0 !== n3) {
              var o3 = 0;
              for (e4 = 0; e4 < this.length; e4++) {
                var s3 = this.words[e4] & i3, a3 = (0 | this.words[e4]) - s3 << n3;
                this.words[e4] = a3 | o3, o3 = s3 >>> 26 - n3;
              }
              o3 && (this.words[e4] = o3, this.length++);
            }
            if (0 !== A3) {
              for (e4 = this.length - 1; e4 >= 0; e4--)
                this.words[e4 + A3] = this.words[e4];
              for (e4 = 0; e4 < A3; e4++)
                this.words[e4] = 0;
              this.length += A3;
            }
            return this._strip();
          }, A2.prototype.ishln = function(t4) {
            return r4(0 === this.negative), this.iushln(t4);
          }, A2.prototype.iushrn = function(t4, e4, n3) {
            var A3;
            r4("number" == typeof t4 && t4 >= 0), A3 = e4 ? (e4 - e4 % 26) / 26 : 0;
            var i3 = t4 % 26, o3 = Math.min((t4 - i3) / 26, this.length), s3 = 67108863 ^ 67108863 >>> i3 << i3, a3 = n3;
            if (A3 -= o3, A3 = Math.max(0, A3), a3) {
              for (var c3 = 0; c3 < o3; c3++)
                a3.words[c3] = this.words[c3];
              a3.length = o3;
            }
            if (0 === o3)
              ;
            else if (this.length > o3)
              for (this.length -= o3, c3 = 0; c3 < this.length; c3++)
                this.words[c3] = this.words[c3 + o3];
            else
              this.words[0] = 0, this.length = 1;
            var h3 = 0;
            for (c3 = this.length - 1; c3 >= 0 && (0 !== h3 || c3 >= A3); c3--) {
              var g3 = 0 | this.words[c3];
              this.words[c3] = h3 << 26 - i3 | g3 >>> i3, h3 = g3 & s3;
            }
            return a3 && 0 !== h3 && (a3.words[a3.length++] = h3), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip();
          }, A2.prototype.ishrn = function(t4, e4, n3) {
            return r4(0 === this.negative), this.iushrn(t4, e4, n3);
          }, A2.prototype.shln = function(t4) {
            return this.clone().ishln(t4);
          }, A2.prototype.ushln = function(t4) {
            return this.clone().iushln(t4);
          }, A2.prototype.shrn = function(t4) {
            return this.clone().ishrn(t4);
          }, A2.prototype.ushrn = function(t4) {
            return this.clone().iushrn(t4);
          }, A2.prototype.testn = function(t4) {
            r4("number" == typeof t4 && t4 >= 0);
            var e4 = t4 % 26, n3 = (t4 - e4) / 26, A3 = 1 << e4;
            return !(this.length <= n3) && !!(this.words[n3] & A3);
          }, A2.prototype.imaskn = function(t4) {
            r4("number" == typeof t4 && t4 >= 0);
            var e4 = t4 % 26, n3 = (t4 - e4) / 26;
            if (r4(0 === this.negative, "imaskn works only with positive numbers"), this.length <= n3)
              return this;
            if (0 !== e4 && n3++, this.length = Math.min(n3, this.length), 0 !== e4) {
              var A3 = 67108863 ^ 67108863 >>> e4 << e4;
              this.words[this.length - 1] &= A3;
            }
            return this._strip();
          }, A2.prototype.maskn = function(t4) {
            return this.clone().imaskn(t4);
          }, A2.prototype.iaddn = function(t4) {
            return r4("number" == typeof t4), r4(t4 < 67108864), t4 < 0 ? this.isubn(-t4) : 0 !== this.negative ? 1 === this.length && (0 | this.words[0]) <= t4 ? (this.words[0] = t4 - (0 | this.words[0]), this.negative = 0, this) : (this.negative = 0, this.isubn(t4), this.negative = 1, this) : this._iaddn(t4);
          }, A2.prototype._iaddn = function(t4) {
            this.words[0] += t4;
            for (var e4 = 0; e4 < this.length && this.words[e4] >= 67108864; e4++)
              this.words[e4] -= 67108864, e4 === this.length - 1 ? this.words[e4 + 1] = 1 : this.words[e4 + 1]++;
            return this.length = Math.max(this.length, e4 + 1), this;
          }, A2.prototype.isubn = function(t4) {
            if (r4("number" == typeof t4), r4(t4 < 67108864), t4 < 0)
              return this.iaddn(-t4);
            if (0 !== this.negative)
              return this.negative = 0, this.iaddn(t4), this.negative = 1, this;
            if (this.words[0] -= t4, 1 === this.length && this.words[0] < 0)
              this.words[0] = -this.words[0], this.negative = 1;
            else
              for (var e4 = 0; e4 < this.length && this.words[e4] < 0; e4++)
                this.words[e4] += 67108864, this.words[e4 + 1] -= 1;
            return this._strip();
          }, A2.prototype.addn = function(t4) {
            return this.clone().iaddn(t4);
          }, A2.prototype.subn = function(t4) {
            return this.clone().isubn(t4);
          }, A2.prototype.iabs = function() {
            return this.negative = 0, this;
          }, A2.prototype.abs = function() {
            return this.clone().iabs();
          }, A2.prototype._ishlnsubmul = function(t4, e4, n3) {
            var A3, i3, o3 = t4.length + n3;
            this._expand(o3);
            var s3 = 0;
            for (A3 = 0; A3 < t4.length; A3++) {
              i3 = (0 | this.words[A3 + n3]) + s3;
              var a3 = (0 | t4.words[A3]) * e4;
              s3 = ((i3 -= 67108863 & a3) >> 26) - (a3 / 67108864 | 0), this.words[A3 + n3] = 67108863 & i3;
            }
            for (; A3 < this.length - n3; A3++)
              s3 = (i3 = (0 | this.words[A3 + n3]) + s3) >> 26, this.words[A3 + n3] = 67108863 & i3;
            if (0 === s3)
              return this._strip();
            for (r4(-1 === s3), s3 = 0, A3 = 0; A3 < this.length; A3++)
              s3 = (i3 = -(0 | this.words[A3]) + s3) >> 26, this.words[A3] = 67108863 & i3;
            return this.negative = 1, this._strip();
          }, A2.prototype._wordDiv = function(t4, e4) {
            var r5 = (this.length, t4.length), n3 = this.clone(), i3 = t4, o3 = 0 | i3.words[i3.length - 1];
            0 !== (r5 = 26 - this._countBits(o3)) && (i3 = i3.ushln(r5), n3.iushln(r5), o3 = 0 | i3.words[i3.length - 1]);
            var s3, a3 = n3.length - i3.length;
            if ("mod" !== e4) {
              (s3 = new A2(null)).length = a3 + 1, s3.words = new Array(s3.length);
              for (var c3 = 0; c3 < s3.length; c3++)
                s3.words[c3] = 0;
            }
            var h3 = n3.clone()._ishlnsubmul(i3, 1, a3);
            0 === h3.negative && (n3 = h3, s3 && (s3.words[a3] = 1));
            for (var g3 = a3 - 1; g3 >= 0; g3--) {
              var u3 = 67108864 * (0 | n3.words[i3.length + g3]) + (0 | n3.words[i3.length + g3 - 1]);
              for (u3 = Math.min(u3 / o3 | 0, 67108863), n3._ishlnsubmul(i3, u3, g3); 0 !== n3.negative; )
                u3--, n3.negative = 0, n3._ishlnsubmul(i3, 1, g3), n3.isZero() || (n3.negative ^= 1);
              s3 && (s3.words[g3] = u3);
            }
            return s3 && s3._strip(), n3._strip(), "div" !== e4 && 0 !== r5 && n3.iushrn(r5), { div: s3 || null, mod: n3 };
          }, A2.prototype.divmod = function(t4, e4, n3) {
            return r4(!t4.isZero()), this.isZero() ? { div: new A2(0), mod: new A2(0) } : 0 !== this.negative && 0 === t4.negative ? (s3 = this.neg().divmod(t4, e4), "mod" !== e4 && (i3 = s3.div.neg()), "div" !== e4 && (o3 = s3.mod.neg(), n3 && 0 !== o3.negative && o3.iadd(t4)), { div: i3, mod: o3 }) : 0 === this.negative && 0 !== t4.negative ? (s3 = this.divmod(t4.neg(), e4), "mod" !== e4 && (i3 = s3.div.neg()), { div: i3, mod: s3.mod }) : this.negative & t4.negative ? (s3 = this.neg().divmod(t4.neg(), e4), "div" !== e4 && (o3 = s3.mod.neg(), n3 && 0 !== o3.negative && o3.isub(t4)), { div: s3.div, mod: o3 }) : t4.length > this.length || this.cmp(t4) < 0 ? { div: new A2(0), mod: this } : 1 === t4.length ? "div" === e4 ? { div: this.divn(t4.words[0]), mod: null } : "mod" === e4 ? { div: null, mod: new A2(this.modrn(t4.words[0])) } : { div: this.divn(t4.words[0]), mod: new A2(this.modrn(t4.words[0])) } : this._wordDiv(t4, e4);
            var i3, o3, s3;
          }, A2.prototype.div = function(t4) {
            return this.divmod(t4, "div", false).div;
          }, A2.prototype.mod = function(t4) {
            return this.divmod(t4, "mod", false).mod;
          }, A2.prototype.umod = function(t4) {
            return this.divmod(t4, "mod", true).mod;
          }, A2.prototype.divRound = function(t4) {
            var e4 = this.divmod(t4);
            if (e4.mod.isZero())
              return e4.div;
            var r5 = 0 !== e4.div.negative ? e4.mod.isub(t4) : e4.mod, n3 = t4.ushrn(1), A3 = t4.andln(1), i3 = r5.cmp(n3);
            return i3 < 0 || 1 === A3 && 0 === i3 ? e4.div : 0 !== e4.div.negative ? e4.div.isubn(1) : e4.div.iaddn(1);
          }, A2.prototype.modrn = function(t4) {
            var e4 = t4 < 0;
            e4 && (t4 = -t4), r4(t4 <= 67108863);
            for (var n3 = (1 << 26) % t4, A3 = 0, i3 = this.length - 1; i3 >= 0; i3--)
              A3 = (n3 * A3 + (0 | this.words[i3])) % t4;
            return e4 ? -A3 : A3;
          }, A2.prototype.modn = function(t4) {
            return this.modrn(t4);
          }, A2.prototype.idivn = function(t4) {
            var e4 = t4 < 0;
            e4 && (t4 = -t4), r4(t4 <= 67108863);
            for (var n3 = 0, A3 = this.length - 1; A3 >= 0; A3--) {
              var i3 = (0 | this.words[A3]) + 67108864 * n3;
              this.words[A3] = i3 / t4 | 0, n3 = i3 % t4;
            }
            return this._strip(), e4 ? this.ineg() : this;
          }, A2.prototype.divn = function(t4) {
            return this.clone().idivn(t4);
          }, A2.prototype.egcd = function(t4) {
            r4(0 === t4.negative), r4(!t4.isZero());
            var e4 = this, n3 = t4.clone();
            e4 = 0 !== e4.negative ? e4.umod(t4) : e4.clone();
            for (var i3 = new A2(1), o3 = new A2(0), s3 = new A2(0), a3 = new A2(1), c3 = 0; e4.isEven() && n3.isEven(); )
              e4.iushrn(1), n3.iushrn(1), ++c3;
            for (var h3 = n3.clone(), g3 = e4.clone(); !e4.isZero(); ) {
              for (var u3 = 0, l3 = 1; !(e4.words[0] & l3) && u3 < 26; ++u3, l3 <<= 1)
                ;
              if (u3 > 0)
                for (e4.iushrn(u3); u3-- > 0; )
                  (i3.isOdd() || o3.isOdd()) && (i3.iadd(h3), o3.isub(g3)), i3.iushrn(1), o3.iushrn(1);
              for (var f3 = 0, p3 = 1; !(n3.words[0] & p3) && f3 < 26; ++f3, p3 <<= 1)
                ;
              if (f3 > 0)
                for (n3.iushrn(f3); f3-- > 0; )
                  (s3.isOdd() || a3.isOdd()) && (s3.iadd(h3), a3.isub(g3)), s3.iushrn(1), a3.iushrn(1);
              e4.cmp(n3) >= 0 ? (e4.isub(n3), i3.isub(s3), o3.isub(a3)) : (n3.isub(e4), s3.isub(i3), a3.isub(o3));
            }
            return { a: s3, b: a3, gcd: n3.iushln(c3) };
          }, A2.prototype._invmp = function(t4) {
            r4(0 === t4.negative), r4(!t4.isZero());
            var e4 = this, n3 = t4.clone();
            e4 = 0 !== e4.negative ? e4.umod(t4) : e4.clone();
            for (var i3, o3 = new A2(1), s3 = new A2(0), a3 = n3.clone(); e4.cmpn(1) > 0 && n3.cmpn(1) > 0; ) {
              for (var c3 = 0, h3 = 1; !(e4.words[0] & h3) && c3 < 26; ++c3, h3 <<= 1)
                ;
              if (c3 > 0)
                for (e4.iushrn(c3); c3-- > 0; )
                  o3.isOdd() && o3.iadd(a3), o3.iushrn(1);
              for (var g3 = 0, u3 = 1; !(n3.words[0] & u3) && g3 < 26; ++g3, u3 <<= 1)
                ;
              if (g3 > 0)
                for (n3.iushrn(g3); g3-- > 0; )
                  s3.isOdd() && s3.iadd(a3), s3.iushrn(1);
              e4.cmp(n3) >= 0 ? (e4.isub(n3), o3.isub(s3)) : (n3.isub(e4), s3.isub(o3));
            }
            return (i3 = 0 === e4.cmpn(1) ? o3 : s3).cmpn(0) < 0 && i3.iadd(t4), i3;
          }, A2.prototype.gcd = function(t4) {
            if (this.isZero())
              return t4.abs();
            if (t4.isZero())
              return this.abs();
            var e4 = this.clone(), r5 = t4.clone();
            e4.negative = 0, r5.negative = 0;
            for (var n3 = 0; e4.isEven() && r5.isEven(); n3++)
              e4.iushrn(1), r5.iushrn(1);
            for (; ; ) {
              for (; e4.isEven(); )
                e4.iushrn(1);
              for (; r5.isEven(); )
                r5.iushrn(1);
              var A3 = e4.cmp(r5);
              if (A3 < 0) {
                var i3 = e4;
                e4 = r5, r5 = i3;
              } else if (0 === A3 || 0 === r5.cmpn(1))
                break;
              e4.isub(r5);
            }
            return r5.iushln(n3);
          }, A2.prototype.invm = function(t4) {
            return this.egcd(t4).a.umod(t4);
          }, A2.prototype.isEven = function() {
            return !(1 & this.words[0]);
          }, A2.prototype.isOdd = function() {
            return !(1 & ~this.words[0]);
          }, A2.prototype.andln = function(t4) {
            return this.words[0] & t4;
          }, A2.prototype.bincn = function(t4) {
            r4("number" == typeof t4);
            var e4 = t4 % 26, n3 = (t4 - e4) / 26, A3 = 1 << e4;
            if (this.length <= n3)
              return this._expand(n3 + 1), this.words[n3] |= A3, this;
            for (var i3 = A3, o3 = n3; 0 !== i3 && o3 < this.length; o3++) {
              var s3 = 0 | this.words[o3];
              i3 = (s3 += i3) >>> 26, s3 &= 67108863, this.words[o3] = s3;
            }
            return 0 !== i3 && (this.words[o3] = i3, this.length++), this;
          }, A2.prototype.isZero = function() {
            return 1 === this.length && 0 === this.words[0];
          }, A2.prototype.cmpn = function(t4) {
            var e4, n3 = t4 < 0;
            if (0 !== this.negative && !n3)
              return -1;
            if (0 === this.negative && n3)
              return 1;
            if (this._strip(), this.length > 1)
              e4 = 1;
            else {
              n3 && (t4 = -t4), r4(t4 <= 67108863, "Number is too big");
              var A3 = 0 | this.words[0];
              e4 = A3 === t4 ? 0 : A3 < t4 ? -1 : 1;
            }
            return 0 !== this.negative ? 0 | -e4 : e4;
          }, A2.prototype.cmp = function(t4) {
            if (0 !== this.negative && 0 === t4.negative)
              return -1;
            if (0 === this.negative && 0 !== t4.negative)
              return 1;
            var e4 = this.ucmp(t4);
            return 0 !== this.negative ? 0 | -e4 : e4;
          }, A2.prototype.ucmp = function(t4) {
            if (this.length > t4.length)
              return 1;
            if (this.length < t4.length)
              return -1;
            for (var e4 = 0, r5 = this.length - 1; r5 >= 0; r5--) {
              var n3 = 0 | this.words[r5], A3 = 0 | t4.words[r5];
              if (n3 !== A3) {
                n3 < A3 ? e4 = -1 : n3 > A3 && (e4 = 1);
                break;
              }
            }
            return e4;
          }, A2.prototype.gtn = function(t4) {
            return 1 === this.cmpn(t4);
          }, A2.prototype.gt = function(t4) {
            return 1 === this.cmp(t4);
          }, A2.prototype.gten = function(t4) {
            return this.cmpn(t4) >= 0;
          }, A2.prototype.gte = function(t4) {
            return this.cmp(t4) >= 0;
          }, A2.prototype.ltn = function(t4) {
            return -1 === this.cmpn(t4);
          }, A2.prototype.lt = function(t4) {
            return -1 === this.cmp(t4);
          }, A2.prototype.lten = function(t4) {
            return this.cmpn(t4) <= 0;
          }, A2.prototype.lte = function(t4) {
            return this.cmp(t4) <= 0;
          }, A2.prototype.eqn = function(t4) {
            return 0 === this.cmpn(t4);
          }, A2.prototype.eq = function(t4) {
            return 0 === this.cmp(t4);
          }, A2.red = function(t4) {
            return new v2(t4);
          }, A2.prototype.toRed = function(t4) {
            return r4(!this.red, "Already a number in reduction context"), r4(0 === this.negative, "red works only with positives"), t4.convertTo(this)._forceRed(t4);
          }, A2.prototype.fromRed = function() {
            return r4(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
          }, A2.prototype._forceRed = function(t4) {
            return this.red = t4, this;
          }, A2.prototype.forceRed = function(t4) {
            return r4(!this.red, "Already a number in reduction context"), this._forceRed(t4);
          }, A2.prototype.redAdd = function(t4) {
            return r4(this.red, "redAdd works only with red numbers"), this.red.add(this, t4);
          }, A2.prototype.redIAdd = function(t4) {
            return r4(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, t4);
          }, A2.prototype.redSub = function(t4) {
            return r4(this.red, "redSub works only with red numbers"), this.red.sub(this, t4);
          }, A2.prototype.redISub = function(t4) {
            return r4(this.red, "redISub works only with red numbers"), this.red.isub(this, t4);
          }, A2.prototype.redShl = function(t4) {
            return r4(this.red, "redShl works only with red numbers"), this.red.shl(this, t4);
          }, A2.prototype.redMul = function(t4) {
            return r4(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.mul(this, t4);
          }, A2.prototype.redIMul = function(t4) {
            return r4(this.red, "redMul works only with red numbers"), this.red._verify2(this, t4), this.red.imul(this, t4);
          }, A2.prototype.redSqr = function() {
            return r4(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
          }, A2.prototype.redISqr = function() {
            return r4(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
          }, A2.prototype.redSqrt = function() {
            return r4(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
          }, A2.prototype.redInvm = function() {
            return r4(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
          }, A2.prototype.redNeg = function() {
            return r4(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
          }, A2.prototype.redPow = function(t4) {
            return r4(this.red && !t4.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, t4);
          };
          var y2 = { k256: null, p224: null, p192: null, p25519: null };
          function C2(t4, e4) {
            this.name = t4, this.p = new A2(e4, 16), this.n = this.p.bitLength(), this.k = new A2(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
          }
          function m2() {
            C2.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
          }
          function B2() {
            C2.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
          }
          function E2() {
            C2.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
          }
          function w2() {
            C2.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
          }
          function v2(t4) {
            if ("string" == typeof t4) {
              var e4 = A2._prime(t4);
              this.m = e4.p, this.prime = e4;
            } else
              r4(t4.gtn(1), "modulus must be greater than 1"), this.m = t4, this.prime = null;
          }
          function _2(t4) {
            v2.call(this, t4), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new A2(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
          }
          C2.prototype._tmp = function() {
            var t4 = new A2(null);
            return t4.words = new Array(Math.ceil(this.n / 13)), t4;
          }, C2.prototype.ireduce = function(t4) {
            var e4, r5 = t4;
            do {
              this.split(r5, this.tmp), e4 = (r5 = (r5 = this.imulK(r5)).iadd(this.tmp)).bitLength();
            } while (e4 > this.n);
            var n3 = e4 < this.n ? -1 : r5.ucmp(this.p);
            return 0 === n3 ? (r5.words[0] = 0, r5.length = 1) : n3 > 0 ? r5.isub(this.p) : void 0 !== r5.strip ? r5.strip() : r5._strip(), r5;
          }, C2.prototype.split = function(t4, e4) {
            t4.iushrn(this.n, 0, e4);
          }, C2.prototype.imulK = function(t4) {
            return t4.imul(this.k);
          }, n2(m2, C2), m2.prototype.split = function(t4, e4) {
            for (var r5 = 4194303, n3 = Math.min(t4.length, 9), A3 = 0; A3 < n3; A3++)
              e4.words[A3] = t4.words[A3];
            if (e4.length = n3, t4.length <= 9)
              return t4.words[0] = 0, void (t4.length = 1);
            var i3 = t4.words[9];
            for (e4.words[e4.length++] = i3 & r5, A3 = 10; A3 < t4.length; A3++) {
              var o3 = 0 | t4.words[A3];
              t4.words[A3 - 10] = (o3 & r5) << 4 | i3 >>> 22, i3 = o3;
            }
            i3 >>>= 22, t4.words[A3 - 10] = i3, 0 === i3 && t4.length > 10 ? t4.length -= 10 : t4.length -= 9;
          }, m2.prototype.imulK = function(t4) {
            t4.words[t4.length] = 0, t4.words[t4.length + 1] = 0, t4.length += 2;
            for (var e4 = 0, r5 = 0; r5 < t4.length; r5++) {
              var n3 = 0 | t4.words[r5];
              e4 += 977 * n3, t4.words[r5] = 67108863 & e4, e4 = 64 * n3 + (e4 / 67108864 | 0);
            }
            return 0 === t4.words[t4.length - 1] && (t4.length--, 0 === t4.words[t4.length - 1] && t4.length--), t4;
          }, n2(B2, C2), n2(E2, C2), n2(w2, C2), w2.prototype.imulK = function(t4) {
            for (var e4 = 0, r5 = 0; r5 < t4.length; r5++) {
              var n3 = 19 * (0 | t4.words[r5]) + e4, A3 = 67108863 & n3;
              n3 >>>= 26, t4.words[r5] = A3, e4 = n3;
            }
            return 0 !== e4 && (t4.words[t4.length++] = e4), t4;
          }, A2._prime = function(t4) {
            if (y2[t4])
              return y2[t4];
            var e4;
            if ("k256" === t4)
              e4 = new m2();
            else if ("p224" === t4)
              e4 = new B2();
            else if ("p192" === t4)
              e4 = new E2();
            else {
              if ("p25519" !== t4)
                throw new Error("Unknown prime " + t4);
              e4 = new w2();
            }
            return y2[t4] = e4, e4;
          }, v2.prototype._verify1 = function(t4) {
            r4(0 === t4.negative, "red works only with positives"), r4(t4.red, "red works only with red numbers");
          }, v2.prototype._verify2 = function(t4, e4) {
            r4(!(t4.negative | e4.negative), "red works only with positives"), r4(t4.red && t4.red === e4.red, "red works only with red numbers");
          }, v2.prototype.imod = function(t4) {
            return this.prime ? this.prime.ireduce(t4)._forceRed(this) : (c2(t4, t4.umod(this.m)._forceRed(this)), t4);
          }, v2.prototype.neg = function(t4) {
            return t4.isZero() ? t4.clone() : this.m.sub(t4)._forceRed(this);
          }, v2.prototype.add = function(t4, e4) {
            this._verify2(t4, e4);
            var r5 = t4.add(e4);
            return r5.cmp(this.m) >= 0 && r5.isub(this.m), r5._forceRed(this);
          }, v2.prototype.iadd = function(t4, e4) {
            this._verify2(t4, e4);
            var r5 = t4.iadd(e4);
            return r5.cmp(this.m) >= 0 && r5.isub(this.m), r5;
          }, v2.prototype.sub = function(t4, e4) {
            this._verify2(t4, e4);
            var r5 = t4.sub(e4);
            return r5.cmpn(0) < 0 && r5.iadd(this.m), r5._forceRed(this);
          }, v2.prototype.isub = function(t4, e4) {
            this._verify2(t4, e4);
            var r5 = t4.isub(e4);
            return r5.cmpn(0) < 0 && r5.iadd(this.m), r5;
          }, v2.prototype.shl = function(t4, e4) {
            return this._verify1(t4), this.imod(t4.ushln(e4));
          }, v2.prototype.imul = function(t4, e4) {
            return this._verify2(t4, e4), this.imod(t4.imul(e4));
          }, v2.prototype.mul = function(t4, e4) {
            return this._verify2(t4, e4), this.imod(t4.mul(e4));
          }, v2.prototype.isqr = function(t4) {
            return this.imul(t4, t4.clone());
          }, v2.prototype.sqr = function(t4) {
            return this.mul(t4, t4);
          }, v2.prototype.sqrt = function(t4) {
            if (t4.isZero())
              return t4.clone();
            var e4 = this.m.andln(3);
            if (r4(e4 % 2 == 1), 3 === e4) {
              var n3 = this.m.add(new A2(1)).iushrn(2);
              return this.pow(t4, n3);
            }
            for (var i3 = this.m.subn(1), o3 = 0; !i3.isZero() && 0 === i3.andln(1); )
              o3++, i3.iushrn(1);
            r4(!i3.isZero());
            var s3 = new A2(1).toRed(this), a3 = s3.redNeg(), c3 = this.m.subn(1).iushrn(1), h3 = this.m.bitLength();
            for (h3 = new A2(2 * h3 * h3).toRed(this); 0 !== this.pow(h3, c3).cmp(a3); )
              h3.redIAdd(a3);
            for (var g3 = this.pow(h3, i3), u3 = this.pow(t4, i3.addn(1).iushrn(1)), l3 = this.pow(t4, i3), f3 = o3; 0 !== l3.cmp(s3); ) {
              for (var p3 = l3, d3 = 0; 0 !== p3.cmp(s3); d3++)
                p3 = p3.redSqr();
              r4(d3 < f3);
              var I3 = this.pow(g3, new A2(1).iushln(f3 - d3 - 1));
              u3 = u3.redMul(I3), g3 = I3.redSqr(), l3 = l3.redMul(g3), f3 = d3;
            }
            return u3;
          }, v2.prototype.invm = function(t4) {
            var e4 = t4._invmp(this.m);
            return 0 !== e4.negative ? (e4.negative = 0, this.imod(e4).redNeg()) : this.imod(e4);
          }, v2.prototype.pow = function(t4, e4) {
            if (e4.isZero())
              return new A2(1).toRed(this);
            if (0 === e4.cmpn(1))
              return t4.clone();
            var r5 = new Array(16);
            r5[0] = new A2(1).toRed(this), r5[1] = t4;
            for (var n3 = 2; n3 < r5.length; n3++)
              r5[n3] = this.mul(r5[n3 - 1], t4);
            var i3 = r5[0], o3 = 0, s3 = 0, a3 = e4.bitLength() % 26;
            for (0 === a3 && (a3 = 26), n3 = e4.length - 1; n3 >= 0; n3--) {
              for (var c3 = e4.words[n3], h3 = a3 - 1; h3 >= 0; h3--) {
                var g3 = c3 >> h3 & 1;
                i3 !== r5[0] && (i3 = this.sqr(i3)), 0 !== g3 || 0 !== o3 ? (o3 <<= 1, o3 |= g3, (4 === ++s3 || 0 === n3 && 0 === h3) && (i3 = this.mul(i3, r5[o3]), s3 = 0, o3 = 0)) : s3 = 0;
              }
              a3 = 26;
            }
            return i3;
          }, v2.prototype.convertTo = function(t4) {
            var e4 = t4.umod(this.m);
            return e4 === t4 ? e4.clone() : e4;
          }, v2.prototype.convertFrom = function(t4) {
            var e4 = t4.clone();
            return e4.red = null, e4;
          }, A2.mont = function(t4) {
            return new _2(t4);
          }, n2(_2, v2), _2.prototype.convertTo = function(t4) {
            return this.imod(t4.ushln(this.shift));
          }, _2.prototype.convertFrom = function(t4) {
            var e4 = this.imod(t4.mul(this.rinv));
            return e4.red = null, e4;
          }, _2.prototype.imul = function(t4, e4) {
            if (t4.isZero() || e4.isZero())
              return t4.words[0] = 0, t4.length = 1, t4;
            var r5 = t4.imul(e4), n3 = r5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), A3 = r5.isub(n3).iushrn(this.shift), i3 = A3;
            return A3.cmp(this.m) >= 0 ? i3 = A3.isub(this.m) : A3.cmpn(0) < 0 && (i3 = A3.iadd(this.m)), i3._forceRed(this);
          }, _2.prototype.mul = function(t4, e4) {
            if (t4.isZero() || e4.isZero())
              return new A2(0)._forceRed(this);
            var r5 = t4.mul(e4), n3 = r5.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), i3 = r5.isub(n3).iushrn(this.shift), o3 = i3;
            return i3.cmp(this.m) >= 0 ? o3 = i3.isub(this.m) : i3.cmpn(0) < 0 && (o3 = i3.iadd(this.m)), o3._forceRed(this);
          }, _2.prototype.invm = function(t4) {
            return this.imod(t4._invmp(this.m).mul(this.r2))._forceRed(this);
          };
        }(void 0 === e2 || e2, t2);
      } });
      var al = rl({ "node_modules/js-sha3/src/sha3.js"(t2, e2) {
        Al(), il(), function() {
          var t3 = "input is invalid type", r4 = "object" == typeof window, n2 = r4 ? window : {};
          n2.JS_SHA3_NO_WINDOW && (r4 = false);
          var A2 = !r4 && "object" == typeof self;
          !n2.JS_SHA3_NO_NODE_JS && "object" == typeof process && process.versions && process.versions.node ? n2 = global : A2 && (n2 = self);
          var i2 = !n2.JS_SHA3_NO_COMMON_JS && "object" == typeof e2 && e2.exports, o2 = "function" == typeof define && define.amd, s2 = !n2.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer, a2 = "0123456789abcdef".split(""), c2 = [4, 1024, 262144, 67108864], h2 = [0, 8, 16, 24], g2 = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648], u2 = [224, 256, 384, 512], l2 = [128, 256], f2 = ["hex", "buffer", "arrayBuffer", "array", "digest"], p2 = { 128: 168, 256: 136 };
          !n2.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function(t4) {
            return "[object Array]" === Object.prototype.toString.call(t4);
          }), !s2 || !n2.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(t4) {
            return "object" == typeof t4 && t4.buffer && t4.buffer.constructor === ArrayBuffer;
          });
          for (var d2 = function(t4, e3, r5) {
            return function(n3) {
              return new N3(t4, e3, t4).update(n3)[r5]();
            };
          }, I2 = function(t4, e3, r5) {
            return function(n3, A3) {
              return new N3(t4, e3, A3).update(n3)[r5]();
            };
          }, y2 = function(t4, e3, r5) {
            return function(e4, n3, A3, i3) {
              return w2["cshake" + t4].update(e4, n3, A3, i3)[r5]();
            };
          }, C2 = function(t4, e3, r5) {
            return function(e4, n3, A3, i3) {
              return w2["kmac" + t4].update(e4, n3, A3, i3)[r5]();
            };
          }, m2 = function(t4, e3, r5, n3) {
            for (var A3 = 0; A3 < f2.length; ++A3) {
              var i3 = f2[A3];
              t4[i3] = e3(r5, n3, i3);
            }
            return t4;
          }, B2 = function(t4, e3) {
            var r5 = d2(t4, e3, "hex");
            return r5.create = function() {
              return new N3(t4, e3, t4);
            }, r5.update = function(t5) {
              return r5.create().update(t5);
            }, m2(r5, d2, t4, e3);
          }, E2 = [{ name: "keccak", padding: [1, 256, 65536, 16777216], bits: u2, createMethod: B2 }, { name: "sha3", padding: [6, 1536, 393216, 100663296], bits: u2, createMethod: B2 }, { name: "shake", padding: [31, 7936, 2031616, 520093696], bits: l2, createMethod: function(t4, e3) {
            var r5 = I2(t4, e3, "hex");
            return r5.create = function(r6) {
              return new N3(t4, e3, r6);
            }, r5.update = function(t5, e4) {
              return r5.create(e4).update(t5);
            }, m2(r5, I2, t4, e3);
          } }, { name: "cshake", padding: c2, bits: l2, createMethod: function(t4, e3) {
            var r5 = p2[t4], n3 = y2(t4, 0, "hex");
            return n3.create = function(n4, A3, i3) {
              return A3 || i3 ? new N3(t4, e3, n4).bytepad([A3, i3], r5) : w2["shake" + t4].create(n4);
            }, n3.update = function(t5, e4, r6, A3) {
              return n3.create(e4, r6, A3).update(t5);
            }, m2(n3, y2, t4, e3);
          } }, { name: "kmac", padding: c2, bits: l2, createMethod: function(t4, e3) {
            var r5 = p2[t4], n3 = C2(t4, 0, "hex");
            return n3.create = function(n4, A3, i3) {
              return new M2(t4, e3, A3).bytepad(["KMAC", i3], r5).bytepad([n4], r5);
            }, n3.update = function(t5, e4, r6, A3) {
              return n3.create(t5, r6, A3).update(e4);
            }, m2(n3, C2, t4, e3);
          } }], w2 = {}, v2 = [], _2 = 0; _2 < E2.length; ++_2)
            for (var Q2 = E2[_2], b2 = Q2.bits, k2 = 0; k2 < b2.length; ++k2) {
              var D2 = Q2.name + "_" + b2[k2];
              if (v2.push(D2), w2[D2] = Q2.createMethod(b2[k2], Q2.padding), "sha3" !== Q2.name) {
                var S2 = Q2.name + b2[k2];
                v2.push(S2), w2[S2] = w2[D2];
              }
            }
          function N3(t4, e3, r5) {
            this.blocks = [], this.s = [], this.padding = e3, this.outputBits = r5, this.reset = true, this.finalized = false, this.block = 0, this.start = 0, this.blockCount = 1600 - (t4 << 1) >> 5, this.byteCount = this.blockCount << 2, this.outputBlocks = r5 >> 5, this.extraBytes = (31 & r5) >> 3;
            for (var n3 = 0; n3 < 50; ++n3)
              this.s[n3] = 0;
          }
          function M2(t4, e3, r5) {
            N3.call(this, t4, e3, r5);
          }
          N3.prototype.update = function(e3) {
            if (this.finalized)
              throw new Error("finalize already called");
            var r5, n3 = typeof e3;
            if ("string" !== n3) {
              if ("object" !== n3)
                throw new Error(t3);
              if (null === e3)
                throw new Error(t3);
              if (s2 && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || s2 && ArrayBuffer.isView(e3)))
                throw new Error(t3);
              r5 = true;
            }
            for (var A3, i3, o3 = this.blocks, a3 = this.byteCount, c3 = e3.length, g3 = this.blockCount, u3 = 0, l3 = this.s; u3 < c3; ) {
              if (this.reset)
                for (this.reset = false, o3[0] = this.block, A3 = 1; A3 < g3 + 1; ++A3)
                  o3[A3] = 0;
              if (r5)
                for (A3 = this.start; u3 < c3 && A3 < a3; ++u3)
                  o3[A3 >> 2] |= e3[u3] << h2[3 & A3++];
              else
                for (A3 = this.start; u3 < c3 && A3 < a3; ++u3)
                  (i3 = e3.charCodeAt(u3)) < 128 ? o3[A3 >> 2] |= i3 << h2[3 & A3++] : i3 < 2048 ? (o3[A3 >> 2] |= (192 | i3 >> 6) << h2[3 & A3++], o3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]) : i3 < 55296 || i3 >= 57344 ? (o3[A3 >> 2] |= (224 | i3 >> 12) << h2[3 & A3++], o3[A3 >> 2] |= (128 | i3 >> 6 & 63) << h2[3 & A3++], o3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]) : (i3 = 65536 + ((1023 & i3) << 10 | 1023 & e3.charCodeAt(++u3)), o3[A3 >> 2] |= (240 | i3 >> 18) << h2[3 & A3++], o3[A3 >> 2] |= (128 | i3 >> 12 & 63) << h2[3 & A3++], o3[A3 >> 2] |= (128 | i3 >> 6 & 63) << h2[3 & A3++], o3[A3 >> 2] |= (128 | 63 & i3) << h2[3 & A3++]);
              if (this.lastByteIndex = A3, A3 >= a3) {
                for (this.start = A3 - a3, this.block = o3[g3], A3 = 0; A3 < g3; ++A3)
                  l3[A3] ^= o3[A3];
                x2(l3), this.reset = true;
              } else
                this.start = A3;
            }
            return this;
          }, N3.prototype.encode = function(t4, e3) {
            var r5 = 255 & t4, n3 = 1, A3 = [r5];
            for (r5 = 255 & (t4 >>= 8); r5 > 0; )
              A3.unshift(r5), r5 = 255 & (t4 >>= 8), ++n3;
            return e3 ? A3.push(n3) : A3.unshift(n3), this.update(A3), A3.length;
          }, N3.prototype.encodeString = function(e3) {
            var r5, n3 = typeof e3;
            if ("string" !== n3) {
              if ("object" !== n3)
                throw new Error(t3);
              if (null === e3)
                throw new Error(t3);
              if (s2 && e3.constructor === ArrayBuffer)
                e3 = new Uint8Array(e3);
              else if (!(Array.isArray(e3) || s2 && ArrayBuffer.isView(e3)))
                throw new Error(t3);
              r5 = true;
            }
            var A3 = 0, i3 = e3.length;
            if (r5)
              A3 = i3;
            else
              for (var o3 = 0; o3 < e3.length; ++o3) {
                var a3 = e3.charCodeAt(o3);
                a3 < 128 ? A3 += 1 : a3 < 2048 ? A3 += 2 : a3 < 55296 || a3 >= 57344 ? A3 += 3 : (a3 = 65536 + ((1023 & a3) << 10 | 1023 & e3.charCodeAt(++o3)), A3 += 4);
              }
            return A3 += this.encode(8 * A3), this.update(e3), A3;
          }, N3.prototype.bytepad = function(t4, e3) {
            for (var r5 = this.encode(e3), n3 = 0; n3 < t4.length; ++n3)
              r5 += this.encodeString(t4[n3]);
            var A3 = e3 - r5 % e3, i3 = [];
            return i3.length = A3, this.update(i3), this;
          }, N3.prototype.finalize = function() {
            if (!this.finalized) {
              this.finalized = true;
              var t4 = this.blocks, e3 = this.lastByteIndex, r5 = this.blockCount, n3 = this.s;
              if (t4[e3 >> 2] |= this.padding[3 & e3], this.lastByteIndex === this.byteCount)
                for (t4[0] = t4[r5], e3 = 1; e3 < r5 + 1; ++e3)
                  t4[e3] = 0;
              for (t4[r5 - 1] |= 2147483648, e3 = 0; e3 < r5; ++e3)
                n3[e3] ^= t4[e3];
              x2(n3);
            }
          }, N3.prototype.toString = N3.prototype.hex = function() {
            this.finalize();
            for (var t4, e3 = this.blockCount, r5 = this.s, n3 = this.outputBlocks, A3 = this.extraBytes, i3 = 0, o3 = 0, s3 = ""; o3 < n3; ) {
              for (i3 = 0; i3 < e3 && o3 < n3; ++i3, ++o3)
                t4 = r5[i3], s3 += a2[t4 >> 4 & 15] + a2[15 & t4] + a2[t4 >> 12 & 15] + a2[t4 >> 8 & 15] + a2[t4 >> 20 & 15] + a2[t4 >> 16 & 15] + a2[t4 >> 28 & 15] + a2[t4 >> 24 & 15];
              o3 % e3 == 0 && (x2(r5), i3 = 0);
            }
            return A3 && (t4 = r5[i3], s3 += a2[t4 >> 4 & 15] + a2[15 & t4], A3 > 1 && (s3 += a2[t4 >> 12 & 15] + a2[t4 >> 8 & 15]), A3 > 2 && (s3 += a2[t4 >> 20 & 15] + a2[t4 >> 16 & 15])), s3;
          }, N3.prototype.arrayBuffer = function() {
            this.finalize();
            var t4, e3 = this.blockCount, r5 = this.s, n3 = this.outputBlocks, A3 = this.extraBytes, i3 = 0, o3 = 0, s3 = this.outputBits >> 3;
            t4 = A3 ? new ArrayBuffer(n3 + 1 << 2) : new ArrayBuffer(s3);
            for (var a3 = new Uint32Array(t4); o3 < n3; ) {
              for (i3 = 0; i3 < e3 && o3 < n3; ++i3, ++o3)
                a3[o3] = r5[i3];
              o3 % e3 == 0 && x2(r5);
            }
            return A3 && (a3[i3] = r5[i3], t4 = t4.slice(0, s3)), t4;
          }, N3.prototype.buffer = N3.prototype.arrayBuffer, N3.prototype.digest = N3.prototype.array = function() {
            this.finalize();
            for (var t4, e3, r5 = this.blockCount, n3 = this.s, A3 = this.outputBlocks, i3 = this.extraBytes, o3 = 0, s3 = 0, a3 = []; s3 < A3; ) {
              for (o3 = 0; o3 < r5 && s3 < A3; ++o3, ++s3)
                t4 = s3 << 2, e3 = n3[o3], a3[t4] = 255 & e3, a3[t4 + 1] = e3 >> 8 & 255, a3[t4 + 2] = e3 >> 16 & 255, a3[t4 + 3] = e3 >> 24 & 255;
              s3 % r5 == 0 && x2(n3);
            }
            return i3 && (t4 = s3 << 2, e3 = n3[o3], a3[t4] = 255 & e3, i3 > 1 && (a3[t4 + 1] = e3 >> 8 & 255), i3 > 2 && (a3[t4 + 2] = e3 >> 16 & 255)), a3;
          }, M2.prototype = new N3(), M2.prototype.finalize = function() {
            return this.encode(this.outputBits, true), N3.prototype.finalize.call(this);
          };
          var x2 = function(t4) {
            var e3, r5, n3, A3, i3, o3, s3, a3, c3, h3, u3, l3, f3, p3, d3, I3, y3, C3, m3, B3, E3, w3, v3, _3, Q3, b3, k3, D3, S3, N4, M3, x3, F2, P2, T2, R2, U2, G2, H2, L2, O2, Y2, K2, J2, j2, z2, q2, X2, V2, W2, Z2, $2, tt2, et2, rt2, nt2, At2, it2, ot2, st2, at2, ct2, ht2;
            for (n3 = 0; n3 < 48; n3 += 2)
              A3 = t4[0] ^ t4[10] ^ t4[20] ^ t4[30] ^ t4[40], i3 = t4[1] ^ t4[11] ^ t4[21] ^ t4[31] ^ t4[41], o3 = t4[2] ^ t4[12] ^ t4[22] ^ t4[32] ^ t4[42], s3 = t4[3] ^ t4[13] ^ t4[23] ^ t4[33] ^ t4[43], a3 = t4[4] ^ t4[14] ^ t4[24] ^ t4[34] ^ t4[44], c3 = t4[5] ^ t4[15] ^ t4[25] ^ t4[35] ^ t4[45], h3 = t4[6] ^ t4[16] ^ t4[26] ^ t4[36] ^ t4[46], u3 = t4[7] ^ t4[17] ^ t4[27] ^ t4[37] ^ t4[47], e3 = (l3 = t4[8] ^ t4[18] ^ t4[28] ^ t4[38] ^ t4[48]) ^ (o3 << 1 | s3 >>> 31), r5 = (f3 = t4[9] ^ t4[19] ^ t4[29] ^ t4[39] ^ t4[49]) ^ (s3 << 1 | o3 >>> 31), t4[0] ^= e3, t4[1] ^= r5, t4[10] ^= e3, t4[11] ^= r5, t4[20] ^= e3, t4[21] ^= r5, t4[30] ^= e3, t4[31] ^= r5, t4[40] ^= e3, t4[41] ^= r5, e3 = A3 ^ (a3 << 1 | c3 >>> 31), r5 = i3 ^ (c3 << 1 | a3 >>> 31), t4[2] ^= e3, t4[3] ^= r5, t4[12] ^= e3, t4[13] ^= r5, t4[22] ^= e3, t4[23] ^= r5, t4[32] ^= e3, t4[33] ^= r5, t4[42] ^= e3, t4[43] ^= r5, e3 = o3 ^ (h3 << 1 | u3 >>> 31), r5 = s3 ^ (u3 << 1 | h3 >>> 31), t4[4] ^= e3, t4[5] ^= r5, t4[14] ^= e3, t4[15] ^= r5, t4[24] ^= e3, t4[25] ^= r5, t4[34] ^= e3, t4[35] ^= r5, t4[44] ^= e3, t4[45] ^= r5, e3 = a3 ^ (l3 << 1 | f3 >>> 31), r5 = c3 ^ (f3 << 1 | l3 >>> 31), t4[6] ^= e3, t4[7] ^= r5, t4[16] ^= e3, t4[17] ^= r5, t4[26] ^= e3, t4[27] ^= r5, t4[36] ^= e3, t4[37] ^= r5, t4[46] ^= e3, t4[47] ^= r5, e3 = h3 ^ (A3 << 1 | i3 >>> 31), r5 = u3 ^ (i3 << 1 | A3 >>> 31), t4[8] ^= e3, t4[9] ^= r5, t4[18] ^= e3, t4[19] ^= r5, t4[28] ^= e3, t4[29] ^= r5, t4[38] ^= e3, t4[39] ^= r5, t4[48] ^= e3, t4[49] ^= r5, p3 = t4[0], d3 = t4[1], z2 = t4[11] << 4 | t4[10] >>> 28, q2 = t4[10] << 4 | t4[11] >>> 28, D3 = t4[20] << 3 | t4[21] >>> 29, S3 = t4[21] << 3 | t4[20] >>> 29, st2 = t4[31] << 9 | t4[30] >>> 23, at2 = t4[30] << 9 | t4[31] >>> 23, Y2 = t4[40] << 18 | t4[41] >>> 14, K2 = t4[41] << 18 | t4[40] >>> 14, P2 = t4[2] << 1 | t4[3] >>> 31, T2 = t4[3] << 1 | t4[2] >>> 31, I3 = t4[13] << 12 | t4[12] >>> 20, y3 = t4[12] << 12 | t4[13] >>> 20, X2 = t4[22] << 10 | t4[23] >>> 22, V2 = t4[23] << 10 | t4[22] >>> 22, N4 = t4[33] << 13 | t4[32] >>> 19, M3 = t4[32] << 13 | t4[33] >>> 19, ct2 = t4[42] << 2 | t4[43] >>> 30, ht2 = t4[43] << 2 | t4[42] >>> 30, et2 = t4[5] << 30 | t4[4] >>> 2, rt2 = t4[4] << 30 | t4[5] >>> 2, R2 = t4[14] << 6 | t4[15] >>> 26, U2 = t4[15] << 6 | t4[14] >>> 26, C3 = t4[25] << 11 | t4[24] >>> 21, m3 = t4[24] << 11 | t4[25] >>> 21, W2 = t4[34] << 15 | t4[35] >>> 17, Z2 = t4[35] << 15 | t4[34] >>> 17, x3 = t4[45] << 29 | t4[44] >>> 3, F2 = t4[44] << 29 | t4[45] >>> 3, _3 = t4[6] << 28 | t4[7] >>> 4, Q3 = t4[7] << 28 | t4[6] >>> 4, nt2 = t4[17] << 23 | t4[16] >>> 9, At2 = t4[16] << 23 | t4[17] >>> 9, G2 = t4[26] << 25 | t4[27] >>> 7, H2 = t4[27] << 25 | t4[26] >>> 7, B3 = t4[36] << 21 | t4[37] >>> 11, E3 = t4[37] << 21 | t4[36] >>> 11, $2 = t4[47] << 24 | t4[46] >>> 8, tt2 = t4[46] << 24 | t4[47] >>> 8, J2 = t4[8] << 27 | t4[9] >>> 5, j2 = t4[9] << 27 | t4[8] >>> 5, b3 = t4[18] << 20 | t4[19] >>> 12, k3 = t4[19] << 20 | t4[18] >>> 12, it2 = t4[29] << 7 | t4[28] >>> 25, ot2 = t4[28] << 7 | t4[29] >>> 25, L2 = t4[38] << 8 | t4[39] >>> 24, O2 = t4[39] << 8 | t4[38] >>> 24, w3 = t4[48] << 14 | t4[49] >>> 18, v3 = t4[49] << 14 | t4[48] >>> 18, t4[0] = p3 ^ ~I3 & C3, t4[1] = d3 ^ ~y3 & m3, t4[10] = _3 ^ ~b3 & D3, t4[11] = Q3 ^ ~k3 & S3, t4[20] = P2 ^ ~R2 & G2, t4[21] = T2 ^ ~U2 & H2, t4[30] = J2 ^ ~z2 & X2, t4[31] = j2 ^ ~q2 & V2, t4[40] = et2 ^ ~nt2 & it2, t4[41] = rt2 ^ ~At2 & ot2, t4[2] = I3 ^ ~C3 & B3, t4[3] = y3 ^ ~m3 & E3, t4[12] = b3 ^ ~D3 & N4, t4[13] = k3 ^ ~S3 & M3, t4[22] = R2 ^ ~G2 & L2, t4[23] = U2 ^ ~H2 & O2, t4[32] = z2 ^ ~X2 & W2, t4[33] = q2 ^ ~V2 & Z2, t4[42] = nt2 ^ ~it2 & st2, t4[43] = At2 ^ ~ot2 & at2, t4[4] = C3 ^ ~B3 & w3, t4[5] = m3 ^ ~E3 & v3, t4[14] = D3 ^ ~N4 & x3, t4[15] = S3 ^ ~M3 & F2, t4[24] = G2 ^ ~L2 & Y2, t4[25] = H2 ^ ~O2 & K2, t4[34] = X2 ^ ~W2 & $2, t4[35] = V2 ^ ~Z2 & tt2, t4[44] = it2 ^ ~st2 & ct2, t4[45] = ot2 ^ ~at2 & ht2, t4[6] = B3 ^ ~w3 & p3, t4[7] = E3 ^ ~v3 & d3, t4[16] = N4 ^ ~x3 & _3, t4[17] = M3 ^ ~F2 & Q3, t4[26] = L2 ^ ~Y2 & P2, t4[27] = O2 ^ ~K2 & T2, t4[36] = W2 ^ ~$2 & J2, t4[37] = Z2 ^ ~tt2 & j2, t4[46] = st2 ^ ~ct2 & et2, t4[47] = at2 ^ ~ht2 & rt2, t4[8] = w3 ^ ~p3 & I3, t4[9] = v3 ^ ~d3 & y3, t4[18] = x3 ^ ~_3 & b3, t4[19] = F2 ^ ~Q3 & k3, t4[28] = Y2 ^ ~P2 & R2, t4[29] = K2 ^ ~T2 & U2, t4[38] = $2 ^ ~J2 & z2, t4[39] = tt2 ^ ~j2 & q2, t4[48] = ct2 ^ ~et2 & nt2, t4[49] = ht2 ^ ~rt2 & At2, t4[0] ^= g2[n3], t4[1] ^= g2[n3 + 1];
          };
          if (i2)
            e2.exports = w2;
          else {
            for (_2 = 0; _2 < v2.length; ++_2)
              n2[v2[_2]] = w2[v2[_2]];
            o2 && define(function() {
              return w2;
            });
          }
        }();
      } });
      var cl = rl({ "node_modules/minimalistic-assert/index.js"(t2, e2) {
        function r4(t3, e3) {
          if (!t3)
            throw new Error(e3 || "Assertion failed");
        }
        Al(), il(), e2.exports = r4, r4.equal = function(t3, e3, r5) {
          if (t3 != e3)
            throw new Error(r5 || "Assertion failed: " + t3 + " != " + e3);
        };
      } });
      var hl = rl({ "node_modules/inherits/inherits_browser.js"(t2, e2) {
        Al(), il(), "function" == typeof Object.create ? e2.exports = function(t3, e3) {
          e3 && (t3.super_ = e3, t3.prototype = Object.create(e3.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
        } : e2.exports = function(t3, e3) {
          if (e3) {
            t3.super_ = e3;
            var r4 = function() {
            };
            r4.prototype = e3.prototype, t3.prototype = new r4(), t3.prototype.constructor = t3;
          }
        };
      } });
      var gl = rl({ "node_modules/hash.js/lib/hash/utils.js"(t2) {
        Al(), il();
        var e2 = cl(), r4 = hl();
        function n2(t3, e3) {
          return 55296 == (64512 & t3.charCodeAt(e3)) && (!(e3 < 0 || e3 + 1 >= t3.length) && 56320 == (64512 & t3.charCodeAt(e3 + 1)));
        }
        function A2(t3) {
          return (t3 >>> 24 | t3 >>> 8 & 65280 | t3 << 8 & 16711680 | (255 & t3) << 24) >>> 0;
        }
        function i2(t3) {
          return 1 === t3.length ? "0" + t3 : t3;
        }
        function o2(t3) {
          return 7 === t3.length ? "0" + t3 : 6 === t3.length ? "00" + t3 : 5 === t3.length ? "000" + t3 : 4 === t3.length ? "0000" + t3 : 3 === t3.length ? "00000" + t3 : 2 === t3.length ? "000000" + t3 : 1 === t3.length ? "0000000" + t3 : t3;
        }
        t2.inherits = r4, t2.toArray = function(t3, e3) {
          if (Array.isArray(t3))
            return t3.slice();
          if (!t3)
            return [];
          var r5 = [];
          if ("string" == typeof t3)
            if (e3) {
              if ("hex" === e3)
                for ((t3 = t3.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t3 = "0" + t3), i3 = 0; i3 < t3.length; i3 += 2)
                  r5.push(parseInt(t3[i3] + t3[i3 + 1], 16));
            } else
              for (var A3 = 0, i3 = 0; i3 < t3.length; i3++) {
                var o3 = t3.charCodeAt(i3);
                o3 < 128 ? r5[A3++] = o3 : o3 < 2048 ? (r5[A3++] = o3 >> 6 | 192, r5[A3++] = 63 & o3 | 128) : n2(t3, i3) ? (o3 = 65536 + ((1023 & o3) << 10) + (1023 & t3.charCodeAt(++i3)), r5[A3++] = o3 >> 18 | 240, r5[A3++] = o3 >> 12 & 63 | 128, r5[A3++] = o3 >> 6 & 63 | 128, r5[A3++] = 63 & o3 | 128) : (r5[A3++] = o3 >> 12 | 224, r5[A3++] = o3 >> 6 & 63 | 128, r5[A3++] = 63 & o3 | 128);
              }
          else
            for (i3 = 0; i3 < t3.length; i3++)
              r5[i3] = 0 | t3[i3];
          return r5;
        }, t2.toHex = function(t3) {
          for (var e3 = "", r5 = 0; r5 < t3.length; r5++)
            e3 += i2(t3[r5].toString(16));
          return e3;
        }, t2.htonl = A2, t2.toHex32 = function(t3, e3) {
          for (var r5 = "", n3 = 0; n3 < t3.length; n3++) {
            var i3 = t3[n3];
            "little" === e3 && (i3 = A2(i3)), r5 += o2(i3.toString(16));
          }
          return r5;
        }, t2.zero2 = i2, t2.zero8 = o2, t2.join32 = function(t3, r5, n3, A3) {
          var i3 = n3 - r5;
          e2(i3 % 4 == 0);
          for (var o3 = new Array(i3 / 4), s2 = 0, a2 = r5; s2 < o3.length; s2++, a2 += 4) {
            var c2;
            c2 = "big" === A3 ? t3[a2] << 24 | t3[a2 + 1] << 16 | t3[a2 + 2] << 8 | t3[a2 + 3] : t3[a2 + 3] << 24 | t3[a2 + 2] << 16 | t3[a2 + 1] << 8 | t3[a2], o3[s2] = c2 >>> 0;
          }
          return o3;
        }, t2.split32 = function(t3, e3) {
          for (var r5 = new Array(4 * t3.length), n3 = 0, A3 = 0; n3 < t3.length; n3++, A3 += 4) {
            var i3 = t3[n3];
            "big" === e3 ? (r5[A3] = i3 >>> 24, r5[A3 + 1] = i3 >>> 16 & 255, r5[A3 + 2] = i3 >>> 8 & 255, r5[A3 + 3] = 255 & i3) : (r5[A3 + 3] = i3 >>> 24, r5[A3 + 2] = i3 >>> 16 & 255, r5[A3 + 1] = i3 >>> 8 & 255, r5[A3] = 255 & i3);
          }
          return r5;
        }, t2.rotr32 = function(t3, e3) {
          return t3 >>> e3 | t3 << 32 - e3;
        }, t2.rotl32 = function(t3, e3) {
          return t3 << e3 | t3 >>> 32 - e3;
        }, t2.sum32 = function(t3, e3) {
          return t3 + e3 >>> 0;
        }, t2.sum32_3 = function(t3, e3, r5) {
          return t3 + e3 + r5 >>> 0;
        }, t2.sum32_4 = function(t3, e3, r5, n3) {
          return t3 + e3 + r5 + n3 >>> 0;
        }, t2.sum32_5 = function(t3, e3, r5, n3, A3) {
          return t3 + e3 + r5 + n3 + A3 >>> 0;
        }, t2.sum64 = function(t3, e3, r5, n3) {
          var A3 = t3[e3], i3 = n3 + t3[e3 + 1] >>> 0, o3 = (i3 < n3 ? 1 : 0) + r5 + A3;
          t3[e3] = o3 >>> 0, t3[e3 + 1] = i3;
        }, t2.sum64_hi = function(t3, e3, r5, n3) {
          return (e3 + n3 >>> 0 < e3 ? 1 : 0) + t3 + r5 >>> 0;
        }, t2.sum64_lo = function(t3, e3, r5, n3) {
          return e3 + n3 >>> 0;
        }, t2.sum64_4_hi = function(t3, e3, r5, n3, A3, i3, o3, s2) {
          var a2 = 0, c2 = e3;
          return a2 += (c2 = c2 + n3 >>> 0) < e3 ? 1 : 0, a2 += (c2 = c2 + i3 >>> 0) < i3 ? 1 : 0, t3 + r5 + A3 + o3 + (a2 += (c2 = c2 + s2 >>> 0) < s2 ? 1 : 0) >>> 0;
        }, t2.sum64_4_lo = function(t3, e3, r5, n3, A3, i3, o3, s2) {
          return e3 + n3 + i3 + s2 >>> 0;
        }, t2.sum64_5_hi = function(t3, e3, r5, n3, A3, i3, o3, s2, a2, c2) {
          var h2 = 0, g2 = e3;
          return h2 += (g2 = g2 + n3 >>> 0) < e3 ? 1 : 0, h2 += (g2 = g2 + i3 >>> 0) < i3 ? 1 : 0, h2 += (g2 = g2 + s2 >>> 0) < s2 ? 1 : 0, t3 + r5 + A3 + o3 + a2 + (h2 += (g2 = g2 + c2 >>> 0) < c2 ? 1 : 0) >>> 0;
        }, t2.sum64_5_lo = function(t3, e3, r5, n3, A3, i3, o3, s2, a2, c2) {
          return e3 + n3 + i3 + s2 + c2 >>> 0;
        }, t2.rotr64_hi = function(t3, e3, r5) {
          return (e3 << 32 - r5 | t3 >>> r5) >>> 0;
        }, t2.rotr64_lo = function(t3, e3, r5) {
          return (t3 << 32 - r5 | e3 >>> r5) >>> 0;
        }, t2.shr64_hi = function(t3, e3, r5) {
          return t3 >>> r5;
        }, t2.shr64_lo = function(t3, e3, r5) {
          return (t3 << 32 - r5 | e3 >>> r5) >>> 0;
        };
      } });
      var ul = rl({ "node_modules/hash.js/lib/hash/common.js"(t2) {
        Al(), il();
        var e2 = gl(), r4 = cl();
        function n2() {
          this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
        }
        t2.BlockHash = n2, n2.prototype.update = function(t3, r5) {
          if (t3 = e2.toArray(t3, r5), this.pending ? this.pending = this.pending.concat(t3) : this.pending = t3, this.pendingTotal += t3.length, this.pending.length >= this._delta8) {
            var n3 = (t3 = this.pending).length % this._delta8;
            this.pending = t3.slice(t3.length - n3, t3.length), 0 === this.pending.length && (this.pending = null), t3 = e2.join32(t3, 0, t3.length - n3, this.endian);
            for (var A2 = 0; A2 < t3.length; A2 += this._delta32)
              this._update(t3, A2, A2 + this._delta32);
          }
          return this;
        }, n2.prototype.digest = function(t3) {
          return this.update(this._pad()), r4(null === this.pending), this._digest(t3);
        }, n2.prototype._pad = function() {
          var t3 = this.pendingTotal, e3 = this._delta8, r5 = e3 - (t3 + this.padLength) % e3, n3 = new Array(r5 + this.padLength);
          n3[0] = 128;
          for (var A2 = 1; A2 < r5; A2++)
            n3[A2] = 0;
          if (t3 <<= 3, "big" === this.endian) {
            for (var i2 = 8; i2 < this.padLength; i2++)
              n3[A2++] = 0;
            n3[A2++] = 0, n3[A2++] = 0, n3[A2++] = 0, n3[A2++] = 0, n3[A2++] = t3 >>> 24 & 255, n3[A2++] = t3 >>> 16 & 255, n3[A2++] = t3 >>> 8 & 255, n3[A2++] = 255 & t3;
          } else
            for (n3[A2++] = 255 & t3, n3[A2++] = t3 >>> 8 & 255, n3[A2++] = t3 >>> 16 & 255, n3[A2++] = t3 >>> 24 & 255, n3[A2++] = 0, n3[A2++] = 0, n3[A2++] = 0, n3[A2++] = 0, i2 = 8; i2 < this.padLength; i2++)
              n3[A2++] = 0;
          return n3;
        };
      } });
      var ll = rl({ "node_modules/hash.js/lib/hash/sha/common.js"(t2) {
        Al(), il();
        var e2 = gl().rotr32;
        function r4(t3, e3, r5) {
          return t3 & e3 ^ ~t3 & r5;
        }
        function n2(t3, e3, r5) {
          return t3 & e3 ^ t3 & r5 ^ e3 & r5;
        }
        function A2(t3, e3, r5) {
          return t3 ^ e3 ^ r5;
        }
        t2.ft_1 = function(t3, e3, i2, o2) {
          return 0 === t3 ? r4(e3, i2, o2) : 1 === t3 || 3 === t3 ? A2(e3, i2, o2) : 2 === t3 ? n2(e3, i2, o2) : void 0;
        }, t2.ch32 = r4, t2.maj32 = n2, t2.p32 = A2, t2.s0_256 = function(t3) {
          return e2(t3, 2) ^ e2(t3, 13) ^ e2(t3, 22);
        }, t2.s1_256 = function(t3) {
          return e2(t3, 6) ^ e2(t3, 11) ^ e2(t3, 25);
        }, t2.g0_256 = function(t3) {
          return e2(t3, 7) ^ e2(t3, 18) ^ t3 >>> 3;
        }, t2.g1_256 = function(t3) {
          return e2(t3, 17) ^ e2(t3, 19) ^ t3 >>> 10;
        };
      } });
      var fl = rl({ "node_modules/hash.js/lib/hash/sha/1.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = ul(), A2 = ll(), i2 = r4.rotl32, o2 = r4.sum32, s2 = r4.sum32_5, a2 = A2.ft_1, c2 = n2.BlockHash, h2 = [1518500249, 1859775393, 2400959708, 3395469782];
        function g2() {
          if (!(this instanceof g2))
            return new g2();
          c2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
        }
        r4.inherits(g2, c2), e2.exports = g2, g2.blockSize = 512, g2.outSize = 160, g2.hmacStrength = 80, g2.padLength = 64, g2.prototype._update = function(t3, e3) {
          for (var r5 = this.W, n3 = 0; n3 < 16; n3++)
            r5[n3] = t3[e3 + n3];
          for (; n3 < r5.length; n3++)
            r5[n3] = i2(r5[n3 - 3] ^ r5[n3 - 8] ^ r5[n3 - 14] ^ r5[n3 - 16], 1);
          var A3 = this.h[0], c3 = this.h[1], g3 = this.h[2], u2 = this.h[3], l2 = this.h[4];
          for (n3 = 0; n3 < r5.length; n3++) {
            var f2 = ~~(n3 / 20), p2 = s2(i2(A3, 5), a2(f2, c3, g3, u2), l2, r5[n3], h2[f2]);
            l2 = u2, u2 = g3, g3 = i2(c3, 30), c3 = A3, A3 = p2;
          }
          this.h[0] = o2(this.h[0], A3), this.h[1] = o2(this.h[1], c3), this.h[2] = o2(this.h[2], g3), this.h[3] = o2(this.h[3], u2), this.h[4] = o2(this.h[4], l2);
        }, g2.prototype._digest = function(t3) {
          return "hex" === t3 ? r4.toHex32(this.h, "big") : r4.split32(this.h, "big");
        };
      } });
      var pl = rl({ "node_modules/hash.js/lib/hash/sha/256.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = ul(), A2 = ll(), i2 = cl(), o2 = r4.sum32, s2 = r4.sum32_4, a2 = r4.sum32_5, c2 = A2.ch32, h2 = A2.maj32, g2 = A2.s0_256, u2 = A2.s1_256, l2 = A2.g0_256, f2 = A2.g1_256, p2 = n2.BlockHash, d2 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
        function I2() {
          if (!(this instanceof I2))
            return new I2();
          p2.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = d2, this.W = new Array(64);
        }
        r4.inherits(I2, p2), e2.exports = I2, I2.blockSize = 512, I2.outSize = 256, I2.hmacStrength = 192, I2.padLength = 64, I2.prototype._update = function(t3, e3) {
          for (var r5 = this.W, n3 = 0; n3 < 16; n3++)
            r5[n3] = t3[e3 + n3];
          for (; n3 < r5.length; n3++)
            r5[n3] = s2(f2(r5[n3 - 2]), r5[n3 - 7], l2(r5[n3 - 15]), r5[n3 - 16]);
          var A3 = this.h[0], p3 = this.h[1], d3 = this.h[2], I3 = this.h[3], y2 = this.h[4], C2 = this.h[5], m2 = this.h[6], B2 = this.h[7];
          for (i2(this.k.length === r5.length), n3 = 0; n3 < r5.length; n3++) {
            var E2 = a2(B2, u2(y2), c2(y2, C2, m2), this.k[n3], r5[n3]), w2 = o2(g2(A3), h2(A3, p3, d3));
            B2 = m2, m2 = C2, C2 = y2, y2 = o2(I3, E2), I3 = d3, d3 = p3, p3 = A3, A3 = o2(E2, w2);
          }
          this.h[0] = o2(this.h[0], A3), this.h[1] = o2(this.h[1], p3), this.h[2] = o2(this.h[2], d3), this.h[3] = o2(this.h[3], I3), this.h[4] = o2(this.h[4], y2), this.h[5] = o2(this.h[5], C2), this.h[6] = o2(this.h[6], m2), this.h[7] = o2(this.h[7], B2);
        }, I2.prototype._digest = function(t3) {
          return "hex" === t3 ? r4.toHex32(this.h, "big") : r4.split32(this.h, "big");
        };
      } });
      var dl = rl({ "node_modules/hash.js/lib/hash/sha/224.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = pl();
        function A2() {
          if (!(this instanceof A2))
            return new A2();
          n2.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
        }
        r4.inherits(A2, n2), e2.exports = A2, A2.blockSize = 512, A2.outSize = 224, A2.hmacStrength = 192, A2.padLength = 64, A2.prototype._digest = function(t3) {
          return "hex" === t3 ? r4.toHex32(this.h.slice(0, 7), "big") : r4.split32(this.h.slice(0, 7), "big");
        };
      } });
      var Il = rl({ "node_modules/hash.js/lib/hash/sha/512.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = ul(), A2 = cl(), i2 = r4.rotr64_hi, o2 = r4.rotr64_lo, s2 = r4.shr64_hi, a2 = r4.shr64_lo, c2 = r4.sum64, h2 = r4.sum64_hi, g2 = r4.sum64_lo, u2 = r4.sum64_4_hi, l2 = r4.sum64_4_lo, f2 = r4.sum64_5_hi, p2 = r4.sum64_5_lo, d2 = n2.BlockHash, I2 = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
        function y2() {
          if (!(this instanceof y2))
            return new y2();
          d2.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = I2, this.W = new Array(160);
        }
        function C2(t3, e3, r5, n3, A3) {
          var i3 = t3 & r5 ^ ~t3 & A3;
          return i3 < 0 && (i3 += 4294967296), i3;
        }
        function m2(t3, e3, r5, n3, A3, i3) {
          var o3 = e3 & n3 ^ ~e3 & i3;
          return o3 < 0 && (o3 += 4294967296), o3;
        }
        function B2(t3, e3, r5, n3, A3) {
          var i3 = t3 & r5 ^ t3 & A3 ^ r5 & A3;
          return i3 < 0 && (i3 += 4294967296), i3;
        }
        function E2(t3, e3, r5, n3, A3, i3) {
          var o3 = e3 & n3 ^ e3 & i3 ^ n3 & i3;
          return o3 < 0 && (o3 += 4294967296), o3;
        }
        function w2(t3, e3) {
          var r5 = i2(t3, e3, 28) ^ i2(e3, t3, 2) ^ i2(e3, t3, 7);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function v2(t3, e3) {
          var r5 = o2(t3, e3, 28) ^ o2(e3, t3, 2) ^ o2(e3, t3, 7);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function _2(t3, e3) {
          var r5 = i2(t3, e3, 14) ^ i2(t3, e3, 18) ^ i2(e3, t3, 9);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function Q2(t3, e3) {
          var r5 = o2(t3, e3, 14) ^ o2(t3, e3, 18) ^ o2(e3, t3, 9);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function b2(t3, e3) {
          var r5 = i2(t3, e3, 1) ^ i2(t3, e3, 8) ^ s2(t3, e3, 7);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function k2(t3, e3) {
          var r5 = o2(t3, e3, 1) ^ o2(t3, e3, 8) ^ a2(t3, e3, 7);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function D2(t3, e3) {
          var r5 = i2(t3, e3, 19) ^ i2(e3, t3, 29) ^ s2(t3, e3, 6);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        function S2(t3, e3) {
          var r5 = o2(t3, e3, 19) ^ o2(e3, t3, 29) ^ a2(t3, e3, 6);
          return r5 < 0 && (r5 += 4294967296), r5;
        }
        r4.inherits(y2, d2), e2.exports = y2, y2.blockSize = 1024, y2.outSize = 512, y2.hmacStrength = 192, y2.padLength = 128, y2.prototype._prepareBlock = function(t3, e3) {
          for (var r5 = this.W, n3 = 0; n3 < 32; n3++)
            r5[n3] = t3[e3 + n3];
          for (; n3 < r5.length; n3 += 2) {
            var A3 = D2(r5[n3 - 4], r5[n3 - 3]), i3 = S2(r5[n3 - 4], r5[n3 - 3]), o3 = r5[n3 - 14], s3 = r5[n3 - 13], a3 = b2(r5[n3 - 30], r5[n3 - 29]), c3 = k2(r5[n3 - 30], r5[n3 - 29]), h3 = r5[n3 - 32], g3 = r5[n3 - 31];
            r5[n3] = u2(A3, i3, o3, s3, a3, c3, h3, g3), r5[n3 + 1] = l2(A3, i3, o3, s3, a3, c3, h3, g3);
          }
        }, y2.prototype._update = function(t3, e3) {
          this._prepareBlock(t3, e3);
          var r5 = this.W, n3 = this.h[0], i3 = this.h[1], o3 = this.h[2], s3 = this.h[3], a3 = this.h[4], u3 = this.h[5], l3 = this.h[6], d3 = this.h[7], I3 = this.h[8], y3 = this.h[9], b3 = this.h[10], k3 = this.h[11], D3 = this.h[12], S3 = this.h[13], N3 = this.h[14], M2 = this.h[15];
          A2(this.k.length === r5.length);
          for (var x2 = 0; x2 < r5.length; x2 += 2) {
            var F2 = N3, P2 = M2, T2 = _2(I3, y3), R2 = Q2(I3, y3), U2 = C2(I3, y3, b3, k3, D3), G2 = m2(I3, y3, b3, k3, D3, S3), H2 = this.k[x2], L2 = this.k[x2 + 1], O2 = r5[x2], Y2 = r5[x2 + 1], K2 = f2(F2, P2, T2, R2, U2, G2, H2, L2, O2, Y2), J2 = p2(F2, P2, T2, R2, U2, G2, H2, L2, O2, Y2);
            F2 = w2(n3, i3), P2 = v2(n3, i3), T2 = B2(n3, i3, o3, s3, a3), R2 = E2(n3, i3, o3, s3, a3, u3);
            var j2 = h2(F2, P2, T2, R2), z2 = g2(F2, P2, T2, R2);
            N3 = D3, M2 = S3, D3 = b3, S3 = k3, b3 = I3, k3 = y3, I3 = h2(l3, d3, K2, J2), y3 = g2(d3, d3, K2, J2), l3 = a3, d3 = u3, a3 = o3, u3 = s3, o3 = n3, s3 = i3, n3 = h2(K2, J2, j2, z2), i3 = g2(K2, J2, j2, z2);
          }
          c2(this.h, 0, n3, i3), c2(this.h, 2, o3, s3), c2(this.h, 4, a3, u3), c2(this.h, 6, l3, d3), c2(this.h, 8, I3, y3), c2(this.h, 10, b3, k3), c2(this.h, 12, D3, S3), c2(this.h, 14, N3, M2);
        }, y2.prototype._digest = function(t3) {
          return "hex" === t3 ? r4.toHex32(this.h, "big") : r4.split32(this.h, "big");
        };
      } });
      var yl = rl({ "node_modules/hash.js/lib/hash/sha/384.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = Il();
        function A2() {
          if (!(this instanceof A2))
            return new A2();
          n2.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
        }
        r4.inherits(A2, n2), e2.exports = A2, A2.blockSize = 1024, A2.outSize = 384, A2.hmacStrength = 192, A2.padLength = 128, A2.prototype._digest = function(t3) {
          return "hex" === t3 ? r4.toHex32(this.h.slice(0, 12), "big") : r4.split32(this.h.slice(0, 12), "big");
        };
      } });
      var Cl = rl({ "node_modules/hash.js/lib/hash/sha.js"(t2) {
        Al(), il(), t2.sha1 = fl(), t2.sha224 = dl(), t2.sha256 = pl(), t2.sha384 = yl(), t2.sha512 = Il();
      } });
      var ml = rl({ "node_modules/hash.js/lib/hash/ripemd.js"(t2) {
        Al(), il();
        var e2 = gl(), r4 = ul(), n2 = e2.rotl32, A2 = e2.sum32, i2 = e2.sum32_3, o2 = e2.sum32_4, s2 = r4.BlockHash;
        function a2() {
          if (!(this instanceof a2))
            return new a2();
          s2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
        }
        function c2(t3, e3, r5, n3) {
          return t3 <= 15 ? e3 ^ r5 ^ n3 : t3 <= 31 ? e3 & r5 | ~e3 & n3 : t3 <= 47 ? (e3 | ~r5) ^ n3 : t3 <= 63 ? e3 & n3 | r5 & ~n3 : e3 ^ (r5 | ~n3);
        }
        function h2(t3) {
          return t3 <= 15 ? 0 : t3 <= 31 ? 1518500249 : t3 <= 47 ? 1859775393 : t3 <= 63 ? 2400959708 : 2840853838;
        }
        function g2(t3) {
          return t3 <= 15 ? 1352829926 : t3 <= 31 ? 1548603684 : t3 <= 47 ? 1836072691 : t3 <= 63 ? 2053994217 : 0;
        }
        e2.inherits(a2, s2), t2.ripemd160 = a2, a2.blockSize = 512, a2.outSize = 160, a2.hmacStrength = 192, a2.padLength = 64, a2.prototype._update = function(t3, e3) {
          for (var r5 = this.h[0], s3 = this.h[1], a3 = this.h[2], d2 = this.h[3], I2 = this.h[4], y2 = r5, C2 = s3, m2 = a3, B2 = d2, E2 = I2, w2 = 0; w2 < 80; w2++) {
            var v2 = A2(n2(o2(r5, c2(w2, s3, a3, d2), t3[u2[w2] + e3], h2(w2)), f2[w2]), I2);
            r5 = I2, I2 = d2, d2 = n2(a3, 10), a3 = s3, s3 = v2, v2 = A2(n2(o2(y2, c2(79 - w2, C2, m2, B2), t3[l2[w2] + e3], g2(w2)), p2[w2]), E2), y2 = E2, E2 = B2, B2 = n2(m2, 10), m2 = C2, C2 = v2;
          }
          v2 = i2(this.h[1], a3, B2), this.h[1] = i2(this.h[2], d2, E2), this.h[2] = i2(this.h[3], I2, y2), this.h[3] = i2(this.h[4], r5, C2), this.h[4] = i2(this.h[0], s3, m2), this.h[0] = v2;
        }, a2.prototype._digest = function(t3) {
          return "hex" === t3 ? e2.toHex32(this.h, "little") : e2.split32(this.h, "little");
        };
        var u2 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], l2 = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], f2 = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], p2 = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
      } });
      var Bl = rl({ "node_modules/hash.js/lib/hash/hmac.js"(t2, e2) {
        Al(), il();
        var r4 = gl(), n2 = cl();
        function A2(t3, e3, n3) {
          if (!(this instanceof A2))
            return new A2(t3, e3, n3);
          this.Hash = t3, this.blockSize = t3.blockSize / 8, this.outSize = t3.outSize / 8, this.inner = null, this.outer = null, this._init(r4.toArray(e3, n3));
        }
        e2.exports = A2, A2.prototype._init = function(t3) {
          t3.length > this.blockSize && (t3 = new this.Hash().update(t3).digest()), n2(t3.length <= this.blockSize);
          for (var e3 = t3.length; e3 < this.blockSize; e3++)
            t3.push(0);
          for (e3 = 0; e3 < t3.length; e3++)
            t3[e3] ^= 54;
          for (this.inner = new this.Hash().update(t3), e3 = 0; e3 < t3.length; e3++)
            t3[e3] ^= 106;
          this.outer = new this.Hash().update(t3);
        }, A2.prototype.update = function(t3, e3) {
          return this.inner.update(t3, e3), this;
        }, A2.prototype.digest = function(t3) {
          return this.outer.update(this.inner.digest()), this.outer.digest(t3);
        };
      } });
      var El = rl({ "node_modules/hash.js/lib/hash.js"(t2) {
        Al(), il();
        var e2 = t2;
        e2.utils = gl(), e2.common = ul(), e2.sha = Cl(), e2.ripemd = ml(), e2.hmac = Bl(), e2.sha1 = e2.sha.sha1, e2.sha256 = e2.sha.sha256, e2.sha224 = e2.sha.sha224, e2.sha384 = e2.sha.sha384, e2.sha512 = e2.sha.sha512, e2.ripemd160 = e2.ripemd.ripemd160;
      } });
      var wl = rl({ "node_modules/bech32/index.js"(t2, e2) {
        Al(), il();
        var r4, n2, A2 = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", i2 = {};
        for (n2 = 0; n2 < 32; n2++) {
          if (r4 = A2.charAt(n2), void 0 !== i2[r4])
            throw new TypeError(r4 + " is ambiguous");
          i2[r4] = n2;
        }
        function o2(t3) {
          var e3 = t3 >> 25;
          return (33554431 & t3) << 5 ^ 996825010 & -(1 & e3) ^ 642813549 & -(e3 >> 1 & 1) ^ 513874426 & -(e3 >> 2 & 1) ^ 1027748829 & -(e3 >> 3 & 1) ^ 705979059 & -(e3 >> 4 & 1);
        }
        function s2(t3) {
          for (var e3 = 1, r5 = 0; r5 < t3.length; ++r5) {
            var n3 = t3.charCodeAt(r5);
            if (n3 < 33 || n3 > 126)
              return "Invalid prefix (" + t3 + ")";
            e3 = o2(e3) ^ n3 >> 5;
          }
          for (e3 = o2(e3), r5 = 0; r5 < t3.length; ++r5) {
            var A3 = t3.charCodeAt(r5);
            e3 = o2(e3) ^ 31 & A3;
          }
          return e3;
        }
        function a2(t3, e3) {
          if (e3 = e3 || 90, t3.length < 8)
            return t3 + " too short";
          if (t3.length > e3)
            return "Exceeds length limit";
          var r5 = t3.toLowerCase(), n3 = t3.toUpperCase();
          if (t3 !== r5 && t3 !== n3)
            return "Mixed-case string " + t3;
          var A3 = (t3 = r5).lastIndexOf("1");
          if (-1 === A3)
            return "No separator character for " + t3;
          if (0 === A3)
            return "Missing prefix for " + t3;
          var a3 = t3.slice(0, A3), c3 = t3.slice(A3 + 1);
          if (c3.length < 6)
            return "Data too short";
          var h2 = s2(a3);
          if ("string" == typeof h2)
            return h2;
          for (var g2 = [], u2 = 0; u2 < c3.length; ++u2) {
            var l2 = c3.charAt(u2), f2 = i2[l2];
            if (void 0 === f2)
              return "Unknown character " + l2;
            h2 = o2(h2) ^ f2, u2 + 6 >= c3.length || g2.push(f2);
          }
          return 1 !== h2 ? "Invalid checksum for " + t3 : { prefix: a3, words: g2 };
        }
        function c2(t3, e3, r5, n3) {
          for (var A3 = 0, i3 = 0, o3 = (1 << r5) - 1, s3 = [], a3 = 0; a3 < t3.length; ++a3)
            for (A3 = A3 << e3 | t3[a3], i3 += e3; i3 >= r5; )
              i3 -= r5, s3.push(A3 >> i3 & o3);
          if (n3)
            i3 > 0 && s3.push(A3 << r5 - i3 & o3);
          else {
            if (i3 >= e3)
              return "Excess padding";
            if (A3 << r5 - i3 & o3)
              return "Non-zero padding";
          }
          return s3;
        }
        e2.exports = { decodeUnsafe: function() {
          var t3 = a2.apply(null, arguments);
          if ("object" == typeof t3)
            return t3;
        }, decode: function(t3) {
          var e3 = a2.apply(null, arguments);
          if ("object" == typeof e3)
            return e3;
          throw new Error(e3);
        }, encode: function(t3, e3, r5) {
          if (r5 = r5 || 90, t3.length + 7 + e3.length > r5)
            throw new TypeError("Exceeds length limit");
          var n3 = s2(t3 = t3.toLowerCase());
          if ("string" == typeof n3)
            throw new Error(n3);
          for (var i3 = t3 + "1", a3 = 0; a3 < e3.length; ++a3) {
            var c3 = e3[a3];
            if (c3 >> 5)
              throw new Error("Non 5-bit word");
            n3 = o2(n3) ^ c3, i3 += A2.charAt(c3);
          }
          for (a3 = 0; a3 < 6; ++a3)
            n3 = o2(n3);
          for (n3 ^= 1, a3 = 0; a3 < 6; ++a3) {
            i3 += A2.charAt(n3 >> 5 * (5 - a3) & 31);
          }
          return i3;
        }, toWordsUnsafe: function(t3) {
          var e3 = c2(t3, 8, 5, true);
          if (Array.isArray(e3))
            return e3;
        }, toWords: function(t3) {
          var e3 = c2(t3, 8, 5, true);
          if (Array.isArray(e3))
            return e3;
          throw new Error(e3);
        }, fromWordsUnsafe: function(t3) {
          var e3 = c2(t3, 5, 8, false);
          if (Array.isArray(e3))
            return e3;
        }, fromWords: function(t3) {
          var e3 = c2(t3, 5, 8, false);
          if (Array.isArray(e3))
            return e3;
          throw new Error(e3);
        } };
      } });
      Al(), il(), Al(), il();
      var vl = Object.fromEntries(Object.entries(zu).map(([t2, e2]) => {
        const r4 = parseInt(t2);
        return [e2.charAt(0).toUpperCase() + e2.slice(1), r4];
      }));
      var _l = Object.fromEntries(Object.entries(vl).map(([t2, e2]) => [e2, t2.charAt(0).toUpperCase() + t2.slice(1)]));
      var Ql = Object.fromEntries(Object.entries(vl).map(([, t2]) => [t2, qu[t2] || []]));
      vl.Mainnet, vl.Gnosis, vl.Mainnet, vl.Goerli, vl.Gnosis, vl.Anvil, vl.Mainnet, vl.Goerli, vl.Gnosis, vl.Anvil, Al(), il(), Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var bl = nl(sl());
      Al(), il(), Al(), il(), Al(), il();
      var kl = false;
      var Dl = false;
      var Sl = { debug: 1, default: 2, info: 2, warning: 3, error: 4, off: 5 };
      var Nl = Sl.default;
      var Ml = null;
      var xl;
      var Fl;
      var Pl;
      var Tl;
      var Rl = function() {
        try {
          const t2 = [];
          if (["NFD", "NFC", "NFKD", "NFKC"].forEach((e2) => {
            try {
              if ("test" !== "test".normalize(e2))
                throw new Error("bad normalize");
            } catch (r4) {
              t2.push(e2);
            }
          }), t2.length)
            throw new Error("missing " + t2.join(", "));
          if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769))
            throw new Error("broken implementation");
        } catch (t2) {
          return t2.message;
        }
        return null;
      }();
      (Fl = xl || (xl = {})).DEBUG = "DEBUG", Fl.INFO = "INFO", Fl.WARNING = "WARNING", Fl.ERROR = "ERROR", Fl.OFF = "OFF", (Tl = Pl || (Pl = {})).UNKNOWN_ERROR = "UNKNOWN_ERROR", Tl.NOT_IMPLEMENTED = "NOT_IMPLEMENTED", Tl.UNSUPPORTED_OPERATION = "UNSUPPORTED_OPERATION", Tl.NETWORK_ERROR = "NETWORK_ERROR", Tl.SERVER_ERROR = "SERVER_ERROR", Tl.TIMEOUT = "TIMEOUT", Tl.BUFFER_OVERRUN = "BUFFER_OVERRUN", Tl.NUMERIC_FAULT = "NUMERIC_FAULT", Tl.MISSING_NEW = "MISSING_NEW", Tl.INVALID_ARGUMENT = "INVALID_ARGUMENT", Tl.MISSING_ARGUMENT = "MISSING_ARGUMENT", Tl.UNEXPECTED_ARGUMENT = "UNEXPECTED_ARGUMENT", Tl.CALL_EXCEPTION = "CALL_EXCEPTION", Tl.INSUFFICIENT_FUNDS = "INSUFFICIENT_FUNDS", Tl.NONCE_EXPIRED = "NONCE_EXPIRED", Tl.REPLACEMENT_UNDERPRICED = "REPLACEMENT_UNDERPRICED", Tl.UNPREDICTABLE_GAS_LIMIT = "UNPREDICTABLE_GAS_LIMIT", Tl.TRANSACTION_REPLACED = "TRANSACTION_REPLACED", Tl.ACTION_REJECTED = "ACTION_REJECTED";
      var Ul = "0123456789abcdef";
      var Gl = class t2 {
        constructor(t3) {
          Object.defineProperty(this, "version", { enumerable: true, value: t3, writable: false });
        }
        _log(t3, e2) {
          const r4 = t3.toLowerCase();
          null == Sl[r4] && this.throwArgumentError("invalid log level name", "logLevel", t3), Nl > Sl[r4] || console.log.apply(console, e2);
        }
        debug(...e2) {
          this._log(t2.levels.DEBUG, e2);
        }
        info(...e2) {
          this._log(t2.levels.INFO, e2);
        }
        warn(...e2) {
          this._log(t2.levels.WARNING, e2);
        }
        makeError(e2, r4, n2) {
          if (Dl)
            return this.makeError("censored error", r4, {});
          r4 || (r4 = t2.errors.UNKNOWN_ERROR), n2 || (n2 = {});
          const A2 = [];
          Object.keys(n2).forEach((t3) => {
            const e3 = n2[t3];
            try {
              if (e3 instanceof Uint8Array) {
                let r5 = "";
                for (let t4 = 0; t4 < e3.length; t4++)
                  r5 += Ul[e3[t4] >> 4], r5 += Ul[15 & e3[t4]];
                A2.push(t3 + "=Uint8Array(0x" + r5 + ")");
              } else
                A2.push(t3 + "=" + JSON.stringify(e3));
            } catch (e4) {
              A2.push(t3 + "=" + JSON.stringify(n2[t3].toString()));
            }
          }), A2.push(`code=${r4}`), A2.push(`version=${this.version}`);
          const i2 = e2;
          let o2 = "";
          switch (r4) {
            case Pl.NUMERIC_FAULT: {
              o2 = "NUMERIC_FAULT";
              const t3 = e2;
              switch (t3) {
                case "overflow":
                case "underflow":
                case "division-by-zero":
                  o2 += "-" + t3;
                  break;
                case "negative-power":
                case "negative-width":
                  o2 += "-unsupported";
                  break;
                case "unbound-bitwise-result":
                  o2 += "-unbound-result";
              }
              break;
            }
            case Pl.CALL_EXCEPTION:
            case Pl.INSUFFICIENT_FUNDS:
            case Pl.MISSING_NEW:
            case Pl.NONCE_EXPIRED:
            case Pl.REPLACEMENT_UNDERPRICED:
            case Pl.TRANSACTION_REPLACED:
            case Pl.UNPREDICTABLE_GAS_LIMIT:
              o2 = r4;
          }
          o2 && (e2 += " [ See: https://links.ethers.org/v5-errors-" + o2 + " ]"), A2.length && (e2 += " (" + A2.join(", ") + ")");
          const s2 = new Error(e2);
          return s2.reason = i2, s2.code = r4, Object.keys(n2).forEach(function(t3) {
            s2[t3] = n2[t3];
          }), s2;
        }
        throwError(t3, e2, r4) {
          throw this.makeError(t3, e2, r4);
        }
        throwArgumentError(e2, r4, n2) {
          return this.throwError(e2, t2.errors.INVALID_ARGUMENT, { argument: r4, value: n2 });
        }
        assert(t3, e2, r4, n2) {
          t3 || this.throwError(e2, r4, n2);
        }
        assertArgument(t3, e2, r4, n2) {
          t3 || this.throwArgumentError(e2, r4, n2);
        }
        checkNormalize(e2) {
          Rl && this.throwError("platform missing String.prototype.normalize", t2.errors.UNSUPPORTED_OPERATION, { operation: "String.prototype.normalize", form: Rl });
        }
        checkSafeUint53(e2, r4) {
          "number" == typeof e2 && (null == r4 && (r4 = "value not safe"), (e2 < 0 || e2 >= 9007199254740991) && this.throwError(r4, t2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "out-of-safe-range", value: e2 }), e2 % 1 && this.throwError(r4, t2.errors.NUMERIC_FAULT, { operation: "checkSafeInteger", fault: "non-integer", value: e2 }));
        }
        checkArgumentCount(e2, r4, n2) {
          n2 = n2 ? ": " + n2 : "", e2 < r4 && this.throwError("missing argument" + n2, t2.errors.MISSING_ARGUMENT, { count: e2, expectedCount: r4 }), e2 > r4 && this.throwError("too many arguments" + n2, t2.errors.UNEXPECTED_ARGUMENT, { count: e2, expectedCount: r4 });
        }
        checkNew(e2, r4) {
          e2 !== Object && null != e2 || this.throwError("missing new", t2.errors.MISSING_NEW, { name: r4.name });
        }
        checkAbstract(e2, r4) {
          e2 === r4 ? this.throwError("cannot instantiate abstract class " + JSON.stringify(r4.name) + " directly; use a sub-class", t2.errors.UNSUPPORTED_OPERATION, { name: e2.name, operation: "new" }) : e2 !== Object && null != e2 || this.throwError("missing new", t2.errors.MISSING_NEW, { name: r4.name });
        }
        static globalLogger() {
          return Ml || (Ml = new t2("logger/5.7.0")), Ml;
        }
        static setCensorship(e2, r4) {
          if (!e2 && r4 && this.globalLogger().throwError("cannot permanently disable censorship", t2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" }), kl) {
            if (!e2)
              return;
            this.globalLogger().throwError("error censorship permanent", t2.errors.UNSUPPORTED_OPERATION, { operation: "setCensorship" });
          }
          Dl = !!e2, kl = !!r4;
        }
        static setLogLevel(e2) {
          const r4 = Sl[e2.toLowerCase()];
          null != r4 ? Nl = r4 : t2.globalLogger().warn("invalid log level - " + e2);
        }
        static from(e2) {
          return new t2(e2);
        }
      };
      Gl.errors = Pl, Gl.levels = xl, Al(), il();
      var Hl = new Gl("bytes/5.7.0");
      function Ll(t2) {
        return !!t2.toHexString;
      }
      function Ol(t2) {
        return t2.slice || (t2.slice = function() {
          const e2 = Array.prototype.slice.call(arguments);
          return Ol(new Uint8Array(Array.prototype.slice.apply(t2, e2)));
        }), t2;
      }
      function Yl(t2) {
        return Xl(t2) && !(t2.length % 2) || Jl(t2);
      }
      function Kl(t2) {
        return "number" == typeof t2 && t2 == t2 && t2 % 1 == 0;
      }
      function Jl(t2) {
        if (null == t2)
          return false;
        if (t2.constructor === Uint8Array)
          return true;
        if ("string" == typeof t2)
          return false;
        if (!Kl(t2.length) || t2.length < 0)
          return false;
        for (let e2 = 0; e2 < t2.length; e2++) {
          const r4 = t2[e2];
          if (!Kl(r4) || r4 < 0 || r4 >= 256)
            return false;
        }
        return true;
      }
      function jl(t2, e2) {
        if (e2 || (e2 = {}), "number" == typeof t2) {
          Hl.checkSafeUint53(t2, "invalid arrayify value");
          const e3 = [];
          for (; t2; )
            e3.unshift(255 & t2), t2 = parseInt(String(t2 / 256));
          return 0 === e3.length && e3.push(0), Ol(new Uint8Array(e3));
        }
        if (e2.allowMissingPrefix && "string" == typeof t2 && "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), Ll(t2) && (t2 = t2.toHexString()), Xl(t2)) {
          let r4 = t2.substring(2);
          r4.length % 2 && ("left" === e2.hexPad ? r4 = "0" + r4 : "right" === e2.hexPad ? r4 += "0" : Hl.throwArgumentError("hex data is odd-length", "value", t2));
          const n2 = [];
          for (let t3 = 0; t3 < r4.length; t3 += 2)
            n2.push(parseInt(r4.substring(t3, t3 + 2), 16));
          return Ol(new Uint8Array(n2));
        }
        return Jl(t2) ? Ol(new Uint8Array(t2)) : Hl.throwArgumentError("invalid arrayify value", "value", t2);
      }
      function zl(t2) {
        const e2 = t2.map((t3) => jl(t3)), r4 = e2.reduce((t3, e3) => t3 + e3.length, 0), n2 = new Uint8Array(r4);
        return e2.reduce((t3, e3) => (n2.set(e3, t3), t3 + e3.length), 0), Ol(n2);
      }
      function ql(t2) {
        let e2 = jl(t2);
        if (0 === e2.length)
          return e2;
        let r4 = 0;
        for (; r4 < e2.length && 0 === e2[r4]; )
          r4++;
        return r4 && (e2 = e2.slice(r4)), e2;
      }
      function Xl(t2, e2) {
        return !("string" != typeof t2 || !t2.match(/^0x[0-9A-Fa-f]*$/)) && (!e2 || t2.length === 2 + 2 * e2);
      }
      var Vl = "0123456789abcdef";
      function Wl(t2, e2) {
        if (e2 || (e2 = {}), "number" == typeof t2) {
          Hl.checkSafeUint53(t2, "invalid hexlify value");
          let e3 = "";
          for (; t2; )
            e3 = Vl[15 & t2] + e3, t2 = Math.floor(t2 / 16);
          return e3.length ? (e3.length % 2 && (e3 = "0" + e3), "0x" + e3) : "0x00";
        }
        if ("bigint" == typeof t2)
          return (t2 = t2.toString(16)).length % 2 ? "0x0" + t2 : "0x" + t2;
        if (e2.allowMissingPrefix && "string" == typeof t2 && "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), Ll(t2))
          return t2.toHexString();
        if (Xl(t2))
          return t2.length % 2 && ("left" === e2.hexPad ? t2 = "0x0" + t2.substring(2) : "right" === e2.hexPad ? t2 += "0" : Hl.throwArgumentError("hex data is odd-length", "value", t2)), t2.toLowerCase();
        if (Jl(t2)) {
          let e3 = "0x";
          for (let r4 = 0; r4 < t2.length; r4++) {
            let n2 = t2[r4];
            e3 += Vl[(240 & n2) >> 4] + Vl[15 & n2];
          }
          return e3;
        }
        return Hl.throwArgumentError("invalid hexlify value", "value", t2);
      }
      function Zl(t2) {
        if ("string" != typeof t2)
          t2 = Wl(t2);
        else if (!Xl(t2) || t2.length % 2)
          return null;
        return (t2.length - 2) / 2;
      }
      function $l(t2, e2, r4) {
        return "string" != typeof t2 ? t2 = Wl(t2) : (!Xl(t2) || t2.length % 2) && Hl.throwArgumentError("invalid hexData", "value", t2), e2 = 2 + 2 * e2, null != r4 ? "0x" + t2.substring(e2, 2 + 2 * r4) : "0x" + t2.substring(e2);
      }
      function tf(t2) {
        let e2 = "0x";
        return t2.forEach((t3) => {
          e2 += Wl(t3).substring(2);
        }), e2;
      }
      function ef(t2) {
        const e2 = function(t3) {
          "string" != typeof t3 && (t3 = Wl(t3));
          Xl(t3) || Hl.throwArgumentError("invalid hex string", "value", t3);
          t3 = t3.substring(2);
          let e3 = 0;
          for (; e3 < t3.length && "0" === t3[e3]; )
            e3++;
          return "0x" + t3.substring(e3);
        }(Wl(t2, { hexPad: "left" }));
        return "0x" === e2 ? "0x0" : e2;
      }
      function rf(t2, e2) {
        for ("string" != typeof t2 ? t2 = Wl(t2) : Xl(t2) || Hl.throwArgumentError("invalid hex string", "value", t2), t2.length > 2 * e2 + 2 && Hl.throwArgumentError("value out of range", "value", arguments[1]); t2.length < 2 * e2 + 2; )
          t2 = "0x0" + t2.substring(2);
        return t2;
      }
      function nf(t2) {
        const e2 = { r: "0x", s: "0x", _vs: "0x", recoveryParam: 0, v: 0, yParityAndS: "0x", compact: "0x" };
        if (Yl(t2)) {
          let r4 = jl(t2);
          64 === r4.length ? (e2.v = 27 + (r4[32] >> 7), r4[32] &= 127, e2.r = Wl(r4.slice(0, 32)), e2.s = Wl(r4.slice(32, 64))) : 65 === r4.length ? (e2.r = Wl(r4.slice(0, 32)), e2.s = Wl(r4.slice(32, 64)), e2.v = r4[64]) : Hl.throwArgumentError("invalid signature string", "signature", t2), e2.v < 27 && (0 === e2.v || 1 === e2.v ? e2.v += 27 : Hl.throwArgumentError("signature invalid v byte", "signature", t2)), e2.recoveryParam = 1 - e2.v % 2, e2.recoveryParam && (r4[32] |= 128), e2._vs = Wl(r4.slice(32, 64));
        } else {
          if (e2.r = t2.r, e2.s = t2.s, e2.v = t2.v, e2.recoveryParam = t2.recoveryParam, e2._vs = t2._vs, null != e2._vs) {
            const r5 = function(t3, e3) {
              (t3 = jl(t3)).length > e3 && Hl.throwArgumentError("value out of range", "value", arguments[0]);
              const r6 = new Uint8Array(e3);
              return r6.set(t3, e3 - t3.length), Ol(r6);
            }(jl(e2._vs), 32);
            e2._vs = Wl(r5);
            const n3 = r5[0] >= 128 ? 1 : 0;
            null == e2.recoveryParam ? e2.recoveryParam = n3 : e2.recoveryParam !== n3 && Hl.throwArgumentError("signature recoveryParam mismatch _vs", "signature", t2), r5[0] &= 127;
            const A2 = Wl(r5);
            null == e2.s ? e2.s = A2 : e2.s !== A2 && Hl.throwArgumentError("signature v mismatch _vs", "signature", t2);
          }
          if (null == e2.recoveryParam)
            null == e2.v ? Hl.throwArgumentError("signature missing v and recoveryParam", "signature", t2) : 0 === e2.v || 1 === e2.v ? e2.recoveryParam = e2.v : e2.recoveryParam = 1 - e2.v % 2;
          else if (null == e2.v)
            e2.v = 27 + e2.recoveryParam;
          else {
            const r5 = 0 === e2.v || 1 === e2.v ? e2.v : 1 - e2.v % 2;
            e2.recoveryParam !== r5 && Hl.throwArgumentError("signature recoveryParam mismatch v", "signature", t2);
          }
          null != e2.r && Xl(e2.r) ? e2.r = rf(e2.r, 32) : Hl.throwArgumentError("signature missing or invalid r", "signature", t2), null != e2.s && Xl(e2.s) ? e2.s = rf(e2.s, 32) : Hl.throwArgumentError("signature missing or invalid s", "signature", t2);
          const r4 = jl(e2.s);
          r4[0] >= 128 && Hl.throwArgumentError("signature s out of range", "signature", t2), e2.recoveryParam && (r4[0] |= 128);
          const n2 = Wl(r4);
          e2._vs && (Xl(e2._vs) || Hl.throwArgumentError("signature invalid _vs", "signature", t2), e2._vs = rf(e2._vs, 32)), null == e2._vs ? e2._vs = n2 : e2._vs !== n2 && Hl.throwArgumentError("signature _vs mismatch v and s", "signature", t2);
        }
        return e2.yParityAndS = e2._vs, e2.compact = e2.r + e2.yParityAndS.substring(2), e2;
      }
      Al(), il();
      var Af = bl.default.BN;
      var of = new Gl("bignumber/5.7.0");
      var sf = {};
      var af = 9007199254740991;
      var cf = false;
      var hf = class t2 {
        constructor(t3, e2) {
          t3 !== sf && of.throwError("cannot call constructor directly; use BigNumber.from", Gl.errors.UNSUPPORTED_OPERATION, { operation: "new (BigNumber)" }), this._hex = e2, this._isBigNumber = true, Object.freeze(this);
        }
        fromTwos(t3) {
          return uf(lf(this).fromTwos(t3));
        }
        toTwos(t3) {
          return uf(lf(this).toTwos(t3));
        }
        abs() {
          return "-" === this._hex[0] ? t2.from(this._hex.substring(1)) : this;
        }
        add(t3) {
          return uf(lf(this).add(lf(t3)));
        }
        sub(t3) {
          return uf(lf(this).sub(lf(t3)));
        }
        div(e2) {
          return t2.from(e2).isZero() && ff("division-by-zero", "div"), uf(lf(this).div(lf(e2)));
        }
        mul(t3) {
          return uf(lf(this).mul(lf(t3)));
        }
        mod(t3) {
          const e2 = lf(t3);
          return e2.isNeg() && ff("division-by-zero", "mod"), uf(lf(this).umod(e2));
        }
        pow(t3) {
          const e2 = lf(t3);
          return e2.isNeg() && ff("negative-power", "pow"), uf(lf(this).pow(e2));
        }
        and(t3) {
          const e2 = lf(t3);
          return (this.isNegative() || e2.isNeg()) && ff("unbound-bitwise-result", "and"), uf(lf(this).and(e2));
        }
        or(t3) {
          const e2 = lf(t3);
          return (this.isNegative() || e2.isNeg()) && ff("unbound-bitwise-result", "or"), uf(lf(this).or(e2));
        }
        xor(t3) {
          const e2 = lf(t3);
          return (this.isNegative() || e2.isNeg()) && ff("unbound-bitwise-result", "xor"), uf(lf(this).xor(e2));
        }
        mask(t3) {
          return (this.isNegative() || t3 < 0) && ff("negative-width", "mask"), uf(lf(this).maskn(t3));
        }
        shl(t3) {
          return (this.isNegative() || t3 < 0) && ff("negative-width", "shl"), uf(lf(this).shln(t3));
        }
        shr(t3) {
          return (this.isNegative() || t3 < 0) && ff("negative-width", "shr"), uf(lf(this).shrn(t3));
        }
        eq(t3) {
          return lf(this).eq(lf(t3));
        }
        lt(t3) {
          return lf(this).lt(lf(t3));
        }
        lte(t3) {
          return lf(this).lte(lf(t3));
        }
        gt(t3) {
          return lf(this).gt(lf(t3));
        }
        gte(t3) {
          return lf(this).gte(lf(t3));
        }
        isNegative() {
          return "-" === this._hex[0];
        }
        isZero() {
          return lf(this).isZero();
        }
        toNumber() {
          try {
            return lf(this).toNumber();
          } catch (t3) {
            ff("overflow", "toNumber", this.toString());
          }
          return null;
        }
        toBigInt() {
          try {
            return BigInt(this.toString());
          } catch (t3) {
          }
          return of.throwError("this platform does not support BigInt", Gl.errors.UNSUPPORTED_OPERATION, { value: this.toString() });
        }
        toString() {
          return arguments.length > 0 && (10 === arguments[0] ? cf || (cf = true, of.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")) : 16 === arguments[0] ? of.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Gl.errors.UNEXPECTED_ARGUMENT, {}) : of.throwError("BigNumber.toString does not accept parameters", Gl.errors.UNEXPECTED_ARGUMENT, {})), lf(this).toString(10);
        }
        toHexString() {
          return this._hex;
        }
        toJSON(t3) {
          return { type: "BigNumber", hex: this.toHexString() };
        }
        static from(e2) {
          if (e2 instanceof t2)
            return e2;
          if ("string" == typeof e2)
            return e2.match(/^-?0x[0-9a-f]+$/i) ? new t2(sf, gf(e2)) : e2.match(/^-?[0-9]+$/) ? new t2(sf, gf(new Af(e2))) : of.throwArgumentError("invalid BigNumber string", "value", e2);
          if ("number" == typeof e2)
            return e2 % 1 && ff("underflow", "BigNumber.from", e2), (e2 >= af || e2 <= -af) && ff("overflow", "BigNumber.from", e2), t2.from(String(e2));
          const r4 = e2;
          if ("bigint" == typeof r4)
            return t2.from(r4.toString());
          if (Jl(r4))
            return t2.from(Wl(r4));
          if (r4)
            if (r4.toHexString) {
              const e3 = r4.toHexString();
              if ("string" == typeof e3)
                return t2.from(e3);
            } else {
              let e3 = r4._hex;
              if (null == e3 && "BigNumber" === r4.type && (e3 = r4.hex), "string" == typeof e3 && (Xl(e3) || "-" === e3[0] && Xl(e3.substring(1))))
                return t2.from(e3);
            }
          return of.throwArgumentError("invalid BigNumber value", "value", e2);
        }
        static isBigNumber(t3) {
          return !(!t3 || !t3._isBigNumber);
        }
      };
      function gf(t2) {
        if ("string" != typeof t2)
          return gf(t2.toString(16));
        if ("-" === t2[0])
          return "-" === (t2 = t2.substring(1))[0] && of.throwArgumentError("invalid hex", "value", t2), "0x00" === (t2 = gf(t2)) ? t2 : "-" + t2;
        if ("0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), "0x" === t2)
          return "0x00";
        for (t2.length % 2 && (t2 = "0x0" + t2.substring(2)); t2.length > 4 && "0x00" === t2.substring(0, 4); )
          t2 = "0x" + t2.substring(4);
        return t2;
      }
      function uf(t2) {
        return hf.from(gf(t2));
      }
      function lf(t2) {
        const e2 = hf.from(t2).toHexString();
        return "-" === e2[0] ? new Af("-" + e2.substring(3), 16) : new Af(e2.substring(2), 16);
      }
      function ff(t2, e2, r4) {
        const n2 = { fault: t2, operation: e2 };
        return null != r4 && (n2.value = r4), of.throwError(t2, Gl.errors.NUMERIC_FAULT, n2);
      }
      Al(), il(), Al(), il();
      var pf = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var df = new Gl("properties/5.7.0");
      function If(t2, e2, r4) {
        Object.defineProperty(t2, e2, { enumerable: true, value: r4, writable: false });
      }
      function yf(t2, e2) {
        for (let r4 = 0; r4 < 32; r4++) {
          if (t2[e2])
            return t2[e2];
          if (!t2.prototype || "object" != typeof t2.prototype)
            break;
          t2 = Object.getPrototypeOf(t2.prototype).constructor;
        }
        return null;
      }
      function Cf(t2) {
        return pf(this, void 0, void 0, function* () {
          const e2 = Object.keys(t2).map((e3) => {
            const r4 = t2[e3];
            return Promise.resolve(r4).then((t3) => ({ key: e3, value: t3 }));
          });
          return (yield Promise.all(e2)).reduce((t3, e3) => (t3[e3.key] = e3.value, t3), {});
        });
      }
      function mf(t2) {
        const e2 = {};
        for (const r4 in t2)
          e2[r4] = t2[r4];
        return e2;
      }
      var Bf = { bigint: true, boolean: true, function: true, number: true, string: true };
      function Ef(t2) {
        if (null == t2 || Bf[typeof t2])
          return true;
        if (Array.isArray(t2) || "object" == typeof t2) {
          if (!Object.isFrozen(t2))
            return false;
          const e2 = Object.keys(t2);
          for (let r4 = 0; r4 < e2.length; r4++) {
            let n2 = null;
            try {
              n2 = t2[e2[r4]];
            } catch (t3) {
              continue;
            }
            if (!Ef(n2))
              return false;
          }
          return true;
        }
        return df.throwArgumentError("Cannot deepCopy " + typeof t2, "object", t2);
      }
      function wf(t2) {
        if (Ef(t2))
          return t2;
        if (Array.isArray(t2))
          return Object.freeze(t2.map((t3) => vf(t3)));
        if ("object" == typeof t2) {
          const e2 = {};
          for (const r4 in t2) {
            const n2 = t2[r4];
            void 0 !== n2 && If(e2, r4, vf(n2));
          }
          return e2;
        }
        return df.throwArgumentError("Cannot deepCopy " + typeof t2, "object", t2);
      }
      function vf(t2) {
        return wf(t2);
      }
      var _f = class {
        constructor(t2) {
          for (const e2 in t2)
            this[e2] = vf(t2[e2]);
        }
      };
      Al(), il();
      var Qf = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var bf = new Gl("abstract-provider/5.7.0");
      var kf = class extends _f {
        static isForkEvent(t2) {
          return !(!t2 || !t2._isForkEvent);
        }
      };
      var Df = class t2 {
        constructor() {
          bf.checkAbstract(new.target, t2), If(this, "_isProvider", true);
        }
        getFeeData() {
          return Qf(this, void 0, void 0, function* () {
            const { block: t3, gasPrice: e2 } = yield Cf({ block: this.getBlock("latest"), gasPrice: this.getGasPrice().catch((t4) => null) });
            let r4 = null, n2 = null, A2 = null;
            return t3 && t3.baseFeePerGas && (r4 = t3.baseFeePerGas, A2 = hf.from("1500000000"), n2 = t3.baseFeePerGas.mul(2).add(A2)), { lastBaseFeePerGas: r4, maxFeePerGas: n2, maxPriorityFeePerGas: A2, gasPrice: e2 };
          });
        }
        addListener(t3, e2) {
          return this.on(t3, e2);
        }
        removeListener(t3, e2) {
          return this.off(t3, e2);
        }
        static isProvider(t3) {
          return !(!t3 || !t3._isProvider);
        }
      };
      Al(), il(), Al(), il();
      var Sf = new Gl("networks/5.7.1");
      function Nf(t2) {
        const e2 = function(e3, r4) {
          null == r4 && (r4 = {});
          const n2 = [];
          if (e3.InfuraProvider && "-" !== r4.infura)
            try {
              n2.push(new e3.InfuraProvider(t2, r4.infura));
            } catch (t3) {
            }
          if (e3.EtherscanProvider && "-" !== r4.etherscan)
            try {
              n2.push(new e3.EtherscanProvider(t2, r4.etherscan));
            } catch (t3) {
            }
          if (e3.AlchemyProvider && "-" !== r4.alchemy)
            try {
              n2.push(new e3.AlchemyProvider(t2, r4.alchemy));
            } catch (t3) {
            }
          if (e3.PocketProvider && "-" !== r4.pocket) {
            const A2 = ["goerli", "ropsten", "rinkeby", "sepolia"];
            try {
              const i2 = new e3.PocketProvider(t2, r4.pocket);
              i2.network && -1 === A2.indexOf(i2.network.name) && n2.push(i2);
            } catch (t3) {
            }
          }
          if (e3.CloudflareProvider && "-" !== r4.cloudflare)
            try {
              n2.push(new e3.CloudflareProvider(t2));
            } catch (t3) {
            }
          if (e3.AnkrProvider && "-" !== r4.ankr)
            try {
              const A2 = ["ropsten"], i2 = new e3.AnkrProvider(t2, r4.ankr);
              i2.network && -1 === A2.indexOf(i2.network.name) && n2.push(i2);
            } catch (t3) {
            }
          if (0 === n2.length)
            return null;
          if (e3.FallbackProvider) {
            let A2 = 1;
            return null != r4.quorum ? A2 = r4.quorum : "homestead" === t2 && (A2 = 2), new e3.FallbackProvider(n2, A2);
          }
          return n2[0];
        };
        return e2.renetwork = function(t3) {
          return Nf(t3);
        }, e2;
      }
      function Mf(t2, e2) {
        const r4 = function(r5, n2) {
          return r5.JsonRpcProvider ? new r5.JsonRpcProvider(t2, e2) : null;
        };
        return r4.renetwork = function(e3) {
          return Mf(t2, e3);
        }, r4;
      }
      var xf = { chainId: 1, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "homestead", _defaultProvider: Nf("homestead") };
      var Ff = { chainId: 3, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "ropsten", _defaultProvider: Nf("ropsten") };
      var Pf = { chainId: 63, name: "classicMordor", _defaultProvider: Mf("https://www.ethercluster.com/mordor", "classicMordor") };
      var Tf = { unspecified: { chainId: 0, name: "unspecified" }, homestead: xf, mainnet: xf, morden: { chainId: 2, name: "morden" }, ropsten: Ff, testnet: Ff, rinkeby: { chainId: 4, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "rinkeby", _defaultProvider: Nf("rinkeby") }, kovan: { chainId: 42, name: "kovan", _defaultProvider: Nf("kovan") }, goerli: { chainId: 5, ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e", name: "goerli", _defaultProvider: Nf("goerli") }, kintsugi: { chainId: 1337702, name: "kintsugi" }, sepolia: { chainId: 11155111, name: "sepolia", _defaultProvider: Nf("sepolia") }, classic: { chainId: 61, name: "classic", _defaultProvider: Mf("https://www.ethercluster.com/etc", "classic") }, classicMorden: { chainId: 62, name: "classicMorden" }, classicMordor: Pf, classicTestnet: Pf, classicKotti: { chainId: 6, name: "classicKotti", _defaultProvider: Mf("https://www.ethercluster.com/kotti", "classicKotti") }, xdai: { chainId: 100, name: "xdai" }, matic: { chainId: 137, name: "matic", _defaultProvider: Nf("matic") }, maticmum: { chainId: 80001, name: "maticmum" }, optimism: { chainId: 10, name: "optimism", _defaultProvider: Nf("optimism") }, "optimism-kovan": { chainId: 69, name: "optimism-kovan" }, "optimism-goerli": { chainId: 420, name: "optimism-goerli" }, arbitrum: { chainId: 42161, name: "arbitrum" }, "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" }, "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" }, bnb: { chainId: 56, name: "bnb" }, bnbt: { chainId: 97, name: "bnbt" } };
      function Rf(t2) {
        t2 = atob(t2);
        const e2 = [];
        for (let r4 = 0; r4 < t2.length; r4++)
          e2.push(t2.charCodeAt(r4));
        return jl(e2);
      }
      function Uf(t2) {
        t2 = jl(t2);
        let e2 = "";
        for (let r4 = 0; r4 < t2.length; r4++)
          e2 += String.fromCharCode(t2[r4]);
        return btoa(e2);
      }
      Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var Gf = class {
        constructor(t2) {
          If(this, "alphabet", t2), If(this, "base", t2.length), If(this, "_alphabetMap", {}), If(this, "_leader", t2.charAt(0));
          for (let e2 = 0; e2 < t2.length; e2++)
            this._alphabetMap[t2.charAt(e2)] = e2;
        }
        encode(t2) {
          let e2 = jl(t2);
          if (0 === e2.length)
            return "";
          let r4 = [0];
          for (let t3 = 0; t3 < e2.length; ++t3) {
            let n3 = e2[t3];
            for (let t4 = 0; t4 < r4.length; ++t4)
              n3 += r4[t4] << 8, r4[t4] = n3 % this.base, n3 = n3 / this.base | 0;
            for (; n3 > 0; )
              r4.push(n3 % this.base), n3 = n3 / this.base | 0;
          }
          let n2 = "";
          for (let t3 = 0; 0 === e2[t3] && t3 < e2.length - 1; ++t3)
            n2 += this._leader;
          for (let t3 = r4.length - 1; t3 >= 0; --t3)
            n2 += this.alphabet[r4[t3]];
          return n2;
        }
        decode(t2) {
          if ("string" != typeof t2)
            throw new TypeError("Expected String");
          let e2 = [];
          if (0 === t2.length)
            return new Uint8Array(e2);
          e2.push(0);
          for (let r4 = 0; r4 < t2.length; r4++) {
            let n2 = this._alphabetMap[t2[r4]];
            if (void 0 === n2)
              throw new Error("Non-base" + this.base + " character");
            let A2 = n2;
            for (let t3 = 0; t3 < e2.length; ++t3)
              A2 += e2[t3] * this.base, e2[t3] = 255 & A2, A2 >>= 8;
            for (; A2 > 0; )
              e2.push(255 & A2), A2 >>= 8;
          }
          for (let r4 = 0; t2[r4] === this._leader && r4 < t2.length - 1; ++r4)
            e2.push(0);
          return jl(new Uint8Array(e2.reverse()));
        }
      };
      new Gf("abcdefghijklmnopqrstuvwxyz234567");
      var Hf = new Gf("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
      Al(), il(), Al(), il();
      Al(), il();
      var Lf = hf.from(0);
      Al(), il();
      Al(), il(), Al(), il(), Al(), il();
      var Of = nl(al());
      function Yf(t2) {
        return "0x" + Of.default.keccak_256(jl(t2));
      }
      Al(), il(), Al(), il(), Al(), il();
      var Kf;
      var Jf;
      var jf;
      var zf;
      var qf = new Gl("strings/5.7.0");
      function Xf(t2, e2, r4, n2, A2) {
        if (t2 === jf.BAD_PREFIX || t2 === jf.UNEXPECTED_CONTINUE) {
          let t3 = 0;
          for (let n3 = e2 + 1; n3 < r4.length && r4[n3] >> 6 == 2; n3++)
            t3++;
          return t3;
        }
        return t2 === jf.OVERRUN ? r4.length - e2 - 1 : 0;
      }
      (Jf = Kf || (Kf = {})).current = "", Jf.NFC = "NFC", Jf.NFD = "NFD", Jf.NFKC = "NFKC", Jf.NFKD = "NFKD", (zf = jf || (jf = {})).UNEXPECTED_CONTINUE = "unexpected continuation byte", zf.BAD_PREFIX = "bad codepoint prefix", zf.OVERRUN = "string overrun", zf.MISSING_CONTINUE = "missing continuation byte", zf.OUT_OF_RANGE = "out of UTF-8 range", zf.UTF16_SURROGATE = "UTF-16 surrogate", zf.OVERLONG = "overlong representation";
      var Vf = Object.freeze({ error: function(t2, e2, r4, n2, A2) {
        return qf.throwArgumentError(`invalid codepoint at offset ${e2}; ${t2}`, "bytes", r4);
      }, ignore: Xf, replace: function(t2, e2, r4, n2, A2) {
        return t2 === jf.OVERLONG ? (n2.push(A2), 0) : (n2.push(65533), Xf(t2, e2, r4));
      } });
      function Wf(t2, e2) {
        null == e2 && (e2 = Vf.error), t2 = jl(t2);
        const r4 = [];
        let n2 = 0;
        for (; n2 < t2.length; ) {
          const A2 = t2[n2++];
          if (!(A2 >> 7)) {
            r4.push(A2);
            continue;
          }
          let i2 = null, o2 = null;
          if (192 == (224 & A2))
            i2 = 1, o2 = 127;
          else if (224 == (240 & A2))
            i2 = 2, o2 = 2047;
          else {
            if (240 != (248 & A2)) {
              n2 += e2(128 == (192 & A2) ? jf.UNEXPECTED_CONTINUE : jf.BAD_PREFIX, n2 - 1, t2, r4);
              continue;
            }
            i2 = 3, o2 = 65535;
          }
          if (n2 - 1 + i2 >= t2.length) {
            n2 += e2(jf.OVERRUN, n2 - 1, t2, r4);
            continue;
          }
          let s2 = A2 & (1 << 8 - i2 - 1) - 1;
          for (let A3 = 0; A3 < i2; A3++) {
            let A4 = t2[n2];
            if (128 != (192 & A4)) {
              n2 += e2(jf.MISSING_CONTINUE, n2, t2, r4), s2 = null;
              break;
            }
            s2 = s2 << 6 | 63 & A4, n2++;
          }
          null !== s2 && (s2 > 1114111 ? n2 += e2(jf.OUT_OF_RANGE, n2 - 1 - i2, t2, r4, s2) : s2 >= 55296 && s2 <= 57343 ? n2 += e2(jf.UTF16_SURROGATE, n2 - 1 - i2, t2, r4, s2) : s2 <= o2 ? n2 += e2(jf.OVERLONG, n2 - 1 - i2, t2, r4, s2) : r4.push(s2));
        }
        return r4;
      }
      function Zf(t2, e2 = Kf.current) {
        e2 != Kf.current && (qf.checkNormalize(), t2 = t2.normalize(e2));
        let r4 = [];
        for (let e3 = 0; e3 < t2.length; e3++) {
          const n2 = t2.charCodeAt(e3);
          if (n2 < 128)
            r4.push(n2);
          else if (n2 < 2048)
            r4.push(n2 >> 6 | 192), r4.push(63 & n2 | 128);
          else if (55296 == (64512 & n2)) {
            e3++;
            const A2 = t2.charCodeAt(e3);
            if (e3 >= t2.length || 56320 != (64512 & A2))
              throw new Error("invalid utf-8 string");
            const i2 = 65536 + ((1023 & n2) << 10) + (1023 & A2);
            r4.push(i2 >> 18 | 240), r4.push(i2 >> 12 & 63 | 128), r4.push(i2 >> 6 & 63 | 128), r4.push(63 & i2 | 128);
          } else
            r4.push(n2 >> 12 | 224), r4.push(n2 >> 6 & 63 | 128), r4.push(63 & n2 | 128);
        }
        return jl(r4);
      }
      function $f(t2, e2) {
        return Wf(t2, e2).map((t3) => t3 <= 65535 ? String.fromCharCode(t3) : (t3 -= 65536, String.fromCharCode(55296 + (t3 >> 10 & 1023), 56320 + (1023 & t3)))).join("");
      }
      function tp(t2) {
        return Yf(Zf(t2));
      }
      Al(), il(), Al(), il();
      var ep = "hash/5.7.0";
      function rp(t2, e2) {
        null == e2 && (e2 = 1);
        const r4 = [], n2 = r4.forEach, A2 = function(t3, e3) {
          n2.call(t3, function(t4) {
            e3 > 0 && Array.isArray(t4) ? A2(t4, e3 - 1) : r4.push(t4);
          });
        };
        return A2(t2, e2), r4;
      }
      function np(t2) {
        return /* @__PURE__ */ function(t3) {
          let e2 = 0;
          return () => t3[e2++];
        }(function(t3) {
          let e2 = 0;
          function r4() {
            return t3[e2++] << 8 | t3[e2++];
          }
          let n2 = r4(), A2 = 1, i2 = [0, 1];
          for (let t4 = 1; t4 < n2; t4++)
            i2.push(A2 += r4());
          let o2 = r4(), s2 = e2;
          e2 += o2;
          let a2 = 0, c2 = 0;
          function h2() {
            return 0 == a2 && (c2 = c2 << 8 | t3[e2++], a2 = 8), c2 >> --a2 & 1;
          }
          const g2 = Math.pow(2, 31), u2 = g2 >>> 1, l2 = u2 >> 1, f2 = g2 - 1;
          let p2 = 0;
          for (let t4 = 0; t4 < 31; t4++)
            p2 = p2 << 1 | h2();
          let d2 = [], I2 = 0, y2 = g2;
          for (; ; ) {
            let t4 = Math.floor(((p2 - I2 + 1) * A2 - 1) / y2), e3 = 0, r5 = n2;
            for (; r5 - e3 > 1; ) {
              let n3 = e3 + r5 >>> 1;
              t4 < i2[n3] ? r5 = n3 : e3 = n3;
            }
            if (0 == e3)
              break;
            d2.push(e3);
            let o3 = I2 + Math.floor(y2 * i2[e3] / A2), s3 = I2 + Math.floor(y2 * i2[e3 + 1] / A2) - 1;
            for (; !((o3 ^ s3) & u2); )
              p2 = p2 << 1 & f2 | h2(), o3 = o3 << 1 & f2, s3 = s3 << 1 & f2 | 1;
            for (; o3 & ~s3 & l2; )
              p2 = p2 & u2 | p2 << 1 & f2 >>> 1 | h2(), o3 = o3 << 1 ^ u2, s3 = (s3 ^ u2) << 1 | u2 | 1;
            I2 = o3, y2 = 1 + s3 - o3;
          }
          let C2 = n2 - 4;
          return d2.map((e3) => {
            switch (e3 - C2) {
              case 3:
                return C2 + 65792 + (t3[s2++] << 16 | t3[s2++] << 8 | t3[s2++]);
              case 2:
                return C2 + 256 + (t3[s2++] << 8 | t3[s2++]);
              case 1:
                return C2 + t3[s2++];
              default:
                return e3 - 1;
            }
          });
        }(t2));
      }
      function Ap(t2) {
        return 1 & t2 ? ~t2 >> 1 : t2 >> 1;
      }
      function ip(t2, e2) {
        let r4 = Array(t2);
        for (let n2 = 0, A2 = -1; n2 < t2; n2++)
          r4[n2] = A2 += 1 + e2();
        return r4;
      }
      function op(t2, e2) {
        let r4 = Array(t2);
        for (let n2 = 0, A2 = 0; n2 < t2; n2++)
          r4[n2] = A2 += Ap(e2());
        return r4;
      }
      function sp(t2, e2) {
        let r4 = ip(t2(), t2), n2 = t2(), A2 = ip(n2, t2), i2 = function(t3, e3) {
          let r5 = Array(t3);
          for (let n3 = 0; n3 < t3; n3++)
            r5[n3] = 1 + e3();
          return r5;
        }(n2, t2);
        for (let t3 = 0; t3 < n2; t3++)
          for (let e3 = 0; e3 < i2[t3]; e3++)
            r4.push(A2[t3] + e3);
        return e2 ? r4.map((t3) => e2[t3]) : r4;
      }
      function ap(t2, e2, r4) {
        let n2 = Array(t2).fill(void 0).map(() => []);
        for (let A2 = 0; A2 < e2; A2++)
          op(t2, r4).forEach((t3, e3) => n2[e3].push(t3));
        return n2;
      }
      function cp(t2, e2) {
        let r4 = 1 + e2(), n2 = e2(), A2 = function(t3) {
          let e3 = [];
          for (; ; ) {
            let r5 = t3();
            if (0 == r5)
              break;
            e3.push(r5);
          }
          return e3;
        }(e2);
        return rp(ap(A2.length, 1 + t2, e2).map((t3, e3) => {
          const i2 = t3[0], o2 = t3.slice(1);
          return Array(A2[e3]).fill(void 0).map((t4, e4) => {
            let A3 = e4 * n2;
            return [i2 + e4 * r4, o2.map((t5) => t5 + A3)];
          });
        }));
      }
      function hp(t2, e2) {
        return ap(1 + e2(), 1 + t2, e2).map((t3) => [t3[0], t3.slice(1)]);
      }
      Al(), il(), Al(), il(), Al(), il();
      var gp = np(Rf("AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA=="));
      var up = new Set(sp(gp));
      var lp = new Set(sp(gp));
      var fp = function(t2) {
        let e2 = [];
        for (; ; ) {
          let r4 = t2();
          if (0 == r4)
            break;
          e2.push(cp(r4, t2));
        }
        for (; ; ) {
          let r4 = t2() - 1;
          if (r4 < 0)
            break;
          e2.push(hp(r4, t2));
        }
        return function(t3) {
          const e3 = {};
          for (let r4 = 0; r4 < t3.length; r4++) {
            const n2 = t3[r4];
            e3[n2[0]] = n2[1];
          }
          return e3;
        }(rp(e2));
      }(gp);
      var pp = function(t2) {
        let e2 = sp(t2).sort((t3, e3) => t3 - e3);
        return function r4() {
          let n2 = [];
          for (; ; ) {
            let A3 = sp(t2, e2);
            if (0 == A3.length)
              break;
            n2.push({ set: new Set(A3), node: r4() });
          }
          n2.sort((t3, e3) => e3.set.size - t3.set.size);
          let A2 = t2(), i2 = A2 % 3;
          A2 = A2 / 3 | 0;
          let o2 = !!(1 & A2);
          return A2 >>= 1, { branches: n2, valid: i2, fe0f: o2, save: 1 == A2, check: 2 == A2 };
        }();
      }(gp);
      var dp = 45;
      var Ip = 95;
      function yp(t2) {
        return function(t3, e2 = Kf.current) {
          return Wf(Zf(t3, e2));
        }(t2);
      }
      function Cp(t2) {
        return t2.filter((t3) => 65039 != t3);
      }
      function mp(t2) {
        for (let e2 of t2.split(".")) {
          let t3 = yp(e2);
          try {
            for (let e3 = t3.lastIndexOf(Ip) - 1; e3 >= 0; e3--)
              if (t3[e3] !== Ip)
                throw new Error("underscore only allowed at start");
            if (t3.length >= 4 && t3.every((t4) => t4 < 128) && t3[2] === dp && t3[3] === dp)
              throw new Error("invalid label extension");
          } catch (t4) {
            throw new Error(`Invalid label "${e2}": ${t4.message}`);
          }
        }
        return t2;
      }
      function Bp(t2) {
        return mp(function(t3, e2) {
          let r4 = yp(t3).reverse(), n2 = [];
          for (; r4.length; ) {
            let t4 = Ep(r4);
            if (t4) {
              n2.push(...e2(t4));
              continue;
            }
            let A3 = r4.pop();
            if (up.has(A3)) {
              n2.push(A3);
              continue;
            }
            if (lp.has(A3))
              continue;
            let i2 = fp[A3];
            if (!i2)
              throw new Error(`Disallowed codepoint: 0x${A3.toString(16).toUpperCase()}`);
            n2.push(...i2);
          }
          return mp((A2 = String.fromCodePoint(...n2), A2.normalize("NFC")));
          var A2;
        }(t2, Cp));
      }
      function Ep(t2, e2) {
        var r4;
        let n2, A2, i2 = pp, o2 = [], s2 = t2.length;
        for (e2 && (e2.length = 0); s2; ) {
          let a2 = t2[--s2];
          if (i2 = null === (r4 = i2.branches.find((t3) => t3.set.has(a2))) || void 0 === r4 ? void 0 : r4.node, !i2)
            break;
          if (i2.save)
            A2 = a2;
          else if (i2.check && a2 === A2)
            break;
          o2.push(a2), i2.fe0f && (o2.push(65039), s2 > 0 && 65039 == t2[s2 - 1] && s2--), i2.valid && (n2 = o2.slice(), 2 == i2.valid && n2.splice(1, 1), e2 && e2.push(...t2.slice(s2).reverse()), t2.length = s2);
        }
        return n2;
      }
      var wp = new Gl(ep);
      var vp = new Uint8Array(32);
      function _p(t2) {
        if (0 === t2.length)
          throw new Error("invalid ENS name; empty component");
        return t2;
      }
      function Qp(t2) {
        const e2 = Zf(Bp(t2)), r4 = [];
        if (0 === t2.length)
          return r4;
        let n2 = 0;
        for (let t3 = 0; t3 < e2.length; t3++) {
          46 === e2[t3] && (r4.push(_p(e2.slice(n2, t3))), n2 = t3 + 1);
        }
        if (n2 >= e2.length)
          throw new Error("invalid ENS name; empty component");
        return r4.push(_p(e2.slice(n2))), r4;
      }
      function bp(t2) {
        "string" != typeof t2 && wp.throwArgumentError("invalid ENS name; not a string", "name", t2);
        let e2 = vp;
        const r4 = Qp(t2);
        for (; r4.length; )
          e2 = Yf(zl([e2, Yf(r4.pop())]));
        return Wl(e2);
      }
      vp.fill(0), Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var kp = new Gl("rlp/5.7.0");
      function Dp(t2) {
        const e2 = [];
        for (; t2; )
          e2.unshift(255 & t2), t2 >>= 8;
        return e2;
      }
      function Sp(t2, e2, r4) {
        let n2 = 0;
        for (let A2 = 0; A2 < r4; A2++)
          n2 = 256 * n2 + t2[e2 + A2];
        return n2;
      }
      function Np(t2) {
        if (Array.isArray(t2)) {
          let e3 = [];
          if (t2.forEach(function(t3) {
            e3 = e3.concat(Np(t3));
          }), e3.length <= 55)
            return e3.unshift(192 + e3.length), e3;
          const r5 = Dp(e3.length);
          return r5.unshift(247 + r5.length), r5.concat(e3);
        }
        Yl(t2) || kp.throwArgumentError("RLP object must be BytesLike", "object", t2);
        const e2 = Array.prototype.slice.call(jl(t2));
        if (1 === e2.length && e2[0] <= 127)
          return e2;
        if (e2.length <= 55)
          return e2.unshift(128 + e2.length), e2;
        const r4 = Dp(e2.length);
        return r4.unshift(183 + r4.length), r4.concat(e2);
      }
      function Mp(t2) {
        return Wl(Np(t2));
      }
      function xp(t2, e2, r4, n2) {
        const A2 = [];
        for (; r4 < e2 + 1 + n2; ) {
          const i2 = Fp(t2, r4);
          A2.push(i2.result), (r4 += i2.consumed) > e2 + 1 + n2 && kp.throwError("child data too short", Gl.errors.BUFFER_OVERRUN, {});
        }
        return { consumed: 1 + n2, result: A2 };
      }
      function Fp(t2, e2) {
        if (0 === t2.length && kp.throwError("data too short", Gl.errors.BUFFER_OVERRUN, {}), t2[e2] >= 248) {
          const r4 = t2[e2] - 247;
          e2 + 1 + r4 > t2.length && kp.throwError("data short segment too short", Gl.errors.BUFFER_OVERRUN, {});
          const n2 = Sp(t2, e2 + 1, r4);
          return e2 + 1 + r4 + n2 > t2.length && kp.throwError("data long segment too short", Gl.errors.BUFFER_OVERRUN, {}), xp(t2, e2, e2 + 1 + r4, r4 + n2);
        }
        if (t2[e2] >= 192) {
          const r4 = t2[e2] - 192;
          return e2 + 1 + r4 > t2.length && kp.throwError("data array too short", Gl.errors.BUFFER_OVERRUN, {}), xp(t2, e2, e2 + 1, r4);
        }
        if (t2[e2] >= 184) {
          const r4 = t2[e2] - 183;
          e2 + 1 + r4 > t2.length && kp.throwError("data array too short", Gl.errors.BUFFER_OVERRUN, {});
          const n2 = Sp(t2, e2 + 1, r4);
          e2 + 1 + r4 + n2 > t2.length && kp.throwError("data array too short", Gl.errors.BUFFER_OVERRUN, {});
          return { consumed: 1 + r4 + n2, result: Wl(t2.slice(e2 + 1 + r4, e2 + 1 + r4 + n2)) };
        }
        if (t2[e2] >= 128) {
          const r4 = t2[e2] - 128;
          e2 + 1 + r4 > t2.length && kp.throwError("data too short", Gl.errors.BUFFER_OVERRUN, {});
          return { consumed: 1 + r4, result: Wl(t2.slice(e2 + 1, e2 + 1 + r4)) };
        }
        return { consumed: 1, result: Wl(t2[e2]) };
      }
      function Pp(t2) {
        const e2 = jl(t2), r4 = Fp(e2, 0);
        return r4.consumed !== e2.length && kp.throwArgumentError("invalid rlp data", "data", t2), r4.result;
      }
      Al(), il();
      var Tp = new Gl("address/5.7.0");
      function Rp(t2) {
        Xl(t2, 20) || Tp.throwArgumentError("invalid address", "address", t2);
        const e2 = (t2 = t2.toLowerCase()).substring(2).split(""), r4 = new Uint8Array(40);
        for (let t3 = 0; t3 < 40; t3++)
          r4[t3] = e2[t3].charCodeAt(0);
        const n2 = jl(Yf(r4));
        for (let t3 = 0; t3 < 40; t3 += 2)
          n2[t3 >> 1] >> 4 >= 8 && (e2[t3] = e2[t3].toUpperCase()), (15 & n2[t3 >> 1]) >= 8 && (e2[t3 + 1] = e2[t3 + 1].toUpperCase());
        return "0x" + e2.join("");
      }
      var Up = {};
      for (let t2 = 0; t2 < 10; t2++)
        Up[String(t2)] = String(t2);
      for (let t2 = 0; t2 < 26; t2++)
        Up[String.fromCharCode(65 + t2)] = String(10 + t2);
      var Gp = Math.floor(function(t2) {
        return Math.log10 ? Math.log10(t2) : Math.log(t2) / Math.LN10;
      }(9007199254740991));
      function Hp(t2) {
        let e2 = null;
        if ("string" != typeof t2 && Tp.throwArgumentError("invalid address", "address", t2), t2.match(/^(0x)?[0-9a-fA-F]{40}$/))
          "0x" !== t2.substring(0, 2) && (t2 = "0x" + t2), e2 = Rp(t2), t2.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && e2 !== t2 && Tp.throwArgumentError("bad address checksum", "address", t2);
        else if (t2.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
          for (t2.substring(2, 4) !== function(t3) {
            let e3 = (t3 = (t3 = t3.toUpperCase()).substring(4) + t3.substring(0, 2) + "00").split("").map((t4) => Up[t4]).join("");
            for (; e3.length >= Gp; ) {
              let t4 = e3.substring(0, Gp);
              e3 = parseInt(t4, 10) % 97 + e3.substring(t4.length);
            }
            let r5 = String(98 - parseInt(e3, 10) % 97);
            for (; r5.length < 2; )
              r5 = "0" + r5;
            return r5;
          }(t2) && Tp.throwArgumentError("bad icap checksum", "address", t2), r4 = t2.substring(4), e2 = new Af(r4, 36).toString(16); e2.length < 40; )
            e2 = "0" + e2;
          e2 = Rp("0x" + e2);
        } else
          Tp.throwArgumentError("invalid address", "address", t2);
        var r4;
        return e2;
      }
      var Lp = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var Op = new Gl(ep);
      var Yp = new Uint8Array(32);
      Yp.fill(0);
      var Kp = hf.from(-1);
      var Jp = hf.from(0);
      var jp = hf.from(1);
      var zp = hf.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      var qp = rf(jp.toHexString(), 32);
      var Xp = rf(Jp.toHexString(), 32);
      var Vp = { name: "string", version: "string", chainId: "uint256", verifyingContract: "address", salt: "bytes32" };
      var Wp = ["name", "version", "chainId", "verifyingContract", "salt"];
      function Zp(t2) {
        return function(e2) {
          return "string" != typeof e2 && Op.throwArgumentError(`invalid domain value for ${JSON.stringify(t2)}`, `domain.${t2}`, e2), e2;
        };
      }
      var $p = { name: Zp("name"), version: Zp("version"), chainId: function(t2) {
        try {
          return hf.from(t2).toString();
        } catch (t3) {
        }
        return Op.throwArgumentError('invalid domain value for "chainId"', "domain.chainId", t2);
      }, verifyingContract: function(t2) {
        try {
          return Hp(t2).toLowerCase();
        } catch (t3) {
        }
        return Op.throwArgumentError('invalid domain value "verifyingContract"', "domain.verifyingContract", t2);
      }, salt: function(t2) {
        try {
          const e2 = jl(t2);
          if (32 !== e2.length)
            throw new Error("bad length");
          return Wl(e2);
        } catch (t3) {
        }
        return Op.throwArgumentError('invalid domain value "salt"', "domain.salt", t2);
      } };
      function td(t2) {
        {
          const e2 = t2.match(/^(u?)int(\d*)$/);
          if (e2) {
            const r4 = "" === e2[1], n2 = parseInt(e2[2] || "256");
            (n2 % 8 != 0 || n2 > 256 || e2[2] && e2[2] !== String(n2)) && Op.throwArgumentError("invalid numeric width", "type", t2);
            const A2 = zp.mask(r4 ? n2 - 1 : n2), i2 = r4 ? A2.add(jp).mul(Kp) : Jp;
            return function(e3) {
              const r5 = hf.from(e3);
              return (r5.lt(i2) || r5.gt(A2)) && Op.throwArgumentError(`value out-of-bounds for ${t2}`, "value", e3), rf(r5.toTwos(256).toHexString(), 32);
            };
          }
        }
        {
          const e2 = t2.match(/^bytes(\d+)$/);
          if (e2) {
            const r4 = parseInt(e2[1]);
            return (0 === r4 || r4 > 32 || e2[1] !== String(r4)) && Op.throwArgumentError("invalid bytes width", "type", t2), function(e3) {
              return jl(e3).length !== r4 && Op.throwArgumentError(`invalid length for ${t2}`, "value", e3), function(t3) {
                const e4 = jl(t3), r5 = e4.length % 32;
                return r5 ? tf([e4, Yp.slice(r5)]) : Wl(e4);
              }(e3);
            };
          }
        }
        switch (t2) {
          case "address":
            return function(t3) {
              return rf(Hp(t3), 32);
            };
          case "bool":
            return function(t3) {
              return t3 ? qp : Xp;
            };
          case "bytes":
            return function(t3) {
              return Yf(t3);
            };
          case "string":
            return function(t3) {
              return tp(t3);
            };
        }
        return null;
      }
      function ed(t2, e2) {
        return `${t2}(${e2.map(({ name: t3, type: e3 }) => e3 + " " + t3).join(",")})`;
      }
      var rd = class t2 {
        constructor(t3) {
          If(this, "types", Object.freeze(vf(t3))), If(this, "_encoderCache", {}), If(this, "_types", {});
          const e2 = {}, r4 = {}, n2 = {};
          Object.keys(t3).forEach((t4) => {
            e2[t4] = {}, r4[t4] = [], n2[t4] = {};
          });
          for (const n3 in t3) {
            const A3 = {};
            t3[n3].forEach((i2) => {
              A3[i2.name] && Op.throwArgumentError(`duplicate variable name ${JSON.stringify(i2.name)} in ${JSON.stringify(n3)}`, "types", t3), A3[i2.name] = true;
              const o2 = i2.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
              o2 === n3 && Op.throwArgumentError(`circular type reference to ${JSON.stringify(o2)}`, "types", t3);
              td(o2) || (r4[o2] || Op.throwArgumentError(`unknown type ${JSON.stringify(o2)}`, "types", t3), r4[o2].push(n3), e2[n3][o2] = true);
            });
          }
          const A2 = Object.keys(r4).filter((t4) => 0 === r4[t4].length);
          0 === A2.length ? Op.throwArgumentError("missing primary type", "types", t3) : A2.length > 1 && Op.throwArgumentError(`ambiguous primary types or unused types: ${A2.map((t4) => JSON.stringify(t4)).join(", ")}`, "types", t3), If(this, "primaryType", A2[0]), function A3(i2, o2) {
            o2[i2] && Op.throwArgumentError(`circular type reference to ${JSON.stringify(i2)}`, "types", t3), o2[i2] = true, Object.keys(e2[i2]).forEach((t4) => {
              r4[t4] && (A3(t4, o2), Object.keys(o2).forEach((e3) => {
                n2[e3][t4] = true;
              }));
            }), delete o2[i2];
          }(this.primaryType, {});
          for (const e3 in n2) {
            const r5 = Object.keys(n2[e3]);
            r5.sort(), this._types[e3] = ed(e3, t3[e3]) + r5.map((e4) => ed(e4, t3[e4])).join("");
          }
        }
        getEncoder(t3) {
          let e2 = this._encoderCache[t3];
          return e2 || (e2 = this._encoderCache[t3] = this._getEncoder(t3)), e2;
        }
        _getEncoder(t3) {
          {
            const e3 = td(t3);
            if (e3)
              return e3;
          }
          const e2 = t3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (e2) {
            const t4 = e2[1], r5 = this.getEncoder(t4), n2 = parseInt(e2[3]);
            return (e3) => {
              n2 >= 0 && e3.length !== n2 && Op.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e3);
              let A2 = e3.map(r5);
              return this._types[t4] && (A2 = A2.map(Yf)), Yf(tf(A2));
            };
          }
          const r4 = this.types[t3];
          if (r4) {
            const e3 = tp(this._types[t3]);
            return (t4) => {
              const n2 = r4.map(({ name: e4, type: r5 }) => {
                const n3 = this.getEncoder(r5)(t4[e4]);
                return this._types[r5] ? Yf(n3) : n3;
              });
              return n2.unshift(e3), tf(n2);
            };
          }
          return Op.throwArgumentError(`unknown type: ${t3}`, "type", t3);
        }
        encodeType(t3) {
          const e2 = this._types[t3];
          return e2 || Op.throwArgumentError(`unknown type: ${JSON.stringify(t3)}`, "name", t3), e2;
        }
        encodeData(t3, e2) {
          return this.getEncoder(t3)(e2);
        }
        hashStruct(t3, e2) {
          return Yf(this.encodeData(t3, e2));
        }
        encode(t3) {
          return this.encodeData(this.primaryType, t3);
        }
        hash(t3) {
          return this.hashStruct(this.primaryType, t3);
        }
        _visit(t3, e2, r4) {
          if (td(t3))
            return r4(t3, e2);
          const n2 = t3.match(/^(.*)(\x5b(\d*)\x5d)$/);
          if (n2) {
            const t4 = n2[1], A3 = parseInt(n2[3]);
            return A3 >= 0 && e2.length !== A3 && Op.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", e2), e2.map((e3) => this._visit(t4, e3, r4));
          }
          const A2 = this.types[t3];
          return A2 ? A2.reduce((t4, { name: n3, type: A3 }) => (t4[n3] = this._visit(A3, e2[n3], r4), t4), {}) : Op.throwArgumentError(`unknown type: ${t3}`, "type", t3);
        }
        visit(t3, e2) {
          return this._visit(this.primaryType, t3, e2);
        }
        static from(e2) {
          return new t2(e2);
        }
        static getPrimaryType(e2) {
          return t2.from(e2).primaryType;
        }
        static hashStruct(e2, r4, n2) {
          return t2.from(r4).hashStruct(e2, n2);
        }
        static hashDomain(e2) {
          const r4 = [];
          for (const t3 in e2) {
            const n2 = Vp[t3];
            n2 || Op.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(t3)}`, "domain", e2), r4.push({ name: t3, type: n2 });
          }
          return r4.sort((t3, e3) => Wp.indexOf(t3.name) - Wp.indexOf(e3.name)), t2.hashStruct("EIP712Domain", { EIP712Domain: r4 }, e2);
        }
        static encode(e2, r4, n2) {
          return tf(["0x1901", t2.hashDomain(e2), t2.from(r4).hash(n2)]);
        }
        static hash(e2, r4, n2) {
          return Yf(t2.encode(e2, r4, n2));
        }
        static resolveNames(e2, r4, n2, A2) {
          return Lp(this, void 0, void 0, function* () {
            e2 = mf(e2);
            const i2 = {};
            e2.verifyingContract && !Xl(e2.verifyingContract, 20) && (i2[e2.verifyingContract] = "0x");
            const o2 = t2.from(r4);
            o2.visit(n2, (t3, e3) => ("address" !== t3 || Xl(e3, 20) || (i2[e3] = "0x"), e3));
            for (const t3 in i2)
              i2[t3] = yield A2(t3);
            return e2.verifyingContract && i2[e2.verifyingContract] && (e2.verifyingContract = i2[e2.verifyingContract]), n2 = o2.visit(n2, (t3, e3) => "address" === t3 && i2[e3] ? i2[e3] : e3), { domain: e2, value: n2 };
          });
        }
        static getPayload(e2, r4, n2) {
          t2.hashDomain(e2);
          const A2 = {}, i2 = [];
          Wp.forEach((t3) => {
            const r5 = e2[t3];
            null != r5 && (A2[t3] = $p[t3](r5), i2.push({ name: t3, type: Vp[t3] }));
          });
          const o2 = t2.from(r4), s2 = mf(r4);
          return s2.EIP712Domain ? Op.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", r4) : s2.EIP712Domain = i2, o2.encode(n2), { types: s2, domain: A2, primaryType: o2.primaryType, message: o2.visit(n2, (t3, e3) => {
            if (t3.match(/^bytes(\d*)/))
              return Wl(jl(e3));
            if (t3.match(/^u?int/))
              return hf.from(e3).toString();
            switch (t3) {
              case "address":
                return e3.toLowerCase();
              case "bool":
                return !!e3;
              case "string":
                return "string" != typeof e3 && Op.throwArgumentError("invalid string", "value", e3), e3;
            }
            return Op.throwArgumentError("unsupported type", "type", t3);
          }) };
        }
      };
      Al(), il(), Al(), il();
      var nd = nl(El());
      function Ad(t2) {
        return "0x" + nd.default.sha256().update(jl(t2)).digest("hex");
      }
      Al(), il(), Al(), il(), Al(), il();
      Al(), il();
      var id3 = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      function od(t2, e2) {
        return id3(this, void 0, void 0, function* () {
          null == e2 && (e2 = {});
          const r4 = { method: e2.method || "GET", headers: e2.headers || {}, body: e2.body || void 0 };
          if (true !== e2.skipFetchSetup && (r4.mode = "cors", r4.cache = "no-cache", r4.credentials = "same-origin", r4.redirect = "follow", r4.referrer = "client"), null != e2.fetchOptions) {
            const t3 = e2.fetchOptions;
            t3.mode && (r4.mode = t3.mode), t3.cache && (r4.cache = t3.cache), t3.credentials && (r4.credentials = t3.credentials), t3.redirect && (r4.redirect = t3.redirect), t3.referrer && (r4.referrer = t3.referrer);
          }
          const n2 = yield fetch(t2, r4), A2 = yield n2.arrayBuffer(), i2 = {};
          return n2.headers.forEach ? n2.headers.forEach((t3, e3) => {
            i2[e3.toLowerCase()] = t3;
          }) : n2.headers.keys().forEach((t3) => {
            i2[t3.toLowerCase()] = n2.headers.get(t3);
          }), { headers: i2, statusCode: n2.status, statusMessage: n2.statusText, body: jl(new Uint8Array(A2)) };
        });
      }
      var sd = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var ad = new Gl("web/5.7.1");
      function cd(t2) {
        return new Promise((e2) => {
          setTimeout(e2, t2);
        });
      }
      function hd(t2, e2) {
        if (null == t2)
          return null;
        if ("string" == typeof t2)
          return t2;
        if (Yl(t2)) {
          if (e2 && ("text" === e2.split("/")[0] || "application/json" === e2.split(";")[0].trim()))
            try {
              return $f(t2);
            } catch (t3) {
            }
          return Wl(t2);
        }
        return t2;
      }
      function gd(t2, e2, r4) {
        let n2 = null;
        if (null != e2) {
          n2 = Zf(e2);
          const r5 = "string" == typeof t2 ? { url: t2 } : mf(t2);
          if (r5.headers) {
            0 !== Object.keys(r5.headers).filter((t3) => "content-type" === t3.toLowerCase()).length || (r5.headers = mf(r5.headers), r5.headers["content-type"] = "application/json");
          } else
            r5.headers = { "content-type": "application/json" };
          t2 = r5;
        }
        return function(t3, e3, r5) {
          const n3 = "object" == typeof t3 && null != t3.throttleLimit ? t3.throttleLimit : 12;
          ad.assertArgument(n3 > 0 && n3 % 1 == 0, "invalid connection throttle limit", "connection.throttleLimit", n3);
          const A2 = "object" == typeof t3 ? t3.throttleCallback : null, i2 = "object" == typeof t3 && "number" == typeof t3.throttleSlotInterval ? t3.throttleSlotInterval : 100;
          ad.assertArgument(i2 > 0 && i2 % 1 == 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", i2);
          const o2 = "object" == typeof t3 && !!t3.errorPassThrough, s2 = {};
          let a2 = null;
          const c2 = { method: "GET" };
          let h2 = false, g2 = 12e4;
          if ("string" == typeof t3)
            a2 = t3;
          else if ("object" == typeof t3) {
            if (null != t3 && null != t3.url || ad.throwArgumentError("missing URL", "connection.url", t3), a2 = t3.url, "number" == typeof t3.timeout && t3.timeout > 0 && (g2 = t3.timeout), t3.headers)
              for (const e4 in t3.headers)
                s2[e4.toLowerCase()] = { key: e4, value: String(t3.headers[e4]) }, ["if-none-match", "if-modified-since"].indexOf(e4.toLowerCase()) >= 0 && (h2 = true);
            if (c2.allowGzip = !!t3.allowGzip, null != t3.user && null != t3.password) {
              "https:" !== a2.substring(0, 6) && true !== t3.allowInsecureAuthentication && ad.throwError("basic authentication requires a secure https url", Gl.errors.INVALID_ARGUMENT, { argument: "url", url: a2, user: t3.user, password: "[REDACTED]" });
              const e4 = t3.user + ":" + t3.password;
              s2.authorization = { key: "Authorization", value: "Basic " + Uf(Zf(e4)) };
            }
            null != t3.skipFetchSetup && (c2.skipFetchSetup = !!t3.skipFetchSetup), null != t3.fetchOptions && (c2.fetchOptions = mf(t3.fetchOptions));
          }
          const u2 = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"), l2 = a2 ? a2.match(u2) : null;
          if (l2)
            try {
              const t4 = { statusCode: 200, statusMessage: "OK", headers: { "content-type": l2[1] || "text/plain" }, body: l2[2] ? Rf(l2[3]) : (f2 = l2[3], Zf(f2.replace(/%([0-9a-f][0-9a-f])/gi, (t5, e5) => String.fromCharCode(parseInt(e5, 16))))) };
              let e4 = t4.body;
              return r5 && (e4 = r5(t4.body, t4)), Promise.resolve(e4);
            } catch (t4) {
              ad.throwError("processing response error", Gl.errors.SERVER_ERROR, { body: hd(l2[1], l2[2]), error: t4, requestBody: null, requestMethod: "GET", url: a2 });
            }
          var f2;
          e3 && (c2.method = "POST", c2.body = e3, null == s2["content-type"] && (s2["content-type"] = { key: "Content-Type", value: "application/octet-stream" }), null == s2["content-length"] && (s2["content-length"] = { key: "Content-Length", value: String(e3.length) }));
          const p2 = {};
          Object.keys(s2).forEach((t4) => {
            const e4 = s2[t4];
            p2[e4.key] = e4.value;
          }), c2.headers = p2;
          const d2 = function() {
            let t4 = null;
            return { promise: new Promise(function(e4, r6) {
              g2 && (t4 = setTimeout(() => {
                null != t4 && (t4 = null, r6(ad.makeError("timeout", Gl.errors.TIMEOUT, { requestBody: hd(c2.body, p2["content-type"]), requestMethod: c2.method, timeout: g2, url: a2 })));
              }, g2));
            }), cancel: function() {
              null != t4 && (clearTimeout(t4), t4 = null);
            } };
          }(), I2 = function() {
            return sd(this, void 0, void 0, function* () {
              for (let t4 = 0; t4 < n3; t4++) {
                let e4 = null;
                try {
                  if (e4 = yield od(a2, c2), t4 < n3) {
                    if (301 === e4.statusCode || 302 === e4.statusCode) {
                      const t5 = e4.headers.location || "";
                      if ("GET" === c2.method && t5.match(/^https:/)) {
                        a2 = e4.headers.location;
                        continue;
                      }
                    } else if (429 === e4.statusCode) {
                      let r6 = true;
                      if (A2 && (r6 = yield A2(t4, a2)), r6) {
                        let r7 = 0;
                        const n4 = e4.headers["retry-after"];
                        r7 = "string" == typeof n4 && n4.match(/^[1-9][0-9]*$/) ? 1e3 * parseInt(n4) : i2 * parseInt(String(Math.random() * Math.pow(2, t4))), yield cd(r7);
                        continue;
                      }
                    }
                  }
                } catch (t5) {
                  e4 = t5.response, null == e4 && (d2.cancel(), ad.throwError("missing response", Gl.errors.SERVER_ERROR, { requestBody: hd(c2.body, p2["content-type"]), requestMethod: c2.method, serverError: t5, url: a2 }));
                }
                let s3 = e4.body;
                if (h2 && 304 === e4.statusCode ? s3 = null : !o2 && (e4.statusCode < 200 || e4.statusCode >= 300) && (d2.cancel(), ad.throwError("bad response", Gl.errors.SERVER_ERROR, { status: e4.statusCode, headers: e4.headers, body: hd(s3, e4.headers ? e4.headers["content-type"] : null), requestBody: hd(c2.body, p2["content-type"]), requestMethod: c2.method, url: a2 })), r5)
                  try {
                    const t5 = yield r5(s3, e4);
                    return d2.cancel(), t5;
                  } catch (r6) {
                    if (r6.throttleRetry && t4 < n3) {
                      let e5 = true;
                      if (A2 && (e5 = yield A2(t4, a2)), e5) {
                        const e6 = i2 * parseInt(String(Math.random() * Math.pow(2, t4)));
                        yield cd(e6);
                        continue;
                      }
                    }
                    d2.cancel(), ad.throwError("processing response error", Gl.errors.SERVER_ERROR, { body: hd(s3, e4.headers ? e4.headers["content-type"] : null), error: r6, requestBody: hd(c2.body, p2["content-type"]), requestMethod: c2.method, url: a2 });
                  }
                return d2.cancel(), s3;
              }
              return ad.throwError("failed response", Gl.errors.SERVER_ERROR, { requestBody: hd(c2.body, p2["content-type"]), requestMethod: c2.method, url: a2 });
            });
          }();
          return Promise.race([d2.promise, I2]);
        }(t2, n2, (t3, e3) => {
          let n3 = null;
          if (null != t3)
            try {
              n3 = JSON.parse($f(t3));
            } catch (e4) {
              ad.throwError("invalid JSON", Gl.errors.SERVER_ERROR, { body: t3, error: e4 });
            }
          return r4 && (n3 = r4(n3, e3)), n3;
        });
      }
      function ud(t2, e2) {
        return e2 || (e2 = {}), null == (e2 = mf(e2)).floor && (e2.floor = 0), null == e2.ceiling && (e2.ceiling = 1e4), null == e2.interval && (e2.interval = 250), new Promise(function(r4, n2) {
          let A2 = null, i2 = false;
          const o2 = () => !i2 && (i2 = true, A2 && clearTimeout(A2), true);
          e2.timeout && (A2 = setTimeout(() => {
            o2() && n2(new Error("timeout"));
          }, e2.timeout));
          const s2 = e2.retryLimit;
          let a2 = 0;
          !function A3() {
            return t2().then(function(t3) {
              if (void 0 !== t3)
                o2() && r4(t3);
              else if (e2.oncePoll)
                e2.oncePoll.once("poll", A3);
              else if (e2.onceBlock)
                e2.onceBlock.once("block", A3);
              else if (!i2) {
                if (a2++, a2 > s2)
                  return void (o2() && n2(new Error("retry limit reached")));
                let t4 = e2.interval * parseInt(String(Math.random() * Math.pow(2, a2)));
                t4 < e2.floor && (t4 = e2.floor), t4 > e2.ceiling && (t4 = e2.ceiling), setTimeout(A3, t4);
              }
              return null;
            }, function(t3) {
              o2() && n2(t3);
            });
          }();
        });
      }
      var ld = nl(wl());
      Al(), il();
      var fd = "providers/5.7.2";
      Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var pd = nl(sl());
      var dd = nl(El());
      function Id(t2, e2, r4) {
        return t2(r4 = { path: e2, exports: {}, require: function(t3, e3) {
          return function() {
            throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
          }(null == e3 && r4.path);
        } }, r4.exports), r4.exports;
      }
      var yd = Cd;
      function Cd(t2, e2) {
        if (!t2)
          throw new Error(e2 || "Assertion failed");
      }
      Cd.equal = function(t2, e2, r4) {
        if (t2 != e2)
          throw new Error(r4 || "Assertion failed: " + t2 + " != " + e2);
      };
      var md = Id(function(t2, e2) {
        var r4 = e2;
        function n2(t3) {
          return 1 === t3.length ? "0" + t3 : t3;
        }
        function A2(t3) {
          for (var e3 = "", r5 = 0; r5 < t3.length; r5++)
            e3 += n2(t3[r5].toString(16));
          return e3;
        }
        r4.toArray = function(t3, e3) {
          if (Array.isArray(t3))
            return t3.slice();
          if (!t3)
            return [];
          var r5 = [];
          if ("string" != typeof t3) {
            for (var n3 = 0; n3 < t3.length; n3++)
              r5[n3] = 0 | t3[n3];
            return r5;
          }
          if ("hex" === e3) {
            (t3 = t3.replace(/[^a-z0-9]+/gi, "")).length % 2 != 0 && (t3 = "0" + t3);
            for (n3 = 0; n3 < t3.length; n3 += 2)
              r5.push(parseInt(t3[n3] + t3[n3 + 1], 16));
          } else
            for (n3 = 0; n3 < t3.length; n3++) {
              var A3 = t3.charCodeAt(n3), i2 = A3 >> 8, o2 = 255 & A3;
              i2 ? r5.push(i2, o2) : r5.push(o2);
            }
          return r5;
        }, r4.zero2 = n2, r4.toHex = A2, r4.encode = function(t3, e3) {
          return "hex" === e3 ? A2(t3) : t3;
        };
      });
      var Bd = Id(function(t2, e2) {
        var r4 = e2;
        r4.assert = yd, r4.toArray = md.toArray, r4.zero2 = md.zero2, r4.toHex = md.toHex, r4.encode = md.encode, r4.getNAF = function(t3, e3, r5) {
          var n2 = new Array(Math.max(t3.bitLength(), r5) + 1);
          n2.fill(0);
          for (var A2 = 1 << e3 + 1, i2 = t3.clone(), o2 = 0; o2 < n2.length; o2++) {
            var s2, a2 = i2.andln(A2 - 1);
            i2.isOdd() ? (s2 = a2 > (A2 >> 1) - 1 ? (A2 >> 1) - a2 : a2, i2.isubn(s2)) : s2 = 0, n2[o2] = s2, i2.iushrn(1);
          }
          return n2;
        }, r4.getJSF = function(t3, e3) {
          var r5 = [[], []];
          t3 = t3.clone(), e3 = e3.clone();
          for (var n2, A2 = 0, i2 = 0; t3.cmpn(-A2) > 0 || e3.cmpn(-i2) > 0; ) {
            var o2, s2, a2 = t3.andln(3) + A2 & 3, c2 = e3.andln(3) + i2 & 3;
            3 === a2 && (a2 = -1), 3 === c2 && (c2 = -1), o2 = 1 & a2 ? 3 !== (n2 = t3.andln(7) + A2 & 7) && 5 !== n2 || 2 !== c2 ? a2 : -a2 : 0, r5[0].push(o2), s2 = 1 & c2 ? 3 !== (n2 = e3.andln(7) + i2 & 7) && 5 !== n2 || 2 !== a2 ? c2 : -c2 : 0, r5[1].push(s2), 2 * A2 === o2 + 1 && (A2 = 1 - A2), 2 * i2 === s2 + 1 && (i2 = 1 - i2), t3.iushrn(1), e3.iushrn(1);
          }
          return r5;
        }, r4.cachedProperty = function(t3, e3, r5) {
          var n2 = "_" + e3;
          t3.prototype[e3] = function() {
            return void 0 !== this[n2] ? this[n2] : this[n2] = r5.call(this);
          };
        }, r4.parseBytes = function(t3) {
          return "string" == typeof t3 ? r4.toArray(t3, "hex") : t3;
        }, r4.intFromLE = function(t3) {
          return new pd.default(t3, "hex", "le");
        };
      });
      var Ed = Bd.getNAF;
      var wd = Bd.getJSF;
      var vd = Bd.assert;
      function _d(t2, e2) {
        this.type = t2, this.p = new pd.default(e2.p, 16), this.red = e2.prime ? pd.default.red(e2.prime) : pd.default.mont(this.p), this.zero = new pd.default(0).toRed(this.red), this.one = new pd.default(1).toRed(this.red), this.two = new pd.default(2).toRed(this.red), this.n = e2.n && new pd.default(e2.n, 16), this.g = e2.g && this.pointFromJSON(e2.g, e2.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
        var r4 = this.n && this.p.div(this.n);
        !r4 || r4.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
      }
      var Qd = _d;
      function bd(t2, e2) {
        this.curve = t2, this.type = e2, this.precomputed = null;
      }
      _d.prototype.point = function() {
        throw new Error("Not implemented");
      }, _d.prototype.validate = function() {
        throw new Error("Not implemented");
      }, _d.prototype._fixedNafMul = function(t2, e2) {
        vd(t2.precomputed);
        var r4 = t2._getDoubles(), n2 = Ed(e2, 1, this._bitLength), A2 = (1 << r4.step + 1) - (r4.step % 2 == 0 ? 2 : 1);
        A2 /= 3;
        var i2, o2, s2 = [];
        for (i2 = 0; i2 < n2.length; i2 += r4.step) {
          o2 = 0;
          for (var a2 = i2 + r4.step - 1; a2 >= i2; a2--)
            o2 = (o2 << 1) + n2[a2];
          s2.push(o2);
        }
        for (var c2 = this.jpoint(null, null, null), h2 = this.jpoint(null, null, null), g2 = A2; g2 > 0; g2--) {
          for (i2 = 0; i2 < s2.length; i2++)
            (o2 = s2[i2]) === g2 ? h2 = h2.mixedAdd(r4.points[i2]) : o2 === -g2 && (h2 = h2.mixedAdd(r4.points[i2].neg()));
          c2 = c2.add(h2);
        }
        return c2.toP();
      }, _d.prototype._wnafMul = function(t2, e2) {
        var r4 = 4, n2 = t2._getNAFPoints(r4);
        r4 = n2.wnd;
        for (var A2 = n2.points, i2 = Ed(e2, r4, this._bitLength), o2 = this.jpoint(null, null, null), s2 = i2.length - 1; s2 >= 0; s2--) {
          for (var a2 = 0; s2 >= 0 && 0 === i2[s2]; s2--)
            a2++;
          if (s2 >= 0 && a2++, o2 = o2.dblp(a2), s2 < 0)
            break;
          var c2 = i2[s2];
          vd(0 !== c2), o2 = "affine" === t2.type ? c2 > 0 ? o2.mixedAdd(A2[c2 - 1 >> 1]) : o2.mixedAdd(A2[-c2 - 1 >> 1].neg()) : c2 > 0 ? o2.add(A2[c2 - 1 >> 1]) : o2.add(A2[-c2 - 1 >> 1].neg());
        }
        return "affine" === t2.type ? o2.toP() : o2;
      }, _d.prototype._wnafMulAdd = function(t2, e2, r4, n2, A2) {
        var i2, o2, s2, a2 = this._wnafT1, c2 = this._wnafT2, h2 = this._wnafT3, g2 = 0;
        for (i2 = 0; i2 < n2; i2++) {
          var u2 = (s2 = e2[i2])._getNAFPoints(t2);
          a2[i2] = u2.wnd, c2[i2] = u2.points;
        }
        for (i2 = n2 - 1; i2 >= 1; i2 -= 2) {
          var l2 = i2 - 1, f2 = i2;
          if (1 === a2[l2] && 1 === a2[f2]) {
            var p2 = [e2[l2], null, null, e2[f2]];
            0 === e2[l2].y.cmp(e2[f2].y) ? (p2[1] = e2[l2].add(e2[f2]), p2[2] = e2[l2].toJ().mixedAdd(e2[f2].neg())) : 0 === e2[l2].y.cmp(e2[f2].y.redNeg()) ? (p2[1] = e2[l2].toJ().mixedAdd(e2[f2]), p2[2] = e2[l2].add(e2[f2].neg())) : (p2[1] = e2[l2].toJ().mixedAdd(e2[f2]), p2[2] = e2[l2].toJ().mixedAdd(e2[f2].neg()));
            var d2 = [-3, -1, -5, -7, 0, 7, 5, 1, 3], I2 = wd(r4[l2], r4[f2]);
            for (g2 = Math.max(I2[0].length, g2), h2[l2] = new Array(g2), h2[f2] = new Array(g2), o2 = 0; o2 < g2; o2++) {
              var y2 = 0 | I2[0][o2], C2 = 0 | I2[1][o2];
              h2[l2][o2] = d2[3 * (y2 + 1) + (C2 + 1)], h2[f2][o2] = 0, c2[l2] = p2;
            }
          } else
            h2[l2] = Ed(r4[l2], a2[l2], this._bitLength), h2[f2] = Ed(r4[f2], a2[f2], this._bitLength), g2 = Math.max(h2[l2].length, g2), g2 = Math.max(h2[f2].length, g2);
        }
        var m2 = this.jpoint(null, null, null), B2 = this._wnafT4;
        for (i2 = g2; i2 >= 0; i2--) {
          for (var E2 = 0; i2 >= 0; ) {
            var w2 = true;
            for (o2 = 0; o2 < n2; o2++)
              B2[o2] = 0 | h2[o2][i2], 0 !== B2[o2] && (w2 = false);
            if (!w2)
              break;
            E2++, i2--;
          }
          if (i2 >= 0 && E2++, m2 = m2.dblp(E2), i2 < 0)
            break;
          for (o2 = 0; o2 < n2; o2++) {
            var v2 = B2[o2];
            0 !== v2 && (v2 > 0 ? s2 = c2[o2][v2 - 1 >> 1] : v2 < 0 && (s2 = c2[o2][-v2 - 1 >> 1].neg()), m2 = "affine" === s2.type ? m2.mixedAdd(s2) : m2.add(s2));
          }
        }
        for (i2 = 0; i2 < n2; i2++)
          c2[i2] = null;
        return A2 ? m2 : m2.toP();
      }, _d.BasePoint = bd, bd.prototype.eq = function() {
        throw new Error("Not implemented");
      }, bd.prototype.validate = function() {
        return this.curve.validate(this);
      }, _d.prototype.decodePoint = function(t2, e2) {
        t2 = Bd.toArray(t2, e2);
        var r4 = this.p.byteLength();
        if ((4 === t2[0] || 6 === t2[0] || 7 === t2[0]) && t2.length - 1 == 2 * r4)
          return 6 === t2[0] ? vd(t2[t2.length - 1] % 2 == 0) : 7 === t2[0] && vd(t2[t2.length - 1] % 2 == 1), this.point(t2.slice(1, 1 + r4), t2.slice(1 + r4, 1 + 2 * r4));
        if ((2 === t2[0] || 3 === t2[0]) && t2.length - 1 === r4)
          return this.pointFromX(t2.slice(1, 1 + r4), 3 === t2[0]);
        throw new Error("Unknown point format");
      }, bd.prototype.encodeCompressed = function(t2) {
        return this.encode(t2, true);
      }, bd.prototype._encode = function(t2) {
        var e2 = this.curve.p.byteLength(), r4 = this.getX().toArray("be", e2);
        return t2 ? [this.getY().isEven() ? 2 : 3].concat(r4) : [4].concat(r4, this.getY().toArray("be", e2));
      }, bd.prototype.encode = function(t2, e2) {
        return Bd.encode(this._encode(e2), t2);
      }, bd.prototype.precompute = function(t2) {
        if (this.precomputed)
          return this;
        var e2 = { doubles: null, naf: null, beta: null };
        return e2.naf = this._getNAFPoints(8), e2.doubles = this._getDoubles(4, t2), e2.beta = this._getBeta(), this.precomputed = e2, this;
      }, bd.prototype._hasDoubles = function(t2) {
        if (!this.precomputed)
          return false;
        var e2 = this.precomputed.doubles;
        return !!e2 && e2.points.length >= Math.ceil((t2.bitLength() + 1) / e2.step);
      }, bd.prototype._getDoubles = function(t2, e2) {
        if (this.precomputed && this.precomputed.doubles)
          return this.precomputed.doubles;
        for (var r4 = [this], n2 = this, A2 = 0; A2 < e2; A2 += t2) {
          for (var i2 = 0; i2 < t2; i2++)
            n2 = n2.dbl();
          r4.push(n2);
        }
        return { step: t2, points: r4 };
      }, bd.prototype._getNAFPoints = function(t2) {
        if (this.precomputed && this.precomputed.naf)
          return this.precomputed.naf;
        for (var e2 = [this], r4 = (1 << t2) - 1, n2 = 1 === r4 ? null : this.dbl(), A2 = 1; A2 < r4; A2++)
          e2[A2] = e2[A2 - 1].add(n2);
        return { wnd: t2, points: e2 };
      }, bd.prototype._getBeta = function() {
        return null;
      }, bd.prototype.dblp = function(t2) {
        for (var e2 = this, r4 = 0; r4 < t2; r4++)
          e2 = e2.dbl();
        return e2;
      };
      var kd = Id(function(t2) {
        "function" == typeof Object.create ? t2.exports = function(t3, e2) {
          e2 && (t3.super_ = e2, t3.prototype = Object.create(e2.prototype, { constructor: { value: t3, enumerable: false, writable: true, configurable: true } }));
        } : t2.exports = function(t3, e2) {
          if (e2) {
            t3.super_ = e2;
            var r4 = function() {
            };
            r4.prototype = e2.prototype, t3.prototype = new r4(), t3.prototype.constructor = t3;
          }
        };
      });
      var Dd = Bd.assert;
      function Sd(t2) {
        Qd.call(this, "short", t2), this.a = new pd.default(t2.a, 16).toRed(this.red), this.b = new pd.default(t2.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = 0 === this.a.fromRed().cmpn(0), this.threeA = 0 === this.a.fromRed().sub(this.p).cmpn(-3), this.endo = this._getEndomorphism(t2), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
      }
      kd(Sd, Qd);
      var Nd = Sd;
      function Md(t2, e2, r4, n2) {
        Qd.BasePoint.call(this, t2, "affine"), null === e2 && null === r4 ? (this.x = null, this.y = null, this.inf = true) : (this.x = new pd.default(e2, 16), this.y = new pd.default(r4, 16), n2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
      }
      function xd(t2, e2, r4, n2) {
        Qd.BasePoint.call(this, t2, "jacobian"), null === e2 && null === r4 && null === n2 ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new pd.default(0)) : (this.x = new pd.default(e2, 16), this.y = new pd.default(r4, 16), this.z = new pd.default(n2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
      }
      Sd.prototype._getEndomorphism = function(t2) {
        if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
          var e2, r4;
          if (t2.beta)
            e2 = new pd.default(t2.beta, 16).toRed(this.red);
          else {
            var n2 = this._getEndoRoots(this.p);
            e2 = (e2 = n2[0].cmp(n2[1]) < 0 ? n2[0] : n2[1]).toRed(this.red);
          }
          if (t2.lambda)
            r4 = new pd.default(t2.lambda, 16);
          else {
            var A2 = this._getEndoRoots(this.n);
            0 === this.g.mul(A2[0]).x.cmp(this.g.x.redMul(e2)) ? r4 = A2[0] : (r4 = A2[1], Dd(0 === this.g.mul(r4).x.cmp(this.g.x.redMul(e2))));
          }
          return { beta: e2, lambda: r4, basis: t2.basis ? t2.basis.map(function(t3) {
            return { a: new pd.default(t3.a, 16), b: new pd.default(t3.b, 16) };
          }) : this._getEndoBasis(r4) };
        }
      }, Sd.prototype._getEndoRoots = function(t2) {
        var e2 = t2 === this.p ? this.red : pd.default.mont(t2), r4 = new pd.default(2).toRed(e2).redInvm(), n2 = r4.redNeg(), A2 = new pd.default(3).toRed(e2).redNeg().redSqrt().redMul(r4);
        return [n2.redAdd(A2).fromRed(), n2.redSub(A2).fromRed()];
      }, Sd.prototype._getEndoBasis = function(t2) {
        for (var e2, r4, n2, A2, i2, o2, s2, a2, c2, h2 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), g2 = t2, u2 = this.n.clone(), l2 = new pd.default(1), f2 = new pd.default(0), p2 = new pd.default(0), d2 = new pd.default(1), I2 = 0; 0 !== g2.cmpn(0); ) {
          var y2 = u2.div(g2);
          a2 = u2.sub(y2.mul(g2)), c2 = p2.sub(y2.mul(l2));
          var C2 = d2.sub(y2.mul(f2));
          if (!n2 && a2.cmp(h2) < 0)
            e2 = s2.neg(), r4 = l2, n2 = a2.neg(), A2 = c2;
          else if (n2 && 2 == ++I2)
            break;
          s2 = a2, u2 = g2, g2 = a2, p2 = l2, l2 = c2, d2 = f2, f2 = C2;
        }
        i2 = a2.neg(), o2 = c2;
        var m2 = n2.sqr().add(A2.sqr());
        return i2.sqr().add(o2.sqr()).cmp(m2) >= 0 && (i2 = e2, o2 = r4), n2.negative && (n2 = n2.neg(), A2 = A2.neg()), i2.negative && (i2 = i2.neg(), o2 = o2.neg()), [{ a: n2, b: A2 }, { a: i2, b: o2 }];
      }, Sd.prototype._endoSplit = function(t2) {
        var e2 = this.endo.basis, r4 = e2[0], n2 = e2[1], A2 = n2.b.mul(t2).divRound(this.n), i2 = r4.b.neg().mul(t2).divRound(this.n), o2 = A2.mul(r4.a), s2 = i2.mul(n2.a), a2 = A2.mul(r4.b), c2 = i2.mul(n2.b);
        return { k1: t2.sub(o2).sub(s2), k2: a2.add(c2).neg() };
      }, Sd.prototype.pointFromX = function(t2, e2) {
        (t2 = new pd.default(t2, 16)).red || (t2 = t2.toRed(this.red));
        var r4 = t2.redSqr().redMul(t2).redIAdd(t2.redMul(this.a)).redIAdd(this.b), n2 = r4.redSqrt();
        if (0 !== n2.redSqr().redSub(r4).cmp(this.zero))
          throw new Error("invalid point");
        var A2 = n2.fromRed().isOdd();
        return (e2 && !A2 || !e2 && A2) && (n2 = n2.redNeg()), this.point(t2, n2);
      }, Sd.prototype.validate = function(t2) {
        if (t2.inf)
          return true;
        var e2 = t2.x, r4 = t2.y, n2 = this.a.redMul(e2), A2 = e2.redSqr().redMul(e2).redIAdd(n2).redIAdd(this.b);
        return 0 === r4.redSqr().redISub(A2).cmpn(0);
      }, Sd.prototype._endoWnafMulAdd = function(t2, e2, r4) {
        for (var n2 = this._endoWnafT1, A2 = this._endoWnafT2, i2 = 0; i2 < t2.length; i2++) {
          var o2 = this._endoSplit(e2[i2]), s2 = t2[i2], a2 = s2._getBeta();
          o2.k1.negative && (o2.k1.ineg(), s2 = s2.neg(true)), o2.k2.negative && (o2.k2.ineg(), a2 = a2.neg(true)), n2[2 * i2] = s2, n2[2 * i2 + 1] = a2, A2[2 * i2] = o2.k1, A2[2 * i2 + 1] = o2.k2;
        }
        for (var c2 = this._wnafMulAdd(1, n2, A2, 2 * i2, r4), h2 = 0; h2 < 2 * i2; h2++)
          n2[h2] = null, A2[h2] = null;
        return c2;
      }, kd(Md, Qd.BasePoint), Sd.prototype.point = function(t2, e2, r4) {
        return new Md(this, t2, e2, r4);
      }, Sd.prototype.pointFromJSON = function(t2, e2) {
        return Md.fromJSON(this, t2, e2);
      }, Md.prototype._getBeta = function() {
        if (this.curve.endo) {
          var t2 = this.precomputed;
          if (t2 && t2.beta)
            return t2.beta;
          var e2 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
          if (t2) {
            var r4 = this.curve, n2 = function(t3) {
              return r4.point(t3.x.redMul(r4.endo.beta), t3.y);
            };
            t2.beta = e2, e2.precomputed = { beta: null, naf: t2.naf && { wnd: t2.naf.wnd, points: t2.naf.points.map(n2) }, doubles: t2.doubles && { step: t2.doubles.step, points: t2.doubles.points.map(n2) } };
          }
          return e2;
        }
      }, Md.prototype.toJSON = function() {
        return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
      }, Md.fromJSON = function(t2, e2, r4) {
        "string" == typeof e2 && (e2 = JSON.parse(e2));
        var n2 = t2.point(e2[0], e2[1], r4);
        if (!e2[2])
          return n2;
        function A2(e3) {
          return t2.point(e3[0], e3[1], r4);
        }
        var i2 = e2[2];
        return n2.precomputed = { beta: null, doubles: i2.doubles && { step: i2.doubles.step, points: [n2].concat(i2.doubles.points.map(A2)) }, naf: i2.naf && { wnd: i2.naf.wnd, points: [n2].concat(i2.naf.points.map(A2)) } }, n2;
      }, Md.prototype.inspect = function() {
        return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
      }, Md.prototype.isInfinity = function() {
        return this.inf;
      }, Md.prototype.add = function(t2) {
        if (this.inf)
          return t2;
        if (t2.inf)
          return this;
        if (this.eq(t2))
          return this.dbl();
        if (this.neg().eq(t2))
          return this.curve.point(null, null);
        if (0 === this.x.cmp(t2.x))
          return this.curve.point(null, null);
        var e2 = this.y.redSub(t2.y);
        0 !== e2.cmpn(0) && (e2 = e2.redMul(this.x.redSub(t2.x).redInvm()));
        var r4 = e2.redSqr().redISub(this.x).redISub(t2.x), n2 = e2.redMul(this.x.redSub(r4)).redISub(this.y);
        return this.curve.point(r4, n2);
      }, Md.prototype.dbl = function() {
        if (this.inf)
          return this;
        var t2 = this.y.redAdd(this.y);
        if (0 === t2.cmpn(0))
          return this.curve.point(null, null);
        var e2 = this.curve.a, r4 = this.x.redSqr(), n2 = t2.redInvm(), A2 = r4.redAdd(r4).redIAdd(r4).redIAdd(e2).redMul(n2), i2 = A2.redSqr().redISub(this.x.redAdd(this.x)), o2 = A2.redMul(this.x.redSub(i2)).redISub(this.y);
        return this.curve.point(i2, o2);
      }, Md.prototype.getX = function() {
        return this.x.fromRed();
      }, Md.prototype.getY = function() {
        return this.y.fromRed();
      }, Md.prototype.mul = function(t2) {
        return t2 = new pd.default(t2, 16), this.isInfinity() ? this : this._hasDoubles(t2) ? this.curve._fixedNafMul(this, t2) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [t2]) : this.curve._wnafMul(this, t2);
      }, Md.prototype.mulAdd = function(t2, e2, r4) {
        var n2 = [this, e2], A2 = [t2, r4];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, A2) : this.curve._wnafMulAdd(1, n2, A2, 2);
      }, Md.prototype.jmulAdd = function(t2, e2, r4) {
        var n2 = [this, e2], A2 = [t2, r4];
        return this.curve.endo ? this.curve._endoWnafMulAdd(n2, A2, true) : this.curve._wnafMulAdd(1, n2, A2, 2, true);
      }, Md.prototype.eq = function(t2) {
        return this === t2 || this.inf === t2.inf && (this.inf || 0 === this.x.cmp(t2.x) && 0 === this.y.cmp(t2.y));
      }, Md.prototype.neg = function(t2) {
        if (this.inf)
          return this;
        var e2 = this.curve.point(this.x, this.y.redNeg());
        if (t2 && this.precomputed) {
          var r4 = this.precomputed, n2 = function(t3) {
            return t3.neg();
          };
          e2.precomputed = { naf: r4.naf && { wnd: r4.naf.wnd, points: r4.naf.points.map(n2) }, doubles: r4.doubles && { step: r4.doubles.step, points: r4.doubles.points.map(n2) } };
        }
        return e2;
      }, Md.prototype.toJ = function() {
        return this.inf ? this.curve.jpoint(null, null, null) : this.curve.jpoint(this.x, this.y, this.curve.one);
      }, kd(xd, Qd.BasePoint), Sd.prototype.jpoint = function(t2, e2, r4) {
        return new xd(this, t2, e2, r4);
      }, xd.prototype.toP = function() {
        if (this.isInfinity())
          return this.curve.point(null, null);
        var t2 = this.z.redInvm(), e2 = t2.redSqr(), r4 = this.x.redMul(e2), n2 = this.y.redMul(e2).redMul(t2);
        return this.curve.point(r4, n2);
      }, xd.prototype.neg = function() {
        return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
      }, xd.prototype.add = function(t2) {
        if (this.isInfinity())
          return t2;
        if (t2.isInfinity())
          return this;
        var e2 = t2.z.redSqr(), r4 = this.z.redSqr(), n2 = this.x.redMul(e2), A2 = t2.x.redMul(r4), i2 = this.y.redMul(e2.redMul(t2.z)), o2 = t2.y.redMul(r4.redMul(this.z)), s2 = n2.redSub(A2), a2 = i2.redSub(o2);
        if (0 === s2.cmpn(0))
          return 0 !== a2.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var c2 = s2.redSqr(), h2 = c2.redMul(s2), g2 = n2.redMul(c2), u2 = a2.redSqr().redIAdd(h2).redISub(g2).redISub(g2), l2 = a2.redMul(g2.redISub(u2)).redISub(i2.redMul(h2)), f2 = this.z.redMul(t2.z).redMul(s2);
        return this.curve.jpoint(u2, l2, f2);
      }, xd.prototype.mixedAdd = function(t2) {
        if (this.isInfinity())
          return t2.toJ();
        if (t2.isInfinity())
          return this;
        var e2 = this.z.redSqr(), r4 = this.x, n2 = t2.x.redMul(e2), A2 = this.y, i2 = t2.y.redMul(e2).redMul(this.z), o2 = r4.redSub(n2), s2 = A2.redSub(i2);
        if (0 === o2.cmpn(0))
          return 0 !== s2.cmpn(0) ? this.curve.jpoint(null, null, null) : this.dbl();
        var a2 = o2.redSqr(), c2 = a2.redMul(o2), h2 = r4.redMul(a2), g2 = s2.redSqr().redIAdd(c2).redISub(h2).redISub(h2), u2 = s2.redMul(h2.redISub(g2)).redISub(A2.redMul(c2)), l2 = this.z.redMul(o2);
        return this.curve.jpoint(g2, u2, l2);
      }, xd.prototype.dblp = function(t2) {
        if (0 === t2)
          return this;
        if (this.isInfinity())
          return this;
        if (!t2)
          return this.dbl();
        var e2;
        if (this.curve.zeroA || this.curve.threeA) {
          var r4 = this;
          for (e2 = 0; e2 < t2; e2++)
            r4 = r4.dbl();
          return r4;
        }
        var n2 = this.curve.a, A2 = this.curve.tinv, i2 = this.x, o2 = this.y, s2 = this.z, a2 = s2.redSqr().redSqr(), c2 = o2.redAdd(o2);
        for (e2 = 0; e2 < t2; e2++) {
          var h2 = i2.redSqr(), g2 = c2.redSqr(), u2 = g2.redSqr(), l2 = h2.redAdd(h2).redIAdd(h2).redIAdd(n2.redMul(a2)), f2 = i2.redMul(g2), p2 = l2.redSqr().redISub(f2.redAdd(f2)), d2 = f2.redISub(p2), I2 = l2.redMul(d2);
          I2 = I2.redIAdd(I2).redISub(u2);
          var y2 = c2.redMul(s2);
          e2 + 1 < t2 && (a2 = a2.redMul(u2)), i2 = p2, s2 = y2, c2 = I2;
        }
        return this.curve.jpoint(i2, c2.redMul(A2), s2);
      }, xd.prototype.dbl = function() {
        return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
      }, xd.prototype._zeroDbl = function() {
        var t2, e2, r4;
        if (this.zOne) {
          var n2 = this.x.redSqr(), A2 = this.y.redSqr(), i2 = A2.redSqr(), o2 = this.x.redAdd(A2).redSqr().redISub(n2).redISub(i2);
          o2 = o2.redIAdd(o2);
          var s2 = n2.redAdd(n2).redIAdd(n2), a2 = s2.redSqr().redISub(o2).redISub(o2), c2 = i2.redIAdd(i2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), t2 = a2, e2 = s2.redMul(o2.redISub(a2)).redISub(c2), r4 = this.y.redAdd(this.y);
        } else {
          var h2 = this.x.redSqr(), g2 = this.y.redSqr(), u2 = g2.redSqr(), l2 = this.x.redAdd(g2).redSqr().redISub(h2).redISub(u2);
          l2 = l2.redIAdd(l2);
          var f2 = h2.redAdd(h2).redIAdd(h2), p2 = f2.redSqr(), d2 = u2.redIAdd(u2);
          d2 = (d2 = d2.redIAdd(d2)).redIAdd(d2), t2 = p2.redISub(l2).redISub(l2), e2 = f2.redMul(l2.redISub(t2)).redISub(d2), r4 = (r4 = this.y.redMul(this.z)).redIAdd(r4);
        }
        return this.curve.jpoint(t2, e2, r4);
      }, xd.prototype._threeDbl = function() {
        var t2, e2, r4;
        if (this.zOne) {
          var n2 = this.x.redSqr(), A2 = this.y.redSqr(), i2 = A2.redSqr(), o2 = this.x.redAdd(A2).redSqr().redISub(n2).redISub(i2);
          o2 = o2.redIAdd(o2);
          var s2 = n2.redAdd(n2).redIAdd(n2).redIAdd(this.curve.a), a2 = s2.redSqr().redISub(o2).redISub(o2);
          t2 = a2;
          var c2 = i2.redIAdd(i2);
          c2 = (c2 = c2.redIAdd(c2)).redIAdd(c2), e2 = s2.redMul(o2.redISub(a2)).redISub(c2), r4 = this.y.redAdd(this.y);
        } else {
          var h2 = this.z.redSqr(), g2 = this.y.redSqr(), u2 = this.x.redMul(g2), l2 = this.x.redSub(h2).redMul(this.x.redAdd(h2));
          l2 = l2.redAdd(l2).redIAdd(l2);
          var f2 = u2.redIAdd(u2), p2 = (f2 = f2.redIAdd(f2)).redAdd(f2);
          t2 = l2.redSqr().redISub(p2), r4 = this.y.redAdd(this.z).redSqr().redISub(g2).redISub(h2);
          var d2 = g2.redSqr();
          d2 = (d2 = (d2 = d2.redIAdd(d2)).redIAdd(d2)).redIAdd(d2), e2 = l2.redMul(f2.redISub(t2)).redISub(d2);
        }
        return this.curve.jpoint(t2, e2, r4);
      }, xd.prototype._dbl = function() {
        var t2 = this.curve.a, e2 = this.x, r4 = this.y, n2 = this.z, A2 = n2.redSqr().redSqr(), i2 = e2.redSqr(), o2 = r4.redSqr(), s2 = i2.redAdd(i2).redIAdd(i2).redIAdd(t2.redMul(A2)), a2 = e2.redAdd(e2), c2 = (a2 = a2.redIAdd(a2)).redMul(o2), h2 = s2.redSqr().redISub(c2.redAdd(c2)), g2 = c2.redISub(h2), u2 = o2.redSqr();
        u2 = (u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2)).redIAdd(u2);
        var l2 = s2.redMul(g2).redISub(u2), f2 = r4.redAdd(r4).redMul(n2);
        return this.curve.jpoint(h2, l2, f2);
      }, xd.prototype.trpl = function() {
        if (!this.curve.zeroA)
          return this.dbl().add(this);
        var t2 = this.x.redSqr(), e2 = this.y.redSqr(), r4 = this.z.redSqr(), n2 = e2.redSqr(), A2 = t2.redAdd(t2).redIAdd(t2), i2 = A2.redSqr(), o2 = this.x.redAdd(e2).redSqr().redISub(t2).redISub(n2), s2 = (o2 = (o2 = (o2 = o2.redIAdd(o2)).redAdd(o2).redIAdd(o2)).redISub(i2)).redSqr(), a2 = n2.redIAdd(n2);
        a2 = (a2 = (a2 = a2.redIAdd(a2)).redIAdd(a2)).redIAdd(a2);
        var c2 = A2.redIAdd(o2).redSqr().redISub(i2).redISub(s2).redISub(a2), h2 = e2.redMul(c2);
        h2 = (h2 = h2.redIAdd(h2)).redIAdd(h2);
        var g2 = this.x.redMul(s2).redISub(h2);
        g2 = (g2 = g2.redIAdd(g2)).redIAdd(g2);
        var u2 = this.y.redMul(c2.redMul(a2.redISub(c2)).redISub(o2.redMul(s2)));
        u2 = (u2 = (u2 = u2.redIAdd(u2)).redIAdd(u2)).redIAdd(u2);
        var l2 = this.z.redAdd(o2).redSqr().redISub(r4).redISub(s2);
        return this.curve.jpoint(g2, u2, l2);
      }, xd.prototype.mul = function(t2, e2) {
        return t2 = new pd.default(t2, e2), this.curve._wnafMul(this, t2);
      }, xd.prototype.eq = function(t2) {
        if ("affine" === t2.type)
          return this.eq(t2.toJ());
        if (this === t2)
          return true;
        var e2 = this.z.redSqr(), r4 = t2.z.redSqr();
        if (0 !== this.x.redMul(r4).redISub(t2.x.redMul(e2)).cmpn(0))
          return false;
        var n2 = e2.redMul(this.z), A2 = r4.redMul(t2.z);
        return 0 === this.y.redMul(A2).redISub(t2.y.redMul(n2)).cmpn(0);
      }, xd.prototype.eqXToP = function(t2) {
        var e2 = this.z.redSqr(), r4 = t2.toRed(this.curve.red).redMul(e2);
        if (0 === this.x.cmp(r4))
          return true;
        for (var n2 = t2.clone(), A2 = this.curve.redN.redMul(e2); ; ) {
          if (n2.iadd(this.curve.n), n2.cmp(this.curve.p) >= 0)
            return false;
          if (r4.redIAdd(A2), 0 === this.x.cmp(r4))
            return true;
        }
      }, xd.prototype.inspect = function() {
        return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
      }, xd.prototype.isInfinity = function() {
        return 0 === this.z.cmpn(0);
      };
      var Fd = Id(function(t2, e2) {
        var r4 = e2;
        r4.base = Qd, r4.short = Nd, r4.mont = null, r4.edwards = null;
      });
      var Pd = Id(function(t2, e2) {
        var r4, n2 = e2, A2 = Bd.assert;
        function i2(t3) {
          "short" === t3.type ? this.curve = new Fd.short(t3) : "edwards" === t3.type ? this.curve = new Fd.edwards(t3) : this.curve = new Fd.mont(t3), this.g = this.curve.g, this.n = this.curve.n, this.hash = t3.hash, A2(this.g.validate(), "Invalid curve"), A2(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
        }
        function o2(t3, e3) {
          Object.defineProperty(n2, t3, { configurable: true, enumerable: true, get: function() {
            var r5 = new i2(e3);
            return Object.defineProperty(n2, t3, { configurable: true, enumerable: true, value: r5 }), r5;
          } });
        }
        n2.PresetCurve = i2, o2("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: dd.default.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] }), o2("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: dd.default.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] }), o2("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: dd.default.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] }), o2("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: dd.default.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] }), o2("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: dd.default.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] }), o2("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: dd.default.sha256, gRed: false, g: ["9"] }), o2("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: dd.default.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
        try {
          r4 = null.crash();
        } catch (t3) {
          r4 = void 0;
        }
        o2("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: dd.default.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", r4] });
      });
      function Td(t2) {
        if (!(this instanceof Td))
          return new Td(t2);
        this.hash = t2.hash, this.predResist = !!t2.predResist, this.outLen = this.hash.outSize, this.minEntropy = t2.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
        var e2 = md.toArray(t2.entropy, t2.entropyEnc || "hex"), r4 = md.toArray(t2.nonce, t2.nonceEnc || "hex"), n2 = md.toArray(t2.pers, t2.persEnc || "hex");
        yd(e2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e2, r4, n2);
      }
      var Rd = Td;
      Td.prototype._init = function(t2, e2, r4) {
        var n2 = t2.concat(e2).concat(r4);
        this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
        for (var A2 = 0; A2 < this.V.length; A2++)
          this.K[A2] = 0, this.V[A2] = 1;
        this._update(n2), this._reseed = 1, this.reseedInterval = 281474976710656;
      }, Td.prototype._hmac = function() {
        return new dd.default.hmac(this.hash, this.K);
      }, Td.prototype._update = function(t2) {
        var e2 = this._hmac().update(this.V).update([0]);
        t2 && (e2 = e2.update(t2)), this.K = e2.digest(), this.V = this._hmac().update(this.V).digest(), t2 && (this.K = this._hmac().update(this.V).update([1]).update(t2).digest(), this.V = this._hmac().update(this.V).digest());
      }, Td.prototype.reseed = function(t2, e2, r4, n2) {
        "string" != typeof e2 && (n2 = r4, r4 = e2, e2 = null), t2 = md.toArray(t2, e2), r4 = md.toArray(r4, n2), yd(t2.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(t2.concat(r4 || [])), this._reseed = 1;
      }, Td.prototype.generate = function(t2, e2, r4, n2) {
        if (this._reseed > this.reseedInterval)
          throw new Error("Reseed is required");
        "string" != typeof e2 && (n2 = r4, r4 = e2, e2 = null), r4 && (r4 = md.toArray(r4, n2 || "hex"), this._update(r4));
        for (var A2 = []; A2.length < t2; )
          this.V = this._hmac().update(this.V).digest(), A2 = A2.concat(this.V);
        var i2 = A2.slice(0, t2);
        return this._update(r4), this._reseed++, md.encode(i2, e2);
      };
      var Ud = Bd.assert;
      function Gd(t2, e2) {
        this.ec = t2, this.priv = null, this.pub = null, e2.priv && this._importPrivate(e2.priv, e2.privEnc), e2.pub && this._importPublic(e2.pub, e2.pubEnc);
      }
      var Hd = Gd;
      Gd.fromPublic = function(t2, e2, r4) {
        return e2 instanceof Gd ? e2 : new Gd(t2, { pub: e2, pubEnc: r4 });
      }, Gd.fromPrivate = function(t2, e2, r4) {
        return e2 instanceof Gd ? e2 : new Gd(t2, { priv: e2, privEnc: r4 });
      }, Gd.prototype.validate = function() {
        var t2 = this.getPublic();
        return t2.isInfinity() ? { result: false, reason: "Invalid public key" } : t2.validate() ? t2.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
      }, Gd.prototype.getPublic = function(t2, e2) {
        return "string" == typeof t2 && (e2 = t2, t2 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), e2 ? this.pub.encode(e2, t2) : this.pub;
      }, Gd.prototype.getPrivate = function(t2) {
        return "hex" === t2 ? this.priv.toString(16, 2) : this.priv;
      }, Gd.prototype._importPrivate = function(t2, e2) {
        this.priv = new pd.default(t2, e2 || 16), this.priv = this.priv.umod(this.ec.curve.n);
      }, Gd.prototype._importPublic = function(t2, e2) {
        if (t2.x || t2.y)
          return "mont" === this.ec.curve.type ? Ud(t2.x, "Need x coordinate") : "short" !== this.ec.curve.type && "edwards" !== this.ec.curve.type || Ud(t2.x && t2.y, "Need both x and y coordinate"), void (this.pub = this.ec.curve.point(t2.x, t2.y));
        this.pub = this.ec.curve.decodePoint(t2, e2);
      }, Gd.prototype.derive = function(t2) {
        return t2.validate() || Ud(t2.validate(), "public point not validated"), t2.mul(this.priv).getX();
      }, Gd.prototype.sign = function(t2, e2, r4) {
        return this.ec.sign(t2, this, e2, r4);
      }, Gd.prototype.verify = function(t2, e2) {
        return this.ec.verify(t2, e2, this);
      }, Gd.prototype.inspect = function() {
        return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
      };
      var Ld = Bd.assert;
      function Od(t2, e2) {
        if (t2 instanceof Od)
          return t2;
        this._importDER(t2, e2) || (Ld(t2.r && t2.s, "Signature without r or s"), this.r = new pd.default(t2.r, 16), this.s = new pd.default(t2.s, 16), void 0 === t2.recoveryParam ? this.recoveryParam = null : this.recoveryParam = t2.recoveryParam);
      }
      var Yd = Od;
      function Kd() {
        this.place = 0;
      }
      function Jd(t2, e2) {
        var r4 = t2[e2.place++];
        if (!(128 & r4))
          return r4;
        var n2 = 15 & r4;
        if (0 === n2 || n2 > 4)
          return false;
        for (var A2 = 0, i2 = 0, o2 = e2.place; i2 < n2; i2++, o2++)
          A2 <<= 8, A2 |= t2[o2], A2 >>>= 0;
        return !(A2 <= 127) && (e2.place = o2, A2);
      }
      function jd(t2) {
        for (var e2 = 0, r4 = t2.length - 1; !t2[e2] && !(128 & t2[e2 + 1]) && e2 < r4; )
          e2++;
        return 0 === e2 ? t2 : t2.slice(e2);
      }
      function zd(t2, e2) {
        if (e2 < 128)
          t2.push(e2);
        else {
          var r4 = 1 + (Math.log(e2) / Math.LN2 >>> 3);
          for (t2.push(128 | r4); --r4; )
            t2.push(e2 >>> (r4 << 3) & 255);
          t2.push(e2);
        }
      }
      Od.prototype._importDER = function(t2, e2) {
        t2 = Bd.toArray(t2, e2);
        var r4 = new Kd();
        if (48 !== t2[r4.place++])
          return false;
        var n2 = Jd(t2, r4);
        if (false === n2)
          return false;
        if (n2 + r4.place !== t2.length)
          return false;
        if (2 !== t2[r4.place++])
          return false;
        var A2 = Jd(t2, r4);
        if (false === A2)
          return false;
        var i2 = t2.slice(r4.place, A2 + r4.place);
        if (r4.place += A2, 2 !== t2[r4.place++])
          return false;
        var o2 = Jd(t2, r4);
        if (false === o2)
          return false;
        if (t2.length !== o2 + r4.place)
          return false;
        var s2 = t2.slice(r4.place, o2 + r4.place);
        if (0 === i2[0]) {
          if (!(128 & i2[1]))
            return false;
          i2 = i2.slice(1);
        }
        if (0 === s2[0]) {
          if (!(128 & s2[1]))
            return false;
          s2 = s2.slice(1);
        }
        return this.r = new pd.default(i2), this.s = new pd.default(s2), this.recoveryParam = null, true;
      }, Od.prototype.toDER = function(t2) {
        var e2 = this.r.toArray(), r4 = this.s.toArray();
        for (128 & e2[0] && (e2 = [0].concat(e2)), 128 & r4[0] && (r4 = [0].concat(r4)), e2 = jd(e2), r4 = jd(r4); !(r4[0] || 128 & r4[1]); )
          r4 = r4.slice(1);
        var n2 = [2];
        zd(n2, e2.length), (n2 = n2.concat(e2)).push(2), zd(n2, r4.length);
        var A2 = n2.concat(r4), i2 = [48];
        return zd(i2, A2.length), i2 = i2.concat(A2), Bd.encode(i2, t2);
      };
      var qd = function() {
        throw new Error("unsupported");
      };
      var Xd = Bd.assert;
      function Vd(t2) {
        if (!(this instanceof Vd))
          return new Vd(t2);
        "string" == typeof t2 && (Xd(Object.prototype.hasOwnProperty.call(Pd, t2), "Unknown curve " + t2), t2 = Pd[t2]), t2 instanceof Pd.PresetCurve && (t2 = { curve: t2 }), this.curve = t2.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t2.curve.g, this.g.precompute(t2.curve.n.bitLength() + 1), this.hash = t2.hash || t2.curve.hash;
      }
      var Wd = Vd;
      Vd.prototype.keyPair = function(t2) {
        return new Hd(this, t2);
      }, Vd.prototype.keyFromPrivate = function(t2, e2) {
        return Hd.fromPrivate(this, t2, e2);
      }, Vd.prototype.keyFromPublic = function(t2, e2) {
        return Hd.fromPublic(this, t2, e2);
      }, Vd.prototype.genKeyPair = function(t2) {
        t2 || (t2 = {});
        for (var e2 = new Rd({ hash: this.hash, pers: t2.pers, persEnc: t2.persEnc || "utf8", entropy: t2.entropy || qd(this.hash.hmacStrength), entropyEnc: t2.entropy && t2.entropyEnc || "utf8", nonce: this.n.toArray() }), r4 = this.n.byteLength(), n2 = this.n.sub(new pd.default(2)); ; ) {
          var A2 = new pd.default(e2.generate(r4));
          if (!(A2.cmp(n2) > 0))
            return A2.iaddn(1), this.keyFromPrivate(A2);
        }
      }, Vd.prototype._truncateToN = function(t2, e2) {
        var r4 = 8 * t2.byteLength() - this.n.bitLength();
        return r4 > 0 && (t2 = t2.ushrn(r4)), !e2 && t2.cmp(this.n) >= 0 ? t2.sub(this.n) : t2;
      }, Vd.prototype.sign = function(t2, e2, r4, n2) {
        "object" == typeof r4 && (n2 = r4, r4 = null), n2 || (n2 = {}), e2 = this.keyFromPrivate(e2, r4), t2 = this._truncateToN(new pd.default(t2, 16));
        for (var A2 = this.n.byteLength(), i2 = e2.getPrivate().toArray("be", A2), o2 = t2.toArray("be", A2), s2 = new Rd({ hash: this.hash, entropy: i2, nonce: o2, pers: n2.pers, persEnc: n2.persEnc || "utf8" }), a2 = this.n.sub(new pd.default(1)), c2 = 0; ; c2++) {
          var h2 = n2.k ? n2.k(c2) : new pd.default(s2.generate(this.n.byteLength()));
          if (!((h2 = this._truncateToN(h2, true)).cmpn(1) <= 0 || h2.cmp(a2) >= 0)) {
            var g2 = this.g.mul(h2);
            if (!g2.isInfinity()) {
              var u2 = g2.getX(), l2 = u2.umod(this.n);
              if (0 !== l2.cmpn(0)) {
                var f2 = h2.invm(this.n).mul(l2.mul(e2.getPrivate()).iadd(t2));
                if (0 !== (f2 = f2.umod(this.n)).cmpn(0)) {
                  var p2 = (g2.getY().isOdd() ? 1 : 0) | (0 !== u2.cmp(l2) ? 2 : 0);
                  return n2.canonical && f2.cmp(this.nh) > 0 && (f2 = this.n.sub(f2), p2 ^= 1), new Yd({ r: l2, s: f2, recoveryParam: p2 });
                }
              }
            }
          }
        }
      }, Vd.prototype.verify = function(t2, e2, r4, n2) {
        t2 = this._truncateToN(new pd.default(t2, 16)), r4 = this.keyFromPublic(r4, n2);
        var A2 = (e2 = new Yd(e2, "hex")).r, i2 = e2.s;
        if (A2.cmpn(1) < 0 || A2.cmp(this.n) >= 0)
          return false;
        if (i2.cmpn(1) < 0 || i2.cmp(this.n) >= 0)
          return false;
        var o2, s2 = i2.invm(this.n), a2 = s2.mul(t2).umod(this.n), c2 = s2.mul(A2).umod(this.n);
        return this.curve._maxwellTrick ? !(o2 = this.g.jmulAdd(a2, r4.getPublic(), c2)).isInfinity() && o2.eqXToP(A2) : !(o2 = this.g.mulAdd(a2, r4.getPublic(), c2)).isInfinity() && 0 === o2.getX().umod(this.n).cmp(A2);
      }, Vd.prototype.recoverPubKey = function(t2, e2, r4, n2) {
        Xd((3 & r4) === r4, "The recovery param is more than two bits"), e2 = new Yd(e2, n2);
        var A2 = this.n, i2 = new pd.default(t2), o2 = e2.r, s2 = e2.s, a2 = 1 & r4, c2 = r4 >> 1;
        if (o2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && c2)
          throw new Error("Unable to find sencond key candinate");
        o2 = c2 ? this.curve.pointFromX(o2.add(this.curve.n), a2) : this.curve.pointFromX(o2, a2);
        var h2 = e2.r.invm(A2), g2 = A2.sub(i2).mul(h2).umod(A2), u2 = s2.mul(h2).umod(A2);
        return this.g.mulAdd(g2, o2, u2);
      }, Vd.prototype.getKeyRecoveryParam = function(t2, e2, r4, n2) {
        if (null !== (e2 = new Yd(e2, n2)).recoveryParam)
          return e2.recoveryParam;
        for (var A2 = 0; A2 < 4; A2++) {
          var i2;
          try {
            i2 = this.recoverPubKey(t2, e2, A2);
          } catch (t3) {
            continue;
          }
          if (i2.eq(r4))
            return A2;
        }
        throw new Error("Unable to find valid recovery factor");
      };
      var Zd = Id(function(t2, e2) {
        var r4 = e2;
        r4.version = "6.5.4", r4.utils = Bd, r4.rand = function() {
          throw new Error("unsupported");
        }, r4.curve = Fd, r4.curves = Pd, r4.ec = Wd, r4.eddsa = null;
      }).ec;
      Al(), il();
      var $d = new Gl("signing-key/5.7.0");
      var tI = null;
      function eI() {
        return tI || (tI = new Zd("secp256k1")), tI;
      }
      var rI = class {
        constructor(t2) {
          If(this, "curve", "secp256k1"), If(this, "privateKey", Wl(t2)), 32 !== Zl(this.privateKey) && $d.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
          const e2 = eI().keyFromPrivate(jl(this.privateKey));
          If(this, "publicKey", "0x" + e2.getPublic(false, "hex")), If(this, "compressedPublicKey", "0x" + e2.getPublic(true, "hex")), If(this, "_isSigningKey", true);
        }
        _addPoint(t2) {
          const e2 = eI().keyFromPublic(jl(this.publicKey)), r4 = eI().keyFromPublic(jl(t2));
          return "0x" + e2.pub.add(r4.pub).encodeCompressed("hex");
        }
        signDigest(t2) {
          const e2 = eI().keyFromPrivate(jl(this.privateKey)), r4 = jl(t2);
          32 !== r4.length && $d.throwArgumentError("bad digest length", "digest", t2);
          const n2 = e2.sign(r4, { canonical: true });
          return nf({ recoveryParam: n2.recoveryParam, r: rf("0x" + n2.r.toString(16), 32), s: rf("0x" + n2.s.toString(16), 32) });
        }
        computeSharedSecret(t2) {
          const e2 = eI().keyFromPrivate(jl(this.privateKey)), r4 = eI().keyFromPublic(jl(nI(t2)));
          return rf("0x" + e2.derive(r4.getPublic()).toString(16), 32);
        }
        static isSigningKey(t2) {
          return !(!t2 || !t2._isSigningKey);
        }
      };
      function nI(t2, e2) {
        const r4 = jl(t2);
        if (32 === r4.length) {
          const t3 = new rI(r4);
          return e2 ? "0x" + eI().keyFromPrivate(r4).getPublic(true, "hex") : t3.publicKey;
        }
        return 33 === r4.length ? e2 ? Wl(r4) : "0x" + eI().keyFromPublic(r4).getPublic(false, "hex") : 65 === r4.length ? e2 ? "0x" + eI().keyFromPublic(r4).getPublic(true, "hex") : Wl(r4) : $d.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
      }
      Al(), il();
      var AI;
      var iI;
      var oI = new Gl("transactions/5.7.0");
      function sI(t2) {
        return "0x" === t2 ? null : Hp(t2);
      }
      function aI(t2) {
        return "0x" === t2 ? Lf : hf.from(t2);
      }
      function cI(t2, e2) {
        return r4 = function(t3, e3) {
          const r5 = nf(e3), n2 = { r: jl(r5.r), s: jl(r5.s) };
          return "0x" + eI().recoverPubKey(jl(t3), n2, r5.recoveryParam).encode("hex", false);
        }(jl(t2), e2), Hp($l(Yf($l(nI(r4), 1)), 12));
        var r4;
      }
      function hI(t2, e2) {
        const r4 = ql(hf.from(t2).toHexString());
        return r4.length > 32 && oI.throwArgumentError("invalid length for " + e2, "transaction:" + e2, t2), r4;
      }
      function gI(t2, e2) {
        return { address: Hp(t2), storageKeys: (e2 || []).map((e3, r4) => (32 !== Zl(e3) && oI.throwArgumentError("invalid access list storageKey", `accessList[${t2}:${r4}]`, e3), e3.toLowerCase())) };
      }
      function uI(t2) {
        if (Array.isArray(t2))
          return t2.map((t3, e3) => Array.isArray(t3) ? (t3.length > 2 && oI.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${e3}]`, t3), gI(t3[0], t3[1])) : gI(t3.address, t3.storageKeys));
        const e2 = Object.keys(t2).map((e3) => {
          const r4 = t2[e3].reduce((t3, e4) => (t3[e4] = true, t3), {});
          return gI(e3, Object.keys(r4).sort());
        });
        return e2.sort((t3, e3) => t3.address.localeCompare(e3.address)), e2;
      }
      function lI(t2) {
        return uI(t2).map((t3) => [t3.address, t3.storageKeys]);
      }
      function fI(t2, e2) {
        if (null != t2.gasPrice) {
          const e3 = hf.from(t2.gasPrice), r5 = hf.from(t2.maxFeePerGas || 0);
          e3.eq(r5) || oI.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", { gasPrice: e3, maxFeePerGas: r5 });
        }
        const r4 = [hI(t2.chainId || 0, "chainId"), hI(t2.nonce || 0, "nonce"), hI(t2.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"), hI(t2.maxFeePerGas || 0, "maxFeePerGas"), hI(t2.gasLimit || 0, "gasLimit"), null != t2.to ? Hp(t2.to) : "0x", hI(t2.value || 0, "value"), t2.data || "0x", lI(t2.accessList || [])];
        if (e2) {
          const t3 = nf(e2);
          r4.push(hI(t3.recoveryParam, "recoveryParam")), r4.push(ql(t3.r)), r4.push(ql(t3.s));
        }
        return tf(["0x02", Mp(r4)]);
      }
      function pI(t2, e2) {
        const r4 = [hI(t2.chainId || 0, "chainId"), hI(t2.nonce || 0, "nonce"), hI(t2.gasPrice || 0, "gasPrice"), hI(t2.gasLimit || 0, "gasLimit"), null != t2.to ? Hp(t2.to) : "0x", hI(t2.value || 0, "value"), t2.data || "0x", lI(t2.accessList || [])];
        if (e2) {
          const t3 = nf(e2);
          r4.push(hI(t3.recoveryParam, "recoveryParam")), r4.push(ql(t3.r)), r4.push(ql(t3.s));
        }
        return tf(["0x01", Mp(r4)]);
      }
      function dI(t2, e2, r4) {
        try {
          const r5 = aI(e2[0]).toNumber();
          if (0 !== r5 && 1 !== r5)
            throw new Error("bad recid");
          t2.v = r5;
        } catch (t3) {
          oI.throwArgumentError("invalid v for transaction type: 1", "v", e2[0]);
        }
        t2.r = rf(e2[1], 32), t2.s = rf(e2[2], 32);
        try {
          const e3 = Yf(r4(t2));
          t2.from = cI(e3, { r: t2.r, s: t2.s, recoveryParam: t2.v });
        } catch (t3) {
        }
      }
      function II(t2) {
        const e2 = jl(t2);
        if (e2[0] > 127)
          return function(t3) {
            const e3 = Pp(t3);
            9 !== e3.length && 6 !== e3.length && oI.throwArgumentError("invalid raw transaction", "rawTransaction", t3);
            const r4 = { nonce: aI(e3[0]).toNumber(), gasPrice: aI(e3[1]), gasLimit: aI(e3[2]), to: sI(e3[3]), value: aI(e3[4]), data: e3[5], chainId: 0 };
            if (6 === e3.length)
              return r4;
            try {
              r4.v = hf.from(e3[6]).toNumber();
            } catch (t4) {
              return r4;
            }
            if (r4.r = rf(e3[7], 32), r4.s = rf(e3[8], 32), hf.from(r4.r).isZero() && hf.from(r4.s).isZero())
              r4.chainId = r4.v, r4.v = 0;
            else {
              r4.chainId = Math.floor((r4.v - 35) / 2), r4.chainId < 0 && (r4.chainId = 0);
              let n2 = r4.v - 27;
              const A2 = e3.slice(0, 6);
              0 !== r4.chainId && (A2.push(Wl(r4.chainId)), A2.push("0x"), A2.push("0x"), n2 -= 2 * r4.chainId + 8);
              const i2 = Yf(Mp(A2));
              try {
                r4.from = cI(i2, { r: Wl(r4.r), s: Wl(r4.s), recoveryParam: n2 });
              } catch (t4) {
              }
              r4.hash = Yf(t3);
            }
            return r4.type = null, r4;
          }(e2);
        switch (e2[0]) {
          case 1:
            return function(t3) {
              const e3 = Pp(t3.slice(1));
              8 !== e3.length && 11 !== e3.length && oI.throwArgumentError("invalid component count for transaction type: 1", "payload", Wl(t3));
              const r4 = { type: 1, chainId: aI(e3[0]).toNumber(), nonce: aI(e3[1]).toNumber(), gasPrice: aI(e3[2]), gasLimit: aI(e3[3]), to: sI(e3[4]), value: aI(e3[5]), data: e3[6], accessList: uI(e3[7]) };
              return 8 === e3.length || (r4.hash = Yf(t3), dI(r4, e3.slice(8), pI)), r4;
            }(e2);
          case 2:
            return function(t3) {
              const e3 = Pp(t3.slice(1));
              9 !== e3.length && 12 !== e3.length && oI.throwArgumentError("invalid component count for transaction type: 2", "payload", Wl(t3));
              const r4 = aI(e3[2]), n2 = aI(e3[3]), A2 = { type: 2, chainId: aI(e3[0]).toNumber(), nonce: aI(e3[1]).toNumber(), maxPriorityFeePerGas: r4, maxFeePerGas: n2, gasPrice: null, gasLimit: aI(e3[4]), to: sI(e3[5]), value: aI(e3[6]), data: e3[7], accessList: uI(e3[8]) };
              return 9 === e3.length || (A2.hash = Yf(t3), dI(A2, e3.slice(9), fI)), A2;
            }(e2);
        }
        return oI.throwError(`unsupported transaction type: ${e2[0]}`, Gl.errors.UNSUPPORTED_OPERATION, { operation: "parseTransaction", transactionType: e2[0] });
      }
      (iI = AI || (AI = {}))[iI.legacy = 0] = "legacy", iI[iI.eip2930 = 1] = "eip2930", iI[iI.eip1559 = 2] = "eip1559";
      var yI = new Gl(fd);
      var CI = class t2 {
        constructor() {
          this.formats = this.getDefaultFormats();
        }
        getDefaultFormats() {
          const e2 = {}, r4 = this.address.bind(this), n2 = this.bigNumber.bind(this), A2 = this.blockTag.bind(this), i2 = this.data.bind(this), o2 = this.hash.bind(this), s2 = this.hex.bind(this), a2 = this.number.bind(this), c2 = this.type.bind(this);
          return e2.transaction = { hash: o2, type: c2, accessList: t2.allowNull(this.accessList.bind(this), null), blockHash: t2.allowNull(o2, null), blockNumber: t2.allowNull(a2, null), transactionIndex: t2.allowNull(a2, null), confirmations: t2.allowNull(a2, null), from: r4, gasPrice: t2.allowNull(n2), maxPriorityFeePerGas: t2.allowNull(n2), maxFeePerGas: t2.allowNull(n2), gasLimit: n2, to: t2.allowNull(r4, null), value: n2, nonce: a2, data: i2, r: t2.allowNull(this.uint256), s: t2.allowNull(this.uint256), v: t2.allowNull(a2), creates: t2.allowNull(r4, null), raw: t2.allowNull(i2) }, e2.transactionRequest = { from: t2.allowNull(r4), nonce: t2.allowNull(a2), gasLimit: t2.allowNull(n2), gasPrice: t2.allowNull(n2), maxPriorityFeePerGas: t2.allowNull(n2), maxFeePerGas: t2.allowNull(n2), to: t2.allowNull(r4), value: t2.allowNull(n2), data: t2.allowNull((t3) => this.data(t3, true)), type: t2.allowNull(a2), accessList: t2.allowNull(this.accessList.bind(this), null) }, e2.receiptLog = { transactionIndex: a2, blockNumber: a2, transactionHash: o2, address: r4, topics: t2.arrayOf(o2), data: i2, logIndex: a2, blockHash: o2 }, e2.receipt = { to: t2.allowNull(this.address, null), from: t2.allowNull(this.address, null), contractAddress: t2.allowNull(r4, null), transactionIndex: a2, root: t2.allowNull(s2), gasUsed: n2, logsBloom: t2.allowNull(i2), blockHash: o2, transactionHash: o2, logs: t2.arrayOf(this.receiptLog.bind(this)), blockNumber: a2, confirmations: t2.allowNull(a2, null), cumulativeGasUsed: n2, effectiveGasPrice: t2.allowNull(n2), status: t2.allowNull(a2), type: c2 }, e2.block = { hash: t2.allowNull(o2), parentHash: o2, number: a2, timestamp: a2, nonce: t2.allowNull(s2), difficulty: this.difficulty.bind(this), gasLimit: n2, gasUsed: n2, miner: t2.allowNull(r4), extraData: i2, transactions: t2.allowNull(t2.arrayOf(o2)), baseFeePerGas: t2.allowNull(n2) }, e2.blockWithTransactions = mf(e2.block), e2.blockWithTransactions.transactions = t2.allowNull(t2.arrayOf(this.transactionResponse.bind(this))), e2.filter = { fromBlock: t2.allowNull(A2, void 0), toBlock: t2.allowNull(A2, void 0), blockHash: t2.allowNull(o2, void 0), address: t2.allowNull(r4, void 0), topics: t2.allowNull(this.topics.bind(this), void 0) }, e2.filterLog = { blockNumber: t2.allowNull(a2), blockHash: t2.allowNull(o2), transactionIndex: a2, removed: t2.allowNull(this.boolean.bind(this)), address: r4, data: t2.allowFalsish(i2, "0x"), topics: t2.arrayOf(o2), transactionHash: o2, logIndex: a2 }, e2;
        }
        accessList(t3) {
          return uI(t3 || []);
        }
        number(t3) {
          return "0x" === t3 ? 0 : hf.from(t3).toNumber();
        }
        type(t3) {
          return "0x" === t3 || null == t3 ? 0 : hf.from(t3).toNumber();
        }
        bigNumber(t3) {
          return hf.from(t3);
        }
        boolean(t3) {
          if ("boolean" == typeof t3)
            return t3;
          if ("string" == typeof t3) {
            if ("true" === (t3 = t3.toLowerCase()))
              return true;
            if ("false" === t3)
              return false;
          }
          throw new Error("invalid boolean - " + t3);
        }
        hex(t3, e2) {
          return "string" == typeof t3 && (e2 || "0x" === t3.substring(0, 2) || (t3 = "0x" + t3), Xl(t3)) ? t3.toLowerCase() : yI.throwArgumentError("invalid hash", "value", t3);
        }
        data(t3, e2) {
          const r4 = this.hex(t3, e2);
          if (r4.length % 2 != 0)
            throw new Error("invalid data; odd-length - " + t3);
          return r4;
        }
        address(t3) {
          return Hp(t3);
        }
        callAddress(t3) {
          if (!Xl(t3, 32))
            return null;
          const e2 = Hp($l(t3, 12));
          return "0x0000000000000000000000000000000000000000" === e2 ? null : e2;
        }
        contractAddress(t3) {
          return function(t4) {
            let e2 = null;
            try {
              e2 = Hp(t4.from);
            } catch (e3) {
              Tp.throwArgumentError("missing from address", "transaction", t4);
            }
            return Hp($l(Yf(Mp([e2, ql(jl(hf.from(t4.nonce).toHexString()))])), 12));
          }(t3);
        }
        blockTag(t3) {
          if (null == t3)
            return "latest";
          if ("earliest" === t3)
            return "0x0";
          switch (t3) {
            case "earliest":
              return "0x0";
            case "latest":
            case "pending":
            case "safe":
            case "finalized":
              return t3;
          }
          if ("number" == typeof t3 || Xl(t3))
            return ef(t3);
          throw new Error("invalid blockTag");
        }
        hash(t3, e2) {
          const r4 = this.hex(t3, e2);
          return 32 !== Zl(r4) ? yI.throwArgumentError("invalid hash", "value", t3) : r4;
        }
        difficulty(t3) {
          if (null == t3)
            return null;
          const e2 = hf.from(t3);
          try {
            return e2.toNumber();
          } catch (t4) {
          }
          return null;
        }
        uint256(t3) {
          if (!Xl(t3))
            throw new Error("invalid uint256");
          return rf(t3, 32);
        }
        _block(e2, r4) {
          null != e2.author && null == e2.miner && (e2.miner = e2.author);
          const n2 = null != e2._difficulty ? e2._difficulty : e2.difficulty, A2 = t2.check(r4, e2);
          return A2._difficulty = null == n2 ? null : hf.from(n2), A2;
        }
        block(t3) {
          return this._block(t3, this.formats.block);
        }
        blockWithTransactions(t3) {
          return this._block(t3, this.formats.blockWithTransactions);
        }
        transactionRequest(e2) {
          return t2.check(this.formats.transactionRequest, e2);
        }
        transactionResponse(e2) {
          null != e2.gas && null == e2.gasLimit && (e2.gasLimit = e2.gas), e2.to && hf.from(e2.to).isZero() && (e2.to = "0x0000000000000000000000000000000000000000"), null != e2.input && null == e2.data && (e2.data = e2.input), null == e2.to && null == e2.creates && (e2.creates = this.contractAddress(e2)), 1 !== e2.type && 2 !== e2.type || null != e2.accessList || (e2.accessList = []);
          const r4 = t2.check(this.formats.transaction, e2);
          if (null != e2.chainId) {
            let t3 = e2.chainId;
            Xl(t3) && (t3 = hf.from(t3).toNumber()), r4.chainId = t3;
          } else {
            let t3 = e2.networkId;
            null == t3 && null == r4.v && (t3 = e2.chainId), Xl(t3) && (t3 = hf.from(t3).toNumber()), "number" != typeof t3 && null != r4.v && (t3 = (r4.v - 35) / 2, t3 < 0 && (t3 = 0), t3 = parseInt(t3)), "number" != typeof t3 && (t3 = 0), r4.chainId = t3;
          }
          return r4.blockHash && "x" === r4.blockHash.replace(/0/g, "") && (r4.blockHash = null), r4;
        }
        transaction(t3) {
          return II(t3);
        }
        receiptLog(e2) {
          return t2.check(this.formats.receiptLog, e2);
        }
        receipt(e2) {
          const r4 = t2.check(this.formats.receipt, e2);
          if (null != r4.root)
            if (r4.root.length <= 4) {
              const t3 = hf.from(r4.root).toNumber();
              0 === t3 || 1 === t3 ? (null != r4.status && r4.status !== t3 && yI.throwArgumentError("alt-root-status/status mismatch", "value", { root: r4.root, status: r4.status }), r4.status = t3, delete r4.root) : yI.throwArgumentError("invalid alt-root-status", "value.root", r4.root);
            } else
              66 !== r4.root.length && yI.throwArgumentError("invalid root hash", "value.root", r4.root);
          return null != r4.status && (r4.byzantium = true), r4;
        }
        topics(t3) {
          return Array.isArray(t3) ? t3.map((t4) => this.topics(t4)) : null != t3 ? this.hash(t3, true) : null;
        }
        filter(e2) {
          return t2.check(this.formats.filter, e2);
        }
        filterLog(e2) {
          return t2.check(this.formats.filterLog, e2);
        }
        static check(t3, e2) {
          const r4 = {};
          for (const n2 in t3)
            try {
              const A2 = t3[n2](e2[n2]);
              void 0 !== A2 && (r4[n2] = A2);
            } catch (t4) {
              throw t4.checkKey = n2, t4.checkValue = e2[n2], t4;
            }
          return r4;
        }
        static allowNull(t3, e2) {
          return function(r4) {
            return null == r4 ? e2 : t3(r4);
          };
        }
        static allowFalsish(t3, e2) {
          return function(r4) {
            return r4 ? t3(r4) : e2;
          };
        }
        static arrayOf(t3) {
          return function(e2) {
            if (!Array.isArray(e2))
              throw new Error("not an array");
            const r4 = [];
            return e2.forEach(function(e3) {
              r4.push(t3(e3));
            }), r4;
          };
        }
      };
      var mI = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var BI = new Gl(fd);
      function EI(t2) {
        return null == t2 ? "null" : (32 !== Zl(t2) && BI.throwArgumentError("invalid topic", "topic", t2), t2.toLowerCase());
      }
      function wI(t2) {
        for (t2 = t2.slice(); t2.length > 0 && null == t2[t2.length - 1]; )
          t2.pop();
        return t2.map((t3) => {
          if (Array.isArray(t3)) {
            const e2 = {};
            t3.forEach((t4) => {
              e2[EI(t4)] = true;
            });
            const r4 = Object.keys(e2);
            return r4.sort(), r4.join("|");
          }
          return EI(t3);
        }).join("&");
      }
      function vI(t2) {
        if ("string" == typeof t2) {
          if (32 === Zl(t2 = t2.toLowerCase()))
            return "tx:" + t2;
          if (-1 === t2.indexOf(":"))
            return t2;
        } else {
          if (Array.isArray(t2))
            return "filter:*:" + wI(t2);
          if (kf.isForkEvent(t2))
            throw BI.warn("not implemented"), new Error("not implemented");
          if (t2 && "object" == typeof t2)
            return "filter:" + (t2.address || "*") + ":" + wI(t2.topics || []);
        }
        throw new Error("invalid event - " + t2);
      }
      function _I() {
        return (/* @__PURE__ */ new Date()).getTime();
      }
      function QI(t2) {
        return new Promise((e2) => {
          setTimeout(e2, t2);
        });
      }
      var bI = ["block", "network", "pending", "poll"];
      var kI = class {
        constructor(t2, e2, r4) {
          If(this, "tag", t2), If(this, "listener", e2), If(this, "once", r4), this._lastBlockNumber = -2, this._inflight = false;
        }
        get event() {
          switch (this.type) {
            case "tx":
              return this.hash;
            case "filter":
              return this.filter;
          }
          return this.tag;
        }
        get type() {
          return this.tag.split(":")[0];
        }
        get hash() {
          const t2 = this.tag.split(":");
          return "tx" !== t2[0] ? null : t2[1];
        }
        get filter() {
          const t2 = this.tag.split(":");
          if ("filter" !== t2[0])
            return null;
          const e2 = t2[1], r4 = "" === (n2 = t2[2]) ? [] : n2.split(/&/g).map((t3) => {
            if ("" === t3)
              return [];
            const e3 = t3.split("|").map((t4) => "null" === t4 ? null : t4);
            return 1 === e3.length ? e3[0] : e3;
          });
          var n2;
          const A2 = {};
          return r4.length > 0 && (A2.topics = r4), e2 && "*" !== e2 && (A2.address = e2), A2;
        }
        pollable() {
          return this.tag.indexOf(":") >= 0 || bI.indexOf(this.tag) >= 0;
        }
      };
      var DI = { 0: { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" }, 2: { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" }, 3: { symbol: "doge", p2pkh: 30, p2sh: 22 }, 60: { symbol: "eth", ilk: "eth" }, 61: { symbol: "etc", ilk: "eth" }, 700: { symbol: "xdai", ilk: "eth" } };
      function SI(t2) {
        return rf(hf.from(t2).toHexString(), 32);
      }
      function NI(t2) {
        return Hf.encode(zl([t2, $l(Ad(Ad(t2)), 0, 4)]));
      }
      var MI = new RegExp("^(ipfs)://(.*)$", "i");
      var xI = [new RegExp("^(https)://(.*)$", "i"), new RegExp("^(data):(.*)$", "i"), MI, new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")];
      function FI(t2, e2) {
        try {
          return $f(PI(t2, e2));
        } catch (t3) {
        }
        return null;
      }
      function PI(t2, e2) {
        if ("0x" === t2)
          return null;
        const r4 = hf.from($l(t2, e2, e2 + 32)).toNumber(), n2 = hf.from($l(t2, r4, r4 + 32)).toNumber();
        return $l(t2, r4 + 32, r4 + 32 + n2);
      }
      function TI(t2) {
        return t2.match(/^ipfs:\/\/ipfs\//i) ? t2 = t2.substring(12) : t2.match(/^ipfs:\/\//i) ? t2 = t2.substring(7) : BI.throwArgumentError("unsupported IPFS format", "link", t2), `https://gateway.ipfs.io/ipfs/${t2}`;
      }
      function RI(t2) {
        const e2 = jl(t2);
        if (e2.length > 32)
          throw new Error("internal; should not happen");
        const r4 = new Uint8Array(32);
        return r4.set(e2, 32 - e2.length), r4;
      }
      function UI(t2) {
        if (t2.length % 32 == 0)
          return t2;
        const e2 = new Uint8Array(32 * Math.ceil(t2.length / 32));
        return e2.set(t2), e2;
      }
      function GI(t2) {
        const e2 = [];
        let r4 = 0;
        for (let n2 = 0; n2 < t2.length; n2++)
          e2.push(null), r4 += 32;
        for (let n2 = 0; n2 < t2.length; n2++) {
          const A2 = jl(t2[n2]);
          e2[n2] = RI(r4), e2.push(RI(A2.length)), e2.push(UI(A2)), r4 += 32 + 32 * Math.ceil(A2.length / 32);
        }
        return tf(e2);
      }
      var HI = class {
        constructor(t2, e2, r4, n2) {
          If(this, "provider", t2), If(this, "name", r4), If(this, "address", t2.formatter.address(e2)), If(this, "_resolvedAddress", n2);
        }
        supportsWildcard() {
          return this._supportsEip2544 || (this._supportsEip2544 = this.provider.call({ to: this.address, data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000" }).then((t2) => hf.from(t2).eq(1)).catch((t2) => {
            if (t2.code === Gl.errors.CALL_EXCEPTION)
              return false;
            throw this._supportsEip2544 = null, t2;
          })), this._supportsEip2544;
        }
        _fetch(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            const r4 = { to: this.address, ccipReadEnabled: true, data: tf([t2, bp(this.name), e2 || "0x"]) };
            let n2 = false;
            var A2;
            (yield this.supportsWildcard()) && (n2 = true, r4.data = tf(["0x9061b923", GI([(A2 = this.name, Wl(zl(Qp(A2).map((t3) => {
              if (t3.length > 63)
                throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
              const e3 = new Uint8Array(t3.length + 1);
              return e3.set(t3, 1), e3[0] = e3.length - 1, e3;
            }))) + "00"), r4.data])]));
            try {
              let t3 = yield this.provider.call(r4);
              return jl(t3).length % 32 == 4 && BI.throwError("resolver threw error", Gl.errors.CALL_EXCEPTION, { transaction: r4, data: t3 }), n2 && (t3 = PI(t3, 0)), t3;
            } catch (t3) {
              if (t3.code === Gl.errors.CALL_EXCEPTION)
                return null;
              throw t3;
            }
          });
        }
        _fetchBytes(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            const r4 = yield this._fetch(t2, e2);
            return null != r4 ? PI(r4, 0) : null;
          });
        }
        _getAddress(t2, e2) {
          const r4 = DI[String(t2)];
          if (null == r4 && BI.throwError(`unsupported coin type: ${t2}`, Gl.errors.UNSUPPORTED_OPERATION, { operation: `getAddress(${t2})` }), "eth" === r4.ilk)
            return this.provider.formatter.address(e2);
          const n2 = jl(e2);
          if (null != r4.p2pkh) {
            const t3 = e2.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
            if (t3) {
              const e3 = parseInt(t3[1], 16);
              if (t3[2].length === 2 * e3 && e3 >= 1 && e3 <= 75)
                return NI(zl([[r4.p2pkh], "0x" + t3[2]]));
            }
          }
          if (null != r4.p2sh) {
            const t3 = e2.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
            if (t3) {
              const e3 = parseInt(t3[1], 16);
              if (t3[2].length === 2 * e3 && e3 >= 1 && e3 <= 75)
                return NI(zl([[r4.p2sh], "0x" + t3[2]]));
            }
          }
          if (null != r4.prefix) {
            const t3 = n2[1];
            let e3 = n2[0];
            if (0 === e3 ? 20 !== t3 && 32 !== t3 && (e3 = -1) : e3 = -1, e3 >= 0 && n2.length === 2 + t3 && t3 >= 1 && t3 <= 75) {
              const t4 = ld.default.toWords(n2.slice(2));
              return t4.unshift(e3), ld.default.encode(r4.prefix, t4);
            }
          }
          return null;
        }
        getAddress(t2) {
          return mI(this, void 0, void 0, function* () {
            if (null == t2 && (t2 = 60), 60 === t2)
              try {
                const t3 = yield this._fetch("0x3b3b57de");
                return "0x" === t3 || "0x0000000000000000000000000000000000000000000000000000000000000000" === t3 ? null : this.provider.formatter.callAddress(t3);
              } catch (t3) {
                if (t3.code === Gl.errors.CALL_EXCEPTION)
                  return null;
                throw t3;
              }
            const e2 = yield this._fetchBytes("0xf1cb7e06", SI(t2));
            if (null == e2 || "0x" === e2)
              return null;
            const r4 = this._getAddress(t2, e2);
            return null == r4 && BI.throwError("invalid or unsupported coin data", Gl.errors.UNSUPPORTED_OPERATION, { operation: `getAddress(${t2})`, coinType: t2, data: e2 }), r4;
          });
        }
        getAvatar() {
          return mI(this, void 0, void 0, function* () {
            const t2 = [{ type: "name", content: this.name }];
            try {
              const e2 = yield this.getText("avatar");
              if (null == e2)
                return null;
              for (let r4 = 0; r4 < xI.length; r4++) {
                const n2 = e2.match(xI[r4]);
                if (null == n2)
                  continue;
                const A2 = n2[1].toLowerCase();
                switch (A2) {
                  case "https":
                    return t2.push({ type: "url", content: e2 }), { linkage: t2, url: e2 };
                  case "data":
                    return t2.push({ type: "data", content: e2 }), { linkage: t2, url: e2 };
                  case "ipfs":
                    return t2.push({ type: "ipfs", content: e2 }), { linkage: t2, url: TI(e2) };
                  case "erc721":
                  case "erc1155": {
                    const r5 = "erc721" === A2 ? "0xc87b56dd" : "0x0e89341c";
                    t2.push({ type: A2, content: e2 });
                    const i2 = this._resolvedAddress || (yield this.getAddress()), o2 = (n2[2] || "").split("/");
                    if (2 !== o2.length)
                      return null;
                    const s2 = yield this.provider.formatter.address(o2[0]), a2 = rf(hf.from(o2[1]).toHexString(), 32);
                    if ("erc721" === A2) {
                      const e3 = this.provider.formatter.callAddress(yield this.provider.call({ to: s2, data: tf(["0x6352211e", a2]) }));
                      if (i2 !== e3)
                        return null;
                      t2.push({ type: "owner", content: e3 });
                    } else if ("erc1155" === A2) {
                      const e3 = hf.from(yield this.provider.call({ to: s2, data: tf(["0x00fdd58e", rf(i2, 32), a2]) }));
                      if (e3.isZero())
                        return null;
                      t2.push({ type: "balance", content: e3.toString() });
                    }
                    const c2 = { to: this.provider.formatter.address(o2[0]), data: tf([r5, a2]) };
                    let h2 = FI(yield this.provider.call(c2), 0);
                    if (null == h2)
                      return null;
                    t2.push({ type: "metadata-url-base", content: h2 }), "erc1155" === A2 && (h2 = h2.replace("{id}", a2.substring(2)), t2.push({ type: "metadata-url-expanded", content: h2 })), h2.match(/^ipfs:/i) && (h2 = TI(h2)), t2.push({ type: "metadata-url", content: h2 });
                    const g2 = yield gd(h2);
                    if (!g2)
                      return null;
                    t2.push({ type: "metadata", content: JSON.stringify(g2) });
                    let u2 = g2.image;
                    if ("string" != typeof u2)
                      return null;
                    if (u2.match(/^(https:\/\/|data:)/i))
                      ;
                    else {
                      if (null == u2.match(MI))
                        return null;
                      t2.push({ type: "url-ipfs", content: u2 }), u2 = TI(u2);
                    }
                    return t2.push({ type: "url", content: u2 }), { linkage: t2, url: u2 };
                  }
                }
              }
            } catch (t3) {
            }
            return null;
          });
        }
        getContentHash() {
          return mI(this, void 0, void 0, function* () {
            const t2 = yield this._fetchBytes("0xbc1c58d1");
            if (null == t2 || "0x" === t2)
              return null;
            const e2 = t2.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (e2) {
              const t3 = parseInt(e2[3], 16);
              if (e2[4].length === 2 * t3)
                return "ipfs://" + Hf.encode("0x" + e2[1]);
            }
            const r4 = t2.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
            if (r4) {
              const t3 = parseInt(r4[3], 16);
              if (r4[4].length === 2 * t3)
                return "ipns://" + Hf.encode("0x" + r4[1]);
            }
            const n2 = t2.match(/^0xe40101fa011b20([0-9a-f]*)$/);
            if (n2 && 64 === n2[1].length)
              return "bzz://" + n2[1];
            const A2 = t2.match(/^0x90b2c605([0-9a-f]*)$/);
            if (A2 && 68 === A2[1].length) {
              const t3 = { "=": "", "+": "-", "/": "_" };
              return "sia://" + Uf("0x" + A2[1]).replace(/[=+\/]/g, (e3) => t3[e3]);
            }
            return BI.throwError("invalid or unsupported content hash data", Gl.errors.UNSUPPORTED_OPERATION, { operation: "getContentHash()", data: t2 });
          });
        }
        getText(t2) {
          return mI(this, void 0, void 0, function* () {
            let e2 = Zf(t2);
            e2 = zl([SI(64), SI(e2.length), e2]), e2.length % 32 != 0 && (e2 = zl([e2, rf("0x", 32 - t2.length % 32)]));
            const r4 = yield this._fetchBytes("0x59d1d43c", Wl(e2));
            return null == r4 || "0x" === r4 ? null : $f(r4);
          });
        }
      };
      var LI = null;
      var OI = 1;
      var YI = class extends Df {
        constructor(t2) {
          if (super(), this._events = [], this._emitted = { block: -2 }, this.disableCcipRead = false, this.formatter = new.target.getFormatter(), If(this, "anyNetwork", "any" === t2), this.anyNetwork && (t2 = this.detectNetwork()), t2 instanceof Promise)
            this._networkPromise = t2, t2.catch((t3) => {
            }), this._ready().catch((t3) => {
            });
          else {
            const e2 = yf(new.target, "getNetwork")(t2);
            e2 ? (If(this, "_network", e2), this.emit("network", e2, null)) : BI.throwArgumentError("invalid network", "network", t2);
          }
          this._maxInternalBlockNumber = -1024, this._lastBlockNumber = -2, this._maxFilterBlockRange = 10, this._pollingInterval = 4e3, this._fastQueryDate = 0;
        }
        _ready() {
          return mI(this, void 0, void 0, function* () {
            if (null == this._network) {
              let t2 = null;
              if (this._networkPromise)
                try {
                  t2 = yield this._networkPromise;
                } catch (t3) {
                }
              null == t2 && (t2 = yield this.detectNetwork()), t2 || BI.throwError("no network detected", Gl.errors.UNKNOWN_ERROR, {}), null == this._network && (this.anyNetwork ? this._network = t2 : If(this, "_network", t2), this.emit("network", t2, null));
            }
            return this._network;
          });
        }
        get ready() {
          return ud(() => this._ready().then((t2) => t2, (t2) => {
            if (t2.code !== Gl.errors.NETWORK_ERROR || "noNetwork" !== t2.event)
              throw t2;
          }));
        }
        static getFormatter() {
          return null == LI && (LI = new CI()), LI;
        }
        static getNetwork(t2) {
          return function(t3) {
            if (null == t3)
              return null;
            if ("number" == typeof t3) {
              for (const e3 in Tf) {
                const r5 = Tf[e3];
                if (r5.chainId === t3)
                  return { name: r5.name, chainId: r5.chainId, ensAddress: r5.ensAddress || null, _defaultProvider: r5._defaultProvider || null };
              }
              return { chainId: t3, name: "unknown" };
            }
            if ("string" == typeof t3) {
              const e3 = Tf[t3];
              return null == e3 ? null : { name: e3.name, chainId: e3.chainId, ensAddress: e3.ensAddress, _defaultProvider: e3._defaultProvider || null };
            }
            const e2 = Tf[t3.name];
            if (!e2)
              return "number" != typeof t3.chainId && Sf.throwArgumentError("invalid network chainId", "network", t3), t3;
            0 !== t3.chainId && t3.chainId !== e2.chainId && Sf.throwArgumentError("network chainId mismatch", "network", t3);
            let r4 = t3._defaultProvider || null;
            var n2;
            return null == r4 && e2._defaultProvider && (r4 = (n2 = e2._defaultProvider) && "function" == typeof n2.renetwork ? e2._defaultProvider.renetwork(t3) : e2._defaultProvider), { name: t3.name, chainId: e2.chainId, ensAddress: t3.ensAddress || e2.ensAddress || null, _defaultProvider: r4 };
          }(null == t2 ? "homestead" : t2);
        }
        ccipReadFetch(t2, e2, r4) {
          return mI(this, void 0, void 0, function* () {
            if (this.disableCcipRead || 0 === r4.length)
              return null;
            const n2 = t2.to.toLowerCase(), A2 = e2.toLowerCase(), i2 = [];
            for (let t3 = 0; t3 < r4.length; t3++) {
              const e3 = r4[t3], o2 = e3.replace("{sender}", n2).replace("{data}", A2), s2 = e3.indexOf("{data}") >= 0 ? null : JSON.stringify({ data: A2, sender: n2 }), a2 = yield gd({ url: o2, errorPassThrough: true }, s2, (t4, e4) => (t4.status = e4.statusCode, t4));
              if (a2.data)
                return a2.data;
              const c2 = a2.message || "unknown error";
              if (a2.status >= 400 && a2.status < 500)
                return BI.throwError(`response not found during CCIP fetch: ${c2}`, Gl.errors.SERVER_ERROR, { url: e3, errorMessage: c2 });
              i2.push(c2);
            }
            return BI.throwError(`error encountered during CCIP fetch: ${i2.map((t3) => JSON.stringify(t3)).join(", ")}`, Gl.errors.SERVER_ERROR, { urls: r4, errorMessages: i2 });
          });
        }
        _getInternalBlockNumber(t2) {
          return mI(this, void 0, void 0, function* () {
            if (yield this._ready(), t2 > 0)
              for (; this._internalBlockNumber; ) {
                const e3 = this._internalBlockNumber;
                try {
                  const r5 = yield e3;
                  if (_I() - r5.respTime <= t2)
                    return r5.blockNumber;
                  break;
                } catch (t3) {
                  if (this._internalBlockNumber === e3)
                    break;
                }
              }
            const e2 = _I(), r4 = Cf({ blockNumber: this.perform("getBlockNumber", {}), networkError: this.getNetwork().then((t3) => null, (t3) => t3) }).then(({ blockNumber: t3, networkError: n2 }) => {
              if (n2)
                throw this._internalBlockNumber === r4 && (this._internalBlockNumber = null), n2;
              const A2 = _I();
              return (t3 = hf.from(t3).toNumber()) < this._maxInternalBlockNumber && (t3 = this._maxInternalBlockNumber), this._maxInternalBlockNumber = t3, this._setFastBlockNumber(t3), { blockNumber: t3, reqTime: e2, respTime: A2 };
            });
            return this._internalBlockNumber = r4, r4.catch((t3) => {
              this._internalBlockNumber === r4 && (this._internalBlockNumber = null);
            }), (yield r4).blockNumber;
          });
        }
        poll() {
          return mI(this, void 0, void 0, function* () {
            const t2 = OI++, e2 = [];
            let r4 = null;
            try {
              r4 = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
            } catch (t3) {
              return void this.emit("error", t3);
            }
            if (this._setFastBlockNumber(r4), this.emit("poll", t2, r4), r4 !== this._lastBlockNumber) {
              if (-2 === this._emitted.block && (this._emitted.block = r4 - 1), Math.abs(this._emitted.block - r4) > 1e3)
                BI.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${r4})`), this.emit("error", BI.makeError("network block skew detected", Gl.errors.NETWORK_ERROR, { blockNumber: r4, event: "blockSkew", previousBlockNumber: this._emitted.block })), this.emit("block", r4);
              else
                for (let t3 = this._emitted.block + 1; t3 <= r4; t3++)
                  this.emit("block", t3);
              this._emitted.block !== r4 && (this._emitted.block = r4, Object.keys(this._emitted).forEach((t3) => {
                if ("block" === t3)
                  return;
                const e3 = this._emitted[t3];
                "pending" !== e3 && r4 - e3 > 12 && delete this._emitted[t3];
              })), -2 === this._lastBlockNumber && (this._lastBlockNumber = r4 - 1), this._events.forEach((t3) => {
                switch (t3.type) {
                  case "tx": {
                    const r5 = t3.hash;
                    let n2 = this.getTransactionReceipt(r5).then((t4) => t4 && null != t4.blockNumber ? (this._emitted["t:" + r5] = t4.blockNumber, this.emit(r5, t4), null) : null).catch((t4) => {
                      this.emit("error", t4);
                    });
                    e2.push(n2);
                    break;
                  }
                  case "filter":
                    if (!t3._inflight) {
                      t3._inflight = true, -2 === t3._lastBlockNumber && (t3._lastBlockNumber = r4 - 1);
                      const n2 = t3.filter;
                      n2.fromBlock = t3._lastBlockNumber + 1, n2.toBlock = r4;
                      const A2 = n2.toBlock - this._maxFilterBlockRange;
                      A2 > n2.fromBlock && (n2.fromBlock = A2), n2.fromBlock < 0 && (n2.fromBlock = 0);
                      const i2 = this.getLogs(n2).then((e3) => {
                        t3._inflight = false, 0 !== e3.length && e3.forEach((e4) => {
                          e4.blockNumber > t3._lastBlockNumber && (t3._lastBlockNumber = e4.blockNumber), this._emitted["b:" + e4.blockHash] = e4.blockNumber, this._emitted["t:" + e4.transactionHash] = e4.blockNumber, this.emit(n2, e4);
                        });
                      }).catch((e3) => {
                        this.emit("error", e3), t3._inflight = false;
                      });
                      e2.push(i2);
                    }
                }
              }), this._lastBlockNumber = r4, Promise.all(e2).then(() => {
                this.emit("didPoll", t2);
              }).catch((t3) => {
                this.emit("error", t3);
              });
            } else
              this.emit("didPoll", t2);
          });
        }
        resetEventsBlock(t2) {
          this._lastBlockNumber = t2 - 1, this.polling && this.poll();
        }
        get network() {
          return this._network;
        }
        detectNetwork() {
          return mI(this, void 0, void 0, function* () {
            return BI.throwError("provider does not support network detection", Gl.errors.UNSUPPORTED_OPERATION, { operation: "provider.detectNetwork" });
          });
        }
        getNetwork() {
          return mI(this, void 0, void 0, function* () {
            const t2 = yield this._ready(), e2 = yield this.detectNetwork();
            if (t2.chainId !== e2.chainId) {
              if (this.anyNetwork)
                return this._network = e2, this._lastBlockNumber = -2, this._fastBlockNumber = null, this._fastBlockNumberPromise = null, this._fastQueryDate = 0, this._emitted.block = -2, this._maxInternalBlockNumber = -1024, this._internalBlockNumber = null, this.emit("network", e2, t2), yield QI(0), this._network;
              const r4 = BI.makeError("underlying network changed", Gl.errors.NETWORK_ERROR, { event: "changed", network: t2, detectedNetwork: e2 });
              throw this.emit("error", r4), r4;
            }
            return t2;
          });
        }
        get blockNumber() {
          return this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((t2) => {
            this._setFastBlockNumber(t2);
          }, (t2) => {
          }), null != this._fastBlockNumber ? this._fastBlockNumber : -1;
        }
        get polling() {
          return null != this._poller;
        }
        set polling(t2) {
          t2 && !this._poller ? (this._poller = setInterval(() => {
            this.poll();
          }, this.pollingInterval), this._bootstrapPoll || (this._bootstrapPoll = setTimeout(() => {
            this.poll(), this._bootstrapPoll = setTimeout(() => {
              this._poller || this.poll(), this._bootstrapPoll = null;
            }, this.pollingInterval);
          }, 0))) : !t2 && this._poller && (clearInterval(this._poller), this._poller = null);
        }
        get pollingInterval() {
          return this._pollingInterval;
        }
        set pollingInterval(t2) {
          if ("number" != typeof t2 || t2 <= 0 || parseInt(String(t2)) != t2)
            throw new Error("invalid polling interval");
          this._pollingInterval = t2, this._poller && (clearInterval(this._poller), this._poller = setInterval(() => {
            this.poll();
          }, this._pollingInterval));
        }
        _getFastBlockNumber() {
          const t2 = _I();
          return t2 - this._fastQueryDate > 2 * this._pollingInterval && (this._fastQueryDate = t2, this._fastBlockNumberPromise = this.getBlockNumber().then((t3) => ((null == this._fastBlockNumber || t3 > this._fastBlockNumber) && (this._fastBlockNumber = t3), this._fastBlockNumber))), this._fastBlockNumberPromise;
        }
        _setFastBlockNumber(t2) {
          null != this._fastBlockNumber && t2 < this._fastBlockNumber || (this._fastQueryDate = _I(), (null == this._fastBlockNumber || t2 > this._fastBlockNumber) && (this._fastBlockNumber = t2, this._fastBlockNumberPromise = Promise.resolve(t2)));
        }
        waitForTransaction(t2, e2, r4) {
          return mI(this, void 0, void 0, function* () {
            return this._waitForTransaction(t2, null == e2 ? 1 : e2, r4 || 0, null);
          });
        }
        _waitForTransaction(t2, e2, r4, n2) {
          return mI(this, void 0, void 0, function* () {
            const A2 = yield this.getTransactionReceipt(t2);
            return (A2 ? A2.confirmations : 0) >= e2 ? A2 : new Promise((A3, i2) => {
              const o2 = [];
              let s2 = false;
              const a2 = function() {
                return !!s2 || (s2 = true, o2.forEach((t3) => {
                  t3();
                }), false);
              }, c2 = (t3) => {
                t3.confirmations < e2 || a2() || A3(t3);
              };
              if (this.on(t2, c2), o2.push(() => {
                this.removeListener(t2, c2);
              }), n2) {
                let r5 = n2.startBlock, A4 = null;
                const c3 = (o3) => mI(this, void 0, void 0, function* () {
                  s2 || (yield QI(1e3), this.getTransactionCount(n2.from).then((h2) => mI(this, void 0, void 0, function* () {
                    if (!s2) {
                      if (h2 <= n2.nonce)
                        r5 = o3;
                      else {
                        {
                          const e3 = yield this.getTransaction(t2);
                          if (e3 && null != e3.blockNumber)
                            return;
                        }
                        for (null == A4 && (A4 = r5 - 3, A4 < n2.startBlock && (A4 = n2.startBlock)); A4 <= o3; ) {
                          if (s2)
                            return;
                          const r6 = yield this.getBlockWithTransactions(A4);
                          for (let A5 = 0; A5 < r6.transactions.length; A5++) {
                            const o4 = r6.transactions[A5];
                            if (o4.hash === t2)
                              return;
                            if (o4.from === n2.from && o4.nonce === n2.nonce) {
                              if (s2)
                                return;
                              const r7 = yield this.waitForTransaction(o4.hash, e2);
                              if (a2())
                                return;
                              let A6 = "replaced";
                              return o4.data === n2.data && o4.to === n2.to && o4.value.eq(n2.value) ? A6 = "repriced" : "0x" === o4.data && o4.from === o4.to && o4.value.isZero() && (A6 = "cancelled"), void i2(BI.makeError("transaction was replaced", Gl.errors.TRANSACTION_REPLACED, { cancelled: "replaced" === A6 || "cancelled" === A6, reason: A6, replacement: this._wrapTransaction(o4), hash: t2, receipt: r7 }));
                            }
                          }
                          A4++;
                        }
                      }
                      s2 || this.once("block", c3);
                    }
                  }), (t3) => {
                    s2 || this.once("block", c3);
                  }));
                });
                if (s2)
                  return;
                this.once("block", c3), o2.push(() => {
                  this.removeListener("block", c3);
                });
              }
              if ("number" == typeof r4 && r4 > 0) {
                const t3 = setTimeout(() => {
                  a2() || i2(BI.makeError("timeout exceeded", Gl.errors.TIMEOUT, { timeout: r4 }));
                }, r4);
                t3.unref && t3.unref(), o2.push(() => {
                  clearTimeout(t3);
                });
              }
            });
          });
        }
        getBlockNumber() {
          return mI(this, void 0, void 0, function* () {
            return this._getInternalBlockNumber(0);
          });
        }
        getGasPrice() {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const t2 = yield this.perform("getGasPrice", {});
            try {
              return hf.from(t2);
            } catch (e2) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "getGasPrice", result: t2, error: e2 });
            }
          });
        }
        getBalance(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const r4 = yield Cf({ address: this._getAddress(t2), blockTag: this._getBlockTag(e2) }), n2 = yield this.perform("getBalance", r4);
            try {
              return hf.from(n2);
            } catch (t3) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "getBalance", params: r4, result: n2, error: t3 });
            }
          });
        }
        getTransactionCount(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const r4 = yield Cf({ address: this._getAddress(t2), blockTag: this._getBlockTag(e2) }), n2 = yield this.perform("getTransactionCount", r4);
            try {
              return hf.from(n2).toNumber();
            } catch (t3) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "getTransactionCount", params: r4, result: n2, error: t3 });
            }
          });
        }
        getCode(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const r4 = yield Cf({ address: this._getAddress(t2), blockTag: this._getBlockTag(e2) }), n2 = yield this.perform("getCode", r4);
            try {
              return Wl(n2);
            } catch (t3) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "getCode", params: r4, result: n2, error: t3 });
            }
          });
        }
        getStorageAt(t2, e2, r4) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const n2 = yield Cf({ address: this._getAddress(t2), blockTag: this._getBlockTag(r4), position: Promise.resolve(e2).then((t3) => ef(t3)) }), A2 = yield this.perform("getStorageAt", n2);
            try {
              return Wl(A2);
            } catch (t3) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "getStorageAt", params: n2, result: A2, error: t3 });
            }
          });
        }
        _wrapTransaction(t2, e2, r4) {
          if (null != e2 && 32 !== Zl(e2))
            throw new Error("invalid response - sendTransaction");
          const n2 = t2;
          return null != e2 && t2.hash !== e2 && BI.throwError("Transaction hash mismatch from Provider.sendTransaction.", Gl.errors.UNKNOWN_ERROR, { expectedHash: t2.hash, returnedHash: e2 }), n2.wait = (e3, n3) => mI(this, void 0, void 0, function* () {
            let A2;
            null == e3 && (e3 = 1), null == n3 && (n3 = 0), 0 !== e3 && null != r4 && (A2 = { data: t2.data, from: t2.from, nonce: t2.nonce, to: t2.to, value: t2.value, startBlock: r4 });
            const i2 = yield this._waitForTransaction(t2.hash, e3, n3, A2);
            return null == i2 && 0 === e3 ? null : (this._emitted["t:" + t2.hash] = i2.blockNumber, 0 === i2.status && BI.throwError("transaction failed", Gl.errors.CALL_EXCEPTION, { transactionHash: t2.hash, transaction: t2, receipt: i2 }), i2);
          }), n2;
        }
        sendTransaction(t2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const e2 = yield Promise.resolve(t2).then((t3) => Wl(t3)), r4 = this.formatter.transaction(t2);
            null == r4.confirmations && (r4.confirmations = 0);
            const n2 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            try {
              const t3 = yield this.perform("sendTransaction", { signedTransaction: e2 });
              return this._wrapTransaction(r4, t3, n2);
            } catch (t3) {
              throw t3.transaction = r4, t3.transactionHash = r4.hash, t3;
            }
          });
        }
        _getTransactionRequest(t2) {
          return mI(this, void 0, void 0, function* () {
            const e2 = yield t2, r4 = {};
            return ["from", "to"].forEach((t3) => {
              null != e2[t3] && (r4[t3] = Promise.resolve(e2[t3]).then((t4) => t4 ? this._getAddress(t4) : null));
            }), ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((t3) => {
              null != e2[t3] && (r4[t3] = Promise.resolve(e2[t3]).then((t4) => t4 ? hf.from(t4) : null));
            }), ["type"].forEach((t3) => {
              null != e2[t3] && (r4[t3] = Promise.resolve(e2[t3]).then((t4) => null != t4 ? t4 : null));
            }), e2.accessList && (r4.accessList = this.formatter.accessList(e2.accessList)), ["data"].forEach((t3) => {
              null != e2[t3] && (r4[t3] = Promise.resolve(e2[t3]).then((t4) => t4 ? Wl(t4) : null));
            }), this.formatter.transactionRequest(yield Cf(r4));
          });
        }
        _getFilter(t2) {
          return mI(this, void 0, void 0, function* () {
            t2 = yield t2;
            const e2 = {};
            return null != t2.address && (e2.address = this._getAddress(t2.address)), ["blockHash", "topics"].forEach((r4) => {
              null != t2[r4] && (e2[r4] = t2[r4]);
            }), ["fromBlock", "toBlock"].forEach((r4) => {
              null != t2[r4] && (e2[r4] = this._getBlockTag(t2[r4]));
            }), this.formatter.filter(yield Cf(e2));
          });
        }
        _call(t2, e2, r4) {
          return mI(this, void 0, void 0, function* () {
            r4 >= 10 && BI.throwError("CCIP read exceeded maximum redirections", Gl.errors.SERVER_ERROR, { redirects: r4, transaction: t2 });
            const n2 = t2.to, A2 = yield this.perform("call", { transaction: t2, blockTag: e2 });
            if (r4 >= 0 && "latest" === e2 && null != n2 && "0x556f1830" === A2.substring(0, 10) && Zl(A2) % 32 == 4)
              try {
                const i2 = $l(A2, 4), o2 = $l(i2, 0, 32);
                hf.from(o2).eq(n2) || BI.throwError("CCIP Read sender did not match", Gl.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: t2, data: A2 });
                const s2 = [], a2 = hf.from($l(i2, 32, 64)).toNumber(), c2 = hf.from($l(i2, a2, a2 + 32)).toNumber(), h2 = $l(i2, a2 + 32);
                for (let e3 = 0; e3 < c2; e3++) {
                  const r5 = FI(h2, 32 * e3);
                  null == r5 && BI.throwError("CCIP Read contained corrupt URL string", Gl.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: t2, data: A2 }), s2.push(r5);
                }
                const g2 = PI(i2, 64);
                hf.from($l(i2, 100, 128)).isZero() || BI.throwError("CCIP Read callback selector included junk", Gl.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: t2, data: A2 });
                const u2 = $l(i2, 96, 100), l2 = PI(i2, 128), f2 = yield this.ccipReadFetch(t2, g2, s2);
                null == f2 && BI.throwError("CCIP Read disabled or provided no URLs", Gl.errors.CALL_EXCEPTION, { name: "OffchainLookup", signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)", transaction: t2, data: A2 });
                const p2 = { to: n2, data: tf([u2, GI([f2, l2])]) };
                return this._call(p2, e2, r4 + 1);
              } catch (t3) {
                if (t3.code === Gl.errors.SERVER_ERROR)
                  throw t3;
              }
            try {
              return Wl(A2);
            } catch (r5) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "call", params: { transaction: t2, blockTag: e2 }, result: A2, error: r5 });
            }
          });
        }
        call(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const r4 = yield Cf({ transaction: this._getTransactionRequest(t2), blockTag: this._getBlockTag(e2), ccipReadEnabled: Promise.resolve(t2.ccipReadEnabled) });
            return this._call(r4.transaction, r4.blockTag, r4.ccipReadEnabled ? 0 : -1);
          });
        }
        estimateGas(t2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const e2 = yield Cf({ transaction: this._getTransactionRequest(t2) }), r4 = yield this.perform("estimateGas", e2);
            try {
              return hf.from(r4);
            } catch (t3) {
              return BI.throwError("bad result from backend", Gl.errors.SERVER_ERROR, { method: "estimateGas", params: e2, result: r4, error: t3 });
            }
          });
        }
        _getAddress(t2) {
          return mI(this, void 0, void 0, function* () {
            "string" != typeof (t2 = yield t2) && BI.throwArgumentError("invalid address or ENS name", "name", t2);
            const e2 = yield this.resolveName(t2);
            return null == e2 && BI.throwError("ENS name not configured", Gl.errors.UNSUPPORTED_OPERATION, { operation: `resolveName(${JSON.stringify(t2)})` }), e2;
          });
        }
        _getBlock(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork(), t2 = yield t2;
            let r4 = -128;
            const n2 = { includeTransactions: !!e2 };
            if (Xl(t2, 32))
              n2.blockHash = t2;
            else
              try {
                n2.blockTag = yield this._getBlockTag(t2), Xl(n2.blockTag) && (r4 = parseInt(n2.blockTag.substring(2), 16));
              } catch (e3) {
                BI.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", t2);
              }
            return ud(() => mI(this, void 0, void 0, function* () {
              const t3 = yield this.perform("getBlock", n2);
              if (null == t3)
                return null != n2.blockHash && null == this._emitted["b:" + n2.blockHash] || null != n2.blockTag && r4 > this._emitted.block ? null : void 0;
              if (e2) {
                let e3 = null;
                for (let r6 = 0; r6 < t3.transactions.length; r6++) {
                  const n3 = t3.transactions[r6];
                  if (null == n3.blockNumber)
                    n3.confirmations = 0;
                  else if (null == n3.confirmations) {
                    null == e3 && (e3 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval));
                    let t4 = e3 - n3.blockNumber + 1;
                    t4 <= 0 && (t4 = 1), n3.confirmations = t4;
                  }
                }
                const r5 = this.formatter.blockWithTransactions(t3);
                return r5.transactions = r5.transactions.map((t4) => this._wrapTransaction(t4)), r5;
              }
              return this.formatter.block(t3);
            }), { oncePoll: this });
          });
        }
        getBlock(t2) {
          return this._getBlock(t2, false);
        }
        getBlockWithTransactions(t2) {
          return this._getBlock(t2, true);
        }
        getTransaction(t2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork(), t2 = yield t2;
            const e2 = { transactionHash: this.formatter.hash(t2, true) };
            return ud(() => mI(this, void 0, void 0, function* () {
              const r4 = yield this.perform("getTransaction", e2);
              if (null == r4)
                return null == this._emitted["t:" + t2] ? null : void 0;
              const n2 = this.formatter.transactionResponse(r4);
              if (null == n2.blockNumber)
                n2.confirmations = 0;
              else if (null == n2.confirmations) {
                let t3 = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n2.blockNumber + 1;
                t3 <= 0 && (t3 = 1), n2.confirmations = t3;
              }
              return this._wrapTransaction(n2);
            }), { oncePoll: this });
          });
        }
        getTransactionReceipt(t2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork(), t2 = yield t2;
            const e2 = { transactionHash: this.formatter.hash(t2, true) };
            return ud(() => mI(this, void 0, void 0, function* () {
              const r4 = yield this.perform("getTransactionReceipt", e2);
              if (null == r4)
                return null == this._emitted["t:" + t2] ? null : void 0;
              if (null == r4.blockHash)
                return;
              const n2 = this.formatter.receipt(r4);
              if (null == n2.blockNumber)
                n2.confirmations = 0;
              else if (null == n2.confirmations) {
                let t3 = (yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval)) - n2.blockNumber + 1;
                t3 <= 0 && (t3 = 1), n2.confirmations = t3;
              }
              return n2;
            }), { oncePoll: this });
          });
        }
        getLogs(t2) {
          return mI(this, void 0, void 0, function* () {
            yield this.getNetwork();
            const e2 = yield Cf({ filter: this._getFilter(t2) }), r4 = yield this.perform("getLogs", e2);
            return r4.forEach((t3) => {
              null == t3.removed && (t3.removed = false);
            }), CI.arrayOf(this.formatter.filterLog.bind(this.formatter))(r4);
          });
        }
        getEtherPrice() {
          return mI(this, void 0, void 0, function* () {
            return yield this.getNetwork(), this.perform("getEtherPrice", {});
          });
        }
        _getBlockTag(t2) {
          return mI(this, void 0, void 0, function* () {
            if ("number" == typeof (t2 = yield t2) && t2 < 0) {
              t2 % 1 && BI.throwArgumentError("invalid BlockTag", "blockTag", t2);
              let e2 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
              return e2 += t2, e2 < 0 && (e2 = 0), this.formatter.blockTag(e2);
            }
            return this.formatter.blockTag(t2);
          });
        }
        getResolver(t2) {
          return mI(this, void 0, void 0, function* () {
            let e2 = t2;
            for (; ; ) {
              if ("" === e2 || "." === e2)
                return null;
              if ("eth" !== t2 && "eth" === e2)
                return null;
              const r4 = yield this._getResolver(e2, "getResolver");
              if (null != r4) {
                const n2 = new HI(this, r4, t2);
                return e2 === t2 || (yield n2.supportsWildcard()) ? n2 : null;
              }
              e2 = e2.split(".").slice(1).join(".");
            }
          });
        }
        _getResolver(t2, e2) {
          return mI(this, void 0, void 0, function* () {
            null == e2 && (e2 = "ENS");
            const r4 = yield this.getNetwork();
            r4.ensAddress || BI.throwError("network does not support ENS", Gl.errors.UNSUPPORTED_OPERATION, { operation: e2, network: r4.name });
            try {
              const e3 = yield this.call({ to: r4.ensAddress, data: "0x0178b8bf" + bp(t2).substring(2) });
              return this.formatter.callAddress(e3);
            } catch (t3) {
            }
            return null;
          });
        }
        resolveName(t2) {
          return mI(this, void 0, void 0, function* () {
            t2 = yield t2;
            try {
              return Promise.resolve(this.formatter.address(t2));
            } catch (e3) {
              if (Xl(t2))
                throw e3;
            }
            "string" != typeof t2 && BI.throwArgumentError("invalid ENS name", "name", t2);
            const e2 = yield this.getResolver(t2);
            return e2 ? yield e2.getAddress() : null;
          });
        }
        lookupAddress(t2) {
          return mI(this, void 0, void 0, function* () {
            t2 = yield t2;
            const e2 = (t2 = this.formatter.address(t2)).substring(2).toLowerCase() + ".addr.reverse", r4 = yield this._getResolver(e2, "lookupAddress");
            if (null == r4)
              return null;
            const n2 = FI(yield this.call({ to: r4, data: "0x691f3431" + bp(e2).substring(2) }), 0);
            return (yield this.resolveName(n2)) != t2 ? null : n2;
          });
        }
        getAvatar(t2) {
          return mI(this, void 0, void 0, function* () {
            let e2 = null;
            if (Xl(t2)) {
              const r5 = this.formatter.address(t2).substring(2).toLowerCase() + ".addr.reverse", n2 = yield this._getResolver(r5, "getAvatar");
              if (!n2)
                return null;
              e2 = new HI(this, n2, r5);
              try {
                const t3 = yield e2.getAvatar();
                if (t3)
                  return t3.url;
              } catch (t3) {
                if (t3.code !== Gl.errors.CALL_EXCEPTION)
                  throw t3;
              }
              try {
                const t3 = FI(yield this.call({ to: n2, data: "0x691f3431" + bp(r5).substring(2) }), 0);
                e2 = yield this.getResolver(t3);
              } catch (t3) {
                if (t3.code !== Gl.errors.CALL_EXCEPTION)
                  throw t3;
                return null;
              }
            } else if (e2 = yield this.getResolver(t2), !e2)
              return null;
            const r4 = yield e2.getAvatar();
            return null == r4 ? null : r4.url;
          });
        }
        perform(t2, e2) {
          return BI.throwError(t2 + " not implemented", Gl.errors.NOT_IMPLEMENTED, { operation: t2 });
        }
        _startEvent(t2) {
          this.polling = this._events.filter((t3) => t3.pollable()).length > 0;
        }
        _stopEvent(t2) {
          this.polling = this._events.filter((t3) => t3.pollable()).length > 0;
        }
        _addEventListener(t2, e2, r4) {
          const n2 = new kI(vI(t2), e2, r4);
          return this._events.push(n2), this._startEvent(n2), this;
        }
        on(t2, e2) {
          return this._addEventListener(t2, e2, false);
        }
        once(t2, e2) {
          return this._addEventListener(t2, e2, true);
        }
        emit(t2, ...e2) {
          let r4 = false, n2 = [], A2 = vI(t2);
          return this._events = this._events.filter((t3) => t3.tag !== A2 || (setTimeout(() => {
            t3.listener.apply(this, e2);
          }, 0), r4 = true, !t3.once || (n2.push(t3), false))), n2.forEach((t3) => {
            this._stopEvent(t3);
          }), r4;
        }
        listenerCount(t2) {
          if (!t2)
            return this._events.length;
          let e2 = vI(t2);
          return this._events.filter((t3) => t3.tag === e2).length;
        }
        listeners(t2) {
          if (null == t2)
            return this._events.map((t3) => t3.listener);
          let e2 = vI(t2);
          return this._events.filter((t3) => t3.tag === e2).map((t3) => t3.listener);
        }
        off(t2, e2) {
          if (null == e2)
            return this.removeAllListeners(t2);
          const r4 = [];
          let n2 = false, A2 = vI(t2);
          return this._events = this._events.filter((t3) => t3.tag !== A2 || t3.listener != e2 || (!!n2 || (n2 = true, r4.push(t3), false))), r4.forEach((t3) => {
            this._stopEvent(t3);
          }), this;
        }
        removeAllListeners(t2) {
          let e2 = [];
          if (null == t2)
            e2 = this._events, this._events = [];
          else {
            const r4 = vI(t2);
            this._events = this._events.filter((t3) => t3.tag !== r4 || (e2.push(t3), false));
          }
          return e2.forEach((t3) => {
            this._stopEvent(t3);
          }), this;
        }
      };
      Al(), il(), Al(), il(), Al(), il();
      var KI = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var JI = new Gl("abstract-signer/5.7.0");
      var jI = ["accessList", "ccipReadEnabled", "chainId", "customData", "data", "from", "gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "to", "type", "value"];
      var zI = [Gl.errors.INSUFFICIENT_FUNDS, Gl.errors.NONCE_EXPIRED, Gl.errors.REPLACEMENT_UNDERPRICED];
      var qI = class t2 {
        constructor() {
          JI.checkAbstract(new.target, t2), If(this, "_isSigner", true);
        }
        getBalance(t3) {
          return KI(this, void 0, void 0, function* () {
            return this._checkProvider("getBalance"), yield this.provider.getBalance(this.getAddress(), t3);
          });
        }
        getTransactionCount(t3) {
          return KI(this, void 0, void 0, function* () {
            return this._checkProvider("getTransactionCount"), yield this.provider.getTransactionCount(this.getAddress(), t3);
          });
        }
        estimateGas(t3) {
          return KI(this, void 0, void 0, function* () {
            this._checkProvider("estimateGas");
            const e2 = yield Cf(this.checkTransaction(t3));
            return yield this.provider.estimateGas(e2);
          });
        }
        call(t3, e2) {
          return KI(this, void 0, void 0, function* () {
            this._checkProvider("call");
            const r4 = yield Cf(this.checkTransaction(t3));
            return yield this.provider.call(r4, e2);
          });
        }
        sendTransaction(t3) {
          return KI(this, void 0, void 0, function* () {
            this._checkProvider("sendTransaction");
            const e2 = yield this.populateTransaction(t3), r4 = yield this.signTransaction(e2);
            return yield this.provider.sendTransaction(r4);
          });
        }
        getChainId() {
          return KI(this, void 0, void 0, function* () {
            this._checkProvider("getChainId");
            return (yield this.provider.getNetwork()).chainId;
          });
        }
        getGasPrice() {
          return KI(this, void 0, void 0, function* () {
            return this._checkProvider("getGasPrice"), yield this.provider.getGasPrice();
          });
        }
        getFeeData() {
          return KI(this, void 0, void 0, function* () {
            return this._checkProvider("getFeeData"), yield this.provider.getFeeData();
          });
        }
        resolveName(t3) {
          return KI(this, void 0, void 0, function* () {
            return this._checkProvider("resolveName"), yield this.provider.resolveName(t3);
          });
        }
        checkTransaction(t3) {
          for (const e3 in t3)
            -1 === jI.indexOf(e3) && JI.throwArgumentError("invalid transaction key: " + e3, "transaction", t3);
          const e2 = mf(t3);
          return null == e2.from ? e2.from = this.getAddress() : e2.from = Promise.all([Promise.resolve(e2.from), this.getAddress()]).then((e3) => (e3[0].toLowerCase() !== e3[1].toLowerCase() && JI.throwArgumentError("from address mismatch", "transaction", t3), e3[0])), e2;
        }
        populateTransaction(t3) {
          return KI(this, void 0, void 0, function* () {
            const e2 = yield Cf(this.checkTransaction(t3));
            null != e2.to && (e2.to = Promise.resolve(e2.to).then((t4) => KI(this, void 0, void 0, function* () {
              if (null == t4)
                return null;
              const e3 = yield this.resolveName(t4);
              return null == e3 && JI.throwArgumentError("provided ENS name resolves to null", "tx.to", t4), e3;
            })), e2.to.catch((t4) => {
            }));
            const r4 = null != e2.maxFeePerGas || null != e2.maxPriorityFeePerGas;
            if (null == e2.gasPrice || 2 !== e2.type && !r4 ? 0 !== e2.type && 1 !== e2.type || !r4 || JI.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", t3) : JI.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", t3), 2 !== e2.type && null != e2.type || null == e2.maxFeePerGas || null == e2.maxPriorityFeePerGas)
              if (0 === e2.type || 1 === e2.type)
                null == e2.gasPrice && (e2.gasPrice = this.getGasPrice());
              else {
                const t4 = yield this.getFeeData();
                if (null == e2.type)
                  if (null != t4.maxFeePerGas && null != t4.maxPriorityFeePerGas)
                    if (e2.type = 2, null != e2.gasPrice) {
                      const t5 = e2.gasPrice;
                      delete e2.gasPrice, e2.maxFeePerGas = t5, e2.maxPriorityFeePerGas = t5;
                    } else
                      null == e2.maxFeePerGas && (e2.maxFeePerGas = t4.maxFeePerGas), null == e2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = t4.maxPriorityFeePerGas);
                  else
                    null != t4.gasPrice ? (r4 && JI.throwError("network does not support EIP-1559", Gl.errors.UNSUPPORTED_OPERATION, { operation: "populateTransaction" }), null == e2.gasPrice && (e2.gasPrice = t4.gasPrice), e2.type = 0) : JI.throwError("failed to get consistent fee data", Gl.errors.UNSUPPORTED_OPERATION, { operation: "signer.getFeeData" });
                else
                  2 === e2.type && (null == e2.maxFeePerGas && (e2.maxFeePerGas = t4.maxFeePerGas), null == e2.maxPriorityFeePerGas && (e2.maxPriorityFeePerGas = t4.maxPriorityFeePerGas));
              }
            else
              e2.type = 2;
            return null == e2.nonce && (e2.nonce = this.getTransactionCount("pending")), null == e2.gasLimit && (e2.gasLimit = this.estimateGas(e2).catch((t4) => {
              if (zI.indexOf(t4.code) >= 0)
                throw t4;
              return JI.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Gl.errors.UNPREDICTABLE_GAS_LIMIT, { error: t4, tx: e2 });
            })), null == e2.chainId ? e2.chainId = this.getChainId() : e2.chainId = Promise.all([Promise.resolve(e2.chainId), this.getChainId()]).then((e3) => (0 !== e3[1] && e3[0] !== e3[1] && JI.throwArgumentError("chainId address mismatch", "transaction", t3), e3[0])), yield Cf(e2);
          });
        }
        _checkProvider(t3) {
          this.provider || JI.throwError("missing provider", Gl.errors.UNSUPPORTED_OPERATION, { operation: t3 || "_checkProvider" });
        }
        static isSigner(t3) {
          return !(!t3 || !t3._isSigner);
        }
      };
      var XI = function(t2, e2, r4, n2) {
        return new (r4 || (r4 = Promise))(function(A2, i2) {
          function o2(t3) {
            try {
              a2(n2.next(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function s2(t3) {
            try {
              a2(n2.throw(t3));
            } catch (t4) {
              i2(t4);
            }
          }
          function a2(t3) {
            var e3;
            t3.done ? A2(t3.value) : (e3 = t3.value, e3 instanceof r4 ? e3 : new r4(function(t4) {
              t4(e3);
            })).then(o2, s2);
          }
          a2((n2 = n2.apply(t2, e2 || [])).next());
        });
      };
      var VI = new Gl(fd);
      var WI = ["call", "estimateGas"];
      function ZI(t2, e2) {
        if (null == t2)
          return null;
        if ("string" == typeof t2.message && t2.message.match("reverted")) {
          const r4 = Xl(t2.data) ? t2.data : null;
          if (!e2 || r4)
            return { message: t2.message, data: r4 };
        }
        if ("object" == typeof t2) {
          for (const r4 in t2) {
            const n2 = ZI(t2[r4], e2);
            if (n2)
              return n2;
          }
          return null;
        }
        if ("string" == typeof t2)
          try {
            return ZI(JSON.parse(t2), e2);
          } catch (t3) {
          }
        return null;
      }
      function $I(t2, e2, r4) {
        const n2 = r4.transaction || r4.signedTransaction;
        if ("call" === t2) {
          const t3 = ZI(e2, true);
          if (t3)
            return t3.data;
          VI.throwError("missing revert data in call exception; Transaction reverted without a reason string", Gl.errors.CALL_EXCEPTION, { data: "0x", transaction: n2, error: e2 });
        }
        if ("estimateGas" === t2) {
          let r5 = ZI(e2.body, false);
          null == r5 && (r5 = ZI(e2, false)), r5 && VI.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Gl.errors.UNPREDICTABLE_GAS_LIMIT, { reason: r5.message, method: t2, transaction: n2, error: e2 });
        }
        let A2 = e2.message;
        throw e2.code === Gl.errors.SERVER_ERROR && e2.error && "string" == typeof e2.error.message ? A2 = e2.error.message : "string" == typeof e2.body ? A2 = e2.body : "string" == typeof e2.responseText && (A2 = e2.responseText), A2 = (A2 || "").toLowerCase(), A2.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i) && VI.throwError("insufficient funds for intrinsic transaction cost", Gl.errors.INSUFFICIENT_FUNDS, { error: e2, method: t2, transaction: n2 }), A2.match(/nonce (is )?too low/i) && VI.throwError("nonce has already been used", Gl.errors.NONCE_EXPIRED, { error: e2, method: t2, transaction: n2 }), A2.match(/replacement transaction underpriced|transaction gas price.*too low/i) && VI.throwError("replacement fee too low", Gl.errors.REPLACEMENT_UNDERPRICED, { error: e2, method: t2, transaction: n2 }), A2.match(/only replay-protected/i) && VI.throwError("legacy pre-eip-155 transactions not supported", Gl.errors.UNSUPPORTED_OPERATION, { error: e2, method: t2, transaction: n2 }), WI.indexOf(t2) >= 0 && A2.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/) && VI.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Gl.errors.UNPREDICTABLE_GAS_LIMIT, { error: e2, method: t2, transaction: n2 }), e2;
      }
      function ty(t2) {
        return new Promise(function(e2) {
          setTimeout(e2, t2);
        });
      }
      function ey(t2) {
        if (t2.error) {
          const e2 = new Error(t2.error.message);
          throw e2.code = t2.error.code, e2.data = t2.error.data, e2;
        }
        return t2.result;
      }
      function ry(t2) {
        return t2 ? t2.toLowerCase() : t2;
      }
      var ny = {};
      var Ay = class extends qI {
        constructor(t2, e2, r4) {
          if (super(), t2 !== ny)
            throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
          If(this, "provider", e2), null == r4 && (r4 = 0), "string" == typeof r4 ? (If(this, "_address", this.provider.formatter.address(r4)), If(this, "_index", null)) : "number" == typeof r4 ? (If(this, "_index", r4), If(this, "_address", null)) : VI.throwArgumentError("invalid address or index", "addressOrIndex", r4);
        }
        connect(t2) {
          return VI.throwError("cannot alter JSON-RPC Signer connection", Gl.errors.UNSUPPORTED_OPERATION, { operation: "connect" });
        }
        connectUnchecked() {
          return new iy(ny, this.provider, this._address || this._index);
        }
        getAddress() {
          return this._address ? Promise.resolve(this._address) : this.provider.send("eth_accounts", []).then((t2) => (t2.length <= this._index && VI.throwError("unknown account #" + this._index, Gl.errors.UNSUPPORTED_OPERATION, { operation: "getAddress" }), this.provider.formatter.address(t2[this._index])));
        }
        sendUncheckedTransaction(t2) {
          t2 = mf(t2);
          const e2 = this.getAddress().then((t3) => (t3 && (t3 = t3.toLowerCase()), t3));
          if (null == t2.gasLimit) {
            const r4 = mf(t2);
            r4.from = e2, t2.gasLimit = this.provider.estimateGas(r4);
          }
          return null != t2.to && (t2.to = Promise.resolve(t2.to).then((t3) => XI(this, void 0, void 0, function* () {
            if (null == t3)
              return null;
            const e3 = yield this.provider.resolveName(t3);
            return null == e3 && VI.throwArgumentError("provided ENS name resolves to null", "tx.to", t3), e3;
          }))), Cf({ tx: Cf(t2), sender: e2 }).then(({ tx: e3, sender: r4 }) => {
            null != e3.from ? e3.from.toLowerCase() !== r4 && VI.throwArgumentError("from address mismatch", "transaction", t2) : e3.from = r4;
            const n2 = this.provider.constructor.hexlifyTransaction(e3, { from: true });
            return this.provider.send("eth_sendTransaction", [n2]).then((t3) => t3, (t3) => ("string" == typeof t3.message && t3.message.match(/user denied/i) && VI.throwError("user rejected transaction", Gl.errors.ACTION_REJECTED, { action: "sendTransaction", transaction: e3 }), $I("sendTransaction", t3, n2)));
          });
        }
        signTransaction(t2) {
          return VI.throwError("signing transactions is unsupported", Gl.errors.UNSUPPORTED_OPERATION, { operation: "signTransaction" });
        }
        sendTransaction(t2) {
          return XI(this, void 0, void 0, function* () {
            const e2 = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval), r4 = yield this.sendUncheckedTransaction(t2);
            try {
              return yield ud(() => XI(this, void 0, void 0, function* () {
                const t3 = yield this.provider.getTransaction(r4);
                if (null !== t3)
                  return this.provider._wrapTransaction(t3, r4, e2);
              }), { oncePoll: this.provider });
            } catch (t3) {
              throw t3.transactionHash = r4, t3;
            }
          });
        }
        signMessage(t2) {
          return XI(this, void 0, void 0, function* () {
            const e2 = "string" == typeof t2 ? Zf(t2) : t2, r4 = yield this.getAddress();
            try {
              return yield this.provider.send("personal_sign", [Wl(e2), r4.toLowerCase()]);
            } catch (e3) {
              throw "string" == typeof e3.message && e3.message.match(/user denied/i) && VI.throwError("user rejected signing", Gl.errors.ACTION_REJECTED, { action: "signMessage", from: r4, messageData: t2 }), e3;
            }
          });
        }
        _legacySignMessage(t2) {
          return XI(this, void 0, void 0, function* () {
            const e2 = "string" == typeof t2 ? Zf(t2) : t2, r4 = yield this.getAddress();
            try {
              return yield this.provider.send("eth_sign", [r4.toLowerCase(), Wl(e2)]);
            } catch (e3) {
              throw "string" == typeof e3.message && e3.message.match(/user denied/i) && VI.throwError("user rejected signing", Gl.errors.ACTION_REJECTED, { action: "_legacySignMessage", from: r4, messageData: t2 }), e3;
            }
          });
        }
        _signTypedData(t2, e2, r4) {
          return XI(this, void 0, void 0, function* () {
            const n2 = yield rd.resolveNames(t2, e2, r4, (t3) => this.provider.resolveName(t3)), A2 = yield this.getAddress();
            try {
              return yield this.provider.send("eth_signTypedData_v4", [A2.toLowerCase(), JSON.stringify(rd.getPayload(n2.domain, e2, n2.value))]);
            } catch (t3) {
              throw "string" == typeof t3.message && t3.message.match(/user denied/i) && VI.throwError("user rejected signing", Gl.errors.ACTION_REJECTED, { action: "_signTypedData", from: A2, messageData: { domain: n2.domain, types: e2, value: n2.value } }), t3;
            }
          });
        }
        unlock(t2) {
          return XI(this, void 0, void 0, function* () {
            const e2 = this.provider, r4 = yield this.getAddress();
            return e2.send("personal_unlockAccount", [r4.toLowerCase(), t2, null]);
          });
        }
      };
      var iy = class extends Ay {
        sendTransaction(t2) {
          return this.sendUncheckedTransaction(t2).then((t3) => ({ hash: t3, nonce: null, gasLimit: null, gasPrice: null, data: null, value: null, chainId: null, confirmations: 0, from: null, wait: (e2) => this.provider.waitForTransaction(t3, e2) }));
        }
      };
      var oy = { chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true, type: true, accessList: true, maxFeePerGas: true, maxPriorityFeePerGas: true };
      var sy = class extends YI {
        constructor(t2, e2) {
          let r4 = e2;
          null == r4 && (r4 = new Promise((t3, e3) => {
            setTimeout(() => {
              this.detectNetwork().then((e4) => {
                t3(e4);
              }, (t4) => {
                e3(t4);
              });
            }, 0);
          })), super(r4), t2 || (t2 = yf(this.constructor, "defaultUrl")()), If(this, "connection", "string" == typeof t2 ? Object.freeze({ url: t2 }) : Object.freeze(mf(t2))), this._nextId = 42;
        }
        get _cache() {
          return null == this._eventLoopCache && (this._eventLoopCache = {}), this._eventLoopCache;
        }
        static defaultUrl() {
          return "http://localhost:8545";
        }
        detectNetwork() {
          return this._cache.detectNetwork || (this._cache.detectNetwork = this._uncachedDetectNetwork(), setTimeout(() => {
            this._cache.detectNetwork = null;
          }, 0)), this._cache.detectNetwork;
        }
        _uncachedDetectNetwork() {
          return XI(this, void 0, void 0, function* () {
            yield ty(0);
            let t2 = null;
            try {
              t2 = yield this.send("eth_chainId", []);
            } catch (e2) {
              try {
                t2 = yield this.send("net_version", []);
              } catch (t3) {
              }
            }
            if (null != t2) {
              const e2 = yf(this.constructor, "getNetwork");
              try {
                return e2(hf.from(t2).toNumber());
              } catch (e3) {
                return VI.throwError("could not detect network", Gl.errors.NETWORK_ERROR, { chainId: t2, event: "invalidNetwork", serverError: e3 });
              }
            }
            return VI.throwError("could not detect network", Gl.errors.NETWORK_ERROR, { event: "noNetwork" });
          });
        }
        getSigner(t2) {
          return new Ay(ny, this, t2);
        }
        getUncheckedSigner(t2) {
          return this.getSigner(t2).connectUnchecked();
        }
        listAccounts() {
          return this.send("eth_accounts", []).then((t2) => t2.map((t3) => this.formatter.address(t3)));
        }
        send(t2, e2) {
          const r4 = { method: t2, params: e2, id: this._nextId++, jsonrpc: "2.0" };
          this.emit("debug", { action: "request", request: vf(r4), provider: this });
          const n2 = ["eth_chainId", "eth_blockNumber"].indexOf(t2) >= 0;
          if (n2 && this._cache[t2])
            return this._cache[t2];
          const A2 = gd(this.connection, JSON.stringify(r4), ey).then((t3) => (this.emit("debug", { action: "response", request: r4, response: t3, provider: this }), t3), (t3) => {
            throw this.emit("debug", { action: "response", error: t3, request: r4, provider: this }), t3;
          });
          return n2 && (this._cache[t2] = A2, setTimeout(() => {
            this._cache[t2] = null;
          }, 0)), A2;
        }
        prepareRequest(t2, e2) {
          switch (t2) {
            case "getBlockNumber":
              return ["eth_blockNumber", []];
            case "getGasPrice":
              return ["eth_gasPrice", []];
            case "getBalance":
              return ["eth_getBalance", [ry(e2.address), e2.blockTag]];
            case "getTransactionCount":
              return ["eth_getTransactionCount", [ry(e2.address), e2.blockTag]];
            case "getCode":
              return ["eth_getCode", [ry(e2.address), e2.blockTag]];
            case "getStorageAt":
              return ["eth_getStorageAt", [ry(e2.address), rf(e2.position, 32), e2.blockTag]];
            case "sendTransaction":
              return ["eth_sendRawTransaction", [e2.signedTransaction]];
            case "getBlock":
              return e2.blockTag ? ["eth_getBlockByNumber", [e2.blockTag, !!e2.includeTransactions]] : e2.blockHash ? ["eth_getBlockByHash", [e2.blockHash, !!e2.includeTransactions]] : null;
            case "getTransaction":
              return ["eth_getTransactionByHash", [e2.transactionHash]];
            case "getTransactionReceipt":
              return ["eth_getTransactionReceipt", [e2.transactionHash]];
            case "call":
              return ["eth_call", [yf(this.constructor, "hexlifyTransaction")(e2.transaction, { from: true }), e2.blockTag]];
            case "estimateGas":
              return ["eth_estimateGas", [yf(this.constructor, "hexlifyTransaction")(e2.transaction, { from: true })]];
            case "getLogs":
              return e2.filter && null != e2.filter.address && (e2.filter.address = ry(e2.filter.address)), ["eth_getLogs", [e2.filter]];
          }
          return null;
        }
        perform(t2, e2) {
          return XI(this, void 0, void 0, function* () {
            if ("call" === t2 || "estimateGas" === t2) {
              const t3 = e2.transaction;
              if (t3 && null != t3.type && hf.from(t3.type).isZero() && null == t3.maxFeePerGas && null == t3.maxPriorityFeePerGas) {
                const r5 = yield this.getFeeData();
                null == r5.maxFeePerGas && null == r5.maxPriorityFeePerGas && ((e2 = mf(e2)).transaction = mf(t3), delete e2.transaction.type);
              }
            }
            const r4 = this.prepareRequest(t2, e2);
            null == r4 && VI.throwError(t2 + " not implemented", Gl.errors.NOT_IMPLEMENTED, { operation: t2 });
            try {
              return yield this.send(r4[0], r4[1]);
            } catch (r5) {
              return $I(t2, r5, e2);
            }
          });
        }
        _startEvent(t2) {
          "pending" === t2.tag && this._startPending(), super._startEvent(t2);
        }
        _startPending() {
          if (null != this._pendingFilter)
            return;
          const t2 = this, e2 = this.send("eth_newPendingTransactionFilter", []);
          this._pendingFilter = e2, e2.then(function(r4) {
            return function n2() {
              t2.send("eth_getFilterChanges", [r4]).then(function(r5) {
                if (t2._pendingFilter != e2)
                  return null;
                let n3 = Promise.resolve();
                return r5.forEach(function(e3) {
                  t2._emitted["t:" + e3.toLowerCase()] = "pending", n3 = n3.then(function() {
                    return t2.getTransaction(e3).then(function(e4) {
                      return t2.emit("pending", e4), null;
                    });
                  });
                }), n3.then(function() {
                  return ty(1e3);
                });
              }).then(function() {
                if (t2._pendingFilter == e2)
                  return setTimeout(function() {
                    n2();
                  }, 0), null;
                t2.send("eth_uninstallFilter", [r4]);
              }).catch((t3) => {
              });
            }(), r4;
          }).catch((t3) => {
          });
        }
        _stopEvent(t2) {
          "pending" === t2.tag && 0 === this.listenerCount("pending") && (this._pendingFilter = null), super._stopEvent(t2);
        }
        static hexlifyTransaction(t2, e2) {
          const r4 = mf(oy);
          if (e2)
            for (const t3 in e2)
              e2[t3] && (r4[t3] = true);
          var n2, A2;
          A2 = r4, (n2 = t2) && "object" == typeof n2 || df.throwArgumentError("invalid object", "object", n2), Object.keys(n2).forEach((t3) => {
            A2[t3] || df.throwArgumentError("invalid object key - " + t3, "transaction:" + t3, n2);
          });
          const i2 = {};
          return ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(e3) {
            if (null == t2[e3])
              return;
            const r5 = ef(hf.from(t2[e3]));
            "gasLimit" === e3 && (e3 = "gas"), i2[e3] = r5;
          }), ["from", "to", "data"].forEach(function(e3) {
            null != t2[e3] && (i2[e3] = Wl(t2[e3]));
          }), t2.accessList && (i2.accessList = uI(t2.accessList)), i2;
        }
      };
      function ay(t2, e2) {
        return function() {
          return t2.apply(e2, arguments);
        };
      }
      Al(), il(), Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var { toString: cy } = Object.prototype;
      var { getPrototypeOf: hy } = Object;
      var gy = /* @__PURE__ */ ((t2) => (e2) => {
        const r4 = cy.call(e2);
        return t2[r4] || (t2[r4] = r4.slice(8, -1).toLowerCase());
      })(/* @__PURE__ */ Object.create(null));
      var uy = (t2) => (t2 = t2.toLowerCase(), (e2) => gy(e2) === t2);
      var ly = (t2) => (e2) => typeof e2 === t2;
      var { isArray: fy } = Array;
      var py = ly("undefined");
      var dy = uy("ArrayBuffer");
      var Iy = ly("string");
      var yy = ly("function");
      var Cy = ly("number");
      var my = (t2) => null !== t2 && "object" == typeof t2;
      var By = (t2) => {
        if ("object" !== gy(t2))
          return false;
        const e2 = hy(t2);
        return !(null !== e2 && e2 !== Object.prototype && null !== Object.getPrototypeOf(e2) || Symbol.toStringTag in t2 || Symbol.iterator in t2);
      };
      var Ey = uy("Date");
      var wy = uy("File");
      var vy = uy("Blob");
      var _y = uy("FileList");
      var Qy = uy("URLSearchParams");
      var [by, ky, Dy, Sy] = ["ReadableStream", "Request", "Response", "Headers"].map(uy);
      function Ny(t2, e2, { allOwnKeys: r4 = false } = {}) {
        if (null == t2)
          return;
        let n2, A2;
        if ("object" != typeof t2 && (t2 = [t2]), fy(t2))
          for (n2 = 0, A2 = t2.length; n2 < A2; n2++)
            e2.call(null, t2[n2], n2, t2);
        else {
          const A3 = r4 ? Object.getOwnPropertyNames(t2) : Object.keys(t2), i2 = A3.length;
          let o2;
          for (n2 = 0; n2 < i2; n2++)
            o2 = A3[n2], e2.call(null, t2[o2], o2, t2);
        }
      }
      function My(t2, e2) {
        e2 = e2.toLowerCase();
        const r4 = Object.keys(t2);
        let n2, A2 = r4.length;
        for (; A2-- > 0; )
          if (n2 = r4[A2], e2 === n2.toLowerCase())
            return n2;
        return null;
      }
      var xy = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof self ? self : "undefined" != typeof window ? window : global;
      var Fy = (t2) => !py(t2) && t2 !== xy;
      var Py = /* @__PURE__ */ ((t2) => (e2) => t2 && e2 instanceof t2)("undefined" != typeof Uint8Array && hy(Uint8Array));
      var Ty = uy("HTMLFormElement");
      var Ry = (({ hasOwnProperty: t2 }) => (e2, r4) => t2.call(e2, r4))(Object.prototype);
      var Uy = uy("RegExp");
      var Gy = (t2, e2) => {
        const r4 = Object.getOwnPropertyDescriptors(t2), n2 = {};
        Ny(r4, (r5, A2) => {
          let i2;
          false !== (i2 = e2(r5, A2, t2)) && (n2[A2] = i2 || r5);
        }), Object.defineProperties(t2, n2);
      };
      var Hy = "abcdefghijklmnopqrstuvwxyz";
      var Ly = "0123456789";
      var Oy = { DIGIT: Ly, ALPHA: Hy, ALPHA_DIGIT: Hy + Hy.toUpperCase() + Ly };
      var Yy = uy("AsyncFunction");
      var Ky = { isArray: fy, isArrayBuffer: dy, isBuffer: function(t2) {
        return null !== t2 && !py(t2) && null !== t2.constructor && !py(t2.constructor) && yy(t2.constructor.isBuffer) && t2.constructor.isBuffer(t2);
      }, isFormData: (t2) => {
        let e2;
        return t2 && ("function" == typeof FormData && t2 instanceof FormData || yy(t2.append) && ("formdata" === (e2 = gy(t2)) || "object" === e2 && yy(t2.toString) && "[object FormData]" === t2.toString()));
      }, isArrayBufferView: function(t2) {
        let e2;
        return e2 = "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(t2) : t2 && t2.buffer && dy(t2.buffer), e2;
      }, isString: Iy, isNumber: Cy, isBoolean: (t2) => true === t2 || false === t2, isObject: my, isPlainObject: By, isReadableStream: by, isRequest: ky, isResponse: Dy, isHeaders: Sy, isUndefined: py, isDate: Ey, isFile: wy, isBlob: vy, isRegExp: Uy, isFunction: yy, isStream: (t2) => my(t2) && yy(t2.pipe), isURLSearchParams: Qy, isTypedArray: Py, isFileList: _y, forEach: Ny, merge: function t2() {
        const { caseless: e2 } = Fy(this) && this || {}, r4 = {}, n2 = (n3, A2) => {
          const i2 = e2 && My(r4, A2) || A2;
          By(r4[i2]) && By(n3) ? r4[i2] = t2(r4[i2], n3) : By(n3) ? r4[i2] = t2({}, n3) : fy(n3) ? r4[i2] = n3.slice() : r4[i2] = n3;
        };
        for (let t3 = 0, e3 = arguments.length; t3 < e3; t3++)
          arguments[t3] && Ny(arguments[t3], n2);
        return r4;
      }, extend: (t2, e2, r4, { allOwnKeys: n2 } = {}) => (Ny(e2, (e3, n3) => {
        r4 && yy(e3) ? t2[n3] = ay(e3, r4) : t2[n3] = e3;
      }, { allOwnKeys: n2 }), t2), trim: (t2) => t2.trim ? t2.trim() : t2.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""), stripBOM: (t2) => (65279 === t2.charCodeAt(0) && (t2 = t2.slice(1)), t2), inherits: (t2, e2, r4, n2) => {
        t2.prototype = Object.create(e2.prototype, n2), t2.prototype.constructor = t2, Object.defineProperty(t2, "super", { value: e2.prototype }), r4 && Object.assign(t2.prototype, r4);
      }, toFlatObject: (t2, e2, r4, n2) => {
        let A2, i2, o2;
        const s2 = {};
        if (e2 = e2 || {}, null == t2)
          return e2;
        do {
          for (A2 = Object.getOwnPropertyNames(t2), i2 = A2.length; i2-- > 0; )
            o2 = A2[i2], n2 && !n2(o2, t2, e2) || s2[o2] || (e2[o2] = t2[o2], s2[o2] = true);
          t2 = false !== r4 && hy(t2);
        } while (t2 && (!r4 || r4(t2, e2)) && t2 !== Object.prototype);
        return e2;
      }, kindOf: gy, kindOfTest: uy, endsWith: (t2, e2, r4) => {
        t2 = String(t2), (void 0 === r4 || r4 > t2.length) && (r4 = t2.length), r4 -= e2.length;
        const n2 = t2.indexOf(e2, r4);
        return -1 !== n2 && n2 === r4;
      }, toArray: (t2) => {
        if (!t2)
          return null;
        if (fy(t2))
          return t2;
        let e2 = t2.length;
        if (!Cy(e2))
          return null;
        const r4 = new Array(e2);
        for (; e2-- > 0; )
          r4[e2] = t2[e2];
        return r4;
      }, forEachEntry: (t2, e2) => {
        const r4 = (t2 && t2[Symbol.iterator]).call(t2);
        let n2;
        for (; (n2 = r4.next()) && !n2.done; ) {
          const r5 = n2.value;
          e2.call(t2, r5[0], r5[1]);
        }
      }, matchAll: (t2, e2) => {
        let r4;
        const n2 = [];
        for (; null !== (r4 = t2.exec(e2)); )
          n2.push(r4);
        return n2;
      }, isHTMLForm: Ty, hasOwnProperty: Ry, hasOwnProp: Ry, reduceDescriptors: Gy, freezeMethods: (t2) => {
        Gy(t2, (e2, r4) => {
          if (yy(t2) && -1 !== ["arguments", "caller", "callee"].indexOf(r4))
            return false;
          const n2 = t2[r4];
          yy(n2) && (e2.enumerable = false, "writable" in e2 ? e2.writable = false : e2.set || (e2.set = () => {
            throw Error("Can not rewrite read-only method '" + r4 + "'");
          }));
        });
      }, toObjectSet: (t2, e2) => {
        const r4 = {}, n2 = (t3) => {
          t3.forEach((t4) => {
            r4[t4] = true;
          });
        };
        return fy(t2) ? n2(t2) : n2(String(t2).split(e2)), r4;
      }, toCamelCase: (t2) => t2.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g, function(t3, e2, r4) {
        return e2.toUpperCase() + r4;
      }), noop: () => {
      }, toFiniteNumber: (t2, e2) => null != t2 && Number.isFinite(t2 = +t2) ? t2 : e2, findKey: My, global: xy, isContextDefined: Fy, ALPHABET: Oy, generateString: (t2 = 16, e2 = Oy.ALPHA_DIGIT) => {
        let r4 = "";
        const { length: n2 } = e2;
        for (; t2--; )
          r4 += e2[Math.random() * n2 | 0];
        return r4;
      }, isSpecCompliantForm: function(t2) {
        return !!(t2 && yy(t2.append) && "FormData" === t2[Symbol.toStringTag] && t2[Symbol.iterator]);
      }, toJSONObject: (t2) => {
        const e2 = new Array(10), r4 = (t3, n2) => {
          if (my(t3)) {
            if (e2.indexOf(t3) >= 0)
              return;
            if (!("toJSON" in t3)) {
              e2[n2] = t3;
              const A2 = fy(t3) ? [] : {};
              return Ny(t3, (t4, e3) => {
                const i2 = r4(t4, n2 + 1);
                !py(i2) && (A2[e3] = i2);
              }), e2[n2] = void 0, A2;
            }
          }
          return t3;
        };
        return r4(t2, 0);
      }, isAsyncFn: Yy, isThenable: (t2) => t2 && (my(t2) || yy(t2)) && yy(t2.then) && yy(t2.catch) };
      function Jy(t2, e2, r4, n2, A2) {
        Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = t2, this.name = "AxiosError", e2 && (this.code = e2), r4 && (this.config = r4), n2 && (this.request = n2), A2 && (this.response = A2);
      }
      Al(), il(), Al(), il(), Al(), il(), Al(), il(), Al(), il(), Ky.inherits(Jy, Error, { toJSON: function() {
        return { message: this.message, name: this.name, description: this.description, number: this.number, fileName: this.fileName, lineNumber: this.lineNumber, columnNumber: this.columnNumber, stack: this.stack, config: Ky.toJSONObject(this.config), code: this.code, status: this.response && this.response.status ? this.response.status : null };
      } });
      var jy = Jy.prototype;
      var zy = {};
      ["ERR_BAD_OPTION_VALUE", "ERR_BAD_OPTION", "ECONNABORTED", "ETIMEDOUT", "ERR_NETWORK", "ERR_FR_TOO_MANY_REDIRECTS", "ERR_DEPRECATED", "ERR_BAD_RESPONSE", "ERR_BAD_REQUEST", "ERR_CANCELED", "ERR_NOT_SUPPORT", "ERR_INVALID_URL"].forEach((t2) => {
        zy[t2] = { value: t2 };
      }), Object.defineProperties(Jy, zy), Object.defineProperty(jy, "isAxiosError", { value: true }), Jy.from = (t2, e2, r4, n2, A2, i2) => {
        const o2 = Object.create(jy);
        return Ky.toFlatObject(t2, o2, function(t3) {
          return t3 !== Error.prototype;
        }, (t3) => "isAxiosError" !== t3), Jy.call(o2, t2.message, e2, r4, n2, A2), o2.cause = t2, o2.name = t2.name, i2 && Object.assign(o2, i2), o2;
      };
      var qy = Jy;
      Al(), il();
      function Xy(t2) {
        return Ky.isPlainObject(t2) || Ky.isArray(t2);
      }
      function Vy(t2) {
        return Ky.endsWith(t2, "[]") ? t2.slice(0, -2) : t2;
      }
      function Wy(t2, e2, r4) {
        return t2 ? t2.concat(e2).map(function(t3, e3) {
          return t3 = Vy(t3), !r4 && e3 ? "[" + t3 + "]" : t3;
        }).join(r4 ? "." : "") : e2;
      }
      var Zy = Ky.toFlatObject(Ky, {}, null, function(t2) {
        return /^is[A-Z]/.test(t2);
      });
      var $y = function(t2, e2, r4) {
        if (!Ky.isObject(t2))
          throw new TypeError("target must be an object");
        e2 = e2 || new FormData();
        const n2 = (r4 = Ky.toFlatObject(r4, { metaTokens: true, dots: false, indexes: false }, false, function(t3, e3) {
          return !Ky.isUndefined(e3[t3]);
        })).metaTokens, A2 = r4.visitor || c2, i2 = r4.dots, o2 = r4.indexes, s2 = (r4.Blob || "undefined" != typeof Blob && Blob) && Ky.isSpecCompliantForm(e2);
        if (!Ky.isFunction(A2))
          throw new TypeError("visitor must be a function");
        function a2(t3) {
          if (null === t3)
            return "";
          if (Ky.isDate(t3))
            return t3.toISOString();
          if (!s2 && Ky.isBlob(t3))
            throw new qy("Blob is not supported. Use a Buffer instead.");
          return Ky.isArrayBuffer(t3) || Ky.isTypedArray(t3) ? s2 && "function" == typeof Blob ? new Blob([t3]) : Buffer.from(t3) : t3;
        }
        function c2(t3, r5, A3) {
          let s3 = t3;
          if (t3 && !A3 && "object" == typeof t3) {
            if (Ky.endsWith(r5, "{}"))
              r5 = n2 ? r5 : r5.slice(0, -2), t3 = JSON.stringify(t3);
            else if (Ky.isArray(t3) && function(t4) {
              return Ky.isArray(t4) && !t4.some(Xy);
            }(t3) || (Ky.isFileList(t3) || Ky.endsWith(r5, "[]")) && (s3 = Ky.toArray(t3)))
              return r5 = Vy(r5), s3.forEach(function(t4, n3) {
                !Ky.isUndefined(t4) && null !== t4 && e2.append(true === o2 ? Wy([r5], n3, i2) : null === o2 ? r5 : r5 + "[]", a2(t4));
              }), false;
          }
          return !!Xy(t3) || (e2.append(Wy(A3, r5, i2), a2(t3)), false);
        }
        const h2 = [], g2 = Object.assign(Zy, { defaultVisitor: c2, convertValue: a2, isVisitable: Xy });
        if (!Ky.isObject(t2))
          throw new TypeError("data must be an object");
        return function t3(r5, n3) {
          if (!Ky.isUndefined(r5)) {
            if (-1 !== h2.indexOf(r5))
              throw Error("Circular reference detected in " + n3.join("."));
            h2.push(r5), Ky.forEach(r5, function(r6, i3) {
              true === (!(Ky.isUndefined(r6) || null === r6) && A2.call(e2, r6, Ky.isString(i3) ? i3.trim() : i3, n3, g2)) && t3(r6, n3 ? n3.concat(i3) : [i3]);
            }), h2.pop();
          }
        }(t2), e2;
      };
      function tC(t2) {
        const e2 = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+", "%00": "\0" };
        return encodeURIComponent(t2).replace(/[!'()~]|%20|%00/g, function(t3) {
          return e2[t3];
        });
      }
      function eC(t2, e2) {
        this._pairs = [], t2 && $y(t2, this, e2);
      }
      var rC = eC.prototype;
      rC.append = function(t2, e2) {
        this._pairs.push([t2, e2]);
      }, rC.toString = function(t2) {
        const e2 = t2 ? function(e3) {
          return t2.call(this, e3, tC);
        } : tC;
        return this._pairs.map(function(t3) {
          return e2(t3[0]) + "=" + e2(t3[1]);
        }, "").join("&");
      };
      var nC = eC;
      function AC(t2) {
        return encodeURIComponent(t2).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
      }
      function iC(t2, e2, r4) {
        if (!e2)
          return t2;
        const n2 = r4 && r4.encode || AC, A2 = r4 && r4.serialize;
        let i2;
        if (i2 = A2 ? A2(e2, r4) : Ky.isURLSearchParams(e2) ? e2.toString() : new nC(e2, r4).toString(n2), i2) {
          const e3 = t2.indexOf("#");
          -1 !== e3 && (t2 = t2.slice(0, e3)), t2 += (-1 === t2.indexOf("?") ? "?" : "&") + i2;
        }
        return t2;
      }
      Al(), il();
      var oC = class {
        constructor() {
          this.handlers = [];
        }
        use(t2, e2, r4) {
          return this.handlers.push({ fulfilled: t2, rejected: e2, synchronous: !!r4 && r4.synchronous, runWhen: r4 ? r4.runWhen : null }), this.handlers.length - 1;
        }
        eject(t2) {
          this.handlers[t2] && (this.handlers[t2] = null);
        }
        clear() {
          this.handlers && (this.handlers = []);
        }
        forEach(t2) {
          Ky.forEach(this.handlers, function(e2) {
            null !== e2 && t2(e2);
          });
        }
      };
      Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var sC = { silentJSONParsing: true, forcedJSONParsing: true, clarifyTimeoutError: false };
      Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var aC = "undefined" != typeof URLSearchParams ? URLSearchParams : nC;
      Al(), il();
      var cC = "undefined" != typeof FormData ? FormData : null;
      Al(), il();
      var hC = { isBrowser: true, classes: { URLSearchParams: aC, FormData: cC, Blob: "undefined" != typeof Blob ? Blob : null }, protocols: ["http", "https", "file", "blob", "url", "data"] };
      var gC = {};
      ((t2, e2) => {
        for (var r4 in e2)
          Vu(t2, r4, { get: e2[r4], enumerable: true });
      })(gC, { hasBrowserEnv: () => lC, hasStandardBrowserEnv: () => fC, hasStandardBrowserWebWorkerEnv: () => pC, origin: () => dC }), Al(), il();
      var uC;
      var lC = "undefined" != typeof window && "undefined" != typeof document;
      var fC = (uC = "undefined" != typeof navigator && navigator.product, lC && ["ReactNative", "NativeScript", "NS"].indexOf(uC) < 0);
      var pC = "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope && "function" == typeof self.importScripts;
      var dC = lC && window.location.href || "http://localhost";
      var IC = { ...gC, ...hC };
      Al(), il();
      var yC = function(t2) {
        function e2(t3, r4, n2, A2) {
          let i2 = t3[A2++];
          if ("__proto__" === i2)
            return true;
          const o2 = Number.isFinite(+i2), s2 = A2 >= t3.length;
          if (i2 = !i2 && Ky.isArray(n2) ? n2.length : i2, s2)
            return Ky.hasOwnProp(n2, i2) ? n2[i2] = [n2[i2], r4] : n2[i2] = r4, !o2;
          n2[i2] && Ky.isObject(n2[i2]) || (n2[i2] = []);
          return e2(t3, r4, n2[i2], A2) && Ky.isArray(n2[i2]) && (n2[i2] = function(t4) {
            const e3 = {}, r5 = Object.keys(t4);
            let n3;
            const A3 = r5.length;
            let i3;
            for (n3 = 0; n3 < A3; n3++)
              i3 = r5[n3], e3[i3] = t4[i3];
            return e3;
          }(n2[i2])), !o2;
        }
        if (Ky.isFormData(t2) && Ky.isFunction(t2.entries)) {
          const r4 = {};
          return Ky.forEachEntry(t2, (t3, n2) => {
            e2(function(t4) {
              return Ky.matchAll(/\w+|\[(\w*)]/g, t4).map((t5) => "[]" === t5[0] ? "" : t5[1] || t5[0]);
            }(t3), n2, r4, 0);
          }), r4;
        }
        return null;
      };
      var CC = { transitional: sC, adapter: ["xhr", "http", "fetch"], transformRequest: [function(t2, e2) {
        const r4 = e2.getContentType() || "", n2 = r4.indexOf("application/json") > -1, A2 = Ky.isObject(t2);
        A2 && Ky.isHTMLForm(t2) && (t2 = new FormData(t2));
        if (Ky.isFormData(t2))
          return n2 ? JSON.stringify(yC(t2)) : t2;
        if (Ky.isArrayBuffer(t2) || Ky.isBuffer(t2) || Ky.isStream(t2) || Ky.isFile(t2) || Ky.isBlob(t2) || Ky.isReadableStream(t2))
          return t2;
        if (Ky.isArrayBufferView(t2))
          return t2.buffer;
        if (Ky.isURLSearchParams(t2))
          return e2.setContentType("application/x-www-form-urlencoded;charset=utf-8", false), t2.toString();
        let i2;
        if (A2) {
          if (r4.indexOf("application/x-www-form-urlencoded") > -1)
            return function(t3, e3) {
              return $y(t3, new IC.classes.URLSearchParams(), Object.assign({ visitor: function(t4, e4, r5, n3) {
                return IC.isNode && Ky.isBuffer(t4) ? (this.append(e4, t4.toString("base64")), false) : n3.defaultVisitor.apply(this, arguments);
              } }, e3));
            }(t2, this.formSerializer).toString();
          if ((i2 = Ky.isFileList(t2)) || r4.indexOf("multipart/form-data") > -1) {
            const e3 = this.env && this.env.FormData;
            return $y(i2 ? { "files[]": t2 } : t2, e3 && new e3(), this.formSerializer);
          }
        }
        return A2 || n2 ? (e2.setContentType("application/json", false), function(t3, e3, r5) {
          if (Ky.isString(t3))
            try {
              return (e3 || JSON.parse)(t3), Ky.trim(t3);
            } catch (t4) {
              if ("SyntaxError" !== t4.name)
                throw t4;
            }
          return (r5 || JSON.stringify)(t3);
        }(t2)) : t2;
      }], transformResponse: [function(t2) {
        const e2 = this.transitional || CC.transitional, r4 = e2 && e2.forcedJSONParsing, n2 = "json" === this.responseType;
        if (Ky.isResponse(t2) || Ky.isReadableStream(t2))
          return t2;
        if (t2 && Ky.isString(t2) && (r4 && !this.responseType || n2)) {
          const r5 = !(e2 && e2.silentJSONParsing) && n2;
          try {
            return JSON.parse(t2);
          } catch (t3) {
            if (r5) {
              if ("SyntaxError" === t3.name)
                throw qy.from(t3, qy.ERR_BAD_RESPONSE, this, null, this.response);
              throw t3;
            }
          }
        }
        return t2;
      }], timeout: 0, xsrfCookieName: "XSRF-TOKEN", xsrfHeaderName: "X-XSRF-TOKEN", maxContentLength: -1, maxBodyLength: -1, env: { FormData: IC.classes.FormData, Blob: IC.classes.Blob }, validateStatus: function(t2) {
        return t2 >= 200 && t2 < 300;
      }, headers: { common: { Accept: "application/json, text/plain, */*", "Content-Type": void 0 } } };
      Ky.forEach(["delete", "get", "head", "post", "put", "patch"], (t2) => {
        CC.headers[t2] = {};
      });
      var mC = CC;
      Al(), il(), Al(), il();
      var BC = Ky.toObjectSet(["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"]);
      var EC3 = Symbol("internals");
      function wC(t2) {
        return t2 && String(t2).trim().toLowerCase();
      }
      function vC(t2) {
        return false === t2 || null == t2 ? t2 : Ky.isArray(t2) ? t2.map(vC) : String(t2);
      }
      function _C(t2, e2, r4, n2, A2) {
        return Ky.isFunction(n2) ? n2.call(this, e2, r4) : (A2 && (e2 = r4), Ky.isString(e2) ? Ky.isString(n2) ? -1 !== e2.indexOf(n2) : Ky.isRegExp(n2) ? n2.test(e2) : void 0 : void 0);
      }
      var QC = class {
        constructor(t2) {
          t2 && this.set(t2);
        }
        set(t2, e2, r4) {
          const n2 = this;
          function A2(t3, e3, r5) {
            const A3 = wC(e3);
            if (!A3)
              throw new Error("header name must be a non-empty string");
            const i3 = Ky.findKey(n2, A3);
            (!i3 || void 0 === n2[i3] || true === r5 || void 0 === r5 && false !== n2[i3]) && (n2[i3 || e3] = vC(t3));
          }
          const i2 = (t3, e3) => Ky.forEach(t3, (t4, r5) => A2(t4, r5, e3));
          if (Ky.isPlainObject(t2) || t2 instanceof this.constructor)
            i2(t2, e2);
          else if (Ky.isString(t2) && (t2 = t2.trim()) && !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(t2.trim()))
            i2(((t3) => {
              const e3 = {};
              let r5, n3, A3;
              return t3 && t3.split("\n").forEach(function(t4) {
                A3 = t4.indexOf(":"), r5 = t4.substring(0, A3).trim().toLowerCase(), n3 = t4.substring(A3 + 1).trim(), !r5 || e3[r5] && BC[r5] || ("set-cookie" === r5 ? e3[r5] ? e3[r5].push(n3) : e3[r5] = [n3] : e3[r5] = e3[r5] ? e3[r5] + ", " + n3 : n3);
              }), e3;
            })(t2), e2);
          else if (Ky.isHeaders(t2))
            for (const [e3, n3] of t2.entries())
              A2(n3, e3, r4);
          else
            null != t2 && A2(e2, t2, r4);
          return this;
        }
        get(t2, e2) {
          if (t2 = wC(t2)) {
            const r4 = Ky.findKey(this, t2);
            if (r4) {
              const t3 = this[r4];
              if (!e2)
                return t3;
              if (true === e2)
                return function(t4) {
                  const e3 = /* @__PURE__ */ Object.create(null), r5 = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                  let n2;
                  for (; n2 = r5.exec(t4); )
                    e3[n2[1]] = n2[2];
                  return e3;
                }(t3);
              if (Ky.isFunction(e2))
                return e2.call(this, t3, r4);
              if (Ky.isRegExp(e2))
                return e2.exec(t3);
              throw new TypeError("parser must be boolean|regexp|function");
            }
          }
        }
        has(t2, e2) {
          if (t2 = wC(t2)) {
            const r4 = Ky.findKey(this, t2);
            return !(!r4 || void 0 === this[r4] || e2 && !_C(0, this[r4], r4, e2));
          }
          return false;
        }
        delete(t2, e2) {
          const r4 = this;
          let n2 = false;
          function A2(t3) {
            if (t3 = wC(t3)) {
              const A3 = Ky.findKey(r4, t3);
              !A3 || e2 && !_C(0, r4[A3], A3, e2) || (delete r4[A3], n2 = true);
            }
          }
          return Ky.isArray(t2) ? t2.forEach(A2) : A2(t2), n2;
        }
        clear(t2) {
          const e2 = Object.keys(this);
          let r4 = e2.length, n2 = false;
          for (; r4--; ) {
            const A2 = e2[r4];
            t2 && !_C(0, this[A2], A2, t2, true) || (delete this[A2], n2 = true);
          }
          return n2;
        }
        normalize(t2) {
          const e2 = this, r4 = {};
          return Ky.forEach(this, (n2, A2) => {
            const i2 = Ky.findKey(r4, A2);
            if (i2)
              return e2[i2] = vC(n2), void delete e2[A2];
            const o2 = t2 ? function(t3) {
              return t3.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (t4, e3, r5) => e3.toUpperCase() + r5);
            }(A2) : String(A2).trim();
            o2 !== A2 && delete e2[A2], e2[o2] = vC(n2), r4[o2] = true;
          }), this;
        }
        concat(...t2) {
          return this.constructor.concat(this, ...t2);
        }
        toJSON(t2) {
          const e2 = /* @__PURE__ */ Object.create(null);
          return Ky.forEach(this, (r4, n2) => {
            null != r4 && false !== r4 && (e2[n2] = t2 && Ky.isArray(r4) ? r4.join(", ") : r4);
          }), e2;
        }
        [Symbol.iterator]() {
          return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
          return Object.entries(this.toJSON()).map(([t2, e2]) => t2 + ": " + e2).join("\n");
        }
        get [Symbol.toStringTag]() {
          return "AxiosHeaders";
        }
        static from(t2) {
          return t2 instanceof this ? t2 : new this(t2);
        }
        static concat(t2, ...e2) {
          const r4 = new this(t2);
          return e2.forEach((t3) => r4.set(t3)), r4;
        }
        static accessor(t2) {
          const e2 = (this[EC3] = this[EC3] = { accessors: {} }).accessors, r4 = this.prototype;
          function n2(t3) {
            const n3 = wC(t3);
            e2[n3] || (!function(t4, e3) {
              const r5 = Ky.toCamelCase(" " + e3);
              ["get", "set", "has"].forEach((n4) => {
                Object.defineProperty(t4, n4 + r5, { value: function(t5, r6, A2) {
                  return this[n4].call(this, e3, t5, r6, A2);
                }, configurable: true });
              });
            }(r4, t3), e2[n3] = true);
          }
          return Ky.isArray(t2) ? t2.forEach(n2) : n2(t2), this;
        }
      };
      QC.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]), Ky.reduceDescriptors(QC.prototype, ({ value: t2 }, e2) => {
        let r4 = e2[0].toUpperCase() + e2.slice(1);
        return { get: () => t2, set(t3) {
          this[r4] = t3;
        } };
      }), Ky.freezeMethods(QC);
      var bC = QC;
      function kC(t2, e2) {
        const r4 = this || mC, n2 = e2 || r4, A2 = bC.from(n2.headers);
        let i2 = n2.data;
        return Ky.forEach(t2, function(t3) {
          i2 = t3.call(r4, i2, A2.normalize(), e2 ? e2.status : void 0);
        }), A2.normalize(), i2;
      }
      function DC(t2) {
        return !(!t2 || !t2.__CANCEL__);
      }
      function SC(t2, e2, r4) {
        qy.call(this, null == t2 ? "canceled" : t2, qy.ERR_CANCELED, e2, r4), this.name = "CanceledError";
      }
      Al(), il(), Al(), il(), Ky.inherits(SC, qy, { __CANCEL__: true });
      var NC = SC;
      function MC(t2, e2, r4) {
        const n2 = r4.config.validateStatus;
        r4.status && n2 && !n2(r4.status) ? e2(new qy("Request failed with status code " + r4.status, [qy.ERR_BAD_REQUEST, qy.ERR_BAD_RESPONSE][Math.floor(r4.status / 100) - 4], r4.config, r4.request, r4)) : t2(r4);
      }
      Al(), il(), Al(), il(), Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var xC = function(t2, e2) {
        t2 = t2 || 10;
        const r4 = new Array(t2), n2 = new Array(t2);
        let A2, i2 = 0, o2 = 0;
        return e2 = void 0 !== e2 ? e2 : 1e3, function(s2) {
          const a2 = Date.now(), c2 = n2[o2];
          A2 || (A2 = a2), r4[i2] = s2, n2[i2] = a2;
          let h2 = o2, g2 = 0;
          for (; h2 !== i2; )
            g2 += r4[h2++], h2 %= t2;
          if (i2 = (i2 + 1) % t2, i2 === o2 && (o2 = (o2 + 1) % t2), a2 - A2 < e2)
            return;
          const u2 = c2 && a2 - c2;
          return u2 ? Math.round(1e3 * g2 / u2) : void 0;
        };
      };
      Al(), il();
      var FC = function(t2, e2) {
        let r4 = 0;
        const n2 = 1e3 / e2;
        let A2 = null;
        return function() {
          const e3 = true === this, i2 = Date.now();
          if (e3 || i2 - r4 > n2)
            return A2 && (clearTimeout(A2), A2 = null), r4 = i2, t2.apply(null, arguments);
          A2 || (A2 = setTimeout(() => (A2 = null, r4 = Date.now(), t2.apply(null, arguments)), n2 - (i2 - r4)));
        };
      };
      var PC = (t2, e2, r4 = 3) => {
        let n2 = 0;
        const A2 = xC(50, 250);
        return FC((r5) => {
          const i2 = r5.loaded, o2 = r5.lengthComputable ? r5.total : void 0, s2 = i2 - n2, a2 = A2(s2);
          n2 = i2;
          const c2 = { loaded: i2, total: o2, progress: o2 ? i2 / o2 : void 0, bytes: s2, rate: a2 || void 0, estimated: a2 && o2 && i2 <= o2 ? (o2 - i2) / a2 : void 0, event: r5, lengthComputable: null != o2 };
          c2[e2 ? "download" : "upload"] = true, t2(c2);
        }, r4);
      };
      Al(), il(), Al(), il();
      var TC = IC.hasStandardBrowserEnv ? function() {
        const t2 = /(msie|trident)/i.test(navigator.userAgent), e2 = document.createElement("a");
        let r4;
        function n2(r5) {
          let n3 = r5;
          return t2 && (e2.setAttribute("href", n3), n3 = e2.href), e2.setAttribute("href", n3), { href: e2.href, protocol: e2.protocol ? e2.protocol.replace(/:$/, "") : "", host: e2.host, search: e2.search ? e2.search.replace(/^\?/, "") : "", hash: e2.hash ? e2.hash.replace(/^#/, "") : "", hostname: e2.hostname, port: e2.port, pathname: "/" === e2.pathname.charAt(0) ? e2.pathname : "/" + e2.pathname };
        }
        return r4 = n2(window.location.href), function(t3) {
          const e3 = Ky.isString(t3) ? n2(t3) : t3;
          return e3.protocol === r4.protocol && e3.host === r4.host;
        };
      }() : /* @__PURE__ */ function() {
        return function() {
          return true;
        };
      }();
      Al(), il();
      var RC = IC.hasStandardBrowserEnv ? { write(t2, e2, r4, n2, A2, i2) {
        const o2 = [t2 + "=" + encodeURIComponent(e2)];
        Ky.isNumber(r4) && o2.push("expires=" + new Date(r4).toGMTString()), Ky.isString(n2) && o2.push("path=" + n2), Ky.isString(A2) && o2.push("domain=" + A2), true === i2 && o2.push("secure"), document.cookie = o2.join("; ");
      }, read(t2) {
        const e2 = document.cookie.match(new RegExp("(^|;\\s*)(" + t2 + ")=([^;]*)"));
        return e2 ? decodeURIComponent(e2[3]) : null;
      }, remove(t2) {
        this.write(t2, "", Date.now() - 864e5);
      } } : { write() {
      }, read: () => null, remove() {
      } };
      function UC(t2, e2) {
        return t2 && !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(e2) ? function(t3, e3) {
          return e3 ? t3.replace(/\/?\/$/, "") + "/" + e3.replace(/^\/+/, "") : t3;
        }(t2, e2) : e2;
      }
      Al(), il(), Al(), il(), Al(), il(), Al(), il();
      var GC = (t2) => t2 instanceof bC ? { ...t2 } : t2;
      function HC(t2, e2) {
        e2 = e2 || {};
        const r4 = {};
        function n2(t3, e3, r5) {
          return Ky.isPlainObject(t3) && Ky.isPlainObject(e3) ? Ky.merge.call({ caseless: r5 }, t3, e3) : Ky.isPlainObject(e3) ? Ky.merge({}, e3) : Ky.isArray(e3) ? e3.slice() : e3;
        }
        function A2(t3, e3, r5) {
          return Ky.isUndefined(e3) ? Ky.isUndefined(t3) ? void 0 : n2(void 0, t3, r5) : n2(t3, e3, r5);
        }
        function i2(t3, e3) {
          if (!Ky.isUndefined(e3))
            return n2(void 0, e3);
        }
        function o2(t3, e3) {
          return Ky.isUndefined(e3) ? Ky.isUndefined(t3) ? void 0 : n2(void 0, t3) : n2(void 0, e3);
        }
        function s2(r5, A3, i3) {
          return i3 in e2 ? n2(r5, A3) : i3 in t2 ? n2(void 0, r5) : void 0;
        }
        const a2 = { url: i2, method: i2, data: i2, baseURL: o2, transformRequest: o2, transformResponse: o2, paramsSerializer: o2, timeout: o2, timeoutMessage: o2, withCredentials: o2, withXSRFToken: o2, adapter: o2, responseType: o2, xsrfCookieName: o2, xsrfHeaderName: o2, onUploadProgress: o2, onDownloadProgress: o2, decompress: o2, maxContentLength: o2, maxBodyLength: o2, beforeRedirect: o2, transport: o2, httpAgent: o2, httpsAgent: o2, cancelToken: o2, socketPath: o2, responseEncoding: o2, validateStatus: s2, headers: (t3, e3) => A2(GC(t3), GC(e3), true) };
        return Ky.forEach(Object.keys(Object.assign({}, t2, e2)), function(n3) {
          const i3 = a2[n3] || A2, o3 = i3(t2[n3], e2[n3], n3);
          Ky.isUndefined(o3) && i3 !== s2 || (r4[n3] = o3);
        }), r4;
      }
      var LC = (t2) => {
        const e2 = HC({}, t2);
        let r4, { data: n2, withXSRFToken: A2, xsrfHeaderName: i2, xsrfCookieName: o2, headers: s2, auth: a2 } = e2;
        if (e2.headers = s2 = bC.from(s2), e2.url = iC(UC(e2.baseURL, e2.url), t2.params, t2.paramsSerializer), a2 && s2.set("Authorization", "Basic " + btoa((a2.username || "") + ":" + (a2.password ? unescape(encodeURIComponent(a2.password)) : ""))), Ky.isFormData(n2)) {
          if (IC.hasStandardBrowserEnv || IC.hasStandardBrowserWebWorkerEnv)
            s2.setContentType(void 0);
          else if (false !== (r4 = s2.getContentType())) {
            const [t3, ...e3] = r4 ? r4.split(";").map((t4) => t4.trim()).filter(Boolean) : [];
            s2.setContentType([t3 || "multipart/form-data", ...e3].join("; "));
          }
        }
        if (IC.hasStandardBrowserEnv && (A2 && Ky.isFunction(A2) && (A2 = A2(e2)), A2 || false !== A2 && TC(e2.url))) {
          const t3 = i2 && o2 && RC.read(o2);
          t3 && s2.set(i2, t3);
        }
        return e2;
      };
      var OC = "undefined" != typeof XMLHttpRequest && function(t2) {
        return new Promise(function(e2, r4) {
          const n2 = LC(t2);
          let A2 = n2.data;
          const i2 = bC.from(n2.headers).normalize();
          let o2, { responseType: s2 } = n2;
          function a2() {
            n2.cancelToken && n2.cancelToken.unsubscribe(o2), n2.signal && n2.signal.removeEventListener("abort", o2);
          }
          let c2 = new XMLHttpRequest();
          function h2() {
            if (!c2)
              return;
            const n3 = bC.from("getAllResponseHeaders" in c2 && c2.getAllResponseHeaders());
            MC(function(t3) {
              e2(t3), a2();
            }, function(t3) {
              r4(t3), a2();
            }, { data: s2 && "text" !== s2 && "json" !== s2 ? c2.response : c2.responseText, status: c2.status, statusText: c2.statusText, headers: n3, config: t2, request: c2 }), c2 = null;
          }
          c2.open(n2.method.toUpperCase(), n2.url, true), c2.timeout = n2.timeout, "onloadend" in c2 ? c2.onloadend = h2 : c2.onreadystatechange = function() {
            c2 && 4 === c2.readyState && (0 !== c2.status || c2.responseURL && 0 === c2.responseURL.indexOf("file:")) && setTimeout(h2);
          }, c2.onabort = function() {
            c2 && (r4(new qy("Request aborted", qy.ECONNABORTED, n2, c2)), c2 = null);
          }, c2.onerror = function() {
            r4(new qy("Network Error", qy.ERR_NETWORK, n2, c2)), c2 = null;
          }, c2.ontimeout = function() {
            let t3 = n2.timeout ? "timeout of " + n2.timeout + "ms exceeded" : "timeout exceeded";
            const e3 = n2.transitional || sC;
            n2.timeoutErrorMessage && (t3 = n2.timeoutErrorMessage), r4(new qy(t3, e3.clarifyTimeoutError ? qy.ETIMEDOUT : qy.ECONNABORTED, n2, c2)), c2 = null;
          }, void 0 === A2 && i2.setContentType(null), "setRequestHeader" in c2 && Ky.forEach(i2.toJSON(), function(t3, e3) {
            c2.setRequestHeader(e3, t3);
          }), Ky.isUndefined(n2.withCredentials) || (c2.withCredentials = !!n2.withCredentials), s2 && "json" !== s2 && (c2.responseType = n2.responseType), "function" == typeof n2.onDownloadProgress && c2.addEventListener("progress", PC(n2.onDownloadProgress, true)), "function" == typeof n2.onUploadProgress && c2.upload && c2.upload.addEventListener("progress", PC(n2.onUploadProgress)), (n2.cancelToken || n2.signal) && (o2 = (e3) => {
            c2 && (r4(!e3 || e3.type ? new NC(null, t2, c2) : e3), c2.abort(), c2 = null);
          }, n2.cancelToken && n2.cancelToken.subscribe(o2), n2.signal && (n2.signal.aborted ? o2() : n2.signal.addEventListener("abort", o2)));
          const g2 = function(t3) {
            const e3 = /^([-+\w]{1,25})(:?\/\/|:)/.exec(t3);
            return e3 && e3[1] || "";
          }(n2.url);
          g2 && -1 === IC.protocols.indexOf(g2) ? r4(new qy("Unsupported protocol " + g2 + ":", qy.ERR_BAD_REQUEST, t2)) : c2.send(A2 || null);
        });
      };
      Al(), il(), Al(), il();
      var YC = (t2, e2) => {
        let r4, n2 = new AbortController();
        const A2 = function(t3) {
          if (!r4) {
            r4 = true, o2();
            const e3 = t3 instanceof Error ? t3 : this.reason;
            n2.abort(e3 instanceof qy ? e3 : new NC(e3 instanceof Error ? e3.message : e3));
          }
        };
        let i2 = e2 && setTimeout(() => {
          A2(new qy(`timeout ${e2} of ms exceeded`, qy.ETIMEDOUT));
        }, e2);
        const o2 = () => {
          t2 && (i2 && clearTimeout(i2), i2 = null, t2.forEach((t3) => {
            t3 && (t3.removeEventListener ? t3.removeEventListener("abort", A2) : t3.unsubscribe(A2));
          }), t2 = null);
        };
        t2.forEach((t3) => t3 && t3.addEventListener && t3.addEventListener("abort", A2));
        const { signal: s2 } = n2;
        return s2.unsubscribe = o2, [s2, () => {
          i2 && clearTimeout(i2), i2 = null;
        }];
      };
      Al(), il();
      var KC;
      var JC = function* (t2, e2) {
        let r4 = t2.byteLength;
        if (!e2 || r4 < e2)
          return void (yield t2);
        let n2, A2 = 0;
        for (; A2 < r4; )
          n2 = A2 + e2, yield t2.slice(A2, n2), A2 = n2;
      };
      var jC = (t2, e2, r4, n2, A2) => {
        const i2 = async function* (t3, e3, r5) {
          for await (const n3 of t3)
            yield* JC(ArrayBuffer.isView(n3) ? n3 : await r5(String(n3)), e3);
        }(t2, e2, A2);
        let o2 = 0;
        return new ReadableStream({ type: "bytes", async pull(t3) {
          const { done: e3, value: A3 } = await i2.next();
          if (e3)
            return t3.close(), void n2();
          let s2 = A3.byteLength;
          r4 && r4(o2 += s2), t3.enqueue(new Uint8Array(A3));
        }, cancel: (t3) => (n2(t3), i2.return()) }, { highWaterMark: 2 });
      };
      var zC = (t2, e2) => {
        const r4 = null != t2;
        return (n2) => setTimeout(() => e2({ lengthComputable: r4, total: t2, loaded: n2 }));
      };
      var qC = "undefined" != typeof fetch;
      var XC = qC && "undefined" != typeof ReadableStream;
      var VC = qC && ("undefined" != typeof TextEncoder ? /* @__PURE__ */ ((t2) => (e2) => t2.encode(e2))(new TextEncoder()) : async (t2) => new Uint8Array(await new Response(t2).arrayBuffer()));
      var WC = XC && (() => {
        let t2 = false;
        const e2 = new Request(IC.origin, { body: new ReadableStream(), method: "POST", get duplex() {
          return t2 = true, "half";
        } }).headers.has("Content-Type");
        return t2 && !e2;
      })();
      var ZC = XC && !!(() => {
        try {
          return Ky.isReadableStream(new Response("").body);
        } catch (t2) {
        }
      })();
      var $C = { stream: ZC && ((t2) => t2.body) };
      qC && (KC = new Response(), ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((t2) => {
        !$C[t2] && ($C[t2] = Ky.isFunction(KC[t2]) ? (e2) => e2[t2]() : (e2, r4) => {
          throw new qy(`Response type '${t2}' is not supported`, qy.ERR_NOT_SUPPORT, r4);
        });
      }));
      var tm = async (t2, e2) => {
        const r4 = Ky.toFiniteNumber(t2.getContentLength());
        return null == r4 ? (async (t3) => null == t3 ? 0 : Ky.isBlob(t3) ? t3.size : Ky.isSpecCompliantForm(t3) ? (await new Request(t3).arrayBuffer()).byteLength : Ky.isArrayBufferView(t3) ? t3.byteLength : (Ky.isURLSearchParams(t3) && (t3 += ""), Ky.isString(t3) ? (await VC(t3)).byteLength : void 0))(e2) : r4;
      };
      var em = { http: null, xhr: OC, fetch: qC && (async (t2) => {
        let { url: e2, method: r4, data: n2, signal: A2, cancelToken: i2, timeout: o2, onDownloadProgress: s2, onUploadProgress: a2, responseType: c2, headers: h2, withCredentials: g2 = "same-origin", fetchOptions: u2 } = LC(t2);
        c2 = c2 ? (c2 + "").toLowerCase() : "text";
        let l2, f2, [p2, d2] = A2 || i2 || o2 ? YC([A2, i2], o2) : [];
        const I2 = () => {
          !l2 && setTimeout(() => {
            p2 && p2.unsubscribe();
          }), l2 = true;
        };
        let y2;
        try {
          if (a2 && WC && "get" !== r4 && "head" !== r4 && 0 !== (y2 = await tm(h2, n2))) {
            let t3, r5 = new Request(e2, { method: "POST", body: n2, duplex: "half" });
            Ky.isFormData(n2) && (t3 = r5.headers.get("content-type")) && h2.setContentType(t3), r5.body && (n2 = jC(r5.body, 65536, zC(y2, PC(a2)), null, VC));
          }
          Ky.isString(g2) || (g2 = g2 ? "cors" : "omit"), f2 = new Request(e2, { ...u2, signal: p2, method: r4.toUpperCase(), headers: h2.normalize().toJSON(), body: n2, duplex: "half", withCredentials: g2 });
          let A3 = await fetch(f2);
          const i3 = ZC && ("stream" === c2 || "response" === c2);
          if (ZC && (s2 || i3)) {
            const t3 = {};
            ["status", "statusText", "headers"].forEach((e4) => {
              t3[e4] = A3[e4];
            });
            const e3 = Ky.toFiniteNumber(A3.headers.get("content-length"));
            A3 = new Response(jC(A3.body, 65536, s2 && zC(e3, PC(s2, true)), i3 && I2, VC), t3);
          }
          c2 = c2 || "text";
          let o3 = await $C[Ky.findKey($C, c2) || "text"](A3, t2);
          return !i3 && I2(), d2 && d2(), await new Promise((e3, r5) => {
            MC(e3, r5, { data: o3, headers: bC.from(A3.headers), status: A3.status, statusText: A3.statusText, config: t2, request: f2 });
          });
        } catch (e3) {
          if (I2(), e3 && "TypeError" === e3.name && /fetch/i.test(e3.message))
            throw Object.assign(new qy("Network Error", qy.ERR_NETWORK, t2, f2), { cause: e3.cause || e3 });
          throw qy.from(e3, e3 && e3.code, t2, f2);
        }
      }) };
      Ky.forEach(em, (t2, e2) => {
        if (t2) {
          try {
            Object.defineProperty(t2, "name", { value: e2 });
          } catch (t3) {
          }
          Object.defineProperty(t2, "adapterName", { value: e2 });
        }
      });
      var rm = (t2) => `- ${t2}`;
      var nm = (t2) => Ky.isFunction(t2) || null === t2 || false === t2;
      var Am = (t2) => {
        t2 = Ky.isArray(t2) ? t2 : [t2];
        const { length: e2 } = t2;
        let r4, n2;
        const A2 = {};
        for (let i2 = 0; i2 < e2; i2++) {
          let e3;
          if (r4 = t2[i2], n2 = r4, !nm(r4) && (n2 = em[(e3 = String(r4)).toLowerCase()], void 0 === n2))
            throw new qy(`Unknown adapter '${e3}'`);
          if (n2)
            break;
          A2[e3 || "#" + i2] = n2;
        }
        if (!n2) {
          const t3 = Object.entries(A2).map(([t4, e3]) => `adapter ${t4} ` + (false === e3 ? "is not supported by the environment" : "is not available in the build"));
          let r5 = e2 ? t3.length > 1 ? "since :\n" + t3.map(rm).join("\n") : " " + rm(t3[0]) : "as no adapter specified";
          throw new qy("There is no suitable adapter to dispatch the request " + r5, "ERR_NOT_SUPPORT");
        }
        return n2;
      };
      function im(t2) {
        if (t2.cancelToken && t2.cancelToken.throwIfRequested(), t2.signal && t2.signal.aborted)
          throw new NC(null, t2);
      }
      function om(t2) {
        im(t2), t2.headers = bC.from(t2.headers), t2.data = kC.call(t2, t2.transformRequest), -1 !== ["post", "put", "patch"].indexOf(t2.method) && t2.headers.setContentType("application/x-www-form-urlencoded", false);
        return Am(t2.adapter || mC.adapter)(t2).then(function(e2) {
          return im(t2), e2.data = kC.call(t2, t2.transformResponse, e2), e2.headers = bC.from(e2.headers), e2;
        }, function(e2) {
          return DC(e2) || (im(t2), e2 && e2.response && (e2.response.data = kC.call(t2, t2.transformResponse, e2.response), e2.response.headers = bC.from(e2.response.headers))), Promise.reject(e2);
        });
      }
      Al(), il(), Al(), il();
      var sm = "1.7.1";
      var am = {};
      ["object", "boolean", "number", "function", "string", "symbol"].forEach((t2, e2) => {
        am[t2] = function(r4) {
          return typeof r4 === t2 || "a" + (e2 < 1 ? "n " : " ") + t2;
        };
      });
      var cm = {};
      am.transitional = function(t2, e2, r4) {
        function n2(t3, e3) {
          return "[Axios v1.7.1] Transitional option '" + t3 + "'" + e3 + (r4 ? ". " + r4 : "");
        }
        return (r5, A2, i2) => {
          if (false === t2)
            throw new qy(n2(A2, " has been removed" + (e2 ? " in " + e2 : "")), qy.ERR_DEPRECATED);
          return e2 && !cm[A2] && (cm[A2] = true, console.warn(n2(A2, " has been deprecated since v" + e2 + " and will be removed in the near future"))), !t2 || t2(r5, A2, i2);
        };
      };
      var hm = { assertOptions: function(t2, e2, r4) {
        if ("object" != typeof t2)
          throw new qy("options must be an object", qy.ERR_BAD_OPTION_VALUE);
        const n2 = Object.keys(t2);
        let A2 = n2.length;
        for (; A2-- > 0; ) {
          const i2 = n2[A2], o2 = e2[i2];
          if (o2) {
            const e3 = t2[i2], r5 = void 0 === e3 || o2(e3, i2, t2);
            if (true !== r5)
              throw new qy("option " + i2 + " must be " + r5, qy.ERR_BAD_OPTION_VALUE);
          } else if (true !== r4)
            throw new qy("Unknown option " + i2, qy.ERR_BAD_OPTION);
        }
      }, validators: am };
      var gm = hm.validators;
      var um = class {
        constructor(t2) {
          this.defaults = t2, this.interceptors = { request: new oC(), response: new oC() };
        }
        async request(t2, e2) {
          try {
            return await this._request(t2, e2);
          } catch (t3) {
            if (t3 instanceof Error) {
              let e3;
              Error.captureStackTrace ? Error.captureStackTrace(e3 = {}) : e3 = new Error();
              const r4 = e3.stack ? e3.stack.replace(/^.+\n/, "") : "";
              try {
                t3.stack ? r4 && !String(t3.stack).endsWith(r4.replace(/^.+\n.+\n/, "")) && (t3.stack += "\n" + r4) : t3.stack = r4;
              } catch (t4) {
              }
            }
            throw t3;
          }
        }
        _request(t2, e2) {
          "string" == typeof t2 ? (e2 = e2 || {}).url = t2 : e2 = t2 || {}, e2 = HC(this.defaults, e2);
          const { transitional: r4, paramsSerializer: n2, headers: A2 } = e2;
          void 0 !== r4 && hm.assertOptions(r4, { silentJSONParsing: gm.transitional(gm.boolean), forcedJSONParsing: gm.transitional(gm.boolean), clarifyTimeoutError: gm.transitional(gm.boolean) }, false), null != n2 && (Ky.isFunction(n2) ? e2.paramsSerializer = { serialize: n2 } : hm.assertOptions(n2, { encode: gm.function, serialize: gm.function }, true)), e2.method = (e2.method || this.defaults.method || "get").toLowerCase();
          let i2 = A2 && Ky.merge(A2.common, A2[e2.method]);
          A2 && Ky.forEach(["delete", "get", "head", "post", "put", "patch", "common"], (t3) => {
            delete A2[t3];
          }), e2.headers = bC.concat(i2, A2);
          const o2 = [];
          let s2 = true;
          this.interceptors.request.forEach(function(t3) {
            "function" == typeof t3.runWhen && false === t3.runWhen(e2) || (s2 = s2 && t3.synchronous, o2.unshift(t3.fulfilled, t3.rejected));
          });
          const a2 = [];
          let c2;
          this.interceptors.response.forEach(function(t3) {
            a2.push(t3.fulfilled, t3.rejected);
          });
          let h2, g2 = 0;
          if (!s2) {
            const t3 = [om.bind(this), void 0];
            for (t3.unshift.apply(t3, o2), t3.push.apply(t3, a2), h2 = t3.length, c2 = Promise.resolve(e2); g2 < h2; )
              c2 = c2.then(t3[g2++], t3[g2++]);
            return c2;
          }
          h2 = o2.length;
          let u2 = e2;
          for (g2 = 0; g2 < h2; ) {
            const t3 = o2[g2++], e3 = o2[g2++];
            try {
              u2 = t3(u2);
            } catch (t4) {
              e3.call(this, t4);
              break;
            }
          }
          try {
            c2 = om.call(this, u2);
          } catch (t3) {
            return Promise.reject(t3);
          }
          for (g2 = 0, h2 = a2.length; g2 < h2; )
            c2 = c2.then(a2[g2++], a2[g2++]);
          return c2;
        }
        getUri(t2) {
          return iC(UC((t2 = HC(this.defaults, t2)).baseURL, t2.url), t2.params, t2.paramsSerializer);
        }
      };
      Ky.forEach(["delete", "get", "head", "options"], function(t2) {
        um.prototype[t2] = function(e2, r4) {
          return this.request(HC(r4 || {}, { method: t2, url: e2, data: (r4 || {}).data }));
        };
      }), Ky.forEach(["post", "put", "patch"], function(t2) {
        function e2(e3) {
          return function(r4, n2, A2) {
            return this.request(HC(A2 || {}, { method: t2, headers: e3 ? { "Content-Type": "multipart/form-data" } : {}, url: r4, data: n2 }));
          };
        }
        um.prototype[t2] = e2(), um.prototype[t2 + "Form"] = e2(true);
      });
      var lm = um;
      Al(), il();
      var fm = class t2 {
        constructor(t3) {
          if ("function" != typeof t3)
            throw new TypeError("executor must be a function.");
          let e2;
          this.promise = new Promise(function(t4) {
            e2 = t4;
          });
          const r4 = this;
          this.promise.then((t4) => {
            if (!r4._listeners)
              return;
            let e3 = r4._listeners.length;
            for (; e3-- > 0; )
              r4._listeners[e3](t4);
            r4._listeners = null;
          }), this.promise.then = (t4) => {
            let e3;
            const n2 = new Promise((t5) => {
              r4.subscribe(t5), e3 = t5;
            }).then(t4);
            return n2.cancel = function() {
              r4.unsubscribe(e3);
            }, n2;
          }, t3(function(t4, n2, A2) {
            r4.reason || (r4.reason = new NC(t4, n2, A2), e2(r4.reason));
          });
        }
        throwIfRequested() {
          if (this.reason)
            throw this.reason;
        }
        subscribe(t3) {
          this.reason ? t3(this.reason) : this._listeners ? this._listeners.push(t3) : this._listeners = [t3];
        }
        unsubscribe(t3) {
          if (!this._listeners)
            return;
          const e2 = this._listeners.indexOf(t3);
          -1 !== e2 && this._listeners.splice(e2, 1);
        }
        static source() {
          let e2;
          return { token: new t2(function(t3) {
            e2 = t3;
          }), cancel: e2 };
        }
      };
      Al(), il(), Al(), il(), Al(), il();
      var pm = { Continue: 100, SwitchingProtocols: 101, Processing: 102, EarlyHints: 103, Ok: 200, Created: 201, Accepted: 202, NonAuthoritativeInformation: 203, NoContent: 204, ResetContent: 205, PartialContent: 206, MultiStatus: 207, AlreadyReported: 208, ImUsed: 226, MultipleChoices: 300, MovedPermanently: 301, Found: 302, SeeOther: 303, NotModified: 304, UseProxy: 305, Unused: 306, TemporaryRedirect: 307, PermanentRedirect: 308, BadRequest: 400, Unauthorized: 401, PaymentRequired: 402, Forbidden: 403, NotFound: 404, MethodNotAllowed: 405, NotAcceptable: 406, ProxyAuthenticationRequired: 407, RequestTimeout: 408, Conflict: 409, Gone: 410, LengthRequired: 411, PreconditionFailed: 412, PayloadTooLarge: 413, UriTooLong: 414, UnsupportedMediaType: 415, RangeNotSatisfiable: 416, ExpectationFailed: 417, ImATeapot: 418, MisdirectedRequest: 421, UnprocessableEntity: 422, Locked: 423, FailedDependency: 424, TooEarly: 425, UpgradeRequired: 426, PreconditionRequired: 428, TooManyRequests: 429, RequestHeaderFieldsTooLarge: 431, UnavailableForLegalReasons: 451, InternalServerError: 500, NotImplemented: 501, BadGateway: 502, ServiceUnavailable: 503, GatewayTimeout: 504, HttpVersionNotSupported: 505, VariantAlsoNegotiates: 506, InsufficientStorage: 507, LoopDetected: 508, NotExtended: 510, NetworkAuthenticationRequired: 511 };
      Object.entries(pm).forEach(([t2, e2]) => {
        pm[e2] = t2;
      });
      var dm = pm;
      var Im = function t2(e2) {
        const r4 = new lm(e2), n2 = ay(lm.prototype.request, r4);
        return Ky.extend(n2, lm.prototype, r4, { allOwnKeys: true }), Ky.extend(n2, r4, null, { allOwnKeys: true }), n2.create = function(r5) {
          return t2(HC(e2, r5));
        }, n2;
      }(mC);
      Im.Axios = lm, Im.CanceledError = NC, Im.CancelToken = fm, Im.isCancel = DC, Im.VERSION = sm, Im.toFormData = $y, Im.AxiosError = qy, Im.Cancel = Im.CanceledError, Im.all = function(t2) {
        return Promise.all(t2);
      }, Im.spread = function(t2) {
        return function(e2) {
          return t2.apply(null, e2);
        };
      }, Im.isAxiosError = function(t2) {
        return Ky.isObject(t2) && true === t2.isAxiosError;
      }, Im.mergeConfig = HC, Im.AxiosHeaders = bC, Im.formToJSON = (t2) => yC(Ky.isHTMLForm(t2) ? new FormData(t2) : t2), Im.getAdapter = Am, Im.HttpStatusCode = dm, Im.default = Im;
      var ym = Im;
      var Cm = class {
        static async testRpcPerformance(t2, e2, r4, n2, A2, i2) {
          const o2 = ym.create({ timeout: i2, headers: n2, cancelToken: new ym.CancelToken((t3) => setTimeout(() => t3("Request Timeout"), i2)) }), s2 = r4.map((t3) => new Promise((e3) => {
            const r5 = performance.now();
            o2.post(t3, A2).then(() => {
              const n3 = performance.now();
              e3({ rpcUrl: t3, duration: n3 - r5, success: true });
            }).catch(() => {
              e3({ rpcUrl: t3, success: false, duration: 0 });
            });
          })), a2 = await Promise.race(s2);
          a2.success && (e2[`${t2}__${a2.rpcUrl}`] = a2.duration);
          return (await Promise.allSettled(s2)).forEach((n3) => {
            if ("fulfilled" === n3.status && n3.value.success)
              e2[`${t2}__${n3.value.rpcUrl}`] = n3.value.duration;
            else if ("fulfilled" === n3.status) {
              const t3 = n3.value, e3 = r4.indexOf(t3.rpcUrl);
              e3 > -1 && r4.splice(e3, 1);
            }
          }), { latencies: e2, runtimeRpcs: r4 };
        }
        static async findFastestRpc(t2, e2) {
          try {
            const r4 = Object.entries(t2).filter(([t3]) => t3.startsWith(`${e2}__`)).reduce((t3, [e3, r5]) => (t3[e3] = r5, t3), {});
            return Object.keys(r4).reduce((t3, e3) => r4[t3] < r4[e3] ? t3 : e3).split("__")[1];
          } catch (t3) {
            return console.error("[RPCService] Failed to find fastest RPC"), null;
          }
        }
        static _verifyBlock(t2) {
          try {
            const { jsonrpc: e2, id: r4, result: n2 } = t2, { number: A2, timestamp: i2, hash: o2 } = n2;
            return "2.0" === e2 && 1 === r4 && parseInt(A2, 16) > 0 && parseInt(i2, 16) > 0 && 66 === o2.match(/[0-9|a-f|A-F|x]/gm)?.join("").length;
          } catch (t3) {
            return false;
          }
        }
      };
      Al(), il();
      var mm = class {
        static getLatencies(t2, e2) {
          if ("browser" === t2) {
            if (this.bypassForTests())
              return {};
            const t3 = JSON.parse(localStorage.getItem("rpcLatencies") || "{}");
            return Object.keys(t3).reduce((r4, n2) => (n2.startsWith(`${e2}__`) && (r4[n2] = t3[n2]), r4), {});
          }
          return {};
        }
        static getRefreshLatencies(t2) {
          if ("browser" === t2) {
            if (this.bypassForTests())
              return 0;
            const t3 = JSON.parse(localStorage.getItem("refreshLatencies") || "0");
            return "number" == typeof t3 ? t3 : 0;
          }
          return 0;
        }
        static setLatencies(t2, e2) {
          if ("browser" === t2) {
            if (this.bypassForTests())
              return;
            localStorage.setItem("rpcLatencies", JSON.stringify(e2));
          }
        }
        static setRefreshLatencies(t2, e2) {
          if ("browser" === t2) {
            if (this.bypassForTests())
              return;
            localStorage.setItem("refreshLatencies", JSON.stringify(e2));
          }
        }
        static bypassForTests() {
          if ("undefined" == typeof localStorage)
            return console.log("Passing test because localStorage is not defined."), true;
        }
      };
      var Bm = class t2 {
        static _instance = null;
        _provider = null;
        _networkId;
        _networkName;
        _env = "node";
        _rpcTimeout = Number.MAX_SAFE_INTEGER;
        _cacheRefreshCycles = 10;
        _refreshLatencies = 0;
        _autoStorage = false;
        _runtimeRpcs = [];
        _latencies = {};
        _networkRpcs = [];
        constructor(t3) {
          this._networkId = t3.networkId, this._networkRpcs = Ql[this._networkId], this._networkName = _l[this._networkId], this._initialize(t3);
        }
        async getFastestRpcProvider() {
          return 31337 === this._networkId ? this._provider = new sy("http://127.0.0.1:8545", this._networkId) : this._provider || (this._provider = await this.testRpcPerformance()), this._provider && this._provider?.connection.url.includes("localhost") && 31337 !== this._networkId && (this._provider = await this.testRpcPerformance()), this._provider;
        }
        async testRpcPerformance() {
          Object.keys(this._latencies).filter((t4) => t4.startsWith(`${this._networkId}__`)).length <= 1 || this._refreshLatencies >= this._cacheRefreshCycles ? (this._runtimeRpcs = Ql[this._networkId], this._refreshLatencies = 0) : this._runtimeRpcs = Object.keys(this._latencies).map((t4) => t4.split("__")[1]), await this._testRpcPerformance();
          const t3 = await Cm.findFastestRpc(this._latencies, this._networkId);
          if (!t3)
            throw new Error("Failed to find fastest RPC");
          const e2 = new sy(t3, this._networkId);
          if (this._provider = e2, this._autoStorage && (mm.setLatencies(this._env, this._latencies), mm.setRefreshLatencies(this._env, this._refreshLatencies)), !this._provider)
            throw new Error("Provider could not be initialized");
          return this._provider;
        }
        getProvider() {
          if (!this._provider)
            throw new Error("Provider is not initialized");
          return this._provider;
        }
        static getInstance(e2) {
          if (!t2._instance) {
            if (!e2)
              throw new Error("Config is required to initialize RPCHandler");
            t2._instance = new t2(e2);
          }
          return t2._instance;
        }
        clearInstance() {
          t2._instance = null;
        }
        getRuntimeRpcs() {
          return this._runtimeRpcs;
        }
        getNetworkId() {
          return this._networkId;
        }
        getNetworkName() {
          return this._networkName;
        }
        getNetworkRpcs() {
          return this._networkRpcs;
        }
        getLatencies() {
          return this._latencies;
        }
        getRefreshLatencies() {
          return this._refreshLatencies;
        }
        getCacheRefreshCycles() {
          return this._cacheRefreshCycles;
        }
        async _testRpcPerformance() {
          const { latencies: t3, runtimeRpcs: e2 } = await Cm.testRpcPerformance(this._networkId, this._latencies, this._runtimeRpcs, { "Content-Type": "application/json" }, JSON.stringify({ jsonrpc: "2.0", method: "eth_getBlockByNumber", params: ["latest", false], id: 1 }), this._rpcTimeout);
          this._runtimeRpcs = e2, this._latencies = t3, this._refreshLatencies++, mm.setLatencies(this._env, this._latencies), mm.setRefreshLatencies(this._env, this._refreshLatencies);
        }
        _updateConfig(t3) {
          t3.networkName && (this._networkName = t3.networkName), t3.networkRpcs && (this._networkRpcs = [...this._networkRpcs, ...t3.networkRpcs]), t3.runtimeRpcs && (this._runtimeRpcs = t3.runtimeRpcs), t3.cacheRefreshCycles && (this._cacheRefreshCycles = t3.cacheRefreshCycles), t3.rpcTimeout && (this._rpcTimeout = t3.rpcTimeout), t3.autoStorage && (this._autoStorage = true, this._latencies = mm.getLatencies(this._env, this._networkId), this._refreshLatencies = mm.getRefreshLatencies(this._env));
        }
        _initialize(t3) {
          this._env = "undefined" == typeof window ? "node" : "browser", this._updateConfig(t3);
        }
      };
      async function Em(t2) {
        try {
          const e2 = (
            /*! Bundled license information:
            
            js-sha3/src/sha3.js:
              (**
               * [js-sha3]{@link https://github.com/emn178/js-sha3}
               *
               * @version 0.8.0
               * @author Chen, Yi-Cyuan [emn178@gmail.com]
               * @copyright Chen, Yi-Cyuan 2015-2018
               * @license MIT
               *)
            */
            function(t3) {
              return new Bm({ networkId: t3, autoStorage: false, cacheRefreshCycles: 5, rpcTimeout: 1500, networkName: null, runtimeRpcs: null, networkRpcs: null });
            }(t2)
          );
          return await e2.getFastestRpcProvider();
        } catch (e2) {
          throw new Error(`Failed to get fastest provider for networkId: ${t2}`);
        }
      }
      async function wm(t2, e2, r4, n2) {
        let A2;
        const i2 = e2;
        let o2, s2, a2, c2, h2;
        if ("issueId" in t2)
          A2 = t2.logger, o2 = t2.walletAddress, a2 = t2.evmNetworkId, c2 = t2.evmPrivateEncrypted, s2 = t2.issueId, h2 = t2.userId;
        else {
          const e3 = t2.config;
          A2 = t2.logger;
          const { evmNetworkId: r5, evmPrivateEncrypted: n3 } = e3, { data: g3 } = await t2.octokit.users.getByUsername({ username: i2 });
          if (!g3)
            throw new Error(`GitHub user was not found for id ${i2}`);
          h2 = g3.id;
          const { wallet: u3 } = t2.adapters.supabase;
          if (o2 = await u3.getWalletByUserId(h2), a2 = r5, c2 = n3, "issue" in t2.payload)
            s2 = t2.payload.issue.id;
          else {
            if (!("pull_request" in t2.payload))
              throw new Error("Issue Id is missing");
            s2 = t2.payload.pull_request.id;
          }
        }
        if (!i2)
          throw new Error("User was not found");
        if (!o2) {
          const t3 = "ERC20 Permit generation error: Wallet not found";
          throw A2.error(t3), new Error(t3);
        }
        const g2 = await Em(a2);
        if (!g2)
          throw A2.error("Provider is not defined"), new Error("Provider is not defined");
        const { privateKey: u2 } = await ju(c2);
        if (!u2) {
          const t3 = "Private key is not defined";
          throw A2.fatal(t3), new Error(t3);
        }
        let l2, f2;
        try {
          l2 = new Gu(u2, g2);
        } catch (t3) {
          const e3 = `Failed to instantiate wallet: ${t3}`;
          throw A2.debug(e3), new Error(e3);
        }
        try {
          const t3 = new ug(n2, ["function decimals() public view returns (uint8)"], g2);
          f2 = await t3.decimals();
        } catch (t3) {
          const e3 = `Failed to get token decimals for token: ${n2}`;
          throw A2.debug(e3), new Error(e3);
        }
        const p2 = { permitted: { token: n2, amount: SA(r4.toString(), f2) }, spender: o2, nonce: BigInt(no(aA(`${h2}-${s2}`))), deadline: $s }, { domain: d2, types: I2, values: y2 } = fn.SignatureTransfer.getPermitData(p2, fn.PERMIT2_ADDRESS, a2), C2 = await l2.signTypedData({ name: d2.name, version: d2.version, chainId: d2.chainId ? d2.chainId.toString() : void 0, verifyingContract: d2.verifyingContract, salt: d2.salt?.toString() }, I2, y2).catch((t3) => {
          const e3 = `Failed to sign typed data ${t3}`;
          throw A2.error(e3), new Error(e3);
        }), m2 = { tokenType: Hu.ERC20, tokenAddress: p2.permitted.token, beneficiary: p2.spender, nonce: p2.nonce.toString(), deadline: p2.deadline.toString(), amount: p2.permitted.amount.toString(), owner: l2.address, signature: C2, networkId: a2 };
        return A2.info("Generated ERC20 permit2 signature", m2), m2;
      }
      var vm = "NftReward-Domain";
      var _m = "1";
      var Qm = { MintRequest: [{ name: "beneficiary", type: "address" }, { name: "deadline", type: "uint256" }, { name: "keys", type: "bytes32[]" }, { name: "nonce", type: "uint256" }, { name: "values", type: "string[]" }] };
      async function bm(t2, e2, r4) {
        let n2, A2, i2, o2, s2, a2, c2, h2, g2, u2 = e2;
        if ("evmNetworkId" in t2)
          n2 = t2.logger, A2 = t2.nftContractAddress, o2 = t2.nftMinterPrivateKey, i2 = t2.evmNetworkId, a2 = t2.walletAddress, c2 = t2.issueId, h2 = t2.organizationName, g2 = t2.repositoryName, s2 = t2.userId;
        else {
          const { NFT_MINTER_PRIVATE_KEY: r5, NFT_CONTRACT_ADDRESS: l3 } = t2.env, { evmNetworkId: f3 } = t2.config, p3 = t2.adapters;
          if (n2 = t2.logger, A2 = l3, i2 = f3, o2 = r5, u2 = e2, !t2.eventName.startsWith("issues."))
            throw new Error("Issue Id is missing.");
          c2 = t2.payload.issue.id.toString(), h2 = t2.payload.repository.owner.login, g2 = t2.payload.repository.name;
          const { data: d3 } = await t2.octokit.users.getByUsername({ username: u2 });
          if (!d3)
            throw new Error(`GitHub user was not found for id ${u2}`);
          s2 = d3.id;
          const I3 = await p3.supabase.wallet.getWalletByUserId(s2);
          if (!I3)
            throw n2.error("No wallet found for user"), new Error("No wallet found for user");
          a2 = I3;
        }
        const l2 = await Em(i2);
        if (!l2)
          throw n2.error("Provider is not defined"), new Error("Provider is not defined");
        if (!A2) {
          const t3 = "NFT contract address is not defined";
          throw n2.error(t3), new Error(t3);
        }
        let f2;
        try {
          f2 = new Gu(o2, l2);
        } catch (t3) {
          throw n2.error("Failed to instantiate wallet", t3), new Error("Failed to instantiate wallet");
        }
        const p2 = { GITHUB_ORGANIZATION_NAME: h2, GITHUB_REPOSITORY_NAME: g2, GITHUB_ISSUE_ID: c2, GITHUB_USERNAME: u2, GITHUB_CONTRIBUTION_TYPE: r4 }, d2 = Object.entries(p2), I2 = { beneficiary: a2, deadline: fn.MaxUint256.toBigInt(), keys: d2.map(([t3]) => no(aA(t3))), nonce: BigInt(no(aA(`${s2}-${c2}`))), values: d2.map(([, t3]) => t3) }, y2 = { name: vm, version: _m, verifyingContract: A2, chainId: i2 }, C2 = await f2.signTypedData(y2, Qm, I2).catch((t3) => {
          throw n2.error("Failed to sign typed data", t3), new Error(`Failed to sign typed data: ${t3}`);
        }), m2 = { tokenType: Hu.ERC721, tokenAddress: A2, beneficiary: a2, amount: "1", nonce: I2.nonce.toString(), deadline: I2.deadline.toString(), signature: C2, owner: f2.address, networkId: i2, erc721Request: { keys: I2.keys.map((t3) => t3.toString()), values: I2.values, metadata: p2 } };
        return console.info("Generated ERC721 permit signature", { erc721Permit: m2 }), m2;
      }
      exports.decodePermits = function(t2) {
        const e2 = atob(t2), r4 = JSON.parse(e2), n2 = [];
        for (const t3 of r4) {
          const e3 = "erc20-permit" === t3.type ? Hu.ERC20 : Hu.ERC721;
          e3 === Hu.ERC721 ? n2.push({ amount: t3.permit.permitted.amount, beneficiary: t3.transferDetails.to, deadline: t3.permit.deadline, networkId: t3.networkId, nonce: t3.permit.nonce, owner: t3.owner, signature: t3.signature, tokenAddress: t3.permit.permitted.token, tokenType: e3, ..."erc721-permit" === t3.type && t3.nftMetadata && { erc721Request: { metadata: t3.nftMetadata, keys: t3.request?.keys ?? [], values: t3.request?.values ?? [] } } }) : n2.push({ amount: t3.permit.permitted.amount, beneficiary: t3.transferDetails.to, deadline: t3.permit.deadline, networkId: t3.networkId, nonce: t3.permit.nonce, owner: t3.owner, signature: t3.signature, tokenAddress: t3.permit.permitted.token, tokenType: e3 });
        }
        return n2;
      }, exports.encodePermits = function(t2) {
        const e2 = t2.map((t3) => t3.tokenType === Hu.ERC20 ? { type: "erc20-permit", permit: { permitted: { token: t3.tokenAddress, amount: t3.amount }, nonce: t3.nonce, deadline: t3.deadline }, transferDetails: { to: t3.beneficiary, requestedAmount: t3.amount }, owner: t3.owner, signature: t3.signature, networkId: t3.networkId } : t3.erc721Request ? { type: "erc721-permit", permit: { permitted: { token: t3.tokenAddress, amount: t3.amount }, nonce: t3.nonce, deadline: t3.deadline }, transferDetails: { to: t3.beneficiary, requestedAmount: t3.amount }, owner: t3.owner, signature: t3.signature, networkId: t3.networkId, nftMetadata: t3.erc721Request.metadata, request: { beneficiary: t3.beneficiary, deadline: t3.deadline, keys: t3.erc721Request?.keys, nonce: t3.nonce, values: t3.erc721Request?.values } } : null).filter((t3) => t3);
        return Buffer.from(JSON.stringify(e2)).toString("base64");
      }, exports.generateErc20PermitSignature = wm, exports.generateErc721PermitSignature = bm, exports.generatePayoutPermit = async function(t2, e2) {
        const r4 = [];
        for (const n2 of e2) {
          const { type: e3, amount: A2, username: i2, contributionType: o2, tokenAddress: s2 } = n2;
          let a2;
          switch (e3) {
            case "ERC20":
              a2 = await wm(t2, i2, A2, s2);
              break;
            case "ERC721":
              a2 = await bm(t2, i2, o2);
              break;
            default:
              t2.logger.error(`Invalid permit type: ${e3}`);
              continue;
          }
          r4.push(a2);
        }
        return r4;
      };
    }
  });

  // (disabled):node_modules/buffer/index.js
  var require_buffer2 = __commonJS({
    "(disabled):node_modules/buffer/index.js"() {
    }
  });

  // node_modules/bn.js/lib/bn.js
  var require_bn2 = __commonJS({
    "node_modules/bn.js/lib/bn.js"(exports, module) {
      (function(module2, exports2) {
        "use strict";
        function assert3(val, msg) {
          if (!val)
            throw new Error(msg || "Assertion failed");
        }
        function inherits2(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
        function BN4(number, base3, endian) {
          if (BN4.isBN(number)) {
            return number;
          }
          this.negative = 0;
          this.words = null;
          this.length = 0;
          this.red = null;
          if (number !== null) {
            if (base3 === "le" || base3 === "be") {
              endian = base3;
              base3 = 10;
            }
            this._init(number || 0, base3 || 10, endian || "be");
          }
        }
        if (typeof module2 === "object") {
          module2.exports = BN4;
        } else {
          exports2.BN = BN4;
        }
        BN4.BN = BN4;
        BN4.wordSize = 26;
        var Buffer2;
        try {
          if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
            Buffer2 = window.Buffer;
          } else {
            Buffer2 = require_buffer2().Buffer;
          }
        } catch (e) {
        }
        BN4.isBN = function isBN(num) {
          if (num instanceof BN4) {
            return true;
          }
          return num !== null && typeof num === "object" && num.constructor.wordSize === BN4.wordSize && Array.isArray(num.words);
        };
        BN4.max = function max(left, right) {
          if (left.cmp(right) > 0)
            return left;
          return right;
        };
        BN4.min = function min(left, right) {
          if (left.cmp(right) < 0)
            return left;
          return right;
        };
        BN4.prototype._init = function init3(number, base3, endian) {
          if (typeof number === "number") {
            return this._initNumber(number, base3, endian);
          }
          if (typeof number === "object") {
            return this._initArray(number, base3, endian);
          }
          if (base3 === "hex") {
            base3 = 16;
          }
          assert3(base3 === (base3 | 0) && base3 >= 2 && base3 <= 36);
          number = number.toString().replace(/\s+/g, "");
          var start = 0;
          if (number[0] === "-") {
            start++;
            this.negative = 1;
          }
          if (start < number.length) {
            if (base3 === 16) {
              this._parseHex(number, start, endian);
            } else {
              this._parseBase(number, base3, start);
              if (endian === "le") {
                this._initArray(this.toArray(), base3, endian);
              }
            }
          }
        };
        BN4.prototype._initNumber = function _initNumber(number, base3, endian) {
          if (number < 0) {
            this.negative = 1;
            number = -number;
          }
          if (number < 67108864) {
            this.words = [number & 67108863];
            this.length = 1;
          } else if (number < 4503599627370496) {
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863
            ];
            this.length = 2;
          } else {
            assert3(number < 9007199254740992);
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863,
              1
            ];
            this.length = 3;
          }
          if (endian !== "le")
            return;
          this._initArray(this.toArray(), base3, endian);
        };
        BN4.prototype._initArray = function _initArray(number, base3, endian) {
          assert3(typeof number.length === "number");
          if (number.length <= 0) {
            this.words = [0];
            this.length = 1;
            return this;
          }
          this.length = Math.ceil(number.length / 3);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var j, w;
          var off = 0;
          if (endian === "be") {
            for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
              w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
              this.words[j] |= w << off & 67108863;
              this.words[j + 1] = w >>> 26 - off & 67108863;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          } else if (endian === "le") {
            for (i = 0, j = 0; i < number.length; i += 3) {
              w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
              this.words[j] |= w << off & 67108863;
              this.words[j + 1] = w >>> 26 - off & 67108863;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          }
          return this._strip();
        };
        function parseHex4Bits(string, index2) {
          var c = string.charCodeAt(index2);
          if (c >= 48 && c <= 57) {
            return c - 48;
          } else if (c >= 65 && c <= 70) {
            return c - 55;
          } else if (c >= 97 && c <= 102) {
            return c - 87;
          } else {
            assert3(false, "Invalid character in " + string);
          }
        }
        function parseHexByte(string, lowerBound, index2) {
          var r3 = parseHex4Bits(string, index2);
          if (index2 - 1 >= lowerBound) {
            r3 |= parseHex4Bits(string, index2 - 1) << 4;
          }
          return r3;
        }
        BN4.prototype._parseHex = function _parseHex(number, start, endian) {
          this.length = Math.ceil((number.length - start) / 6);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var off = 0;
          var j = 0;
          var w;
          if (endian === "be") {
            for (i = number.length - 1; i >= start; i -= 2) {
              w = parseHexByte(number, start, i) << off;
              this.words[j] |= w & 67108863;
              if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
              } else {
                off += 8;
              }
            }
          } else {
            var parseLength = number.length - start;
            for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
              w = parseHexByte(number, start, i) << off;
              this.words[j] |= w & 67108863;
              if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
              } else {
                off += 8;
              }
            }
          }
          this._strip();
        };
        function parseBase(str, start, end, mul5) {
          var r3 = 0;
          var b = 0;
          var len = Math.min(str.length, end);
          for (var i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r3 *= mul5;
            if (c >= 49) {
              b = c - 49 + 10;
            } else if (c >= 17) {
              b = c - 17 + 10;
            } else {
              b = c;
            }
            assert3(c >= 0 && b < mul5, "Invalid character");
            r3 += b;
          }
          return r3;
        }
        BN4.prototype._parseBase = function _parseBase(number, base3, start) {
          this.words = [0];
          this.length = 1;
          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base3) {
            limbLen++;
          }
          limbLen--;
          limbPow = limbPow / base3 | 0;
          var total = number.length - start;
          var mod = total % limbLen;
          var end = Math.min(total, total - mod) + start;
          var word = 0;
          for (var i = start; i < end; i += limbLen) {
            word = parseBase(number, i, i + limbLen, base3);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base3);
            for (i = 0; i < mod; i++) {
              pow *= base3;
            }
            this.imuln(pow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          this._strip();
        };
        BN4.prototype.copy = function copy(dest) {
          dest.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            dest.words[i] = this.words[i];
          }
          dest.length = this.length;
          dest.negative = this.negative;
          dest.red = this.red;
        };
        function move(dest, src) {
          dest.words = src.words;
          dest.length = src.length;
          dest.negative = src.negative;
          dest.red = src.red;
        }
        BN4.prototype._move = function _move(dest) {
          move(dest, this);
        };
        BN4.prototype.clone = function clone() {
          var r3 = new BN4(null);
          this.copy(r3);
          return r3;
        };
        BN4.prototype._expand = function _expand(size) {
          while (this.length < size) {
            this.words[this.length++] = 0;
          }
          return this;
        };
        BN4.prototype._strip = function strip() {
          while (this.length > 1 && this.words[this.length - 1] === 0) {
            this.length--;
          }
          return this._normSign();
        };
        BN4.prototype._normSign = function _normSign() {
          if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
          }
          return this;
        };
        if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
          try {
            BN4.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect7;
          } catch (e) {
            BN4.prototype.inspect = inspect7;
          }
        } else {
          BN4.prototype.inspect = inspect7;
        }
        function inspect7() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var zeros2 = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ];
        var groupSizes = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ];
        var groupBases = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        BN4.prototype.toString = function toString3(base3, padding3) {
          base3 = base3 || 10;
          padding3 = padding3 | 0 || 1;
          var out;
          if (base3 === 16 || base3 === "hex") {
            out = "";
            var off = 0;
            var carry = 0;
            for (var i = 0; i < this.length; i++) {
              var w = this.words[i];
              var word = ((w << off | carry) & 16777215).toString(16);
              carry = w >>> 24 - off & 16777215;
              off += 2;
              if (off >= 26) {
                off -= 26;
                i--;
              }
              if (carry !== 0 || i !== this.length - 1) {
                out = zeros2[6 - word.length] + word + out;
              } else {
                out = word + out;
              }
            }
            if (carry !== 0) {
              out = carry.toString(16) + out;
            }
            while (out.length % padding3 !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          if (base3 === (base3 | 0) && base3 >= 2 && base3 <= 36) {
            var groupSize = groupSizes[base3];
            var groupBase = groupBases[base3];
            out = "";
            var c = this.clone();
            c.negative = 0;
            while (!c.isZero()) {
              var r3 = c.modrn(groupBase).toString(base3);
              c = c.idivn(groupBase);
              if (!c.isZero()) {
                out = zeros2[groupSize - r3.length] + r3 + out;
              } else {
                out = r3 + out;
              }
            }
            if (this.isZero()) {
              out = "0" + out;
            }
            while (out.length % padding3 !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          assert3(false, "Base should be between 2 and 36");
        };
        BN4.prototype.toNumber = function toNumber2() {
          var ret = this.words[0];
          if (this.length === 2) {
            ret += this.words[1] * 67108864;
          } else if (this.length === 3 && this.words[2] === 1) {
            ret += 4503599627370496 + this.words[1] * 67108864;
          } else if (this.length > 2) {
            assert3(false, "Number can only safely store up to 53 bits");
          }
          return this.negative !== 0 ? -ret : ret;
        };
        BN4.prototype.toJSON = function toJSON4() {
          return this.toString(16, 2);
        };
        if (Buffer2) {
          BN4.prototype.toBuffer = function toBuffer(endian, length) {
            return this.toArrayLike(Buffer2, endian, length);
          };
        }
        BN4.prototype.toArray = function toArray3(endian, length) {
          return this.toArrayLike(Array, endian, length);
        };
        var allocate = function allocate2(ArrayType, size) {
          if (ArrayType.allocUnsafe) {
            return ArrayType.allocUnsafe(size);
          }
          return new ArrayType(size);
        };
        BN4.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
          this._strip();
          var byteLength = this.byteLength();
          var reqLength = length || Math.max(1, byteLength);
          assert3(byteLength <= reqLength, "byte array longer than desired length");
          assert3(reqLength > 0, "Requested array length <= 0");
          var res = allocate(ArrayType, reqLength);
          var postfix = endian === "le" ? "LE" : "BE";
          this["_toArrayLike" + postfix](res, byteLength);
          return res;
        };
        BN4.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
          var position = 0;
          var carry = 0;
          for (var i = 0, shift = 0; i < this.length; i++) {
            var word = this.words[i] << shift | carry;
            res[position++] = word & 255;
            if (position < res.length) {
              res[position++] = word >> 8 & 255;
            }
            if (position < res.length) {
              res[position++] = word >> 16 & 255;
            }
            if (shift === 6) {
              if (position < res.length) {
                res[position++] = word >> 24 & 255;
              }
              carry = 0;
              shift = 0;
            } else {
              carry = word >>> 24;
              shift += 2;
            }
          }
          if (position < res.length) {
            res[position++] = carry;
            while (position < res.length) {
              res[position++] = 0;
            }
          }
        };
        BN4.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
          var position = res.length - 1;
          var carry = 0;
          for (var i = 0, shift = 0; i < this.length; i++) {
            var word = this.words[i] << shift | carry;
            res[position--] = word & 255;
            if (position >= 0) {
              res[position--] = word >> 8 & 255;
            }
            if (position >= 0) {
              res[position--] = word >> 16 & 255;
            }
            if (shift === 6) {
              if (position >= 0) {
                res[position--] = word >> 24 & 255;
              }
              carry = 0;
              shift = 0;
            } else {
              carry = word >>> 24;
              shift += 2;
            }
          }
          if (position >= 0) {
            res[position--] = carry;
            while (position >= 0) {
              res[position--] = 0;
            }
          }
        };
        if (Math.clz32) {
          BN4.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
          };
        } else {
          BN4.prototype._countBits = function _countBits(w) {
            var t = w;
            var r3 = 0;
            if (t >= 4096) {
              r3 += 13;
              t >>>= 13;
            }
            if (t >= 64) {
              r3 += 7;
              t >>>= 7;
            }
            if (t >= 8) {
              r3 += 4;
              t >>>= 4;
            }
            if (t >= 2) {
              r3 += 2;
              t >>>= 2;
            }
            return r3 + t;
          };
        }
        BN4.prototype._zeroBits = function _zeroBits(w) {
          if (w === 0)
            return 26;
          var t = w;
          var r3 = 0;
          if ((t & 8191) === 0) {
            r3 += 13;
            t >>>= 13;
          }
          if ((t & 127) === 0) {
            r3 += 7;
            t >>>= 7;
          }
          if ((t & 15) === 0) {
            r3 += 4;
            t >>>= 4;
          }
          if ((t & 3) === 0) {
            r3 += 2;
            t >>>= 2;
          }
          if ((t & 1) === 0) {
            r3++;
          }
          return r3;
        };
        BN4.prototype.bitLength = function bitLength() {
          var w = this.words[this.length - 1];
          var hi = this._countBits(w);
          return (this.length - 1) * 26 + hi;
        };
        function toBitArray(num) {
          var w = new Array(num.bitLength());
          for (var bit = 0; bit < w.length; bit++) {
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 1;
          }
          return w;
        }
        BN4.prototype.zeroBits = function zeroBits() {
          if (this.isZero())
            return 0;
          var r3 = 0;
          for (var i = 0; i < this.length; i++) {
            var b = this._zeroBits(this.words[i]);
            r3 += b;
            if (b !== 26)
              break;
          }
          return r3;
        };
        BN4.prototype.byteLength = function byteLength() {
          return Math.ceil(this.bitLength() / 8);
        };
        BN4.prototype.toTwos = function toTwos(width) {
          if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
          }
          return this.clone();
        };
        BN4.prototype.fromTwos = function fromTwos(width) {
          if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
          }
          return this.clone();
        };
        BN4.prototype.isNeg = function isNeg() {
          return this.negative !== 0;
        };
        BN4.prototype.neg = function neg5() {
          return this.clone().ineg();
        };
        BN4.prototype.ineg = function ineg() {
          if (!this.isZero()) {
            this.negative ^= 1;
          }
          return this;
        };
        BN4.prototype.iuor = function iuor(num) {
          while (this.length < num.length) {
            this.words[this.length++] = 0;
          }
          for (var i = 0; i < num.length; i++) {
            this.words[i] = this.words[i] | num.words[i];
          }
          return this._strip();
        };
        BN4.prototype.ior = function ior(num) {
          assert3((this.negative | num.negative) === 0);
          return this.iuor(num);
        };
        BN4.prototype.or = function or(num) {
          if (this.length > num.length)
            return this.clone().ior(num);
          return num.clone().ior(this);
        };
        BN4.prototype.uor = function uor(num) {
          if (this.length > num.length)
            return this.clone().iuor(num);
          return num.clone().iuor(this);
        };
        BN4.prototype.iuand = function iuand(num) {
          var b;
          if (this.length > num.length) {
            b = num;
          } else {
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = this.words[i] & num.words[i];
          }
          this.length = b.length;
          return this._strip();
        };
        BN4.prototype.iand = function iand(num) {
          assert3((this.negative | num.negative) === 0);
          return this.iuand(num);
        };
        BN4.prototype.and = function and(num) {
          if (this.length > num.length)
            return this.clone().iand(num);
          return num.clone().iand(this);
        };
        BN4.prototype.uand = function uand(num) {
          if (this.length > num.length)
            return this.clone().iuand(num);
          return num.clone().iuand(this);
        };
        BN4.prototype.iuxor = function iuxor(num) {
          var a;
          var b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = a.words[i] ^ b.words[i];
          }
          if (this !== a) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = a.length;
          return this._strip();
        };
        BN4.prototype.ixor = function ixor(num) {
          assert3((this.negative | num.negative) === 0);
          return this.iuxor(num);
        };
        BN4.prototype.xor = function xor(num) {
          if (this.length > num.length)
            return this.clone().ixor(num);
          return num.clone().ixor(this);
        };
        BN4.prototype.uxor = function uxor(num) {
          if (this.length > num.length)
            return this.clone().iuxor(num);
          return num.clone().iuxor(this);
        };
        BN4.prototype.inotn = function inotn(width) {
          assert3(typeof width === "number" && width >= 0);
          var bytesNeeded = Math.ceil(width / 26) | 0;
          var bitsLeft = width % 26;
          this._expand(bytesNeeded);
          if (bitsLeft > 0) {
            bytesNeeded--;
          }
          for (var i = 0; i < bytesNeeded; i++) {
            this.words[i] = ~this.words[i] & 67108863;
          }
          if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
          }
          return this._strip();
        };
        BN4.prototype.notn = function notn(width) {
          return this.clone().inotn(width);
        };
        BN4.prototype.setn = function setn(bit, val) {
          assert3(typeof bit === "number" && bit >= 0);
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          this._expand(off + 1);
          if (val) {
            this.words[off] = this.words[off] | 1 << wbit;
          } else {
            this.words[off] = this.words[off] & ~(1 << wbit);
          }
          return this._strip();
        };
        BN4.prototype.iadd = function iadd(num) {
          var r3;
          if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r3 = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
          } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r3 = this.isub(num);
            num.negative = 1;
            return r3._normSign();
          }
          var a, b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r3 = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r3 & 67108863;
            carry = r3 >>> 26;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r3 = (a.words[i] | 0) + carry;
            this.words[i] = r3 & 67108863;
            carry = r3 >>> 26;
          }
          this.length = a.length;
          if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
          } else if (a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          return this;
        };
        BN4.prototype.add = function add5(num) {
          var res;
          if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
          } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
          }
          if (this.length > num.length)
            return this.clone().iadd(num);
          return num.clone().iadd(this);
        };
        BN4.prototype.isub = function isub(num) {
          if (num.negative !== 0) {
            num.negative = 0;
            var r3 = this.iadd(num);
            num.negative = 1;
            return r3._normSign();
          } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
          }
          var cmp = this.cmp(num);
          if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
          }
          var a, b;
          if (cmp > 0) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r3 = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r3 >> 26;
            this.words[i] = r3 & 67108863;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r3 = (a.words[i] | 0) + carry;
            carry = r3 >> 26;
            this.words[i] = r3 & 67108863;
          }
          if (carry === 0 && i < a.length && a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = Math.max(this.length, i);
          if (a !== this) {
            this.negative = 1;
          }
          return this._strip();
        };
        BN4.prototype.sub = function sub(num) {
          return this.clone().isub(num);
        };
        function smallMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          var len = self2.length + num.length | 0;
          out.length = len;
          len = len - 1 | 0;
          var a = self2.words[0] | 0;
          var b = num.words[0] | 0;
          var r3 = a * b;
          var lo = r3 & 67108863;
          var carry = r3 / 67108864 | 0;
          out.words[0] = lo;
          for (var k = 1; k < len; k++) {
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
              var i = k - j | 0;
              a = self2.words[i] | 0;
              b = num.words[j] | 0;
              r3 = a * b + rword;
              ncarry += r3 / 67108864 | 0;
              rword = r3 & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
          }
          if (carry !== 0) {
            out.words[k] = carry | 0;
          } else {
            out.length--;
          }
          return out._strip();
        }
        var comb10MulTo = function comb10MulTo2(self2, num, out) {
          var a = self2.words;
          var b = num.words;
          var o = out.words;
          var c = 0;
          var lo;
          var mid;
          var hi;
          var a0 = a[0] | 0;
          var al0 = a0 & 8191;
          var ah0 = a0 >>> 13;
          var a1 = a[1] | 0;
          var al1 = a1 & 8191;
          var ah1 = a1 >>> 13;
          var a2 = a[2] | 0;
          var al2 = a2 & 8191;
          var ah2 = a2 >>> 13;
          var a3 = a[3] | 0;
          var al3 = a3 & 8191;
          var ah3 = a3 >>> 13;
          var a4 = a[4] | 0;
          var al4 = a4 & 8191;
          var ah4 = a4 >>> 13;
          var a5 = a[5] | 0;
          var al5 = a5 & 8191;
          var ah5 = a5 >>> 13;
          var a6 = a[6] | 0;
          var al6 = a6 & 8191;
          var ah6 = a6 >>> 13;
          var a7 = a[7] | 0;
          var al7 = a7 & 8191;
          var ah7 = a7 >>> 13;
          var a8 = a[8] | 0;
          var al8 = a8 & 8191;
          var ah8 = a8 >>> 13;
          var a9 = a[9] | 0;
          var al9 = a9 & 8191;
          var ah9 = a9 >>> 13;
          var b0 = b[0] | 0;
          var bl0 = b0 & 8191;
          var bh0 = b0 >>> 13;
          var b1 = b[1] | 0;
          var bl1 = b1 & 8191;
          var bh1 = b1 >>> 13;
          var b2 = b[2] | 0;
          var bl2 = b2 & 8191;
          var bh2 = b2 >>> 13;
          var b3 = b[3] | 0;
          var bl3 = b3 & 8191;
          var bh3 = b3 >>> 13;
          var b4 = b[4] | 0;
          var bl4 = b4 & 8191;
          var bh4 = b4 >>> 13;
          var b5 = b[5] | 0;
          var bl5 = b5 & 8191;
          var bh5 = b5 >>> 13;
          var b6 = b[6] | 0;
          var bl6 = b6 & 8191;
          var bh6 = b6 >>> 13;
          var b7 = b[7] | 0;
          var bl7 = b7 & 8191;
          var bh7 = b7 >>> 13;
          var b8 = b[8] | 0;
          var bl8 = b8 & 8191;
          var bh8 = b8 >>> 13;
          var b9 = b[9] | 0;
          var bl9 = b9 & 8191;
          var bh9 = b9 >>> 13;
          out.negative = self2.negative ^ num.negative;
          out.length = 19;
          lo = Math.imul(al0, bl0);
          mid = Math.imul(al0, bh0);
          mid = mid + Math.imul(ah0, bl0) | 0;
          hi = Math.imul(ah0, bh0);
          var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
          w0 &= 67108863;
          lo = Math.imul(al1, bl0);
          mid = Math.imul(al1, bh0);
          mid = mid + Math.imul(ah1, bl0) | 0;
          hi = Math.imul(ah1, bh0);
          lo = lo + Math.imul(al0, bl1) | 0;
          mid = mid + Math.imul(al0, bh1) | 0;
          mid = mid + Math.imul(ah0, bl1) | 0;
          hi = hi + Math.imul(ah0, bh1) | 0;
          var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
          w1 &= 67108863;
          lo = Math.imul(al2, bl0);
          mid = Math.imul(al2, bh0);
          mid = mid + Math.imul(ah2, bl0) | 0;
          hi = Math.imul(ah2, bh0);
          lo = lo + Math.imul(al1, bl1) | 0;
          mid = mid + Math.imul(al1, bh1) | 0;
          mid = mid + Math.imul(ah1, bl1) | 0;
          hi = hi + Math.imul(ah1, bh1) | 0;
          lo = lo + Math.imul(al0, bl2) | 0;
          mid = mid + Math.imul(al0, bh2) | 0;
          mid = mid + Math.imul(ah0, bl2) | 0;
          hi = hi + Math.imul(ah0, bh2) | 0;
          var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
          w2 &= 67108863;
          lo = Math.imul(al3, bl0);
          mid = Math.imul(al3, bh0);
          mid = mid + Math.imul(ah3, bl0) | 0;
          hi = Math.imul(ah3, bh0);
          lo = lo + Math.imul(al2, bl1) | 0;
          mid = mid + Math.imul(al2, bh1) | 0;
          mid = mid + Math.imul(ah2, bl1) | 0;
          hi = hi + Math.imul(ah2, bh1) | 0;
          lo = lo + Math.imul(al1, bl2) | 0;
          mid = mid + Math.imul(al1, bh2) | 0;
          mid = mid + Math.imul(ah1, bl2) | 0;
          hi = hi + Math.imul(ah1, bh2) | 0;
          lo = lo + Math.imul(al0, bl3) | 0;
          mid = mid + Math.imul(al0, bh3) | 0;
          mid = mid + Math.imul(ah0, bl3) | 0;
          hi = hi + Math.imul(ah0, bh3) | 0;
          var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
          w3 &= 67108863;
          lo = Math.imul(al4, bl0);
          mid = Math.imul(al4, bh0);
          mid = mid + Math.imul(ah4, bl0) | 0;
          hi = Math.imul(ah4, bh0);
          lo = lo + Math.imul(al3, bl1) | 0;
          mid = mid + Math.imul(al3, bh1) | 0;
          mid = mid + Math.imul(ah3, bl1) | 0;
          hi = hi + Math.imul(ah3, bh1) | 0;
          lo = lo + Math.imul(al2, bl2) | 0;
          mid = mid + Math.imul(al2, bh2) | 0;
          mid = mid + Math.imul(ah2, bl2) | 0;
          hi = hi + Math.imul(ah2, bh2) | 0;
          lo = lo + Math.imul(al1, bl3) | 0;
          mid = mid + Math.imul(al1, bh3) | 0;
          mid = mid + Math.imul(ah1, bl3) | 0;
          hi = hi + Math.imul(ah1, bh3) | 0;
          lo = lo + Math.imul(al0, bl4) | 0;
          mid = mid + Math.imul(al0, bh4) | 0;
          mid = mid + Math.imul(ah0, bl4) | 0;
          hi = hi + Math.imul(ah0, bh4) | 0;
          var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
          w4 &= 67108863;
          lo = Math.imul(al5, bl0);
          mid = Math.imul(al5, bh0);
          mid = mid + Math.imul(ah5, bl0) | 0;
          hi = Math.imul(ah5, bh0);
          lo = lo + Math.imul(al4, bl1) | 0;
          mid = mid + Math.imul(al4, bh1) | 0;
          mid = mid + Math.imul(ah4, bl1) | 0;
          hi = hi + Math.imul(ah4, bh1) | 0;
          lo = lo + Math.imul(al3, bl2) | 0;
          mid = mid + Math.imul(al3, bh2) | 0;
          mid = mid + Math.imul(ah3, bl2) | 0;
          hi = hi + Math.imul(ah3, bh2) | 0;
          lo = lo + Math.imul(al2, bl3) | 0;
          mid = mid + Math.imul(al2, bh3) | 0;
          mid = mid + Math.imul(ah2, bl3) | 0;
          hi = hi + Math.imul(ah2, bh3) | 0;
          lo = lo + Math.imul(al1, bl4) | 0;
          mid = mid + Math.imul(al1, bh4) | 0;
          mid = mid + Math.imul(ah1, bl4) | 0;
          hi = hi + Math.imul(ah1, bh4) | 0;
          lo = lo + Math.imul(al0, bl5) | 0;
          mid = mid + Math.imul(al0, bh5) | 0;
          mid = mid + Math.imul(ah0, bl5) | 0;
          hi = hi + Math.imul(ah0, bh5) | 0;
          var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
          w5 &= 67108863;
          lo = Math.imul(al6, bl0);
          mid = Math.imul(al6, bh0);
          mid = mid + Math.imul(ah6, bl0) | 0;
          hi = Math.imul(ah6, bh0);
          lo = lo + Math.imul(al5, bl1) | 0;
          mid = mid + Math.imul(al5, bh1) | 0;
          mid = mid + Math.imul(ah5, bl1) | 0;
          hi = hi + Math.imul(ah5, bh1) | 0;
          lo = lo + Math.imul(al4, bl2) | 0;
          mid = mid + Math.imul(al4, bh2) | 0;
          mid = mid + Math.imul(ah4, bl2) | 0;
          hi = hi + Math.imul(ah4, bh2) | 0;
          lo = lo + Math.imul(al3, bl3) | 0;
          mid = mid + Math.imul(al3, bh3) | 0;
          mid = mid + Math.imul(ah3, bl3) | 0;
          hi = hi + Math.imul(ah3, bh3) | 0;
          lo = lo + Math.imul(al2, bl4) | 0;
          mid = mid + Math.imul(al2, bh4) | 0;
          mid = mid + Math.imul(ah2, bl4) | 0;
          hi = hi + Math.imul(ah2, bh4) | 0;
          lo = lo + Math.imul(al1, bl5) | 0;
          mid = mid + Math.imul(al1, bh5) | 0;
          mid = mid + Math.imul(ah1, bl5) | 0;
          hi = hi + Math.imul(ah1, bh5) | 0;
          lo = lo + Math.imul(al0, bl6) | 0;
          mid = mid + Math.imul(al0, bh6) | 0;
          mid = mid + Math.imul(ah0, bl6) | 0;
          hi = hi + Math.imul(ah0, bh6) | 0;
          var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
          w6 &= 67108863;
          lo = Math.imul(al7, bl0);
          mid = Math.imul(al7, bh0);
          mid = mid + Math.imul(ah7, bl0) | 0;
          hi = Math.imul(ah7, bh0);
          lo = lo + Math.imul(al6, bl1) | 0;
          mid = mid + Math.imul(al6, bh1) | 0;
          mid = mid + Math.imul(ah6, bl1) | 0;
          hi = hi + Math.imul(ah6, bh1) | 0;
          lo = lo + Math.imul(al5, bl2) | 0;
          mid = mid + Math.imul(al5, bh2) | 0;
          mid = mid + Math.imul(ah5, bl2) | 0;
          hi = hi + Math.imul(ah5, bh2) | 0;
          lo = lo + Math.imul(al4, bl3) | 0;
          mid = mid + Math.imul(al4, bh3) | 0;
          mid = mid + Math.imul(ah4, bl3) | 0;
          hi = hi + Math.imul(ah4, bh3) | 0;
          lo = lo + Math.imul(al3, bl4) | 0;
          mid = mid + Math.imul(al3, bh4) | 0;
          mid = mid + Math.imul(ah3, bl4) | 0;
          hi = hi + Math.imul(ah3, bh4) | 0;
          lo = lo + Math.imul(al2, bl5) | 0;
          mid = mid + Math.imul(al2, bh5) | 0;
          mid = mid + Math.imul(ah2, bl5) | 0;
          hi = hi + Math.imul(ah2, bh5) | 0;
          lo = lo + Math.imul(al1, bl6) | 0;
          mid = mid + Math.imul(al1, bh6) | 0;
          mid = mid + Math.imul(ah1, bl6) | 0;
          hi = hi + Math.imul(ah1, bh6) | 0;
          lo = lo + Math.imul(al0, bl7) | 0;
          mid = mid + Math.imul(al0, bh7) | 0;
          mid = mid + Math.imul(ah0, bl7) | 0;
          hi = hi + Math.imul(ah0, bh7) | 0;
          var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
          w7 &= 67108863;
          lo = Math.imul(al8, bl0);
          mid = Math.imul(al8, bh0);
          mid = mid + Math.imul(ah8, bl0) | 0;
          hi = Math.imul(ah8, bh0);
          lo = lo + Math.imul(al7, bl1) | 0;
          mid = mid + Math.imul(al7, bh1) | 0;
          mid = mid + Math.imul(ah7, bl1) | 0;
          hi = hi + Math.imul(ah7, bh1) | 0;
          lo = lo + Math.imul(al6, bl2) | 0;
          mid = mid + Math.imul(al6, bh2) | 0;
          mid = mid + Math.imul(ah6, bl2) | 0;
          hi = hi + Math.imul(ah6, bh2) | 0;
          lo = lo + Math.imul(al5, bl3) | 0;
          mid = mid + Math.imul(al5, bh3) | 0;
          mid = mid + Math.imul(ah5, bl3) | 0;
          hi = hi + Math.imul(ah5, bh3) | 0;
          lo = lo + Math.imul(al4, bl4) | 0;
          mid = mid + Math.imul(al4, bh4) | 0;
          mid = mid + Math.imul(ah4, bl4) | 0;
          hi = hi + Math.imul(ah4, bh4) | 0;
          lo = lo + Math.imul(al3, bl5) | 0;
          mid = mid + Math.imul(al3, bh5) | 0;
          mid = mid + Math.imul(ah3, bl5) | 0;
          hi = hi + Math.imul(ah3, bh5) | 0;
          lo = lo + Math.imul(al2, bl6) | 0;
          mid = mid + Math.imul(al2, bh6) | 0;
          mid = mid + Math.imul(ah2, bl6) | 0;
          hi = hi + Math.imul(ah2, bh6) | 0;
          lo = lo + Math.imul(al1, bl7) | 0;
          mid = mid + Math.imul(al1, bh7) | 0;
          mid = mid + Math.imul(ah1, bl7) | 0;
          hi = hi + Math.imul(ah1, bh7) | 0;
          lo = lo + Math.imul(al0, bl8) | 0;
          mid = mid + Math.imul(al0, bh8) | 0;
          mid = mid + Math.imul(ah0, bl8) | 0;
          hi = hi + Math.imul(ah0, bh8) | 0;
          var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
          w8 &= 67108863;
          lo = Math.imul(al9, bl0);
          mid = Math.imul(al9, bh0);
          mid = mid + Math.imul(ah9, bl0) | 0;
          hi = Math.imul(ah9, bh0);
          lo = lo + Math.imul(al8, bl1) | 0;
          mid = mid + Math.imul(al8, bh1) | 0;
          mid = mid + Math.imul(ah8, bl1) | 0;
          hi = hi + Math.imul(ah8, bh1) | 0;
          lo = lo + Math.imul(al7, bl2) | 0;
          mid = mid + Math.imul(al7, bh2) | 0;
          mid = mid + Math.imul(ah7, bl2) | 0;
          hi = hi + Math.imul(ah7, bh2) | 0;
          lo = lo + Math.imul(al6, bl3) | 0;
          mid = mid + Math.imul(al6, bh3) | 0;
          mid = mid + Math.imul(ah6, bl3) | 0;
          hi = hi + Math.imul(ah6, bh3) | 0;
          lo = lo + Math.imul(al5, bl4) | 0;
          mid = mid + Math.imul(al5, bh4) | 0;
          mid = mid + Math.imul(ah5, bl4) | 0;
          hi = hi + Math.imul(ah5, bh4) | 0;
          lo = lo + Math.imul(al4, bl5) | 0;
          mid = mid + Math.imul(al4, bh5) | 0;
          mid = mid + Math.imul(ah4, bl5) | 0;
          hi = hi + Math.imul(ah4, bh5) | 0;
          lo = lo + Math.imul(al3, bl6) | 0;
          mid = mid + Math.imul(al3, bh6) | 0;
          mid = mid + Math.imul(ah3, bl6) | 0;
          hi = hi + Math.imul(ah3, bh6) | 0;
          lo = lo + Math.imul(al2, bl7) | 0;
          mid = mid + Math.imul(al2, bh7) | 0;
          mid = mid + Math.imul(ah2, bl7) | 0;
          hi = hi + Math.imul(ah2, bh7) | 0;
          lo = lo + Math.imul(al1, bl8) | 0;
          mid = mid + Math.imul(al1, bh8) | 0;
          mid = mid + Math.imul(ah1, bl8) | 0;
          hi = hi + Math.imul(ah1, bh8) | 0;
          lo = lo + Math.imul(al0, bl9) | 0;
          mid = mid + Math.imul(al0, bh9) | 0;
          mid = mid + Math.imul(ah0, bl9) | 0;
          hi = hi + Math.imul(ah0, bh9) | 0;
          var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
          w9 &= 67108863;
          lo = Math.imul(al9, bl1);
          mid = Math.imul(al9, bh1);
          mid = mid + Math.imul(ah9, bl1) | 0;
          hi = Math.imul(ah9, bh1);
          lo = lo + Math.imul(al8, bl2) | 0;
          mid = mid + Math.imul(al8, bh2) | 0;
          mid = mid + Math.imul(ah8, bl2) | 0;
          hi = hi + Math.imul(ah8, bh2) | 0;
          lo = lo + Math.imul(al7, bl3) | 0;
          mid = mid + Math.imul(al7, bh3) | 0;
          mid = mid + Math.imul(ah7, bl3) | 0;
          hi = hi + Math.imul(ah7, bh3) | 0;
          lo = lo + Math.imul(al6, bl4) | 0;
          mid = mid + Math.imul(al6, bh4) | 0;
          mid = mid + Math.imul(ah6, bl4) | 0;
          hi = hi + Math.imul(ah6, bh4) | 0;
          lo = lo + Math.imul(al5, bl5) | 0;
          mid = mid + Math.imul(al5, bh5) | 0;
          mid = mid + Math.imul(ah5, bl5) | 0;
          hi = hi + Math.imul(ah5, bh5) | 0;
          lo = lo + Math.imul(al4, bl6) | 0;
          mid = mid + Math.imul(al4, bh6) | 0;
          mid = mid + Math.imul(ah4, bl6) | 0;
          hi = hi + Math.imul(ah4, bh6) | 0;
          lo = lo + Math.imul(al3, bl7) | 0;
          mid = mid + Math.imul(al3, bh7) | 0;
          mid = mid + Math.imul(ah3, bl7) | 0;
          hi = hi + Math.imul(ah3, bh7) | 0;
          lo = lo + Math.imul(al2, bl8) | 0;
          mid = mid + Math.imul(al2, bh8) | 0;
          mid = mid + Math.imul(ah2, bl8) | 0;
          hi = hi + Math.imul(ah2, bh8) | 0;
          lo = lo + Math.imul(al1, bl9) | 0;
          mid = mid + Math.imul(al1, bh9) | 0;
          mid = mid + Math.imul(ah1, bl9) | 0;
          hi = hi + Math.imul(ah1, bh9) | 0;
          var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
          w10 &= 67108863;
          lo = Math.imul(al9, bl2);
          mid = Math.imul(al9, bh2);
          mid = mid + Math.imul(ah9, bl2) | 0;
          hi = Math.imul(ah9, bh2);
          lo = lo + Math.imul(al8, bl3) | 0;
          mid = mid + Math.imul(al8, bh3) | 0;
          mid = mid + Math.imul(ah8, bl3) | 0;
          hi = hi + Math.imul(ah8, bh3) | 0;
          lo = lo + Math.imul(al7, bl4) | 0;
          mid = mid + Math.imul(al7, bh4) | 0;
          mid = mid + Math.imul(ah7, bl4) | 0;
          hi = hi + Math.imul(ah7, bh4) | 0;
          lo = lo + Math.imul(al6, bl5) | 0;
          mid = mid + Math.imul(al6, bh5) | 0;
          mid = mid + Math.imul(ah6, bl5) | 0;
          hi = hi + Math.imul(ah6, bh5) | 0;
          lo = lo + Math.imul(al5, bl6) | 0;
          mid = mid + Math.imul(al5, bh6) | 0;
          mid = mid + Math.imul(ah5, bl6) | 0;
          hi = hi + Math.imul(ah5, bh6) | 0;
          lo = lo + Math.imul(al4, bl7) | 0;
          mid = mid + Math.imul(al4, bh7) | 0;
          mid = mid + Math.imul(ah4, bl7) | 0;
          hi = hi + Math.imul(ah4, bh7) | 0;
          lo = lo + Math.imul(al3, bl8) | 0;
          mid = mid + Math.imul(al3, bh8) | 0;
          mid = mid + Math.imul(ah3, bl8) | 0;
          hi = hi + Math.imul(ah3, bh8) | 0;
          lo = lo + Math.imul(al2, bl9) | 0;
          mid = mid + Math.imul(al2, bh9) | 0;
          mid = mid + Math.imul(ah2, bl9) | 0;
          hi = hi + Math.imul(ah2, bh9) | 0;
          var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
          w11 &= 67108863;
          lo = Math.imul(al9, bl3);
          mid = Math.imul(al9, bh3);
          mid = mid + Math.imul(ah9, bl3) | 0;
          hi = Math.imul(ah9, bh3);
          lo = lo + Math.imul(al8, bl4) | 0;
          mid = mid + Math.imul(al8, bh4) | 0;
          mid = mid + Math.imul(ah8, bl4) | 0;
          hi = hi + Math.imul(ah8, bh4) | 0;
          lo = lo + Math.imul(al7, bl5) | 0;
          mid = mid + Math.imul(al7, bh5) | 0;
          mid = mid + Math.imul(ah7, bl5) | 0;
          hi = hi + Math.imul(ah7, bh5) | 0;
          lo = lo + Math.imul(al6, bl6) | 0;
          mid = mid + Math.imul(al6, bh6) | 0;
          mid = mid + Math.imul(ah6, bl6) | 0;
          hi = hi + Math.imul(ah6, bh6) | 0;
          lo = lo + Math.imul(al5, bl7) | 0;
          mid = mid + Math.imul(al5, bh7) | 0;
          mid = mid + Math.imul(ah5, bl7) | 0;
          hi = hi + Math.imul(ah5, bh7) | 0;
          lo = lo + Math.imul(al4, bl8) | 0;
          mid = mid + Math.imul(al4, bh8) | 0;
          mid = mid + Math.imul(ah4, bl8) | 0;
          hi = hi + Math.imul(ah4, bh8) | 0;
          lo = lo + Math.imul(al3, bl9) | 0;
          mid = mid + Math.imul(al3, bh9) | 0;
          mid = mid + Math.imul(ah3, bl9) | 0;
          hi = hi + Math.imul(ah3, bh9) | 0;
          var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
          w12 &= 67108863;
          lo = Math.imul(al9, bl4);
          mid = Math.imul(al9, bh4);
          mid = mid + Math.imul(ah9, bl4) | 0;
          hi = Math.imul(ah9, bh4);
          lo = lo + Math.imul(al8, bl5) | 0;
          mid = mid + Math.imul(al8, bh5) | 0;
          mid = mid + Math.imul(ah8, bl5) | 0;
          hi = hi + Math.imul(ah8, bh5) | 0;
          lo = lo + Math.imul(al7, bl6) | 0;
          mid = mid + Math.imul(al7, bh6) | 0;
          mid = mid + Math.imul(ah7, bl6) | 0;
          hi = hi + Math.imul(ah7, bh6) | 0;
          lo = lo + Math.imul(al6, bl7) | 0;
          mid = mid + Math.imul(al6, bh7) | 0;
          mid = mid + Math.imul(ah6, bl7) | 0;
          hi = hi + Math.imul(ah6, bh7) | 0;
          lo = lo + Math.imul(al5, bl8) | 0;
          mid = mid + Math.imul(al5, bh8) | 0;
          mid = mid + Math.imul(ah5, bl8) | 0;
          hi = hi + Math.imul(ah5, bh8) | 0;
          lo = lo + Math.imul(al4, bl9) | 0;
          mid = mid + Math.imul(al4, bh9) | 0;
          mid = mid + Math.imul(ah4, bl9) | 0;
          hi = hi + Math.imul(ah4, bh9) | 0;
          var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
          w13 &= 67108863;
          lo = Math.imul(al9, bl5);
          mid = Math.imul(al9, bh5);
          mid = mid + Math.imul(ah9, bl5) | 0;
          hi = Math.imul(ah9, bh5);
          lo = lo + Math.imul(al8, bl6) | 0;
          mid = mid + Math.imul(al8, bh6) | 0;
          mid = mid + Math.imul(ah8, bl6) | 0;
          hi = hi + Math.imul(ah8, bh6) | 0;
          lo = lo + Math.imul(al7, bl7) | 0;
          mid = mid + Math.imul(al7, bh7) | 0;
          mid = mid + Math.imul(ah7, bl7) | 0;
          hi = hi + Math.imul(ah7, bh7) | 0;
          lo = lo + Math.imul(al6, bl8) | 0;
          mid = mid + Math.imul(al6, bh8) | 0;
          mid = mid + Math.imul(ah6, bl8) | 0;
          hi = hi + Math.imul(ah6, bh8) | 0;
          lo = lo + Math.imul(al5, bl9) | 0;
          mid = mid + Math.imul(al5, bh9) | 0;
          mid = mid + Math.imul(ah5, bl9) | 0;
          hi = hi + Math.imul(ah5, bh9) | 0;
          var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
          w14 &= 67108863;
          lo = Math.imul(al9, bl6);
          mid = Math.imul(al9, bh6);
          mid = mid + Math.imul(ah9, bl6) | 0;
          hi = Math.imul(ah9, bh6);
          lo = lo + Math.imul(al8, bl7) | 0;
          mid = mid + Math.imul(al8, bh7) | 0;
          mid = mid + Math.imul(ah8, bl7) | 0;
          hi = hi + Math.imul(ah8, bh7) | 0;
          lo = lo + Math.imul(al7, bl8) | 0;
          mid = mid + Math.imul(al7, bh8) | 0;
          mid = mid + Math.imul(ah7, bl8) | 0;
          hi = hi + Math.imul(ah7, bh8) | 0;
          lo = lo + Math.imul(al6, bl9) | 0;
          mid = mid + Math.imul(al6, bh9) | 0;
          mid = mid + Math.imul(ah6, bl9) | 0;
          hi = hi + Math.imul(ah6, bh9) | 0;
          var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
          w15 &= 67108863;
          lo = Math.imul(al9, bl7);
          mid = Math.imul(al9, bh7);
          mid = mid + Math.imul(ah9, bl7) | 0;
          hi = Math.imul(ah9, bh7);
          lo = lo + Math.imul(al8, bl8) | 0;
          mid = mid + Math.imul(al8, bh8) | 0;
          mid = mid + Math.imul(ah8, bl8) | 0;
          hi = hi + Math.imul(ah8, bh8) | 0;
          lo = lo + Math.imul(al7, bl9) | 0;
          mid = mid + Math.imul(al7, bh9) | 0;
          mid = mid + Math.imul(ah7, bl9) | 0;
          hi = hi + Math.imul(ah7, bh9) | 0;
          var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
          w16 &= 67108863;
          lo = Math.imul(al9, bl8);
          mid = Math.imul(al9, bh8);
          mid = mid + Math.imul(ah9, bl8) | 0;
          hi = Math.imul(ah9, bh8);
          lo = lo + Math.imul(al8, bl9) | 0;
          mid = mid + Math.imul(al8, bh9) | 0;
          mid = mid + Math.imul(ah8, bl9) | 0;
          hi = hi + Math.imul(ah8, bh9) | 0;
          var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
          w17 &= 67108863;
          lo = Math.imul(al9, bl9);
          mid = Math.imul(al9, bh9);
          mid = mid + Math.imul(ah9, bl9) | 0;
          hi = Math.imul(ah9, bh9);
          var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
          w18 &= 67108863;
          o[0] = w0;
          o[1] = w1;
          o[2] = w2;
          o[3] = w3;
          o[4] = w4;
          o[5] = w5;
          o[6] = w6;
          o[7] = w7;
          o[8] = w8;
          o[9] = w9;
          o[10] = w10;
          o[11] = w11;
          o[12] = w12;
          o[13] = w13;
          o[14] = w14;
          o[15] = w15;
          o[16] = w16;
          o[17] = w17;
          o[18] = w18;
          if (c !== 0) {
            o[19] = c;
            out.length++;
          }
          return out;
        };
        if (!Math.imul) {
          comb10MulTo = smallMulTo;
        }
        function bigMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          out.length = self2.length + num.length;
          var carry = 0;
          var hncarry = 0;
          for (var k = 0; k < out.length - 1; k++) {
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
              var i = k - j;
              var a = self2.words[i] | 0;
              var b = num.words[j] | 0;
              var r3 = a * b;
              var lo = r3 & 67108863;
              ncarry = ncarry + (r3 / 67108864 | 0) | 0;
              lo = lo + rword | 0;
              rword = lo & 67108863;
              ncarry = ncarry + (lo >>> 26) | 0;
              hncarry += ncarry >>> 26;
              ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
          }
          if (carry !== 0) {
            out.words[k] = carry;
          } else {
            out.length--;
          }
          return out._strip();
        }
        function jumboMulTo(self2, num, out) {
          return bigMulTo(self2, num, out);
        }
        BN4.prototype.mulTo = function mulTo(num, out) {
          var res;
          var len = this.length + num.length;
          if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
          } else if (len < 63) {
            res = smallMulTo(this, num, out);
          } else if (len < 1024) {
            res = bigMulTo(this, num, out);
          } else {
            res = jumboMulTo(this, num, out);
          }
          return res;
        };
        function FFTM(x, y) {
          this.x = x;
          this.y = y;
        }
        FFTM.prototype.makeRBT = function makeRBT(N2) {
          var t = new Array(N2);
          var l = BN4.prototype._countBits(N2) - 1;
          for (var i = 0; i < N2; i++) {
            t[i] = this.revBin(i, l, N2);
          }
          return t;
        };
        FFTM.prototype.revBin = function revBin(x, l, N2) {
          if (x === 0 || x === N2 - 1)
            return x;
          var rb = 0;
          for (var i = 0; i < l; i++) {
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
          }
          return rb;
        };
        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
          for (var i = 0; i < N2; i++) {
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
          }
        };
        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
          this.permute(rbt, rws, iws, rtws, itws, N2);
          for (var s = 1; s < N2; s <<= 1) {
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for (var p = 0; p < N2; p += l) {
              var rtwdf_ = rtwdf;
              var itwdf_ = itwdf;
              for (var j = 0; j < s; j++) {
                var re = rtws[p + j];
                var ie = itws[p + j];
                var ro = rtws[p + j + s];
                var io = itws[p + j + s];
                var rx = rtwdf_ * ro - itwdf_ * io;
                io = rtwdf_ * io + itwdf_ * ro;
                ro = rx;
                rtws[p + j] = re + ro;
                itws[p + j] = ie + io;
                rtws[p + j + s] = re - ro;
                itws[p + j + s] = ie - io;
                if (j !== l) {
                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                  rtwdf_ = rx;
                }
              }
            }
          }
        };
        FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
          var N2 = Math.max(m, n) | 1;
          var odd = N2 & 1;
          var i = 0;
          for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
            i++;
          }
          return 1 << i + 1 + odd;
        };
        FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
          if (N2 <= 1)
            return;
          for (var i = 0; i < N2 / 2; i++) {
            var t = rws[i];
            rws[i] = rws[N2 - i - 1];
            rws[N2 - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N2 - i - 1];
            iws[N2 - i - 1] = -t;
          }
        };
        FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
          var carry = 0;
          for (var i = 0; i < N2 / 2; i++) {
            var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) {
              carry = 0;
            } else {
              carry = w / 67108864 | 0;
            }
          }
          return ws;
        };
        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
          var carry = 0;
          for (var i = 0; i < len; i++) {
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
          }
          for (i = 2 * len; i < N2; ++i) {
            rws[i] = 0;
          }
          assert3(carry === 0);
          assert3((carry & ~8191) === 0);
        };
        FFTM.prototype.stub = function stub(N2) {
          var ph = new Array(N2);
          for (var i = 0; i < N2; i++) {
            ph[i] = 0;
          }
          return ph;
        };
        FFTM.prototype.mulp = function mulp(x, y, out) {
          var N2 = 2 * this.guessLen13b(x.length, y.length);
          var rbt = this.makeRBT(N2);
          var _ = this.stub(N2);
          var rws = new Array(N2);
          var rwst = new Array(N2);
          var iwst = new Array(N2);
          var nrws = new Array(N2);
          var nrwst = new Array(N2);
          var niwst = new Array(N2);
          var rmws = out.words;
          rmws.length = N2;
          this.convert13b(x.words, x.length, rws, N2);
          this.convert13b(y.words, y.length, nrws, N2);
          this.transform(rws, _, rwst, iwst, N2, rbt);
          this.transform(nrws, _, nrwst, niwst, N2, rbt);
          for (var i = 0; i < N2; i++) {
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
          }
          this.conjugate(rwst, iwst, N2);
          this.transform(rwst, iwst, rmws, _, N2, rbt);
          this.conjugate(rmws, _, N2);
          this.normalize13b(rmws, N2);
          out.negative = x.negative ^ y.negative;
          out.length = x.length + y.length;
          return out._strip();
        };
        BN4.prototype.mul = function mul5(num) {
          var out = new BN4(null);
          out.words = new Array(this.length + num.length);
          return this.mulTo(num, out);
        };
        BN4.prototype.mulf = function mulf(num) {
          var out = new BN4(null);
          out.words = new Array(this.length + num.length);
          return jumboMulTo(this, num, out);
        };
        BN4.prototype.imul = function imul(num) {
          return this.clone().mulTo(num, this);
        };
        BN4.prototype.imuln = function imuln(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert3(typeof num === "number");
          assert3(num < 67108864);
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return isNegNum ? this.ineg() : this;
        };
        BN4.prototype.muln = function muln(num) {
          return this.clone().imuln(num);
        };
        BN4.prototype.sqr = function sqr() {
          return this.mul(this);
        };
        BN4.prototype.isqr = function isqr() {
          return this.imul(this.clone());
        };
        BN4.prototype.pow = function pow(num) {
          var w = toBitArray(num);
          if (w.length === 0)
            return new BN4(1);
          var res = this;
          for (var i = 0; i < w.length; i++, res = res.sqr()) {
            if (w[i] !== 0)
              break;
          }
          if (++i < w.length) {
            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
              if (w[i] === 0)
                continue;
              res = res.mul(q);
            }
          }
          return res;
        };
        BN4.prototype.iushln = function iushln(bits) {
          assert3(typeof bits === "number" && bits >= 0);
          var r3 = bits % 26;
          var s = (bits - r3) / 26;
          var carryMask = 67108863 >>> 26 - r3 << 26 - r3;
          var i;
          if (r3 !== 0) {
            var carry = 0;
            for (i = 0; i < this.length; i++) {
              var newCarry = this.words[i] & carryMask;
              var c = (this.words[i] | 0) - newCarry << r3;
              this.words[i] = c | carry;
              carry = newCarry >>> 26 - r3;
            }
            if (carry) {
              this.words[i] = carry;
              this.length++;
            }
          }
          if (s !== 0) {
            for (i = this.length - 1; i >= 0; i--) {
              this.words[i + s] = this.words[i];
            }
            for (i = 0; i < s; i++) {
              this.words[i] = 0;
            }
            this.length += s;
          }
          return this._strip();
        };
        BN4.prototype.ishln = function ishln(bits) {
          assert3(this.negative === 0);
          return this.iushln(bits);
        };
        BN4.prototype.iushrn = function iushrn(bits, hint, extended) {
          assert3(typeof bits === "number" && bits >= 0);
          var h;
          if (hint) {
            h = (hint - hint % 26) / 26;
          } else {
            h = 0;
          }
          var r3 = bits % 26;
          var s = Math.min((bits - r3) / 26, this.length);
          var mask = 67108863 ^ 67108863 >>> r3 << r3;
          var maskedWords = extended;
          h -= s;
          h = Math.max(0, h);
          if (maskedWords) {
            for (var i = 0; i < s; i++) {
              maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
          }
          if (s === 0) {
          } else if (this.length > s) {
            this.length -= s;
            for (i = 0; i < this.length; i++) {
              this.words[i] = this.words[i + s];
            }
          } else {
            this.words[0] = 0;
            this.length = 1;
          }
          var carry = 0;
          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r3 | word >>> r3;
            carry = word & mask;
          }
          if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
          }
          if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
          }
          return this._strip();
        };
        BN4.prototype.ishrn = function ishrn(bits, hint, extended) {
          assert3(this.negative === 0);
          return this.iushrn(bits, hint, extended);
        };
        BN4.prototype.shln = function shln(bits) {
          return this.clone().ishln(bits);
        };
        BN4.prototype.ushln = function ushln(bits) {
          return this.clone().iushln(bits);
        };
        BN4.prototype.shrn = function shrn(bits) {
          return this.clone().ishrn(bits);
        };
        BN4.prototype.ushrn = function ushrn(bits) {
          return this.clone().iushrn(bits);
        };
        BN4.prototype.testn = function testn(bit) {
          assert3(typeof bit === "number" && bit >= 0);
          var r3 = bit % 26;
          var s = (bit - r3) / 26;
          var q = 1 << r3;
          if (this.length <= s)
            return false;
          var w = this.words[s];
          return !!(w & q);
        };
        BN4.prototype.imaskn = function imaskn(bits) {
          assert3(typeof bits === "number" && bits >= 0);
          var r3 = bits % 26;
          var s = (bits - r3) / 26;
          assert3(this.negative === 0, "imaskn works only with positive numbers");
          if (this.length <= s) {
            return this;
          }
          if (r3 !== 0) {
            s++;
          }
          this.length = Math.min(s, this.length);
          if (r3 !== 0) {
            var mask = 67108863 ^ 67108863 >>> r3 << r3;
            this.words[this.length - 1] &= mask;
          }
          return this._strip();
        };
        BN4.prototype.maskn = function maskn(bits) {
          return this.clone().imaskn(bits);
        };
        BN4.prototype.iaddn = function iaddn(num) {
          assert3(typeof num === "number");
          assert3(num < 67108864);
          if (num < 0)
            return this.isubn(-num);
          if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
              this.words[0] = num - (this.words[0] | 0);
              this.negative = 0;
              return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
          }
          return this._iaddn(num);
        };
        BN4.prototype._iaddn = function _iaddn(num) {
          this.words[0] += num;
          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
            this.words[i] -= 67108864;
            if (i === this.length - 1) {
              this.words[i + 1] = 1;
            } else {
              this.words[i + 1]++;
            }
          }
          this.length = Math.max(this.length, i + 1);
          return this;
        };
        BN4.prototype.isubn = function isubn(num) {
          assert3(typeof num === "number");
          assert3(num < 67108864);
          if (num < 0)
            return this.iaddn(-num);
          if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
          }
          this.words[0] -= num;
          if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
          } else {
            for (var i = 0; i < this.length && this.words[i] < 0; i++) {
              this.words[i] += 67108864;
              this.words[i + 1] -= 1;
            }
          }
          return this._strip();
        };
        BN4.prototype.addn = function addn(num) {
          return this.clone().iaddn(num);
        };
        BN4.prototype.subn = function subn(num) {
          return this.clone().isubn(num);
        };
        BN4.prototype.iabs = function iabs() {
          this.negative = 0;
          return this;
        };
        BN4.prototype.abs = function abs() {
          return this.clone().iabs();
        };
        BN4.prototype._ishlnsubmul = function _ishlnsubmul(num, mul5, shift) {
          var len = num.length + shift;
          var i;
          this._expand(len);
          var w;
          var carry = 0;
          for (i = 0; i < num.length; i++) {
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul5;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
          }
          for (; i < this.length - shift; i++) {
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
          }
          if (carry === 0)
            return this._strip();
          assert3(carry === -1);
          carry = 0;
          for (i = 0; i < this.length; i++) {
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
          }
          this.negative = 1;
          return this._strip();
        };
        BN4.prototype._wordDiv = function _wordDiv(num, mode) {
          var shift = this.length - num.length;
          var a = this.clone();
          var b = num;
          var bhi = b.words[b.length - 1] | 0;
          var bhiBits = this._countBits(bhi);
          shift = 26 - bhiBits;
          if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
          }
          var m = a.length - b.length;
          var q;
          if (mode !== "mod") {
            q = new BN4(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for (var i = 0; i < q.length; i++) {
              q.words[i] = 0;
            }
          }
          var diff = a.clone()._ishlnsubmul(b, 1, m);
          if (diff.negative === 0) {
            a = diff;
            if (q) {
              q.words[m] = 1;
            }
          }
          for (var j = m - 1; j >= 0; j--) {
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while (a.negative !== 0) {
              qj--;
              a.negative = 0;
              a._ishlnsubmul(b, 1, j);
              if (!a.isZero()) {
                a.negative ^= 1;
              }
            }
            if (q) {
              q.words[j] = qj;
            }
          }
          if (q) {
            q._strip();
          }
          a._strip();
          if (mode !== "div" && shift !== 0) {
            a.iushrn(shift);
          }
          return {
            div: q || null,
            mod: a
          };
        };
        BN4.prototype.divmod = function divmod(num, mode, positive) {
          assert3(!num.isZero());
          if (this.isZero()) {
            return {
              div: new BN4(0),
              mod: new BN4(0)
            };
          }
          var div, mod, res;
          if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.iadd(num);
              }
            }
            return {
              div,
              mod
            };
          }
          if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            return {
              div,
              mod: res.mod
            };
          }
          if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.isub(num);
              }
            }
            return {
              div: res.div,
              mod
            };
          }
          if (num.length > this.length || this.cmp(num) < 0) {
            return {
              div: new BN4(0),
              mod: this
            };
          }
          if (num.length === 1) {
            if (mode === "div") {
              return {
                div: this.divn(num.words[0]),
                mod: null
              };
            }
            if (mode === "mod") {
              return {
                div: null,
                mod: new BN4(this.modrn(num.words[0]))
              };
            }
            return {
              div: this.divn(num.words[0]),
              mod: new BN4(this.modrn(num.words[0]))
            };
          }
          return this._wordDiv(num, mode);
        };
        BN4.prototype.div = function div(num) {
          return this.divmod(num, "div", false).div;
        };
        BN4.prototype.mod = function mod(num) {
          return this.divmod(num, "mod", false).mod;
        };
        BN4.prototype.umod = function umod(num) {
          return this.divmod(num, "mod", true).mod;
        };
        BN4.prototype.divRound = function divRound(num) {
          var dm = this.divmod(num);
          if (dm.mod.isZero())
            return dm.div;
          var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
          var half = num.ushrn(1);
          var r22 = num.andln(1);
          var cmp = mod.cmp(half);
          if (cmp < 0 || r22 === 1 && cmp === 0)
            return dm.div;
          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
        };
        BN4.prototype.modrn = function modrn(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert3(num <= 67108863);
          var p = (1 << 26) % num;
          var acc = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            acc = (p * acc + (this.words[i] | 0)) % num;
          }
          return isNegNum ? -acc : acc;
        };
        BN4.prototype.modn = function modn(num) {
          return this.modrn(num);
        };
        BN4.prototype.idivn = function idivn(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert3(num <= 67108863);
          var carry = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
          }
          this._strip();
          return isNegNum ? this.ineg() : this;
        };
        BN4.prototype.divn = function divn(num) {
          return this.clone().idivn(num);
        };
        BN4.prototype.egcd = function egcd(p) {
          assert3(p.negative === 0);
          assert3(!p.isZero());
          var x = this;
          var y = p.clone();
          if (x.negative !== 0) {
            x = x.umod(p);
          } else {
            x = x.clone();
          }
          var A = new BN4(1);
          var B = new BN4(0);
          var C = new BN4(0);
          var D = new BN4(1);
          var g = 0;
          while (x.isEven() && y.isEven()) {
            x.iushrn(1);
            y.iushrn(1);
            ++g;
          }
          var yp = y.clone();
          var xp = x.clone();
          while (!x.isZero()) {
            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              x.iushrn(i);
              while (i-- > 0) {
                if (A.isOdd() || B.isOdd()) {
                  A.iadd(yp);
                  B.isub(xp);
                }
                A.iushrn(1);
                B.iushrn(1);
              }
            }
            for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              y.iushrn(j);
              while (j-- > 0) {
                if (C.isOdd() || D.isOdd()) {
                  C.iadd(yp);
                  D.isub(xp);
                }
                C.iushrn(1);
                D.iushrn(1);
              }
            }
            if (x.cmp(y) >= 0) {
              x.isub(y);
              A.isub(C);
              B.isub(D);
            } else {
              y.isub(x);
              C.isub(A);
              D.isub(B);
            }
          }
          return {
            a: C,
            b: D,
            gcd: y.iushln(g)
          };
        };
        BN4.prototype._invmp = function _invmp(p) {
          assert3(p.negative === 0);
          assert3(!p.isZero());
          var a = this;
          var b = p.clone();
          if (a.negative !== 0) {
            a = a.umod(p);
          } else {
            a = a.clone();
          }
          var x1 = new BN4(1);
          var x2 = new BN4(0);
          var delta = b.clone();
          while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              a.iushrn(i);
              while (i-- > 0) {
                if (x1.isOdd()) {
                  x1.iadd(delta);
                }
                x1.iushrn(1);
              }
            }
            for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              b.iushrn(j);
              while (j-- > 0) {
                if (x2.isOdd()) {
                  x2.iadd(delta);
                }
                x2.iushrn(1);
              }
            }
            if (a.cmp(b) >= 0) {
              a.isub(b);
              x1.isub(x2);
            } else {
              b.isub(a);
              x2.isub(x1);
            }
          }
          var res;
          if (a.cmpn(1) === 0) {
            res = x1;
          } else {
            res = x2;
          }
          if (res.cmpn(0) < 0) {
            res.iadd(p);
          }
          return res;
        };
        BN4.prototype.gcd = function gcd(num) {
          if (this.isZero())
            return num.abs();
          if (num.isZero())
            return this.abs();
          var a = this.clone();
          var b = num.clone();
          a.negative = 0;
          b.negative = 0;
          for (var shift = 0; a.isEven() && b.isEven(); shift++) {
            a.iushrn(1);
            b.iushrn(1);
          }
          do {
            while (a.isEven()) {
              a.iushrn(1);
            }
            while (b.isEven()) {
              b.iushrn(1);
            }
            var r3 = a.cmp(b);
            if (r3 < 0) {
              var t = a;
              a = b;
              b = t;
            } else if (r3 === 0 || b.cmpn(1) === 0) {
              break;
            }
            a.isub(b);
          } while (true);
          return b.iushln(shift);
        };
        BN4.prototype.invm = function invm(num) {
          return this.egcd(num).a.umod(num);
        };
        BN4.prototype.isEven = function isEven() {
          return (this.words[0] & 1) === 0;
        };
        BN4.prototype.isOdd = function isOdd() {
          return (this.words[0] & 1) === 1;
        };
        BN4.prototype.andln = function andln(num) {
          return this.words[0] & num;
        };
        BN4.prototype.bincn = function bincn(bit) {
          assert3(typeof bit === "number");
          var r3 = bit % 26;
          var s = (bit - r3) / 26;
          var q = 1 << r3;
          if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
          }
          var carry = q;
          for (var i = s; carry !== 0 && i < this.length; i++) {
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return this;
        };
        BN4.prototype.isZero = function isZero() {
          return this.length === 1 && this.words[0] === 0;
        };
        BN4.prototype.cmpn = function cmpn(num) {
          var negative = num < 0;
          if (this.negative !== 0 && !negative)
            return -1;
          if (this.negative === 0 && negative)
            return 1;
          this._strip();
          var res;
          if (this.length > 1) {
            res = 1;
          } else {
            if (negative) {
              num = -num;
            }
            assert3(num <= 67108863, "Number is too big");
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
          }
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN4.prototype.cmp = function cmp(num) {
          if (this.negative !== 0 && num.negative === 0)
            return -1;
          if (this.negative === 0 && num.negative !== 0)
            return 1;
          var res = this.ucmp(num);
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN4.prototype.ucmp = function ucmp(num) {
          if (this.length > num.length)
            return 1;
          if (this.length < num.length)
            return -1;
          var res = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b)
              continue;
            if (a < b) {
              res = -1;
            } else if (a > b) {
              res = 1;
            }
            break;
          }
          return res;
        };
        BN4.prototype.gtn = function gtn(num) {
          return this.cmpn(num) === 1;
        };
        BN4.prototype.gt = function gt(num) {
          return this.cmp(num) === 1;
        };
        BN4.prototype.gten = function gten(num) {
          return this.cmpn(num) >= 0;
        };
        BN4.prototype.gte = function gte(num) {
          return this.cmp(num) >= 0;
        };
        BN4.prototype.ltn = function ltn(num) {
          return this.cmpn(num) === -1;
        };
        BN4.prototype.lt = function lt(num) {
          return this.cmp(num) === -1;
        };
        BN4.prototype.lten = function lten(num) {
          return this.cmpn(num) <= 0;
        };
        BN4.prototype.lte = function lte(num) {
          return this.cmp(num) <= 0;
        };
        BN4.prototype.eqn = function eqn(num) {
          return this.cmpn(num) === 0;
        };
        BN4.prototype.eq = function eq7(num) {
          return this.cmp(num) === 0;
        };
        BN4.red = function red(num) {
          return new Red(num);
        };
        BN4.prototype.toRed = function toRed(ctx) {
          assert3(!this.red, "Already a number in reduction context");
          assert3(this.negative === 0, "red works only with positives");
          return ctx.convertTo(this)._forceRed(ctx);
        };
        BN4.prototype.fromRed = function fromRed() {
          assert3(this.red, "fromRed works only with numbers in reduction context");
          return this.red.convertFrom(this);
        };
        BN4.prototype._forceRed = function _forceRed(ctx) {
          this.red = ctx;
          return this;
        };
        BN4.prototype.forceRed = function forceRed(ctx) {
          assert3(!this.red, "Already a number in reduction context");
          return this._forceRed(ctx);
        };
        BN4.prototype.redAdd = function redAdd(num) {
          assert3(this.red, "redAdd works only with red numbers");
          return this.red.add(this, num);
        };
        BN4.prototype.redIAdd = function redIAdd(num) {
          assert3(this.red, "redIAdd works only with red numbers");
          return this.red.iadd(this, num);
        };
        BN4.prototype.redSub = function redSub(num) {
          assert3(this.red, "redSub works only with red numbers");
          return this.red.sub(this, num);
        };
        BN4.prototype.redISub = function redISub(num) {
          assert3(this.red, "redISub works only with red numbers");
          return this.red.isub(this, num);
        };
        BN4.prototype.redShl = function redShl(num) {
          assert3(this.red, "redShl works only with red numbers");
          return this.red.shl(this, num);
        };
        BN4.prototype.redMul = function redMul(num) {
          assert3(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.mul(this, num);
        };
        BN4.prototype.redIMul = function redIMul(num) {
          assert3(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.imul(this, num);
        };
        BN4.prototype.redSqr = function redSqr() {
          assert3(this.red, "redSqr works only with red numbers");
          this.red._verify1(this);
          return this.red.sqr(this);
        };
        BN4.prototype.redISqr = function redISqr() {
          assert3(this.red, "redISqr works only with red numbers");
          this.red._verify1(this);
          return this.red.isqr(this);
        };
        BN4.prototype.redSqrt = function redSqrt() {
          assert3(this.red, "redSqrt works only with red numbers");
          this.red._verify1(this);
          return this.red.sqrt(this);
        };
        BN4.prototype.redInvm = function redInvm() {
          assert3(this.red, "redInvm works only with red numbers");
          this.red._verify1(this);
          return this.red.invm(this);
        };
        BN4.prototype.redNeg = function redNeg() {
          assert3(this.red, "redNeg works only with red numbers");
          this.red._verify1(this);
          return this.red.neg(this);
        };
        BN4.prototype.redPow = function redPow(num) {
          assert3(this.red && !num.red, "redPow(normalNum)");
          this.red._verify1(this);
          return this.red.pow(this, num);
        };
        var primes = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function MPrime(name, p) {
          this.name = name;
          this.p = new BN4(p, 16);
          this.n = this.p.bitLength();
          this.k = new BN4(1).iushln(this.n).isub(this.p);
          this.tmp = this._tmp();
        }
        MPrime.prototype._tmp = function _tmp() {
          var tmp = new BN4(null);
          tmp.words = new Array(Math.ceil(this.n / 13));
          return tmp;
        };
        MPrime.prototype.ireduce = function ireduce(num) {
          var r3 = num;
          var rlen;
          do {
            this.split(r3, this.tmp);
            r3 = this.imulK(r3);
            r3 = r3.iadd(this.tmp);
            rlen = r3.bitLength();
          } while (rlen > this.n);
          var cmp = rlen < this.n ? -1 : r3.ucmp(this.p);
          if (cmp === 0) {
            r3.words[0] = 0;
            r3.length = 1;
          } else if (cmp > 0) {
            r3.isub(this.p);
          } else {
            if (r3.strip !== void 0) {
              r3.strip();
            } else {
              r3._strip();
            }
          }
          return r3;
        };
        MPrime.prototype.split = function split(input, out) {
          input.iushrn(this.n, 0, out);
        };
        MPrime.prototype.imulK = function imulK(num) {
          return num.imul(this.k);
        };
        function K256() {
          MPrime.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        inherits2(K256, MPrime);
        K256.prototype.split = function split(input, output) {
          var mask = 4194303;
          var outLen = Math.min(input.length, 9);
          for (var i = 0; i < outLen; i++) {
            output.words[i] = input.words[i];
          }
          output.length = outLen;
          if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
          }
          var prev = input.words[9];
          output.words[output.length++] = prev & mask;
          for (i = 10; i < input.length; i++) {
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
          }
          prev >>>= 22;
          input.words[i - 10] = prev;
          if (prev === 0 && input.length > 10) {
            input.length -= 10;
          } else {
            input.length -= 9;
          }
        };
        K256.prototype.imulK = function imulK(num) {
          num.words[num.length] = 0;
          num.words[num.length + 1] = 0;
          num.length += 2;
          var lo = 0;
          for (var i = 0; i < num.length; i++) {
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
          }
          if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
              num.length--;
            }
          }
          return num;
        };
        function P224() {
          MPrime.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        inherits2(P224, MPrime);
        function P192() {
          MPrime.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        inherits2(P192, MPrime);
        function P25519() {
          MPrime.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        inherits2(P25519, MPrime);
        P25519.prototype.imulK = function imulK(num) {
          var carry = 0;
          for (var i = 0; i < num.length; i++) {
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
          }
          if (carry !== 0) {
            num.words[num.length++] = carry;
          }
          return num;
        };
        BN4._prime = function prime(name) {
          if (primes[name])
            return primes[name];
          var prime2;
          if (name === "k256") {
            prime2 = new K256();
          } else if (name === "p224") {
            prime2 = new P224();
          } else if (name === "p192") {
            prime2 = new P192();
          } else if (name === "p25519") {
            prime2 = new P25519();
          } else {
            throw new Error("Unknown prime " + name);
          }
          primes[name] = prime2;
          return prime2;
        };
        function Red(m) {
          if (typeof m === "string") {
            var prime = BN4._prime(m);
            this.m = prime.p;
            this.prime = prime;
          } else {
            assert3(m.gtn(1), "modulus must be greater than 1");
            this.m = m;
            this.prime = null;
          }
        }
        Red.prototype._verify1 = function _verify1(a) {
          assert3(a.negative === 0, "red works only with positives");
          assert3(a.red, "red works only with red numbers");
        };
        Red.prototype._verify2 = function _verify2(a, b) {
          assert3((a.negative | b.negative) === 0, "red works only with positives");
          assert3(
            a.red && a.red === b.red,
            "red works only with red numbers"
          );
        };
        Red.prototype.imod = function imod(a) {
          if (this.prime)
            return this.prime.ireduce(a)._forceRed(this);
          move(a, a.umod(this.m)._forceRed(this));
          return a;
        };
        Red.prototype.neg = function neg5(a) {
          if (a.isZero()) {
            return a.clone();
          }
          return this.m.sub(a)._forceRed(this);
        };
        Red.prototype.add = function add5(a, b) {
          this._verify2(a, b);
          var res = a.add(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.iadd = function iadd(a, b) {
          this._verify2(a, b);
          var res = a.iadd(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res;
        };
        Red.prototype.sub = function sub(a, b) {
          this._verify2(a, b);
          var res = a.sub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.isub = function isub(a, b) {
          this._verify2(a, b);
          var res = a.isub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res;
        };
        Red.prototype.shl = function shl(a, num) {
          this._verify1(a);
          return this.imod(a.ushln(num));
        };
        Red.prototype.imul = function imul(a, b) {
          this._verify2(a, b);
          return this.imod(a.imul(b));
        };
        Red.prototype.mul = function mul5(a, b) {
          this._verify2(a, b);
          return this.imod(a.mul(b));
        };
        Red.prototype.isqr = function isqr(a) {
          return this.imul(a, a.clone());
        };
        Red.prototype.sqr = function sqr(a) {
          return this.mul(a, a);
        };
        Red.prototype.sqrt = function sqrt(a) {
          if (a.isZero())
            return a.clone();
          var mod3 = this.m.andln(3);
          assert3(mod3 % 2 === 1);
          if (mod3 === 3) {
            var pow = this.m.add(new BN4(1)).iushrn(2);
            return this.pow(a, pow);
          }
          var q = this.m.subn(1);
          var s = 0;
          while (!q.isZero() && q.andln(1) === 0) {
            s++;
            q.iushrn(1);
          }
          assert3(!q.isZero());
          var one = new BN4(1).toRed(this);
          var nOne = one.redNeg();
          var lpow = this.m.subn(1).iushrn(1);
          var z = this.m.bitLength();
          z = new BN4(2 * z * z).toRed(this);
          while (this.pow(z, lpow).cmp(nOne) !== 0) {
            z.redIAdd(nOne);
          }
          var c = this.pow(z, q);
          var r3 = this.pow(a, q.addn(1).iushrn(1));
          var t = this.pow(a, q);
          var m = s;
          while (t.cmp(one) !== 0) {
            var tmp = t;
            for (var i = 0; tmp.cmp(one) !== 0; i++) {
              tmp = tmp.redSqr();
            }
            assert3(i < m);
            var b = this.pow(c, new BN4(1).iushln(m - i - 1));
            r3 = r3.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
          }
          return r3;
        };
        Red.prototype.invm = function invm(a) {
          var inv = a._invmp(this.m);
          if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
          } else {
            return this.imod(inv);
          }
        };
        Red.prototype.pow = function pow(a, num) {
          if (num.isZero())
            return new BN4(1).toRed(this);
          if (num.cmpn(1) === 0)
            return a.clone();
          var windowSize = 4;
          var wnd = new Array(1 << windowSize);
          wnd[0] = new BN4(1).toRed(this);
          wnd[1] = a;
          for (var i = 2; i < wnd.length; i++) {
            wnd[i] = this.mul(wnd[i - 1], a);
          }
          var res = wnd[0];
          var current = 0;
          var currentLen = 0;
          var start = num.bitLength() % 26;
          if (start === 0) {
            start = 26;
          }
          for (i = num.length - 1; i >= 0; i--) {
            var word = num.words[i];
            for (var j = start - 1; j >= 0; j--) {
              var bit = word >> j & 1;
              if (res !== wnd[0]) {
                res = this.sqr(res);
              }
              if (bit === 0 && current === 0) {
                currentLen = 0;
                continue;
              }
              current <<= 1;
              current |= bit;
              currentLen++;
              if (currentLen !== windowSize && (i !== 0 || j !== 0))
                continue;
              res = this.mul(res, wnd[current]);
              currentLen = 0;
              current = 0;
            }
            start = 26;
          }
          return res;
        };
        Red.prototype.convertTo = function convertTo(num) {
          var r3 = num.umod(this.m);
          return r3 === num ? r3.clone() : r3;
        };
        Red.prototype.convertFrom = function convertFrom(num) {
          var res = num.clone();
          res.red = null;
          return res;
        };
        BN4.mont = function mont(num) {
          return new Mont(num);
        };
        function Mont(m) {
          Red.call(this, m);
          this.shift = this.m.bitLength();
          if (this.shift % 26 !== 0) {
            this.shift += 26 - this.shift % 26;
          }
          this.r = new BN4(1).iushln(this.shift);
          this.r2 = this.imod(this.r.sqr());
          this.rinv = this.r._invmp(this.m);
          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
          this.minv = this.minv.umod(this.r);
          this.minv = this.r.sub(this.minv);
        }
        inherits2(Mont, Red);
        Mont.prototype.convertTo = function convertTo(num) {
          return this.imod(num.ushln(this.shift));
        };
        Mont.prototype.convertFrom = function convertFrom(num) {
          var r3 = this.imod(num.mul(this.rinv));
          r3.red = null;
          return r3;
        };
        Mont.prototype.imul = function imul(a, b) {
          if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
          }
          var t = a.imul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.mul = function mul5(a, b) {
          if (a.isZero() || b.isZero())
            return new BN4(0)._forceRed(this);
          var t = a.mul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.invm = function invm(a) {
          var res = this.imod(a._invmp(this.m).mul(this.r2));
          return res._forceRed(this);
        };
      })(typeof module === "undefined" || module, exports);
    }
  });

  // node_modules/js-sha3/src/sha3.js
  var require_sha32 = __commonJS({
    "node_modules/js-sha3/src/sha3.js"(exports, module) {
      (function() {
        "use strict";
        var INPUT_ERROR = "input is invalid type";
        var FINALIZE_ERROR = "finalize already called";
        var WINDOW = typeof window === "object";
        var root = WINDOW ? window : {};
        if (root.JS_SHA3_NO_WINDOW) {
          WINDOW = false;
        }
        var WEB_WORKER = !WINDOW && typeof self === "object";
        var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
        if (NODE_JS) {
          root = global;
        } else if (WEB_WORKER) {
          root = self;
        }
        var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
        var AMD = typeof define === "function" && define.amd;
        var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
        var HEX_CHARS = "0123456789abcdef".split("");
        var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
        var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
        var KECCAK_PADDING = [1, 256, 65536, 16777216];
        var PADDING = [6, 1536, 393216, 100663296];
        var SHIFT = [0, 8, 16, 24];
        var RC = [
          1,
          0,
          32898,
          0,
          32906,
          2147483648,
          2147516416,
          2147483648,
          32907,
          0,
          2147483649,
          0,
          2147516545,
          2147483648,
          32777,
          2147483648,
          138,
          0,
          136,
          0,
          2147516425,
          0,
          2147483658,
          0,
          2147516555,
          0,
          139,
          2147483648,
          32905,
          2147483648,
          32771,
          2147483648,
          32770,
          2147483648,
          128,
          2147483648,
          32778,
          0,
          2147483658,
          2147483648,
          2147516545,
          2147483648,
          32896,
          2147483648,
          2147483649,
          0,
          2147516424,
          2147483648
        ];
        var BITS = [224, 256, 384, 512];
        var SHAKE_BITS = [128, 256];
        var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
        var CSHAKE_BYTEPAD = {
          "128": 168,
          "256": 136
        };
        if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
          Array.isArray = function(obj) {
            return Object.prototype.toString.call(obj) === "[object Array]";
          };
        }
        if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
          ArrayBuffer.isView = function(obj) {
            return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
          };
        }
        var createOutputMethod = function(bits2, padding3, outputType) {
          return function(message) {
            return new Keccak(bits2, padding3, bits2).update(message)[outputType]();
          };
        };
        var createShakeOutputMethod = function(bits2, padding3, outputType) {
          return function(message, outputBits) {
            return new Keccak(bits2, padding3, outputBits).update(message)[outputType]();
          };
        };
        var createCshakeOutputMethod = function(bits2, padding3, outputType) {
          return function(message, outputBits, n, s) {
            return methods["cshake" + bits2].update(message, outputBits, n, s)[outputType]();
          };
        };
        var createKmacOutputMethod = function(bits2, padding3, outputType) {
          return function(key3, message, outputBits, s) {
            return methods["kmac" + bits2].update(key3, message, outputBits, s)[outputType]();
          };
        };
        var createOutputMethods = function(method, createMethod2, bits2, padding3) {
          for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {
            var type = OUTPUT_TYPES[i2];
            method[type] = createMethod2(bits2, padding3, type);
          }
          return method;
        };
        var createMethod = function(bits2, padding3) {
          var method = createOutputMethod(bits2, padding3, "hex");
          method.create = function() {
            return new Keccak(bits2, padding3, bits2);
          };
          method.update = function(message) {
            return method.create().update(message);
          };
          return createOutputMethods(method, createOutputMethod, bits2, padding3);
        };
        var createShakeMethod = function(bits2, padding3) {
          var method = createShakeOutputMethod(bits2, padding3, "hex");
          method.create = function(outputBits) {
            return new Keccak(bits2, padding3, outputBits);
          };
          method.update = function(message, outputBits) {
            return method.create(outputBits).update(message);
          };
          return createOutputMethods(method, createShakeOutputMethod, bits2, padding3);
        };
        var createCshakeMethod = function(bits2, padding3) {
          var w = CSHAKE_BYTEPAD[bits2];
          var method = createCshakeOutputMethod(bits2, padding3, "hex");
          method.create = function(outputBits, n, s) {
            if (!n && !s) {
              return methods["shake" + bits2].create(outputBits);
            } else {
              return new Keccak(bits2, padding3, outputBits).bytepad([n, s], w);
            }
          };
          method.update = function(message, outputBits, n, s) {
            return method.create(outputBits, n, s).update(message);
          };
          return createOutputMethods(method, createCshakeOutputMethod, bits2, padding3);
        };
        var createKmacMethod = function(bits2, padding3) {
          var w = CSHAKE_BYTEPAD[bits2];
          var method = createKmacOutputMethod(bits2, padding3, "hex");
          method.create = function(key3, outputBits, s) {
            return new Kmac(bits2, padding3, outputBits).bytepad(["KMAC", s], w).bytepad([key3], w);
          };
          method.update = function(key3, message, outputBits, s) {
            return method.create(key3, outputBits, s).update(message);
          };
          return createOutputMethods(method, createKmacOutputMethod, bits2, padding3);
        };
        var algorithms = [
          { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
          { name: "sha3", padding: PADDING, bits: BITS, createMethod },
          { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
          { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
          { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
        ];
        var methods = {}, methodNames = [];
        for (var i = 0; i < algorithms.length; ++i) {
          var algorithm = algorithms[i];
          var bits = algorithm.bits;
          for (var j = 0; j < bits.length; ++j) {
            var methodName = algorithm.name + "_" + bits[j];
            methodNames.push(methodName);
            methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
            if (algorithm.name !== "sha3") {
              var newMethodName = algorithm.name + bits[j];
              methodNames.push(newMethodName);
              methods[newMethodName] = methods[methodName];
            }
          }
        }
        function Keccak(bits2, padding3, outputBits) {
          this.blocks = [];
          this.s = [];
          this.padding = padding3;
          this.outputBits = outputBits;
          this.reset = true;
          this.finalized = false;
          this.block = 0;
          this.start = 0;
          this.blockCount = 1600 - (bits2 << 1) >> 5;
          this.byteCount = this.blockCount << 2;
          this.outputBlocks = outputBits >> 5;
          this.extraBytes = (outputBits & 31) >> 3;
          for (var i2 = 0; i2 < 50; ++i2) {
            this.s[i2] = 0;
          }
        }
        Keccak.prototype.update = function(message) {
          if (this.finalized) {
            throw new Error(FINALIZE_ERROR);
          }
          var notString, type = typeof message;
          if (type !== "string") {
            if (type === "object") {
              if (message === null) {
                throw new Error(INPUT_ERROR);
              } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
                message = new Uint8Array(message);
              } else if (!Array.isArray(message)) {
                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                  throw new Error(INPUT_ERROR);
                }
              }
            } else {
              throw new Error(INPUT_ERROR);
            }
            notString = true;
          }
          var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index2 = 0, s = this.s, i2, code;
          while (index2 < length) {
            if (this.reset) {
              this.reset = false;
              blocks[0] = this.block;
              for (i2 = 1; i2 < blockCount + 1; ++i2) {
                blocks[i2] = 0;
              }
            }
            if (notString) {
              for (i2 = this.start; index2 < length && i2 < byteCount; ++index2) {
                blocks[i2 >> 2] |= message[index2] << SHIFT[i2++ & 3];
              }
            } else {
              for (i2 = this.start; index2 < length && i2 < byteCount; ++index2) {
                code = message.charCodeAt(index2);
                if (code < 128) {
                  blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];
                } else if (code < 2048) {
                  blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                } else if (code < 55296 || code >= 57344) {
                  blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                } else {
                  code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index2) & 1023);
                  blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                }
              }
            }
            this.lastByteIndex = i2;
            if (i2 >= byteCount) {
              this.start = i2 - byteCount;
              this.block = blocks[blockCount];
              for (i2 = 0; i2 < blockCount; ++i2) {
                s[i2] ^= blocks[i2];
              }
              f(s);
              this.reset = true;
            } else {
              this.start = i2;
            }
          }
          return this;
        };
        Keccak.prototype.encode = function(x, right) {
          var o = x & 255, n = 1;
          var bytes = [o];
          x = x >> 8;
          o = x & 255;
          while (o > 0) {
            bytes.unshift(o);
            x = x >> 8;
            o = x & 255;
            ++n;
          }
          if (right) {
            bytes.push(n);
          } else {
            bytes.unshift(n);
          }
          this.update(bytes);
          return bytes.length;
        };
        Keccak.prototype.encodeString = function(str) {
          var notString, type = typeof str;
          if (type !== "string") {
            if (type === "object") {
              if (str === null) {
                throw new Error(INPUT_ERROR);
              } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
                str = new Uint8Array(str);
              } else if (!Array.isArray(str)) {
                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                  throw new Error(INPUT_ERROR);
                }
              }
            } else {
              throw new Error(INPUT_ERROR);
            }
            notString = true;
          }
          var bytes = 0, length = str.length;
          if (notString) {
            bytes = length;
          } else {
            for (var i2 = 0; i2 < str.length; ++i2) {
              var code = str.charCodeAt(i2);
              if (code < 128) {
                bytes += 1;
              } else if (code < 2048) {
                bytes += 2;
              } else if (code < 55296 || code >= 57344) {
                bytes += 3;
              } else {
                code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);
                bytes += 4;
              }
            }
          }
          bytes += this.encode(bytes * 8);
          this.update(str);
          return bytes;
        };
        Keccak.prototype.bytepad = function(strs, w) {
          var bytes = this.encode(w);
          for (var i2 = 0; i2 < strs.length; ++i2) {
            bytes += this.encodeString(strs[i2]);
          }
          var paddingBytes = w - bytes % w;
          var zeros2 = [];
          zeros2.length = paddingBytes;
          this.update(zeros2);
          return this;
        };
        Keccak.prototype.finalize = function() {
          if (this.finalized) {
            return;
          }
          this.finalized = true;
          var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
          blocks[i2 >> 2] |= this.padding[i2 & 3];
          if (this.lastByteIndex === this.byteCount) {
            blocks[0] = blocks[blockCount];
            for (i2 = 1; i2 < blockCount + 1; ++i2) {
              blocks[i2] = 0;
            }
          }
          blocks[blockCount - 1] |= 2147483648;
          for (i2 = 0; i2 < blockCount; ++i2) {
            s[i2] ^= blocks[i2];
          }
          f(s);
        };
        Keccak.prototype.toString = Keccak.prototype.hex = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var hex = "", block;
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              block = s[i2];
              hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
            }
            if (j2 % blockCount === 0) {
              f(s);
              i2 = 0;
            }
          }
          if (extraBytes) {
            block = s[i2];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
            if (extraBytes > 1) {
              hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
            }
            if (extraBytes > 2) {
              hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
            }
          }
          return hex;
        };
        Keccak.prototype.arrayBuffer = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var bytes = this.outputBits >> 3;
          var buffer;
          if (extraBytes) {
            buffer = new ArrayBuffer(outputBlocks + 1 << 2);
          } else {
            buffer = new ArrayBuffer(bytes);
          }
          var array = new Uint32Array(buffer);
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              array[j2] = s[i2];
            }
            if (j2 % blockCount === 0) {
              f(s);
            }
          }
          if (extraBytes) {
            array[i2] = s[i2];
            buffer = buffer.slice(0, bytes);
          }
          return buffer;
        };
        Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
        Keccak.prototype.digest = Keccak.prototype.array = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var array = [], offset, block;
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              offset = j2 << 2;
              block = s[i2];
              array[offset] = block & 255;
              array[offset + 1] = block >> 8 & 255;
              array[offset + 2] = block >> 16 & 255;
              array[offset + 3] = block >> 24 & 255;
            }
            if (j2 % blockCount === 0) {
              f(s);
            }
          }
          if (extraBytes) {
            offset = j2 << 2;
            block = s[i2];
            array[offset] = block & 255;
            if (extraBytes > 1) {
              array[offset + 1] = block >> 8 & 255;
            }
            if (extraBytes > 2) {
              array[offset + 2] = block >> 16 & 255;
            }
          }
          return array;
        };
        function Kmac(bits2, padding3, outputBits) {
          Keccak.call(this, bits2, padding3, outputBits);
        }
        Kmac.prototype = new Keccak();
        Kmac.prototype.finalize = function() {
          this.encode(this.outputBits, true);
          return Keccak.prototype.finalize.call(this);
        };
        var f = function(s) {
          var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
          for (n = 0; n < 48; n += 2) {
            c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
            c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
            c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
            c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
            c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
            c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
            c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
            c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
            c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
            c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
            h = c8 ^ (c2 << 1 | c3 >>> 31);
            l = c9 ^ (c3 << 1 | c2 >>> 31);
            s[0] ^= h;
            s[1] ^= l;
            s[10] ^= h;
            s[11] ^= l;
            s[20] ^= h;
            s[21] ^= l;
            s[30] ^= h;
            s[31] ^= l;
            s[40] ^= h;
            s[41] ^= l;
            h = c0 ^ (c4 << 1 | c5 >>> 31);
            l = c1 ^ (c5 << 1 | c4 >>> 31);
            s[2] ^= h;
            s[3] ^= l;
            s[12] ^= h;
            s[13] ^= l;
            s[22] ^= h;
            s[23] ^= l;
            s[32] ^= h;
            s[33] ^= l;
            s[42] ^= h;
            s[43] ^= l;
            h = c2 ^ (c6 << 1 | c7 >>> 31);
            l = c3 ^ (c7 << 1 | c6 >>> 31);
            s[4] ^= h;
            s[5] ^= l;
            s[14] ^= h;
            s[15] ^= l;
            s[24] ^= h;
            s[25] ^= l;
            s[34] ^= h;
            s[35] ^= l;
            s[44] ^= h;
            s[45] ^= l;
            h = c4 ^ (c8 << 1 | c9 >>> 31);
            l = c5 ^ (c9 << 1 | c8 >>> 31);
            s[6] ^= h;
            s[7] ^= l;
            s[16] ^= h;
            s[17] ^= l;
            s[26] ^= h;
            s[27] ^= l;
            s[36] ^= h;
            s[37] ^= l;
            s[46] ^= h;
            s[47] ^= l;
            h = c6 ^ (c0 << 1 | c1 >>> 31);
            l = c7 ^ (c1 << 1 | c0 >>> 31);
            s[8] ^= h;
            s[9] ^= l;
            s[18] ^= h;
            s[19] ^= l;
            s[28] ^= h;
            s[29] ^= l;
            s[38] ^= h;
            s[39] ^= l;
            s[48] ^= h;
            s[49] ^= l;
            b0 = s[0];
            b1 = s[1];
            b32 = s[11] << 4 | s[10] >>> 28;
            b33 = s[10] << 4 | s[11] >>> 28;
            b14 = s[20] << 3 | s[21] >>> 29;
            b15 = s[21] << 3 | s[20] >>> 29;
            b46 = s[31] << 9 | s[30] >>> 23;
            b47 = s[30] << 9 | s[31] >>> 23;
            b28 = s[40] << 18 | s[41] >>> 14;
            b29 = s[41] << 18 | s[40] >>> 14;
            b20 = s[2] << 1 | s[3] >>> 31;
            b21 = s[3] << 1 | s[2] >>> 31;
            b2 = s[13] << 12 | s[12] >>> 20;
            b3 = s[12] << 12 | s[13] >>> 20;
            b34 = s[22] << 10 | s[23] >>> 22;
            b35 = s[23] << 10 | s[22] >>> 22;
            b16 = s[33] << 13 | s[32] >>> 19;
            b17 = s[32] << 13 | s[33] >>> 19;
            b48 = s[42] << 2 | s[43] >>> 30;
            b49 = s[43] << 2 | s[42] >>> 30;
            b40 = s[5] << 30 | s[4] >>> 2;
            b41 = s[4] << 30 | s[5] >>> 2;
            b22 = s[14] << 6 | s[15] >>> 26;
            b23 = s[15] << 6 | s[14] >>> 26;
            b4 = s[25] << 11 | s[24] >>> 21;
            b5 = s[24] << 11 | s[25] >>> 21;
            b36 = s[34] << 15 | s[35] >>> 17;
            b37 = s[35] << 15 | s[34] >>> 17;
            b18 = s[45] << 29 | s[44] >>> 3;
            b19 = s[44] << 29 | s[45] >>> 3;
            b10 = s[6] << 28 | s[7] >>> 4;
            b11 = s[7] << 28 | s[6] >>> 4;
            b42 = s[17] << 23 | s[16] >>> 9;
            b43 = s[16] << 23 | s[17] >>> 9;
            b24 = s[26] << 25 | s[27] >>> 7;
            b25 = s[27] << 25 | s[26] >>> 7;
            b6 = s[36] << 21 | s[37] >>> 11;
            b7 = s[37] << 21 | s[36] >>> 11;
            b38 = s[47] << 24 | s[46] >>> 8;
            b39 = s[46] << 24 | s[47] >>> 8;
            b30 = s[8] << 27 | s[9] >>> 5;
            b31 = s[9] << 27 | s[8] >>> 5;
            b12 = s[18] << 20 | s[19] >>> 12;
            b13 = s[19] << 20 | s[18] >>> 12;
            b44 = s[29] << 7 | s[28] >>> 25;
            b45 = s[28] << 7 | s[29] >>> 25;
            b26 = s[38] << 8 | s[39] >>> 24;
            b27 = s[39] << 8 | s[38] >>> 24;
            b8 = s[48] << 14 | s[49] >>> 18;
            b9 = s[49] << 14 | s[48] >>> 18;
            s[0] = b0 ^ ~b2 & b4;
            s[1] = b1 ^ ~b3 & b5;
            s[10] = b10 ^ ~b12 & b14;
            s[11] = b11 ^ ~b13 & b15;
            s[20] = b20 ^ ~b22 & b24;
            s[21] = b21 ^ ~b23 & b25;
            s[30] = b30 ^ ~b32 & b34;
            s[31] = b31 ^ ~b33 & b35;
            s[40] = b40 ^ ~b42 & b44;
            s[41] = b41 ^ ~b43 & b45;
            s[2] = b2 ^ ~b4 & b6;
            s[3] = b3 ^ ~b5 & b7;
            s[12] = b12 ^ ~b14 & b16;
            s[13] = b13 ^ ~b15 & b17;
            s[22] = b22 ^ ~b24 & b26;
            s[23] = b23 ^ ~b25 & b27;
            s[32] = b32 ^ ~b34 & b36;
            s[33] = b33 ^ ~b35 & b37;
            s[42] = b42 ^ ~b44 & b46;
            s[43] = b43 ^ ~b45 & b47;
            s[4] = b4 ^ ~b6 & b8;
            s[5] = b5 ^ ~b7 & b9;
            s[14] = b14 ^ ~b16 & b18;
            s[15] = b15 ^ ~b17 & b19;
            s[24] = b24 ^ ~b26 & b28;
            s[25] = b25 ^ ~b27 & b29;
            s[34] = b34 ^ ~b36 & b38;
            s[35] = b35 ^ ~b37 & b39;
            s[44] = b44 ^ ~b46 & b48;
            s[45] = b45 ^ ~b47 & b49;
            s[6] = b6 ^ ~b8 & b0;
            s[7] = b7 ^ ~b9 & b1;
            s[16] = b16 ^ ~b18 & b10;
            s[17] = b17 ^ ~b19 & b11;
            s[26] = b26 ^ ~b28 & b20;
            s[27] = b27 ^ ~b29 & b21;
            s[36] = b36 ^ ~b38 & b30;
            s[37] = b37 ^ ~b39 & b31;
            s[46] = b46 ^ ~b48 & b40;
            s[47] = b47 ^ ~b49 & b41;
            s[8] = b8 ^ ~b0 & b2;
            s[9] = b9 ^ ~b1 & b3;
            s[18] = b18 ^ ~b10 & b12;
            s[19] = b19 ^ ~b11 & b13;
            s[28] = b28 ^ ~b20 & b22;
            s[29] = b29 ^ ~b21 & b23;
            s[38] = b38 ^ ~b30 & b32;
            s[39] = b39 ^ ~b31 & b33;
            s[48] = b48 ^ ~b40 & b42;
            s[49] = b49 ^ ~b41 & b43;
            s[0] ^= RC[n];
            s[1] ^= RC[n + 1];
          }
        };
        if (COMMON_JS) {
          module.exports = methods;
        } else {
          for (i = 0; i < methodNames.length; ++i) {
            root[methodNames[i]] = methods[methodNames[i]];
          }
          if (AMD) {
            define(function() {
              return methods;
            });
          }
        }
      })();
    }
  });

  // node_modules/minimalistic-assert/index.js
  var require_minimalistic_assert2 = __commonJS({
    "node_modules/minimalistic-assert/index.js"(exports, module) {
      module.exports = assert3;
      function assert3(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      assert3.equal = function assertEqual3(l, r3, msg) {
        if (l != r3)
          throw new Error(msg || "Assertion failed: " + l + " != " + r3);
      };
    }
  });

  // node_modules/inherits/inherits_browser.js
  var require_inherits_browser2 = __commonJS({
    "node_modules/inherits/inherits_browser.js"(exports, module) {
      if (typeof Object.create === "function") {
        module.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
              constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
          }
        };
      } else {
        module.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {
            };
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          }
        };
      }
    }
  });

  // node_modules/hash.js/lib/hash/utils.js
  var require_utils2 = __commonJS({
    "node_modules/hash.js/lib/hash/utils.js"(exports) {
      "use strict";
      var assert3 = require_minimalistic_assert2();
      var inherits2 = require_inherits_browser2();
      exports.inherits = inherits2;
      function isSurrogatePair(msg, i) {
        if ((msg.charCodeAt(i) & 64512) !== 55296) {
          return false;
        }
        if (i < 0 || i + 1 >= msg.length) {
          return false;
        }
        return (msg.charCodeAt(i + 1) & 64512) === 56320;
      }
      function toArray3(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg === "string") {
          if (!enc) {
            var p = 0;
            for (var i = 0; i < msg.length; i++) {
              var c = msg.charCodeAt(i);
              if (c < 128) {
                res[p++] = c;
              } else if (c < 2048) {
                res[p++] = c >> 6 | 192;
                res[p++] = c & 63 | 128;
              } else if (isSurrogatePair(msg, i)) {
                c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
                res[p++] = c >> 18 | 240;
                res[p++] = c >> 12 & 63 | 128;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              } else {
                res[p++] = c >> 12 | 224;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              }
            }
          } else if (enc === "hex") {
            msg = msg.replace(/[^a-z0-9]+/ig, "");
            if (msg.length % 2 !== 0)
              msg = "0" + msg;
            for (i = 0; i < msg.length; i += 2)
              res.push(parseInt(msg[i] + msg[i + 1], 16));
          }
        } else {
          for (i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
        }
        return res;
      }
      exports.toArray = toArray3;
      function toHex3(msg) {
        var res = "";
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      exports.toHex = toHex3;
      function htonl(w) {
        var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
        return res >>> 0;
      }
      exports.htonl = htonl;
      function toHex32(msg, endian) {
        var res = "";
        for (var i = 0; i < msg.length; i++) {
          var w = msg[i];
          if (endian === "little")
            w = htonl(w);
          res += zero8(w.toString(16));
        }
        return res;
      }
      exports.toHex32 = toHex32;
      function zero2(word) {
        if (word.length === 1)
          return "0" + word;
        else
          return word;
      }
      exports.zero2 = zero2;
      function zero8(word) {
        if (word.length === 7)
          return "0" + word;
        else if (word.length === 6)
          return "00" + word;
        else if (word.length === 5)
          return "000" + word;
        else if (word.length === 4)
          return "0000" + word;
        else if (word.length === 3)
          return "00000" + word;
        else if (word.length === 2)
          return "000000" + word;
        else if (word.length === 1)
          return "0000000" + word;
        else
          return word;
      }
      exports.zero8 = zero8;
      function join32(msg, start, end, endian) {
        var len = end - start;
        assert3(len % 4 === 0);
        var res = new Array(len / 4);
        for (var i = 0, k = start; i < res.length; i++, k += 4) {
          var w;
          if (endian === "big")
            w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
          else
            w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
          res[i] = w >>> 0;
        }
        return res;
      }
      exports.join32 = join32;
      function split32(msg, endian) {
        var res = new Array(msg.length * 4);
        for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
          var m = msg[i];
          if (endian === "big") {
            res[k] = m >>> 24;
            res[k + 1] = m >>> 16 & 255;
            res[k + 2] = m >>> 8 & 255;
            res[k + 3] = m & 255;
          } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = m >>> 16 & 255;
            res[k + 1] = m >>> 8 & 255;
            res[k] = m & 255;
          }
        }
        return res;
      }
      exports.split32 = split32;
      function rotr32(w, b) {
        return w >>> b | w << 32 - b;
      }
      exports.rotr32 = rotr32;
      function rotl32(w, b) {
        return w << b | w >>> 32 - b;
      }
      exports.rotl32 = rotl32;
      function sum32(a, b) {
        return a + b >>> 0;
      }
      exports.sum32 = sum32;
      function sum32_3(a, b, c) {
        return a + b + c >>> 0;
      }
      exports.sum32_3 = sum32_3;
      function sum32_4(a, b, c, d) {
        return a + b + c + d >>> 0;
      }
      exports.sum32_4 = sum32_4;
      function sum32_5(a, b, c, d, e) {
        return a + b + c + d + e >>> 0;
      }
      exports.sum32_5 = sum32_5;
      function sum64(buf, pos, ah, al) {
        var bh = buf[pos];
        var bl = buf[pos + 1];
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        buf[pos] = hi >>> 0;
        buf[pos + 1] = lo;
      }
      exports.sum64 = sum64;
      function sum64_hi(ah, al, bh, bl) {
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        return hi >>> 0;
      }
      exports.sum64_hi = sum64_hi;
      function sum64_lo(ah, al, bh, bl) {
        var lo = al + bl;
        return lo >>> 0;
      }
      exports.sum64_lo = sum64_lo;
      function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        var hi = ah + bh + ch + dh + carry;
        return hi >>> 0;
      }
      exports.sum64_4_hi = sum64_4_hi;
      function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
        var lo = al + bl + cl + dl;
        return lo >>> 0;
      }
      exports.sum64_4_lo = sum64_4_lo;
      function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        lo = lo + el >>> 0;
        carry += lo < el ? 1 : 0;
        var hi = ah + bh + ch + dh + eh + carry;
        return hi >>> 0;
      }
      exports.sum64_5_hi = sum64_5_hi;
      function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var lo = al + bl + cl + dl + el;
        return lo >>> 0;
      }
      exports.sum64_5_lo = sum64_5_lo;
      function rotr64_hi(ah, al, num) {
        var r3 = al << 32 - num | ah >>> num;
        return r3 >>> 0;
      }
      exports.rotr64_hi = rotr64_hi;
      function rotr64_lo(ah, al, num) {
        var r3 = ah << 32 - num | al >>> num;
        return r3 >>> 0;
      }
      exports.rotr64_lo = rotr64_lo;
      function shr64_hi(ah, al, num) {
        return ah >>> num;
      }
      exports.shr64_hi = shr64_hi;
      function shr64_lo(ah, al, num) {
        var r3 = ah << 32 - num | al >>> num;
        return r3 >>> 0;
      }
      exports.shr64_lo = shr64_lo;
    }
  });

  // node_modules/hash.js/lib/hash/common.js
  var require_common3 = __commonJS({
    "node_modules/hash.js/lib/hash/common.js"(exports) {
      "use strict";
      var utils = require_utils2();
      var assert3 = require_minimalistic_assert2();
      function BlockHash() {
        this.pending = null;
        this.pendingTotal = 0;
        this.blockSize = this.constructor.blockSize;
        this.outSize = this.constructor.outSize;
        this.hmacStrength = this.constructor.hmacStrength;
        this.padLength = this.constructor.padLength / 8;
        this.endian = "big";
        this._delta8 = this.blockSize / 8;
        this._delta32 = this.blockSize / 32;
      }
      exports.BlockHash = BlockHash;
      BlockHash.prototype.update = function update3(msg, enc) {
        msg = utils.toArray(msg, enc);
        if (!this.pending)
          this.pending = msg;
        else
          this.pending = this.pending.concat(msg);
        this.pendingTotal += msg.length;
        if (this.pending.length >= this._delta8) {
          msg = this.pending;
          var r3 = msg.length % this._delta8;
          this.pending = msg.slice(msg.length - r3, msg.length);
          if (this.pending.length === 0)
            this.pending = null;
          msg = utils.join32(msg, 0, msg.length - r3, this.endian);
          for (var i = 0; i < msg.length; i += this._delta32)
            this._update(msg, i, i + this._delta32);
        }
        return this;
      };
      BlockHash.prototype.digest = function digest(enc) {
        this.update(this._pad());
        assert3(this.pending === null);
        return this._digest(enc);
      };
      BlockHash.prototype._pad = function pad() {
        var len = this.pendingTotal;
        var bytes = this._delta8;
        var k = bytes - (len + this.padLength) % bytes;
        var res = new Array(k + this.padLength);
        res[0] = 128;
        for (var i = 1; i < k; i++)
          res[i] = 0;
        len <<= 3;
        if (this.endian === "big") {
          for (var t = 8; t < this.padLength; t++)
            res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = len >>> 24 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len & 255;
        } else {
          res[i++] = len & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 24 & 255;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          for (t = 8; t < this.padLength; t++)
            res[i++] = 0;
        }
        return res;
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/common.js
  var require_common4 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/common.js"(exports) {
      "use strict";
      var utils = require_utils2();
      var rotr32 = utils.rotr32;
      function ft_1(s, x, y, z) {
        if (s === 0)
          return ch32(x, y, z);
        if (s === 1 || s === 3)
          return p32(x, y, z);
        if (s === 2)
          return maj32(x, y, z);
      }
      exports.ft_1 = ft_1;
      function ch32(x, y, z) {
        return x & y ^ ~x & z;
      }
      exports.ch32 = ch32;
      function maj32(x, y, z) {
        return x & y ^ x & z ^ y & z;
      }
      exports.maj32 = maj32;
      function p32(x, y, z) {
        return x ^ y ^ z;
      }
      exports.p32 = p32;
      function s0_256(x) {
        return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
      }
      exports.s0_256 = s0_256;
      function s1_256(x) {
        return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
      }
      exports.s1_256 = s1_256;
      function g0_256(x) {
        return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
      }
      exports.g0_256 = g0_256;
      function g1_256(x) {
        return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
      }
      exports.g1_256 = g1_256;
    }
  });

  // node_modules/hash.js/lib/hash/sha/1.js
  var require__6 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/1.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var common = require_common3();
      var shaCommon = require_common4();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_5 = utils.sum32_5;
      var ft_1 = shaCommon.ft_1;
      var BlockHash = common.BlockHash;
      var sha1_K = [
        1518500249,
        1859775393,
        2400959708,
        3395469782
      ];
      function SHA1() {
        if (!(this instanceof SHA1))
          return new SHA1();
        BlockHash.call(this);
        this.h = [
          1732584193,
          4023233417,
          2562383102,
          271733878,
          3285377520
        ];
        this.W = new Array(80);
      }
      utils.inherits(SHA1, BlockHash);
      module.exports = SHA1;
      SHA1.blockSize = 512;
      SHA1.outSize = 160;
      SHA1.hmacStrength = 80;
      SHA1.padLength = 64;
      SHA1.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        for (i = 0; i < W.length; i++) {
          var s = ~~(i / 20);
          var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
          e = d;
          d = c;
          c = rotl32(b, 30);
          b = a;
          a = t;
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
      };
      SHA1.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/256.js
  var require__7 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/256.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var common = require_common3();
      var shaCommon = require_common4();
      var assert3 = require_minimalistic_assert2();
      var sum32 = utils.sum32;
      var sum32_4 = utils.sum32_4;
      var sum32_5 = utils.sum32_5;
      var ch32 = shaCommon.ch32;
      var maj32 = shaCommon.maj32;
      var s0_256 = shaCommon.s0_256;
      var s1_256 = shaCommon.s1_256;
      var g0_256 = shaCommon.g0_256;
      var g1_256 = shaCommon.g1_256;
      var BlockHash = common.BlockHash;
      var sha256_K = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
      function SHA256() {
        if (!(this instanceof SHA256))
          return new SHA256();
        BlockHash.call(this);
        this.h = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ];
        this.k = sha256_K;
        this.W = new Array(64);
      }
      utils.inherits(SHA256, BlockHash);
      module.exports = SHA256;
      SHA256.blockSize = 512;
      SHA256.outSize = 256;
      SHA256.hmacStrength = 192;
      SHA256.padLength = 64;
      SHA256.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        var f = this.h[5];
        var g = this.h[6];
        var h = this.h[7];
        assert3(this.k.length === W.length);
        for (i = 0; i < W.length; i++) {
          var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
          var T2 = sum32(s0_256(a), maj32(a, b, c));
          h = g;
          g = f;
          f = e;
          e = sum32(d, T1);
          d = c;
          c = b;
          b = a;
          a = sum32(T1, T2);
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
        this.h[5] = sum32(this.h[5], f);
        this.h[6] = sum32(this.h[6], g);
        this.h[7] = sum32(this.h[7], h);
      };
      SHA256.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/224.js
  var require__8 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/224.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var SHA256 = require__7();
      function SHA224() {
        if (!(this instanceof SHA224))
          return new SHA224();
        SHA256.call(this);
        this.h = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ];
      }
      utils.inherits(SHA224, SHA256);
      module.exports = SHA224;
      SHA224.blockSize = 512;
      SHA224.outSize = 224;
      SHA224.hmacStrength = 192;
      SHA224.padLength = 64;
      SHA224.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 7), "big");
        else
          return utils.split32(this.h.slice(0, 7), "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha/512.js
  var require__9 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/512.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var common = require_common3();
      var assert3 = require_minimalistic_assert2();
      var rotr64_hi = utils.rotr64_hi;
      var rotr64_lo = utils.rotr64_lo;
      var shr64_hi = utils.shr64_hi;
      var shr64_lo = utils.shr64_lo;
      var sum64 = utils.sum64;
      var sum64_hi = utils.sum64_hi;
      var sum64_lo = utils.sum64_lo;
      var sum64_4_hi = utils.sum64_4_hi;
      var sum64_4_lo = utils.sum64_4_lo;
      var sum64_5_hi = utils.sum64_5_hi;
      var sum64_5_lo = utils.sum64_5_lo;
      var BlockHash = common.BlockHash;
      var sha512_K = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      function SHA512() {
        if (!(this instanceof SHA512))
          return new SHA512();
        BlockHash.call(this);
        this.h = [
          1779033703,
          4089235720,
          3144134277,
          2227873595,
          1013904242,
          4271175723,
          2773480762,
          1595750129,
          1359893119,
          2917565137,
          2600822924,
          725511199,
          528734635,
          4215389547,
          1541459225,
          327033209
        ];
        this.k = sha512_K;
        this.W = new Array(160);
      }
      utils.inherits(SHA512, BlockHash);
      module.exports = SHA512;
      SHA512.blockSize = 1024;
      SHA512.outSize = 512;
      SHA512.hmacStrength = 192;
      SHA512.padLength = 128;
      SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
        var W = this.W;
        for (var i = 0; i < 32; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i += 2) {
          var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
          var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
          var c1_hi = W[i - 14];
          var c1_lo = W[i - 13];
          var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
          var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
          var c3_hi = W[i - 32];
          var c3_lo = W[i - 31];
          W[i] = sum64_4_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
          W[i + 1] = sum64_4_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
        }
      };
      SHA512.prototype._update = function _update(msg, start) {
        this._prepareBlock(msg, start);
        var W = this.W;
        var ah = this.h[0];
        var al = this.h[1];
        var bh = this.h[2];
        var bl = this.h[3];
        var ch = this.h[4];
        var cl = this.h[5];
        var dh = this.h[6];
        var dl = this.h[7];
        var eh = this.h[8];
        var el = this.h[9];
        var fh = this.h[10];
        var fl = this.h[11];
        var gh = this.h[12];
        var gl = this.h[13];
        var hh = this.h[14];
        var hl = this.h[15];
        assert3(this.k.length === W.length);
        for (var i = 0; i < W.length; i += 2) {
          var c0_hi = hh;
          var c0_lo = hl;
          var c1_hi = s1_512_hi(eh, el);
          var c1_lo = s1_512_lo(eh, el);
          var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
          var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
          var c3_hi = this.k[i];
          var c3_lo = this.k[i + 1];
          var c4_hi = W[i];
          var c4_lo = W[i + 1];
          var T1_hi = sum64_5_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          var T1_lo = sum64_5_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          c0_hi = s0_512_hi(ah, al);
          c0_lo = s0_512_lo(ah, al);
          c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
          c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
          var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
          var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          eh = sum64_hi(dh, dl, T1_hi, T1_lo);
          el = sum64_lo(dl, dl, T1_hi, T1_lo);
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
          al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
        }
        sum64(this.h, 0, ah, al);
        sum64(this.h, 2, bh, bl);
        sum64(this.h, 4, ch, cl);
        sum64(this.h, 6, dh, dl);
        sum64(this.h, 8, eh, el);
        sum64(this.h, 10, fh, fl);
        sum64(this.h, 12, gh, gl);
        sum64(this.h, 14, hh, hl);
      };
      SHA512.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
      function ch64_hi(xh, xl, yh, yl, zh) {
        var r3 = xh & yh ^ ~xh & zh;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function ch64_lo(xh, xl, yh, yl, zh, zl) {
        var r3 = xl & yl ^ ~xl & zl;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function maj64_hi(xh, xl, yh, yl, zh) {
        var r3 = xh & yh ^ xh & zh ^ yh & zh;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function maj64_lo(xh, xl, yh, yl, zh, zl) {
        var r3 = xl & yl ^ xl & zl ^ yl & zl;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function s0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 28);
        var c1_hi = rotr64_hi(xl, xh, 2);
        var c2_hi = rotr64_hi(xl, xh, 7);
        var r3 = c0_hi ^ c1_hi ^ c2_hi;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function s0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 28);
        var c1_lo = rotr64_lo(xl, xh, 2);
        var c2_lo = rotr64_lo(xl, xh, 7);
        var r3 = c0_lo ^ c1_lo ^ c2_lo;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function s1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 14);
        var c1_hi = rotr64_hi(xh, xl, 18);
        var c2_hi = rotr64_hi(xl, xh, 9);
        var r3 = c0_hi ^ c1_hi ^ c2_hi;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function s1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 14);
        var c1_lo = rotr64_lo(xh, xl, 18);
        var c2_lo = rotr64_lo(xl, xh, 9);
        var r3 = c0_lo ^ c1_lo ^ c2_lo;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function g0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 1);
        var c1_hi = rotr64_hi(xh, xl, 8);
        var c2_hi = shr64_hi(xh, xl, 7);
        var r3 = c0_hi ^ c1_hi ^ c2_hi;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function g0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 1);
        var c1_lo = rotr64_lo(xh, xl, 8);
        var c2_lo = shr64_lo(xh, xl, 7);
        var r3 = c0_lo ^ c1_lo ^ c2_lo;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function g1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 19);
        var c1_hi = rotr64_hi(xl, xh, 29);
        var c2_hi = shr64_hi(xh, xl, 6);
        var r3 = c0_hi ^ c1_hi ^ c2_hi;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
      function g1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 19);
        var c1_lo = rotr64_lo(xl, xh, 29);
        var c2_lo = shr64_lo(xh, xl, 6);
        var r3 = c0_lo ^ c1_lo ^ c2_lo;
        if (r3 < 0)
          r3 += 4294967296;
        return r3;
      }
    }
  });

  // node_modules/hash.js/lib/hash/sha/384.js
  var require__10 = __commonJS({
    "node_modules/hash.js/lib/hash/sha/384.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var SHA512 = require__9();
      function SHA384() {
        if (!(this instanceof SHA384))
          return new SHA384();
        SHA512.call(this);
        this.h = [
          3418070365,
          3238371032,
          1654270250,
          914150663,
          2438529370,
          812702999,
          355462360,
          4144912697,
          1731405415,
          4290775857,
          2394180231,
          1750603025,
          3675008525,
          1694076839,
          1203062813,
          3204075428
        ];
      }
      utils.inherits(SHA384, SHA512);
      module.exports = SHA384;
      SHA384.blockSize = 1024;
      SHA384.outSize = 384;
      SHA384.hmacStrength = 192;
      SHA384.padLength = 128;
      SHA384.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 12), "big");
        else
          return utils.split32(this.h.slice(0, 12), "big");
      };
    }
  });

  // node_modules/hash.js/lib/hash/sha.js
  var require_sha2 = __commonJS({
    "node_modules/hash.js/lib/hash/sha.js"(exports) {
      "use strict";
      exports.sha1 = require__6();
      exports.sha224 = require__8();
      exports.sha256 = require__7();
      exports.sha384 = require__10();
      exports.sha512 = require__9();
    }
  });

  // node_modules/hash.js/lib/hash/ripemd.js
  var require_ripemd2 = __commonJS({
    "node_modules/hash.js/lib/hash/ripemd.js"(exports) {
      "use strict";
      var utils = require_utils2();
      var common = require_common3();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_3 = utils.sum32_3;
      var sum32_4 = utils.sum32_4;
      var BlockHash = common.BlockHash;
      function RIPEMD160() {
        if (!(this instanceof RIPEMD160))
          return new RIPEMD160();
        BlockHash.call(this);
        this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
        this.endian = "little";
      }
      utils.inherits(RIPEMD160, BlockHash);
      exports.ripemd160 = RIPEMD160;
      RIPEMD160.blockSize = 512;
      RIPEMD160.outSize = 160;
      RIPEMD160.hmacStrength = 192;
      RIPEMD160.padLength = 64;
      RIPEMD160.prototype._update = function update3(msg, start) {
        var A = this.h[0];
        var B = this.h[1];
        var C = this.h[2];
        var D = this.h[3];
        var E = this.h[4];
        var Ah = A;
        var Bh = B;
        var Ch = C;
        var Dh = D;
        var Eh = E;
        for (var j = 0; j < 80; j++) {
          var T = sum32(
            rotl32(
              sum32_4(A, f(j, B, C, D), msg[r3[j] + start], K(j)),
              s[j]
            ),
            E
          );
          A = E;
          E = D;
          D = rotl32(C, 10);
          C = B;
          B = T;
          T = sum32(
            rotl32(
              sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
              sh[j]
            ),
            Eh
          );
          Ah = Eh;
          Eh = Dh;
          Dh = rotl32(Ch, 10);
          Ch = Bh;
          Bh = T;
        }
        T = sum32_3(this.h[1], C, Dh);
        this.h[1] = sum32_3(this.h[2], D, Eh);
        this.h[2] = sum32_3(this.h[3], E, Ah);
        this.h[3] = sum32_3(this.h[4], A, Bh);
        this.h[4] = sum32_3(this.h[0], B, Ch);
        this.h[0] = T;
      };
      RIPEMD160.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "little");
        else
          return utils.split32(this.h, "little");
      };
      function f(j, x, y, z) {
        if (j <= 15)
          return x ^ y ^ z;
        else if (j <= 31)
          return x & y | ~x & z;
        else if (j <= 47)
          return (x | ~y) ^ z;
        else if (j <= 63)
          return x & z | y & ~z;
        else
          return x ^ (y | ~z);
      }
      function K(j) {
        if (j <= 15)
          return 0;
        else if (j <= 31)
          return 1518500249;
        else if (j <= 47)
          return 1859775393;
        else if (j <= 63)
          return 2400959708;
        else
          return 2840853838;
      }
      function Kh(j) {
        if (j <= 15)
          return 1352829926;
        else if (j <= 31)
          return 1548603684;
        else if (j <= 47)
          return 1836072691;
        else if (j <= 63)
          return 2053994217;
        else
          return 0;
      }
      var r3 = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ];
      var rh = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ];
      var s = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ];
      var sh = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
    }
  });

  // node_modules/hash.js/lib/hash/hmac.js
  var require_hmac2 = __commonJS({
    "node_modules/hash.js/lib/hash/hmac.js"(exports, module) {
      "use strict";
      var utils = require_utils2();
      var assert3 = require_minimalistic_assert2();
      function Hmac(hash3, key3, enc) {
        if (!(this instanceof Hmac))
          return new Hmac(hash3, key3, enc);
        this.Hash = hash3;
        this.blockSize = hash3.blockSize / 8;
        this.outSize = hash3.outSize / 8;
        this.inner = null;
        this.outer = null;
        this._init(utils.toArray(key3, enc));
      }
      module.exports = Hmac;
      Hmac.prototype._init = function init3(key3) {
        if (key3.length > this.blockSize)
          key3 = new this.Hash().update(key3).digest();
        assert3(key3.length <= this.blockSize);
        for (var i = key3.length; i < this.blockSize; i++)
          key3.push(0);
        for (i = 0; i < key3.length; i++)
          key3[i] ^= 54;
        this.inner = new this.Hash().update(key3);
        for (i = 0; i < key3.length; i++)
          key3[i] ^= 106;
        this.outer = new this.Hash().update(key3);
      };
      Hmac.prototype.update = function update3(msg, enc) {
        this.inner.update(msg, enc);
        return this;
      };
      Hmac.prototype.digest = function digest(enc) {
        this.outer.update(this.inner.digest());
        return this.outer.digest(enc);
      };
    }
  });

  // node_modules/hash.js/lib/hash.js
  var require_hash2 = __commonJS({
    "node_modules/hash.js/lib/hash.js"(exports) {
      var hash3 = exports;
      hash3.utils = require_utils2();
      hash3.common = require_common3();
      hash3.sha = require_sha2();
      hash3.ripemd = require_ripemd2();
      hash3.hmac = require_hmac2();
      hash3.sha1 = hash3.sha.sha1;
      hash3.sha256 = hash3.sha.sha256;
      hash3.sha224 = hash3.sha.sha224;
      hash3.sha384 = hash3.sha.sha384;
      hash3.sha512 = hash3.sha.sha512;
      hash3.ripemd160 = hash3.ripemd.ripemd160;
    }
  });

  // node_modules/aes-js/index.js
  var require_aes_js = __commonJS({
    "node_modules/aes-js/index.js"(exports, module) {
      "use strict";
      (function(root) {
        function checkInt(value) {
          return parseInt(value) === value;
        }
        function checkInts(arrayish) {
          if (!checkInt(arrayish.length)) {
            return false;
          }
          for (var i = 0; i < arrayish.length; i++) {
            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
              return false;
            }
          }
          return true;
        }
        function coerceArray(arg, copy) {
          if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === "Uint8Array") {
            if (copy) {
              if (arg.slice) {
                arg = arg.slice();
              } else {
                arg = Array.prototype.slice.call(arg);
              }
            }
            return arg;
          }
          if (Array.isArray(arg)) {
            if (!checkInts(arg)) {
              throw new Error("Array contains invalid value: " + arg);
            }
            return new Uint8Array(arg);
          }
          if (checkInt(arg.length) && checkInts(arg)) {
            return new Uint8Array(arg);
          }
          throw new Error("unsupported array-like object");
        }
        function createArray(length) {
          return new Uint8Array(length);
        }
        function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
          if (sourceStart != null || sourceEnd != null) {
            if (sourceArray.slice) {
              sourceArray = sourceArray.slice(sourceStart, sourceEnd);
            } else {
              sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
            }
          }
          targetArray.set(sourceArray, targetStart);
        }
        var convertUtf8 = /* @__PURE__ */ function() {
          function toBytes(text) {
            var result = [], i = 0;
            text = encodeURI(text);
            while (i < text.length) {
              var c = text.charCodeAt(i++);
              if (c === 37) {
                result.push(parseInt(text.substr(i, 2), 16));
                i += 2;
              } else {
                result.push(c);
              }
            }
            return coerceArray(result);
          }
          function fromBytes(bytes) {
            var result = [], i = 0;
            while (i < bytes.length) {
              var c = bytes[i];
              if (c < 128) {
                result.push(String.fromCharCode(c));
                i++;
              } else if (c > 191 && c < 224) {
                result.push(String.fromCharCode((c & 31) << 6 | bytes[i + 1] & 63));
                i += 2;
              } else {
                result.push(String.fromCharCode((c & 15) << 12 | (bytes[i + 1] & 63) << 6 | bytes[i + 2] & 63));
                i += 3;
              }
            }
            return result.join("");
          }
          return {
            toBytes,
            fromBytes
          };
        }();
        var convertHex = /* @__PURE__ */ function() {
          function toBytes(text) {
            var result = [];
            for (var i = 0; i < text.length; i += 2) {
              result.push(parseInt(text.substr(i, 2), 16));
            }
            return result;
          }
          var Hex = "0123456789abcdef";
          function fromBytes(bytes) {
            var result = [];
            for (var i = 0; i < bytes.length; i++) {
              var v = bytes[i];
              result.push(Hex[(v & 240) >> 4] + Hex[v & 15]);
            }
            return result.join("");
          }
          return {
            toBytes,
            fromBytes
          };
        }();
        var numberOfRounds = { 16: 10, 24: 12, 32: 14 };
        var rcon = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];
        var S = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
        var Si = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];
        var T1 = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986];
        var T2 = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766];
        var T3 = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126];
        var T4 = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436];
        var T5 = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890];
        var T6 = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935];
        var T7 = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600];
        var T8 = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480];
        var U1 = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795];
        var U2 = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855];
        var U3 = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150];
        var U4 = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];
        function convertToInt32(bytes) {
          var result = [];
          for (var i = 0; i < bytes.length; i += 4) {
            result.push(
              bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]
            );
          }
          return result;
        }
        var AES = function(key3) {
          if (!(this instanceof AES)) {
            throw Error("AES must be instanitated with `new`");
          }
          Object.defineProperty(this, "key", {
            value: coerceArray(key3, true)
          });
          this._prepare();
        };
        AES.prototype._prepare = function() {
          var rounds = numberOfRounds[this.key.length];
          if (rounds == null) {
            throw new Error("invalid key size (must be 16, 24 or 32 bytes)");
          }
          this._Ke = [];
          this._Kd = [];
          for (var i = 0; i <= rounds; i++) {
            this._Ke.push([0, 0, 0, 0]);
            this._Kd.push([0, 0, 0, 0]);
          }
          var roundKeyCount = (rounds + 1) * 4;
          var KC = this.key.length / 4;
          var tk = convertToInt32(this.key);
          var index2;
          for (var i = 0; i < KC; i++) {
            index2 = i >> 2;
            this._Ke[index2][i % 4] = tk[i];
            this._Kd[rounds - index2][i % 4] = tk[i];
          }
          var rconpointer = 0;
          var t = KC, tt;
          while (t < roundKeyCount) {
            tt = tk[KC - 1];
            tk[0] ^= S[tt >> 16 & 255] << 24 ^ S[tt >> 8 & 255] << 16 ^ S[tt & 255] << 8 ^ S[tt >> 24 & 255] ^ rcon[rconpointer] << 24;
            rconpointer += 1;
            if (KC != 8) {
              for (var i = 1; i < KC; i++) {
                tk[i] ^= tk[i - 1];
              }
            } else {
              for (var i = 1; i < KC / 2; i++) {
                tk[i] ^= tk[i - 1];
              }
              tt = tk[KC / 2 - 1];
              tk[KC / 2] ^= S[tt & 255] ^ S[tt >> 8 & 255] << 8 ^ S[tt >> 16 & 255] << 16 ^ S[tt >> 24 & 255] << 24;
              for (var i = KC / 2 + 1; i < KC; i++) {
                tk[i] ^= tk[i - 1];
              }
            }
            var i = 0, r3, c;
            while (i < KC && t < roundKeyCount) {
              r3 = t >> 2;
              c = t % 4;
              this._Ke[r3][c] = tk[i];
              this._Kd[rounds - r3][c] = tk[i++];
              t++;
            }
          }
          for (var r3 = 1; r3 < rounds; r3++) {
            for (var c = 0; c < 4; c++) {
              tt = this._Kd[r3][c];
              this._Kd[r3][c] = U1[tt >> 24 & 255] ^ U2[tt >> 16 & 255] ^ U3[tt >> 8 & 255] ^ U4[tt & 255];
            }
          }
        };
        AES.prototype.encrypt = function(plaintext) {
          if (plaintext.length != 16) {
            throw new Error("invalid plaintext size (must be 16 bytes)");
          }
          var rounds = this._Ke.length - 1;
          var a = [0, 0, 0, 0];
          var t = convertToInt32(plaintext);
          for (var i = 0; i < 4; i++) {
            t[i] ^= this._Ke[0][i];
          }
          for (var r3 = 1; r3 < rounds; r3++) {
            for (var i = 0; i < 4; i++) {
              a[i] = T1[t[i] >> 24 & 255] ^ T2[t[(i + 1) % 4] >> 16 & 255] ^ T3[t[(i + 2) % 4] >> 8 & 255] ^ T4[t[(i + 3) % 4] & 255] ^ this._Ke[r3][i];
            }
            t = a.slice();
          }
          var result = createArray(16), tt;
          for (var i = 0; i < 4; i++) {
            tt = this._Ke[rounds][i];
            result[4 * i] = (S[t[i] >> 24 & 255] ^ tt >> 24) & 255;
            result[4 * i + 1] = (S[t[(i + 1) % 4] >> 16 & 255] ^ tt >> 16) & 255;
            result[4 * i + 2] = (S[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;
            result[4 * i + 3] = (S[t[(i + 3) % 4] & 255] ^ tt) & 255;
          }
          return result;
        };
        AES.prototype.decrypt = function(ciphertext) {
          if (ciphertext.length != 16) {
            throw new Error("invalid ciphertext size (must be 16 bytes)");
          }
          var rounds = this._Kd.length - 1;
          var a = [0, 0, 0, 0];
          var t = convertToInt32(ciphertext);
          for (var i = 0; i < 4; i++) {
            t[i] ^= this._Kd[0][i];
          }
          for (var r3 = 1; r3 < rounds; r3++) {
            for (var i = 0; i < 4; i++) {
              a[i] = T5[t[i] >> 24 & 255] ^ T6[t[(i + 3) % 4] >> 16 & 255] ^ T7[t[(i + 2) % 4] >> 8 & 255] ^ T8[t[(i + 1) % 4] & 255] ^ this._Kd[r3][i];
            }
            t = a.slice();
          }
          var result = createArray(16), tt;
          for (var i = 0; i < 4; i++) {
            tt = this._Kd[rounds][i];
            result[4 * i] = (Si[t[i] >> 24 & 255] ^ tt >> 24) & 255;
            result[4 * i + 1] = (Si[t[(i + 3) % 4] >> 16 & 255] ^ tt >> 16) & 255;
            result[4 * i + 2] = (Si[t[(i + 2) % 4] >> 8 & 255] ^ tt >> 8) & 255;
            result[4 * i + 3] = (Si[t[(i + 1) % 4] & 255] ^ tt) & 255;
          }
          return result;
        };
        var ModeOfOperationECB = function(key3) {
          if (!(this instanceof ModeOfOperationECB)) {
            throw Error("AES must be instanitated with `new`");
          }
          this.description = "Electronic Code Block";
          this.name = "ecb";
          this._aes = new AES(key3);
        };
        ModeOfOperationECB.prototype.encrypt = function(plaintext) {
          plaintext = coerceArray(plaintext);
          if (plaintext.length % 16 !== 0) {
            throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
          }
          var ciphertext = createArray(plaintext.length);
          var block = createArray(16);
          for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);
            block = this._aes.encrypt(block);
            copyArray(block, ciphertext, i);
          }
          return ciphertext;
        };
        ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
          ciphertext = coerceArray(ciphertext);
          if (ciphertext.length % 16 !== 0) {
            throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
          }
          var plaintext = createArray(ciphertext.length);
          var block = createArray(16);
          for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            copyArray(block, plaintext, i);
          }
          return plaintext;
        };
        var ModeOfOperationCBC = function(key3, iv) {
          if (!(this instanceof ModeOfOperationCBC)) {
            throw Error("AES must be instanitated with `new`");
          }
          this.description = "Cipher Block Chaining";
          this.name = "cbc";
          if (!iv) {
            iv = createArray(16);
          } else if (iv.length != 16) {
            throw new Error("invalid initialation vector size (must be 16 bytes)");
          }
          this._lastCipherblock = coerceArray(iv, true);
          this._aes = new AES(key3);
        };
        ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
          plaintext = coerceArray(plaintext);
          if (plaintext.length % 16 !== 0) {
            throw new Error("invalid plaintext size (must be multiple of 16 bytes)");
          }
          var ciphertext = createArray(plaintext.length);
          var block = createArray(16);
          for (var i = 0; i < plaintext.length; i += 16) {
            copyArray(plaintext, block, 0, i, i + 16);
            for (var j = 0; j < 16; j++) {
              block[j] ^= this._lastCipherblock[j];
            }
            this._lastCipherblock = this._aes.encrypt(block);
            copyArray(this._lastCipherblock, ciphertext, i);
          }
          return ciphertext;
        };
        ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
          ciphertext = coerceArray(ciphertext);
          if (ciphertext.length % 16 !== 0) {
            throw new Error("invalid ciphertext size (must be multiple of 16 bytes)");
          }
          var plaintext = createArray(ciphertext.length);
          var block = createArray(16);
          for (var i = 0; i < ciphertext.length; i += 16) {
            copyArray(ciphertext, block, 0, i, i + 16);
            block = this._aes.decrypt(block);
            for (var j = 0; j < 16; j++) {
              plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
            }
            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
          }
          return plaintext;
        };
        var ModeOfOperationCFB = function(key3, iv, segmentSize) {
          if (!(this instanceof ModeOfOperationCFB)) {
            throw Error("AES must be instanitated with `new`");
          }
          this.description = "Cipher Feedback";
          this.name = "cfb";
          if (!iv) {
            iv = createArray(16);
          } else if (iv.length != 16) {
            throw new Error("invalid initialation vector size (must be 16 size)");
          }
          if (!segmentSize) {
            segmentSize = 1;
          }
          this.segmentSize = segmentSize;
          this._shiftRegister = coerceArray(iv, true);
          this._aes = new AES(key3);
        };
        ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
          if (plaintext.length % this.segmentSize != 0) {
            throw new Error("invalid plaintext size (must be segmentSize bytes)");
          }
          var encrypted = coerceArray(plaintext, true);
          var xorSegment;
          for (var i = 0; i < encrypted.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) {
              encrypted[i + j] ^= xorSegment[j];
            }
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
          }
          return encrypted;
        };
        ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
          if (ciphertext.length % this.segmentSize != 0) {
            throw new Error("invalid ciphertext size (must be segmentSize bytes)");
          }
          var plaintext = coerceArray(ciphertext, true);
          var xorSegment;
          for (var i = 0; i < plaintext.length; i += this.segmentSize) {
            xorSegment = this._aes.encrypt(this._shiftRegister);
            for (var j = 0; j < this.segmentSize; j++) {
              plaintext[i + j] ^= xorSegment[j];
            }
            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
          }
          return plaintext;
        };
        var ModeOfOperationOFB = function(key3, iv) {
          if (!(this instanceof ModeOfOperationOFB)) {
            throw Error("AES must be instanitated with `new`");
          }
          this.description = "Output Feedback";
          this.name = "ofb";
          if (!iv) {
            iv = createArray(16);
          } else if (iv.length != 16) {
            throw new Error("invalid initialation vector size (must be 16 bytes)");
          }
          this._lastPrecipher = coerceArray(iv, true);
          this._lastPrecipherIndex = 16;
          this._aes = new AES(key3);
        };
        ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
          var encrypted = coerceArray(plaintext, true);
          for (var i = 0; i < encrypted.length; i++) {
            if (this._lastPrecipherIndex === 16) {
              this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
              this._lastPrecipherIndex = 0;
            }
            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
          }
          return encrypted;
        };
        ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;
        var Counter = function(initialValue) {
          if (!(this instanceof Counter)) {
            throw Error("Counter must be instanitated with `new`");
          }
          if (initialValue !== 0 && !initialValue) {
            initialValue = 1;
          }
          if (typeof initialValue === "number") {
            this._counter = createArray(16);
            this.setValue(initialValue);
          } else {
            this.setBytes(initialValue);
          }
        };
        Counter.prototype.setValue = function(value) {
          if (typeof value !== "number" || parseInt(value) != value) {
            throw new Error("invalid counter value (must be an integer)");
          }
          for (var index2 = 15; index2 >= 0; --index2) {
            this._counter[index2] = value % 256;
            value = value >> 8;
          }
        };
        Counter.prototype.setBytes = function(bytes) {
          bytes = coerceArray(bytes, true);
          if (bytes.length != 16) {
            throw new Error("invalid counter bytes size (must be 16 bytes)");
          }
          this._counter = bytes;
        };
        Counter.prototype.increment = function() {
          for (var i = 15; i >= 0; i--) {
            if (this._counter[i] === 255) {
              this._counter[i] = 0;
            } else {
              this._counter[i]++;
              break;
            }
          }
        };
        var ModeOfOperationCTR = function(key3, counter) {
          if (!(this instanceof ModeOfOperationCTR)) {
            throw Error("AES must be instanitated with `new`");
          }
          this.description = "Counter";
          this.name = "ctr";
          if (!(counter instanceof Counter)) {
            counter = new Counter(counter);
          }
          this._counter = counter;
          this._remainingCounter = null;
          this._remainingCounterIndex = 16;
          this._aes = new AES(key3);
        };
        ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
          var encrypted = coerceArray(plaintext, true);
          for (var i = 0; i < encrypted.length; i++) {
            if (this._remainingCounterIndex === 16) {
              this._remainingCounter = this._aes.encrypt(this._counter._counter);
              this._remainingCounterIndex = 0;
              this._counter.increment();
            }
            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
          }
          return encrypted;
        };
        ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;
        function pkcs7pad(data) {
          data = coerceArray(data, true);
          var padder = 16 - data.length % 16;
          var result = createArray(data.length + padder);
          copyArray(data, result);
          for (var i = data.length; i < result.length; i++) {
            result[i] = padder;
          }
          return result;
        }
        function pkcs7strip(data) {
          data = coerceArray(data, true);
          if (data.length < 16) {
            throw new Error("PKCS#7 invalid length");
          }
          var padder = data[data.length - 1];
          if (padder > 16) {
            throw new Error("PKCS#7 padding byte out of range");
          }
          var length = data.length - padder;
          for (var i = 0; i < padder; i++) {
            if (data[length + i] !== padder) {
              throw new Error("PKCS#7 invalid padding byte");
            }
          }
          var result = createArray(length);
          copyArray(data, result, 0, 0, length);
          return result;
        }
        var aesjs = {
          AES,
          Counter,
          ModeOfOperation: {
            ecb: ModeOfOperationECB,
            cbc: ModeOfOperationCBC,
            cfb: ModeOfOperationCFB,
            ofb: ModeOfOperationOFB,
            ctr: ModeOfOperationCTR
          },
          utils: {
            hex: convertHex,
            utf8: convertUtf8
          },
          padding: {
            pkcs7: {
              pad: pkcs7pad,
              strip: pkcs7strip
            }
          },
          _arrayTest: {
            coerceArray,
            createArray,
            copyArray
          }
        };
        if (typeof exports !== "undefined") {
          module.exports = aesjs;
        } else if (typeof define === "function" && define.amd) {
          define(aesjs);
        } else {
          if (root.aesjs) {
            aesjs._aesjs = root.aesjs;
          }
          root.aesjs = aesjs;
        }
      })(exports);
    }
  });

  // node_modules/scrypt-js/scrypt.js
  var require_scrypt = __commonJS({
    "node_modules/scrypt-js/scrypt.js"(exports, module) {
      "use strict";
      (function(root) {
        const MAX_VALUE = 2147483647;
        function SHA256(m) {
          const K = new Uint32Array([
            1116352408,
            1899447441,
            3049323471,
            3921009573,
            961987163,
            1508970993,
            2453635748,
            2870763221,
            3624381080,
            310598401,
            607225278,
            1426881987,
            1925078388,
            2162078206,
            2614888103,
            3248222580,
            3835390401,
            4022224774,
            264347078,
            604807628,
            770255983,
            1249150122,
            1555081692,
            1996064986,
            2554220882,
            2821834349,
            2952996808,
            3210313671,
            3336571891,
            3584528711,
            113926993,
            338241895,
            666307205,
            773529912,
            1294757372,
            1396182291,
            1695183700,
            1986661051,
            2177026350,
            2456956037,
            2730485921,
            2820302411,
            3259730800,
            3345764771,
            3516065817,
            3600352804,
            4094571909,
            275423344,
            430227734,
            506948616,
            659060556,
            883997877,
            958139571,
            1322822218,
            1537002063,
            1747873779,
            1955562222,
            2024104815,
            2227730452,
            2361852424,
            2428436474,
            2756734187,
            3204031479,
            3329325298
          ]);
          let h0 = 1779033703, h1 = 3144134277, h2 = 1013904242, h3 = 2773480762;
          let h4 = 1359893119, h5 = 2600822924, h6 = 528734635, h7 = 1541459225;
          const w = new Uint32Array(64);
          function blocks(p2) {
            let off = 0, len = p2.length;
            while (len >= 64) {
              let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i2, j, t1, t2;
              for (i2 = 0; i2 < 16; i2++) {
                j = off + i2 * 4;
                w[i2] = (p2[j] & 255) << 24 | (p2[j + 1] & 255) << 16 | (p2[j + 2] & 255) << 8 | p2[j + 3] & 255;
              }
              for (i2 = 16; i2 < 64; i2++) {
                u = w[i2 - 2];
                t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;
                u = w[i2 - 15];
                t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;
                w[i2] = (t1 + w[i2 - 7] | 0) + (t2 + w[i2 - 16] | 0) | 0;
              }
              for (i2 = 0; i2 < 64; i2++) {
                t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i2] + w[i2] | 0) | 0) | 0;
                t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;
                h = g;
                g = f;
                f = e;
                e = d + t1 | 0;
                d = c;
                c = b;
                b = a;
                a = t1 + t2 | 0;
              }
              h0 = h0 + a | 0;
              h1 = h1 + b | 0;
              h2 = h2 + c | 0;
              h3 = h3 + d | 0;
              h4 = h4 + e | 0;
              h5 = h5 + f | 0;
              h6 = h6 + g | 0;
              h7 = h7 + h | 0;
              off += 64;
              len -= 64;
            }
          }
          blocks(m);
          let i, bytesLeft = m.length % 64, bitLenHi = m.length / 536870912 | 0, bitLenLo = m.length << 3, numZeros = bytesLeft < 56 ? 56 : 120, p = m.slice(m.length - bytesLeft, m.length);
          p.push(128);
          for (i = bytesLeft + 1; i < numZeros; i++) {
            p.push(0);
          }
          p.push(bitLenHi >>> 24 & 255);
          p.push(bitLenHi >>> 16 & 255);
          p.push(bitLenHi >>> 8 & 255);
          p.push(bitLenHi >>> 0 & 255);
          p.push(bitLenLo >>> 24 & 255);
          p.push(bitLenLo >>> 16 & 255);
          p.push(bitLenLo >>> 8 & 255);
          p.push(bitLenLo >>> 0 & 255);
          blocks(p);
          return [
            h0 >>> 24 & 255,
            h0 >>> 16 & 255,
            h0 >>> 8 & 255,
            h0 >>> 0 & 255,
            h1 >>> 24 & 255,
            h1 >>> 16 & 255,
            h1 >>> 8 & 255,
            h1 >>> 0 & 255,
            h2 >>> 24 & 255,
            h2 >>> 16 & 255,
            h2 >>> 8 & 255,
            h2 >>> 0 & 255,
            h3 >>> 24 & 255,
            h3 >>> 16 & 255,
            h3 >>> 8 & 255,
            h3 >>> 0 & 255,
            h4 >>> 24 & 255,
            h4 >>> 16 & 255,
            h4 >>> 8 & 255,
            h4 >>> 0 & 255,
            h5 >>> 24 & 255,
            h5 >>> 16 & 255,
            h5 >>> 8 & 255,
            h5 >>> 0 & 255,
            h6 >>> 24 & 255,
            h6 >>> 16 & 255,
            h6 >>> 8 & 255,
            h6 >>> 0 & 255,
            h7 >>> 24 & 255,
            h7 >>> 16 & 255,
            h7 >>> 8 & 255,
            h7 >>> 0 & 255
          ];
        }
        function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {
          password = password.length <= 64 ? password : SHA256(password);
          const innerLen = 64 + salt.length + 4;
          const inner = new Array(innerLen);
          const outerKey = new Array(64);
          let i;
          let dk = [];
          for (i = 0; i < 64; i++) {
            inner[i] = 54;
          }
          for (i = 0; i < password.length; i++) {
            inner[i] ^= password[i];
          }
          for (i = 0; i < salt.length; i++) {
            inner[64 + i] = salt[i];
          }
          for (i = innerLen - 4; i < innerLen; i++) {
            inner[i] = 0;
          }
          for (i = 0; i < 64; i++)
            outerKey[i] = 92;
          for (i = 0; i < password.length; i++)
            outerKey[i] ^= password[i];
          function incrementCounter() {
            for (let i2 = innerLen - 1; i2 >= innerLen - 4; i2--) {
              inner[i2]++;
              if (inner[i2] <= 255)
                return;
              inner[i2] = 0;
            }
          }
          while (dkLen >= 32) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));
            dkLen -= 32;
          }
          if (dkLen > 0) {
            incrementCounter();
            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));
          }
          return dk;
        }
        function blockmix_salsa8(BY, Yi, r3, x, _X) {
          let i;
          arraycopy(BY, (2 * r3 - 1) * 16, _X, 0, 16);
          for (i = 0; i < 2 * r3; i++) {
            blockxor(BY, i * 16, _X, 16);
            salsa20_8(_X, x);
            arraycopy(_X, 0, BY, Yi + i * 16, 16);
          }
          for (i = 0; i < r3; i++) {
            arraycopy(BY, Yi + i * 2 * 16, BY, i * 16, 16);
          }
          for (i = 0; i < r3; i++) {
            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r3) * 16, 16);
          }
        }
        function R(a, b) {
          return a << b | a >>> 32 - b;
        }
        function salsa20_8(B, x) {
          arraycopy(B, 0, x, 0, 16);
          for (let i = 8; i > 0; i -= 2) {
            x[4] ^= R(x[0] + x[12], 7);
            x[8] ^= R(x[4] + x[0], 9);
            x[12] ^= R(x[8] + x[4], 13);
            x[0] ^= R(x[12] + x[8], 18);
            x[9] ^= R(x[5] + x[1], 7);
            x[13] ^= R(x[9] + x[5], 9);
            x[1] ^= R(x[13] + x[9], 13);
            x[5] ^= R(x[1] + x[13], 18);
            x[14] ^= R(x[10] + x[6], 7);
            x[2] ^= R(x[14] + x[10], 9);
            x[6] ^= R(x[2] + x[14], 13);
            x[10] ^= R(x[6] + x[2], 18);
            x[3] ^= R(x[15] + x[11], 7);
            x[7] ^= R(x[3] + x[15], 9);
            x[11] ^= R(x[7] + x[3], 13);
            x[15] ^= R(x[11] + x[7], 18);
            x[1] ^= R(x[0] + x[3], 7);
            x[2] ^= R(x[1] + x[0], 9);
            x[3] ^= R(x[2] + x[1], 13);
            x[0] ^= R(x[3] + x[2], 18);
            x[6] ^= R(x[5] + x[4], 7);
            x[7] ^= R(x[6] + x[5], 9);
            x[4] ^= R(x[7] + x[6], 13);
            x[5] ^= R(x[4] + x[7], 18);
            x[11] ^= R(x[10] + x[9], 7);
            x[8] ^= R(x[11] + x[10], 9);
            x[9] ^= R(x[8] + x[11], 13);
            x[10] ^= R(x[9] + x[8], 18);
            x[12] ^= R(x[15] + x[14], 7);
            x[13] ^= R(x[12] + x[15], 9);
            x[14] ^= R(x[13] + x[12], 13);
            x[15] ^= R(x[14] + x[13], 18);
          }
          for (let i = 0; i < 16; ++i) {
            B[i] += x[i];
          }
        }
        function blockxor(S, Si, D, len) {
          for (let i = 0; i < len; i++) {
            D[i] ^= S[Si + i];
          }
        }
        function arraycopy(src, srcPos, dest, destPos, length) {
          while (length--) {
            dest[destPos++] = src[srcPos++];
          }
        }
        function checkBufferish(o) {
          if (!o || typeof o.length !== "number") {
            return false;
          }
          for (let i = 0; i < o.length; i++) {
            const v = o[i];
            if (typeof v !== "number" || v % 1 || v < 0 || v >= 256) {
              return false;
            }
          }
          return true;
        }
        function ensureInteger(value, name) {
          if (typeof value !== "number" || value % 1) {
            throw new Error("invalid " + name);
          }
          return value;
        }
        function _scrypt(password, salt, N2, r3, p, dkLen, callback) {
          N2 = ensureInteger(N2, "N");
          r3 = ensureInteger(r3, "r");
          p = ensureInteger(p, "p");
          dkLen = ensureInteger(dkLen, "dkLen");
          if (N2 === 0 || (N2 & N2 - 1) !== 0) {
            throw new Error("N must be power of 2");
          }
          if (N2 > MAX_VALUE / 128 / r3) {
            throw new Error("N too large");
          }
          if (r3 > MAX_VALUE / 128 / p) {
            throw new Error("r too large");
          }
          if (!checkBufferish(password)) {
            throw new Error("password must be an array or buffer");
          }
          password = Array.prototype.slice.call(password);
          if (!checkBufferish(salt)) {
            throw new Error("salt must be an array or buffer");
          }
          salt = Array.prototype.slice.call(salt);
          let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r3);
          const B = new Uint32Array(p * 32 * r3);
          for (let i = 0; i < B.length; i++) {
            const j = i * 4;
            B[i] = (b[j + 3] & 255) << 24 | (b[j + 2] & 255) << 16 | (b[j + 1] & 255) << 8 | (b[j + 0] & 255) << 0;
          }
          const XY = new Uint32Array(64 * r3);
          const V = new Uint32Array(32 * r3 * N2);
          const Yi = 32 * r3;
          const x = new Uint32Array(16);
          const _X = new Uint32Array(16);
          const totalOps = p * N2 * 2;
          let currentOp = 0;
          let lastPercent10 = null;
          let stop = false;
          let state = 0;
          let i0 = 0, i1;
          let Bi;
          const limit = callback ? parseInt(1e3 / r3) : 4294967295;
          const nextTick = typeof setImmediate !== "undefined" ? setImmediate : setTimeout;
          const incrementalSMix = function() {
            if (stop) {
              return callback(new Error("cancelled"), currentOp / totalOps);
            }
            let steps;
            switch (state) {
              case 0:
                Bi = i0 * 32 * r3;
                arraycopy(B, Bi, XY, 0, Yi);
                state = 1;
                i1 = 0;
              case 1:
                steps = N2 - i1;
                if (steps > limit) {
                  steps = limit;
                }
                for (let i = 0; i < steps; i++) {
                  arraycopy(XY, 0, V, (i1 + i) * Yi, Yi);
                  blockmix_salsa8(XY, Yi, r3, x, _X);
                }
                i1 += steps;
                currentOp += steps;
                if (callback) {
                  const percent10 = parseInt(1e3 * currentOp / totalOps);
                  if (percent10 !== lastPercent10) {
                    stop = callback(null, currentOp / totalOps);
                    if (stop) {
                      break;
                    }
                    lastPercent10 = percent10;
                  }
                }
                if (i1 < N2) {
                  break;
                }
                i1 = 0;
                state = 2;
              case 2:
                steps = N2 - i1;
                if (steps > limit) {
                  steps = limit;
                }
                for (let i = 0; i < steps; i++) {
                  const offset = (2 * r3 - 1) * 16;
                  const j = XY[offset] & N2 - 1;
                  blockxor(V, j * Yi, XY, Yi);
                  blockmix_salsa8(XY, Yi, r3, x, _X);
                }
                i1 += steps;
                currentOp += steps;
                if (callback) {
                  const percent10 = parseInt(1e3 * currentOp / totalOps);
                  if (percent10 !== lastPercent10) {
                    stop = callback(null, currentOp / totalOps);
                    if (stop) {
                      break;
                    }
                    lastPercent10 = percent10;
                  }
                }
                if (i1 < N2) {
                  break;
                }
                arraycopy(XY, 0, B, Bi, Yi);
                i0++;
                if (i0 < p) {
                  state = 0;
                  break;
                }
                b = [];
                for (let i = 0; i < B.length; i++) {
                  b.push(B[i] >> 0 & 255);
                  b.push(B[i] >> 8 & 255);
                  b.push(B[i] >> 16 & 255);
                  b.push(B[i] >> 24 & 255);
                }
                const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);
                if (callback) {
                  callback(null, 1, derivedKey);
                }
                return derivedKey;
            }
            if (callback) {
              nextTick(incrementalSMix);
            }
          };
          if (!callback) {
            while (true) {
              const derivedKey = incrementalSMix();
              if (derivedKey != void 0) {
                return derivedKey;
              }
            }
          }
          incrementalSMix();
        }
        const lib = {
          scrypt: function(password, salt, N2, r3, p, dkLen, progressCallback) {
            return new Promise(function(resolve, reject) {
              let lastProgress = 0;
              if (progressCallback) {
                progressCallback(0);
              }
              _scrypt(password, salt, N2, r3, p, dkLen, function(error, progress, key3) {
                if (error) {
                  reject(error);
                } else if (key3) {
                  if (progressCallback && lastProgress !== 1) {
                    progressCallback(1);
                  }
                  resolve(new Uint8Array(key3));
                } else if (progressCallback && progress !== lastProgress) {
                  lastProgress = progress;
                  return progressCallback(progress);
                }
              });
            });
          },
          syncScrypt: function(password, salt, N2, r3, p, dkLen) {
            return new Uint8Array(_scrypt(password, salt, N2, r3, p, dkLen));
          }
        };
        if (typeof exports !== "undefined") {
          module.exports = lib;
        } else if (typeof define === "function" && define.amd) {
          define(lib);
        } else if (root) {
          if (root.scrypt) {
            root._scrypt = root.scrypt;
          }
          root.scrypt = lib;
        }
      })(exports);
    }
  });

  // node_modules/bech32/index.js
  var require_bech322 = __commonJS({
    "node_modules/bech32/index.js"(exports, module) {
      "use strict";
      var ALPHABET2 = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
      var ALPHABET_MAP = {};
      for (z = 0; z < ALPHABET2.length; z++) {
        x = ALPHABET2.charAt(z);
        if (ALPHABET_MAP[x] !== void 0)
          throw new TypeError(x + " is ambiguous");
        ALPHABET_MAP[x] = z;
      }
      var x;
      var z;
      function polymodStep(pre) {
        var b = pre >> 25;
        return (pre & 33554431) << 5 ^ -(b >> 0 & 1) & 996825010 ^ -(b >> 1 & 1) & 642813549 ^ -(b >> 2 & 1) & 513874426 ^ -(b >> 3 & 1) & 1027748829 ^ -(b >> 4 & 1) & 705979059;
      }
      function prefixChk(prefix) {
        var chk = 1;
        for (var i = 0; i < prefix.length; ++i) {
          var c = prefix.charCodeAt(i);
          if (c < 33 || c > 126)
            return "Invalid prefix (" + prefix + ")";
          chk = polymodStep(chk) ^ c >> 5;
        }
        chk = polymodStep(chk);
        for (i = 0; i < prefix.length; ++i) {
          var v = prefix.charCodeAt(i);
          chk = polymodStep(chk) ^ v & 31;
        }
        return chk;
      }
      function encode9(prefix, words2, LIMIT) {
        LIMIT = LIMIT || 90;
        if (prefix.length + 7 + words2.length > LIMIT)
          throw new TypeError("Exceeds length limit");
        prefix = prefix.toLowerCase();
        var chk = prefixChk(prefix);
        if (typeof chk === "string")
          throw new Error(chk);
        var result = prefix + "1";
        for (var i = 0; i < words2.length; ++i) {
          var x2 = words2[i];
          if (x2 >> 5 !== 0)
            throw new Error("Non 5-bit word");
          chk = polymodStep(chk) ^ x2;
          result += ALPHABET2.charAt(x2);
        }
        for (i = 0; i < 6; ++i) {
          chk = polymodStep(chk);
        }
        chk ^= 1;
        for (i = 0; i < 6; ++i) {
          var v = chk >> (5 - i) * 5 & 31;
          result += ALPHABET2.charAt(v);
        }
        return result;
      }
      function __decode(str, LIMIT) {
        LIMIT = LIMIT || 90;
        if (str.length < 8)
          return str + " too short";
        if (str.length > LIMIT)
          return "Exceeds length limit";
        var lowered = str.toLowerCase();
        var uppered = str.toUpperCase();
        if (str !== lowered && str !== uppered)
          return "Mixed-case string " + str;
        str = lowered;
        var split = str.lastIndexOf("1");
        if (split === -1)
          return "No separator character for " + str;
        if (split === 0)
          return "Missing prefix for " + str;
        var prefix = str.slice(0, split);
        var wordChars = str.slice(split + 1);
        if (wordChars.length < 6)
          return "Data too short";
        var chk = prefixChk(prefix);
        if (typeof chk === "string")
          return chk;
        var words2 = [];
        for (var i = 0; i < wordChars.length; ++i) {
          var c = wordChars.charAt(i);
          var v = ALPHABET_MAP[c];
          if (v === void 0)
            return "Unknown character " + c;
          chk = polymodStep(chk) ^ v;
          if (i + 6 >= wordChars.length)
            continue;
          words2.push(v);
        }
        if (chk !== 1)
          return "Invalid checksum for " + str;
        return { prefix, words: words2 };
      }
      function decodeUnsafe() {
        var res = __decode.apply(null, arguments);
        if (typeof res === "object")
          return res;
      }
      function decode5(str) {
        var res = __decode.apply(null, arguments);
        if (typeof res === "object")
          return res;
        throw new Error(res);
      }
      function convert(data, inBits, outBits, pad) {
        var value = 0;
        var bits = 0;
        var maxV = (1 << outBits) - 1;
        var result = [];
        for (var i = 0; i < data.length; ++i) {
          value = value << inBits | data[i];
          bits += inBits;
          while (bits >= outBits) {
            bits -= outBits;
            result.push(value >> bits & maxV);
          }
        }
        if (pad) {
          if (bits > 0) {
            result.push(value << outBits - bits & maxV);
          }
        } else {
          if (bits >= inBits)
            return "Excess padding";
          if (value << outBits - bits & maxV)
            return "Non-zero padding";
        }
        return result;
      }
      function toWordsUnsafe(bytes) {
        var res = convert(bytes, 8, 5, true);
        if (Array.isArray(res))
          return res;
      }
      function toWords(bytes) {
        var res = convert(bytes, 8, 5, true);
        if (Array.isArray(res))
          return res;
        throw new Error(res);
      }
      function fromWordsUnsafe(words2) {
        var res = convert(words2, 5, 8, false);
        if (Array.isArray(res))
          return res;
      }
      function fromWords(words2) {
        var res = convert(words2, 5, 8, false);
        if (Array.isArray(res))
          return res;
        throw new Error(res);
      }
      module.exports = {
        decodeUnsafe,
        decode: decode5,
        encode: encode9,
        toWordsUnsafe,
        toWords,
        fromWordsUnsafe,
        fromWords
      };
    }
  });

  // node_modules/@ubiquibot/permit-generation/dist/types/index.js
  var require_types = __commonJS({
    "node_modules/@ubiquibot/permit-generation/dist/types/index.js"(exports) {
      "use strict";
      var e;
      exports.TokenType = void 0, (e = exports.TokenType || (exports.TokenType = {})).ERC20 = "ERC20", e.ERC721 = "ERC721";
    }
  });

  // node_modules/@ubiquity-dao/rpc-handler/dist/esm/index.js
  var __create2 = Object.create;
  var __defProp2 = Object.defineProperty;
  var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames2 = Object.getOwnPropertyNames;
  var __getProtoOf2 = Object.getPrototypeOf;
  var __hasOwnProp2 = Object.prototype.hasOwnProperty;
  var __esm2 = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames2(fn)[0]])(fn = 0)), res;
  };
  var __commonJS2 = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames2(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __export2 = (target, all3) => {
    for (var name in all3)
      __defProp2(target, name, { get: all3[name], enumerable: true });
  };
  var __copyProps2 = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key22 of __getOwnPropNames2(from))
        if (!__hasOwnProp2.call(to, key22) && key22 !== except)
          __defProp2(to, key22, { get: () => from[key22], enumerable: !(desc = __getOwnPropDesc2(from, key22)) || desc.enumerable });
    }
    return to;
  };
  var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp2(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));
  var define_chainIDList_default;
  var init_define_chainIDList = __esm2({
    "<define:chainIDList>"() {
      define_chainIDList_default = { "1": "ethereum", "8": "ubiq", "10": "optimism", "19": "songbird", "20": "elastos", "24": "kardiachain", "25": "cronos", "30": "rsk", "40": "telos", "50": "xdc", "52": "csc", "55": "zyx", "56": "binance", "57": "syscoin", "60": "gochain", "61": "ethereumclassic", "66": "okexchain", "70": "hoo", "82": "meter", "87": "nova network", "88": "viction", "100": "xdai", "106": "velas", "108": "thundercore", "122": "fuse", "128": "heco", "137": "polygon", "148": "shimmer_evm", "169": "manta", "200": "xdaiarb", "204": "op_bnb", "246": "energyweb", "248": "oasys", "250": "fantom", "269": "hpb", "288": "boba", "311": "omax", "314": "filecoin", "321": "kucoin", "324": "era", "336": "shiden", "361": "theta", "369": "pulse", "416": "sx", "463": "areon", "534": "candle", "570": "rollux", "592": "astar", "820": "callisto", "888": "wanchain", "1030": "conflux", "1088": "metis", "1101": "polygon_zkevm", "1116": "core", "1231": "ultron", "1234": "step", "1284": "moonbeam", "1285": "moonriver", "1440": "living assets mainnet", "1559": "tenet", "1975": "onus", "2000": "dogechain", "2222": "kava", "2332": "soma", "4337": "beam", "4689": "iotex", "5000": "mantle", "5050": "xlc", "5551": "nahmii", "6969": "tombchain", "7700": "canto", "8217": "klaytn", "8453": "base", "8899": "jbc", "9001": "evmos", "9790": "carbon", "10000": "smartbch", "15551": "loop", "17777": "eos_evm", "32520": "bitgert", "32659": "fusion", "32769": "zilliqa", "42161": "arbitrum", "42170": "arbitrum_nova", "42220": "celo", "42262": "oasis", "43114": "avalanche", "47805": "rei", "55555": "reichain", "59144": "linea", "71402": "godwoken", "333999": "polis", "420420": "kekchain", "888888": "vision", "245022934": "neon", "1313161554": "aurora", "1666600000": "harmony", "11297108109": "palm", "836542336838601": "curio" };
    }
  });
  var define_extraRpcs_default;
  var init_define_extraRpcs = __esm2({
    "<define:extraRpcs>"() {
      define_extraRpcs_default = { "1": ["https://mainnet.eth.cloud.ava.do/", "https://ethereumnodelight.app.runonflux.io", "https://eth-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://main-light.eth.linkpool.io", "https://rpc.notadegen.com/eth", "https://eth.llamarpc.com", "https://endpoints.omniatech.io/v1/eth/mainnet/public", "https://go.getblock.io/d7dab8149ec04390aaa923ff2768f914", "https://ethereum-rpc.publicnode.com", "https://1rpc.io/eth", "https://rpc.builder0x69.io/", "https://rpc.mevblocker.io", "https://rpc.flashbots.net/", "https://eth-pokt.nodies.app", "https://rpc.payload.de", "https://api.zmok.io/mainnet/oaen6dy8ff6hju9k", "https://eth.meowrpc.com", "https://eth.drpc.org", "https://eth.merkle.io", "https://rpc.lokibuilder.xyz/wallet", "https://api.stateless.solutions/ethereum/v1/0ec6cac0-ecac-4247-8a41-1e685deadfe4", "https://rpc.polysplit.cloud/v1/chain/1", "https://rpc.tornadoeth.cash/eth", "https://rpc.tornadoeth.cash/mev"], "2": ["https://node.eggs.cool", "https://node.expanse.tech"], "3": ["https://rpc.ankr.com/eth_ropsten", "https://ropsten.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161"], "4": ["https://rpc.ankr.com/eth_rinkeby", "https://rinkeby.infura.io/3/9aa3d95b3bc440fa88ea12eaa4456161"], "5": ["https://endpoints.omniatech.io/v1/eth/goerli/public", "https://ethereum-goerli-rpc.publicnode.com", "https://rpc.tornadoeth.cash/goerli"], "6": ["https://www.ethercluster.com/kotti"], "7": ["https://rpc.dome.cloud"], "8": ["https://rpc.octano.dev"], "10": ["https://mainnet.optimism.io/", "https://optimism.llamarpc.com", "https://1rpc.io/op", "https://op-pokt.nodies.app", "https://endpoints.omniatech.io/v1/op/mainnet/public", "https://optimism-rpc.publicnode.com", "https://optimism.meowrpc.com", "https://optimism.drpc.org", "https://api.stateless.solutions/optimism/v1/f373feb1-c8e4-41c9-bb74-2c691988dd34", "https://rpc.tornadoeth.cash/optimism"], "11": ["https://api.metadium.com/dev"], "14": [], "15": ["https://prenet.diode.io:8443/"], "17": ["https://rpc.thaifi.com"], "19": ["https://songbird.towolabs.com/rpc"], "20": ["https://api.elastos.io/esc", "https://api.trinity-tech.io/esc"], "22": ["https://api.trinity-tech.io/eid", "https://api.elastos.io/eid"], "24": ["https://rpc.kardiachain.io"], "25": ["https://evm.cronos.org", "https://cronos-rpc.elk.finance/", "https://cronos-evm-rpc.publicnode.com", "https://1rpc.io/cro"], "27": ["https://rpc.shibachain.net"], "29": ["https://rpc.genesisl1.org"], "30": ["https://public-node.rsk.co"], "33": ["https://rpc.goodata.io"], "35": ["https://rpc.tbwg.io"], "38": ["https://rpc.valorbit.com/v2"], "40": ["https://mainnet.telos.net/evm", "https://rpc1.eu.telos.net/evm", "https://rpc1.us.telos.net/evm", "https://rpc2.us.telos.net/evm", "https://api.kainosbp.com/evm", "https://rpc2.eu.telos.net/evm", "https://evm.teloskorea.com/evm", "https://rpc2.teloskorea.com/evm", "https://rpc01.us.telosunlimited.io/evm", "https://rpc02.us.telosunlimited.io/evm", "https://1rpc.io/telos/evm"], "44": [], "50": ["https://rpc.xdcrpc.com", "https://rpc1.xinfin.network", "https://erpc.xinfin.network", "https://rpc.xinfin.network", "https://erpc.xdcrpc.com", "https://rpc.xdc.org"], "51": ["https://rpc.apothem.network", "https://erpc.apothem.network", "https://apothem.xdcrpc.com"], "52": ["https://rpc.coinex.net/", "https://rpc1.coinex.net/", "https://rpc2.coinex.net/", "https://rpc3.coinex.net/", "https://rpc4.coinex.net/"], "55": ["https://rpc-1.zyx.network/", "https://rpc-2.zyx.network/", "https://rpc-3.zyx.network/", "https://rpc-5.zyx.network/"], "56": ["https://bsc-dataseed.bnbchain.org/", "https://bsc-dataseed1.defibit.io/", "https://bsc-dataseed1.ninicoin.io/", "https://bsc-dataseed2.defibit.io/", "https://bsc-dataseed3.defibit.io/", "https://bsc-dataseed4.defibit.io/", "https://bsc-dataseed2.ninicoin.io/", "https://bsc-dataseed3.ninicoin.io/", "https://bsc-dataseed4.ninicoin.io/", "https://bsc-dataseed1.bnbchain.org/", "https://bsc-dataseed2.bnbchain.org/", "https://bsc-dataseed3.bnbchain.org/", "https://bsc-dataseed4.bnbchain.org/", "https://bsc-dataseed6.dict.life/", "https://bscrpc.com", "https://bsc.rpcgator.com/", "https://bsc-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://nodes.vefinetwork.org/smartchain", "https://binance.llamarpc.com", "https://endpoints.omniatech.io/v1/bsc/mainnet/public", "https://bsc-pokt.nodies.app", "https://1rpc.io/bnb", "https://bsc-rpc.publicnode.com", "https://bsc.meowrpc.com", "https://bsc.drpc.org", "https://rpc.polysplit.cloud/v1/chain/56", "https://rpc.tornadoeth.cash/bsc"], "57": ["https://rpc.syscoin.org", "https://syscoin-evm-rpc.publicnode.com"], "58": ["https://dappnode1.ont.io:10339", "https://dappnode2.ont.io:10339", "https://dappnode3.ont.io:10339", "https://dappnode4.ont.io:10339"], "59": ["https://api.eosargentina.io", "https://api.metahub.cash"], "60": ["https://rpc.gochain.io"], "61": ["https://etc.mytokenpocket.vip", "https://rpc.etcinscribe.com", "https://etc.etcdesktop.com", "https://etc.rivet.link"], "62": ["https://www.ethercluster.com/morden"], "63": ["https://rpc.mordor.etccooperative.org"], "64": [], "66": ["https://exchainrpc.okex.org", "https://1rpc.io/oktc"], "68": [], "70": ["https://http-mainnet.hoosmartchain.com"], "74": ["https://idchain.one/rpc/"], "76": [], "77": ["https://sokol.poa.network"], "78": ["https://ethnode.primusmoney.com/mainnet"], "79": ["https://dataserver-us-1.zenithchain.co/", "https://dataserver-asia-3.zenithchain.co/", "https://dataserver-asia-4.zenithchain.co/", "https://dataserver-asia-2.zenithchain.co/"], "80": [], "82": ["https://rpc.meter.io"], "86": ["https://evm.gatenode.cc"], "87": ["https://rpc.novanetwork.io:9070", "https://dev.rpc.novanetwork.io/"], "88": ["https://rpc.tomochain.com"], "90": ["https://s0.garizon.net/rpc"], "91": ["https://s1.garizon.net/rpc"], "92": ["https://s2.garizon.net/rpc"], "93": ["https://s3.garizon.net/rpc"], "96": ["https://rpc.bitkubchain.io"], "97": ["https://bsctestapi.terminet.io/rpc", "https://endpoints.omniatech.io/v1/bsc/testnet/public", "https://bsc-testnet-rpc.publicnode.com"], "99": ["https://core.poanetwork.dev"], "100": ["https://rpc.gnosischain.com", "https://xdai-archive.blockscout.com", "https://gnosis-pokt.nodies.app", "https://gnosis.drpc.org", "https://endpoints.omniatech.io/v1/gnosis/mainnet/public", "https://gnosis-rpc.publicnode.com", "https://1rpc.io/gnosis", "https://rpc.tornadoeth.cash/gnosis"], "101": [], "106": ["https://evmexplorer.velas.com/rpc", "https://velas-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf"], "108": ["https://mainnet-rpc.thundercore.com"], "111": ["https://rpc.etherlite.org"], "119": ["https://evmapi.nuls.io", "https://evmapi2.nuls.io"], "122": ["https://rpc.fuse.io", "https://fuse-pokt.nodies.app"], "123": ["https://rpc.fusespark.io"], "124": [], "126": ["https://rpc.mainnet.oychain.io", "https://rpc.oychain.io"], "127": [], "128": ["https://http-mainnet.hecochain.com", "https://http-mainnet-node.huobichain.com", "https://hecoapi.terminet.io/rpc"], "131": ["https://tokioswift.engram.tech", "https://tokio-archive.engram.tech"], "137": ["https://rpc-mainnet.maticvigil.com", "https://polygon-rpc.com", "https://rpc-mainnet.matic.network", "https://matic-mainnet-full-rpc.bwarelabs.com", "https://matic-mainnet-archive-rpc.bwarelabs.com", "https://polygonapi.terminet.io/rpc", "https://polygon-mainnet.rpcfast.com?api_key=xbhWBI1Wkguk8SNMu1bvvLurPGLXmgwYeC4S6g2H7WdwFigZSmPWVZRxrskEQwIf", "https://polygon-mainnet-public.unifra.io", "https://polygon.llamarpc.com", "https://endpoints.omniatech.io/v1/matic/mainnet/public", "https://polygon-pokt.nodies.app", "https://1rpc.io/matic", "https://polygon-bor-rpc.publicnode.com", "https://polygon.drpc.org", "https://polygon.meowrpc.com", "https://getblock.io/nodes/matic/", "https://api.stateless.solutions/polygon/v1/5850f066-209e-4e3c-a294-0757a4eb34b3", "https://rpc.tornadoeth.cash/polygon"], "142": ["https://rpc.prodax.io"], "163": ["https://node.mainnet.lightstreams.io"], "167": ["https://node.atoshi.io", "https://node2.atoshi.io", "https://node3.atoshi.io"], "169": ["https://pacific-rpc.manta.network/http", "https://1rpc.io/manta"], "186": ["https://rpc.seelen.pro/"], "188": ["https://mainnet.bmcchain.com/"], "195": [], "199": ["https://rpc.bittorrentchain.io/"], "200": ["https://arbitrum.xdaichain.com"], "204": ["https://opbnb-rpc.publicnode.com", "https://1rpc.io/opbnb"], "211": [], "217": ["https://rpc2.siriusnet.io"], "222": ["https://blockchain-api-mainnet.permission.io/rpc"], "246": ["https://rpc.energyweb.org"], "248": ["https://oasys-mainnet.gateway.pokt.network/v1/lb/c967bd31", "https://oasys-mainnet-archival.gateway.pokt.network/v1/lb/c967bd31"], "250": ["https://rpcapi.fantom.network", "https://rpc.ftm.tools/", "https://rpc.fantom.network", "https://rpc2.fantom.network", "https://rpc3.fantom.network", "https://endpoints.omniatech.io/v1/fantom/mainnet/public", "https://fantom-pokt.nodies.app", "https://1rpc.io/ftm", "https://fantom-rpc.publicnode.com", "https://fantom.drpc.org"], "255": ["https://1rpc.io/kroma"], "256": ["https://hecotestapi.terminet.io/rpc"], "258": [], "262": ["https://sur.nilin.org"], "288": ["https://mainnet.boba.network/", "https://1rpc.io/boba/eth"], "300": [], "311": ["https://mainapi.omaxray.com/"], "314": ["https://api.node.glif.io", "https://node.filutils.com/rpc/v1", "https://api.chain.love/rpc/v1"], "321": ["https://rpc-mainnet.kcc.network", "https://kcc.mytokenpocket.vip", "https://kcc-rpc.com"], "324": ["https://zksync.meowrpc.com", "https://zksync.drpc.org", "https://1rpc.io/zksync2-era"], "333": [], "336": ["https://rpc.shiden.astar.network:8545/"], "338": ["https://evm-t3.cronos.org/"], "361": ["https://eth-rpc-api.thetatoken.org/rpc"], "369": ["https://rpc.pulsechain.com", "https://rpc-pulsechain.g4mm4.io", "https://evex.cloud/pulserpc", "https://pulse-s.projectpi.xyz", "https://pulsechain-rpc.publicnode.com"], "385": [], "416": ["https://rpc.sx.technology"], "420": ["https://endpoints.omniatech.io/v1/op/goerli/public", "https://optimism-goerli-rpc.publicnode.com"], "463": ["https://mainnet-rpc.areon.network", "https://mainnet-rpc2.areon.network", "https://mainnet-rpc3.areon.network", "https://mainnet-rpc4.areon.network", "https://mainnet-rpc5.areon.network"], "499": [], "512": ["https://rpc.acuteangle.com"], "530": ["https://fx-json-web3.portfolio-x.xyz:8545/"], "555": ["https://rpc.velaverse.io"], "558": ["https://rpc.tao.network"], "570": ["https://rpc.rollux.com", "https://rollux.rpc.syscoin.org"], "592": ["https://evm.astar.network/", "https://rpc.astar.network:8545", "https://getblock.io/nodes/bsc/", "https://1rpc.io/astr"], "595": [], "686": ["https://eth-rpc-karura.aca-staging.network", "https://rpc.evm.karura.network"], "707": [], "777": ["https://node.cheapeth.org/rpc"], "787": ["https://eth-rpc-acala.aca-staging.network", "https://rpc.evm.acala.network"], "803": [], "813": ["https://mainnet.meerlabs.com"], "820": ["https://rpc.callisto.network", "https://clo-geth.0xinfra.com/"], "880": [], "888": ["https://gwan-ssl.wandevs.org:56891", "https://gwan2-ssl.wandevs.org"], "943": ["https://pulsetest-s.projectpi.xyz", "https://pulsechain-testnet-rpc.publicnode.com"], "977": [], "998": [], "1001": ["https://public-en-baobab.klaytn.net"], "1003": [], "1010": ["https://meta.evrice.com"], "1012": ["https://global.rpc.mainnet.newtonproject.org"], "1022": [], "1024": ["https://api-para.clover.finance"], "1030": ["https://evm.confluxrpc.com", "https://conflux-espace-public.unifra.io"], "1072": ["https://json-rpc.evm.testnet.shimmer.network/"], "1088": ["https://andromeda.metis.io/?owner=1088", "https://metis-pokt.nodies.app"], "1089": ["https://humans-mainnet-evm.itrocket.net"], "1100": ["https://jsonrpc.dymension.nodestake.org", "https://evm-archive.dymd.bitszn.com", "https://dymension.liquify.com/json-rpc", "https://dymension-evm.kynraze.com"], "1101": ["https://1rpc.io/polygon/zkevm", "https://polygon-zkevm.drpc.org"], "1115": ["https://rpc.test.btcs.network"], "1116": ["https://rpc.coredao.org", "https://core.public.infstones.com", "https://1rpc.io/core"], "1130": ["https://dmc.mydefichain.com/mainnet", "https://dmc01.mydefichain.com/mainnet"], "1131": ["https://dmc.mydefichain.com/testnet", "https://dmc01.mydefichain.com/testnet", "https://eth.testnet.ocean.jellyfishsdk.com/"], "1139": ["https://mathchain.maiziqianbao.net/rpc"], "1197": [], "1202": [], "1213": ["https://dataseed.popcateum.org"], "1214": [], "1231": ["https://ultron-rpc.net"], "1246": ["https://rpc-cnx.omplatform.com"], "1280": ["https://nodes.halo.land"], "1284": ["https://rpc.api.moonbeam.network", "https://1rpc.io/glmr", "https://endpoints.omniatech.io/v1/moonbeam/mainnet/public", "https://moonbeam-rpc.publicnode.com"], "1285": ["https://moonriver-rpc.publicnode.com"], "1287": ["https://rpc.testnet.moonbeam.network"], "1288": [], "1338": ["https://rpc.atlantischain.network/"], "1339": ["https://rpc.elysiumchain.tech/", "https://rpc.elysiumchain.us/"], "1440": [], "1442": [], "1501": ["https://rpc-canary-1.bevm.io/", "https://rpc-canary-2.bevm.io/"], "1506": ["https://mainnet.sherpax.io/rpc"], "1515": ["https://beagle.chat/eth"], "1618": ["https://send.catechain.com"], "1620": [], "1657": ["https://dataseed1.btachain.com/"], "1707": ["https://rpc.blockchain.or.th"], "1708": ["https://rpc.testnet.blockchain.or.th"], "1856": [], "1881": ["https://rpc.cartenz.works"], "1972": ["https://rpc2.redecoin.eu"], "1975": ["https://rpc.onuschain.io"], "1987": [], "2000": ["https://rpc.dogechain.dog", "https://rpc-us.dogechain.dog", "https://rpc-sg.dogechain.dog", "https://rpc.dogechain.dog", "https://rpc01-sg.dogechain.dog", "https://rpc02-sg.dogechain.dog", "https://rpc03-sg.dogechain.dog"], "2016": ["https://eu-rpc.mainnetz.io"], "2021": ["https://mainnet2.edgewa.re/evm", "https://mainnet3.edgewa.re/evm", "https://edgeware-evm.jelliedowl.net/"], "2025": ["https://mainnet.rangersprotocol.com/api/jsonrpc"], "2049": ["https://msc-rpc.movoscan.com/"], "2077": [], "2100": ["https://api.ecoball.org/ecoball/"], "2213": ["https://seed4.evanesco.org:8546"], "2222": ["https://evm.kava.io", "https://kava-evm-rpc.publicnode.com", "https://kava-pokt.nodies.app"], "2323": [], "2332": [], "2458": [], "2468": [], "2559": [], "2612": ["https://api.ezchain.com/ext/bc/C/rpc"], "3501": ["https://rpc.jfinchain.com"], "3639": ["https://rpc.ichainscan.com"], "3690": [], "4002": ["https://rpc.testnet.fantom.network/", "https://endpoints.omniatech.io/v1/fantom/testnet/public", "https://fantom-testnet-rpc.publicnode.com"], "4139": ["https://humans-testnet-evm.itrocket.net"], "4181": ["https://rpc1.phi.network"], "4444": ["https://janus.htmlcoin.dev/janus/"], "4689": ["https://babel-api.mainnet.iotex.io", "https://babel-api.mainnet.iotex.one", "https://babel-api.fastblocks.io"], "5000": ["https://mantle-rpc.publicnode.com", "https://mantle.drpc.org", "https://1rpc.io/mantle"], "5050": ["https://rpc.liquidchain.net/", "https://rpc.xlcscan.com/"], "5165": ["https://bahamut-rpc.publicnode.com"], "5177": [], "5197": ["https://mainnet.eraswap.network"], "5315": [], "5551": ["https://l2.nahmii.io/"], "5700": ["https://rollux.rpc.tanenbaum.io", "https://syscoin-tanenbaum-evm-rpc.publicnode.com"], "5729": ["https://rpc-testnet.hika.network"], "5869": ["https://proxy.wegochain.io"], "6363": ["https://dsc-rpc.digitsoul.co.th"], "6626": ["https://http-mainnet.chain.pixie.xyz"], "6688": ["https://iris-evm-rpc.publicnode.com"], "7000": ["https://zeta.rpcgrid.com"], "7001": [], "7070": ["https://planq-rpc.nodies.app", "https://jsonrpc.planq.nodestake.top/"], "7341": ["https://rpc.shyft.network/"], "7700": ["https://canto.gravitychain.io/", "https://canto.evm.chandrastation.com/", "https://jsonrpc.canto.nodestake.top/", "https://canto.dexvaults.com/", "https://canto-rpc.ansybl.io"], "7777": ["https://testnet1.rotw.games", "https://testnet2.rotw.games", "https://testnet3.rotw.games", "https://testnet4.rotw.games", "https://testnet5.rotw.games"], "7895": [], "8000": ["https://dataseed.testnet.teleport.network"], "8081": [], "8082": [], "8131": ["https://testnet.meerlabs.com"], "8217": ["https://public-en-cypress.klaytn.net", "https://1rpc.io/klay", "https://klaytn-pokt.nodies.app", "https://klaytn.drpc.org"], "8453": ["https://mainnet.base.org", "https://developer-access-mainnet.base.org", "https://rpc.notadegen.com/base", "https://base.llamarpc.com", "https://1rpc.io/base", "https://base-pokt.nodies.app", "https://base.meowrpc.com", "https://base-rpc.publicnode.com", "https://base.drpc.org", "https://endpoints.omniatech.io/v1/base/mainnet/public"], "8899": ["https://rpc-l1.jibchain.net", "https://jib-rpc.inan.in.th", "https://rpc-l1.jbc.aomwara.in.th", "https://rpc-l1.jbc.xpool.pw"], "8995": ["https://core.bloxberg.org"], "9000": ["https://evmos-testnet-json.qubelabs.io", "https://evmos-tjson.antrixy.org", "https://evmos-testnet-rpc.kingsuper.services", "https://rpc.evmos.test.theamsolutions.info", "https://api.evmos-test.theamsolutions.info", "https://rpc.evmos.testnet.node75.org", "https://rpc-evm.testnet.evmos.dragonstake.io", "https://evmos-testnet-rpc.stake-town.com", "https://evmos-testnet-jsonrpc.stake-town.com", "https://api.evmos-test.theamsolutions.info", "https://jsonrpc-t.evmos.nodestake.top", "https://evmos-testnet-jsonrpc.autostake.com", "https://evmos-testnet-jsonrpc.alkadeta.com", "https://evm-rpc.evmost.silentvalidator.com", "https://testnet-evm-rpc-evmos.hoodrun.io", "https://alphab.ai/rpc/eth/evmos_testnet", "https://t-evmos-jsonrpc.kalia.network", "https://jsonrpc-evmos-testnet.mzonder.com", "https://evmos-testnet.lava.build/lava-referer-16223de7-12c0-49f3-8d87-e5f1e6a0eb3b"], "9001": ["https://jsonrpc-evmos.goldenratiostaking.net", "https://eth.bd.evmos.org:8545/", "https://evmos-json-rpc.stakely.io", "https://jsonrpc-evmos-ia.cosmosia.notional.ventures", "https://json-rpc.evmos.blockhunters.org", "https://evmos-json-rpc.agoranodes.com", "https://evmos-json.antrixy.org", "https://jsonrpc.evmos.nodestake.top", "https://evmos-jsonrpc.alkadeta.com", "https://evmos-json.qubelabs.io", "https://evmos-rpc.theamsolutions.info", "https://evmos-api.theamsolutions.info", "https://evmos-jsonrpc.theamsolutions.info", "https://evm-rpc-evmos.hoodrun.io", "https://evmos-json-rpc.0base.dev", "https://json-rpc.evmos.tcnetwork.io", "https://rpc-evm.evmos.dragonstake.io", "https://evmosevm.rpc.stakin-nodes.com", "https://evmos-jsonrpc.stake-town.com", "https://json-rpc-evmos.mainnet.validatrium.club", "https://rpc-evmos.imperator.co", "https://evm-rpc.evmos.silentvalidator.com", "https://alphab.ai/rpc/eth/evmos", "https://evmos-jsonrpc.kalia.network", "https://jsonrpc-evmos.mzonder.com", "https://evmos-pokt.nodies.app", "https://evmos-evm-rpc.publicnode.com"], "9100": [], "10000": ["https://smartbch.fountainhead.cash/mainnet", "https://global.uat.cash", "https://rpc.uatvo.com"], "10086": [], "10101": ["https://eu.mainnet.xixoio.com"], "10200": ["https://rpc.chiadochain.net", "https://gnosis-chiado-rpc.publicnode.com", "https://1rpc.io/gnosis"], "10248": [], "11111": ["https://api.trywagmi.xyz/rpc"], "11235": ["https://haqq-evm-rpc.publicnode.com"], "12052": ["https://zerorpc.singularity.gold"], "13000": ["https://rpc.ssquad.games"], "13381": ["https://rpc.phoenixplorer.com/"], "15551": [], "15557": [], "16000": [], "17000": ["https://ethereum-holesky-rpc.publicnode.com", "https://1rpc.io/holesky", "https://holesky-rpc.nocturnode.tech"], "17777": [], "18159": ["https://mainnet-rpc.memescan.io/", "https://mainnet-rpc2.memescan.io/", "https://mainnet-rpc3.memescan.io/", "https://mainnet-rpc4.memescan.io/"], "19845": [], "21816": ["https://seed.omlira.com"], "23294": ["https://1rpc.io/oasis/sapphire"], "24484": [], "24734": ["https://node1.mintme.com"], "31102": [], "32520": ["https://rpc.icecreamswap.com", "https://nodes.vefinetwork.org/bitgert", "https://flux-rpc.brisescan.com", "https://flux-rpc1.brisescan.com", "https://flux-rpc2.brisescan.com", "https://rpc-1.chainrpc.com", "https://rpc-2.chainrpc.com", "https://node1.serverrpc.com", "https://node2.serverrpc.com"], "32659": ["https://mainnet.fusionnetwork.io"], "34443": ["https://1rpc.io/mode"], "35011": [], "35441": [], "39797": ["https://nodeapi.energi.network", "https://explorer.energi.network/api/eth-rpc"], "39815": ["https://mainnet.oho.ai", "https://mainnet-rpc.ohoscan.com", "https://mainnet-rpc2.ohoscan.com"], "42069": [], "42161": ["https://arb1.arbitrum.io/rpc", "https://arbitrum.llamarpc.com", "https://1rpc.io/arb", "https://arb-pokt.nodies.app", "https://endpoints.omniatech.io/v1/arbitrum/one/public", "https://arbitrum-one-rpc.publicnode.com", "https://arbitrum.meowrpc.com", "https://arbitrum.drpc.org", "https://rpc.tornadoeth.cash/arbitrum"], "42170": ["https://nova.arbitrum.io/rpc", "https://arbitrum-nova-rpc.publicnode.com", "https://arbitrum-nova.drpc.org"], "42220": ["https://forno.celo.org", "https://1rpc.io/celo"], "42262": ["https://emerald.oasis.dev/", "https://1rpc.io/oasis/emerald"], "43110": [], "43113": ["https://api.avax-test.network/ext/bc/C/rpc", "https://avalanchetestapi.terminet.io/ext/bc/C/rpc", "https://endpoints.omniatech.io/v1/avax/fuji/public", "https://avalanche-fuji-c-chain-rpc.publicnode.com"], "43114": ["https://api.avax.network/ext/bc/C/rpc", "https://avalanche.public-rpc.com", "https://avalancheapi.terminet.io/ext/bc/C/rpc", "https://avalanche-c-chain-rpc.publicnode.com", "https://1rpc.io/avax/c", "https://avax-pokt.nodies.app/ext/bc/C/rpc", "https://endpoints.omniatech.io/v1/avax/mainnet/public", "https://avax.meowrpc.com", "https://avalanche.drpc.org", "https://rpc.tornadoeth.cash/avax"], "45000": ["https://rpc.autobahn.network"], "47805": ["https://rpc.rei.network"], "50001": ["https://rpc.oracle.liveplex.io"], "53935": ["https://avax-pokt.nodies.app/ext/bc/q2aTwKuyzgs8pynF7UXBZCU7DejbZbZ6EUyHr3JQzYgwNPUPi/rpc"], "55555": ["https://rei-rpc.moonrhythm.io"], "59140": [], "59144": ["https://1rpc.io/linea", "https://linea.drpc.org", "https://linea.decubate.com"], "63000": ["https://rpc.ecredits.com"], "70000": [], "70001": ["https://proxy1.thinkiumrpc.net/"], "70002": ["https://proxy2.thinkiumrpc.net/"], "70103": ["https://proxy103.thinkiumrpc.net/"], "71394": ["https://mainnet.godwoken.io/rpc/eth-wallet"], "80001": ["https://rpc-mumbai.maticvigil.com", "https://polygontestapi.terminet.io/rpc", "https://endpoints.omniatech.io/v1/matic/mumbai/public", "https://polygon-mumbai-bor-rpc.publicnode.com", "https://polygon-mumbai-pokt.nodies.app"], "81457": ["https://rpc.blast.io", "https://blast.din.dev/rpc", "https://blastl2-mainnet.public.blastapi.io", "https://blast.blockpi.network/v1/rpc/public"], "84531": ["https://1rpc.io/base-goerli", "https://base-goerli-rpc.publicnode.com", "https://endpoints.omniatech.io/v1/base/goerli/public"], "84532": ["https://rpc.notadegen.com/base/sepolia"], "99999": ["https://rpc.uschain.network"], "100000": [], "100001": [], "100002": [], "100003": [], "100004": [], "100005": [], "100006": [], "100007": [], "100008": [], "103090": ["https://evm.cryptocurrencydevs.org", "https://rpc.crystaleum.org"], "108801": [], "110000": [], "110001": [], "110002": [], "110003": [], "110004": [], "110005": [], "110006": [], "110007": [], "110008": [], "142857": [], "167008": [], "200625": ["https://boot2.akroma.org/"], "201018": ["https://openapi.alaya.network/rpc"], "210425": [], "246529": [], "256256": ["https://mainnet.block.caduceus.foundation"], "281121": [], "314159": [], "333999": ["https://rpc.polis.tech"], "363636": ["https://dgs-rpc.digitsoul.co.th"], "420420": ["https://mainnet.kekchain.com", "https://rpc2.kekchain.com", "https://kek.interchained.org", "https://kekchain.interchained.org"], "420666": ["https://testnet.kekchain.com"], "421613": ["https://endpoints.omniatech.io/v1/arbitrum/goerli/public", "https://arbitrum-goerli-rpc.publicnode.com", "https://api.stateless.solutions/arbitrum-one/v1/77abba85-53e4-4430-a332-a46deb9900ea"], "421614": [], "431140": ["https://rpc.markr.io/ext/"], "512512": ["https://galaxy.block.caduceus.foundation"], "534351": ["https://scroll-sepolia.drpc.org", "https://scroll-testnet.rpc.grove.city/v1/a7a7c8e2"], "534352": ["https://rpc.scroll.io", "https://rpc-scroll.icecreamswap.com", "https://1rpc.io/scroll", "https://scroll.drpc.org", "https://scroll-mainnet.rpc.grove.city/v1/a7a7c8e2"], "534353": [], "534354": ["https://prealpha-rpc.scroll.io/l2"], "827431": ["https://mainnet-rpc.curvescan.io"], "888888": ["https://infragrid.v.network/ethereum/compatible"], "900000": ["https://api.posichain.org", "https://api.s0.posichain.org"], "955305": ["https://host-76-74-28-226.contentfabric.io/eth/"], "1313114": ["https://rpc.ethoprotocol.com"], "1313500": ["https://rpc.xerom.org"], "2099156": ["https://mainnet.plian.io/pchain"], "7762959": [], "8007736": ["https://mainnet.plian.io/child_0"], "10067275": ["https://testnet.plian.io/child_test"], "11155111": ["https://rpc.notadegen.com/eth/sepolia", "https://endpoints.omniatech.io/v1/eth/sepolia/public", "https://ethereum-sepolia-rpc.publicnode.com", "https://1rpc.io/sepolia"], "11155420": [], "13371337": [], "16658437": ["https://testnet.plian.io/testnet"], "18289463": [], "20181205": ["https://hz.rpc.qkiscan.cn", "https://rpc1.qkiscan.cn", "https://rpc2.qkiscan.cn", "https://rpc3.qkiscan.cn", "https://rpc1.qkiscan.io", "https://rpc2.qkiscan.io", "https://rpc3.qkiscan.io"], "28945486": [], "35855456": ["https://node.joys.digital"], "61717561": ["https://c.onical.org"], "88888888": ["https://rpc.teamblockchain.team"], "168587773": [], "192837465": ["https://mainnet.gather.network"], "245022926": ["https://devnet.neonevm.org"], "245022934": ["https://neon-proxy-mainnet.solana.p2p.org", "https://neon-mainnet.everstake.one"], "311752642": ["https://mainnet-rpc.oneledger.network"], "356256156": ["https://testnet.gather.network"], "486217935": ["https://devnet.gather.network"], "1122334455": [], "1313161554": ["https://mainnet.aurora.dev", "https://endpoints.omniatech.io/v1/aurora/mainnet/public", "https://1rpc.io/aurora", "https://aurora.drpc.org"], "1313161555": ["https://endpoints.omniatech.io/v1/aurora/testnet/public"], "1313161556": [], "1666600000": ["https://api.harmony.one", "https://a.api.s0.t.hmny.io", "https://api.s0.t.hmny.io", "https://1rpc.io/one", "https://hmyone-pokt.nodies.app", "https://endpoints.omniatech.io/v1/harmony/mainnet-0/public"], "1666600001": ["https://s1.api.harmony.one"], "1666600002": ["https://s2.api.harmony.one"], "1666600003": [], "1666700000": ["https://endpoints.omniatech.io/v1/harmony/testnet-0/public"], "2021121117": [], "3125659152": [], "11297108109": [], "836542336838601": [], "11297108099": [], "197710212030": ["https://rpc.ntity.io"], "6022140761023": ["https://molereum.jdubedition.com"] };
    }
  });
  var require_buffer = __commonJS2({
    "(disabled):buffer"() {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
    }
  });
  var require_bn = __commonJS2({
    "node_modules/bn.js/lib/bn.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      (function(module2, exports2) {
        "use strict";
        function assert22(val, msg) {
          if (!val)
            throw new Error(msg || "Assertion failed");
        }
        function inherits2(ctor, superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
        function BN32(number, base22, endian) {
          if (BN32.isBN(number)) {
            return number;
          }
          this.negative = 0;
          this.words = null;
          this.length = 0;
          this.red = null;
          if (number !== null) {
            if (base22 === "le" || base22 === "be") {
              endian = base22;
              base22 = 10;
            }
            this._init(number || 0, base22 || 10, endian || "be");
          }
        }
        if (typeof module2 === "object") {
          module2.exports = BN32;
        } else {
          exports2.BN = BN32;
        }
        BN32.BN = BN32;
        BN32.wordSize = 26;
        var Buffer2;
        try {
          if (typeof window !== "undefined" && typeof window.Buffer !== "undefined") {
            Buffer2 = window.Buffer;
          } else {
            Buffer2 = require_buffer().Buffer;
          }
        } catch (e) {
        }
        BN32.isBN = function isBN(num) {
          if (num instanceof BN32) {
            return true;
          }
          return num !== null && typeof num === "object" && num.constructor.wordSize === BN32.wordSize && Array.isArray(num.words);
        };
        BN32.max = function max(left, right) {
          if (left.cmp(right) > 0)
            return left;
          return right;
        };
        BN32.min = function min(left, right) {
          if (left.cmp(right) < 0)
            return left;
          return right;
        };
        BN32.prototype._init = function init22(number, base22, endian) {
          if (typeof number === "number") {
            return this._initNumber(number, base22, endian);
          }
          if (typeof number === "object") {
            return this._initArray(number, base22, endian);
          }
          if (base22 === "hex") {
            base22 = 16;
          }
          assert22(base22 === (base22 | 0) && base22 >= 2 && base22 <= 36);
          number = number.toString().replace(/\s+/g, "");
          var start = 0;
          if (number[0] === "-") {
            start++;
            this.negative = 1;
          }
          if (start < number.length) {
            if (base22 === 16) {
              this._parseHex(number, start, endian);
            } else {
              this._parseBase(number, base22, start);
              if (endian === "le") {
                this._initArray(this.toArray(), base22, endian);
              }
            }
          }
        };
        BN32.prototype._initNumber = function _initNumber(number, base22, endian) {
          if (number < 0) {
            this.negative = 1;
            number = -number;
          }
          if (number < 67108864) {
            this.words = [number & 67108863];
            this.length = 1;
          } else if (number < 4503599627370496) {
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863
            ];
            this.length = 2;
          } else {
            assert22(number < 9007199254740992);
            this.words = [
              number & 67108863,
              number / 67108864 & 67108863,
              1
            ];
            this.length = 3;
          }
          if (endian !== "le")
            return;
          this._initArray(this.toArray(), base22, endian);
        };
        BN32.prototype._initArray = function _initArray(number, base22, endian) {
          assert22(typeof number.length === "number");
          if (number.length <= 0) {
            this.words = [0];
            this.length = 1;
            return this;
          }
          this.length = Math.ceil(number.length / 3);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var j, w;
          var off = 0;
          if (endian === "be") {
            for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
              w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
              this.words[j] |= w << off & 67108863;
              this.words[j + 1] = w >>> 26 - off & 67108863;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          } else if (endian === "le") {
            for (i = 0, j = 0; i < number.length; i += 3) {
              w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
              this.words[j] |= w << off & 67108863;
              this.words[j + 1] = w >>> 26 - off & 67108863;
              off += 24;
              if (off >= 26) {
                off -= 26;
                j++;
              }
            }
          }
          return this._strip();
        };
        function parseHex4Bits(string, index2) {
          var c = string.charCodeAt(index2);
          if (c >= 48 && c <= 57) {
            return c - 48;
          } else if (c >= 65 && c <= 70) {
            return c - 55;
          } else if (c >= 97 && c <= 102) {
            return c - 87;
          } else {
            assert22(false, "Invalid character in " + string);
          }
        }
        function parseHexByte(string, lowerBound, index2) {
          var r22 = parseHex4Bits(string, index2);
          if (index2 - 1 >= lowerBound) {
            r22 |= parseHex4Bits(string, index2 - 1) << 4;
          }
          return r22;
        }
        BN32.prototype._parseHex = function _parseHex(number, start, endian) {
          this.length = Math.ceil((number.length - start) / 6);
          this.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            this.words[i] = 0;
          }
          var off = 0;
          var j = 0;
          var w;
          if (endian === "be") {
            for (i = number.length - 1; i >= start; i -= 2) {
              w = parseHexByte(number, start, i) << off;
              this.words[j] |= w & 67108863;
              if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
              } else {
                off += 8;
              }
            }
          } else {
            var parseLength = number.length - start;
            for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {
              w = parseHexByte(number, start, i) << off;
              this.words[j] |= w & 67108863;
              if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
              } else {
                off += 8;
              }
            }
          }
          this._strip();
        };
        function parseBase(str, start, end, mul32) {
          var r22 = 0;
          var b = 0;
          var len = Math.min(str.length, end);
          for (var i = start; i < len; i++) {
            var c = str.charCodeAt(i) - 48;
            r22 *= mul32;
            if (c >= 49) {
              b = c - 49 + 10;
            } else if (c >= 17) {
              b = c - 17 + 10;
            } else {
              b = c;
            }
            assert22(c >= 0 && b < mul32, "Invalid character");
            r22 += b;
          }
          return r22;
        }
        BN32.prototype._parseBase = function _parseBase(number, base22, start) {
          this.words = [0];
          this.length = 1;
          for (var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base22) {
            limbLen++;
          }
          limbLen--;
          limbPow = limbPow / base22 | 0;
          var total = number.length - start;
          var mod = total % limbLen;
          var end = Math.min(total, total - mod) + start;
          var word = 0;
          for (var i = start; i < end; i += limbLen) {
            word = parseBase(number, i, i + limbLen, base22);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base22);
            for (i = 0; i < mod; i++) {
              pow *= base22;
            }
            this.imuln(pow);
            if (this.words[0] + word < 67108864) {
              this.words[0] += word;
            } else {
              this._iaddn(word);
            }
          }
          this._strip();
        };
        BN32.prototype.copy = function copy(dest) {
          dest.words = new Array(this.length);
          for (var i = 0; i < this.length; i++) {
            dest.words[i] = this.words[i];
          }
          dest.length = this.length;
          dest.negative = this.negative;
          dest.red = this.red;
        };
        function move(dest, src) {
          dest.words = src.words;
          dest.length = src.length;
          dest.negative = src.negative;
          dest.red = src.red;
        }
        BN32.prototype._move = function _move(dest) {
          move(dest, this);
        };
        BN32.prototype.clone = function clone() {
          var r22 = new BN32(null);
          this.copy(r22);
          return r22;
        };
        BN32.prototype._expand = function _expand(size) {
          while (this.length < size) {
            this.words[this.length++] = 0;
          }
          return this;
        };
        BN32.prototype._strip = function strip() {
          while (this.length > 1 && this.words[this.length - 1] === 0) {
            this.length--;
          }
          return this._normSign();
        };
        BN32.prototype._normSign = function _normSign() {
          if (this.length === 1 && this.words[0] === 0) {
            this.negative = 0;
          }
          return this;
        };
        if (typeof Symbol !== "undefined" && typeof Symbol.for === "function") {
          try {
            BN32.prototype[Symbol.for("nodejs.util.inspect.custom")] = inspect42;
          } catch (e) {
            BN32.prototype.inspect = inspect42;
          }
        } else {
          BN32.prototype.inspect = inspect42;
        }
        function inspect42() {
          return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
        }
        var zeros2 = [
          "",
          "0",
          "00",
          "000",
          "0000",
          "00000",
          "000000",
          "0000000",
          "00000000",
          "000000000",
          "0000000000",
          "00000000000",
          "000000000000",
          "0000000000000",
          "00000000000000",
          "000000000000000",
          "0000000000000000",
          "00000000000000000",
          "000000000000000000",
          "0000000000000000000",
          "00000000000000000000",
          "000000000000000000000",
          "0000000000000000000000",
          "00000000000000000000000",
          "000000000000000000000000",
          "0000000000000000000000000"
        ];
        var groupSizes = [
          0,
          0,
          25,
          16,
          12,
          11,
          10,
          9,
          8,
          8,
          7,
          7,
          7,
          7,
          6,
          6,
          6,
          6,
          6,
          6,
          6,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5,
          5
        ];
        var groupBases = [
          0,
          0,
          33554432,
          43046721,
          16777216,
          48828125,
          60466176,
          40353607,
          16777216,
          43046721,
          1e7,
          19487171,
          35831808,
          62748517,
          7529536,
          11390625,
          16777216,
          24137569,
          34012224,
          47045881,
          64e6,
          4084101,
          5153632,
          6436343,
          7962624,
          9765625,
          11881376,
          14348907,
          17210368,
          20511149,
          243e5,
          28629151,
          33554432,
          39135393,
          45435424,
          52521875,
          60466176
        ];
        BN32.prototype.toString = function toString3(base22, padding22) {
          base22 = base22 || 10;
          padding22 = padding22 | 0 || 1;
          var out;
          if (base22 === 16 || base22 === "hex") {
            out = "";
            var off = 0;
            var carry = 0;
            for (var i = 0; i < this.length; i++) {
              var w = this.words[i];
              var word = ((w << off | carry) & 16777215).toString(16);
              carry = w >>> 24 - off & 16777215;
              off += 2;
              if (off >= 26) {
                off -= 26;
                i--;
              }
              if (carry !== 0 || i !== this.length - 1) {
                out = zeros2[6 - word.length] + word + out;
              } else {
                out = word + out;
              }
            }
            if (carry !== 0) {
              out = carry.toString(16) + out;
            }
            while (out.length % padding22 !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          if (base22 === (base22 | 0) && base22 >= 2 && base22 <= 36) {
            var groupSize = groupSizes[base22];
            var groupBase = groupBases[base22];
            out = "";
            var c = this.clone();
            c.negative = 0;
            while (!c.isZero()) {
              var r22 = c.modrn(groupBase).toString(base22);
              c = c.idivn(groupBase);
              if (!c.isZero()) {
                out = zeros2[groupSize - r22.length] + r22 + out;
              } else {
                out = r22 + out;
              }
            }
            if (this.isZero()) {
              out = "0" + out;
            }
            while (out.length % padding22 !== 0) {
              out = "0" + out;
            }
            if (this.negative !== 0) {
              out = "-" + out;
            }
            return out;
          }
          assert22(false, "Base should be between 2 and 36");
        };
        BN32.prototype.toNumber = function toNumber2() {
          var ret = this.words[0];
          if (this.length === 2) {
            ret += this.words[1] * 67108864;
          } else if (this.length === 3 && this.words[2] === 1) {
            ret += 4503599627370496 + this.words[1] * 67108864;
          } else if (this.length > 2) {
            assert22(false, "Number can only safely store up to 53 bits");
          }
          return this.negative !== 0 ? -ret : ret;
        };
        BN32.prototype.toJSON = function toJSON32() {
          return this.toString(16, 2);
        };
        if (Buffer2) {
          BN32.prototype.toBuffer = function toBuffer(endian, length) {
            return this.toArrayLike(Buffer2, endian, length);
          };
        }
        BN32.prototype.toArray = function toArray22(endian, length) {
          return this.toArrayLike(Array, endian, length);
        };
        var allocate = function allocate2(ArrayType, size) {
          if (ArrayType.allocUnsafe) {
            return ArrayType.allocUnsafe(size);
          }
          return new ArrayType(size);
        };
        BN32.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
          this._strip();
          var byteLength = this.byteLength();
          var reqLength = length || Math.max(1, byteLength);
          assert22(byteLength <= reqLength, "byte array longer than desired length");
          assert22(reqLength > 0, "Requested array length <= 0");
          var res = allocate(ArrayType, reqLength);
          var postfix = endian === "le" ? "LE" : "BE";
          this["_toArrayLike" + postfix](res, byteLength);
          return res;
        };
        BN32.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
          var position = 0;
          var carry = 0;
          for (var i = 0, shift = 0; i < this.length; i++) {
            var word = this.words[i] << shift | carry;
            res[position++] = word & 255;
            if (position < res.length) {
              res[position++] = word >> 8 & 255;
            }
            if (position < res.length) {
              res[position++] = word >> 16 & 255;
            }
            if (shift === 6) {
              if (position < res.length) {
                res[position++] = word >> 24 & 255;
              }
              carry = 0;
              shift = 0;
            } else {
              carry = word >>> 24;
              shift += 2;
            }
          }
          if (position < res.length) {
            res[position++] = carry;
            while (position < res.length) {
              res[position++] = 0;
            }
          }
        };
        BN32.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
          var position = res.length - 1;
          var carry = 0;
          for (var i = 0, shift = 0; i < this.length; i++) {
            var word = this.words[i] << shift | carry;
            res[position--] = word & 255;
            if (position >= 0) {
              res[position--] = word >> 8 & 255;
            }
            if (position >= 0) {
              res[position--] = word >> 16 & 255;
            }
            if (shift === 6) {
              if (position >= 0) {
                res[position--] = word >> 24 & 255;
              }
              carry = 0;
              shift = 0;
            } else {
              carry = word >>> 24;
              shift += 2;
            }
          }
          if (position >= 0) {
            res[position--] = carry;
            while (position >= 0) {
              res[position--] = 0;
            }
          }
        };
        if (Math.clz32) {
          BN32.prototype._countBits = function _countBits(w) {
            return 32 - Math.clz32(w);
          };
        } else {
          BN32.prototype._countBits = function _countBits(w) {
            var t = w;
            var r22 = 0;
            if (t >= 4096) {
              r22 += 13;
              t >>>= 13;
            }
            if (t >= 64) {
              r22 += 7;
              t >>>= 7;
            }
            if (t >= 8) {
              r22 += 4;
              t >>>= 4;
            }
            if (t >= 2) {
              r22 += 2;
              t >>>= 2;
            }
            return r22 + t;
          };
        }
        BN32.prototype._zeroBits = function _zeroBits(w) {
          if (w === 0)
            return 26;
          var t = w;
          var r22 = 0;
          if ((t & 8191) === 0) {
            r22 += 13;
            t >>>= 13;
          }
          if ((t & 127) === 0) {
            r22 += 7;
            t >>>= 7;
          }
          if ((t & 15) === 0) {
            r22 += 4;
            t >>>= 4;
          }
          if ((t & 3) === 0) {
            r22 += 2;
            t >>>= 2;
          }
          if ((t & 1) === 0) {
            r22++;
          }
          return r22;
        };
        BN32.prototype.bitLength = function bitLength() {
          var w = this.words[this.length - 1];
          var hi = this._countBits(w);
          return (this.length - 1) * 26 + hi;
        };
        function toBitArray(num) {
          var w = new Array(num.bitLength());
          for (var bit = 0; bit < w.length; bit++) {
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 1;
          }
          return w;
        }
        BN32.prototype.zeroBits = function zeroBits() {
          if (this.isZero())
            return 0;
          var r22 = 0;
          for (var i = 0; i < this.length; i++) {
            var b = this._zeroBits(this.words[i]);
            r22 += b;
            if (b !== 26)
              break;
          }
          return r22;
        };
        BN32.prototype.byteLength = function byteLength() {
          return Math.ceil(this.bitLength() / 8);
        };
        BN32.prototype.toTwos = function toTwos(width) {
          if (this.negative !== 0) {
            return this.abs().inotn(width).iaddn(1);
          }
          return this.clone();
        };
        BN32.prototype.fromTwos = function fromTwos(width) {
          if (this.testn(width - 1)) {
            return this.notn(width).iaddn(1).ineg();
          }
          return this.clone();
        };
        BN32.prototype.isNeg = function isNeg() {
          return this.negative !== 0;
        };
        BN32.prototype.neg = function neg32() {
          return this.clone().ineg();
        };
        BN32.prototype.ineg = function ineg() {
          if (!this.isZero()) {
            this.negative ^= 1;
          }
          return this;
        };
        BN32.prototype.iuor = function iuor(num) {
          while (this.length < num.length) {
            this.words[this.length++] = 0;
          }
          for (var i = 0; i < num.length; i++) {
            this.words[i] = this.words[i] | num.words[i];
          }
          return this._strip();
        };
        BN32.prototype.ior = function ior(num) {
          assert22((this.negative | num.negative) === 0);
          return this.iuor(num);
        };
        BN32.prototype.or = function or(num) {
          if (this.length > num.length)
            return this.clone().ior(num);
          return num.clone().ior(this);
        };
        BN32.prototype.uor = function uor(num) {
          if (this.length > num.length)
            return this.clone().iuor(num);
          return num.clone().iuor(this);
        };
        BN32.prototype.iuand = function iuand(num) {
          var b;
          if (this.length > num.length) {
            b = num;
          } else {
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = this.words[i] & num.words[i];
          }
          this.length = b.length;
          return this._strip();
        };
        BN32.prototype.iand = function iand(num) {
          assert22((this.negative | num.negative) === 0);
          return this.iuand(num);
        };
        BN32.prototype.and = function and(num) {
          if (this.length > num.length)
            return this.clone().iand(num);
          return num.clone().iand(this);
        };
        BN32.prototype.uand = function uand(num) {
          if (this.length > num.length)
            return this.clone().iuand(num);
          return num.clone().iuand(this);
        };
        BN32.prototype.iuxor = function iuxor(num) {
          var a;
          var b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          for (var i = 0; i < b.length; i++) {
            this.words[i] = a.words[i] ^ b.words[i];
          }
          if (this !== a) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = a.length;
          return this._strip();
        };
        BN32.prototype.ixor = function ixor(num) {
          assert22((this.negative | num.negative) === 0);
          return this.iuxor(num);
        };
        BN32.prototype.xor = function xor(num) {
          if (this.length > num.length)
            return this.clone().ixor(num);
          return num.clone().ixor(this);
        };
        BN32.prototype.uxor = function uxor(num) {
          if (this.length > num.length)
            return this.clone().iuxor(num);
          return num.clone().iuxor(this);
        };
        BN32.prototype.inotn = function inotn(width) {
          assert22(typeof width === "number" && width >= 0);
          var bytesNeeded = Math.ceil(width / 26) | 0;
          var bitsLeft = width % 26;
          this._expand(bytesNeeded);
          if (bitsLeft > 0) {
            bytesNeeded--;
          }
          for (var i = 0; i < bytesNeeded; i++) {
            this.words[i] = ~this.words[i] & 67108863;
          }
          if (bitsLeft > 0) {
            this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
          }
          return this._strip();
        };
        BN32.prototype.notn = function notn(width) {
          return this.clone().inotn(width);
        };
        BN32.prototype.setn = function setn(bit, val) {
          assert22(typeof bit === "number" && bit >= 0);
          var off = bit / 26 | 0;
          var wbit = bit % 26;
          this._expand(off + 1);
          if (val) {
            this.words[off] = this.words[off] | 1 << wbit;
          } else {
            this.words[off] = this.words[off] & ~(1 << wbit);
          }
          return this._strip();
        };
        BN32.prototype.iadd = function iadd(num) {
          var r22;
          if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r22 = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
          } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r22 = this.isub(num);
            num.negative = 1;
            return r22._normSign();
          }
          var a, b;
          if (this.length > num.length) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r22 = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r22 & 67108863;
            carry = r22 >>> 26;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r22 = (a.words[i] | 0) + carry;
            this.words[i] = r22 & 67108863;
            carry = r22 >>> 26;
          }
          this.length = a.length;
          if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
          } else if (a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          return this;
        };
        BN32.prototype.add = function add32(num) {
          var res;
          if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
          } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
          }
          if (this.length > num.length)
            return this.clone().iadd(num);
          return num.clone().iadd(this);
        };
        BN32.prototype.isub = function isub(num) {
          if (num.negative !== 0) {
            num.negative = 0;
            var r22 = this.iadd(num);
            num.negative = 1;
            return r22._normSign();
          } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
          }
          var cmp = this.cmp(num);
          if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
          }
          var a, b;
          if (cmp > 0) {
            a = this;
            b = num;
          } else {
            a = num;
            b = this;
          }
          var carry = 0;
          for (var i = 0; i < b.length; i++) {
            r22 = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r22 >> 26;
            this.words[i] = r22 & 67108863;
          }
          for (; carry !== 0 && i < a.length; i++) {
            r22 = (a.words[i] | 0) + carry;
            carry = r22 >> 26;
            this.words[i] = r22 & 67108863;
          }
          if (carry === 0 && i < a.length && a !== this) {
            for (; i < a.length; i++) {
              this.words[i] = a.words[i];
            }
          }
          this.length = Math.max(this.length, i);
          if (a !== this) {
            this.negative = 1;
          }
          return this._strip();
        };
        BN32.prototype.sub = function sub(num) {
          return this.clone().isub(num);
        };
        function smallMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          var len = self2.length + num.length | 0;
          out.length = len;
          len = len - 1 | 0;
          var a = self2.words[0] | 0;
          var b = num.words[0] | 0;
          var r22 = a * b;
          var lo = r22 & 67108863;
          var carry = r22 / 67108864 | 0;
          out.words[0] = lo;
          for (var k = 1; k < len; k++) {
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
              var i = k - j | 0;
              a = self2.words[i] | 0;
              b = num.words[j] | 0;
              r22 = a * b + rword;
              ncarry += r22 / 67108864 | 0;
              rword = r22 & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
          }
          if (carry !== 0) {
            out.words[k] = carry | 0;
          } else {
            out.length--;
          }
          return out._strip();
        }
        var comb10MulTo = function comb10MulTo2(self2, num, out) {
          var a = self2.words;
          var b = num.words;
          var o = out.words;
          var c = 0;
          var lo;
          var mid;
          var hi;
          var a0 = a[0] | 0;
          var al0 = a0 & 8191;
          var ah0 = a0 >>> 13;
          var a1 = a[1] | 0;
          var al1 = a1 & 8191;
          var ah1 = a1 >>> 13;
          var a2 = a[2] | 0;
          var al2 = a2 & 8191;
          var ah2 = a2 >>> 13;
          var a3 = a[3] | 0;
          var al3 = a3 & 8191;
          var ah3 = a3 >>> 13;
          var a4 = a[4] | 0;
          var al4 = a4 & 8191;
          var ah4 = a4 >>> 13;
          var a5 = a[5] | 0;
          var al5 = a5 & 8191;
          var ah5 = a5 >>> 13;
          var a6 = a[6] | 0;
          var al6 = a6 & 8191;
          var ah6 = a6 >>> 13;
          var a7 = a[7] | 0;
          var al7 = a7 & 8191;
          var ah7 = a7 >>> 13;
          var a8 = a[8] | 0;
          var al8 = a8 & 8191;
          var ah8 = a8 >>> 13;
          var a9 = a[9] | 0;
          var al9 = a9 & 8191;
          var ah9 = a9 >>> 13;
          var b0 = b[0] | 0;
          var bl0 = b0 & 8191;
          var bh0 = b0 >>> 13;
          var b1 = b[1] | 0;
          var bl1 = b1 & 8191;
          var bh1 = b1 >>> 13;
          var b2 = b[2] | 0;
          var bl2 = b2 & 8191;
          var bh2 = b2 >>> 13;
          var b3 = b[3] | 0;
          var bl3 = b3 & 8191;
          var bh3 = b3 >>> 13;
          var b4 = b[4] | 0;
          var bl4 = b4 & 8191;
          var bh4 = b4 >>> 13;
          var b5 = b[5] | 0;
          var bl5 = b5 & 8191;
          var bh5 = b5 >>> 13;
          var b6 = b[6] | 0;
          var bl6 = b6 & 8191;
          var bh6 = b6 >>> 13;
          var b7 = b[7] | 0;
          var bl7 = b7 & 8191;
          var bh7 = b7 >>> 13;
          var b8 = b[8] | 0;
          var bl8 = b8 & 8191;
          var bh8 = b8 >>> 13;
          var b9 = b[9] | 0;
          var bl9 = b9 & 8191;
          var bh9 = b9 >>> 13;
          out.negative = self2.negative ^ num.negative;
          out.length = 19;
          lo = Math.imul(al0, bl0);
          mid = Math.imul(al0, bh0);
          mid = mid + Math.imul(ah0, bl0) | 0;
          hi = Math.imul(ah0, bh0);
          var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
          w0 &= 67108863;
          lo = Math.imul(al1, bl0);
          mid = Math.imul(al1, bh0);
          mid = mid + Math.imul(ah1, bl0) | 0;
          hi = Math.imul(ah1, bh0);
          lo = lo + Math.imul(al0, bl1) | 0;
          mid = mid + Math.imul(al0, bh1) | 0;
          mid = mid + Math.imul(ah0, bl1) | 0;
          hi = hi + Math.imul(ah0, bh1) | 0;
          var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
          w1 &= 67108863;
          lo = Math.imul(al2, bl0);
          mid = Math.imul(al2, bh0);
          mid = mid + Math.imul(ah2, bl0) | 0;
          hi = Math.imul(ah2, bh0);
          lo = lo + Math.imul(al1, bl1) | 0;
          mid = mid + Math.imul(al1, bh1) | 0;
          mid = mid + Math.imul(ah1, bl1) | 0;
          hi = hi + Math.imul(ah1, bh1) | 0;
          lo = lo + Math.imul(al0, bl2) | 0;
          mid = mid + Math.imul(al0, bh2) | 0;
          mid = mid + Math.imul(ah0, bl2) | 0;
          hi = hi + Math.imul(ah0, bh2) | 0;
          var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
          w2 &= 67108863;
          lo = Math.imul(al3, bl0);
          mid = Math.imul(al3, bh0);
          mid = mid + Math.imul(ah3, bl0) | 0;
          hi = Math.imul(ah3, bh0);
          lo = lo + Math.imul(al2, bl1) | 0;
          mid = mid + Math.imul(al2, bh1) | 0;
          mid = mid + Math.imul(ah2, bl1) | 0;
          hi = hi + Math.imul(ah2, bh1) | 0;
          lo = lo + Math.imul(al1, bl2) | 0;
          mid = mid + Math.imul(al1, bh2) | 0;
          mid = mid + Math.imul(ah1, bl2) | 0;
          hi = hi + Math.imul(ah1, bh2) | 0;
          lo = lo + Math.imul(al0, bl3) | 0;
          mid = mid + Math.imul(al0, bh3) | 0;
          mid = mid + Math.imul(ah0, bl3) | 0;
          hi = hi + Math.imul(ah0, bh3) | 0;
          var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
          w3 &= 67108863;
          lo = Math.imul(al4, bl0);
          mid = Math.imul(al4, bh0);
          mid = mid + Math.imul(ah4, bl0) | 0;
          hi = Math.imul(ah4, bh0);
          lo = lo + Math.imul(al3, bl1) | 0;
          mid = mid + Math.imul(al3, bh1) | 0;
          mid = mid + Math.imul(ah3, bl1) | 0;
          hi = hi + Math.imul(ah3, bh1) | 0;
          lo = lo + Math.imul(al2, bl2) | 0;
          mid = mid + Math.imul(al2, bh2) | 0;
          mid = mid + Math.imul(ah2, bl2) | 0;
          hi = hi + Math.imul(ah2, bh2) | 0;
          lo = lo + Math.imul(al1, bl3) | 0;
          mid = mid + Math.imul(al1, bh3) | 0;
          mid = mid + Math.imul(ah1, bl3) | 0;
          hi = hi + Math.imul(ah1, bh3) | 0;
          lo = lo + Math.imul(al0, bl4) | 0;
          mid = mid + Math.imul(al0, bh4) | 0;
          mid = mid + Math.imul(ah0, bl4) | 0;
          hi = hi + Math.imul(ah0, bh4) | 0;
          var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
          w4 &= 67108863;
          lo = Math.imul(al5, bl0);
          mid = Math.imul(al5, bh0);
          mid = mid + Math.imul(ah5, bl0) | 0;
          hi = Math.imul(ah5, bh0);
          lo = lo + Math.imul(al4, bl1) | 0;
          mid = mid + Math.imul(al4, bh1) | 0;
          mid = mid + Math.imul(ah4, bl1) | 0;
          hi = hi + Math.imul(ah4, bh1) | 0;
          lo = lo + Math.imul(al3, bl2) | 0;
          mid = mid + Math.imul(al3, bh2) | 0;
          mid = mid + Math.imul(ah3, bl2) | 0;
          hi = hi + Math.imul(ah3, bh2) | 0;
          lo = lo + Math.imul(al2, bl3) | 0;
          mid = mid + Math.imul(al2, bh3) | 0;
          mid = mid + Math.imul(ah2, bl3) | 0;
          hi = hi + Math.imul(ah2, bh3) | 0;
          lo = lo + Math.imul(al1, bl4) | 0;
          mid = mid + Math.imul(al1, bh4) | 0;
          mid = mid + Math.imul(ah1, bl4) | 0;
          hi = hi + Math.imul(ah1, bh4) | 0;
          lo = lo + Math.imul(al0, bl5) | 0;
          mid = mid + Math.imul(al0, bh5) | 0;
          mid = mid + Math.imul(ah0, bl5) | 0;
          hi = hi + Math.imul(ah0, bh5) | 0;
          var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
          w5 &= 67108863;
          lo = Math.imul(al6, bl0);
          mid = Math.imul(al6, bh0);
          mid = mid + Math.imul(ah6, bl0) | 0;
          hi = Math.imul(ah6, bh0);
          lo = lo + Math.imul(al5, bl1) | 0;
          mid = mid + Math.imul(al5, bh1) | 0;
          mid = mid + Math.imul(ah5, bl1) | 0;
          hi = hi + Math.imul(ah5, bh1) | 0;
          lo = lo + Math.imul(al4, bl2) | 0;
          mid = mid + Math.imul(al4, bh2) | 0;
          mid = mid + Math.imul(ah4, bl2) | 0;
          hi = hi + Math.imul(ah4, bh2) | 0;
          lo = lo + Math.imul(al3, bl3) | 0;
          mid = mid + Math.imul(al3, bh3) | 0;
          mid = mid + Math.imul(ah3, bl3) | 0;
          hi = hi + Math.imul(ah3, bh3) | 0;
          lo = lo + Math.imul(al2, bl4) | 0;
          mid = mid + Math.imul(al2, bh4) | 0;
          mid = mid + Math.imul(ah2, bl4) | 0;
          hi = hi + Math.imul(ah2, bh4) | 0;
          lo = lo + Math.imul(al1, bl5) | 0;
          mid = mid + Math.imul(al1, bh5) | 0;
          mid = mid + Math.imul(ah1, bl5) | 0;
          hi = hi + Math.imul(ah1, bh5) | 0;
          lo = lo + Math.imul(al0, bl6) | 0;
          mid = mid + Math.imul(al0, bh6) | 0;
          mid = mid + Math.imul(ah0, bl6) | 0;
          hi = hi + Math.imul(ah0, bh6) | 0;
          var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
          w6 &= 67108863;
          lo = Math.imul(al7, bl0);
          mid = Math.imul(al7, bh0);
          mid = mid + Math.imul(ah7, bl0) | 0;
          hi = Math.imul(ah7, bh0);
          lo = lo + Math.imul(al6, bl1) | 0;
          mid = mid + Math.imul(al6, bh1) | 0;
          mid = mid + Math.imul(ah6, bl1) | 0;
          hi = hi + Math.imul(ah6, bh1) | 0;
          lo = lo + Math.imul(al5, bl2) | 0;
          mid = mid + Math.imul(al5, bh2) | 0;
          mid = mid + Math.imul(ah5, bl2) | 0;
          hi = hi + Math.imul(ah5, bh2) | 0;
          lo = lo + Math.imul(al4, bl3) | 0;
          mid = mid + Math.imul(al4, bh3) | 0;
          mid = mid + Math.imul(ah4, bl3) | 0;
          hi = hi + Math.imul(ah4, bh3) | 0;
          lo = lo + Math.imul(al3, bl4) | 0;
          mid = mid + Math.imul(al3, bh4) | 0;
          mid = mid + Math.imul(ah3, bl4) | 0;
          hi = hi + Math.imul(ah3, bh4) | 0;
          lo = lo + Math.imul(al2, bl5) | 0;
          mid = mid + Math.imul(al2, bh5) | 0;
          mid = mid + Math.imul(ah2, bl5) | 0;
          hi = hi + Math.imul(ah2, bh5) | 0;
          lo = lo + Math.imul(al1, bl6) | 0;
          mid = mid + Math.imul(al1, bh6) | 0;
          mid = mid + Math.imul(ah1, bl6) | 0;
          hi = hi + Math.imul(ah1, bh6) | 0;
          lo = lo + Math.imul(al0, bl7) | 0;
          mid = mid + Math.imul(al0, bh7) | 0;
          mid = mid + Math.imul(ah0, bl7) | 0;
          hi = hi + Math.imul(ah0, bh7) | 0;
          var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
          w7 &= 67108863;
          lo = Math.imul(al8, bl0);
          mid = Math.imul(al8, bh0);
          mid = mid + Math.imul(ah8, bl0) | 0;
          hi = Math.imul(ah8, bh0);
          lo = lo + Math.imul(al7, bl1) | 0;
          mid = mid + Math.imul(al7, bh1) | 0;
          mid = mid + Math.imul(ah7, bl1) | 0;
          hi = hi + Math.imul(ah7, bh1) | 0;
          lo = lo + Math.imul(al6, bl2) | 0;
          mid = mid + Math.imul(al6, bh2) | 0;
          mid = mid + Math.imul(ah6, bl2) | 0;
          hi = hi + Math.imul(ah6, bh2) | 0;
          lo = lo + Math.imul(al5, bl3) | 0;
          mid = mid + Math.imul(al5, bh3) | 0;
          mid = mid + Math.imul(ah5, bl3) | 0;
          hi = hi + Math.imul(ah5, bh3) | 0;
          lo = lo + Math.imul(al4, bl4) | 0;
          mid = mid + Math.imul(al4, bh4) | 0;
          mid = mid + Math.imul(ah4, bl4) | 0;
          hi = hi + Math.imul(ah4, bh4) | 0;
          lo = lo + Math.imul(al3, bl5) | 0;
          mid = mid + Math.imul(al3, bh5) | 0;
          mid = mid + Math.imul(ah3, bl5) | 0;
          hi = hi + Math.imul(ah3, bh5) | 0;
          lo = lo + Math.imul(al2, bl6) | 0;
          mid = mid + Math.imul(al2, bh6) | 0;
          mid = mid + Math.imul(ah2, bl6) | 0;
          hi = hi + Math.imul(ah2, bh6) | 0;
          lo = lo + Math.imul(al1, bl7) | 0;
          mid = mid + Math.imul(al1, bh7) | 0;
          mid = mid + Math.imul(ah1, bl7) | 0;
          hi = hi + Math.imul(ah1, bh7) | 0;
          lo = lo + Math.imul(al0, bl8) | 0;
          mid = mid + Math.imul(al0, bh8) | 0;
          mid = mid + Math.imul(ah0, bl8) | 0;
          hi = hi + Math.imul(ah0, bh8) | 0;
          var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
          w8 &= 67108863;
          lo = Math.imul(al9, bl0);
          mid = Math.imul(al9, bh0);
          mid = mid + Math.imul(ah9, bl0) | 0;
          hi = Math.imul(ah9, bh0);
          lo = lo + Math.imul(al8, bl1) | 0;
          mid = mid + Math.imul(al8, bh1) | 0;
          mid = mid + Math.imul(ah8, bl1) | 0;
          hi = hi + Math.imul(ah8, bh1) | 0;
          lo = lo + Math.imul(al7, bl2) | 0;
          mid = mid + Math.imul(al7, bh2) | 0;
          mid = mid + Math.imul(ah7, bl2) | 0;
          hi = hi + Math.imul(ah7, bh2) | 0;
          lo = lo + Math.imul(al6, bl3) | 0;
          mid = mid + Math.imul(al6, bh3) | 0;
          mid = mid + Math.imul(ah6, bl3) | 0;
          hi = hi + Math.imul(ah6, bh3) | 0;
          lo = lo + Math.imul(al5, bl4) | 0;
          mid = mid + Math.imul(al5, bh4) | 0;
          mid = mid + Math.imul(ah5, bl4) | 0;
          hi = hi + Math.imul(ah5, bh4) | 0;
          lo = lo + Math.imul(al4, bl5) | 0;
          mid = mid + Math.imul(al4, bh5) | 0;
          mid = mid + Math.imul(ah4, bl5) | 0;
          hi = hi + Math.imul(ah4, bh5) | 0;
          lo = lo + Math.imul(al3, bl6) | 0;
          mid = mid + Math.imul(al3, bh6) | 0;
          mid = mid + Math.imul(ah3, bl6) | 0;
          hi = hi + Math.imul(ah3, bh6) | 0;
          lo = lo + Math.imul(al2, bl7) | 0;
          mid = mid + Math.imul(al2, bh7) | 0;
          mid = mid + Math.imul(ah2, bl7) | 0;
          hi = hi + Math.imul(ah2, bh7) | 0;
          lo = lo + Math.imul(al1, bl8) | 0;
          mid = mid + Math.imul(al1, bh8) | 0;
          mid = mid + Math.imul(ah1, bl8) | 0;
          hi = hi + Math.imul(ah1, bh8) | 0;
          lo = lo + Math.imul(al0, bl9) | 0;
          mid = mid + Math.imul(al0, bh9) | 0;
          mid = mid + Math.imul(ah0, bl9) | 0;
          hi = hi + Math.imul(ah0, bh9) | 0;
          var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
          w9 &= 67108863;
          lo = Math.imul(al9, bl1);
          mid = Math.imul(al9, bh1);
          mid = mid + Math.imul(ah9, bl1) | 0;
          hi = Math.imul(ah9, bh1);
          lo = lo + Math.imul(al8, bl2) | 0;
          mid = mid + Math.imul(al8, bh2) | 0;
          mid = mid + Math.imul(ah8, bl2) | 0;
          hi = hi + Math.imul(ah8, bh2) | 0;
          lo = lo + Math.imul(al7, bl3) | 0;
          mid = mid + Math.imul(al7, bh3) | 0;
          mid = mid + Math.imul(ah7, bl3) | 0;
          hi = hi + Math.imul(ah7, bh3) | 0;
          lo = lo + Math.imul(al6, bl4) | 0;
          mid = mid + Math.imul(al6, bh4) | 0;
          mid = mid + Math.imul(ah6, bl4) | 0;
          hi = hi + Math.imul(ah6, bh4) | 0;
          lo = lo + Math.imul(al5, bl5) | 0;
          mid = mid + Math.imul(al5, bh5) | 0;
          mid = mid + Math.imul(ah5, bl5) | 0;
          hi = hi + Math.imul(ah5, bh5) | 0;
          lo = lo + Math.imul(al4, bl6) | 0;
          mid = mid + Math.imul(al4, bh6) | 0;
          mid = mid + Math.imul(ah4, bl6) | 0;
          hi = hi + Math.imul(ah4, bh6) | 0;
          lo = lo + Math.imul(al3, bl7) | 0;
          mid = mid + Math.imul(al3, bh7) | 0;
          mid = mid + Math.imul(ah3, bl7) | 0;
          hi = hi + Math.imul(ah3, bh7) | 0;
          lo = lo + Math.imul(al2, bl8) | 0;
          mid = mid + Math.imul(al2, bh8) | 0;
          mid = mid + Math.imul(ah2, bl8) | 0;
          hi = hi + Math.imul(ah2, bh8) | 0;
          lo = lo + Math.imul(al1, bl9) | 0;
          mid = mid + Math.imul(al1, bh9) | 0;
          mid = mid + Math.imul(ah1, bl9) | 0;
          hi = hi + Math.imul(ah1, bh9) | 0;
          var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
          w10 &= 67108863;
          lo = Math.imul(al9, bl2);
          mid = Math.imul(al9, bh2);
          mid = mid + Math.imul(ah9, bl2) | 0;
          hi = Math.imul(ah9, bh2);
          lo = lo + Math.imul(al8, bl3) | 0;
          mid = mid + Math.imul(al8, bh3) | 0;
          mid = mid + Math.imul(ah8, bl3) | 0;
          hi = hi + Math.imul(ah8, bh3) | 0;
          lo = lo + Math.imul(al7, bl4) | 0;
          mid = mid + Math.imul(al7, bh4) | 0;
          mid = mid + Math.imul(ah7, bl4) | 0;
          hi = hi + Math.imul(ah7, bh4) | 0;
          lo = lo + Math.imul(al6, bl5) | 0;
          mid = mid + Math.imul(al6, bh5) | 0;
          mid = mid + Math.imul(ah6, bl5) | 0;
          hi = hi + Math.imul(ah6, bh5) | 0;
          lo = lo + Math.imul(al5, bl6) | 0;
          mid = mid + Math.imul(al5, bh6) | 0;
          mid = mid + Math.imul(ah5, bl6) | 0;
          hi = hi + Math.imul(ah5, bh6) | 0;
          lo = lo + Math.imul(al4, bl7) | 0;
          mid = mid + Math.imul(al4, bh7) | 0;
          mid = mid + Math.imul(ah4, bl7) | 0;
          hi = hi + Math.imul(ah4, bh7) | 0;
          lo = lo + Math.imul(al3, bl8) | 0;
          mid = mid + Math.imul(al3, bh8) | 0;
          mid = mid + Math.imul(ah3, bl8) | 0;
          hi = hi + Math.imul(ah3, bh8) | 0;
          lo = lo + Math.imul(al2, bl9) | 0;
          mid = mid + Math.imul(al2, bh9) | 0;
          mid = mid + Math.imul(ah2, bl9) | 0;
          hi = hi + Math.imul(ah2, bh9) | 0;
          var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
          w11 &= 67108863;
          lo = Math.imul(al9, bl3);
          mid = Math.imul(al9, bh3);
          mid = mid + Math.imul(ah9, bl3) | 0;
          hi = Math.imul(ah9, bh3);
          lo = lo + Math.imul(al8, bl4) | 0;
          mid = mid + Math.imul(al8, bh4) | 0;
          mid = mid + Math.imul(ah8, bl4) | 0;
          hi = hi + Math.imul(ah8, bh4) | 0;
          lo = lo + Math.imul(al7, bl5) | 0;
          mid = mid + Math.imul(al7, bh5) | 0;
          mid = mid + Math.imul(ah7, bl5) | 0;
          hi = hi + Math.imul(ah7, bh5) | 0;
          lo = lo + Math.imul(al6, bl6) | 0;
          mid = mid + Math.imul(al6, bh6) | 0;
          mid = mid + Math.imul(ah6, bl6) | 0;
          hi = hi + Math.imul(ah6, bh6) | 0;
          lo = lo + Math.imul(al5, bl7) | 0;
          mid = mid + Math.imul(al5, bh7) | 0;
          mid = mid + Math.imul(ah5, bl7) | 0;
          hi = hi + Math.imul(ah5, bh7) | 0;
          lo = lo + Math.imul(al4, bl8) | 0;
          mid = mid + Math.imul(al4, bh8) | 0;
          mid = mid + Math.imul(ah4, bl8) | 0;
          hi = hi + Math.imul(ah4, bh8) | 0;
          lo = lo + Math.imul(al3, bl9) | 0;
          mid = mid + Math.imul(al3, bh9) | 0;
          mid = mid + Math.imul(ah3, bl9) | 0;
          hi = hi + Math.imul(ah3, bh9) | 0;
          var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
          w12 &= 67108863;
          lo = Math.imul(al9, bl4);
          mid = Math.imul(al9, bh4);
          mid = mid + Math.imul(ah9, bl4) | 0;
          hi = Math.imul(ah9, bh4);
          lo = lo + Math.imul(al8, bl5) | 0;
          mid = mid + Math.imul(al8, bh5) | 0;
          mid = mid + Math.imul(ah8, bl5) | 0;
          hi = hi + Math.imul(ah8, bh5) | 0;
          lo = lo + Math.imul(al7, bl6) | 0;
          mid = mid + Math.imul(al7, bh6) | 0;
          mid = mid + Math.imul(ah7, bl6) | 0;
          hi = hi + Math.imul(ah7, bh6) | 0;
          lo = lo + Math.imul(al6, bl7) | 0;
          mid = mid + Math.imul(al6, bh7) | 0;
          mid = mid + Math.imul(ah6, bl7) | 0;
          hi = hi + Math.imul(ah6, bh7) | 0;
          lo = lo + Math.imul(al5, bl8) | 0;
          mid = mid + Math.imul(al5, bh8) | 0;
          mid = mid + Math.imul(ah5, bl8) | 0;
          hi = hi + Math.imul(ah5, bh8) | 0;
          lo = lo + Math.imul(al4, bl9) | 0;
          mid = mid + Math.imul(al4, bh9) | 0;
          mid = mid + Math.imul(ah4, bl9) | 0;
          hi = hi + Math.imul(ah4, bh9) | 0;
          var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
          w13 &= 67108863;
          lo = Math.imul(al9, bl5);
          mid = Math.imul(al9, bh5);
          mid = mid + Math.imul(ah9, bl5) | 0;
          hi = Math.imul(ah9, bh5);
          lo = lo + Math.imul(al8, bl6) | 0;
          mid = mid + Math.imul(al8, bh6) | 0;
          mid = mid + Math.imul(ah8, bl6) | 0;
          hi = hi + Math.imul(ah8, bh6) | 0;
          lo = lo + Math.imul(al7, bl7) | 0;
          mid = mid + Math.imul(al7, bh7) | 0;
          mid = mid + Math.imul(ah7, bl7) | 0;
          hi = hi + Math.imul(ah7, bh7) | 0;
          lo = lo + Math.imul(al6, bl8) | 0;
          mid = mid + Math.imul(al6, bh8) | 0;
          mid = mid + Math.imul(ah6, bl8) | 0;
          hi = hi + Math.imul(ah6, bh8) | 0;
          lo = lo + Math.imul(al5, bl9) | 0;
          mid = mid + Math.imul(al5, bh9) | 0;
          mid = mid + Math.imul(ah5, bl9) | 0;
          hi = hi + Math.imul(ah5, bh9) | 0;
          var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
          w14 &= 67108863;
          lo = Math.imul(al9, bl6);
          mid = Math.imul(al9, bh6);
          mid = mid + Math.imul(ah9, bl6) | 0;
          hi = Math.imul(ah9, bh6);
          lo = lo + Math.imul(al8, bl7) | 0;
          mid = mid + Math.imul(al8, bh7) | 0;
          mid = mid + Math.imul(ah8, bl7) | 0;
          hi = hi + Math.imul(ah8, bh7) | 0;
          lo = lo + Math.imul(al7, bl8) | 0;
          mid = mid + Math.imul(al7, bh8) | 0;
          mid = mid + Math.imul(ah7, bl8) | 0;
          hi = hi + Math.imul(ah7, bh8) | 0;
          lo = lo + Math.imul(al6, bl9) | 0;
          mid = mid + Math.imul(al6, bh9) | 0;
          mid = mid + Math.imul(ah6, bl9) | 0;
          hi = hi + Math.imul(ah6, bh9) | 0;
          var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
          w15 &= 67108863;
          lo = Math.imul(al9, bl7);
          mid = Math.imul(al9, bh7);
          mid = mid + Math.imul(ah9, bl7) | 0;
          hi = Math.imul(ah9, bh7);
          lo = lo + Math.imul(al8, bl8) | 0;
          mid = mid + Math.imul(al8, bh8) | 0;
          mid = mid + Math.imul(ah8, bl8) | 0;
          hi = hi + Math.imul(ah8, bh8) | 0;
          lo = lo + Math.imul(al7, bl9) | 0;
          mid = mid + Math.imul(al7, bh9) | 0;
          mid = mid + Math.imul(ah7, bl9) | 0;
          hi = hi + Math.imul(ah7, bh9) | 0;
          var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
          w16 &= 67108863;
          lo = Math.imul(al9, bl8);
          mid = Math.imul(al9, bh8);
          mid = mid + Math.imul(ah9, bl8) | 0;
          hi = Math.imul(ah9, bh8);
          lo = lo + Math.imul(al8, bl9) | 0;
          mid = mid + Math.imul(al8, bh9) | 0;
          mid = mid + Math.imul(ah8, bl9) | 0;
          hi = hi + Math.imul(ah8, bh9) | 0;
          var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
          w17 &= 67108863;
          lo = Math.imul(al9, bl9);
          mid = Math.imul(al9, bh9);
          mid = mid + Math.imul(ah9, bl9) | 0;
          hi = Math.imul(ah9, bh9);
          var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
          c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
          w18 &= 67108863;
          o[0] = w0;
          o[1] = w1;
          o[2] = w2;
          o[3] = w3;
          o[4] = w4;
          o[5] = w5;
          o[6] = w6;
          o[7] = w7;
          o[8] = w8;
          o[9] = w9;
          o[10] = w10;
          o[11] = w11;
          o[12] = w12;
          o[13] = w13;
          o[14] = w14;
          o[15] = w15;
          o[16] = w16;
          o[17] = w17;
          o[18] = w18;
          if (c !== 0) {
            o[19] = c;
            out.length++;
          }
          return out;
        };
        if (!Math.imul) {
          comb10MulTo = smallMulTo;
        }
        function bigMulTo(self2, num, out) {
          out.negative = num.negative ^ self2.negative;
          out.length = self2.length + num.length;
          var carry = 0;
          var hncarry = 0;
          for (var k = 0; k < out.length - 1; k++) {
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for (var j = Math.max(0, k - self2.length + 1); j <= maxJ; j++) {
              var i = k - j;
              var a = self2.words[i] | 0;
              var b = num.words[j] | 0;
              var r22 = a * b;
              var lo = r22 & 67108863;
              ncarry = ncarry + (r22 / 67108864 | 0) | 0;
              lo = lo + rword | 0;
              rword = lo & 67108863;
              ncarry = ncarry + (lo >>> 26) | 0;
              hncarry += ncarry >>> 26;
              ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
          }
          if (carry !== 0) {
            out.words[k] = carry;
          } else {
            out.length--;
          }
          return out._strip();
        }
        function jumboMulTo(self2, num, out) {
          return bigMulTo(self2, num, out);
        }
        BN32.prototype.mulTo = function mulTo(num, out) {
          var res;
          var len = this.length + num.length;
          if (this.length === 10 && num.length === 10) {
            res = comb10MulTo(this, num, out);
          } else if (len < 63) {
            res = smallMulTo(this, num, out);
          } else if (len < 1024) {
            res = bigMulTo(this, num, out);
          } else {
            res = jumboMulTo(this, num, out);
          }
          return res;
        };
        function FFTM(x, y) {
          this.x = x;
          this.y = y;
        }
        FFTM.prototype.makeRBT = function makeRBT(N2) {
          var t = new Array(N2);
          var l = BN32.prototype._countBits(N2) - 1;
          for (var i = 0; i < N2; i++) {
            t[i] = this.revBin(i, l, N2);
          }
          return t;
        };
        FFTM.prototype.revBin = function revBin(x, l, N2) {
          if (x === 0 || x === N2 - 1)
            return x;
          var rb = 0;
          for (var i = 0; i < l; i++) {
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
          }
          return rb;
        };
        FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N2) {
          for (var i = 0; i < N2; i++) {
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
          }
        };
        FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N2, rbt) {
          this.permute(rbt, rws, iws, rtws, itws, N2);
          for (var s = 1; s < N2; s <<= 1) {
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for (var p = 0; p < N2; p += l) {
              var rtwdf_ = rtwdf;
              var itwdf_ = itwdf;
              for (var j = 0; j < s; j++) {
                var re = rtws[p + j];
                var ie = itws[p + j];
                var ro = rtws[p + j + s];
                var io = itws[p + j + s];
                var rx = rtwdf_ * ro - itwdf_ * io;
                io = rtwdf_ * io + itwdf_ * ro;
                ro = rx;
                rtws[p + j] = re + ro;
                itws[p + j] = ie + io;
                rtws[p + j + s] = re - ro;
                itws[p + j + s] = ie - io;
                if (j !== l) {
                  rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                  itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                  rtwdf_ = rx;
                }
              }
            }
          }
        };
        FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
          var N2 = Math.max(m, n) | 1;
          var odd = N2 & 1;
          var i = 0;
          for (N2 = N2 / 2 | 0; N2; N2 = N2 >>> 1) {
            i++;
          }
          return 1 << i + 1 + odd;
        };
        FFTM.prototype.conjugate = function conjugate(rws, iws, N2) {
          if (N2 <= 1)
            return;
          for (var i = 0; i < N2 / 2; i++) {
            var t = rws[i];
            rws[i] = rws[N2 - i - 1];
            rws[N2 - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N2 - i - 1];
            iws[N2 - i - 1] = -t;
          }
        };
        FFTM.prototype.normalize13b = function normalize13b(ws, N2) {
          var carry = 0;
          for (var i = 0; i < N2 / 2; i++) {
            var w = Math.round(ws[2 * i + 1] / N2) * 8192 + Math.round(ws[2 * i] / N2) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) {
              carry = 0;
            } else {
              carry = w / 67108864 | 0;
            }
          }
          return ws;
        };
        FFTM.prototype.convert13b = function convert13b(ws, len, rws, N2) {
          var carry = 0;
          for (var i = 0; i < len; i++) {
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
          }
          for (i = 2 * len; i < N2; ++i) {
            rws[i] = 0;
          }
          assert22(carry === 0);
          assert22((carry & ~8191) === 0);
        };
        FFTM.prototype.stub = function stub(N2) {
          var ph = new Array(N2);
          for (var i = 0; i < N2; i++) {
            ph[i] = 0;
          }
          return ph;
        };
        FFTM.prototype.mulp = function mulp(x, y, out) {
          var N2 = 2 * this.guessLen13b(x.length, y.length);
          var rbt = this.makeRBT(N2);
          var _ = this.stub(N2);
          var rws = new Array(N2);
          var rwst = new Array(N2);
          var iwst = new Array(N2);
          var nrws = new Array(N2);
          var nrwst = new Array(N2);
          var niwst = new Array(N2);
          var rmws = out.words;
          rmws.length = N2;
          this.convert13b(x.words, x.length, rws, N2);
          this.convert13b(y.words, y.length, nrws, N2);
          this.transform(rws, _, rwst, iwst, N2, rbt);
          this.transform(nrws, _, nrwst, niwst, N2, rbt);
          for (var i = 0; i < N2; i++) {
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
          }
          this.conjugate(rwst, iwst, N2);
          this.transform(rwst, iwst, rmws, _, N2, rbt);
          this.conjugate(rmws, _, N2);
          this.normalize13b(rmws, N2);
          out.negative = x.negative ^ y.negative;
          out.length = x.length + y.length;
          return out._strip();
        };
        BN32.prototype.mul = function mul32(num) {
          var out = new BN32(null);
          out.words = new Array(this.length + num.length);
          return this.mulTo(num, out);
        };
        BN32.prototype.mulf = function mulf(num) {
          var out = new BN32(null);
          out.words = new Array(this.length + num.length);
          return jumboMulTo(this, num, out);
        };
        BN32.prototype.imul = function imul(num) {
          return this.clone().mulTo(num, this);
        };
        BN32.prototype.imuln = function imuln(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert22(typeof num === "number");
          assert22(num < 67108864);
          var carry = 0;
          for (var i = 0; i < this.length; i++) {
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return isNegNum ? this.ineg() : this;
        };
        BN32.prototype.muln = function muln(num) {
          return this.clone().imuln(num);
        };
        BN32.prototype.sqr = function sqr() {
          return this.mul(this);
        };
        BN32.prototype.isqr = function isqr() {
          return this.imul(this.clone());
        };
        BN32.prototype.pow = function pow(num) {
          var w = toBitArray(num);
          if (w.length === 0)
            return new BN32(1);
          var res = this;
          for (var i = 0; i < w.length; i++, res = res.sqr()) {
            if (w[i] !== 0)
              break;
          }
          if (++i < w.length) {
            for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
              if (w[i] === 0)
                continue;
              res = res.mul(q);
            }
          }
          return res;
        };
        BN32.prototype.iushln = function iushln(bits) {
          assert22(typeof bits === "number" && bits >= 0);
          var r22 = bits % 26;
          var s = (bits - r22) / 26;
          var carryMask = 67108863 >>> 26 - r22 << 26 - r22;
          var i;
          if (r22 !== 0) {
            var carry = 0;
            for (i = 0; i < this.length; i++) {
              var newCarry = this.words[i] & carryMask;
              var c = (this.words[i] | 0) - newCarry << r22;
              this.words[i] = c | carry;
              carry = newCarry >>> 26 - r22;
            }
            if (carry) {
              this.words[i] = carry;
              this.length++;
            }
          }
          if (s !== 0) {
            for (i = this.length - 1; i >= 0; i--) {
              this.words[i + s] = this.words[i];
            }
            for (i = 0; i < s; i++) {
              this.words[i] = 0;
            }
            this.length += s;
          }
          return this._strip();
        };
        BN32.prototype.ishln = function ishln(bits) {
          assert22(this.negative === 0);
          return this.iushln(bits);
        };
        BN32.prototype.iushrn = function iushrn(bits, hint, extended) {
          assert22(typeof bits === "number" && bits >= 0);
          var h;
          if (hint) {
            h = (hint - hint % 26) / 26;
          } else {
            h = 0;
          }
          var r22 = bits % 26;
          var s = Math.min((bits - r22) / 26, this.length);
          var mask = 67108863 ^ 67108863 >>> r22 << r22;
          var maskedWords = extended;
          h -= s;
          h = Math.max(0, h);
          if (maskedWords) {
            for (var i = 0; i < s; i++) {
              maskedWords.words[i] = this.words[i];
            }
            maskedWords.length = s;
          }
          if (s === 0) {
          } else if (this.length > s) {
            this.length -= s;
            for (i = 0; i < this.length; i++) {
              this.words[i] = this.words[i + s];
            }
          } else {
            this.words[0] = 0;
            this.length = 1;
          }
          var carry = 0;
          for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r22 | word >>> r22;
            carry = word & mask;
          }
          if (maskedWords && carry !== 0) {
            maskedWords.words[maskedWords.length++] = carry;
          }
          if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
          }
          return this._strip();
        };
        BN32.prototype.ishrn = function ishrn(bits, hint, extended) {
          assert22(this.negative === 0);
          return this.iushrn(bits, hint, extended);
        };
        BN32.prototype.shln = function shln(bits) {
          return this.clone().ishln(bits);
        };
        BN32.prototype.ushln = function ushln(bits) {
          return this.clone().iushln(bits);
        };
        BN32.prototype.shrn = function shrn(bits) {
          return this.clone().ishrn(bits);
        };
        BN32.prototype.ushrn = function ushrn(bits) {
          return this.clone().iushrn(bits);
        };
        BN32.prototype.testn = function testn(bit) {
          assert22(typeof bit === "number" && bit >= 0);
          var r22 = bit % 26;
          var s = (bit - r22) / 26;
          var q = 1 << r22;
          if (this.length <= s)
            return false;
          var w = this.words[s];
          return !!(w & q);
        };
        BN32.prototype.imaskn = function imaskn(bits) {
          assert22(typeof bits === "number" && bits >= 0);
          var r22 = bits % 26;
          var s = (bits - r22) / 26;
          assert22(this.negative === 0, "imaskn works only with positive numbers");
          if (this.length <= s) {
            return this;
          }
          if (r22 !== 0) {
            s++;
          }
          this.length = Math.min(s, this.length);
          if (r22 !== 0) {
            var mask = 67108863 ^ 67108863 >>> r22 << r22;
            this.words[this.length - 1] &= mask;
          }
          return this._strip();
        };
        BN32.prototype.maskn = function maskn(bits) {
          return this.clone().imaskn(bits);
        };
        BN32.prototype.iaddn = function iaddn(num) {
          assert22(typeof num === "number");
          assert22(num < 67108864);
          if (num < 0)
            return this.isubn(-num);
          if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
              this.words[0] = num - (this.words[0] | 0);
              this.negative = 0;
              return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
          }
          return this._iaddn(num);
        };
        BN32.prototype._iaddn = function _iaddn(num) {
          this.words[0] += num;
          for (var i = 0; i < this.length && this.words[i] >= 67108864; i++) {
            this.words[i] -= 67108864;
            if (i === this.length - 1) {
              this.words[i + 1] = 1;
            } else {
              this.words[i + 1]++;
            }
          }
          this.length = Math.max(this.length, i + 1);
          return this;
        };
        BN32.prototype.isubn = function isubn(num) {
          assert22(typeof num === "number");
          assert22(num < 67108864);
          if (num < 0)
            return this.iaddn(-num);
          if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
          }
          this.words[0] -= num;
          if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
          } else {
            for (var i = 0; i < this.length && this.words[i] < 0; i++) {
              this.words[i] += 67108864;
              this.words[i + 1] -= 1;
            }
          }
          return this._strip();
        };
        BN32.prototype.addn = function addn(num) {
          return this.clone().iaddn(num);
        };
        BN32.prototype.subn = function subn(num) {
          return this.clone().isubn(num);
        };
        BN32.prototype.iabs = function iabs() {
          this.negative = 0;
          return this;
        };
        BN32.prototype.abs = function abs() {
          return this.clone().iabs();
        };
        BN32.prototype._ishlnsubmul = function _ishlnsubmul(num, mul32, shift) {
          var len = num.length + shift;
          var i;
          this._expand(len);
          var w;
          var carry = 0;
          for (i = 0; i < num.length; i++) {
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul32;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
          }
          for (; i < this.length - shift; i++) {
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
          }
          if (carry === 0)
            return this._strip();
          assert22(carry === -1);
          carry = 0;
          for (i = 0; i < this.length; i++) {
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
          }
          this.negative = 1;
          return this._strip();
        };
        BN32.prototype._wordDiv = function _wordDiv(num, mode) {
          var shift = this.length - num.length;
          var a = this.clone();
          var b = num;
          var bhi = b.words[b.length - 1] | 0;
          var bhiBits = this._countBits(bhi);
          shift = 26 - bhiBits;
          if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
          }
          var m = a.length - b.length;
          var q;
          if (mode !== "mod") {
            q = new BN32(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for (var i = 0; i < q.length; i++) {
              q.words[i] = 0;
            }
          }
          var diff = a.clone()._ishlnsubmul(b, 1, m);
          if (diff.negative === 0) {
            a = diff;
            if (q) {
              q.words[m] = 1;
            }
          }
          for (var j = m - 1; j >= 0; j--) {
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while (a.negative !== 0) {
              qj--;
              a.negative = 0;
              a._ishlnsubmul(b, 1, j);
              if (!a.isZero()) {
                a.negative ^= 1;
              }
            }
            if (q) {
              q.words[j] = qj;
            }
          }
          if (q) {
            q._strip();
          }
          a._strip();
          if (mode !== "div" && shift !== 0) {
            a.iushrn(shift);
          }
          return {
            div: q || null,
            mod: a
          };
        };
        BN32.prototype.divmod = function divmod(num, mode, positive) {
          assert22(!num.isZero());
          if (this.isZero()) {
            return {
              div: new BN32(0),
              mod: new BN32(0)
            };
          }
          var div, mod, res;
          if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.iadd(num);
              }
            }
            return {
              div,
              mod
            };
          }
          if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== "mod") {
              div = res.div.neg();
            }
            return {
              div,
              mod: res.mod
            };
          }
          if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== "div") {
              mod = res.mod.neg();
              if (positive && mod.negative !== 0) {
                mod.isub(num);
              }
            }
            return {
              div: res.div,
              mod
            };
          }
          if (num.length > this.length || this.cmp(num) < 0) {
            return {
              div: new BN32(0),
              mod: this
            };
          }
          if (num.length === 1) {
            if (mode === "div") {
              return {
                div: this.divn(num.words[0]),
                mod: null
              };
            }
            if (mode === "mod") {
              return {
                div: null,
                mod: new BN32(this.modrn(num.words[0]))
              };
            }
            return {
              div: this.divn(num.words[0]),
              mod: new BN32(this.modrn(num.words[0]))
            };
          }
          return this._wordDiv(num, mode);
        };
        BN32.prototype.div = function div(num) {
          return this.divmod(num, "div", false).div;
        };
        BN32.prototype.mod = function mod(num) {
          return this.divmod(num, "mod", false).mod;
        };
        BN32.prototype.umod = function umod(num) {
          return this.divmod(num, "mod", true).mod;
        };
        BN32.prototype.divRound = function divRound(num) {
          var dm = this.divmod(num);
          if (dm.mod.isZero())
            return dm.div;
          var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
          var half = num.ushrn(1);
          var r22 = num.andln(1);
          var cmp = mod.cmp(half);
          if (cmp < 0 || r22 === 1 && cmp === 0)
            return dm.div;
          return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
        };
        BN32.prototype.modrn = function modrn(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert22(num <= 67108863);
          var p = (1 << 26) % num;
          var acc = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            acc = (p * acc + (this.words[i] | 0)) % num;
          }
          return isNegNum ? -acc : acc;
        };
        BN32.prototype.modn = function modn(num) {
          return this.modrn(num);
        };
        BN32.prototype.idivn = function idivn(num) {
          var isNegNum = num < 0;
          if (isNegNum)
            num = -num;
          assert22(num <= 67108863);
          var carry = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
          }
          this._strip();
          return isNegNum ? this.ineg() : this;
        };
        BN32.prototype.divn = function divn(num) {
          return this.clone().idivn(num);
        };
        BN32.prototype.egcd = function egcd(p) {
          assert22(p.negative === 0);
          assert22(!p.isZero());
          var x = this;
          var y = p.clone();
          if (x.negative !== 0) {
            x = x.umod(p);
          } else {
            x = x.clone();
          }
          var A = new BN32(1);
          var B = new BN32(0);
          var C = new BN32(0);
          var D = new BN32(1);
          var g = 0;
          while (x.isEven() && y.isEven()) {
            x.iushrn(1);
            y.iushrn(1);
            ++g;
          }
          var yp = y.clone();
          var xp = x.clone();
          while (!x.isZero()) {
            for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              x.iushrn(i);
              while (i-- > 0) {
                if (A.isOdd() || B.isOdd()) {
                  A.iadd(yp);
                  B.isub(xp);
                }
                A.iushrn(1);
                B.iushrn(1);
              }
            }
            for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              y.iushrn(j);
              while (j-- > 0) {
                if (C.isOdd() || D.isOdd()) {
                  C.iadd(yp);
                  D.isub(xp);
                }
                C.iushrn(1);
                D.iushrn(1);
              }
            }
            if (x.cmp(y) >= 0) {
              x.isub(y);
              A.isub(C);
              B.isub(D);
            } else {
              y.isub(x);
              C.isub(A);
              D.isub(B);
            }
          }
          return {
            a: C,
            b: D,
            gcd: y.iushln(g)
          };
        };
        BN32.prototype._invmp = function _invmp(p) {
          assert22(p.negative === 0);
          assert22(!p.isZero());
          var a = this;
          var b = p.clone();
          if (a.negative !== 0) {
            a = a.umod(p);
          } else {
            a = a.clone();
          }
          var x1 = new BN32(1);
          var x2 = new BN32(0);
          var delta = b.clone();
          while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
            for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1)
              ;
            if (i > 0) {
              a.iushrn(i);
              while (i-- > 0) {
                if (x1.isOdd()) {
                  x1.iadd(delta);
                }
                x1.iushrn(1);
              }
            }
            for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1)
              ;
            if (j > 0) {
              b.iushrn(j);
              while (j-- > 0) {
                if (x2.isOdd()) {
                  x2.iadd(delta);
                }
                x2.iushrn(1);
              }
            }
            if (a.cmp(b) >= 0) {
              a.isub(b);
              x1.isub(x2);
            } else {
              b.isub(a);
              x2.isub(x1);
            }
          }
          var res;
          if (a.cmpn(1) === 0) {
            res = x1;
          } else {
            res = x2;
          }
          if (res.cmpn(0) < 0) {
            res.iadd(p);
          }
          return res;
        };
        BN32.prototype.gcd = function gcd(num) {
          if (this.isZero())
            return num.abs();
          if (num.isZero())
            return this.abs();
          var a = this.clone();
          var b = num.clone();
          a.negative = 0;
          b.negative = 0;
          for (var shift = 0; a.isEven() && b.isEven(); shift++) {
            a.iushrn(1);
            b.iushrn(1);
          }
          do {
            while (a.isEven()) {
              a.iushrn(1);
            }
            while (b.isEven()) {
              b.iushrn(1);
            }
            var r22 = a.cmp(b);
            if (r22 < 0) {
              var t = a;
              a = b;
              b = t;
            } else if (r22 === 0 || b.cmpn(1) === 0) {
              break;
            }
            a.isub(b);
          } while (true);
          return b.iushln(shift);
        };
        BN32.prototype.invm = function invm(num) {
          return this.egcd(num).a.umod(num);
        };
        BN32.prototype.isEven = function isEven() {
          return (this.words[0] & 1) === 0;
        };
        BN32.prototype.isOdd = function isOdd() {
          return (this.words[0] & 1) === 1;
        };
        BN32.prototype.andln = function andln(num) {
          return this.words[0] & num;
        };
        BN32.prototype.bincn = function bincn(bit) {
          assert22(typeof bit === "number");
          var r22 = bit % 26;
          var s = (bit - r22) / 26;
          var q = 1 << r22;
          if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
          }
          var carry = q;
          for (var i = s; carry !== 0 && i < this.length; i++) {
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
          }
          if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
          }
          return this;
        };
        BN32.prototype.isZero = function isZero() {
          return this.length === 1 && this.words[0] === 0;
        };
        BN32.prototype.cmpn = function cmpn(num) {
          var negative = num < 0;
          if (this.negative !== 0 && !negative)
            return -1;
          if (this.negative === 0 && negative)
            return 1;
          this._strip();
          var res;
          if (this.length > 1) {
            res = 1;
          } else {
            if (negative) {
              num = -num;
            }
            assert22(num <= 67108863, "Number is too big");
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
          }
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN32.prototype.cmp = function cmp(num) {
          if (this.negative !== 0 && num.negative === 0)
            return -1;
          if (this.negative === 0 && num.negative !== 0)
            return 1;
          var res = this.ucmp(num);
          if (this.negative !== 0)
            return -res | 0;
          return res;
        };
        BN32.prototype.ucmp = function ucmp(num) {
          if (this.length > num.length)
            return 1;
          if (this.length < num.length)
            return -1;
          var res = 0;
          for (var i = this.length - 1; i >= 0; i--) {
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b)
              continue;
            if (a < b) {
              res = -1;
            } else if (a > b) {
              res = 1;
            }
            break;
          }
          return res;
        };
        BN32.prototype.gtn = function gtn(num) {
          return this.cmpn(num) === 1;
        };
        BN32.prototype.gt = function gt(num) {
          return this.cmp(num) === 1;
        };
        BN32.prototype.gten = function gten(num) {
          return this.cmpn(num) >= 0;
        };
        BN32.prototype.gte = function gte(num) {
          return this.cmp(num) >= 0;
        };
        BN32.prototype.ltn = function ltn(num) {
          return this.cmpn(num) === -1;
        };
        BN32.prototype.lt = function lt(num) {
          return this.cmp(num) === -1;
        };
        BN32.prototype.lten = function lten(num) {
          return this.cmpn(num) <= 0;
        };
        BN32.prototype.lte = function lte(num) {
          return this.cmp(num) <= 0;
        };
        BN32.prototype.eqn = function eqn(num) {
          return this.cmpn(num) === 0;
        };
        BN32.prototype.eq = function eq42(num) {
          return this.cmp(num) === 0;
        };
        BN32.red = function red(num) {
          return new Red(num);
        };
        BN32.prototype.toRed = function toRed(ctx) {
          assert22(!this.red, "Already a number in reduction context");
          assert22(this.negative === 0, "red works only with positives");
          return ctx.convertTo(this)._forceRed(ctx);
        };
        BN32.prototype.fromRed = function fromRed() {
          assert22(this.red, "fromRed works only with numbers in reduction context");
          return this.red.convertFrom(this);
        };
        BN32.prototype._forceRed = function _forceRed(ctx) {
          this.red = ctx;
          return this;
        };
        BN32.prototype.forceRed = function forceRed(ctx) {
          assert22(!this.red, "Already a number in reduction context");
          return this._forceRed(ctx);
        };
        BN32.prototype.redAdd = function redAdd(num) {
          assert22(this.red, "redAdd works only with red numbers");
          return this.red.add(this, num);
        };
        BN32.prototype.redIAdd = function redIAdd(num) {
          assert22(this.red, "redIAdd works only with red numbers");
          return this.red.iadd(this, num);
        };
        BN32.prototype.redSub = function redSub(num) {
          assert22(this.red, "redSub works only with red numbers");
          return this.red.sub(this, num);
        };
        BN32.prototype.redISub = function redISub(num) {
          assert22(this.red, "redISub works only with red numbers");
          return this.red.isub(this, num);
        };
        BN32.prototype.redShl = function redShl(num) {
          assert22(this.red, "redShl works only with red numbers");
          return this.red.shl(this, num);
        };
        BN32.prototype.redMul = function redMul(num) {
          assert22(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.mul(this, num);
        };
        BN32.prototype.redIMul = function redIMul(num) {
          assert22(this.red, "redMul works only with red numbers");
          this.red._verify2(this, num);
          return this.red.imul(this, num);
        };
        BN32.prototype.redSqr = function redSqr() {
          assert22(this.red, "redSqr works only with red numbers");
          this.red._verify1(this);
          return this.red.sqr(this);
        };
        BN32.prototype.redISqr = function redISqr() {
          assert22(this.red, "redISqr works only with red numbers");
          this.red._verify1(this);
          return this.red.isqr(this);
        };
        BN32.prototype.redSqrt = function redSqrt() {
          assert22(this.red, "redSqrt works only with red numbers");
          this.red._verify1(this);
          return this.red.sqrt(this);
        };
        BN32.prototype.redInvm = function redInvm() {
          assert22(this.red, "redInvm works only with red numbers");
          this.red._verify1(this);
          return this.red.invm(this);
        };
        BN32.prototype.redNeg = function redNeg() {
          assert22(this.red, "redNeg works only with red numbers");
          this.red._verify1(this);
          return this.red.neg(this);
        };
        BN32.prototype.redPow = function redPow(num) {
          assert22(this.red && !num.red, "redPow(normalNum)");
          this.red._verify1(this);
          return this.red.pow(this, num);
        };
        var primes = {
          k256: null,
          p224: null,
          p192: null,
          p25519: null
        };
        function MPrime(name, p) {
          this.name = name;
          this.p = new BN32(p, 16);
          this.n = this.p.bitLength();
          this.k = new BN32(1).iushln(this.n).isub(this.p);
          this.tmp = this._tmp();
        }
        MPrime.prototype._tmp = function _tmp() {
          var tmp = new BN32(null);
          tmp.words = new Array(Math.ceil(this.n / 13));
          return tmp;
        };
        MPrime.prototype.ireduce = function ireduce(num) {
          var r22 = num;
          var rlen;
          do {
            this.split(r22, this.tmp);
            r22 = this.imulK(r22);
            r22 = r22.iadd(this.tmp);
            rlen = r22.bitLength();
          } while (rlen > this.n);
          var cmp = rlen < this.n ? -1 : r22.ucmp(this.p);
          if (cmp === 0) {
            r22.words[0] = 0;
            r22.length = 1;
          } else if (cmp > 0) {
            r22.isub(this.p);
          } else {
            if (r22.strip !== void 0) {
              r22.strip();
            } else {
              r22._strip();
            }
          }
          return r22;
        };
        MPrime.prototype.split = function split(input, out) {
          input.iushrn(this.n, 0, out);
        };
        MPrime.prototype.imulK = function imulK(num) {
          return num.imul(this.k);
        };
        function K256() {
          MPrime.call(
            this,
            "k256",
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
          );
        }
        inherits2(K256, MPrime);
        K256.prototype.split = function split(input, output) {
          var mask = 4194303;
          var outLen = Math.min(input.length, 9);
          for (var i = 0; i < outLen; i++) {
            output.words[i] = input.words[i];
          }
          output.length = outLen;
          if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
          }
          var prev = input.words[9];
          output.words[output.length++] = prev & mask;
          for (i = 10; i < input.length; i++) {
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
          }
          prev >>>= 22;
          input.words[i - 10] = prev;
          if (prev === 0 && input.length > 10) {
            input.length -= 10;
          } else {
            input.length -= 9;
          }
        };
        K256.prototype.imulK = function imulK(num) {
          num.words[num.length] = 0;
          num.words[num.length + 1] = 0;
          num.length += 2;
          var lo = 0;
          for (var i = 0; i < num.length; i++) {
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
          }
          if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) {
              num.length--;
            }
          }
          return num;
        };
        function P224() {
          MPrime.call(
            this,
            "p224",
            "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
          );
        }
        inherits2(P224, MPrime);
        function P192() {
          MPrime.call(
            this,
            "p192",
            "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
          );
        }
        inherits2(P192, MPrime);
        function P25519() {
          MPrime.call(
            this,
            "25519",
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
          );
        }
        inherits2(P25519, MPrime);
        P25519.prototype.imulK = function imulK(num) {
          var carry = 0;
          for (var i = 0; i < num.length; i++) {
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
          }
          if (carry !== 0) {
            num.words[num.length++] = carry;
          }
          return num;
        };
        BN32._prime = function prime(name) {
          if (primes[name])
            return primes[name];
          var prime2;
          if (name === "k256") {
            prime2 = new K256();
          } else if (name === "p224") {
            prime2 = new P224();
          } else if (name === "p192") {
            prime2 = new P192();
          } else if (name === "p25519") {
            prime2 = new P25519();
          } else {
            throw new Error("Unknown prime " + name);
          }
          primes[name] = prime2;
          return prime2;
        };
        function Red(m) {
          if (typeof m === "string") {
            var prime = BN32._prime(m);
            this.m = prime.p;
            this.prime = prime;
          } else {
            assert22(m.gtn(1), "modulus must be greater than 1");
            this.m = m;
            this.prime = null;
          }
        }
        Red.prototype._verify1 = function _verify1(a) {
          assert22(a.negative === 0, "red works only with positives");
          assert22(a.red, "red works only with red numbers");
        };
        Red.prototype._verify2 = function _verify2(a, b) {
          assert22((a.negative | b.negative) === 0, "red works only with positives");
          assert22(
            a.red && a.red === b.red,
            "red works only with red numbers"
          );
        };
        Red.prototype.imod = function imod(a) {
          if (this.prime)
            return this.prime.ireduce(a)._forceRed(this);
          move(a, a.umod(this.m)._forceRed(this));
          return a;
        };
        Red.prototype.neg = function neg32(a) {
          if (a.isZero()) {
            return a.clone();
          }
          return this.m.sub(a)._forceRed(this);
        };
        Red.prototype.add = function add32(a, b) {
          this._verify2(a, b);
          var res = a.add(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.iadd = function iadd(a, b) {
          this._verify2(a, b);
          var res = a.iadd(b);
          if (res.cmp(this.m) >= 0) {
            res.isub(this.m);
          }
          return res;
        };
        Red.prototype.sub = function sub(a, b) {
          this._verify2(a, b);
          var res = a.sub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Red.prototype.isub = function isub(a, b) {
          this._verify2(a, b);
          var res = a.isub(b);
          if (res.cmpn(0) < 0) {
            res.iadd(this.m);
          }
          return res;
        };
        Red.prototype.shl = function shl(a, num) {
          this._verify1(a);
          return this.imod(a.ushln(num));
        };
        Red.prototype.imul = function imul(a, b) {
          this._verify2(a, b);
          return this.imod(a.imul(b));
        };
        Red.prototype.mul = function mul32(a, b) {
          this._verify2(a, b);
          return this.imod(a.mul(b));
        };
        Red.prototype.isqr = function isqr(a) {
          return this.imul(a, a.clone());
        };
        Red.prototype.sqr = function sqr(a) {
          return this.mul(a, a);
        };
        Red.prototype.sqrt = function sqrt(a) {
          if (a.isZero())
            return a.clone();
          var mod3 = this.m.andln(3);
          assert22(mod3 % 2 === 1);
          if (mod3 === 3) {
            var pow = this.m.add(new BN32(1)).iushrn(2);
            return this.pow(a, pow);
          }
          var q = this.m.subn(1);
          var s = 0;
          while (!q.isZero() && q.andln(1) === 0) {
            s++;
            q.iushrn(1);
          }
          assert22(!q.isZero());
          var one = new BN32(1).toRed(this);
          var nOne = one.redNeg();
          var lpow = this.m.subn(1).iushrn(1);
          var z = this.m.bitLength();
          z = new BN32(2 * z * z).toRed(this);
          while (this.pow(z, lpow).cmp(nOne) !== 0) {
            z.redIAdd(nOne);
          }
          var c = this.pow(z, q);
          var r22 = this.pow(a, q.addn(1).iushrn(1));
          var t = this.pow(a, q);
          var m = s;
          while (t.cmp(one) !== 0) {
            var tmp = t;
            for (var i = 0; tmp.cmp(one) !== 0; i++) {
              tmp = tmp.redSqr();
            }
            assert22(i < m);
            var b = this.pow(c, new BN32(1).iushln(m - i - 1));
            r22 = r22.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
          }
          return r22;
        };
        Red.prototype.invm = function invm(a) {
          var inv = a._invmp(this.m);
          if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
          } else {
            return this.imod(inv);
          }
        };
        Red.prototype.pow = function pow(a, num) {
          if (num.isZero())
            return new BN32(1).toRed(this);
          if (num.cmpn(1) === 0)
            return a.clone();
          var windowSize = 4;
          var wnd = new Array(1 << windowSize);
          wnd[0] = new BN32(1).toRed(this);
          wnd[1] = a;
          for (var i = 2; i < wnd.length; i++) {
            wnd[i] = this.mul(wnd[i - 1], a);
          }
          var res = wnd[0];
          var current = 0;
          var currentLen = 0;
          var start = num.bitLength() % 26;
          if (start === 0) {
            start = 26;
          }
          for (i = num.length - 1; i >= 0; i--) {
            var word = num.words[i];
            for (var j = start - 1; j >= 0; j--) {
              var bit = word >> j & 1;
              if (res !== wnd[0]) {
                res = this.sqr(res);
              }
              if (bit === 0 && current === 0) {
                currentLen = 0;
                continue;
              }
              current <<= 1;
              current |= bit;
              currentLen++;
              if (currentLen !== windowSize && (i !== 0 || j !== 0))
                continue;
              res = this.mul(res, wnd[current]);
              currentLen = 0;
              current = 0;
            }
            start = 26;
          }
          return res;
        };
        Red.prototype.convertTo = function convertTo(num) {
          var r22 = num.umod(this.m);
          return r22 === num ? r22.clone() : r22;
        };
        Red.prototype.convertFrom = function convertFrom(num) {
          var res = num.clone();
          res.red = null;
          return res;
        };
        BN32.mont = function mont(num) {
          return new Mont(num);
        };
        function Mont(m) {
          Red.call(this, m);
          this.shift = this.m.bitLength();
          if (this.shift % 26 !== 0) {
            this.shift += 26 - this.shift % 26;
          }
          this.r = new BN32(1).iushln(this.shift);
          this.r2 = this.imod(this.r.sqr());
          this.rinv = this.r._invmp(this.m);
          this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
          this.minv = this.minv.umod(this.r);
          this.minv = this.r.sub(this.minv);
        }
        inherits2(Mont, Red);
        Mont.prototype.convertTo = function convertTo(num) {
          return this.imod(num.ushln(this.shift));
        };
        Mont.prototype.convertFrom = function convertFrom(num) {
          var r22 = this.imod(num.mul(this.rinv));
          r22.red = null;
          return r22;
        };
        Mont.prototype.imul = function imul(a, b) {
          if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
          }
          var t = a.imul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.mul = function mul32(a, b) {
          if (a.isZero() || b.isZero())
            return new BN32(0)._forceRed(this);
          var t = a.mul(b);
          var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
          var u = t.isub(c).iushrn(this.shift);
          var res = u;
          if (u.cmp(this.m) >= 0) {
            res = u.isub(this.m);
          } else if (u.cmpn(0) < 0) {
            res = u.iadd(this.m);
          }
          return res._forceRed(this);
        };
        Mont.prototype.invm = function invm(a) {
          var res = this.imod(a._invmp(this.m).mul(this.r2));
          return res._forceRed(this);
        };
      })(typeof module === "undefined" || module, exports);
    }
  });
  var require_sha3 = __commonJS2({
    "node_modules/js-sha3/src/sha3.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      (function() {
        "use strict";
        var INPUT_ERROR = "input is invalid type";
        var FINALIZE_ERROR = "finalize already called";
        var WINDOW = typeof window === "object";
        var root = WINDOW ? window : {};
        if (root.JS_SHA3_NO_WINDOW) {
          WINDOW = false;
        }
        var WEB_WORKER = !WINDOW && typeof self === "object";
        var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === "object" && process.versions && process.versions.node;
        if (NODE_JS) {
          root = global;
        } else if (WEB_WORKER) {
          root = self;
        }
        var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === "object" && module.exports;
        var AMD = typeof define === "function" && define.amd;
        var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== "undefined";
        var HEX_CHARS = "0123456789abcdef".split("");
        var SHAKE_PADDING = [31, 7936, 2031616, 520093696];
        var CSHAKE_PADDING = [4, 1024, 262144, 67108864];
        var KECCAK_PADDING = [1, 256, 65536, 16777216];
        var PADDING = [6, 1536, 393216, 100663296];
        var SHIFT = [0, 8, 16, 24];
        var RC = [
          1,
          0,
          32898,
          0,
          32906,
          2147483648,
          2147516416,
          2147483648,
          32907,
          0,
          2147483649,
          0,
          2147516545,
          2147483648,
          32777,
          2147483648,
          138,
          0,
          136,
          0,
          2147516425,
          0,
          2147483658,
          0,
          2147516555,
          0,
          139,
          2147483648,
          32905,
          2147483648,
          32771,
          2147483648,
          32770,
          2147483648,
          128,
          2147483648,
          32778,
          0,
          2147483658,
          2147483648,
          2147516545,
          2147483648,
          32896,
          2147483648,
          2147483649,
          0,
          2147516424,
          2147483648
        ];
        var BITS = [224, 256, 384, 512];
        var SHAKE_BITS = [128, 256];
        var OUTPUT_TYPES = ["hex", "buffer", "arrayBuffer", "array", "digest"];
        var CSHAKE_BYTEPAD = {
          "128": 168,
          "256": 136
        };
        if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {
          Array.isArray = function(obj) {
            return Object.prototype.toString.call(obj) === "[object Array]";
          };
        }
        if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {
          ArrayBuffer.isView = function(obj) {
            return typeof obj === "object" && obj.buffer && obj.buffer.constructor === ArrayBuffer;
          };
        }
        var createOutputMethod = function(bits2, padding22, outputType) {
          return function(message) {
            return new Keccak(bits2, padding22, bits2).update(message)[outputType]();
          };
        };
        var createShakeOutputMethod = function(bits2, padding22, outputType) {
          return function(message, outputBits) {
            return new Keccak(bits2, padding22, outputBits).update(message)[outputType]();
          };
        };
        var createCshakeOutputMethod = function(bits2, padding22, outputType) {
          return function(message, outputBits, n, s) {
            return methods["cshake" + bits2].update(message, outputBits, n, s)[outputType]();
          };
        };
        var createKmacOutputMethod = function(bits2, padding22, outputType) {
          return function(key22, message, outputBits, s) {
            return methods["kmac" + bits2].update(key22, message, outputBits, s)[outputType]();
          };
        };
        var createOutputMethods = function(method, createMethod2, bits2, padding22) {
          for (var i2 = 0; i2 < OUTPUT_TYPES.length; ++i2) {
            var type = OUTPUT_TYPES[i2];
            method[type] = createMethod2(bits2, padding22, type);
          }
          return method;
        };
        var createMethod = function(bits2, padding22) {
          var method = createOutputMethod(bits2, padding22, "hex");
          method.create = function() {
            return new Keccak(bits2, padding22, bits2);
          };
          method.update = function(message) {
            return method.create().update(message);
          };
          return createOutputMethods(method, createOutputMethod, bits2, padding22);
        };
        var createShakeMethod = function(bits2, padding22) {
          var method = createShakeOutputMethod(bits2, padding22, "hex");
          method.create = function(outputBits) {
            return new Keccak(bits2, padding22, outputBits);
          };
          method.update = function(message, outputBits) {
            return method.create(outputBits).update(message);
          };
          return createOutputMethods(method, createShakeOutputMethod, bits2, padding22);
        };
        var createCshakeMethod = function(bits2, padding22) {
          var w = CSHAKE_BYTEPAD[bits2];
          var method = createCshakeOutputMethod(bits2, padding22, "hex");
          method.create = function(outputBits, n, s) {
            if (!n && !s) {
              return methods["shake" + bits2].create(outputBits);
            } else {
              return new Keccak(bits2, padding22, outputBits).bytepad([n, s], w);
            }
          };
          method.update = function(message, outputBits, n, s) {
            return method.create(outputBits, n, s).update(message);
          };
          return createOutputMethods(method, createCshakeOutputMethod, bits2, padding22);
        };
        var createKmacMethod = function(bits2, padding22) {
          var w = CSHAKE_BYTEPAD[bits2];
          var method = createKmacOutputMethod(bits2, padding22, "hex");
          method.create = function(key22, outputBits, s) {
            return new Kmac(bits2, padding22, outputBits).bytepad(["KMAC", s], w).bytepad([key22], w);
          };
          method.update = function(key22, message, outputBits, s) {
            return method.create(key22, outputBits, s).update(message);
          };
          return createOutputMethods(method, createKmacOutputMethod, bits2, padding22);
        };
        var algorithms = [
          { name: "keccak", padding: KECCAK_PADDING, bits: BITS, createMethod },
          { name: "sha3", padding: PADDING, bits: BITS, createMethod },
          { name: "shake", padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },
          { name: "cshake", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },
          { name: "kmac", padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }
        ];
        var methods = {}, methodNames = [];
        for (var i = 0; i < algorithms.length; ++i) {
          var algorithm = algorithms[i];
          var bits = algorithm.bits;
          for (var j = 0; j < bits.length; ++j) {
            var methodName = algorithm.name + "_" + bits[j];
            methodNames.push(methodName);
            methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);
            if (algorithm.name !== "sha3") {
              var newMethodName = algorithm.name + bits[j];
              methodNames.push(newMethodName);
              methods[newMethodName] = methods[methodName];
            }
          }
        }
        function Keccak(bits2, padding22, outputBits) {
          this.blocks = [];
          this.s = [];
          this.padding = padding22;
          this.outputBits = outputBits;
          this.reset = true;
          this.finalized = false;
          this.block = 0;
          this.start = 0;
          this.blockCount = 1600 - (bits2 << 1) >> 5;
          this.byteCount = this.blockCount << 2;
          this.outputBlocks = outputBits >> 5;
          this.extraBytes = (outputBits & 31) >> 3;
          for (var i2 = 0; i2 < 50; ++i2) {
            this.s[i2] = 0;
          }
        }
        Keccak.prototype.update = function(message) {
          if (this.finalized) {
            throw new Error(FINALIZE_ERROR);
          }
          var notString, type = typeof message;
          if (type !== "string") {
            if (type === "object") {
              if (message === null) {
                throw new Error(INPUT_ERROR);
              } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {
                message = new Uint8Array(message);
              } else if (!Array.isArray(message)) {
                if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {
                  throw new Error(INPUT_ERROR);
                }
              }
            } else {
              throw new Error(INPUT_ERROR);
            }
            notString = true;
          }
          var blocks = this.blocks, byteCount = this.byteCount, length = message.length, blockCount = this.blockCount, index2 = 0, s = this.s, i2, code;
          while (index2 < length) {
            if (this.reset) {
              this.reset = false;
              blocks[0] = this.block;
              for (i2 = 1; i2 < blockCount + 1; ++i2) {
                blocks[i2] = 0;
              }
            }
            if (notString) {
              for (i2 = this.start; index2 < length && i2 < byteCount; ++index2) {
                blocks[i2 >> 2] |= message[index2] << SHIFT[i2++ & 3];
              }
            } else {
              for (i2 = this.start; index2 < length && i2 < byteCount; ++index2) {
                code = message.charCodeAt(index2);
                if (code < 128) {
                  blocks[i2 >> 2] |= code << SHIFT[i2++ & 3];
                } else if (code < 2048) {
                  blocks[i2 >> 2] |= (192 | code >> 6) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                } else if (code < 55296 || code >= 57344) {
                  blocks[i2 >> 2] |= (224 | code >> 12) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                } else {
                  code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index2) & 1023);
                  blocks[i2 >> 2] |= (240 | code >> 18) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 12 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code >> 6 & 63) << SHIFT[i2++ & 3];
                  blocks[i2 >> 2] |= (128 | code & 63) << SHIFT[i2++ & 3];
                }
              }
            }
            this.lastByteIndex = i2;
            if (i2 >= byteCount) {
              this.start = i2 - byteCount;
              this.block = blocks[blockCount];
              for (i2 = 0; i2 < blockCount; ++i2) {
                s[i2] ^= blocks[i2];
              }
              f(s);
              this.reset = true;
            } else {
              this.start = i2;
            }
          }
          return this;
        };
        Keccak.prototype.encode = function(x, right) {
          var o = x & 255, n = 1;
          var bytes = [o];
          x = x >> 8;
          o = x & 255;
          while (o > 0) {
            bytes.unshift(o);
            x = x >> 8;
            o = x & 255;
            ++n;
          }
          if (right) {
            bytes.push(n);
          } else {
            bytes.unshift(n);
          }
          this.update(bytes);
          return bytes.length;
        };
        Keccak.prototype.encodeString = function(str) {
          var notString, type = typeof str;
          if (type !== "string") {
            if (type === "object") {
              if (str === null) {
                throw new Error(INPUT_ERROR);
              } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {
                str = new Uint8Array(str);
              } else if (!Array.isArray(str)) {
                if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {
                  throw new Error(INPUT_ERROR);
                }
              }
            } else {
              throw new Error(INPUT_ERROR);
            }
            notString = true;
          }
          var bytes = 0, length = str.length;
          if (notString) {
            bytes = length;
          } else {
            for (var i2 = 0; i2 < str.length; ++i2) {
              var code = str.charCodeAt(i2);
              if (code < 128) {
                bytes += 1;
              } else if (code < 2048) {
                bytes += 2;
              } else if (code < 55296 || code >= 57344) {
                bytes += 3;
              } else {
                code = 65536 + ((code & 1023) << 10 | str.charCodeAt(++i2) & 1023);
                bytes += 4;
              }
            }
          }
          bytes += this.encode(bytes * 8);
          this.update(str);
          return bytes;
        };
        Keccak.prototype.bytepad = function(strs, w) {
          var bytes = this.encode(w);
          for (var i2 = 0; i2 < strs.length; ++i2) {
            bytes += this.encodeString(strs[i2]);
          }
          var paddingBytes = w - bytes % w;
          var zeros2 = [];
          zeros2.length = paddingBytes;
          this.update(zeros2);
          return this;
        };
        Keccak.prototype.finalize = function() {
          if (this.finalized) {
            return;
          }
          this.finalized = true;
          var blocks = this.blocks, i2 = this.lastByteIndex, blockCount = this.blockCount, s = this.s;
          blocks[i2 >> 2] |= this.padding[i2 & 3];
          if (this.lastByteIndex === this.byteCount) {
            blocks[0] = blocks[blockCount];
            for (i2 = 1; i2 < blockCount + 1; ++i2) {
              blocks[i2] = 0;
            }
          }
          blocks[blockCount - 1] |= 2147483648;
          for (i2 = 0; i2 < blockCount; ++i2) {
            s[i2] ^= blocks[i2];
          }
          f(s);
        };
        Keccak.prototype.toString = Keccak.prototype.hex = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var hex = "", block;
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              block = s[i2];
              hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15] + HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15] + HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15] + HEX_CHARS[block >> 28 & 15] + HEX_CHARS[block >> 24 & 15];
            }
            if (j2 % blockCount === 0) {
              f(s);
              i2 = 0;
            }
          }
          if (extraBytes) {
            block = s[i2];
            hex += HEX_CHARS[block >> 4 & 15] + HEX_CHARS[block & 15];
            if (extraBytes > 1) {
              hex += HEX_CHARS[block >> 12 & 15] + HEX_CHARS[block >> 8 & 15];
            }
            if (extraBytes > 2) {
              hex += HEX_CHARS[block >> 20 & 15] + HEX_CHARS[block >> 16 & 15];
            }
          }
          return hex;
        };
        Keccak.prototype.arrayBuffer = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var bytes = this.outputBits >> 3;
          var buffer;
          if (extraBytes) {
            buffer = new ArrayBuffer(outputBlocks + 1 << 2);
          } else {
            buffer = new ArrayBuffer(bytes);
          }
          var array = new Uint32Array(buffer);
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              array[j2] = s[i2];
            }
            if (j2 % blockCount === 0) {
              f(s);
            }
          }
          if (extraBytes) {
            array[i2] = s[i2];
            buffer = buffer.slice(0, bytes);
          }
          return buffer;
        };
        Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;
        Keccak.prototype.digest = Keccak.prototype.array = function() {
          this.finalize();
          var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks, extraBytes = this.extraBytes, i2 = 0, j2 = 0;
          var array = [], offset, block;
          while (j2 < outputBlocks) {
            for (i2 = 0; i2 < blockCount && j2 < outputBlocks; ++i2, ++j2) {
              offset = j2 << 2;
              block = s[i2];
              array[offset] = block & 255;
              array[offset + 1] = block >> 8 & 255;
              array[offset + 2] = block >> 16 & 255;
              array[offset + 3] = block >> 24 & 255;
            }
            if (j2 % blockCount === 0) {
              f(s);
            }
          }
          if (extraBytes) {
            offset = j2 << 2;
            block = s[i2];
            array[offset] = block & 255;
            if (extraBytes > 1) {
              array[offset + 1] = block >> 8 & 255;
            }
            if (extraBytes > 2) {
              array[offset + 2] = block >> 16 & 255;
            }
          }
          return array;
        };
        function Kmac(bits2, padding22, outputBits) {
          Keccak.call(this, bits2, padding22, outputBits);
        }
        Kmac.prototype = new Keccak();
        Kmac.prototype.finalize = function() {
          this.encode(this.outputBits, true);
          return Keccak.prototype.finalize.call(this);
        };
        var f = function(s) {
          var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9, b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17, b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33, b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;
          for (n = 0; n < 48; n += 2) {
            c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];
            c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];
            c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];
            c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];
            c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];
            c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];
            c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];
            c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];
            c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];
            c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];
            h = c8 ^ (c2 << 1 | c3 >>> 31);
            l = c9 ^ (c3 << 1 | c2 >>> 31);
            s[0] ^= h;
            s[1] ^= l;
            s[10] ^= h;
            s[11] ^= l;
            s[20] ^= h;
            s[21] ^= l;
            s[30] ^= h;
            s[31] ^= l;
            s[40] ^= h;
            s[41] ^= l;
            h = c0 ^ (c4 << 1 | c5 >>> 31);
            l = c1 ^ (c5 << 1 | c4 >>> 31);
            s[2] ^= h;
            s[3] ^= l;
            s[12] ^= h;
            s[13] ^= l;
            s[22] ^= h;
            s[23] ^= l;
            s[32] ^= h;
            s[33] ^= l;
            s[42] ^= h;
            s[43] ^= l;
            h = c2 ^ (c6 << 1 | c7 >>> 31);
            l = c3 ^ (c7 << 1 | c6 >>> 31);
            s[4] ^= h;
            s[5] ^= l;
            s[14] ^= h;
            s[15] ^= l;
            s[24] ^= h;
            s[25] ^= l;
            s[34] ^= h;
            s[35] ^= l;
            s[44] ^= h;
            s[45] ^= l;
            h = c4 ^ (c8 << 1 | c9 >>> 31);
            l = c5 ^ (c9 << 1 | c8 >>> 31);
            s[6] ^= h;
            s[7] ^= l;
            s[16] ^= h;
            s[17] ^= l;
            s[26] ^= h;
            s[27] ^= l;
            s[36] ^= h;
            s[37] ^= l;
            s[46] ^= h;
            s[47] ^= l;
            h = c6 ^ (c0 << 1 | c1 >>> 31);
            l = c7 ^ (c1 << 1 | c0 >>> 31);
            s[8] ^= h;
            s[9] ^= l;
            s[18] ^= h;
            s[19] ^= l;
            s[28] ^= h;
            s[29] ^= l;
            s[38] ^= h;
            s[39] ^= l;
            s[48] ^= h;
            s[49] ^= l;
            b0 = s[0];
            b1 = s[1];
            b32 = s[11] << 4 | s[10] >>> 28;
            b33 = s[10] << 4 | s[11] >>> 28;
            b14 = s[20] << 3 | s[21] >>> 29;
            b15 = s[21] << 3 | s[20] >>> 29;
            b46 = s[31] << 9 | s[30] >>> 23;
            b47 = s[30] << 9 | s[31] >>> 23;
            b28 = s[40] << 18 | s[41] >>> 14;
            b29 = s[41] << 18 | s[40] >>> 14;
            b20 = s[2] << 1 | s[3] >>> 31;
            b21 = s[3] << 1 | s[2] >>> 31;
            b2 = s[13] << 12 | s[12] >>> 20;
            b3 = s[12] << 12 | s[13] >>> 20;
            b34 = s[22] << 10 | s[23] >>> 22;
            b35 = s[23] << 10 | s[22] >>> 22;
            b16 = s[33] << 13 | s[32] >>> 19;
            b17 = s[32] << 13 | s[33] >>> 19;
            b48 = s[42] << 2 | s[43] >>> 30;
            b49 = s[43] << 2 | s[42] >>> 30;
            b40 = s[5] << 30 | s[4] >>> 2;
            b41 = s[4] << 30 | s[5] >>> 2;
            b22 = s[14] << 6 | s[15] >>> 26;
            b23 = s[15] << 6 | s[14] >>> 26;
            b4 = s[25] << 11 | s[24] >>> 21;
            b5 = s[24] << 11 | s[25] >>> 21;
            b36 = s[34] << 15 | s[35] >>> 17;
            b37 = s[35] << 15 | s[34] >>> 17;
            b18 = s[45] << 29 | s[44] >>> 3;
            b19 = s[44] << 29 | s[45] >>> 3;
            b10 = s[6] << 28 | s[7] >>> 4;
            b11 = s[7] << 28 | s[6] >>> 4;
            b42 = s[17] << 23 | s[16] >>> 9;
            b43 = s[16] << 23 | s[17] >>> 9;
            b24 = s[26] << 25 | s[27] >>> 7;
            b25 = s[27] << 25 | s[26] >>> 7;
            b6 = s[36] << 21 | s[37] >>> 11;
            b7 = s[37] << 21 | s[36] >>> 11;
            b38 = s[47] << 24 | s[46] >>> 8;
            b39 = s[46] << 24 | s[47] >>> 8;
            b30 = s[8] << 27 | s[9] >>> 5;
            b31 = s[9] << 27 | s[8] >>> 5;
            b12 = s[18] << 20 | s[19] >>> 12;
            b13 = s[19] << 20 | s[18] >>> 12;
            b44 = s[29] << 7 | s[28] >>> 25;
            b45 = s[28] << 7 | s[29] >>> 25;
            b26 = s[38] << 8 | s[39] >>> 24;
            b27 = s[39] << 8 | s[38] >>> 24;
            b8 = s[48] << 14 | s[49] >>> 18;
            b9 = s[49] << 14 | s[48] >>> 18;
            s[0] = b0 ^ ~b2 & b4;
            s[1] = b1 ^ ~b3 & b5;
            s[10] = b10 ^ ~b12 & b14;
            s[11] = b11 ^ ~b13 & b15;
            s[20] = b20 ^ ~b22 & b24;
            s[21] = b21 ^ ~b23 & b25;
            s[30] = b30 ^ ~b32 & b34;
            s[31] = b31 ^ ~b33 & b35;
            s[40] = b40 ^ ~b42 & b44;
            s[41] = b41 ^ ~b43 & b45;
            s[2] = b2 ^ ~b4 & b6;
            s[3] = b3 ^ ~b5 & b7;
            s[12] = b12 ^ ~b14 & b16;
            s[13] = b13 ^ ~b15 & b17;
            s[22] = b22 ^ ~b24 & b26;
            s[23] = b23 ^ ~b25 & b27;
            s[32] = b32 ^ ~b34 & b36;
            s[33] = b33 ^ ~b35 & b37;
            s[42] = b42 ^ ~b44 & b46;
            s[43] = b43 ^ ~b45 & b47;
            s[4] = b4 ^ ~b6 & b8;
            s[5] = b5 ^ ~b7 & b9;
            s[14] = b14 ^ ~b16 & b18;
            s[15] = b15 ^ ~b17 & b19;
            s[24] = b24 ^ ~b26 & b28;
            s[25] = b25 ^ ~b27 & b29;
            s[34] = b34 ^ ~b36 & b38;
            s[35] = b35 ^ ~b37 & b39;
            s[44] = b44 ^ ~b46 & b48;
            s[45] = b45 ^ ~b47 & b49;
            s[6] = b6 ^ ~b8 & b0;
            s[7] = b7 ^ ~b9 & b1;
            s[16] = b16 ^ ~b18 & b10;
            s[17] = b17 ^ ~b19 & b11;
            s[26] = b26 ^ ~b28 & b20;
            s[27] = b27 ^ ~b29 & b21;
            s[36] = b36 ^ ~b38 & b30;
            s[37] = b37 ^ ~b39 & b31;
            s[46] = b46 ^ ~b48 & b40;
            s[47] = b47 ^ ~b49 & b41;
            s[8] = b8 ^ ~b0 & b2;
            s[9] = b9 ^ ~b1 & b3;
            s[18] = b18 ^ ~b10 & b12;
            s[19] = b19 ^ ~b11 & b13;
            s[28] = b28 ^ ~b20 & b22;
            s[29] = b29 ^ ~b21 & b23;
            s[38] = b38 ^ ~b30 & b32;
            s[39] = b39 ^ ~b31 & b33;
            s[48] = b48 ^ ~b40 & b42;
            s[49] = b49 ^ ~b41 & b43;
            s[0] ^= RC[n];
            s[1] ^= RC[n + 1];
          }
        };
        if (COMMON_JS) {
          module.exports = methods;
        } else {
          for (i = 0; i < methodNames.length; ++i) {
            root[methodNames[i]] = methods[methodNames[i]];
          }
          if (AMD) {
            define(function() {
              return methods;
            });
          }
        }
      })();
    }
  });
  var require_minimalistic_assert = __commonJS2({
    "node_modules/minimalistic-assert/index.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      module.exports = assert22;
      function assert22(val, msg) {
        if (!val)
          throw new Error(msg || "Assertion failed");
      }
      assert22.equal = function assertEqual22(l, r22, msg) {
        if (l != r22)
          throw new Error(msg || "Assertion failed: " + l + " != " + r22);
      };
    }
  });
  var require_inherits_browser = __commonJS2({
    "node_modules/inherits/inherits_browser.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      if (typeof Object.create === "function") {
        module.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            ctor.prototype = Object.create(superCtor.prototype, {
              constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
              }
            });
          }
        };
      } else {
        module.exports = function inherits2(ctor, superCtor) {
          if (superCtor) {
            ctor.super_ = superCtor;
            var TempCtor = function() {
            };
            TempCtor.prototype = superCtor.prototype;
            ctor.prototype = new TempCtor();
            ctor.prototype.constructor = ctor;
          }
        };
      }
    }
  });
  var require_utils = __commonJS2({
    "node_modules/hash.js/lib/hash/utils.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var assert22 = require_minimalistic_assert();
      var inherits2 = require_inherits_browser();
      exports.inherits = inherits2;
      function isSurrogatePair(msg, i) {
        if ((msg.charCodeAt(i) & 64512) !== 55296) {
          return false;
        }
        if (i < 0 || i + 1 >= msg.length) {
          return false;
        }
        return (msg.charCodeAt(i + 1) & 64512) === 56320;
      }
      function toArray22(msg, enc) {
        if (Array.isArray(msg))
          return msg.slice();
        if (!msg)
          return [];
        var res = [];
        if (typeof msg === "string") {
          if (!enc) {
            var p = 0;
            for (var i = 0; i < msg.length; i++) {
              var c = msg.charCodeAt(i);
              if (c < 128) {
                res[p++] = c;
              } else if (c < 2048) {
                res[p++] = c >> 6 | 192;
                res[p++] = c & 63 | 128;
              } else if (isSurrogatePair(msg, i)) {
                c = 65536 + ((c & 1023) << 10) + (msg.charCodeAt(++i) & 1023);
                res[p++] = c >> 18 | 240;
                res[p++] = c >> 12 & 63 | 128;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              } else {
                res[p++] = c >> 12 | 224;
                res[p++] = c >> 6 & 63 | 128;
                res[p++] = c & 63 | 128;
              }
            }
          } else if (enc === "hex") {
            msg = msg.replace(/[^a-z0-9]+/ig, "");
            if (msg.length % 2 !== 0)
              msg = "0" + msg;
            for (i = 0; i < msg.length; i += 2)
              res.push(parseInt(msg[i] + msg[i + 1], 16));
          }
        } else {
          for (i = 0; i < msg.length; i++)
            res[i] = msg[i] | 0;
        }
        return res;
      }
      exports.toArray = toArray22;
      function toHex22(msg) {
        var res = "";
        for (var i = 0; i < msg.length; i++)
          res += zero2(msg[i].toString(16));
        return res;
      }
      exports.toHex = toHex22;
      function htonl(w) {
        var res = w >>> 24 | w >>> 8 & 65280 | w << 8 & 16711680 | (w & 255) << 24;
        return res >>> 0;
      }
      exports.htonl = htonl;
      function toHex32(msg, endian) {
        var res = "";
        for (var i = 0; i < msg.length; i++) {
          var w = msg[i];
          if (endian === "little")
            w = htonl(w);
          res += zero8(w.toString(16));
        }
        return res;
      }
      exports.toHex32 = toHex32;
      function zero2(word) {
        if (word.length === 1)
          return "0" + word;
        else
          return word;
      }
      exports.zero2 = zero2;
      function zero8(word) {
        if (word.length === 7)
          return "0" + word;
        else if (word.length === 6)
          return "00" + word;
        else if (word.length === 5)
          return "000" + word;
        else if (word.length === 4)
          return "0000" + word;
        else if (word.length === 3)
          return "00000" + word;
        else if (word.length === 2)
          return "000000" + word;
        else if (word.length === 1)
          return "0000000" + word;
        else
          return word;
      }
      exports.zero8 = zero8;
      function join32(msg, start, end, endian) {
        var len = end - start;
        assert22(len % 4 === 0);
        var res = new Array(len / 4);
        for (var i = 0, k = start; i < res.length; i++, k += 4) {
          var w;
          if (endian === "big")
            w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];
          else
            w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];
          res[i] = w >>> 0;
        }
        return res;
      }
      exports.join32 = join32;
      function split32(msg, endian) {
        var res = new Array(msg.length * 4);
        for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
          var m = msg[i];
          if (endian === "big") {
            res[k] = m >>> 24;
            res[k + 1] = m >>> 16 & 255;
            res[k + 2] = m >>> 8 & 255;
            res[k + 3] = m & 255;
          } else {
            res[k + 3] = m >>> 24;
            res[k + 2] = m >>> 16 & 255;
            res[k + 1] = m >>> 8 & 255;
            res[k] = m & 255;
          }
        }
        return res;
      }
      exports.split32 = split32;
      function rotr32(w, b) {
        return w >>> b | w << 32 - b;
      }
      exports.rotr32 = rotr32;
      function rotl32(w, b) {
        return w << b | w >>> 32 - b;
      }
      exports.rotl32 = rotl32;
      function sum32(a, b) {
        return a + b >>> 0;
      }
      exports.sum32 = sum32;
      function sum32_3(a, b, c) {
        return a + b + c >>> 0;
      }
      exports.sum32_3 = sum32_3;
      function sum32_4(a, b, c, d) {
        return a + b + c + d >>> 0;
      }
      exports.sum32_4 = sum32_4;
      function sum32_5(a, b, c, d, e) {
        return a + b + c + d + e >>> 0;
      }
      exports.sum32_5 = sum32_5;
      function sum64(buf, pos, ah, al) {
        var bh = buf[pos];
        var bl = buf[pos + 1];
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        buf[pos] = hi >>> 0;
        buf[pos + 1] = lo;
      }
      exports.sum64 = sum64;
      function sum64_hi(ah, al, bh, bl) {
        var lo = al + bl >>> 0;
        var hi = (lo < al ? 1 : 0) + ah + bh;
        return hi >>> 0;
      }
      exports.sum64_hi = sum64_hi;
      function sum64_lo(ah, al, bh, bl) {
        var lo = al + bl;
        return lo >>> 0;
      }
      exports.sum64_lo = sum64_lo;
      function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        var hi = ah + bh + ch + dh + carry;
        return hi >>> 0;
      }
      exports.sum64_4_hi = sum64_4_hi;
      function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
        var lo = al + bl + cl + dl;
        return lo >>> 0;
      }
      exports.sum64_4_lo = sum64_4_lo;
      function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var carry = 0;
        var lo = al;
        lo = lo + bl >>> 0;
        carry += lo < al ? 1 : 0;
        lo = lo + cl >>> 0;
        carry += lo < cl ? 1 : 0;
        lo = lo + dl >>> 0;
        carry += lo < dl ? 1 : 0;
        lo = lo + el >>> 0;
        carry += lo < el ? 1 : 0;
        var hi = ah + bh + ch + dh + eh + carry;
        return hi >>> 0;
      }
      exports.sum64_5_hi = sum64_5_hi;
      function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
        var lo = al + bl + cl + dl + el;
        return lo >>> 0;
      }
      exports.sum64_5_lo = sum64_5_lo;
      function rotr64_hi(ah, al, num) {
        var r22 = al << 32 - num | ah >>> num;
        return r22 >>> 0;
      }
      exports.rotr64_hi = rotr64_hi;
      function rotr64_lo(ah, al, num) {
        var r22 = ah << 32 - num | al >>> num;
        return r22 >>> 0;
      }
      exports.rotr64_lo = rotr64_lo;
      function shr64_hi(ah, al, num) {
        return ah >>> num;
      }
      exports.shr64_hi = shr64_hi;
      function shr64_lo(ah, al, num) {
        var r22 = ah << 32 - num | al >>> num;
        return r22 >>> 0;
      }
      exports.shr64_lo = shr64_lo;
    }
  });
  var require_common = __commonJS2({
    "node_modules/hash.js/lib/hash/common.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var assert22 = require_minimalistic_assert();
      function BlockHash() {
        this.pending = null;
        this.pendingTotal = 0;
        this.blockSize = this.constructor.blockSize;
        this.outSize = this.constructor.outSize;
        this.hmacStrength = this.constructor.hmacStrength;
        this.padLength = this.constructor.padLength / 8;
        this.endian = "big";
        this._delta8 = this.blockSize / 8;
        this._delta32 = this.blockSize / 32;
      }
      exports.BlockHash = BlockHash;
      BlockHash.prototype.update = function update22(msg, enc) {
        msg = utils.toArray(msg, enc);
        if (!this.pending)
          this.pending = msg;
        else
          this.pending = this.pending.concat(msg);
        this.pendingTotal += msg.length;
        if (this.pending.length >= this._delta8) {
          msg = this.pending;
          var r22 = msg.length % this._delta8;
          this.pending = msg.slice(msg.length - r22, msg.length);
          if (this.pending.length === 0)
            this.pending = null;
          msg = utils.join32(msg, 0, msg.length - r22, this.endian);
          for (var i = 0; i < msg.length; i += this._delta32)
            this._update(msg, i, i + this._delta32);
        }
        return this;
      };
      BlockHash.prototype.digest = function digest(enc) {
        this.update(this._pad());
        assert22(this.pending === null);
        return this._digest(enc);
      };
      BlockHash.prototype._pad = function pad() {
        var len = this.pendingTotal;
        var bytes = this._delta8;
        var k = bytes - (len + this.padLength) % bytes;
        var res = new Array(k + this.padLength);
        res[0] = 128;
        for (var i = 1; i < k; i++)
          res[i] = 0;
        len <<= 3;
        if (this.endian === "big") {
          for (var t = 8; t < this.padLength; t++)
            res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = len >>> 24 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len & 255;
        } else {
          res[i++] = len & 255;
          res[i++] = len >>> 8 & 255;
          res[i++] = len >>> 16 & 255;
          res[i++] = len >>> 24 & 255;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          res[i++] = 0;
          for (t = 8; t < this.padLength; t++)
            res[i++] = 0;
        }
        return res;
      };
    }
  });
  var require_common2 = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/common.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var rotr32 = utils.rotr32;
      function ft_1(s, x, y, z) {
        if (s === 0)
          return ch32(x, y, z);
        if (s === 1 || s === 3)
          return p32(x, y, z);
        if (s === 2)
          return maj32(x, y, z);
      }
      exports.ft_1 = ft_1;
      function ch32(x, y, z) {
        return x & y ^ ~x & z;
      }
      exports.ch32 = ch32;
      function maj32(x, y, z) {
        return x & y ^ x & z ^ y & z;
      }
      exports.maj32 = maj32;
      function p32(x, y, z) {
        return x ^ y ^ z;
      }
      exports.p32 = p32;
      function s0_256(x) {
        return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
      }
      exports.s0_256 = s0_256;
      function s1_256(x) {
        return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
      }
      exports.s1_256 = s1_256;
      function g0_256(x) {
        return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;
      }
      exports.g0_256 = g0_256;
      function g1_256(x) {
        return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;
      }
      exports.g1_256 = g1_256;
    }
  });
  var require__ = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/1.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var common = require_common();
      var shaCommon = require_common2();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_5 = utils.sum32_5;
      var ft_1 = shaCommon.ft_1;
      var BlockHash = common.BlockHash;
      var sha1_K = [
        1518500249,
        1859775393,
        2400959708,
        3395469782
      ];
      function SHA1() {
        if (!(this instanceof SHA1))
          return new SHA1();
        BlockHash.call(this);
        this.h = [
          1732584193,
          4023233417,
          2562383102,
          271733878,
          3285377520
        ];
        this.W = new Array(80);
      }
      utils.inherits(SHA1, BlockHash);
      module.exports = SHA1;
      SHA1.blockSize = 512;
      SHA1.outSize = 160;
      SHA1.hmacStrength = 80;
      SHA1.padLength = 64;
      SHA1.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        for (i = 0; i < W.length; i++) {
          var s = ~~(i / 20);
          var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
          e = d;
          d = c;
          c = rotl32(b, 30);
          b = a;
          a = t;
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
      };
      SHA1.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });
  var require__2 = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/256.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var common = require_common();
      var shaCommon = require_common2();
      var assert22 = require_minimalistic_assert();
      var sum32 = utils.sum32;
      var sum32_4 = utils.sum32_4;
      var sum32_5 = utils.sum32_5;
      var ch32 = shaCommon.ch32;
      var maj32 = shaCommon.maj32;
      var s0_256 = shaCommon.s0_256;
      var s1_256 = shaCommon.s1_256;
      var g0_256 = shaCommon.g0_256;
      var g1_256 = shaCommon.g1_256;
      var BlockHash = common.BlockHash;
      var sha256_K = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
      ];
      function SHA256() {
        if (!(this instanceof SHA256))
          return new SHA256();
        BlockHash.call(this);
        this.h = [
          1779033703,
          3144134277,
          1013904242,
          2773480762,
          1359893119,
          2600822924,
          528734635,
          1541459225
        ];
        this.k = sha256_K;
        this.W = new Array(64);
      }
      utils.inherits(SHA256, BlockHash);
      module.exports = SHA256;
      SHA256.blockSize = 512;
      SHA256.outSize = 256;
      SHA256.hmacStrength = 192;
      SHA256.padLength = 64;
      SHA256.prototype._update = function _update(msg, start) {
        var W = this.W;
        for (var i = 0; i < 16; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i++)
          W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);
        var a = this.h[0];
        var b = this.h[1];
        var c = this.h[2];
        var d = this.h[3];
        var e = this.h[4];
        var f = this.h[5];
        var g = this.h[6];
        var h = this.h[7];
        assert22(this.k.length === W.length);
        for (i = 0; i < W.length; i++) {
          var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
          var T2 = sum32(s0_256(a), maj32(a, b, c));
          h = g;
          g = f;
          f = e;
          e = sum32(d, T1);
          d = c;
          c = b;
          b = a;
          a = sum32(T1, T2);
        }
        this.h[0] = sum32(this.h[0], a);
        this.h[1] = sum32(this.h[1], b);
        this.h[2] = sum32(this.h[2], c);
        this.h[3] = sum32(this.h[3], d);
        this.h[4] = sum32(this.h[4], e);
        this.h[5] = sum32(this.h[5], f);
        this.h[6] = sum32(this.h[6], g);
        this.h[7] = sum32(this.h[7], h);
      };
      SHA256.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
    }
  });
  var require__3 = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/224.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var SHA256 = require__2();
      function SHA224() {
        if (!(this instanceof SHA224))
          return new SHA224();
        SHA256.call(this);
        this.h = [
          3238371032,
          914150663,
          812702999,
          4144912697,
          4290775857,
          1750603025,
          1694076839,
          3204075428
        ];
      }
      utils.inherits(SHA224, SHA256);
      module.exports = SHA224;
      SHA224.blockSize = 512;
      SHA224.outSize = 224;
      SHA224.hmacStrength = 192;
      SHA224.padLength = 64;
      SHA224.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 7), "big");
        else
          return utils.split32(this.h.slice(0, 7), "big");
      };
    }
  });
  var require__4 = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/512.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var common = require_common();
      var assert22 = require_minimalistic_assert();
      var rotr64_hi = utils.rotr64_hi;
      var rotr64_lo = utils.rotr64_lo;
      var shr64_hi = utils.shr64_hi;
      var shr64_lo = utils.shr64_lo;
      var sum64 = utils.sum64;
      var sum64_hi = utils.sum64_hi;
      var sum64_lo = utils.sum64_lo;
      var sum64_4_hi = utils.sum64_4_hi;
      var sum64_4_lo = utils.sum64_4_lo;
      var sum64_5_hi = utils.sum64_5_hi;
      var sum64_5_lo = utils.sum64_5_lo;
      var BlockHash = common.BlockHash;
      var sha512_K = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
      ];
      function SHA512() {
        if (!(this instanceof SHA512))
          return new SHA512();
        BlockHash.call(this);
        this.h = [
          1779033703,
          4089235720,
          3144134277,
          2227873595,
          1013904242,
          4271175723,
          2773480762,
          1595750129,
          1359893119,
          2917565137,
          2600822924,
          725511199,
          528734635,
          4215389547,
          1541459225,
          327033209
        ];
        this.k = sha512_K;
        this.W = new Array(160);
      }
      utils.inherits(SHA512, BlockHash);
      module.exports = SHA512;
      SHA512.blockSize = 1024;
      SHA512.outSize = 512;
      SHA512.hmacStrength = 192;
      SHA512.padLength = 128;
      SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
        var W = this.W;
        for (var i = 0; i < 32; i++)
          W[i] = msg[start + i];
        for (; i < W.length; i += 2) {
          var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);
          var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
          var c1_hi = W[i - 14];
          var c1_lo = W[i - 13];
          var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);
          var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
          var c3_hi = W[i - 32];
          var c3_lo = W[i - 31];
          W[i] = sum64_4_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
          W[i + 1] = sum64_4_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo
          );
        }
      };
      SHA512.prototype._update = function _update(msg, start) {
        this._prepareBlock(msg, start);
        var W = this.W;
        var ah = this.h[0];
        var al = this.h[1];
        var bh = this.h[2];
        var bl = this.h[3];
        var ch = this.h[4];
        var cl = this.h[5];
        var dh = this.h[6];
        var dl = this.h[7];
        var eh = this.h[8];
        var el = this.h[9];
        var fh = this.h[10];
        var fl = this.h[11];
        var gh = this.h[12];
        var gl = this.h[13];
        var hh = this.h[14];
        var hl = this.h[15];
        assert22(this.k.length === W.length);
        for (var i = 0; i < W.length; i += 2) {
          var c0_hi = hh;
          var c0_lo = hl;
          var c1_hi = s1_512_hi(eh, el);
          var c1_lo = s1_512_lo(eh, el);
          var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
          var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
          var c3_hi = this.k[i];
          var c3_lo = this.k[i + 1];
          var c4_hi = W[i];
          var c4_lo = W[i + 1];
          var T1_hi = sum64_5_hi(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          var T1_lo = sum64_5_lo(
            c0_hi,
            c0_lo,
            c1_hi,
            c1_lo,
            c2_hi,
            c2_lo,
            c3_hi,
            c3_lo,
            c4_hi,
            c4_lo
          );
          c0_hi = s0_512_hi(ah, al);
          c0_lo = s0_512_lo(ah, al);
          c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
          c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);
          var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
          var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);
          hh = gh;
          hl = gl;
          gh = fh;
          gl = fl;
          fh = eh;
          fl = el;
          eh = sum64_hi(dh, dl, T1_hi, T1_lo);
          el = sum64_lo(dl, dl, T1_hi, T1_lo);
          dh = ch;
          dl = cl;
          ch = bh;
          cl = bl;
          bh = ah;
          bl = al;
          ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
          al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
        }
        sum64(this.h, 0, ah, al);
        sum64(this.h, 2, bh, bl);
        sum64(this.h, 4, ch, cl);
        sum64(this.h, 6, dh, dl);
        sum64(this.h, 8, eh, el);
        sum64(this.h, 10, fh, fl);
        sum64(this.h, 12, gh, gl);
        sum64(this.h, 14, hh, hl);
      };
      SHA512.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "big");
        else
          return utils.split32(this.h, "big");
      };
      function ch64_hi(xh, xl, yh, yl, zh) {
        var r22 = xh & yh ^ ~xh & zh;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function ch64_lo(xh, xl, yh, yl, zh, zl) {
        var r22 = xl & yl ^ ~xl & zl;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function maj64_hi(xh, xl, yh, yl, zh) {
        var r22 = xh & yh ^ xh & zh ^ yh & zh;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function maj64_lo(xh, xl, yh, yl, zh, zl) {
        var r22 = xl & yl ^ xl & zl ^ yl & zl;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function s0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 28);
        var c1_hi = rotr64_hi(xl, xh, 2);
        var c2_hi = rotr64_hi(xl, xh, 7);
        var r22 = c0_hi ^ c1_hi ^ c2_hi;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function s0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 28);
        var c1_lo = rotr64_lo(xl, xh, 2);
        var c2_lo = rotr64_lo(xl, xh, 7);
        var r22 = c0_lo ^ c1_lo ^ c2_lo;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function s1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 14);
        var c1_hi = rotr64_hi(xh, xl, 18);
        var c2_hi = rotr64_hi(xl, xh, 9);
        var r22 = c0_hi ^ c1_hi ^ c2_hi;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function s1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 14);
        var c1_lo = rotr64_lo(xh, xl, 18);
        var c2_lo = rotr64_lo(xl, xh, 9);
        var r22 = c0_lo ^ c1_lo ^ c2_lo;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function g0_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 1);
        var c1_hi = rotr64_hi(xh, xl, 8);
        var c2_hi = shr64_hi(xh, xl, 7);
        var r22 = c0_hi ^ c1_hi ^ c2_hi;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function g0_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 1);
        var c1_lo = rotr64_lo(xh, xl, 8);
        var c2_lo = shr64_lo(xh, xl, 7);
        var r22 = c0_lo ^ c1_lo ^ c2_lo;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function g1_512_hi(xh, xl) {
        var c0_hi = rotr64_hi(xh, xl, 19);
        var c1_hi = rotr64_hi(xl, xh, 29);
        var c2_hi = shr64_hi(xh, xl, 6);
        var r22 = c0_hi ^ c1_hi ^ c2_hi;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
      function g1_512_lo(xh, xl) {
        var c0_lo = rotr64_lo(xh, xl, 19);
        var c1_lo = rotr64_lo(xl, xh, 29);
        var c2_lo = shr64_lo(xh, xl, 6);
        var r22 = c0_lo ^ c1_lo ^ c2_lo;
        if (r22 < 0)
          r22 += 4294967296;
        return r22;
      }
    }
  });
  var require__5 = __commonJS2({
    "node_modules/hash.js/lib/hash/sha/384.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var SHA512 = require__4();
      function SHA384() {
        if (!(this instanceof SHA384))
          return new SHA384();
        SHA512.call(this);
        this.h = [
          3418070365,
          3238371032,
          1654270250,
          914150663,
          2438529370,
          812702999,
          355462360,
          4144912697,
          1731405415,
          4290775857,
          2394180231,
          1750603025,
          3675008525,
          1694076839,
          1203062813,
          3204075428
        ];
      }
      utils.inherits(SHA384, SHA512);
      module.exports = SHA384;
      SHA384.blockSize = 1024;
      SHA384.outSize = 384;
      SHA384.hmacStrength = 192;
      SHA384.padLength = 128;
      SHA384.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h.slice(0, 12), "big");
        else
          return utils.split32(this.h.slice(0, 12), "big");
      };
    }
  });
  var require_sha = __commonJS2({
    "node_modules/hash.js/lib/hash/sha.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      exports.sha1 = require__();
      exports.sha224 = require__3();
      exports.sha256 = require__2();
      exports.sha384 = require__5();
      exports.sha512 = require__4();
    }
  });
  var require_ripemd = __commonJS2({
    "node_modules/hash.js/lib/hash/ripemd.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var common = require_common();
      var rotl32 = utils.rotl32;
      var sum32 = utils.sum32;
      var sum32_3 = utils.sum32_3;
      var sum32_4 = utils.sum32_4;
      var BlockHash = common.BlockHash;
      function RIPEMD160() {
        if (!(this instanceof RIPEMD160))
          return new RIPEMD160();
        BlockHash.call(this);
        this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
        this.endian = "little";
      }
      utils.inherits(RIPEMD160, BlockHash);
      exports.ripemd160 = RIPEMD160;
      RIPEMD160.blockSize = 512;
      RIPEMD160.outSize = 160;
      RIPEMD160.hmacStrength = 192;
      RIPEMD160.padLength = 64;
      RIPEMD160.prototype._update = function update22(msg, start) {
        var A = this.h[0];
        var B = this.h[1];
        var C = this.h[2];
        var D = this.h[3];
        var E = this.h[4];
        var Ah = A;
        var Bh = B;
        var Ch = C;
        var Dh = D;
        var Eh = E;
        for (var j = 0; j < 80; j++) {
          var T = sum32(
            rotl32(
              sum32_4(A, f(j, B, C, D), msg[r22[j] + start], K(j)),
              s[j]
            ),
            E
          );
          A = E;
          E = D;
          D = rotl32(C, 10);
          C = B;
          B = T;
          T = sum32(
            rotl32(
              sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
              sh[j]
            ),
            Eh
          );
          Ah = Eh;
          Eh = Dh;
          Dh = rotl32(Ch, 10);
          Ch = Bh;
          Bh = T;
        }
        T = sum32_3(this.h[1], C, Dh);
        this.h[1] = sum32_3(this.h[2], D, Eh);
        this.h[2] = sum32_3(this.h[3], E, Ah);
        this.h[3] = sum32_3(this.h[4], A, Bh);
        this.h[4] = sum32_3(this.h[0], B, Ch);
        this.h[0] = T;
      };
      RIPEMD160.prototype._digest = function digest(enc) {
        if (enc === "hex")
          return utils.toHex32(this.h, "little");
        else
          return utils.split32(this.h, "little");
      };
      function f(j, x, y, z) {
        if (j <= 15)
          return x ^ y ^ z;
        else if (j <= 31)
          return x & y | ~x & z;
        else if (j <= 47)
          return (x | ~y) ^ z;
        else if (j <= 63)
          return x & z | y & ~z;
        else
          return x ^ (y | ~z);
      }
      function K(j) {
        if (j <= 15)
          return 0;
        else if (j <= 31)
          return 1518500249;
        else if (j <= 47)
          return 1859775393;
        else if (j <= 63)
          return 2400959708;
        else
          return 2840853838;
      }
      function Kh(j) {
        if (j <= 15)
          return 1352829926;
        else if (j <= 31)
          return 1548603684;
        else if (j <= 47)
          return 1836072691;
        else if (j <= 63)
          return 2053994217;
        else
          return 0;
      }
      var r22 = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        7,
        4,
        13,
        1,
        10,
        6,
        15,
        3,
        12,
        0,
        9,
        5,
        2,
        14,
        11,
        8,
        3,
        10,
        14,
        4,
        9,
        15,
        8,
        1,
        2,
        7,
        0,
        6,
        13,
        11,
        5,
        12,
        1,
        9,
        11,
        10,
        0,
        8,
        12,
        4,
        13,
        3,
        7,
        15,
        14,
        5,
        6,
        2,
        4,
        0,
        5,
        9,
        7,
        12,
        2,
        10,
        14,
        1,
        3,
        8,
        11,
        6,
        15,
        13
      ];
      var rh = [
        5,
        14,
        7,
        0,
        9,
        2,
        11,
        4,
        13,
        6,
        15,
        8,
        1,
        10,
        3,
        12,
        6,
        11,
        3,
        7,
        0,
        13,
        5,
        10,
        14,
        15,
        8,
        12,
        4,
        9,
        1,
        2,
        15,
        5,
        1,
        3,
        7,
        14,
        6,
        9,
        11,
        8,
        12,
        2,
        10,
        0,
        4,
        13,
        8,
        6,
        4,
        1,
        3,
        11,
        15,
        0,
        5,
        12,
        2,
        13,
        9,
        7,
        10,
        14,
        12,
        15,
        10,
        4,
        1,
        5,
        8,
        7,
        6,
        2,
        13,
        14,
        0,
        3,
        9,
        11
      ];
      var s = [
        11,
        14,
        15,
        12,
        5,
        8,
        7,
        9,
        11,
        13,
        14,
        15,
        6,
        7,
        9,
        8,
        7,
        6,
        8,
        13,
        11,
        9,
        7,
        15,
        7,
        12,
        15,
        9,
        11,
        7,
        13,
        12,
        11,
        13,
        6,
        7,
        14,
        9,
        13,
        15,
        14,
        8,
        13,
        6,
        5,
        12,
        7,
        5,
        11,
        12,
        14,
        15,
        14,
        15,
        9,
        8,
        9,
        14,
        5,
        6,
        8,
        6,
        5,
        12,
        9,
        15,
        5,
        11,
        6,
        8,
        13,
        12,
        5,
        12,
        13,
        14,
        11,
        8,
        5,
        6
      ];
      var sh = [
        8,
        9,
        9,
        11,
        13,
        15,
        15,
        5,
        7,
        7,
        8,
        11,
        14,
        14,
        12,
        6,
        9,
        13,
        15,
        7,
        12,
        8,
        9,
        11,
        7,
        7,
        12,
        7,
        6,
        15,
        13,
        11,
        9,
        7,
        15,
        11,
        8,
        6,
        6,
        14,
        12,
        13,
        5,
        14,
        13,
        13,
        7,
        5,
        15,
        5,
        8,
        11,
        14,
        14,
        6,
        14,
        6,
        9,
        12,
        9,
        12,
        5,
        15,
        8,
        8,
        5,
        12,
        9,
        12,
        5,
        14,
        6,
        8,
        13,
        6,
        5,
        15,
        13,
        11,
        11
      ];
    }
  });
  var require_hmac = __commonJS2({
    "node_modules/hash.js/lib/hash/hmac.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var utils = require_utils();
      var assert22 = require_minimalistic_assert();
      function Hmac(hash3, key22, enc) {
        if (!(this instanceof Hmac))
          return new Hmac(hash3, key22, enc);
        this.Hash = hash3;
        this.blockSize = hash3.blockSize / 8;
        this.outSize = hash3.outSize / 8;
        this.inner = null;
        this.outer = null;
        this._init(utils.toArray(key22, enc));
      }
      module.exports = Hmac;
      Hmac.prototype._init = function init22(key22) {
        if (key22.length > this.blockSize)
          key22 = new this.Hash().update(key22).digest();
        assert22(key22.length <= this.blockSize);
        for (var i = key22.length; i < this.blockSize; i++)
          key22.push(0);
        for (i = 0; i < key22.length; i++)
          key22[i] ^= 54;
        this.inner = new this.Hash().update(key22);
        for (i = 0; i < key22.length; i++)
          key22[i] ^= 106;
        this.outer = new this.Hash().update(key22);
      };
      Hmac.prototype.update = function update22(msg, enc) {
        this.inner.update(msg, enc);
        return this;
      };
      Hmac.prototype.digest = function digest(enc) {
        this.outer.update(this.inner.digest());
        return this.outer.digest(enc);
      };
    }
  });
  var require_hash = __commonJS2({
    "node_modules/hash.js/lib/hash.js"(exports) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var hash3 = exports;
      hash3.utils = require_utils();
      hash3.common = require_common();
      hash3.sha = require_sha();
      hash3.ripemd = require_ripemd();
      hash3.hmac = require_hmac();
      hash3.sha1 = hash3.sha.sha1;
      hash3.sha256 = hash3.sha.sha256;
      hash3.sha224 = hash3.sha.sha224;
      hash3.sha384 = hash3.sha.sha384;
      hash3.sha512 = hash3.sha.sha512;
      hash3.ripemd160 = hash3.ripemd.ripemd160;
    }
  });
  var require_bech32 = __commonJS2({
    "node_modules/bech32/index.js"(exports, module) {
      "use strict";
      init_define_chainIDList();
      init_define_extraRpcs();
      var ALPHABET2 = "qpzry9x8gf2tvdw0s3jn54khce6mua7l";
      var ALPHABET_MAP = {};
      for (z = 0; z < ALPHABET2.length; z++) {
        x = ALPHABET2.charAt(z);
        if (ALPHABET_MAP[x] !== void 0)
          throw new TypeError(x + " is ambiguous");
        ALPHABET_MAP[x] = z;
      }
      var x;
      var z;
      function polymodStep(pre) {
        var b = pre >> 25;
        return (pre & 33554431) << 5 ^ -(b >> 0 & 1) & 996825010 ^ -(b >> 1 & 1) & 642813549 ^ -(b >> 2 & 1) & 513874426 ^ -(b >> 3 & 1) & 1027748829 ^ -(b >> 4 & 1) & 705979059;
      }
      function prefixChk(prefix) {
        var chk = 1;
        for (var i = 0; i < prefix.length; ++i) {
          var c = prefix.charCodeAt(i);
          if (c < 33 || c > 126)
            return "Invalid prefix (" + prefix + ")";
          chk = polymodStep(chk) ^ c >> 5;
        }
        chk = polymodStep(chk);
        for (i = 0; i < prefix.length; ++i) {
          var v = prefix.charCodeAt(i);
          chk = polymodStep(chk) ^ v & 31;
        }
        return chk;
      }
      function encode62(prefix, words2, LIMIT) {
        LIMIT = LIMIT || 90;
        if (prefix.length + 7 + words2.length > LIMIT)
          throw new TypeError("Exceeds length limit");
        prefix = prefix.toLowerCase();
        var chk = prefixChk(prefix);
        if (typeof chk === "string")
          throw new Error(chk);
        var result = prefix + "1";
        for (var i = 0; i < words2.length; ++i) {
          var x2 = words2[i];
          if (x2 >> 5 !== 0)
            throw new Error("Non 5-bit word");
          chk = polymodStep(chk) ^ x2;
          result += ALPHABET2.charAt(x2);
        }
        for (i = 0; i < 6; ++i) {
          chk = polymodStep(chk);
        }
        chk ^= 1;
        for (i = 0; i < 6; ++i) {
          var v = chk >> (5 - i) * 5 & 31;
          result += ALPHABET2.charAt(v);
        }
        return result;
      }
      function __decode(str, LIMIT) {
        LIMIT = LIMIT || 90;
        if (str.length < 8)
          return str + " too short";
        if (str.length > LIMIT)
          return "Exceeds length limit";
        var lowered = str.toLowerCase();
        var uppered = str.toUpperCase();
        if (str !== lowered && str !== uppered)
          return "Mixed-case string " + str;
        str = lowered;
        var split = str.lastIndexOf("1");
        if (split === -1)
          return "No separator character for " + str;
        if (split === 0)
          return "Missing prefix for " + str;
        var prefix = str.slice(0, split);
        var wordChars = str.slice(split + 1);
        if (wordChars.length < 6)
          return "Data too short";
        var chk = prefixChk(prefix);
        if (typeof chk === "string")
          return chk;
        var words2 = [];
        for (var i = 0; i < wordChars.length; ++i) {
          var c = wordChars.charAt(i);
          var v = ALPHABET_MAP[c];
          if (v === void 0)
            return "Unknown character " + c;
          chk = polymodStep(chk) ^ v;
          if (i + 6 >= wordChars.length)
            continue;
          words2.push(v);
        }
        if (chk !== 1)
          return "Invalid checksum for " + str;
        return { prefix, words: words2 };
      }
      function decodeUnsafe() {
        var res = __decode.apply(null, arguments);
        if (typeof res === "object")
          return res;
      }
      function decode32(str) {
        var res = __decode.apply(null, arguments);
        if (typeof res === "object")
          return res;
        throw new Error(res);
      }
      function convert(data, inBits, outBits, pad) {
        var value = 0;
        var bits = 0;
        var maxV = (1 << outBits) - 1;
        var result = [];
        for (var i = 0; i < data.length; ++i) {
          value = value << inBits | data[i];
          bits += inBits;
          while (bits >= outBits) {
            bits -= outBits;
            result.push(value >> bits & maxV);
          }
        }
        if (pad) {
          if (bits > 0) {
            result.push(value << outBits - bits & maxV);
          }
        } else {
          if (bits >= inBits)
            return "Excess padding";
          if (value << outBits - bits & maxV)
            return "Non-zero padding";
        }
        return result;
      }
      function toWordsUnsafe(bytes) {
        var res = convert(bytes, 8, 5, true);
        if (Array.isArray(res))
          return res;
      }
      function toWords(bytes) {
        var res = convert(bytes, 8, 5, true);
        if (Array.isArray(res))
          return res;
        throw new Error(res);
      }
      function fromWordsUnsafe(words2) {
        var res = convert(words2, 5, 8, false);
        if (Array.isArray(res))
          return res;
      }
      function fromWords(words2) {
        var res = convert(words2, 5, 8, false);
        if (Array.isArray(res))
          return res;
        throw new Error(res);
      }
      module.exports = {
        decodeUnsafe,
        decode: decode32,
        encode: encode62,
        toWordsUnsafe,
        toWords,
        fromWordsUnsafe,
        fromWords
      };
    }
  });
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var permit2Address = "0x000000000022D473030F116dDEE9F6B43aC78BA3";
  var LOCAL_HOST = "http://127.0.0.1:8545";
  var networkIds = Object.fromEntries(
    Object.entries(define_chainIDList_default).map(([id22, name]) => {
      const chainId = parseInt(id22);
      const chain = name.charAt(0).toUpperCase() + name.slice(1);
      return [chain, chainId];
    })
  );
  var networkNames = Object.fromEntries(
    Object.entries(networkIds).map(([name, id22]) => {
      const chainName = name.charAt(0).toUpperCase() + name.slice(1);
      return [id22, chainName];
    })
  );
  var networkRpcs = Object.fromEntries(
    Object.entries(networkIds).map(([, value]) => {
      const chainRpcs = define_extraRpcs_default[value] || [];
      return [value, chainRpcs];
    })
  );
  var tokens = {
    [networkIds.Mainnet]: {
      DAI: {
        address: "0x6b175474e89094c44da98b954eedeac495271d0f",
        decimals: 18,
        symbol: "DAI"
      }
    },
    [networkIds.Gnosis]: {
      WXDAI: {
        address: "0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",
        decimals: 18,
        symbol: "WXDAI"
      }
    }
  };
  var networkCurrencies = {
    [networkIds.Mainnet]: { symbol: "ETH", decimals: 18 },
    [networkIds.Goerli]: { symbol: "GoerliETH", decimals: 18 },
    [networkIds.Gnosis]: { symbol: "XDAI", decimals: 18 },
    [networkIds.Anvil]: { symbol: "XDAI", decimals: 18 }
  };
  var networkExplorers = {
    [networkIds.Mainnet]: "https://etherscan.io",
    [networkIds.Goerli]: "https://goerli.etherscan.io",
    [networkIds.Gnosis]: "https://gnosisscan.io",
    [networkIds.Anvil]: "https://gnosisscan.io"
  };
  function getNetworkName(networkId) {
    const networkName = networkNames[networkId ?? 0];
    if (!networkName) {
      console.error(`Unknown network ID: ${networkId}`);
    }
    return networkName ?? "Unknown Network";
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var import_bn = __toESM2(require_bn());
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version = "logger/5.7.0";
  var _permanentCensorErrors = false;
  var _censorErrors = false;
  var LogLevels = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
  var _logLevel = LogLevels["default"];
  var _globalLogger = null;
  function _checkNormalize() {
    try {
      const missing = [];
      ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
        try {
          if ("test".normalize(form) !== "test") {
            throw new Error("bad normalize");
          }
          ;
        } catch (error) {
          missing.push(form);
        }
      });
      if (missing.length) {
        throw new Error("missing " + missing.join(", "));
      }
      if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) {
        throw new Error("broken implementation");
      }
    } catch (error) {
      return error.message;
    }
    return null;
  }
  var _normalizeError = _checkNormalize();
  var LogLevel;
  (function(LogLevel22) {
    LogLevel22["DEBUG"] = "DEBUG";
    LogLevel22["INFO"] = "INFO";
    LogLevel22["WARNING"] = "WARNING";
    LogLevel22["ERROR"] = "ERROR";
    LogLevel22["OFF"] = "OFF";
  })(LogLevel || (LogLevel = {}));
  var ErrorCode;
  (function(ErrorCode22) {
    ErrorCode22["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    ErrorCode22["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    ErrorCode22["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    ErrorCode22["NETWORK_ERROR"] = "NETWORK_ERROR";
    ErrorCode22["SERVER_ERROR"] = "SERVER_ERROR";
    ErrorCode22["TIMEOUT"] = "TIMEOUT";
    ErrorCode22["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    ErrorCode22["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ErrorCode22["MISSING_NEW"] = "MISSING_NEW";
    ErrorCode22["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    ErrorCode22["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    ErrorCode22["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ErrorCode22["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    ErrorCode22["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    ErrorCode22["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    ErrorCode22["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    ErrorCode22["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    ErrorCode22["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
    ErrorCode22["ACTION_REJECTED"] = "ACTION_REJECTED";
  })(ErrorCode || (ErrorCode = {}));
  var HEX = "0123456789abcdef";
  var Logger = class _Logger {
    constructor(version172) {
      Object.defineProperty(this, "version", {
        enumerable: true,
        value: version172,
        writable: false
      });
    }
    _log(logLevel, args) {
      const level = logLevel.toLowerCase();
      if (LogLevels[level] == null) {
        this.throwArgumentError("invalid log level name", "logLevel", logLevel);
      }
      if (_logLevel > LogLevels[level]) {
        return;
      }
      console.log.apply(console, args);
    }
    debug(...args) {
      this._log(_Logger.levels.DEBUG, args);
    }
    info(...args) {
      this._log(_Logger.levels.INFO, args);
    }
    warn(...args) {
      this._log(_Logger.levels.WARNING, args);
    }
    makeError(message, code, params) {
      if (_censorErrors) {
        return this.makeError("censored error", code, {});
      }
      if (!code) {
        code = _Logger.errors.UNKNOWN_ERROR;
      }
      if (!params) {
        params = {};
      }
      const messageDetails = [];
      Object.keys(params).forEach((key22) => {
        const value = params[key22];
        try {
          if (value instanceof Uint8Array) {
            let hex = "";
            for (let i = 0; i < value.length; i++) {
              hex += HEX[value[i] >> 4];
              hex += HEX[value[i] & 15];
            }
            messageDetails.push(key22 + "=Uint8Array(0x" + hex + ")");
          } else {
            messageDetails.push(key22 + "=" + JSON.stringify(value));
          }
        } catch (error2) {
          messageDetails.push(key22 + "=" + JSON.stringify(params[key22].toString()));
        }
      });
      messageDetails.push(`code=${code}`);
      messageDetails.push(`version=${this.version}`);
      const reason = message;
      let url = "";
      switch (code) {
        case ErrorCode.NUMERIC_FAULT: {
          url = "NUMERIC_FAULT";
          const fault = message;
          switch (fault) {
            case "overflow":
            case "underflow":
            case "division-by-zero":
              url += "-" + fault;
              break;
            case "negative-power":
            case "negative-width":
              url += "-unsupported";
              break;
            case "unbound-bitwise-result":
              url += "-unbound-result";
              break;
          }
          break;
        }
        case ErrorCode.CALL_EXCEPTION:
        case ErrorCode.INSUFFICIENT_FUNDS:
        case ErrorCode.MISSING_NEW:
        case ErrorCode.NONCE_EXPIRED:
        case ErrorCode.REPLACEMENT_UNDERPRICED:
        case ErrorCode.TRANSACTION_REPLACED:
        case ErrorCode.UNPREDICTABLE_GAS_LIMIT:
          url = code;
          break;
      }
      if (url) {
        message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
      }
      if (messageDetails.length) {
        message += " (" + messageDetails.join(", ") + ")";
      }
      const error = new Error(message);
      error.reason = reason;
      error.code = code;
      Object.keys(params).forEach(function(key22) {
        error[key22] = params[key22];
      });
      return error;
    }
    throwError(message, code, params) {
      throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
      return this.throwError(message, _Logger.errors.INVALID_ARGUMENT, {
        argument: name,
        value
      });
    }
    assert(condition, message, code, params) {
      if (!!condition) {
        return;
      }
      this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
      if (!!condition) {
        return;
      }
      this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
      if (message == null) {
        message = "platform missing String.prototype.normalize";
      }
      if (_normalizeError) {
        this.throwError("platform missing String.prototype.normalize", _Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "String.prototype.normalize",
          form: _normalizeError
        });
      }
    }
    checkSafeUint53(value, message) {
      if (typeof value !== "number") {
        return;
      }
      if (message == null) {
        message = "value not safe";
      }
      if (value < 0 || value >= 9007199254740991) {
        this.throwError(message, _Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "out-of-safe-range",
          value
        });
      }
      if (value % 1) {
        this.throwError(message, _Logger.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "non-integer",
          value
        });
      }
    }
    checkArgumentCount(count, expectedCount, message) {
      if (message) {
        message = ": " + message;
      } else {
        message = "";
      }
      if (count < expectedCount) {
        this.throwError("missing argument" + message, _Logger.errors.MISSING_ARGUMENT, {
          count,
          expectedCount
        });
      }
      if (count > expectedCount) {
        this.throwError("too many arguments" + message, _Logger.errors.UNEXPECTED_ARGUMENT, {
          count,
          expectedCount
        });
      }
    }
    checkNew(target, kind) {
      if (target === Object || target == null) {
        this.throwError("missing new", _Logger.errors.MISSING_NEW, { name: kind.name });
      }
    }
    checkAbstract(target, kind) {
      if (target === kind) {
        this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", _Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
      } else if (target === Object || target == null) {
        this.throwError("missing new", _Logger.errors.MISSING_NEW, { name: kind.name });
      }
    }
    static globalLogger() {
      if (!_globalLogger) {
        _globalLogger = new _Logger(version);
      }
      return _globalLogger;
    }
    static setCensorship(censorship, permanent) {
      if (!censorship && permanent) {
        this.globalLogger().throwError("cannot permanently disable censorship", _Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      if (_permanentCensorErrors) {
        if (!censorship) {
          return;
        }
        this.globalLogger().throwError("error censorship permanent", _Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      _censorErrors = !!censorship;
      _permanentCensorErrors = !!permanent;
    }
    static setLogLevel(logLevel) {
      const level = LogLevels[logLevel.toLowerCase()];
      if (level == null) {
        _Logger.globalLogger().warn("invalid log level - " + logLevel);
        return;
      }
      _logLevel = level;
    }
    static from(version172) {
      return new _Logger(version172);
    }
  };
  Logger.errors = ErrorCode;
  Logger.levels = LogLevel;
  init_define_chainIDList();
  init_define_extraRpcs();
  var version2 = "bytes/5.7.0";
  var logger = new Logger(version2);
  function isHexable(value) {
    return !!value.toHexString;
  }
  function addSlice(array) {
    if (array.slice) {
      return array;
    }
    array.slice = function() {
      const args = Array.prototype.slice.call(arguments);
      return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
  }
  function isBytesLike(value) {
    return isHexString(value) && !(value.length % 2) || isBytes(value);
  }
  function isInteger(value) {
    return typeof value === "number" && value == value && value % 1 === 0;
  }
  function isBytes(value) {
    if (value == null) {
      return false;
    }
    if (value.constructor === Uint8Array) {
      return true;
    }
    if (typeof value === "string") {
      return false;
    }
    if (!isInteger(value.length) || value.length < 0) {
      return false;
    }
    for (let i = 0; i < value.length; i++) {
      const v = value[i];
      if (!isInteger(v) || v < 0 || v >= 256) {
        return false;
      }
    }
    return true;
  }
  function arrayify(value, options) {
    if (!options) {
      options = {};
    }
    if (typeof value === "number") {
      logger.checkSafeUint53(value, "invalid arrayify value");
      const result = [];
      while (value) {
        result.unshift(value & 255);
        value = parseInt(String(value / 256));
      }
      if (result.length === 0) {
        result.push(0);
      }
      return addSlice(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (isHexable(value)) {
      value = value.toHexString();
    }
    if (isHexString(value)) {
      let hex = value.substring(2);
      if (hex.length % 2) {
        if (options.hexPad === "left") {
          hex = "0" + hex;
        } else if (options.hexPad === "right") {
          hex += "0";
        } else {
          logger.throwArgumentError("hex data is odd-length", "value", value);
        }
      }
      const result = [];
      for (let i = 0; i < hex.length; i += 2) {
        result.push(parseInt(hex.substring(i, i + 2), 16));
      }
      return addSlice(new Uint8Array(result));
    }
    if (isBytes(value)) {
      return addSlice(new Uint8Array(value));
    }
    return logger.throwArgumentError("invalid arrayify value", "value", value);
  }
  function concat(items) {
    const objects = items.map((item) => arrayify(item));
    const length = objects.reduce((accum, item) => accum + item.length, 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object) => {
      result.set(object, offset);
      return offset + object.length;
    }, 0);
    return addSlice(result);
  }
  function stripZeros(value) {
    let result = arrayify(value);
    if (result.length === 0) {
      return result;
    }
    let start = 0;
    while (start < result.length && result[start] === 0) {
      start++;
    }
    if (start) {
      result = result.slice(start);
    }
    return result;
  }
  function zeroPad(value, length) {
    value = arrayify(value);
    if (value.length > length) {
      logger.throwArgumentError("value out of range", "value", arguments[0]);
    }
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice(result);
  }
  function isHexString(value, length) {
    if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
      return false;
    }
    if (length && value.length !== 2 + 2 * length) {
      return false;
    }
    return true;
  }
  var HexCharacters = "0123456789abcdef";
  function hexlify(value, options) {
    if (!options) {
      options = {};
    }
    if (typeof value === "number") {
      logger.checkSafeUint53(value, "invalid hexlify value");
      let hex = "";
      while (value) {
        hex = HexCharacters[value & 15] + hex;
        value = Math.floor(value / 16);
      }
      if (hex.length) {
        if (hex.length % 2) {
          hex = "0" + hex;
        }
        return "0x" + hex;
      }
      return "0x00";
    }
    if (typeof value === "bigint") {
      value = value.toString(16);
      if (value.length % 2) {
        return "0x0" + value;
      }
      return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (isHexable(value)) {
      return value.toHexString();
    }
    if (isHexString(value)) {
      if (value.length % 2) {
        if (options.hexPad === "left") {
          value = "0x0" + value.substring(2);
        } else if (options.hexPad === "right") {
          value += "0";
        } else {
          logger.throwArgumentError("hex data is odd-length", "value", value);
        }
      }
      return value.toLowerCase();
    }
    if (isBytes(value)) {
      let result = "0x";
      for (let i = 0; i < value.length; i++) {
        let v = value[i];
        result += HexCharacters[(v & 240) >> 4] + HexCharacters[v & 15];
      }
      return result;
    }
    return logger.throwArgumentError("invalid hexlify value", "value", value);
  }
  function hexDataLength(data) {
    if (typeof data !== "string") {
      data = hexlify(data);
    } else if (!isHexString(data) || data.length % 2) {
      return null;
    }
    return (data.length - 2) / 2;
  }
  function hexDataSlice(data, offset, endOffset) {
    if (typeof data !== "string") {
      data = hexlify(data);
    } else if (!isHexString(data) || data.length % 2) {
      logger.throwArgumentError("invalid hexData", "value", data);
    }
    offset = 2 + 2 * offset;
    if (endOffset != null) {
      return "0x" + data.substring(offset, 2 + 2 * endOffset);
    }
    return "0x" + data.substring(offset);
  }
  function hexConcat(items) {
    let result = "0x";
    items.forEach((item) => {
      result += hexlify(item).substring(2);
    });
    return result;
  }
  function hexValue(value) {
    const trimmed = hexStripZeros(hexlify(value, { hexPad: "left" }));
    if (trimmed === "0x") {
      return "0x0";
    }
    return trimmed;
  }
  function hexStripZeros(value) {
    if (typeof value !== "string") {
      value = hexlify(value);
    }
    if (!isHexString(value)) {
      logger.throwArgumentError("invalid hex string", "value", value);
    }
    value = value.substring(2);
    let offset = 0;
    while (offset < value.length && value[offset] === "0") {
      offset++;
    }
    return "0x" + value.substring(offset);
  }
  function hexZeroPad(value, length) {
    if (typeof value !== "string") {
      value = hexlify(value);
    } else if (!isHexString(value)) {
      logger.throwArgumentError("invalid hex string", "value", value);
    }
    if (value.length > 2 * length + 2) {
      logger.throwArgumentError("value out of range", "value", arguments[1]);
    }
    while (value.length < 2 * length + 2) {
      value = "0x0" + value.substring(2);
    }
    return value;
  }
  function splitSignature(signature22) {
    const result = {
      r: "0x",
      s: "0x",
      _vs: "0x",
      recoveryParam: 0,
      v: 0,
      yParityAndS: "0x",
      compact: "0x"
    };
    if (isBytesLike(signature22)) {
      let bytes = arrayify(signature22);
      if (bytes.length === 64) {
        result.v = 27 + (bytes[32] >> 7);
        bytes[32] &= 127;
        result.r = hexlify(bytes.slice(0, 32));
        result.s = hexlify(bytes.slice(32, 64));
      } else if (bytes.length === 65) {
        result.r = hexlify(bytes.slice(0, 32));
        result.s = hexlify(bytes.slice(32, 64));
        result.v = bytes[64];
      } else {
        logger.throwArgumentError("invalid signature string", "signature", signature22);
      }
      if (result.v < 27) {
        if (result.v === 0 || result.v === 1) {
          result.v += 27;
        } else {
          logger.throwArgumentError("signature invalid v byte", "signature", signature22);
        }
      }
      result.recoveryParam = 1 - result.v % 2;
      if (result.recoveryParam) {
        bytes[32] |= 128;
      }
      result._vs = hexlify(bytes.slice(32, 64));
    } else {
      result.r = signature22.r;
      result.s = signature22.s;
      result.v = signature22.v;
      result.recoveryParam = signature22.recoveryParam;
      result._vs = signature22._vs;
      if (result._vs != null) {
        const vs2 = zeroPad(arrayify(result._vs), 32);
        result._vs = hexlify(vs2);
        const recoveryParam = vs2[0] >= 128 ? 1 : 0;
        if (result.recoveryParam == null) {
          result.recoveryParam = recoveryParam;
        } else if (result.recoveryParam !== recoveryParam) {
          logger.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature22);
        }
        vs2[0] &= 127;
        const s = hexlify(vs2);
        if (result.s == null) {
          result.s = s;
        } else if (result.s !== s) {
          logger.throwArgumentError("signature v mismatch _vs", "signature", signature22);
        }
      }
      if (result.recoveryParam == null) {
        if (result.v == null) {
          logger.throwArgumentError("signature missing v and recoveryParam", "signature", signature22);
        } else if (result.v === 0 || result.v === 1) {
          result.recoveryParam = result.v;
        } else {
          result.recoveryParam = 1 - result.v % 2;
        }
      } else {
        if (result.v == null) {
          result.v = 27 + result.recoveryParam;
        } else {
          const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
          if (result.recoveryParam !== recId) {
            logger.throwArgumentError("signature recoveryParam mismatch v", "signature", signature22);
          }
        }
      }
      if (result.r == null || !isHexString(result.r)) {
        logger.throwArgumentError("signature missing or invalid r", "signature", signature22);
      } else {
        result.r = hexZeroPad(result.r, 32);
      }
      if (result.s == null || !isHexString(result.s)) {
        logger.throwArgumentError("signature missing or invalid s", "signature", signature22);
      } else {
        result.s = hexZeroPad(result.s, 32);
      }
      const vs = arrayify(result.s);
      if (vs[0] >= 128) {
        logger.throwArgumentError("signature s out of range", "signature", signature22);
      }
      if (result.recoveryParam) {
        vs[0] |= 128;
      }
      const _vs = hexlify(vs);
      if (result._vs) {
        if (!isHexString(result._vs)) {
          logger.throwArgumentError("signature invalid _vs", "signature", signature22);
        }
        result._vs = hexZeroPad(result._vs, 32);
      }
      if (result._vs == null) {
        result._vs = _vs;
      } else if (result._vs !== _vs) {
        logger.throwArgumentError("signature _vs mismatch v and s", "signature", signature22);
      }
    }
    result.yParityAndS = result._vs;
    result.compact = result.r + result.yParityAndS.substring(2);
    return result;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var version3 = "bignumber/5.7.0";
  var BN = import_bn.default.BN;
  var logger2 = new Logger(version3);
  var _constructorGuard = {};
  var MAX_SAFE = 9007199254740991;
  var _warnedToStringRadix = false;
  var BigNumber = class _BigNumber {
    constructor(constructorGuard, hex) {
      if (constructorGuard !== _constructorGuard) {
        logger2.throwError("cannot call constructor directly; use BigNumber.from", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "new (BigNumber)"
        });
      }
      this._hex = hex;
      this._isBigNumber = true;
      Object.freeze(this);
    }
    fromTwos(value) {
      return toBigNumber(toBN(this).fromTwos(value));
    }
    toTwos(value) {
      return toBigNumber(toBN(this).toTwos(value));
    }
    abs() {
      if (this._hex[0] === "-") {
        return _BigNumber.from(this._hex.substring(1));
      }
      return this;
    }
    add(other) {
      return toBigNumber(toBN(this).add(toBN(other)));
    }
    sub(other) {
      return toBigNumber(toBN(this).sub(toBN(other)));
    }
    div(other) {
      const o = _BigNumber.from(other);
      if (o.isZero()) {
        throwFault("division-by-zero", "div");
      }
      return toBigNumber(toBN(this).div(toBN(other)));
    }
    mul(other) {
      return toBigNumber(toBN(this).mul(toBN(other)));
    }
    mod(other) {
      const value = toBN(other);
      if (value.isNeg()) {
        throwFault("division-by-zero", "mod");
      }
      return toBigNumber(toBN(this).umod(value));
    }
    pow(other) {
      const value = toBN(other);
      if (value.isNeg()) {
        throwFault("negative-power", "pow");
      }
      return toBigNumber(toBN(this).pow(value));
    }
    and(other) {
      const value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault("unbound-bitwise-result", "and");
      }
      return toBigNumber(toBN(this).and(value));
    }
    or(other) {
      const value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault("unbound-bitwise-result", "or");
      }
      return toBigNumber(toBN(this).or(value));
    }
    xor(other) {
      const value = toBN(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault("unbound-bitwise-result", "xor");
      }
      return toBigNumber(toBN(this).xor(value));
    }
    mask(value) {
      if (this.isNegative() || value < 0) {
        throwFault("negative-width", "mask");
      }
      return toBigNumber(toBN(this).maskn(value));
    }
    shl(value) {
      if (this.isNegative() || value < 0) {
        throwFault("negative-width", "shl");
      }
      return toBigNumber(toBN(this).shln(value));
    }
    shr(value) {
      if (this.isNegative() || value < 0) {
        throwFault("negative-width", "shr");
      }
      return toBigNumber(toBN(this).shrn(value));
    }
    eq(other) {
      return toBN(this).eq(toBN(other));
    }
    lt(other) {
      return toBN(this).lt(toBN(other));
    }
    lte(other) {
      return toBN(this).lte(toBN(other));
    }
    gt(other) {
      return toBN(this).gt(toBN(other));
    }
    gte(other) {
      return toBN(this).gte(toBN(other));
    }
    isNegative() {
      return this._hex[0] === "-";
    }
    isZero() {
      return toBN(this).isZero();
    }
    toNumber() {
      try {
        return toBN(this).toNumber();
      } catch (error) {
        throwFault("overflow", "toNumber", this.toString());
      }
      return null;
    }
    toBigInt() {
      try {
        return BigInt(this.toString());
      } catch (e) {
      }
      return logger2.throwError("this platform does not support BigInt", Logger.errors.UNSUPPORTED_OPERATION, {
        value: this.toString()
      });
    }
    toString() {
      if (arguments.length > 0) {
        if (arguments[0] === 10) {
          if (!_warnedToStringRadix) {
            _warnedToStringRadix = true;
            logger2.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
          }
        } else if (arguments[0] === 16) {
          logger2.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger.errors.UNEXPECTED_ARGUMENT, {});
        } else {
          logger2.throwError("BigNumber.toString does not accept parameters", Logger.errors.UNEXPECTED_ARGUMENT, {});
        }
      }
      return toBN(this).toString(10);
    }
    toHexString() {
      return this._hex;
    }
    toJSON(key22) {
      return { type: "BigNumber", hex: this.toHexString() };
    }
    static from(value) {
      if (value instanceof _BigNumber) {
        return value;
      }
      if (typeof value === "string") {
        if (value.match(/^-?0x[0-9a-f]+$/i)) {
          return new _BigNumber(_constructorGuard, toHex(value));
        }
        if (value.match(/^-?[0-9]+$/)) {
          return new _BigNumber(_constructorGuard, toHex(new BN(value)));
        }
        return logger2.throwArgumentError("invalid BigNumber string", "value", value);
      }
      if (typeof value === "number") {
        if (value % 1) {
          throwFault("underflow", "BigNumber.from", value);
        }
        if (value >= MAX_SAFE || value <= -MAX_SAFE) {
          throwFault("overflow", "BigNumber.from", value);
        }
        return _BigNumber.from(String(value));
      }
      const anyValue = value;
      if (typeof anyValue === "bigint") {
        return _BigNumber.from(anyValue.toString());
      }
      if (isBytes(anyValue)) {
        return _BigNumber.from(hexlify(anyValue));
      }
      if (anyValue) {
        if (anyValue.toHexString) {
          const hex = anyValue.toHexString();
          if (typeof hex === "string") {
            return _BigNumber.from(hex);
          }
        } else {
          let hex = anyValue._hex;
          if (hex == null && anyValue.type === "BigNumber") {
            hex = anyValue.hex;
          }
          if (typeof hex === "string") {
            if (isHexString(hex) || hex[0] === "-" && isHexString(hex.substring(1))) {
              return _BigNumber.from(hex);
            }
          }
        }
      }
      return logger2.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
      return !!(value && value._isBigNumber);
    }
  };
  function toHex(value) {
    if (typeof value !== "string") {
      return toHex(value.toString(16));
    }
    if (value[0] === "-") {
      value = value.substring(1);
      if (value[0] === "-") {
        logger2.throwArgumentError("invalid hex", "value", value);
      }
      value = toHex(value);
      if (value === "0x00") {
        return value;
      }
      return "-" + value;
    }
    if (value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (value === "0x") {
      return "0x00";
    }
    if (value.length % 2) {
      value = "0x0" + value.substring(2);
    }
    while (value.length > 4 && value.substring(0, 4) === "0x00") {
      value = "0x" + value.substring(4);
    }
    return value;
  }
  function toBigNumber(value) {
    return BigNumber.from(toHex(value));
  }
  function toBN(value) {
    const hex = BigNumber.from(value).toHexString();
    if (hex[0] === "-") {
      return new BN("-" + hex.substring(3), 16);
    }
    return new BN(hex.substring(2), 16);
  }
  function throwFault(fault, operation, value) {
    const params = { fault, operation };
    if (value != null) {
      params.value = value;
    }
    return logger2.throwError(fault, Logger.errors.NUMERIC_FAULT, params);
  }
  function _base36To16(value) {
    return new BN(value, 36).toString(16);
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version4 = "properties/5.7.0";
  var __awaiter = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger3 = new Logger(version4);
  function defineReadOnly(object, name, value) {
    Object.defineProperty(object, name, {
      enumerable: true,
      value,
      writable: false
    });
  }
  function getStatic(ctor, key22) {
    for (let i = 0; i < 32; i++) {
      if (ctor[key22]) {
        return ctor[key22];
      }
      if (!ctor.prototype || typeof ctor.prototype !== "object") {
        break;
      }
      ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
  }
  function resolveProperties(object) {
    return __awaiter(this, void 0, void 0, function* () {
      const promises = Object.keys(object).map((key22) => {
        const value = object[key22];
        return Promise.resolve(value).then((v) => ({ key: key22, value: v }));
      });
      const results = yield Promise.all(promises);
      return results.reduce((accum, result) => {
        accum[result.key] = result.value;
        return accum;
      }, {});
    });
  }
  function checkProperties(object, properties) {
    if (!object || typeof object !== "object") {
      logger3.throwArgumentError("invalid object", "object", object);
    }
    Object.keys(object).forEach((key22) => {
      if (!properties[key22]) {
        logger3.throwArgumentError("invalid object key - " + key22, "transaction:" + key22, object);
      }
    });
  }
  function shallowCopy(object) {
    const result = {};
    for (const key22 in object) {
      result[key22] = object[key22];
    }
    return result;
  }
  var opaque = { bigint: true, boolean: true, "function": true, number: true, string: true };
  function _isFrozen(object) {
    if (object === void 0 || object === null || opaque[typeof object]) {
      return true;
    }
    if (Array.isArray(object) || typeof object === "object") {
      if (!Object.isFrozen(object)) {
        return false;
      }
      const keys = Object.keys(object);
      for (let i = 0; i < keys.length; i++) {
        let value = null;
        try {
          value = object[keys[i]];
        } catch (error) {
          continue;
        }
        if (!_isFrozen(value)) {
          return false;
        }
      }
      return true;
    }
    return logger3.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
  }
  function _deepCopy(object) {
    if (_isFrozen(object)) {
      return object;
    }
    if (Array.isArray(object)) {
      return Object.freeze(object.map((item) => deepCopy(item)));
    }
    if (typeof object === "object") {
      const result = {};
      for (const key22 in object) {
        const value = object[key22];
        if (value === void 0) {
          continue;
        }
        defineReadOnly(result, key22, deepCopy(value));
      }
      return result;
    }
    return logger3.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
  }
  function deepCopy(object) {
    return _deepCopy(object);
  }
  var Description = class {
    constructor(info) {
      for (const key22 in info) {
        this[key22] = deepCopy(info[key22]);
      }
    }
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  var version5 = "abstract-provider/5.7.0";
  var __awaiter2 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger4 = new Logger(version5);
  var ForkEvent = class extends Description {
    static isForkEvent(value) {
      return !!(value && value._isForkEvent);
    }
  };
  var Provider = class _Provider {
    constructor() {
      logger4.checkAbstract(new.target, _Provider);
      defineReadOnly(this, "_isProvider", true);
    }
    getFeeData() {
      return __awaiter2(this, void 0, void 0, function* () {
        const { block, gasPrice } = yield resolveProperties({
          block: this.getBlock("latest"),
          gasPrice: this.getGasPrice().catch((error) => {
            return null;
          })
        });
        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
        if (block && block.baseFeePerGas) {
          lastBaseFeePerGas = block.baseFeePerGas;
          maxPriorityFeePerGas = BigNumber.from("1500000000");
          maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
        }
        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };
      });
    }
    // Alias for "on"
    addListener(eventName, listener) {
      return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
      return this.off(eventName, listener);
    }
    static isProvider(value) {
      return !!(value && value._isProvider);
    }
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version6 = "networks/5.7.1";
  var logger5 = new Logger(version6);
  function isRenetworkable(value) {
    return value && typeof value.renetwork === "function";
  }
  function ethDefaultProvider(network) {
    const func = function(providers, options) {
      if (options == null) {
        options = {};
      }
      const providerList = [];
      if (providers.InfuraProvider && options.infura !== "-") {
        try {
          providerList.push(new providers.InfuraProvider(network, options.infura));
        } catch (error) {
        }
      }
      if (providers.EtherscanProvider && options.etherscan !== "-") {
        try {
          providerList.push(new providers.EtherscanProvider(network, options.etherscan));
        } catch (error) {
        }
      }
      if (providers.AlchemyProvider && options.alchemy !== "-") {
        try {
          providerList.push(new providers.AlchemyProvider(network, options.alchemy));
        } catch (error) {
        }
      }
      if (providers.PocketProvider && options.pocket !== "-") {
        const skip = ["goerli", "ropsten", "rinkeby", "sepolia"];
        try {
          const provider = new providers.PocketProvider(network, options.pocket);
          if (provider.network && skip.indexOf(provider.network.name) === -1) {
            providerList.push(provider);
          }
        } catch (error) {
        }
      }
      if (providers.CloudflareProvider && options.cloudflare !== "-") {
        try {
          providerList.push(new providers.CloudflareProvider(network));
        } catch (error) {
        }
      }
      if (providers.AnkrProvider && options.ankr !== "-") {
        try {
          const skip = ["ropsten"];
          const provider = new providers.AnkrProvider(network, options.ankr);
          if (provider.network && skip.indexOf(provider.network.name) === -1) {
            providerList.push(provider);
          }
        } catch (error) {
        }
      }
      if (providerList.length === 0) {
        return null;
      }
      if (providers.FallbackProvider) {
        let quorum = 1;
        if (options.quorum != null) {
          quorum = options.quorum;
        } else if (network === "homestead") {
          quorum = 2;
        }
        return new providers.FallbackProvider(providerList, quorum);
      }
      return providerList[0];
    };
    func.renetwork = function(network2) {
      return ethDefaultProvider(network2);
    };
    return func;
  }
  function etcDefaultProvider(url, network) {
    const func = function(providers, options) {
      if (providers.JsonRpcProvider) {
        return new providers.JsonRpcProvider(url, network);
      }
      return null;
    };
    func.renetwork = function(network2) {
      return etcDefaultProvider(url, network2);
    };
    return func;
  }
  var homestead = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: ethDefaultProvider("homestead")
  };
  var ropsten = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: ethDefaultProvider("ropsten")
  };
  var classicMordor = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/mordor", "classicMordor")
  };
  var networks = {
    unspecified: { chainId: 0, name: "unspecified" },
    homestead,
    mainnet: homestead,
    morden: { chainId: 2, name: "morden" },
    ropsten,
    testnet: ropsten,
    rinkeby: {
      chainId: 4,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "rinkeby",
      _defaultProvider: ethDefaultProvider("rinkeby")
    },
    kovan: {
      chainId: 42,
      name: "kovan",
      _defaultProvider: ethDefaultProvider("kovan")
    },
    goerli: {
      chainId: 5,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "goerli",
      _defaultProvider: ethDefaultProvider("goerli")
    },
    kintsugi: { chainId: 1337702, name: "kintsugi" },
    sepolia: {
      chainId: 11155111,
      name: "sepolia",
      _defaultProvider: ethDefaultProvider("sepolia")
    },
    // ETC (See: #351)
    classic: {
      chainId: 61,
      name: "classic",
      _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/etc", "classic")
    },
    classicMorden: { chainId: 62, name: "classicMorden" },
    classicMordor,
    classicTestnet: classicMordor,
    classicKotti: {
      chainId: 6,
      name: "classicKotti",
      _defaultProvider: etcDefaultProvider("https://www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: { chainId: 100, name: "xdai" },
    matic: {
      chainId: 137,
      name: "matic",
      _defaultProvider: ethDefaultProvider("matic")
    },
    maticmum: { chainId: 80001, name: "maticmum" },
    optimism: {
      chainId: 10,
      name: "optimism",
      _defaultProvider: ethDefaultProvider("optimism")
    },
    "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
    "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
    arbitrum: { chainId: 42161, name: "arbitrum" },
    "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
    "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" },
    bnb: { chainId: 56, name: "bnb" },
    bnbt: { chainId: 97, name: "bnbt" }
  };
  function getNetwork(network) {
    if (network == null) {
      return null;
    }
    if (typeof network === "number") {
      for (const name in networks) {
        const standard2 = networks[name];
        if (standard2.chainId === network) {
          return {
            name: standard2.name,
            chainId: standard2.chainId,
            ensAddress: standard2.ensAddress || null,
            _defaultProvider: standard2._defaultProvider || null
          };
        }
      }
      return {
        chainId: network,
        name: "unknown"
      };
    }
    if (typeof network === "string") {
      const standard2 = networks[network];
      if (standard2 == null) {
        return null;
      }
      return {
        name: standard2.name,
        chainId: standard2.chainId,
        ensAddress: standard2.ensAddress,
        _defaultProvider: standard2._defaultProvider || null
      };
    }
    const standard = networks[network.name];
    if (!standard) {
      if (typeof network.chainId !== "number") {
        logger5.throwArgumentError("invalid network chainId", "network", network);
      }
      return network;
    }
    if (network.chainId !== 0 && network.chainId !== standard.chainId) {
      logger5.throwArgumentError("network chainId mismatch", "network", network);
    }
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
      if (isRenetworkable(standard._defaultProvider)) {
        defaultProvider = standard._defaultProvider.renetwork(network);
      } else {
        defaultProvider = standard._defaultProvider;
      }
    }
    return {
      name: network.name,
      chainId: standard.chainId,
      ensAddress: network.ensAddress || standard.ensAddress || null,
      _defaultProvider: defaultProvider
    };
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function decode(textData) {
    textData = atob(textData);
    const data = [];
    for (let i = 0; i < textData.length; i++) {
      data.push(textData.charCodeAt(i));
    }
    return arrayify(data);
  }
  function encode(data) {
    data = arrayify(data);
    let textData = "";
    for (let i = 0; i < data.length; i++) {
      textData += String.fromCharCode(data[i]);
    }
    return btoa(textData);
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var BaseX = class {
    constructor(alphabet) {
      defineReadOnly(this, "alphabet", alphabet);
      defineReadOnly(this, "base", alphabet.length);
      defineReadOnly(this, "_alphabetMap", {});
      defineReadOnly(this, "_leader", alphabet.charAt(0));
      for (let i = 0; i < alphabet.length; i++) {
        this._alphabetMap[alphabet.charAt(i)] = i;
      }
    }
    encode(value) {
      let source = arrayify(value);
      if (source.length === 0) {
        return "";
      }
      let digits = [0];
      for (let i = 0; i < source.length; ++i) {
        let carry = source[i];
        for (let j = 0; j < digits.length; ++j) {
          carry += digits[j] << 8;
          digits[j] = carry % this.base;
          carry = carry / this.base | 0;
        }
        while (carry > 0) {
          digits.push(carry % this.base);
          carry = carry / this.base | 0;
        }
      }
      let string = "";
      for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
        string += this._leader;
      }
      for (let q = digits.length - 1; q >= 0; --q) {
        string += this.alphabet[digits[q]];
      }
      return string;
    }
    decode(value) {
      if (typeof value !== "string") {
        throw new TypeError("Expected String");
      }
      let bytes = [];
      if (value.length === 0) {
        return new Uint8Array(bytes);
      }
      bytes.push(0);
      for (let i = 0; i < value.length; i++) {
        let byte = this._alphabetMap[value[i]];
        if (byte === void 0) {
          throw new Error("Non-base" + this.base + " character");
        }
        let carry = byte;
        for (let j = 0; j < bytes.length; ++j) {
          carry += bytes[j] * this.base;
          bytes[j] = carry & 255;
          carry >>= 8;
        }
        while (carry > 0) {
          bytes.push(carry & 255);
          carry >>= 8;
        }
      }
      for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
        bytes.push(0);
      }
      return arrayify(new Uint8Array(bytes.reverse()));
    }
  };
  var Base32 = new BaseX("abcdefghijklmnopqrstuvwxyz234567");
  var Base58 = new BaseX("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var AddressZero = "0x0000000000000000000000000000000000000000";
  init_define_chainIDList();
  init_define_extraRpcs();
  var Zero = /* @__PURE__ */ BigNumber.from(0);
  init_define_chainIDList();
  init_define_extraRpcs();
  var HashZero = "0x0000000000000000000000000000000000000000000000000000000000000000";
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var import_js_sha3 = __toESM2(require_sha3());
  function keccak256(data) {
    return "0x" + import_js_sha3.default.keccak_256(arrayify(data));
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version7 = "strings/5.7.0";
  var logger6 = new Logger(version7);
  var UnicodeNormalizationForm;
  (function(UnicodeNormalizationForm22) {
    UnicodeNormalizationForm22["current"] = "";
    UnicodeNormalizationForm22["NFC"] = "NFC";
    UnicodeNormalizationForm22["NFD"] = "NFD";
    UnicodeNormalizationForm22["NFKC"] = "NFKC";
    UnicodeNormalizationForm22["NFKD"] = "NFKD";
  })(UnicodeNormalizationForm || (UnicodeNormalizationForm = {}));
  var Utf8ErrorReason;
  (function(Utf8ErrorReason22) {
    Utf8ErrorReason22["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    Utf8ErrorReason22["BAD_PREFIX"] = "bad codepoint prefix";
    Utf8ErrorReason22["OVERRUN"] = "string overrun";
    Utf8ErrorReason22["MISSING_CONTINUE"] = "missing continuation byte";
    Utf8ErrorReason22["OUT_OF_RANGE"] = "out of UTF-8 range";
    Utf8ErrorReason22["UTF16_SURROGATE"] = "UTF-16 surrogate";
    Utf8ErrorReason22["OVERLONG"] = "overlong representation";
  })(Utf8ErrorReason || (Utf8ErrorReason = {}));
  function errorFunc(reason, offset, bytes, output, badCodepoint) {
    return logger6.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
  }
  function ignoreFunc(reason, offset, bytes, output, badCodepoint) {
    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {
      let i = 0;
      for (let o = offset + 1; o < bytes.length; o++) {
        if (bytes[o] >> 6 !== 2) {
          break;
        }
        i++;
      }
      return i;
    }
    if (reason === Utf8ErrorReason.OVERRUN) {
      return bytes.length - offset - 1;
    }
    return 0;
  }
  function replaceFunc(reason, offset, bytes, output, badCodepoint) {
    if (reason === Utf8ErrorReason.OVERLONG) {
      output.push(badCodepoint);
      return 0;
    }
    output.push(65533);
    return ignoreFunc(reason, offset, bytes, output, badCodepoint);
  }
  var Utf8ErrorFuncs = Object.freeze({
    error: errorFunc,
    ignore: ignoreFunc,
    replace: replaceFunc
  });
  function getUtf8CodePoints(bytes, onError) {
    if (onError == null) {
      onError = Utf8ErrorFuncs.error;
    }
    bytes = arrayify(bytes);
    const result = [];
    let i = 0;
    while (i < bytes.length) {
      const c = bytes[i++];
      if (c >> 7 === 0) {
        result.push(c);
        continue;
      }
      let extraLength = null;
      let overlongMask = null;
      if ((c & 224) === 192) {
        extraLength = 1;
        overlongMask = 127;
      } else if ((c & 240) === 224) {
        extraLength = 2;
        overlongMask = 2047;
      } else if ((c & 248) === 240) {
        extraLength = 3;
        overlongMask = 65535;
      } else {
        if ((c & 192) === 128) {
          i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);
        } else {
          i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);
        }
        continue;
      }
      if (i - 1 + extraLength >= bytes.length) {
        i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);
        continue;
      }
      let res = c & (1 << 8 - extraLength - 1) - 1;
      for (let j = 0; j < extraLength; j++) {
        let nextChar = bytes[i];
        if ((nextChar & 192) != 128) {
          i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);
          res = null;
          break;
        }
        ;
        res = res << 6 | nextChar & 63;
        i++;
      }
      if (res === null) {
        continue;
      }
      if (res > 1114111) {
        i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      if (res >= 55296 && res <= 57343) {
        i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      if (res <= overlongMask) {
        i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      result.push(res);
    }
    return result;
  }
  function toUtf8Bytes(str, form = UnicodeNormalizationForm.current) {
    if (form != UnicodeNormalizationForm.current) {
      logger6.checkNormalize();
      str = str.normalize(form);
    }
    let result = [];
    for (let i = 0; i < str.length; i++) {
      const c = str.charCodeAt(i);
      if (c < 128) {
        result.push(c);
      } else if (c < 2048) {
        result.push(c >> 6 | 192);
        result.push(c & 63 | 128);
      } else if ((c & 64512) == 55296) {
        i++;
        const c2 = str.charCodeAt(i);
        if (i >= str.length || (c2 & 64512) !== 56320) {
          throw new Error("invalid utf-8 string");
        }
        const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);
        result.push(pair >> 18 | 240);
        result.push(pair >> 12 & 63 | 128);
        result.push(pair >> 6 & 63 | 128);
        result.push(pair & 63 | 128);
      } else {
        result.push(c >> 12 | 224);
        result.push(c >> 6 & 63 | 128);
        result.push(c & 63 | 128);
      }
    }
    return arrayify(result);
  }
  function _toUtf8String(codePoints) {
    return codePoints.map((codePoint) => {
      if (codePoint <= 65535) {
        return String.fromCharCode(codePoint);
      }
      codePoint -= 65536;
      return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);
    }).join("");
  }
  function toUtf8String(bytes, onError) {
    return _toUtf8String(getUtf8CodePoints(bytes, onError));
  }
  function toUtf8CodePoints(str, form = UnicodeNormalizationForm.current) {
    return getUtf8CodePoints(toUtf8Bytes(str, form));
  }
  function id(text) {
    return keccak256(toUtf8Bytes(text));
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version8 = "hash/5.7.0";
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function flat(array, depth) {
    if (depth == null) {
      depth = 1;
    }
    const result = [];
    const forEach2 = result.forEach;
    const flatDeep = function(arr, depth2) {
      forEach2.call(arr, function(val) {
        if (depth2 > 0 && Array.isArray(val)) {
          flatDeep(val, depth2 - 1);
        } else {
          result.push(val);
        }
      });
    };
    flatDeep(array, depth);
    return result;
  }
  function fromEntries(array) {
    const result = {};
    for (let i = 0; i < array.length; i++) {
      const value = array[i];
      result[value[0]] = value[1];
    }
    return result;
  }
  function decode_arithmetic(bytes) {
    let pos = 0;
    function u16() {
      return bytes[pos++] << 8 | bytes[pos++];
    }
    let symbol_count = u16();
    let total = 1;
    let acc = [0, 1];
    for (let i = 1; i < symbol_count; i++) {
      acc.push(total += u16());
    }
    let skip = u16();
    let pos_payload = pos;
    pos += skip;
    let read_width = 0;
    let read_buffer = 0;
    function read_bit() {
      if (read_width == 0) {
        read_buffer = read_buffer << 8 | bytes[pos++];
        read_width = 8;
      }
      return read_buffer >> --read_width & 1;
    }
    const N2 = 31;
    const FULL = Math.pow(2, N2);
    const HALF = FULL >>> 1;
    const QRTR = HALF >> 1;
    const MASK = FULL - 1;
    let register = 0;
    for (let i = 0; i < N2; i++)
      register = register << 1 | read_bit();
    let symbols = [];
    let low = 0;
    let range = FULL;
    while (true) {
      let value = Math.floor(((register - low + 1) * total - 1) / range);
      let start = 0;
      let end = symbol_count;
      while (end - start > 1) {
        let mid = start + end >>> 1;
        if (value < acc[mid]) {
          end = mid;
        } else {
          start = mid;
        }
      }
      if (start == 0)
        break;
      symbols.push(start);
      let a = low + Math.floor(range * acc[start] / total);
      let b = low + Math.floor(range * acc[start + 1] / total) - 1;
      while (((a ^ b) & HALF) == 0) {
        register = register << 1 & MASK | read_bit();
        a = a << 1 & MASK;
        b = b << 1 & MASK | 1;
      }
      while (a & ~b & QRTR) {
        register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
        a = a << 1 ^ HALF;
        b = (b ^ HALF) << 1 | HALF | 1;
      }
      low = a;
      range = 1 + b - a;
    }
    let offset = symbol_count - 4;
    return symbols.map((x) => {
      switch (x - offset) {
        case 3:
          return offset + 65792 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
        case 2:
          return offset + 256 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
        case 1:
          return offset + bytes[pos_payload++];
        default:
          return x - 1;
      }
    });
  }
  function read_payload(v) {
    let pos = 0;
    return () => v[pos++];
  }
  function read_compressed_payload(bytes) {
    return read_payload(decode_arithmetic(bytes));
  }
  function signed(i) {
    return i & 1 ? ~i >> 1 : i >> 1;
  }
  function read_counts(n, next) {
    let v = Array(n);
    for (let i = 0; i < n; i++)
      v[i] = 1 + next();
    return v;
  }
  function read_ascending(n, next) {
    let v = Array(n);
    for (let i = 0, x = -1; i < n; i++)
      v[i] = x += 1 + next();
    return v;
  }
  function read_deltas(n, next) {
    let v = Array(n);
    for (let i = 0, x = 0; i < n; i++)
      v[i] = x += signed(next());
    return v;
  }
  function read_member_array(next, lookup) {
    let v = read_ascending(next(), next);
    let n = next();
    let vX = read_ascending(n, next);
    let vN = read_counts(n, next);
    for (let i = 0; i < n; i++) {
      for (let j = 0; j < vN[i]; j++) {
        v.push(vX[i] + j);
      }
    }
    return lookup ? v.map((x) => lookup[x]) : v;
  }
  function read_mapped_map(next) {
    let ret = [];
    while (true) {
      let w = next();
      if (w == 0)
        break;
      ret.push(read_linear_table(w, next));
    }
    while (true) {
      let w = next() - 1;
      if (w < 0)
        break;
      ret.push(read_replacement_table(w, next));
    }
    return fromEntries(flat(ret));
  }
  function read_zero_terminated_array(next) {
    let v = [];
    while (true) {
      let i = next();
      if (i == 0)
        break;
      v.push(i);
    }
    return v;
  }
  function read_transposed(n, w, next) {
    let m = Array(n).fill(void 0).map(() => []);
    for (let i = 0; i < w; i++) {
      read_deltas(n, next).forEach((x, j) => m[j].push(x));
    }
    return m;
  }
  function read_linear_table(w, next) {
    let dx = 1 + next();
    let dy = next();
    let vN = read_zero_terminated_array(next);
    let m = read_transposed(vN.length, 1 + w, next);
    return flat(m.map((v, i) => {
      const x = v[0], ys = v.slice(1);
      return Array(vN[i]).fill(void 0).map((_, j) => {
        let j_dy = j * dy;
        return [x + j * dx, ys.map((y) => y + j_dy)];
      });
    }));
  }
  function read_replacement_table(w, next) {
    let n = 1 + next();
    let m = read_transposed(n, 1 + w, next);
    return m.map((v) => [v[0], v.slice(1)]);
  }
  function read_emoji_trie(next) {
    let sorted = read_member_array(next).sort((a, b) => a - b);
    return read();
    function read() {
      let branches = [];
      while (true) {
        let keys = read_member_array(next, sorted);
        if (keys.length == 0)
          break;
        branches.push({ set: new Set(keys), node: read() });
      }
      branches.sort((a, b) => b.set.size - a.set.size);
      let temp = next();
      let valid = temp % 3;
      temp = temp / 3 | 0;
      let fe0f = !!(temp & 1);
      temp >>= 1;
      let save = temp == 1;
      let check = temp == 2;
      return { branches, valid, fe0f, save, check };
    }
  }
  function getData() {
    return read_compressed_payload(decode("AEQF2AO2DEsA2wIrAGsBRABxAN8AZwCcAEwAqgA0AGwAUgByADcATAAVAFYAIQAyACEAKAAYAFgAGwAjABQAMAAmADIAFAAfABQAKwATACoADgAbAA8AHQAYABoAGQAxADgALAAoADwAEwA9ABMAGgARAA4ADwAWABMAFgAIAA8AHgQXBYMA5BHJAS8JtAYoAe4AExozi0UAH21tAaMnBT8CrnIyhrMDhRgDygIBUAEHcoFHUPe8AXBjAewCjgDQR8IICIcEcQLwATXCDgzvHwBmBoHNAqsBdBcUAykgDhAMShskMgo8AY8jqAQfAUAfHw8BDw87MioGlCIPBwZCa4ELatMAAMspJVgsDl8AIhckSg8XAHdvTwBcIQEiDT4OPhUqbyECAEoAS34Aej8Ybx83JgT/Xw8gHxZ/7w8RICxPHA9vBw+Pfw8PHwAPFv+fAsAvCc8vEr8ivwD/EQ8Bol8OEBa/A78hrwAPCU8vESNvvwWfHwNfAVoDHr+ZAAED34YaAdJPAK7PLwSEgDLHAGo1Pz8Pvx9fUwMrpb8O/58VTzAPIBoXIyQJNF8hpwIVAT8YGAUADDNBaX3RAMomJCg9EhUeA29MABsZBTMNJipjOhc19gcIDR8bBwQHEggCWi6DIgLuAQYA+BAFCha3A5XiAEsqM7UFFgFLhAMjFTMYE1Klnw74nRVBG/ASCm0BYRN/BrsU3VoWy+S0vV8LQx+vN8gF2AC2AK5EAWwApgYDKmAAroQ0NDQ0AT+OCg7wAAIHRAbpNgVcBV0APTA5BfbPFgMLzcYL/QqqA82eBALKCjQCjqYCht0/k2+OAsXQAoP3ASTKDgDw6ACKAUYCMpIKJpRaAE4A5womABzZvs0REEKiACIQAd5QdAECAj4Ywg/wGqY2AVgAYADYvAoCGAEubA0gvAY2ALAAbpbvqpyEAGAEpgQAJgAG7gAgAEACmghUFwCqAMpAINQIwC4DthRAAPcycKgApoIdABwBfCisABoATwBqASIAvhnSBP8aH/ECeAKXAq40NjgDBTwFYQU6AXs3oABgAD4XNgmcCY1eCl5tIFZeUqGgyoNHABgAEQAaABNwWQAmABMATPMa3T34ADldyprmM1M2XociUQgLzvwAXT3xABgAEQAaABNwIGFAnADD8AAgAD4BBJWzaCcIAIEBFMAWwKoAAdq9BWAF5wLQpALEtQAKUSGkahR4GnJM+gsAwCgeFAiUAECQ0BQuL8AAIAAAADKeIheclvFqQAAETr4iAMxIARMgAMIoHhQIAn0E0pDQFC4HhznoAAAAIAI2C0/4lvFqQAAETgBJJwYCAy4ABgYAFAA8MBKYEH4eRhTkAjYeFcgACAYAeABsOqyQ5gRwDayqugEgaIIAtgoACgDmEABmBAWGme5OBJJA2m4cDeoAmITWAXwrMgOgAGwBCh6CBXYF1Tzg1wKAAFdiuABRAFwAXQBsAG8AdgBrAHYAbwCEAHEwfxQBVE5TEQADVFhTBwBDANILAqcCzgLTApQCrQL6vAAMAL8APLhNBKkE6glGKTAU4Dr4N2EYEwBCkABKk8rHAbYBmwIoAiU4Ajf/Aq4CowCAANIChzgaNBsCsTgeODcFXrgClQKdAqQBiQGYAqsCsjTsNHsfNPA0ixsAWTWiOAMFPDQSNCk2BDZHNow2TTZUNhk28Jk9VzI3QkEoAoICoQKwAqcAQAAxBV4FXbS9BW47YkIXP1ciUqs05DS/FwABUwJW11e6nHuYZmSh/RAYA8oMKvZ8KASoUAJYWAJ6ILAsAZSoqjpgA0ocBIhmDgDWAAawRDQoAAcuAj5iAHABZiR2AIgiHgCaAU68ACxuHAG0ygM8MiZIAlgBdF4GagJqAPZOHAMuBgoATkYAsABiAHgAMLoGDPj0HpKEBAAOJgAuALggTAHWAeAMEDbd20Uege0ADwAWADkAQgA9OHd+2MUQZBBhBgNNDkxxPxUQArEPqwvqERoM1irQ090ANK4H8ANYB/ADWANYB/AH8ANYB/ADWANYA1gDWBwP8B/YxRBkD00EcgWTBZAE2wiIJk4RhgctCNdUEnQjHEwDSgEBIypJITuYMxAlR0wRTQgIATZHbKx9PQNMMbBU+pCnA9AyVDlxBgMedhKlAC8PeCE1uk6DekxxpQpQT7NX9wBFBgASqwAS5gBJDSgAUCwGPQBI4zTYABNGAE2bAE3KAExdGABKaAbgAFBXAFCOAFBJABI2SWdObALDOq0//QomCZhvwHdTBkIQHCemEPgMNAG2ATwN7kvZBPIGPATKH34ZGg/OlZ0Ipi3eDO4m5C6igFsj9iqEBe5L9TzeC05RaQ9aC2YJ5DpkgU8DIgEOIowK3g06CG4Q9ArKbA3mEUYHOgPWSZsApgcCCxIdNhW2JhFirQsKOXgG/Br3C5AmsBMqev0F1BoiBk4BKhsAANAu6IWxWjJcHU9gBgQLJiPIFKlQIQ0mQLh4SRocBxYlqgKSQ3FKiFE3HpQh9zw+DWcuFFF9B/Y8BhlQC4I8n0asRQ8R0z6OPUkiSkwtBDaALDAnjAnQD4YMunxzAVoJIgmyDHITMhEYN8YIOgcaLpclJxYIIkaWYJsE+KAD9BPSAwwFQAlCBxQDthwuEy8VKgUOgSXYAvQ21i60ApBWgQEYBcwPJh/gEFFH4Q7qCJwCZgOEJewALhUiABginAhEZABgj9lTBi7MCMhqbSN1A2gU6GIRdAeSDlgHqBw0FcAc4nDJXgyGCSiksAlcAXYJmgFgBOQICjVcjKEgQmdUi1kYnCBiQUBd/QIyDGYVoES+h3kCjA9sEhwBNgF0BzoNAgJ4Ee4RbBCWCOyGBTW2M/k6JgRQIYQgEgooA1BszwsoJvoM+WoBpBJjAw00PnfvZ6xgtyUX/gcaMsZBYSHyC5NPzgydGsIYQ1QvGeUHwAP0GvQn60FYBgADpAQUOk4z7wS+C2oIjAlAAEoOpBgH2BhrCnKM0QEyjAG4mgNYkoQCcJAGOAcMAGgMiAV65gAeAqgIpAAGANADWAA6Aq4HngAaAIZCAT4DKDABIuYCkAOUCDLMAZYwAfQqBBzEDBYA+DhuSwLDsgKAa2ajBd5ZAo8CSjYBTiYEBk9IUgOwcuIA3ABMBhTgSAEWrEvMG+REAeBwLADIAPwABjYHBkIBzgH0bgC4AWALMgmjtLYBTuoqAIQAFmwB2AKKAN4ANgCA8gFUAE4FWvoF1AJQSgESMhksWGIBvAMgATQBDgB6BsyOpsoIIARuB9QCEBwV4gLvLwe2AgMi4BPOQsYCvd9WADIXUu5eZwqoCqdeaAC0YTQHMnM9UQAPH6k+yAdy/BZIiQImSwBQ5gBQQzSaNTFWSTYBpwGqKQK38AFtqwBI/wK37gK3rQK3sAK6280C0gK33AK3zxAAUEIAUD9SklKDArekArw5AEQAzAHCO147WTteO1k7XjtZO147WTteO1kDmChYI03AVU0oJqkKbV9GYewMpw3VRMk6ShPcYFJgMxPJLbgUwhXPJVcZPhq9JwYl5VUKDwUt1GYxCC00dhe9AEApaYNCY4ceMQpMHOhTklT5LRwAskujM7ANrRsWREEFSHXuYisWDwojAmSCAmJDXE6wXDchAqH4AmiZAmYKAp+FOBwMAmY8AmYnBG8EgAN/FAN+kzkHOXgYOYM6JCQCbB4CMjc4CwJtyAJtr/CLADRoRiwBaADfAOIASwYHmQyOAP8MwwAOtgJ3MAJ2o0ACeUxEAni7Hl3cRa9G9AJ8QAJ6yQJ9CgJ88UgBSH5kJQAsFklZSlwWGErNAtECAtDNSygDiFADh+dExpEzAvKiXQQDA69Lz0wuJgTQTU1NsAKLQAKK2cIcCB5EaAa4Ao44Ao5dQZiCAo7aAo5deVG1UzYLUtVUhgKT/AKTDQDqAB1VH1WwVdEHLBwplocy4nhnRTw6ApegAu+zWCKpAFomApaQApZ9nQCqWa1aCoJOADwClrYClk9cRVzSApnMApllXMtdCBoCnJw5wzqeApwXAp+cAp65iwAeEDIrEAKd8gKekwC2PmE1YfACntQCoG8BqgKeoCACnk+mY8lkKCYsAiewAiZ/AqD8AqBN2AKmMAKlzwKoAAB+AqfzaH1osgAESmodatICrOQCrK8CrWgCrQMCVx4CVd0CseLYAx9PbJgCsr4OArLpGGzhbWRtSWADJc4Ctl08QG6RAylGArhfArlIFgK5K3hwN3DiAr0aAy2zAzISAr6JcgMDM3ICvhtzI3NQAsPMAsMFc4N0TDZGdOEDPKgDPJsDPcACxX0CxkgCxhGKAshqUgLIRQLJUALJLwJkngLd03h6YniveSZL0QMYpGcDAmH1GfSVJXsMXpNevBICz2wCz20wTFTT9BSgAMeuAs90ASrrA04TfkwGAtwoAtuLAtJQA1JdA1NgAQIDVY2AikABzBfuYUZ2AILPg44C2sgC2d+EEYRKpz0DhqYAMANkD4ZyWvoAVgLfZgLeuXR4AuIw7RUB8zEoAfScAfLTiALr9ALpcXoAAur6AurlAPpIAboC7ooC652Wq5cEAu5AA4XhmHpw4XGiAvMEAGoDjheZlAL3FAORbwOSiAL3mQL52gL4Z5odmqy8OJsfA52EAv77ARwAOp8dn7QDBY4DpmsDptoA0sYDBmuhiaIGCgMMSgFgASACtgNGAJwEgLpoBgC8BGzAEowcggCEDC6kdjoAJAM0C5IKRoABZCgiAIzw3AYBLACkfng9ogigkgNmWAN6AEQCvrkEVqTGAwCsBRbAA+4iQkMCHR072jI2PTbUNsk2RjY5NvA23TZKNiU3EDcZN5I+RTxDRTBCJkK5VBYKFhZfwQCWygU3AJBRHpu+OytgNxa61A40GMsYjsn7BVwFXQVcBV0FaAVdBVwFXQVcBV0FXAVdBVwFXUsaCNyKAK4AAQUHBwKU7oICoW1e7jAEzgPxA+YDwgCkBFDAwADABKzAAOxFLhitA1UFTDeyPkM+bj51QkRCuwTQWWQ8X+0AWBYzsACNA8xwzAGm7EZ/QisoCTAbLDs6fnLfb8H2GccsbgFw13M1HAVkBW/Jxsm9CNRO8E8FDD0FBQw9FkcClOYCoMFegpDfADgcMiA2AJQACB8AsigKAIzIEAJKeBIApY5yPZQIAKQiHb4fvj5BKSRPQrZCOz0oXyxgOywfKAnGbgMClQaCAkILXgdeCD9IIGUgQj5fPoY+dT52Ao5CM0dAX9BTVG9SDzFwWTQAbxBzJF/lOEIQQglCCkKJIAls5AcClQICoKPMODEFxhi6KSAbiyfIRrMjtCgdWCAkPlFBIitCsEJRzAbMAV/OEyQzDg0OAQQEJ36i328/Mk9AybDJsQlq3tDRApUKAkFzXf1d/j9uALYP6hCoFgCTGD8kPsFKQiobrm0+zj0KSD8kPnVCRBwMDyJRTHFgMTJa5rwXQiQ2YfI/JD7BMEJEHGINTw4TOFlIRzwJO0icMQpyPyQ+wzJCRBv6DVgnKB01NgUKj2bwYzMqCoBkznBgEF+zYDIocwRIX+NgHj4HICNfh2C4CwdwFWpTG/lgUhYGAwRfv2Ts8mAaXzVgml/XYIJfuWC4HI1gUF9pYJZgMR6ilQHMAOwLAlDRefC0in4AXAEJA6PjCwc0IamOANMMCAECRQDFNRTZBgd+CwQlRA+r6+gLBDEFBnwUBXgKATIArwAGRAAHA3cDdAN2A3kDdwN9A3oDdQN7A30DfAN4A3oDfQAYEAAlAtYASwMAUAFsAHcKAHcAmgB3AHUAdQB2AHVu8UgAygDAAHcAdQB1AHYAdQALCgB3AAsAmgB3AAsCOwB3AAtu8UgAygDAAHgKAJoAdwB3AHUAdQB2AHUAeAB1AHUAdgB1bvFIAMoAwAALCgCaAHcACwB3AAsCOwB3AAtu8UgAygDAAH4ACwGgALcBpwC6AahdAu0COwLtbvFIAMoAwAALCgCaAu0ACwLtAAsCOwLtAAtu8UgAygDAA24ACwNvAAu0VsQAAzsAABCkjUIpAAsAUIusOggWcgMeBxVsGwL67U/2HlzmWOEeOgALASvuAAseAfpKUpnpGgYJDCIZM6YyARUE9ThqAD5iXQgnAJYJPnOzw0ZAEZxEKsIAkA4DhAHnTAIDxxUDK0lxCQlPYgIvIQVYJQBVqE1GakUAKGYiDToSBA1EtAYAXQJYAIF8GgMHRyAAIAjOe9YncekRAA0KACUrjwE7Ayc6AAYWAqaiKG4McEcqANoN3+Mg9TwCBhIkuCny+JwUQ29L008JluRxu3K+oAdqiHOqFH0AG5SUIfUJ5SxCGfxdipRzqTmT4V5Zb+r1Uo4Vm+NqSSEl2mNvR2JhIa8SpYO6ntdwFXHCWTCK8f2+Hxo7uiG3drDycAuKIMP5bhi06ACnqArH1rz4Rqg//lm6SgJGEVbF9xJHISaR6HxqxSnkw6shDnelHKNEfGUXSJRJ1GcsmtJw25xrZMDK9gXSm1/YMkdX4/6NKYOdtk/NQ3/NnDASjTc3fPjIjW/5sVfVObX2oTDWkr1dF9f3kxBsD3/3aQO8hPfRz+e0uEiJqt1161griu7gz8hDDwtpy+F+BWtefnKHZPAxcZoWbnznhJpy0e842j36bcNzGnIEusgGX0a8ZxsnjcSsPDZ09yZ36fCQbriHeQ72JRMILNl6ePPf2HWoVwgWAm1fb3V2sAY0+B6rAXqSwPBgseVmoqsBTSrm91+XasMYYySI8eeRxH3ZvHkMz3BQ5aJ3iUVbYPNM3/7emRtjlsMgv/9VyTsyt/mK+8fgWeT6SoFaclXqn42dAIsvAarF5vNNWHzKSkKQ/8Hfk5ZWK7r9yliOsooyBjRhfkHP4Q2DkWXQi6FG/9r/IwbmkV5T7JSopHKn1pJwm9tb5Ot0oyN1Z2mPpKXHTxx2nlK08fKk1hEYA8WgVVWL5lgx0iTv+KdojJeU23ZDjmiubXOxVXJKKi2Wjuh2HLZOFLiSC7Tls5SMh4f+Pj6xUSrNjFqLGehRNB8lC0QSLNmkJJx/wSG3MnjE9T1CkPwJI0wH2lfzwETIiVqUxg0dfu5q39Gt+hwdcxkhhNvQ4TyrBceof3Mhs/IxFci1HmHr4FMZgXEEczPiGCx0HRwzAqDq2j9AVm1kwN0mRVLWLylgtoPNapF5cY4Y1wJh/e0BBwZj44YgZrDNqvD/9Hv7GFYdUQeDJuQ3EWI4HaKqavU1XjC/n41kT4L79kqGq0kLhdTZvgP3TA3fS0ozVz+5piZsoOtIvBUFoMKbNcmBL6YxxaUAusHB38XrS8dQMnQwJfUUkpRoGr5AUeWicvBTzyK9g77+yCkf5PAysL7r/JjcZgrbvRpMW9iyaxZvKO6ceZN2EwIxKwVFPuvFuiEPGCoagbMo+SpydLrXqBzNCDGFCrO/rkcwa2xhokQZ5CdZ0AsU3JfSqJ6n5I14YA+P/uAgfhPU84Tlw7cEFfp7AEE8ey4sP12PTt4Cods1GRgDOB5xvyiR5m+Bx8O5nBCNctU8BevfV5A08x6RHd5jcwPTMDSZJOedIZ1cGQ704lxbAzqZOP05ZxaOghzSdvFBHYqomATARyAADK4elP8Ly3IrUZKfWh23Xy20uBUmLS4Pfagu9+oyVa2iPgqRP3F2CTUsvJ7+RYnN8fFZbU/HVvxvcFFDKkiTqV5UBZ3Gz54JAKByi9hkKMZJvuGgcSYXFmw08UyoQyVdfTD1/dMkCHXcTGAKeROgArsvmRrQTLUOXioOHGK2QkjHuoYFgXciZoTJd6Fs5q1QX1G+p/e26hYsEf7QZD1nnIyl/SFkNtYYmmBhpBrxl9WbY0YpHWRuw2Ll/tj9mD8P4snVzJl4F9J+1arVeTb9E5r2ILH04qStjxQNwn3m4YNqxmaNbLAqW2TN6LidwuJRqS+NXbtqxoeDXpxeGWmxzSkWxjkyCkX4NQRme6q5SAcC+M7+9ETfA/EwrzQajKakCwYyeunP6ZFlxU2oMEn1Pz31zeStW74G406ZJFCl1wAXIoUKkWotYEpOuXB1uVNxJ63dpJEqfxBeptwIHNrPz8BllZoIcBoXwgfJ+8VAUnVPvRvexnw0Ma/WiGYuJO5y8QTvEYBigFmhUxY5RqzE8OcywN/8m4UYrlaniJO75XQ6KSo9+tWHlu+hMi0UVdiKQp7NelnoZUzNaIyBPVeOwK6GNp+FfHuPOoyhaWuNvTYFkvxscMQWDh+zeFCFkgwbXftiV23ywJ4+uwRqmg9k3KzwIQpzppt8DBBOMbrqwQM5Gb05sEwdKzMiAqOloaA/lr0KA+1pr0/+HiWoiIjHA/wir2nIuS3PeU/ji3O6ZwoxcR1SZ9FhtLC5S0FIzFhbBWcGVP/KpxOPSiUoAdWUpqKH++6Scz507iCcxYI6rdMBICPJZea7OcmeFw5mObJSiqpjg2UoWNIs+cFhyDSt6geV5qgi3FunmwwDoGSMgerFOZGX1m0dMCYo5XOruxO063dwENK9DbnVM9wYFREzh4vyU1WYYJ/LRRp6oxgjqP/X5a8/4Af6p6NWkQferzBmXme0zY/4nwMJm/wd1tIqSwGz+E3xPEAOoZlJit3XddD7/BT1pllzOx+8bmQtANQ/S6fZexc6qi3W+Q2xcmXTUhuS5mpHQRvcxZUN0S5+PL9lXWUAaRZhEH8hTdAcuNMMCuVNKTEGtSUKNi3O6KhSaTzck8csZ2vWRZ+d7mW8c4IKwXIYd25S/zIftPkwPzufjEvOHWVD1m+FjpDVUTV0DGDuHj6QnaEwLu/dEgdLQOg9E1Sro9XHJ8ykLAwtPu+pxqKDuFexqON1sKQm7rwbE1E68UCfA/erovrTCG+DBSNg0l4goDQvZN6uNlbyLpcZAwj2UclycvLpIZMgv4yRlpb3YuMftozorbcGVHt/VeDV3+Fdf1TP0iuaCsPi2G4XeGhsyF1ubVDxkoJhmniQ0/jSg/eYML9KLfnCFgISWkp91eauR3IQvED0nAPXK+6hPCYs+n3+hCZbiskmVMG2da+0EsZPonUeIY8EbfusQXjsK/eFDaosbPjEfQS0RKG7yj5GG69M7MeO1HmiUYocgygJHL6M1qzUDDwUSmr99V7Sdr2F3JjQAJY+F0yH33Iv3+C9M38eML7gTgmNu/r2bUMiPvpYbZ6v1/IaESirBHNa7mPKn4dEmYg7v/+HQgPN1G79jBQ1+soydfDC2r+h2Bl/KIc5KjMK7OH6nb1jLsNf0EHVe2KBiE51ox636uyG6Lho0t3J34L5QY/ilE3mikaF4HKXG1mG1rCevT1Vv6GavltxoQe/bMrpZvRggnBxSEPEeEzkEdOxTnPXHVjUYdw8JYvjB/o7Eegc3Ma+NUxLLnsK0kJlinPmUHzHGtrk5+CAbVzFOBqpyy3QVUnzTDfC/0XD94/okH+OB+i7g9lolhWIjSnfIb+Eq43ZXOWmwvjyV/qqD+t0e+7mTEM74qP/Ozt8nmC7mRpyu63OB4KnUzFc074SqoyPUAgM+/TJGFo6T44EHnQU4X4z6qannVqgw/U7zCpwcmXV1AubIrvOmkKHazJAR55ePjp5tLBsN8vAqs3NAHdcEHOR2xQ0lsNAFzSUuxFQCFYvXLZJdOj9p4fNq6p0HBGUik2YzaI4xySy91KzhQ0+q1hjxvImRwPRf76tChlRkhRCi74NXZ9qUNeIwP+s5p+3m5nwPdNOHgSLD79n7O9m1n1uDHiMntq4nkYwV5OZ1ENbXxFd4PgrlvavZsyUO4MqYlqqn1O8W/I1dEZq5dXhrbETLaZIbC2Kj/Aa/QM+fqUOHdf0tXAQ1huZ3cmWECWSXy/43j35+Mvq9xws7JKseriZ1pEWKc8qlzNrGPUGcVgOa9cPJYIJsGnJTAUsEcDOEVULO5x0rXBijc1lgXEzQQKhROf8zIV82w8eswc78YX11KYLWQRcgHNJElBxfXr72lS2RBSl07qTKorO2uUDZr3sFhYsvnhLZn0A94KRzJ/7DEGIAhW5ZWFpL8gEwu1aLA9MuWZzNwl8Oze9Y+bX+v9gywRVnoB5I/8kXTXU3141yRLYrIOOz6SOnyHNy4SieqzkBXharjfjqq1q6tklaEbA8Qfm2DaIPs7OTq/nvJBjKfO2H9bH2cCMh1+5gspfycu8f/cuuRmtDjyqZ7uCIMyjdV3a+p3fqmXsRx4C8lujezIFHnQiVTXLXuI1XrwN3+siYYj2HHTvESUx8DlOTXpak9qFRK+L3mgJ1WsD7F4cu1aJoFoYQnu+wGDMOjJM3kiBQWHCcvhJ/HRdxodOQp45YZaOTA22Nb4XKCVxqkbwMYFhzYQYIAnCW8FW14uf98jhUG2zrKhQQ0q0CEq0t5nXyvUyvR8DvD69LU+g3i+HFWQMQ8PqZuHD+sNKAV0+M6EJC0szq7rEr7B5bQ8BcNHzvDMc9eqB5ZCQdTf80Obn4uzjwpYU7SISdtV0QGa9D3Wrh2BDQtpBKxaNFV+/Cy2P/Sv+8s7Ud0Fd74X4+o/TNztWgETUapy+majNQ68Lq3ee0ZO48VEbTZYiH1Co4OlfWef82RWeyUXo7woM03PyapGfikTnQinoNq5z5veLpeMV3HCAMTaZmA1oGLAn7XS3XYsz+XK7VMQsc4XKrmDXOLU/pSXVNUq8dIqTba///3x6LiLS6xs1xuCAYSfcQ3+rQgmu7uvf3THKt5Ooo97TqcbRqxx7EASizaQCBQllG/rYxVapMLgtLbZS64w1MDBMXX+PQpBKNwqUKOf2DDRDUXQf9EhOS0Qj4nTmlA8dzSLz/G1d+Ud8MTy/6ghhdiLpeerGY/UlDOfiuqFsMUU5/UYlP+BAmgRLuNpvrUaLlVkrqDievNVEAwF+4CoM1MZTmjxjJMsKJq+u8Zd7tNCUFy6LiyYXRJQ4VyvEQFFaCGKsxIwQkk7EzZ6LTJq2hUuPhvAW+gQnSG6J+MszC+7QCRHcnqDdyNRJ6T9xyS87A6MDutbzKGvGktpbXqtzWtXb9HsfK2cBMomjN9a4y+TaJLnXxAeX/HWzmf4cR4vALt/P4w4qgKY04ml4ZdLOinFYS6cup3G/1ie4+t1eOnpBNlqGqs75ilzkT4+DsZQxNvaSKJ//6zIbbk/M7LOhFmRc/1R+kBtz7JFGdZm/COotIdvQoXpTqP/1uqEUmCb/QWoGLMwO5ANcHzxdY48IGP5+J+zKOTBFZ4Pid+GTM+Wq12MV/H86xEJptBa6T+p3kgpwLedManBHC2GgNrFpoN2xnrMz9WFWX/8/ygSBkavq2Uv7FdCsLEYLu9LLIvAU0bNRDtzYl+/vXmjpIvuJFYjmI0im6QEYqnIeMsNjXG4vIutIGHijeAG/9EDBozKV5cldkHbLxHh25vT+ZEzbhXlqvpzKJwcEgfNwLAKFeo0/pvEE10XDB+EXRTXtSzJozQKFFAJhMxYkVaCW+E9AL7tMeU8acxidHqzb6lX4691UsDpy/LLRmT+epgW56+5Cw8tB4kMUv6s9lh3eRKbyGs+H/4mQMaYzPTf2OOdokEn+zzgvoD3FqNKk8QqGAXVsqcGdXrT62fSPkR2vROFi68A6se86UxRUk4cajfPyCC4G5wDhD+zNq4jodQ4u4n/m37Lr36n4LIAAsVr02dFi9AiwA81MYs2rm4eDlDNmdMRvEKRHfBwW5DdMNp0jPFZMeARqF/wL4XBfd+EMLBfMzpH5GH6NaW+1vrvMdg+VxDzatk3MXgO3ro3P/DpcC6+Mo4MySJhKJhSR01SGGGp5hPWmrrUgrv3lDnP+HhcI3nt3YqBoVAVTBAQT5iuhTg8nvPtd8ZeYj6w1x6RqGUBrSku7+N1+BaasZvjTk64RoIDlL8brpEcJx3OmY7jLoZsswdtmhfC/G21llXhITOwmvRDDeTTPbyASOa16cF5/A1fZAidJpqju3wYAy9avPR1ya6eNp9K8XYrrtuxlqi+bDKwlfrYdR0RRiKRVTLOH85+ZY7XSmzRpfZBJjaTa81VDcJHpZnZnSQLASGYW9l51ZV/h7eVzTi3Hv6hUsgc/51AqJRTkpbFVLXXszoBL8nBX0u/0jBLT8nH+fJePbrwURT58OY+UieRjd1vs04w0VG5VN2U6MoGZkQzKN/ptz0Q366dxoTGmj7i1NQGHi9GgnquXFYdrCfZBmeb7s0T6yrdlZH5cZuwHFyIJ/kAtGsTg0xH5taAAq44BAk1CPk9KVVbqQzrCUiFdF/6gtlPQ8bHHc1G1W92MXGZ5HEHftyLYs8mbD/9xYRUWkHmlM0zC2ilJlnNgV4bfALpQghxOUoZL7VTqtCHIaQSXm+YUMnpkXybnV+A6xlm2CVy8fn0Xlm2XRa0+zzOa21JWWmixfiPMSCZ7qA4rS93VN3pkpF1s5TonQjisHf7iU9ZGvUPOAKZcR1pbeVf/Ul7OhepGCaId9wOtqo7pJ7yLcBZ0pFkOF28y4zEI/kcUNmutBHaQpBdNM8vjCS6HZRokkeo88TBAjGyG7SR+6vUgTcyK9Imalj0kuxz0wmK+byQU11AiJFk/ya5dNduRClcnU64yGu/ieWSeOos1t3ep+RPIWQ2pyTYVbZltTbsb7NiwSi3AV+8KLWk7LxCnfZUetEM8ThnsSoGH38/nyAwFguJp8FjvlHtcWZuU4hPva0rHfr0UhOOJ/F6vS62FW7KzkmRll2HEc7oUq4fyi5T70Vl7YVIfsPHUCdHesf9Lk7WNVWO75JDkYbMI8TOW8JKVtLY9d6UJRITO8oKo0xS+o99Yy04iniGHAaGj88kEWgwv0OrHdY/nr76DOGNS59hXCGXzTKUvDl9iKpLSWYN1lxIeyywdNpTkhay74w2jFT6NS8qkjo5CxA1yfSYwp6AJIZNKIeEK5PJAW7ORgWgwp0VgzYpqovMrWxbu+DGZ6Lhie1RAqpzm8VUzKJOH3mCzWuTOLsN3VT/dv2eeYe9UjbR8YTBsLz7q60VN1sU51k+um1f8JxD5pPhbhSC8rRaB454tmh6YUWrJI3+GWY0qeWioj/tbkYITOkJaeuGt4JrJvHA+l0Gu7kY7XOaa05alMnRWVCXqFgLIwSY4uF59Ue5SU4QKuc/HamDxbr0x6csCetXGoP7Qn1Bk/J9DsynO/UD6iZ1Hyrz+jit0hDCwi/E9OjgKTbB3ZQKQ/0ZOvevfNHG0NK4Aj3Cp7NpRk07RT1i/S0EL93Ag8GRgKI9CfpajKyK6+Jj/PI1KO5/85VAwz2AwzP8FTBb075IxCXv6T9RVvWT2tUaqxDS92zrGUbWzUYk9mSs82pECH+fkqsDt93VW++4YsR/dHCYcQSYTO/KaBMDj9LSD/J/+z20Kq8XvZUAIHtm9hRPP3ItbuAu2Hm5lkPs92pd7kCxgRs0xOVBnZ13ccdA0aunrwv9SdqElJRC3g+oCu+nXyCgmXUs9yMjTMAIHfxZV+aPKcZeUBWt057Xo85Ks1Ir5gzEHCWqZEhrLZMuF11ziGtFQUds/EESajhagzcKsxamcSZxGth4UII+adPhQkUnx2WyN+4YWR+r3f8MnkyGFuR4zjzxJS8WsQYR5PTyRaD9ixa6Mh741nBHbzfjXHskGDq179xaRNrCIB1z1xRfWfjqw2pHc1zk9xlPpL8sQWAIuETZZhbnmL54rceXVNRvUiKrrqIkeogsl0XXb17ylNb0f4GA9Wd44vffEG8FSZGHEL2fbaTGRcSiCeA8PmA/f6Hz8HCS76fXUHwgwkzSwlI71ekZ7Fapmlk/KC+Hs8hUcw3N2LN5LhkVYyizYFl/uPeVP5lsoJHhhfWvvSWruCUW1ZcJOeuTbrDgywJ/qG07gZJplnTvLcYdNaH0KMYOYMGX+rB4NGPFmQsNaIwlWrfCezxre8zXBrsMT+edVLbLqN1BqB76JH4BvZTqUIMfGwPGEn+EnmTV86fPBaYbFL3DFEhjB45CewkXEAtJxk4/Ms2pPXnaRqdky0HOYdcUcE2zcXq4vaIvW2/v0nHFJH2XXe22ueDmq/18XGtELSq85j9X8q0tcNSSKJIX8FTuJF/Pf8j5PhqG2u+osvsLxYrvvfeVJL+4tkcXcr9JV7v0ERmj/X6fM3NC4j6dS1+9Umr2oPavqiAydTZPLMNRGY23LO9zAVDly7jD+70G5TPPLdhRIl4WxcYjLnM+SNcJ26FOrkrISUtPObIz5Zb3AG612krnpy15RMW+1cQjlnWFI6538qky9axd2oJmHIHP08KyP0ubGO+TQNOYuv2uh17yCIvR8VcStw7o1g0NM60sk+8Tq7YfIBJrtp53GkvzXH7OA0p8/n/u1satf/VJhtR1l8Wa6Gmaug7haSpaCaYQax6ta0mkutlb+eAOSG1aobM81D9A4iS1RRlzBBoVX6tU1S6WE2N9ORY6DfeLRC4l9Rvr5h95XDWB2mR1d4WFudpsgVYwiTwT31ljskD8ZyDOlm5DkGh9N/UB/0AI5Xvb8ZBmai2hQ4BWMqFwYnzxwB26YHSOv9WgY3JXnvoN+2R4rqGVh/LLDMtpFP+SpMGJNWvbIl5SOodbCczW2RKleksPoUeGEzrjtKHVdtZA+kfqO+rVx/iclCqwoopepvJpSTDjT+b9GWylGRF8EDbGlw6eUzmJM95Ovoz+kwLX3c2fTjFeYEsE7vUZm3mqdGJuKh2w9/QGSaqRHs99aScGOdDqkFcACoqdbBoQqqjamhH6Q9ng39JCg3lrGJwd50Qk9ovnqBTr8MME7Ps2wiVfygUmPoUBJJfJWX5Nda0nuncbFkA=="));
  }
  var r = getData();
  var VALID = new Set(read_member_array(r));
  var IGNORED = new Set(read_member_array(r));
  var MAPPED = read_mapped_map(r);
  var EMOJI_ROOT = read_emoji_trie(r);
  var HYPHEN = 45;
  var UNDERSCORE = 95;
  function explode_cp(name) {
    return toUtf8CodePoints(name);
  }
  function filter_fe0f(cps) {
    return cps.filter((cp) => cp != 65039);
  }
  function ens_normalize_post_check(name) {
    for (let label of name.split(".")) {
      let cps = explode_cp(label);
      try {
        for (let i = cps.lastIndexOf(UNDERSCORE) - 1; i >= 0; i--) {
          if (cps[i] !== UNDERSCORE) {
            throw new Error(`underscore only allowed at start`);
          }
        }
        if (cps.length >= 4 && cps.every((cp) => cp < 128) && cps[2] === HYPHEN && cps[3] === HYPHEN) {
          throw new Error(`invalid label extension`);
        }
      } catch (err) {
        throw new Error(`Invalid label "${label}": ${err.message}`);
      }
    }
    return name;
  }
  function ens_normalize(name) {
    return ens_normalize_post_check(normalize(name, filter_fe0f));
  }
  function normalize(name, emoji_filter) {
    let input = explode_cp(name).reverse();
    let output = [];
    while (input.length) {
      let emoji = consume_emoji_reversed(input);
      if (emoji) {
        output.push(...emoji_filter(emoji));
        continue;
      }
      let cp = input.pop();
      if (VALID.has(cp)) {
        output.push(cp);
        continue;
      }
      if (IGNORED.has(cp)) {
        continue;
      }
      let cps = MAPPED[cp];
      if (cps) {
        output.push(...cps);
        continue;
      }
      throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
    }
    return ens_normalize_post_check(nfc(String.fromCodePoint(...output)));
  }
  function nfc(s) {
    return s.normalize("NFC");
  }
  function consume_emoji_reversed(cps, eaten) {
    var _a;
    let node = EMOJI_ROOT;
    let emoji;
    let saved;
    let stack = [];
    let pos = cps.length;
    if (eaten)
      eaten.length = 0;
    while (pos) {
      let cp = cps[--pos];
      node = (_a = node.branches.find((x) => x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
      if (!node)
        break;
      if (node.save) {
        saved = cp;
      } else if (node.check) {
        if (cp === saved)
          break;
      }
      stack.push(cp);
      if (node.fe0f) {
        stack.push(65039);
        if (pos > 0 && cps[pos - 1] == 65039)
          pos--;
      }
      if (node.valid) {
        emoji = stack.slice();
        if (node.valid == 2)
          emoji.splice(1, 1);
        if (eaten)
          eaten.push(...cps.slice(pos).reverse());
        cps.length = pos;
      }
    }
    return emoji;
  }
  var logger7 = new Logger(version8);
  var Zeros = new Uint8Array(32);
  Zeros.fill(0);
  function checkComponent(comp) {
    if (comp.length === 0) {
      throw new Error("invalid ENS name; empty component");
    }
    return comp;
  }
  function ensNameSplit(name) {
    const bytes = toUtf8Bytes(ens_normalize(name));
    const comps = [];
    if (name.length === 0) {
      return comps;
    }
    let last = 0;
    for (let i = 0; i < bytes.length; i++) {
      const d = bytes[i];
      if (d === 46) {
        comps.push(checkComponent(bytes.slice(last, i)));
        last = i + 1;
      }
    }
    if (last >= bytes.length) {
      throw new Error("invalid ENS name; empty component");
    }
    comps.push(checkComponent(bytes.slice(last)));
    return comps;
  }
  function namehash(name) {
    if (typeof name !== "string") {
      logger7.throwArgumentError("invalid ENS name; not a string", "name", name);
    }
    let result = Zeros;
    const comps = ensNameSplit(name);
    while (comps.length) {
      result = keccak256(concat([result, keccak256(comps.pop())]));
    }
    return hexlify(result);
  }
  function dnsEncode(name) {
    return hexlify(concat(ensNameSplit(name).map((comp) => {
      if (comp.length > 63) {
        throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
      }
      const bytes = new Uint8Array(comp.length + 1);
      bytes.set(comp, 1);
      bytes[0] = bytes.length - 1;
      return bytes;
    }))) + "00";
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version9 = "rlp/5.7.0";
  var logger8 = new Logger(version9);
  function arrayifyInteger(value) {
    const result = [];
    while (value) {
      result.unshift(value & 255);
      value >>= 8;
    }
    return result;
  }
  function unarrayifyInteger(data, offset, length) {
    let result = 0;
    for (let i = 0; i < length; i++) {
      result = result * 256 + data[offset + i];
    }
    return result;
  }
  function _encode(object) {
    if (Array.isArray(object)) {
      let payload = [];
      object.forEach(function(child) {
        payload = payload.concat(_encode(child));
      });
      if (payload.length <= 55) {
        payload.unshift(192 + payload.length);
        return payload;
      }
      const length2 = arrayifyInteger(payload.length);
      length2.unshift(247 + length2.length);
      return length2.concat(payload);
    }
    if (!isBytesLike(object)) {
      logger8.throwArgumentError("RLP object must be BytesLike", "object", object);
    }
    const data = Array.prototype.slice.call(arrayify(object));
    if (data.length === 1 && data[0] <= 127) {
      return data;
    } else if (data.length <= 55) {
      data.unshift(128 + data.length);
      return data;
    }
    const length = arrayifyInteger(data.length);
    length.unshift(183 + length.length);
    return length.concat(data);
  }
  function encode2(object) {
    return hexlify(_encode(object));
  }
  function _decodeChildren(data, offset, childOffset, length) {
    const result = [];
    while (childOffset < offset + 1 + length) {
      const decoded = _decode(data, childOffset);
      result.push(decoded.result);
      childOffset += decoded.consumed;
      if (childOffset > offset + 1 + length) {
        logger8.throwError("child data too short", Logger.errors.BUFFER_OVERRUN, {});
      }
    }
    return { consumed: 1 + length, result };
  }
  function _decode(data, offset) {
    if (data.length === 0) {
      logger8.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
    }
    if (data[offset] >= 248) {
      const lengthLength = data[offset] - 247;
      if (offset + 1 + lengthLength > data.length) {
        logger8.throwError("data short segment too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      const length = unarrayifyInteger(data, offset + 1, lengthLength);
      if (offset + 1 + lengthLength + length > data.length) {
        logger8.throwError("data long segment too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      return _decodeChildren(data, offset, offset + 1 + lengthLength, lengthLength + length);
    } else if (data[offset] >= 192) {
      const length = data[offset] - 192;
      if (offset + 1 + length > data.length) {
        logger8.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      return _decodeChildren(data, offset, offset + 1, length);
    } else if (data[offset] >= 184) {
      const lengthLength = data[offset] - 183;
      if (offset + 1 + lengthLength > data.length) {
        logger8.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      const length = unarrayifyInteger(data, offset + 1, lengthLength);
      if (offset + 1 + lengthLength + length > data.length) {
        logger8.throwError("data array too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      const result = hexlify(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
      return { consumed: 1 + lengthLength + length, result };
    } else if (data[offset] >= 128) {
      const length = data[offset] - 128;
      if (offset + 1 + length > data.length) {
        logger8.throwError("data too short", Logger.errors.BUFFER_OVERRUN, {});
      }
      const result = hexlify(data.slice(offset + 1, offset + 1 + length));
      return { consumed: 1 + length, result };
    }
    return { consumed: 1, result: hexlify(data[offset]) };
  }
  function decode2(data) {
    const bytes = arrayify(data);
    const decoded = _decode(bytes, 0);
    if (decoded.consumed !== bytes.length) {
      logger8.throwArgumentError("invalid rlp data", "data", data);
    }
    return decoded.result;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var version10 = "address/5.7.0";
  var logger9 = new Logger(version10);
  function getChecksumAddress(address) {
    if (!isHexString(address, 20)) {
      logger9.throwArgumentError("invalid address", "address", address);
    }
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for (let i = 0; i < 40; i++) {
      expanded[i] = chars[i].charCodeAt(0);
    }
    const hashed = arrayify(keccak256(expanded));
    for (let i = 0; i < 40; i += 2) {
      if (hashed[i >> 1] >> 4 >= 8) {
        chars[i] = chars[i].toUpperCase();
      }
      if ((hashed[i >> 1] & 15) >= 8) {
        chars[i + 1] = chars[i + 1].toUpperCase();
      }
    }
    return "0x" + chars.join("");
  }
  var MAX_SAFE_INTEGER = 9007199254740991;
  function log10(x) {
    if (Math.log10) {
      return Math.log10(x);
    }
    return Math.log(x) / Math.LN10;
  }
  var ibanLookup = {};
  for (let i = 0; i < 10; i++) {
    ibanLookup[String(i)] = String(i);
  }
  for (let i = 0; i < 26; i++) {
    ibanLookup[String.fromCharCode(65 + i)] = String(10 + i);
  }
  var safeDigits = Math.floor(log10(MAX_SAFE_INTEGER));
  function ibanChecksum(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c) => {
      return ibanLookup[c];
    }).join("");
    while (expanded.length >= safeDigits) {
      let block = expanded.substring(0, safeDigits);
      expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - parseInt(expanded, 10) % 97);
    while (checksum.length < 2) {
      checksum = "0" + checksum;
    }
    return checksum;
  }
  function getAddress(address) {
    let result = null;
    if (typeof address !== "string") {
      logger9.throwArgumentError("invalid address", "address", address);
    }
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
      if (address.substring(0, 2) !== "0x") {
        address = "0x" + address;
      }
      result = getChecksumAddress(address);
      if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
        logger9.throwArgumentError("bad address checksum", "address", address);
      }
    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
      if (address.substring(2, 4) !== ibanChecksum(address)) {
        logger9.throwArgumentError("bad icap checksum", "address", address);
      }
      result = _base36To16(address.substring(4));
      while (result.length < 40) {
        result = "0" + result;
      }
      result = getChecksumAddress("0x" + result);
    } else {
      logger9.throwArgumentError("invalid address", "address", address);
    }
    return result;
  }
  function getContractAddress(transaction) {
    let from = null;
    try {
      from = getAddress(transaction.from);
    } catch (error) {
      logger9.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = stripZeros(arrayify(BigNumber.from(transaction.nonce).toHexString()));
    return getAddress(hexDataSlice(keccak256(encode2([from, nonce])), 12));
  }
  var __awaiter3 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger10 = new Logger(version8);
  var padding = new Uint8Array(32);
  padding.fill(0);
  var NegativeOne2 = BigNumber.from(-1);
  var Zero2 = BigNumber.from(0);
  var One2 = BigNumber.from(1);
  var MaxUint2562 = BigNumber.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
  function hexPadRight(value) {
    const bytes = arrayify(value);
    const padOffset = bytes.length % 32;
    if (padOffset) {
      return hexConcat([bytes, padding.slice(padOffset)]);
    }
    return hexlify(bytes);
  }
  var hexTrue = hexZeroPad(One2.toHexString(), 32);
  var hexFalse = hexZeroPad(Zero2.toHexString(), 32);
  var domainFieldTypes = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
  };
  var domainFieldNames = [
    "name",
    "version",
    "chainId",
    "verifyingContract",
    "salt"
  ];
  function checkString(key22) {
    return function(value) {
      if (typeof value !== "string") {
        logger10.throwArgumentError(`invalid domain value for ${JSON.stringify(key22)}`, `domain.${key22}`, value);
      }
      return value;
    };
  }
  var domainChecks = {
    name: checkString("name"),
    version: checkString("version"),
    chainId: function(value) {
      try {
        return BigNumber.from(value).toString();
      } catch (error) {
      }
      return logger10.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function(value) {
      try {
        return getAddress(value).toLowerCase();
      } catch (error) {
      }
      return logger10.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function(value) {
      try {
        const bytes = arrayify(value);
        if (bytes.length !== 32) {
          throw new Error("bad length");
        }
        return hexlify(bytes);
      } catch (error) {
      }
      return logger10.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
  };
  function getBaseEncoder(type) {
    {
      const match = type.match(/^(u?)int(\d*)$/);
      if (match) {
        const signed22 = match[1] === "";
        const width = parseInt(match[2] || "256");
        if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
          logger10.throwArgumentError("invalid numeric width", "type", type);
        }
        const boundsUpper = MaxUint2562.mask(signed22 ? width - 1 : width);
        const boundsLower = signed22 ? boundsUpper.add(One2).mul(NegativeOne2) : Zero2;
        return function(value) {
          const v = BigNumber.from(value);
          if (v.lt(boundsLower) || v.gt(boundsUpper)) {
            logger10.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
          }
          return hexZeroPad(v.toTwos(256).toHexString(), 32);
        };
      }
    }
    {
      const match = type.match(/^bytes(\d+)$/);
      if (match) {
        const width = parseInt(match[1]);
        if (width === 0 || width > 32 || match[1] !== String(width)) {
          logger10.throwArgumentError("invalid bytes width", "type", type);
        }
        return function(value) {
          const bytes = arrayify(value);
          if (bytes.length !== width) {
            logger10.throwArgumentError(`invalid length for ${type}`, "value", value);
          }
          return hexPadRight(value);
        };
      }
    }
    switch (type) {
      case "address":
        return function(value) {
          return hexZeroPad(getAddress(value), 32);
        };
      case "bool":
        return function(value) {
          return !value ? hexFalse : hexTrue;
        };
      case "bytes":
        return function(value) {
          return keccak256(value);
        };
      case "string":
        return function(value) {
          return id(value);
        };
    }
    return null;
  }
  function encodeType(name, fields) {
    return `${name}(${fields.map(({ name: name2, type }) => type + " " + name2).join(",")})`;
  }
  var TypedDataEncoder = class _TypedDataEncoder {
    constructor(types) {
      defineReadOnly(this, "types", Object.freeze(deepCopy(types)));
      defineReadOnly(this, "_encoderCache", {});
      defineReadOnly(this, "_types", {});
      const links = {};
      const parents = {};
      const subtypes = {};
      Object.keys(types).forEach((type) => {
        links[type] = {};
        parents[type] = [];
        subtypes[type] = {};
      });
      for (const name in types) {
        const uniqueNames = {};
        types[name].forEach((field) => {
          if (uniqueNames[field.name]) {
            logger10.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
          }
          uniqueNames[field.name] = true;
          const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
          if (baseType === name) {
            logger10.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
          }
          const encoder = getBaseEncoder(baseType);
          if (encoder) {
            return;
          }
          if (!parents[baseType]) {
            logger10.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
          }
          parents[baseType].push(name);
          links[name][baseType] = true;
        });
      }
      const primaryTypes = Object.keys(parents).filter((n) => parents[n].length === 0);
      if (primaryTypes.length === 0) {
        logger10.throwArgumentError("missing primary type", "types", types);
      } else if (primaryTypes.length > 1) {
        logger10.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(", ")}`, "types", types);
      }
      defineReadOnly(this, "primaryType", primaryTypes[0]);
      function checkCircular(type, found) {
        if (found[type]) {
          logger10.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
        }
        found[type] = true;
        Object.keys(links[type]).forEach((child) => {
          if (!parents[child]) {
            return;
          }
          checkCircular(child, found);
          Object.keys(found).forEach((subtype) => {
            subtypes[subtype][child] = true;
          });
        });
        delete found[type];
      }
      checkCircular(this.primaryType, {});
      for (const name in subtypes) {
        const st = Object.keys(subtypes[name]);
        st.sort();
        this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join("");
      }
    }
    getEncoder(type) {
      let encoder = this._encoderCache[type];
      if (!encoder) {
        encoder = this._encoderCache[type] = this._getEncoder(type);
      }
      return encoder;
    }
    _getEncoder(type) {
      {
        const encoder = getBaseEncoder(type);
        if (encoder) {
          return encoder;
        }
      }
      const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        const subtype = match[1];
        const subEncoder = this.getEncoder(subtype);
        const length = parseInt(match[3]);
        return (value) => {
          if (length >= 0 && value.length !== length) {
            logger10.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
          }
          let result = value.map(subEncoder);
          if (this._types[subtype]) {
            result = result.map(keccak256);
          }
          return keccak256(hexConcat(result));
        };
      }
      const fields = this.types[type];
      if (fields) {
        const encodedType = id(this._types[type]);
        return (value) => {
          const values = fields.map(({ name, type: type2 }) => {
            const result = this.getEncoder(type2)(value[name]);
            if (this._types[type2]) {
              return keccak256(result);
            }
            return result;
          });
          values.unshift(encodedType);
          return hexConcat(values);
        };
      }
      return logger10.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
      const result = this._types[name];
      if (!result) {
        logger10.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
      }
      return result;
    }
    encodeData(type, value) {
      return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
      return keccak256(this.encodeData(name, value));
    }
    encode(value) {
      return this.encodeData(this.primaryType, value);
    }
    hash(value) {
      return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
      {
        const encoder = getBaseEncoder(type);
        if (encoder) {
          return callback(type, value);
        }
      }
      const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        const subtype = match[1];
        const length = parseInt(match[3]);
        if (length >= 0 && value.length !== length) {
          logger10.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }
        return value.map((v) => this._visit(subtype, v, callback));
      }
      const fields = this.types[type];
      if (fields) {
        return fields.reduce((accum, { name, type: type2 }) => {
          accum[name] = this._visit(type2, value[name], callback);
          return accum;
        }, {});
      }
      return logger10.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
      return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
      return new _TypedDataEncoder(types);
    }
    static getPrimaryType(types) {
      return _TypedDataEncoder.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
      return _TypedDataEncoder.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
      const domainFields = [];
      for (const name in domain) {
        const type = domainFieldTypes[name];
        if (!type) {
          logger10.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
        }
        domainFields.push({ name, type });
      }
      domainFields.sort((a, b) => {
        return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);
      });
      return _TypedDataEncoder.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
    }
    static encode(domain, types, value) {
      return hexConcat([
        "0x1901",
        _TypedDataEncoder.hashDomain(domain),
        _TypedDataEncoder.from(types).hash(value)
      ]);
    }
    static hash(domain, types, value) {
      return keccak256(_TypedDataEncoder.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName2) {
      return __awaiter3(this, void 0, void 0, function* () {
        domain = shallowCopy(domain);
        const ensCache = {};
        if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {
          ensCache[domain.verifyingContract] = "0x";
        }
        const encoder = _TypedDataEncoder.from(types);
        encoder.visit(value, (type, value2) => {
          if (type === "address" && !isHexString(value2, 20)) {
            ensCache[value2] = "0x";
          }
          return value2;
        });
        for (const name in ensCache) {
          ensCache[name] = yield resolveName2(name);
        }
        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
          domain.verifyingContract = ensCache[domain.verifyingContract];
        }
        value = encoder.visit(value, (type, value2) => {
          if (type === "address" && ensCache[value2]) {
            return ensCache[value2];
          }
          return value2;
        });
        return { domain, value };
      });
    }
    static getPayload(domain, types, value) {
      _TypedDataEncoder.hashDomain(domain);
      const domainValues = {};
      const domainTypes = [];
      domainFieldNames.forEach((name) => {
        const value2 = domain[name];
        if (value2 == null) {
          return;
        }
        domainValues[name] = domainChecks[name](value2);
        domainTypes.push({ name, type: domainFieldTypes[name] });
      });
      const encoder = _TypedDataEncoder.from(types);
      const typesWithDomain = shallowCopy(types);
      if (typesWithDomain.EIP712Domain) {
        logger10.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
      } else {
        typesWithDomain.EIP712Domain = domainTypes;
      }
      encoder.encode(value);
      return {
        types: typesWithDomain,
        domain: domainValues,
        primaryType: encoder.primaryType,
        message: encoder.visit(value, (type, value2) => {
          if (type.match(/^bytes(\d*)/)) {
            return hexlify(arrayify(value2));
          }
          if (type.match(/^u?int/)) {
            return BigNumber.from(value2).toString();
          }
          switch (type) {
            case "address":
              return value2.toLowerCase();
            case "bool":
              return !!value2;
            case "string":
              if (typeof value2 !== "string") {
                logger10.throwArgumentError(`invalid string`, "value", value2);
              }
              return value2;
          }
          return logger10.throwArgumentError("unsupported type", "type", type);
        })
      };
    }
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var import_hash = __toESM2(require_hash());
  init_define_chainIDList();
  init_define_extraRpcs();
  var version11 = "sha2/5.7.0";
  var logger11 = new Logger(version11);
  function sha256(data) {
    return "0x" + import_hash.default.sha256().update(arrayify(data)).digest("hex");
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version12 = "web/5.7.1";
  init_define_chainIDList();
  init_define_extraRpcs();
  var __awaiter4 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  function getUrl(href, options) {
    return __awaiter4(this, void 0, void 0, function* () {
      if (options == null) {
        options = {};
      }
      const request = {
        method: options.method || "GET",
        headers: options.headers || {},
        body: options.body || void 0
      };
      if (options.skipFetchSetup !== true) {
        request.mode = "cors";
        request.cache = "no-cache";
        request.credentials = "same-origin";
        request.redirect = "follow";
        request.referrer = "client";
      }
      ;
      if (options.fetchOptions != null) {
        const opts = options.fetchOptions;
        if (opts.mode) {
          request.mode = opts.mode;
        }
        if (opts.cache) {
          request.cache = opts.cache;
        }
        if (opts.credentials) {
          request.credentials = opts.credentials;
        }
        if (opts.redirect) {
          request.redirect = opts.redirect;
        }
        if (opts.referrer) {
          request.referrer = opts.referrer;
        }
      }
      const response = yield fetch(href, request);
      const body = yield response.arrayBuffer();
      const headers = {};
      if (response.headers.forEach) {
        response.headers.forEach((value, key22) => {
          headers[key22.toLowerCase()] = value;
        });
      } else {
        response.headers.keys().forEach((key22) => {
          headers[key22.toLowerCase()] = response.headers.get(key22);
        });
      }
      return {
        headers,
        statusCode: response.status,
        statusMessage: response.statusText,
        body: arrayify(new Uint8Array(body))
      };
    });
  }
  var __awaiter5 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger12 = new Logger(version12);
  function staller(duration) {
    return new Promise((resolve) => {
      setTimeout(resolve, duration);
    });
  }
  function bodyify(value, type) {
    if (value == null) {
      return null;
    }
    if (typeof value === "string") {
      return value;
    }
    if (isBytesLike(value)) {
      if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
        try {
          return toUtf8String(value);
        } catch (error) {
        }
        ;
      }
      return hexlify(value);
    }
    return value;
  }
  function unpercent(value) {
    return toUtf8Bytes(value.replace(/%([0-9a-f][0-9a-f])/gi, (all3, code) => {
      return String.fromCharCode(parseInt(code, 16));
    }));
  }
  function _fetchData(connection, body, processFunc) {
    const attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
    logger12.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
    const throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
    logger12.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const errorPassThrough = typeof connection === "object" ? !!connection.errorPassThrough : false;
    const headers = {};
    let url = null;
    const options = {
      method: "GET"
    };
    let allow304 = false;
    let timeout = 2 * 60 * 1e3;
    if (typeof connection === "string") {
      url = connection;
    } else if (typeof connection === "object") {
      if (connection == null || connection.url == null) {
        logger12.throwArgumentError("missing URL", "connection.url", connection);
      }
      url = connection.url;
      if (typeof connection.timeout === "number" && connection.timeout > 0) {
        timeout = connection.timeout;
      }
      if (connection.headers) {
        for (const key22 in connection.headers) {
          headers[key22.toLowerCase()] = { key: key22, value: String(connection.headers[key22]) };
          if (["if-none-match", "if-modified-since"].indexOf(key22.toLowerCase()) >= 0) {
            allow304 = true;
          }
        }
      }
      options.allowGzip = !!connection.allowGzip;
      if (connection.user != null && connection.password != null) {
        if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
          logger12.throwError("basic authentication requires a secure https url", Logger.errors.INVALID_ARGUMENT, { argument: "url", url, user: connection.user, password: "[REDACTED]" });
        }
        const authorization = connection.user + ":" + connection.password;
        headers["authorization"] = {
          key: "Authorization",
          value: "Basic " + encode(toUtf8Bytes(authorization))
        };
      }
      if (connection.skipFetchSetup != null) {
        options.skipFetchSetup = !!connection.skipFetchSetup;
      }
      if (connection.fetchOptions != null) {
        options.fetchOptions = shallowCopy(connection.fetchOptions);
      }
    }
    const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
    const dataMatch = url ? url.match(reData) : null;
    if (dataMatch) {
      try {
        const response = {
          statusCode: 200,
          statusMessage: "OK",
          headers: { "content-type": dataMatch[1] || "text/plain" },
          body: dataMatch[2] ? decode(dataMatch[3]) : unpercent(dataMatch[3])
        };
        let result = response.body;
        if (processFunc) {
          result = processFunc(response.body, response);
        }
        return Promise.resolve(result);
      } catch (error) {
        logger12.throwError("processing response error", Logger.errors.SERVER_ERROR, {
          body: bodyify(dataMatch[1], dataMatch[2]),
          error,
          requestBody: null,
          requestMethod: "GET",
          url
        });
      }
    }
    if (body) {
      options.method = "POST";
      options.body = body;
      if (headers["content-type"] == null) {
        headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" };
      }
      if (headers["content-length"] == null) {
        headers["content-length"] = { key: "Content-Length", value: String(body.length) };
      }
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key22) => {
      const header = headers[key22];
      flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = function() {
      let timer22 = null;
      const promise = new Promise(function(resolve, reject) {
        if (timeout) {
          timer22 = setTimeout(() => {
            if (timer22 == null) {
              return;
            }
            timer22 = null;
            reject(logger12.makeError("timeout", Logger.errors.TIMEOUT, {
              requestBody: bodyify(options.body, flatHeaders["content-type"]),
              requestMethod: options.method,
              timeout,
              url
            }));
          }, timeout);
        }
      });
      const cancel = function() {
        if (timer22 == null) {
          return;
        }
        clearTimeout(timer22);
        timer22 = null;
      };
      return { promise, cancel };
    }();
    const runningFetch = function() {
      return __awaiter5(this, void 0, void 0, function* () {
        for (let attempt = 0; attempt < attemptLimit; attempt++) {
          let response = null;
          try {
            response = yield getUrl(url, options);
            if (attempt < attemptLimit) {
              if (response.statusCode === 301 || response.statusCode === 302) {
                const location = response.headers.location || "";
                if (options.method === "GET" && location.match(/^https:/)) {
                  url = response.headers.location;
                  continue;
                }
              } else if (response.statusCode === 429) {
                let tryAgain = true;
                if (throttleCallback) {
                  tryAgain = yield throttleCallback(attempt, url);
                }
                if (tryAgain) {
                  let stall22 = 0;
                  const retryAfter = response.headers["retry-after"];
                  if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                    stall22 = parseInt(retryAfter) * 1e3;
                  } else {
                    stall22 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                  }
                  yield staller(stall22);
                  continue;
                }
              }
            }
          } catch (error) {
            response = error.response;
            if (response == null) {
              runningTimeout.cancel();
              logger12.throwError("missing response", Logger.errors.SERVER_ERROR, {
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                serverError: error,
                url
              });
            }
          }
          let body2 = response.body;
          if (allow304 && response.statusCode === 304) {
            body2 = null;
          } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
            runningTimeout.cancel();
            logger12.throwError("bad response", Logger.errors.SERVER_ERROR, {
              status: response.statusCode,
              headers: response.headers,
              body: bodyify(body2, response.headers ? response.headers["content-type"] : null),
              requestBody: bodyify(options.body, flatHeaders["content-type"]),
              requestMethod: options.method,
              url
            });
          }
          if (processFunc) {
            try {
              const result = yield processFunc(body2, response);
              runningTimeout.cancel();
              return result;
            } catch (error) {
              if (error.throttleRetry && attempt < attemptLimit) {
                let tryAgain = true;
                if (throttleCallback) {
                  tryAgain = yield throttleCallback(attempt, url);
                }
                if (tryAgain) {
                  const timeout2 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                  yield staller(timeout2);
                  continue;
                }
              }
              runningTimeout.cancel();
              logger12.throwError("processing response error", Logger.errors.SERVER_ERROR, {
                body: bodyify(body2, response.headers ? response.headers["content-type"] : null),
                error,
                requestBody: bodyify(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url
              });
            }
          }
          runningTimeout.cancel();
          return body2;
        }
        return logger12.throwError("failed response", Logger.errors.SERVER_ERROR, {
          requestBody: bodyify(options.body, flatHeaders["content-type"]),
          requestMethod: options.method,
          url
        });
      });
    }();
    return Promise.race([runningTimeout.promise, runningFetch]);
  }
  function fetchJson(connection, json, processFunc) {
    let processJsonFunc = (value, response) => {
      let result = null;
      if (value != null) {
        try {
          result = JSON.parse(toUtf8String(value));
        } catch (error) {
          logger12.throwError("invalid JSON", Logger.errors.SERVER_ERROR, {
            body: value,
            error
          });
        }
      }
      if (processFunc) {
        result = processFunc(result, response);
      }
      return result;
    };
    let body = null;
    if (json != null) {
      body = toUtf8Bytes(json);
      const updated = typeof connection === "string" ? { url: connection } : shallowCopy(connection);
      if (updated.headers) {
        const hasContentType = Object.keys(updated.headers).filter((k) => k.toLowerCase() === "content-type").length !== 0;
        if (!hasContentType) {
          updated.headers = shallowCopy(updated.headers);
          updated.headers["content-type"] = "application/json";
        }
      } else {
        updated.headers = { "content-type": "application/json" };
      }
      connection = updated;
    }
    return _fetchData(connection, body, processJsonFunc);
  }
  function poll(func, options) {
    if (!options) {
      options = {};
    }
    options = shallowCopy(options);
    if (options.floor == null) {
      options.floor = 0;
    }
    if (options.ceiling == null) {
      options.ceiling = 1e4;
    }
    if (options.interval == null) {
      options.interval = 250;
    }
    return new Promise(function(resolve, reject) {
      let timer22 = null;
      let done = false;
      const cancel = () => {
        if (done) {
          return false;
        }
        done = true;
        if (timer22) {
          clearTimeout(timer22);
        }
        return true;
      };
      if (options.timeout) {
        timer22 = setTimeout(() => {
          if (cancel()) {
            reject(new Error("timeout"));
          }
        }, options.timeout);
      }
      const retryLimit = options.retryLimit;
      let attempt = 0;
      function check() {
        return func().then(function(result) {
          if (result !== void 0) {
            if (cancel()) {
              resolve(result);
            }
          } else if (options.oncePoll) {
            options.oncePoll.once("poll", check);
          } else if (options.onceBlock) {
            options.onceBlock.once("block", check);
          } else if (!done) {
            attempt++;
            if (attempt > retryLimit) {
              if (cancel()) {
                reject(new Error("retry limit reached"));
              }
              return;
            }
            let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
            if (timeout < options.floor) {
              timeout = options.floor;
            }
            if (timeout > options.ceiling) {
              timeout = options.ceiling;
            }
            setTimeout(check, timeout);
          }
          return null;
        }, function(error) {
          if (cancel()) {
            reject(error);
          }
        });
      }
      check();
    });
  }
  var import_bech32 = __toESM2(require_bech32());
  init_define_chainIDList();
  init_define_extraRpcs();
  var version13 = "providers/5.7.2";
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var import_bn2 = __toESM2(require_bn());
  var import_hash2 = __toESM2(require_hash());
  function createCommonjsModule(fn, basedir, module) {
    return module = {
      path: basedir,
      exports: {},
      require: function(path, base22) {
        return commonjsRequire(path, base22 === void 0 || base22 === null ? module.path : base22);
      }
    }, fn(module, module.exports), module.exports;
  }
  function commonjsRequire() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }
  var minimalisticAssert = assert;
  function assert(val, msg) {
    if (!val)
      throw new Error(msg || "Assertion failed");
  }
  assert.equal = function assertEqual(l, r22, msg) {
    if (l != r22)
      throw new Error(msg || "Assertion failed: " + l + " != " + r22);
  };
  var utils_1 = createCommonjsModule(function(module, exports) {
    "use strict";
    var utils = exports;
    function toArray22(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== "string") {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === "hex") {
        msg = msg.replace(/[^a-z0-9]+/ig, "");
        if (msg.length % 2 !== 0)
          msg = "0" + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 255;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray22;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    utils.zero2 = zero2;
    function toHex22(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex22;
    utils.encode = function encode62(arr, enc) {
      if (enc === "hex")
        return toHex22(arr);
      else
        return arr;
    };
  });
  var utils_1$1 = createCommonjsModule(function(module, exports) {
    "use strict";
    var utils = exports;
    utils.assert = minimalisticAssert;
    utils.toArray = utils_1.toArray;
    utils.zero2 = utils_1.zero2;
    utils.toHex = utils_1.toHex;
    utils.encode = utils_1.encode;
    function getNAF22(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);
      var ws = 1 << w + 1;
      var k = num.clone();
      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }
        naf[i] = z;
        k.iushrn(1);
      }
      return naf;
    }
    utils.getNAF = getNAF22;
    function getJSF22(k1, k2) {
      var jsf = [
        [],
        []
      ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = k1.andln(7) + d1 & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = k2.andln(7) + d2 & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF22;
    function cachedProperty(obj, name, computer) {
      var key22 = "_" + name;
      obj.prototype[name] = function cachedProperty2() {
        return this[key22] !== void 0 ? this[key22] : this[key22] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new import_bn2.default(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  });
  var getNAF = utils_1$1.getNAF;
  var getJSF = utils_1$1.getJSF;
  var assert$1 = utils_1$1.assert;
  function BaseCurve(type, conf) {
    this.type = type;
    this.p = new import_bn2.default(conf.p, 16);
    this.red = conf.prime ? import_bn2.default.red(conf.prime) : import_bn2.default.mont(this.p);
    this.zero = new import_bn2.default(0).toRed(this.red);
    this.one = new import_bn2.default(1).toRed(this.red);
    this.two = new import_bn2.default(2).toRed(this.red);
    this.n = conf.n && new import_bn2.default(conf.n, 16);
    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
    this._wnafT1 = new Array(4);
    this._wnafT2 = new Array(4);
    this._wnafT3 = new Array(4);
    this._wnafT4 = new Array(4);
    this._bitLength = this.n ? this.n.bitLength() : 0;
    var adjustCount = this.n && this.p.div(this.n);
    if (!adjustCount || adjustCount.cmpn(100) > 0) {
      this.redN = null;
    } else {
      this._maxwellTrick = true;
      this.redN = this.n.toRed(this.red);
    }
  }
  var base = BaseCurve;
  BaseCurve.prototype.point = function point() {
    throw new Error("Not implemented");
  };
  BaseCurve.prototype.validate = function validate() {
    throw new Error("Not implemented");
  };
  BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
    assert$1(p.precomputed);
    var doubles = p._getDoubles();
    var naf = getNAF(k, 1, this._bitLength);
    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
    I /= 3;
    var repr = [];
    var j;
    var nafW;
    for (j = 0; j < naf.length; j += doubles.step) {
      nafW = 0;
      for (var l = j + doubles.step - 1; l >= j; l--)
        nafW = (nafW << 1) + naf[l];
      repr.push(nafW);
    }
    var a = this.jpoint(null, null, null);
    var b = this.jpoint(null, null, null);
    for (var i = I; i > 0; i--) {
      for (j = 0; j < repr.length; j++) {
        nafW = repr[j];
        if (nafW === i)
          b = b.mixedAdd(doubles.points[j]);
        else if (nafW === -i)
          b = b.mixedAdd(doubles.points[j].neg());
      }
      a = a.add(b);
    }
    return a.toP();
  };
  BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
    var w = 4;
    var nafPoints = p._getNAFPoints(w);
    w = nafPoints.wnd;
    var wnd = nafPoints.points;
    var naf = getNAF(k, w, this._bitLength);
    var acc = this.jpoint(null, null, null);
    for (var i = naf.length - 1; i >= 0; i--) {
      for (var l = 0; i >= 0 && naf[i] === 0; i--)
        l++;
      if (i >= 0)
        l++;
      acc = acc.dblp(l);
      if (i < 0)
        break;
      var z = naf[i];
      assert$1(z !== 0);
      if (p.type === "affine") {
        if (z > 0)
          acc = acc.mixedAdd(wnd[z - 1 >> 1]);
        else
          acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
      } else {
        if (z > 0)
          acc = acc.add(wnd[z - 1 >> 1]);
        else
          acc = acc.add(wnd[-z - 1 >> 1].neg());
      }
    }
    return p.type === "affine" ? acc.toP() : acc;
  };
  BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {
    var wndWidth = this._wnafT1;
    var wnd = this._wnafT2;
    var naf = this._wnafT3;
    var max = 0;
    var i;
    var j;
    var p;
    for (i = 0; i < len; i++) {
      p = points[i];
      var nafPoints = p._getNAFPoints(defW);
      wndWidth[i] = nafPoints.wnd;
      wnd[i] = nafPoints.points;
    }
    for (i = len - 1; i >= 1; i -= 2) {
      var a = i - 1;
      var b = i;
      if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
        naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);
        naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);
        max = Math.max(naf[a].length, max);
        max = Math.max(naf[b].length, max);
        continue;
      }
      var comb = [
        points[a],
        /* 1 */
        null,
        /* 3 */
        null,
        /* 5 */
        points[b]
        /* 7 */
      ];
      if (points[a].y.cmp(points[b].y) === 0) {
        comb[1] = points[a].add(points[b]);
        comb[2] = points[a].toJ().mixedAdd(points[b].neg());
      } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
        comb[1] = points[a].toJ().mixedAdd(points[b]);
        comb[2] = points[a].add(points[b].neg());
      } else {
        comb[1] = points[a].toJ().mixedAdd(points[b]);
        comb[2] = points[a].toJ().mixedAdd(points[b].neg());
      }
      var index2 = [
        -3,
        /* -1 -1 */
        -1,
        /* -1 0 */
        -5,
        /* -1 1 */
        -7,
        /* 0 -1 */
        0,
        /* 0 0 */
        7,
        /* 0 1 */
        5,
        /* 1 -1 */
        1,
        /* 1 0 */
        3
        /* 1 1 */
      ];
      var jsf = getJSF(coeffs[a], coeffs[b]);
      max = Math.max(jsf[0].length, max);
      naf[a] = new Array(max);
      naf[b] = new Array(max);
      for (j = 0; j < max; j++) {
        var ja = jsf[0][j] | 0;
        var jb = jsf[1][j] | 0;
        naf[a][j] = index2[(ja + 1) * 3 + (jb + 1)];
        naf[b][j] = 0;
        wnd[a] = comb;
      }
    }
    var acc = this.jpoint(null, null, null);
    var tmp = this._wnafT4;
    for (i = max; i >= 0; i--) {
      var k = 0;
      while (i >= 0) {
        var zero = true;
        for (j = 0; j < len; j++) {
          tmp[j] = naf[j][i] | 0;
          if (tmp[j] !== 0)
            zero = false;
        }
        if (!zero)
          break;
        k++;
        i--;
      }
      if (i >= 0)
        k++;
      acc = acc.dblp(k);
      if (i < 0)
        break;
      for (j = 0; j < len; j++) {
        var z = tmp[j];
        p;
        if (z === 0)
          continue;
        else if (z > 0)
          p = wnd[j][z - 1 >> 1];
        else if (z < 0)
          p = wnd[j][-z - 1 >> 1].neg();
        if (p.type === "affine")
          acc = acc.mixedAdd(p);
        else
          acc = acc.add(p);
      }
    }
    for (i = 0; i < len; i++)
      wnd[i] = null;
    if (jacobianResult)
      return acc;
    else
      return acc.toP();
  };
  function BasePoint(curve, type) {
    this.curve = curve;
    this.type = type;
    this.precomputed = null;
  }
  BaseCurve.BasePoint = BasePoint;
  BasePoint.prototype.eq = function eq() {
    throw new Error("Not implemented");
  };
  BasePoint.prototype.validate = function validate2() {
    return this.curve.validate(this);
  };
  BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
    bytes = utils_1$1.toArray(bytes, enc);
    var len = this.p.byteLength();
    if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
      if (bytes[0] === 6)
        assert$1(bytes[bytes.length - 1] % 2 === 0);
      else if (bytes[0] === 7)
        assert$1(bytes[bytes.length - 1] % 2 === 1);
      var res = this.point(
        bytes.slice(1, 1 + len),
        bytes.slice(1 + len, 1 + 2 * len)
      );
      return res;
    } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
      return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
    }
    throw new Error("Unknown point format");
  };
  BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
    return this.encode(enc, true);
  };
  BasePoint.prototype._encode = function _encode2(compact) {
    var len = this.curve.p.byteLength();
    var x = this.getX().toArray("be", len);
    if (compact)
      return [this.getY().isEven() ? 2 : 3].concat(x);
    return [4].concat(x, this.getY().toArray("be", len));
  };
  BasePoint.prototype.encode = function encode3(enc, compact) {
    return utils_1$1.encode(this._encode(compact), enc);
  };
  BasePoint.prototype.precompute = function precompute(power) {
    if (this.precomputed)
      return this;
    var precomputed = {
      doubles: null,
      naf: null,
      beta: null
    };
    precomputed.naf = this._getNAFPoints(8);
    precomputed.doubles = this._getDoubles(4, power);
    precomputed.beta = this._getBeta();
    this.precomputed = precomputed;
    return this;
  };
  BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
    if (!this.precomputed)
      return false;
    var doubles = this.precomputed.doubles;
    if (!doubles)
      return false;
    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
  };
  BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
    if (this.precomputed && this.precomputed.doubles)
      return this.precomputed.doubles;
    var doubles = [this];
    var acc = this;
    for (var i = 0; i < power; i += step) {
      for (var j = 0; j < step; j++)
        acc = acc.dbl();
      doubles.push(acc);
    }
    return {
      step,
      points: doubles
    };
  };
  BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
    if (this.precomputed && this.precomputed.naf)
      return this.precomputed.naf;
    var res = [this];
    var max = (1 << wnd) - 1;
    var dbl32 = max === 1 ? null : this.dbl();
    for (var i = 1; i < max; i++)
      res[i] = res[i - 1].add(dbl32);
    return {
      wnd,
      points: res
    };
  };
  BasePoint.prototype._getBeta = function _getBeta() {
    return null;
  };
  BasePoint.prototype.dblp = function dblp(k) {
    var r22 = this;
    for (var i = 0; i < k; i++)
      r22 = r22.dbl();
    return r22;
  };
  var inherits_browser = createCommonjsModule(function(module) {
    if (typeof Object.create === "function") {
      module.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  });
  var assert$2 = utils_1$1.assert;
  function ShortCurve(conf) {
    base.call(this, "short", conf);
    this.a = new import_bn2.default(conf.a, 16).toRed(this.red);
    this.b = new import_bn2.default(conf.b, 16).toRed(this.red);
    this.tinv = this.two.redInvm();
    this.zeroA = this.a.fromRed().cmpn(0) === 0;
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
    this.endo = this._getEndomorphism(conf);
    this._endoWnafT1 = new Array(4);
    this._endoWnafT2 = new Array(4);
  }
  inherits_browser(ShortCurve, base);
  var short_1 = ShortCurve;
  ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
      return;
    var beta;
    var lambda;
    if (conf.beta) {
      beta = new import_bn2.default(conf.beta, 16).toRed(this.red);
    } else {
      var betas = this._getEndoRoots(this.p);
      beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
      beta = beta.toRed(this.red);
    }
    if (conf.lambda) {
      lambda = new import_bn2.default(conf.lambda, 16);
    } else {
      var lambdas = this._getEndoRoots(this.n);
      if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
        lambda = lambdas[0];
      } else {
        lambda = lambdas[1];
        assert$2(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
      }
    }
    var basis;
    if (conf.basis) {
      basis = conf.basis.map(function(vec) {
        return {
          a: new import_bn2.default(vec.a, 16),
          b: new import_bn2.default(vec.b, 16)
        };
      });
    } else {
      basis = this._getEndoBasis(lambda);
    }
    return {
      beta,
      lambda,
      basis
    };
  };
  ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
    var red = num === this.p ? this.red : import_bn2.default.mont(num);
    var tinv = new import_bn2.default(2).toRed(red).redInvm();
    var ntinv = tinv.redNeg();
    var s = new import_bn2.default(3).toRed(red).redNeg().redSqrt().redMul(tinv);
    var l1 = ntinv.redAdd(s).fromRed();
    var l2 = ntinv.redSub(s).fromRed();
    return [l1, l2];
  };
  ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
    var u = lambda;
    var v = this.n.clone();
    var x1 = new import_bn2.default(1);
    var y1 = new import_bn2.default(0);
    var x2 = new import_bn2.default(0);
    var y2 = new import_bn2.default(1);
    var a0;
    var b0;
    var a1;
    var b1;
    var a2;
    var b2;
    var prevR;
    var i = 0;
    var r22;
    var x;
    while (u.cmpn(0) !== 0) {
      var q = v.div(u);
      r22 = v.sub(q.mul(u));
      x = x2.sub(q.mul(x1));
      var y = y2.sub(q.mul(y1));
      if (!a1 && r22.cmp(aprxSqrt) < 0) {
        a0 = prevR.neg();
        b0 = x1;
        a1 = r22.neg();
        b1 = x;
      } else if (a1 && ++i === 2) {
        break;
      }
      prevR = r22;
      v = u;
      u = r22;
      x2 = x1;
      x1 = x;
      y2 = y1;
      y1 = y;
    }
    a2 = r22.neg();
    b2 = x;
    var len1 = a1.sqr().add(b1.sqr());
    var len2 = a2.sqr().add(b2.sqr());
    if (len2.cmp(len1) >= 0) {
      a2 = a0;
      b2 = b0;
    }
    if (a1.negative) {
      a1 = a1.neg();
      b1 = b1.neg();
    }
    if (a2.negative) {
      a2 = a2.neg();
      b2 = b2.neg();
    }
    return [
      { a: a1, b: b1 },
      { a: a2, b: b2 }
    ];
  };
  ShortCurve.prototype._endoSplit = function _endoSplit(k) {
    var basis = this.endo.basis;
    var v1 = basis[0];
    var v2 = basis[1];
    var c1 = v2.b.mul(k).divRound(this.n);
    var c2 = v1.b.neg().mul(k).divRound(this.n);
    var p1 = c1.mul(v1.a);
    var p2 = c2.mul(v2.a);
    var q1 = c1.mul(v1.b);
    var q2 = c2.mul(v2.b);
    var k1 = k.sub(p1).sub(p2);
    var k2 = q1.add(q2).neg();
    return { k1, k2 };
  };
  ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
    x = new import_bn2.default(x, 16);
    if (!x.red)
      x = x.toRed(this.red);
    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
      throw new Error("invalid point");
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd)
      y = y.redNeg();
    return this.point(x, y);
  };
  ShortCurve.prototype.validate = function validate3(point32) {
    if (point32.inf)
      return true;
    var x = point32.x;
    var y = point32.y;
    var ax = this.a.redMul(x);
    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
    return y.redSqr().redISub(rhs).cmpn(0) === 0;
  };
  ShortCurve.prototype._endoWnafMulAdd = function _endoWnafMulAdd(points, coeffs, jacobianResult) {
    var npoints = this._endoWnafT1;
    var ncoeffs = this._endoWnafT2;
    for (var i = 0; i < points.length; i++) {
      var split = this._endoSplit(coeffs[i]);
      var p = points[i];
      var beta = p._getBeta();
      if (split.k1.negative) {
        split.k1.ineg();
        p = p.neg(true);
      }
      if (split.k2.negative) {
        split.k2.ineg();
        beta = beta.neg(true);
      }
      npoints[i * 2] = p;
      npoints[i * 2 + 1] = beta;
      ncoeffs[i * 2] = split.k1;
      ncoeffs[i * 2 + 1] = split.k2;
    }
    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
    for (var j = 0; j < i * 2; j++) {
      npoints[j] = null;
      ncoeffs[j] = null;
    }
    return res;
  };
  function Point(curve, x, y, isRed) {
    base.BasePoint.call(this, curve, "affine");
    if (x === null && y === null) {
      this.x = null;
      this.y = null;
      this.inf = true;
    } else {
      this.x = new import_bn2.default(x, 16);
      this.y = new import_bn2.default(y, 16);
      if (isRed) {
        this.x.forceRed(this.curve.red);
        this.y.forceRed(this.curve.red);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      this.inf = false;
    }
  }
  inherits_browser(Point, base.BasePoint);
  ShortCurve.prototype.point = function point2(x, y, isRed) {
    return new Point(this, x, y, isRed);
  };
  ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
    return Point.fromJSON(this, obj, red);
  };
  Point.prototype._getBeta = function _getBeta2() {
    if (!this.curve.endo)
      return;
    var pre = this.precomputed;
    if (pre && pre.beta)
      return pre.beta;
    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (pre) {
      var curve = this.curve;
      var endoMul = function(p) {
        return curve.point(p.x.redMul(curve.endo.beta), p.y);
      };
      pre.beta = beta;
      beta.precomputed = {
        beta: null,
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: pre.naf.points.map(endoMul)
        },
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: pre.doubles.points.map(endoMul)
        }
      };
    }
    return beta;
  };
  Point.prototype.toJSON = function toJSON() {
    if (!this.precomputed)
      return [this.x, this.y];
    return [this.x, this.y, this.precomputed && {
      doubles: this.precomputed.doubles && {
        step: this.precomputed.doubles.step,
        points: this.precomputed.doubles.points.slice(1)
      },
      naf: this.precomputed.naf && {
        wnd: this.precomputed.naf.wnd,
        points: this.precomputed.naf.points.slice(1)
      }
    }];
  };
  Point.fromJSON = function fromJSON(curve, obj, red) {
    if (typeof obj === "string")
      obj = JSON.parse(obj);
    var res = curve.point(obj[0], obj[1], red);
    if (!obj[2])
      return res;
    function obj2point(obj2) {
      return curve.point(obj2[0], obj2[1], red);
    }
    var pre = obj[2];
    res.precomputed = {
      beta: null,
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: [res].concat(pre.doubles.points.map(obj2point))
      },
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: [res].concat(pre.naf.points.map(obj2point))
      }
    };
    return res;
  };
  Point.prototype.inspect = function inspect() {
    if (this.isInfinity())
      return "<EC Point Infinity>";
    return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
  };
  Point.prototype.isInfinity = function isInfinity() {
    return this.inf;
  };
  Point.prototype.add = function add(p) {
    if (this.inf)
      return p;
    if (p.inf)
      return this;
    if (this.eq(p))
      return this.dbl();
    if (this.neg().eq(p))
      return this.curve.point(null, null);
    if (this.x.cmp(p.x) === 0)
      return this.curve.point(null, null);
    var c = this.y.redSub(p.y);
    if (c.cmpn(0) !== 0)
      c = c.redMul(this.x.redSub(p.x).redInvm());
    var nx = c.redSqr().redISub(this.x).redISub(p.x);
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
  };
  Point.prototype.dbl = function dbl() {
    if (this.inf)
      return this;
    var ys1 = this.y.redAdd(this.y);
    if (ys1.cmpn(0) === 0)
      return this.curve.point(null, null);
    var a = this.curve.a;
    var x2 = this.x.redSqr();
    var dyinv = ys1.redInvm();
    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
    var nx = c.redSqr().redISub(this.x.redAdd(this.x));
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
  };
  Point.prototype.getX = function getX() {
    return this.x.fromRed();
  };
  Point.prototype.getY = function getY() {
    return this.y.fromRed();
  };
  Point.prototype.mul = function mul(k) {
    k = new import_bn2.default(k, 16);
    if (this.isInfinity())
      return this;
    else if (this._hasDoubles(k))
      return this.curve._fixedNafMul(this, k);
    else if (this.curve.endo)
      return this.curve._endoWnafMulAdd([this], [k]);
    else
      return this.curve._wnafMul(this, k);
  };
  Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
    var points = [this, p2];
    var coeffs = [k1, k2];
    if (this.curve.endo)
      return this.curve._endoWnafMulAdd(points, coeffs);
    else
      return this.curve._wnafMulAdd(1, points, coeffs, 2);
  };
  Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
    var points = [this, p2];
    var coeffs = [k1, k2];
    if (this.curve.endo)
      return this.curve._endoWnafMulAdd(points, coeffs, true);
    else
      return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
  };
  Point.prototype.eq = function eq2(p) {
    return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
  };
  Point.prototype.neg = function neg(_precompute) {
    if (this.inf)
      return this;
    var res = this.curve.point(this.x, this.y.redNeg());
    if (_precompute && this.precomputed) {
      var pre = this.precomputed;
      var negate = function(p) {
        return p.neg();
      };
      res.precomputed = {
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: pre.naf.points.map(negate)
        },
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: pre.doubles.points.map(negate)
        }
      };
    }
    return res;
  };
  Point.prototype.toJ = function toJ() {
    if (this.inf)
      return this.curve.jpoint(null, null, null);
    var res = this.curve.jpoint(this.x, this.y, this.curve.one);
    return res;
  };
  function JPoint(curve, x, y, z) {
    base.BasePoint.call(this, curve, "jacobian");
    if (x === null && y === null && z === null) {
      this.x = this.curve.one;
      this.y = this.curve.one;
      this.z = new import_bn2.default(0);
    } else {
      this.x = new import_bn2.default(x, 16);
      this.y = new import_bn2.default(y, 16);
      this.z = new import_bn2.default(z, 16);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;
  }
  inherits_browser(JPoint, base.BasePoint);
  ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
    return new JPoint(this, x, y, z);
  };
  JPoint.prototype.toP = function toP() {
    if (this.isInfinity())
      return this.curve.point(null, null);
    var zinv = this.z.redInvm();
    var zinv2 = zinv.redSqr();
    var ax = this.x.redMul(zinv2);
    var ay = this.y.redMul(zinv2).redMul(zinv);
    return this.curve.point(ax, ay);
  };
  JPoint.prototype.neg = function neg2() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
  };
  JPoint.prototype.add = function add2(p) {
    if (this.isInfinity())
      return p;
    if (p.isInfinity())
      return this;
    var pz2 = p.z.redSqr();
    var z2 = this.z.redSqr();
    var u1 = this.x.redMul(pz2);
    var u2 = p.x.redMul(z2);
    var s1 = this.y.redMul(pz2.redMul(p.z));
    var s2 = p.y.redMul(z2.redMul(this.z));
    var h = u1.redSub(u2);
    var r22 = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
      if (r22.cmpn(0) !== 0)
        return this.curve.jpoint(null, null, null);
      else
        return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r22.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r22.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(p.z).redMul(h);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype.mixedAdd = function mixedAdd(p) {
    if (this.isInfinity())
      return p.toJ();
    if (p.isInfinity())
      return this;
    var z2 = this.z.redSqr();
    var u1 = this.x;
    var u2 = p.x.redMul(z2);
    var s1 = this.y;
    var s2 = p.y.redMul(z2).redMul(this.z);
    var h = u1.redSub(u2);
    var r22 = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
      if (r22.cmpn(0) !== 0)
        return this.curve.jpoint(null, null, null);
      else
        return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r22.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r22.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(h);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype.dblp = function dblp2(pow) {
    if (pow === 0)
      return this;
    if (this.isInfinity())
      return this;
    if (!pow)
      return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
      var r22 = this;
      for (i = 0; i < pow; i++)
        r22 = r22.dbl();
      return r22;
    }
    var a = this.curve.a;
    var tinv = this.curve.tinv;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jyd = jy.redAdd(jy);
    for (i = 0; i < pow; i++) {
      var jx2 = jx.redSqr();
      var jyd2 = jyd.redSqr();
      var jyd4 = jyd2.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var t1 = jx.redMul(jyd2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var dny = c.redMul(t2);
      dny = dny.redIAdd(dny).redISub(jyd4);
      var nz = jyd.redMul(jz);
      if (i + 1 < pow)
        jz4 = jz4.redMul(jyd4);
      jx = nx;
      jz = nz;
      jyd = dny;
    }
    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
  };
  JPoint.prototype.dbl = function dbl2() {
    if (this.isInfinity())
      return this;
    if (this.curve.zeroA)
      return this._zeroDbl();
    else if (this.curve.threeA)
      return this._threeDbl();
    else
      return this._dbl();
  };
  JPoint.prototype._zeroDbl = function _zeroDbl() {
    var nx;
    var ny;
    var nz;
    if (this.zOne) {
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var yyyy = yy.redSqr();
      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      s = s.redIAdd(s);
      var m = xx.redAdd(xx).redIAdd(xx);
      var t = m.redSqr().redISub(s).redISub(s);
      var yyyy8 = yyyy.redIAdd(yyyy);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      nx = t;
      ny = m.redMul(s.redISub(t)).redISub(yyyy8);
      nz = this.y.redAdd(this.y);
    } else {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = b.redSqr();
      var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
      d = d.redIAdd(d);
      var e = a.redAdd(a).redIAdd(a);
      var f = e.redSqr();
      var c8 = c.redIAdd(c);
      c8 = c8.redIAdd(c8);
      c8 = c8.redIAdd(c8);
      nx = f.redISub(d).redISub(d);
      ny = e.redMul(d.redISub(nx)).redISub(c8);
      nz = this.y.redMul(this.z);
      nz = nz.redIAdd(nz);
    }
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype._threeDbl = function _threeDbl() {
    var nx;
    var ny;
    var nz;
    if (this.zOne) {
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var yyyy = yy.redSqr();
      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      s = s.redIAdd(s);
      var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
      var t = m.redSqr().redISub(s).redISub(s);
      nx = t;
      var yyyy8 = yyyy.redIAdd(yyyy);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      ny = m.redMul(s.redISub(t)).redISub(yyyy8);
      nz = this.y.redAdd(this.y);
    } else {
      var delta = this.z.redSqr();
      var gamma = this.y.redSqr();
      var beta = this.x.redMul(gamma);
      var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
      alpha = alpha.redAdd(alpha).redIAdd(alpha);
      var beta4 = beta.redIAdd(beta);
      beta4 = beta4.redIAdd(beta4);
      var beta8 = beta4.redAdd(beta4);
      nx = alpha.redSqr().redISub(beta8);
      nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
      var ggamma8 = gamma.redSqr();
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
    }
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype._dbl = function _dbl() {
    var a = this.curve.a;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jx2 = jx.redSqr();
    var jy2 = jy.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var jxd4 = jx.redAdd(jx);
    jxd4 = jxd4.redIAdd(jxd4);
    var t1 = jxd4.redMul(jy2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var jyd8 = jy2.redSqr();
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    var ny = c.redMul(t2).redISub(jyd8);
    var nz = jy.redAdd(jy).redMul(jz);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype.trpl = function trpl() {
    if (!this.curve.zeroA)
      return this.dbl().add(this);
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var zz = this.z.redSqr();
    var yyyy = yy.redSqr();
    var m = xx.redAdd(xx).redIAdd(xx);
    var mm = m.redSqr();
    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    e = e.redIAdd(e);
    e = e.redAdd(e).redIAdd(e);
    e = e.redISub(mm);
    var ee = e.redSqr();
    var t = yyyy.redIAdd(yyyy);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
    var yyu4 = yy.redMul(u);
    yyu4 = yyu4.redIAdd(yyu4);
    yyu4 = yyu4.redIAdd(yyu4);
    var nx = this.x.redMul(ee).redISub(yyu4);
    nx = nx.redIAdd(nx);
    nx = nx.redIAdd(nx);
    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint.prototype.mul = function mul2(k, kbase) {
    k = new import_bn2.default(k, kbase);
    return this.curve._wnafMul(this, k);
  };
  JPoint.prototype.eq = function eq3(p) {
    if (p.type === "affine")
      return this.eq(p.toJ());
    if (this === p)
      return true;
    var z2 = this.z.redSqr();
    var pz2 = p.z.redSqr();
    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
      return false;
    var z3 = z2.redMul(this.z);
    var pz3 = pz2.redMul(p.z);
    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
  };
  JPoint.prototype.eqXToP = function eqXToP(x) {
    var zs = this.z.redSqr();
    var rx = x.toRed(this.curve.red).redMul(zs);
    if (this.x.cmp(rx) === 0)
      return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(zs);
    for (; ; ) {
      xc.iadd(this.curve.n);
      if (xc.cmp(this.curve.p) >= 0)
        return false;
      rx.redIAdd(t);
      if (this.x.cmp(rx) === 0)
        return true;
    }
  };
  JPoint.prototype.inspect = function inspect2() {
    if (this.isInfinity())
      return "<EC JPoint Infinity>";
    return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
  };
  JPoint.prototype.isInfinity = function isInfinity2() {
    return this.z.cmpn(0) === 0;
  };
  var curve_1 = createCommonjsModule(function(module, exports) {
    "use strict";
    var curve = exports;
    curve.base = base;
    curve.short = short_1;
    curve.mont = /*RicMoo:ethers:require(./mont)*/
    null;
    curve.edwards = /*RicMoo:ethers:require(./edwards)*/
    null;
  });
  var curves_1 = createCommonjsModule(function(module, exports) {
    "use strict";
    var curves = exports;
    var assert22 = utils_1$1.assert;
    function PresetCurve(options) {
      if (options.type === "short")
        this.curve = new curve_1.short(options);
      else if (options.type === "edwards")
        this.curve = new curve_1.edwards(options);
      else
        this.curve = new curve_1.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert22(this.g.validate(), "Invalid curve");
      assert22(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve
          });
          return curve;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: import_hash2.default.sha256,
      gRed: false,
      g: [
        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
      ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: import_hash2.default.sha256,
      gRed: false,
      g: [
        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
      ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: import_hash2.default.sha256,
      gRed: false,
      g: [
        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
      ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: import_hash2.default.sha384,
      gRed: false,
      g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
      ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: import_hash2.default.sha512,
      gRed: false,
      g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
      ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: import_hash2.default.sha256,
      gRed: false,
      g: [
        "9"
      ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      // -121665 * (121666^(-1)) (mod P)
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: import_hash2.default.sha256,
      gRed: false,
      g: [
        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
        // 4/5
        "6666666666666666666666666666666666666666666666666666666666666658"
      ]
    });
    var pre;
    try {
      pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/
      null.crash();
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: import_hash2.default.sha256,
      // Precomputed endomorphism
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: false,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        pre
      ]
    });
  });
  function HmacDRBG(options) {
    if (!(this instanceof HmacDRBG))
      return new HmacDRBG(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = utils_1.toArray(options.entropy, options.entropyEnc || "hex");
    var nonce = utils_1.toArray(options.nonce, options.nonceEnc || "hex");
    var pers = utils_1.toArray(options.pers, options.persEnc || "hex");
    minimalisticAssert(
      entropy.length >= this.minEntropy / 8,
      "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
    );
    this._init(entropy, nonce, pers);
  }
  var hmacDrbg = HmacDRBG;
  HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for (var i = 0; i < this.V.length; i++) {
      this.K[i] = 0;
      this.V[i] = 1;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 281474976710656;
  };
  HmacDRBG.prototype._hmac = function hmac() {
    return new import_hash2.default.hmac(this.hash, this.K);
  };
  HmacDRBG.prototype._update = function update(seed) {
    var kmac = this._hmac().update(this.V).update([0]);
    if (seed)
      kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed)
      return;
    this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
  };
  HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add32, addEnc) {
    if (typeof entropyEnc !== "string") {
      addEnc = add32;
      add32 = entropyEnc;
      entropyEnc = null;
    }
    entropy = utils_1.toArray(entropy, entropyEnc);
    add32 = utils_1.toArray(add32, addEnc);
    minimalisticAssert(
      entropy.length >= this.minEntropy / 8,
      "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
    );
    this._update(entropy.concat(add32 || []));
    this._reseed = 1;
  };
  HmacDRBG.prototype.generate = function generate(len, enc, add32, addEnc) {
    if (this._reseed > this.reseedInterval)
      throw new Error("Reseed is required");
    if (typeof enc !== "string") {
      addEnc = add32;
      add32 = enc;
      enc = null;
    }
    if (add32) {
      add32 = utils_1.toArray(add32, addEnc || "hex");
      this._update(add32);
    }
    var temp = [];
    while (temp.length < len) {
      this.V = this._hmac().update(this.V).digest();
      temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add32);
    this._reseed++;
    return utils_1.encode(res, enc);
  };
  var assert$3 = utils_1$1.assert;
  function KeyPair(ec22, options) {
    this.ec = ec22;
    this.priv = null;
    this.pub = null;
    if (options.priv)
      this._importPrivate(options.priv, options.privEnc);
    if (options.pub)
      this._importPublic(options.pub, options.pubEnc);
  }
  var key = KeyPair;
  KeyPair.fromPublic = function fromPublic(ec22, pub, enc) {
    if (pub instanceof KeyPair)
      return pub;
    return new KeyPair(ec22, {
      pub,
      pubEnc: enc
    });
  };
  KeyPair.fromPrivate = function fromPrivate(ec22, priv, enc) {
    if (priv instanceof KeyPair)
      return priv;
    return new KeyPair(ec22, {
      priv,
      privEnc: enc
    });
  };
  KeyPair.prototype.validate = function validate4() {
    var pub = this.getPublic();
    if (pub.isInfinity())
      return { result: false, reason: "Invalid public key" };
    if (!pub.validate())
      return { result: false, reason: "Public key is not a point" };
    if (!pub.mul(this.ec.curve.n).isInfinity())
      return { result: false, reason: "Public key * N != O" };
    return { result: true, reason: null };
  };
  KeyPair.prototype.getPublic = function getPublic(compact, enc) {
    if (typeof compact === "string") {
      enc = compact;
      compact = null;
    }
    if (!this.pub)
      this.pub = this.ec.g.mul(this.priv);
    if (!enc)
      return this.pub;
    return this.pub.encode(enc, compact);
  };
  KeyPair.prototype.getPrivate = function getPrivate(enc) {
    if (enc === "hex")
      return this.priv.toString(16, 2);
    else
      return this.priv;
  };
  KeyPair.prototype._importPrivate = function _importPrivate(key22, enc) {
    this.priv = new import_bn2.default(key22, enc || 16);
    this.priv = this.priv.umod(this.ec.curve.n);
  };
  KeyPair.prototype._importPublic = function _importPublic(key22, enc) {
    if (key22.x || key22.y) {
      if (this.ec.curve.type === "mont") {
        assert$3(key22.x, "Need x coordinate");
      } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
        assert$3(key22.x && key22.y, "Need both x and y coordinate");
      }
      this.pub = this.ec.curve.point(key22.x, key22.y);
      return;
    }
    this.pub = this.ec.curve.decodePoint(key22, enc);
  };
  KeyPair.prototype.derive = function derive(pub) {
    if (!pub.validate()) {
      assert$3(pub.validate(), "public point not validated");
    }
    return pub.mul(this.priv).getX();
  };
  KeyPair.prototype.sign = function sign(msg, enc, options) {
    return this.ec.sign(msg, this, enc, options);
  };
  KeyPair.prototype.verify = function verify(msg, signature22) {
    return this.ec.verify(msg, signature22, this);
  };
  KeyPair.prototype.inspect = function inspect3() {
    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
  };
  var assert$4 = utils_1$1.assert;
  function Signature(options, enc) {
    if (options instanceof Signature)
      return options;
    if (this._importDER(options, enc))
      return;
    assert$4(options.r && options.s, "Signature without r or s");
    this.r = new import_bn2.default(options.r, 16);
    this.s = new import_bn2.default(options.s, 16);
    if (options.recoveryParam === void 0)
      this.recoveryParam = null;
    else
      this.recoveryParam = options.recoveryParam;
  }
  var signature = Signature;
  function Position() {
    this.place = 0;
  }
  function getLength(buf, p) {
    var initial = buf[p.place++];
    if (!(initial & 128)) {
      return initial;
    }
    var octetLen = initial & 15;
    if (octetLen === 0 || octetLen > 4) {
      return false;
    }
    var val = 0;
    for (var i = 0, off = p.place; i < octetLen; i++, off++) {
      val <<= 8;
      val |= buf[off];
      val >>>= 0;
    }
    if (val <= 127) {
      return false;
    }
    p.place = off;
    return val;
  }
  function rmPadding(buf) {
    var i = 0;
    var len = buf.length - 1;
    while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
      i++;
    }
    if (i === 0) {
      return buf;
    }
    return buf.slice(i);
  }
  Signature.prototype._importDER = function _importDER(data, enc) {
    data = utils_1$1.toArray(data, enc);
    var p = new Position();
    if (data[p.place++] !== 48) {
      return false;
    }
    var len = getLength(data, p);
    if (len === false) {
      return false;
    }
    if (len + p.place !== data.length) {
      return false;
    }
    if (data[p.place++] !== 2) {
      return false;
    }
    var rlen = getLength(data, p);
    if (rlen === false) {
      return false;
    }
    var r22 = data.slice(p.place, rlen + p.place);
    p.place += rlen;
    if (data[p.place++] !== 2) {
      return false;
    }
    var slen = getLength(data, p);
    if (slen === false) {
      return false;
    }
    if (data.length !== slen + p.place) {
      return false;
    }
    var s = data.slice(p.place, slen + p.place);
    if (r22[0] === 0) {
      if (r22[1] & 128) {
        r22 = r22.slice(1);
      } else {
        return false;
      }
    }
    if (s[0] === 0) {
      if (s[1] & 128) {
        s = s.slice(1);
      } else {
        return false;
      }
    }
    this.r = new import_bn2.default(r22);
    this.s = new import_bn2.default(s);
    this.recoveryParam = null;
    return true;
  };
  function constructLength(arr, len) {
    if (len < 128) {
      arr.push(len);
      return;
    }
    var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
    arr.push(octets | 128);
    while (--octets) {
      arr.push(len >>> (octets << 3) & 255);
    }
    arr.push(len);
  }
  Signature.prototype.toDER = function toDER(enc) {
    var r22 = this.r.toArray();
    var s = this.s.toArray();
    if (r22[0] & 128)
      r22 = [0].concat(r22);
    if (s[0] & 128)
      s = [0].concat(s);
    r22 = rmPadding(r22);
    s = rmPadding(s);
    while (!s[0] && !(s[1] & 128)) {
      s = s.slice(1);
    }
    var arr = [2];
    constructLength(arr, r22.length);
    arr = arr.concat(r22);
    arr.push(2);
    constructLength(arr, s.length);
    var backHalf = arr.concat(s);
    var res = [48];
    constructLength(res, backHalf.length);
    res = res.concat(backHalf);
    return utils_1$1.encode(res, enc);
  };
  var rand = (
    /*RicMoo:ethers:require(brorand)*/
    function() {
      throw new Error("unsupported");
    }
  );
  var assert$5 = utils_1$1.assert;
  function EC(options) {
    if (!(this instanceof EC))
      return new EC(options);
    if (typeof options === "string") {
      assert$5(
        Object.prototype.hasOwnProperty.call(curves_1, options),
        "Unknown curve " + options
      );
      options = curves_1[options];
    }
    if (options instanceof curves_1.PresetCurve)
      options = { curve: options };
    this.curve = options.curve.curve;
    this.n = this.curve.n;
    this.nh = this.n.ushrn(1);
    this.g = this.curve.g;
    this.g = options.curve.g;
    this.g.precompute(options.curve.n.bitLength() + 1);
    this.hash = options.hash || options.curve.hash;
  }
  var ec = EC;
  EC.prototype.keyPair = function keyPair(options) {
    return new key(this, options);
  };
  EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
    return key.fromPrivate(this, priv, enc);
  };
  EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
    return key.fromPublic(this, pub, enc);
  };
  EC.prototype.genKeyPair = function genKeyPair(options) {
    if (!options)
      options = {};
    var drbg = new hmacDrbg({
      hash: this.hash,
      pers: options.pers,
      persEnc: options.persEnc || "utf8",
      entropy: options.entropy || rand(this.hash.hmacStrength),
      entropyEnc: options.entropy && options.entropyEnc || "utf8",
      nonce: this.n.toArray()
    });
    var bytes = this.n.byteLength();
    var ns2 = this.n.sub(new import_bn2.default(2));
    for (; ; ) {
      var priv = new import_bn2.default(drbg.generate(bytes));
      if (priv.cmp(ns2) > 0)
        continue;
      priv.iaddn(1);
      return this.keyFromPrivate(priv);
    }
  };
  EC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {
    var delta = msg.byteLength() * 8 - this.n.bitLength();
    if (delta > 0)
      msg = msg.ushrn(delta);
    if (!truncOnly && msg.cmp(this.n) >= 0)
      return msg.sub(this.n);
    else
      return msg;
  };
  EC.prototype.sign = function sign2(msg, key22, enc, options) {
    if (typeof enc === "object") {
      options = enc;
      enc = null;
    }
    if (!options)
      options = {};
    key22 = this.keyFromPrivate(key22, enc);
    msg = this._truncateToN(new import_bn2.default(msg, 16));
    var bytes = this.n.byteLength();
    var bkey = key22.getPrivate().toArray("be", bytes);
    var nonce = msg.toArray("be", bytes);
    var drbg = new hmacDrbg({
      hash: this.hash,
      entropy: bkey,
      nonce,
      pers: options.pers,
      persEnc: options.persEnc || "utf8"
    });
    var ns1 = this.n.sub(new import_bn2.default(1));
    for (var iter = 0; ; iter++) {
      var k = options.k ? options.k(iter) : new import_bn2.default(drbg.generate(this.n.byteLength()));
      k = this._truncateToN(k, true);
      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
        continue;
      var kp = this.g.mul(k);
      if (kp.isInfinity())
        continue;
      var kpX = kp.getX();
      var r22 = kpX.umod(this.n);
      if (r22.cmpn(0) === 0)
        continue;
      var s = k.invm(this.n).mul(r22.mul(key22.getPrivate()).iadd(msg));
      s = s.umod(this.n);
      if (s.cmpn(0) === 0)
        continue;
      var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r22) !== 0 ? 2 : 0);
      if (options.canonical && s.cmp(this.nh) > 0) {
        s = this.n.sub(s);
        recoveryParam ^= 1;
      }
      return new signature({ r: r22, s, recoveryParam });
    }
  };
  EC.prototype.verify = function verify2(msg, signature$1, key22, enc) {
    msg = this._truncateToN(new import_bn2.default(msg, 16));
    key22 = this.keyFromPublic(key22, enc);
    signature$1 = new signature(signature$1, "hex");
    var r22 = signature$1.r;
    var s = signature$1.s;
    if (r22.cmpn(1) < 0 || r22.cmp(this.n) >= 0)
      return false;
    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
      return false;
    var sinv = s.invm(this.n);
    var u1 = sinv.mul(msg).umod(this.n);
    var u2 = sinv.mul(r22).umod(this.n);
    var p;
    if (!this.curve._maxwellTrick) {
      p = this.g.mulAdd(u1, key22.getPublic(), u2);
      if (p.isInfinity())
        return false;
      return p.getX().umod(this.n).cmp(r22) === 0;
    }
    p = this.g.jmulAdd(u1, key22.getPublic(), u2);
    if (p.isInfinity())
      return false;
    return p.eqXToP(r22);
  };
  EC.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
    assert$5((3 & j) === j, "The recovery param is more than two bits");
    signature$1 = new signature(signature$1, enc);
    var n = this.n;
    var e = new import_bn2.default(msg);
    var r22 = signature$1.r;
    var s = signature$1.s;
    var isYOdd = j & 1;
    var isSecondKey = j >> 1;
    if (r22.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
      throw new Error("Unable to find sencond key candinate");
    if (isSecondKey)
      r22 = this.curve.pointFromX(r22.add(this.curve.n), isYOdd);
    else
      r22 = this.curve.pointFromX(r22, isYOdd);
    var rInv = signature$1.r.invm(n);
    var s1 = n.sub(e).mul(rInv).umod(n);
    var s2 = s.mul(rInv).umod(n);
    return this.g.mulAdd(s1, r22, s2);
  };
  EC.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
    signature$1 = new signature(signature$1, enc);
    if (signature$1.recoveryParam !== null)
      return signature$1.recoveryParam;
    for (var i = 0; i < 4; i++) {
      var Qprime;
      try {
        Qprime = this.recoverPubKey(e, signature$1, i);
      } catch (e2) {
        continue;
      }
      if (Qprime.eq(Q))
        return i;
    }
    throw new Error("Unable to find valid recovery factor");
  };
  var elliptic_1 = createCommonjsModule(function(module, exports) {
    "use strict";
    var elliptic = exports;
    elliptic.version = /*RicMoo:ethers*/
    { version: "6.5.4" }.version;
    elliptic.utils = utils_1$1;
    elliptic.rand = /*RicMoo:ethers:require(brorand)*/
    function() {
      throw new Error("unsupported");
    };
    elliptic.curve = curve_1;
    elliptic.curves = curves_1;
    elliptic.ec = ec;
    elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/
    null;
  });
  var EC$1 = elliptic_1.ec;
  init_define_chainIDList();
  init_define_extraRpcs();
  var version14 = "signing-key/5.7.0";
  var logger13 = new Logger(version14);
  var _curve = null;
  function getCurve() {
    if (!_curve) {
      _curve = new EC$1("secp256k1");
    }
    return _curve;
  }
  var SigningKey = class {
    constructor(privateKey) {
      defineReadOnly(this, "curve", "secp256k1");
      defineReadOnly(this, "privateKey", hexlify(privateKey));
      if (hexDataLength(this.privateKey) !== 32) {
        logger13.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
      }
      const keyPair22 = getCurve().keyFromPrivate(arrayify(this.privateKey));
      defineReadOnly(this, "publicKey", "0x" + keyPair22.getPublic(false, "hex"));
      defineReadOnly(this, "compressedPublicKey", "0x" + keyPair22.getPublic(true, "hex"));
      defineReadOnly(this, "_isSigningKey", true);
    }
    _addPoint(other) {
      const p0 = getCurve().keyFromPublic(arrayify(this.publicKey));
      const p1 = getCurve().keyFromPublic(arrayify(other));
      return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
      const keyPair22 = getCurve().keyFromPrivate(arrayify(this.privateKey));
      const digestBytes = arrayify(digest);
      if (digestBytes.length !== 32) {
        logger13.throwArgumentError("bad digest length", "digest", digest);
      }
      const signature22 = keyPair22.sign(digestBytes, { canonical: true });
      return splitSignature({
        recoveryParam: signature22.recoveryParam,
        r: hexZeroPad("0x" + signature22.r.toString(16), 32),
        s: hexZeroPad("0x" + signature22.s.toString(16), 32)
      });
    }
    computeSharedSecret(otherKey) {
      const keyPair22 = getCurve().keyFromPrivate(arrayify(this.privateKey));
      const otherKeyPair = getCurve().keyFromPublic(arrayify(computePublicKey(otherKey)));
      return hexZeroPad("0x" + keyPair22.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
      return !!(value && value._isSigningKey);
    }
  };
  function recoverPublicKey(digest, signature22) {
    const sig = splitSignature(signature22);
    const rs = { r: arrayify(sig.r), s: arrayify(sig.s) };
    return "0x" + getCurve().recoverPubKey(arrayify(digest), rs, sig.recoveryParam).encode("hex", false);
  }
  function computePublicKey(key22, compressed) {
    const bytes = arrayify(key22);
    if (bytes.length === 32) {
      const signingKey = new SigningKey(bytes);
      if (compressed) {
        return "0x" + getCurve().keyFromPrivate(bytes).getPublic(true, "hex");
      }
      return signingKey.publicKey;
    } else if (bytes.length === 33) {
      if (compressed) {
        return hexlify(bytes);
      }
      return "0x" + getCurve().keyFromPublic(bytes).getPublic(false, "hex");
    } else if (bytes.length === 65) {
      if (!compressed) {
        return hexlify(bytes);
      }
      return "0x" + getCurve().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return logger13.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var version15 = "transactions/5.7.0";
  var logger14 = new Logger(version15);
  var TransactionTypes;
  (function(TransactionTypes22) {
    TransactionTypes22[TransactionTypes22["legacy"] = 0] = "legacy";
    TransactionTypes22[TransactionTypes22["eip2930"] = 1] = "eip2930";
    TransactionTypes22[TransactionTypes22["eip1559"] = 2] = "eip1559";
  })(TransactionTypes || (TransactionTypes = {}));
  function handleAddress(value) {
    if (value === "0x") {
      return null;
    }
    return getAddress(value);
  }
  function handleNumber(value) {
    if (value === "0x") {
      return Zero;
    }
    return BigNumber.from(value);
  }
  function computeAddress(key22) {
    const publicKey = computePublicKey(key22);
    return getAddress(hexDataSlice(keccak256(hexDataSlice(publicKey, 1)), 12));
  }
  function recoverAddress(digest, signature22) {
    return computeAddress(recoverPublicKey(arrayify(digest), signature22));
  }
  function formatNumber(value, name) {
    const result = stripZeros(BigNumber.from(value).toHexString());
    if (result.length > 32) {
      logger14.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
    }
    return result;
  }
  function accessSetify(addr, storageKeys) {
    return {
      address: getAddress(addr),
      storageKeys: (storageKeys || []).map((storageKey, index2) => {
        if (hexDataLength(storageKey) !== 32) {
          logger14.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index2}]`, storageKey);
        }
        return storageKey.toLowerCase();
      })
    };
  }
  function accessListify(value) {
    if (Array.isArray(value)) {
      return value.map((set, index2) => {
        if (Array.isArray(set)) {
          if (set.length > 2) {
            logger14.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index2}]`, set);
          }
          return accessSetify(set[0], set[1]);
        }
        return accessSetify(set.address, set.storageKeys);
      });
    }
    const result = Object.keys(value).map((addr) => {
      const storageKeys = value[addr].reduce((accum, storageKey) => {
        accum[storageKey] = true;
        return accum;
      }, {});
      return accessSetify(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b) => a.address.localeCompare(b.address));
    return result;
  }
  function formatAccessList(value) {
    return accessListify(value).map((set) => [set.address, set.storageKeys]);
  }
  function _serializeEip1559(transaction, signature22) {
    if (transaction.gasPrice != null) {
      const gasPrice = BigNumber.from(transaction.gasPrice);
      const maxFeePerGas = BigNumber.from(transaction.maxFeePerGas || 0);
      if (!gasPrice.eq(maxFeePerGas)) {
        logger14.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
          gasPrice,
          maxFeePerGas
        });
      }
    }
    const fields = [
      formatNumber(transaction.chainId || 0, "chainId"),
      formatNumber(transaction.nonce || 0, "nonce"),
      formatNumber(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
      formatNumber(transaction.maxFeePerGas || 0, "maxFeePerGas"),
      formatNumber(transaction.gasLimit || 0, "gasLimit"),
      transaction.to != null ? getAddress(transaction.to) : "0x",
      formatNumber(transaction.value || 0, "value"),
      transaction.data || "0x",
      formatAccessList(transaction.accessList || [])
    ];
    if (signature22) {
      const sig = splitSignature(signature22);
      fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
      fields.push(stripZeros(sig.r));
      fields.push(stripZeros(sig.s));
    }
    return hexConcat(["0x02", encode2(fields)]);
  }
  function _serializeEip2930(transaction, signature22) {
    const fields = [
      formatNumber(transaction.chainId || 0, "chainId"),
      formatNumber(transaction.nonce || 0, "nonce"),
      formatNumber(transaction.gasPrice || 0, "gasPrice"),
      formatNumber(transaction.gasLimit || 0, "gasLimit"),
      transaction.to != null ? getAddress(transaction.to) : "0x",
      formatNumber(transaction.value || 0, "value"),
      transaction.data || "0x",
      formatAccessList(transaction.accessList || [])
    ];
    if (signature22) {
      const sig = splitSignature(signature22);
      fields.push(formatNumber(sig.recoveryParam, "recoveryParam"));
      fields.push(stripZeros(sig.r));
      fields.push(stripZeros(sig.s));
    }
    return hexConcat(["0x01", encode2(fields)]);
  }
  function _parseEipSignature(tx, fields, serialize3) {
    try {
      const recid = handleNumber(fields[0]).toNumber();
      if (recid !== 0 && recid !== 1) {
        throw new Error("bad recid");
      }
      tx.v = recid;
    } catch (error) {
      logger14.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = hexZeroPad(fields[1], 32);
    tx.s = hexZeroPad(fields[2], 32);
    try {
      const digest = keccak256(serialize3(tx));
      tx.from = recoverAddress(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });
    } catch (error) {
    }
  }
  function _parseEip1559(payload) {
    const transaction = decode2(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) {
      logger14.throwArgumentError("invalid component count for transaction type: 2", "payload", hexlify(payload));
    }
    const maxPriorityFeePerGas = handleNumber(transaction[2]);
    const maxFeePerGas = handleNumber(transaction[3]);
    const tx = {
      type: 2,
      chainId: handleNumber(transaction[0]).toNumber(),
      nonce: handleNumber(transaction[1]).toNumber(),
      maxPriorityFeePerGas,
      maxFeePerGas,
      gasPrice: null,
      gasLimit: handleNumber(transaction[4]),
      to: handleAddress(transaction[5]),
      value: handleNumber(transaction[6]),
      data: transaction[7],
      accessList: accessListify(transaction[8])
    };
    if (transaction.length === 9) {
      return tx;
    }
    tx.hash = keccak256(payload);
    _parseEipSignature(tx, transaction.slice(9), _serializeEip1559);
    return tx;
  }
  function _parseEip2930(payload) {
    const transaction = decode2(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) {
      logger14.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify(payload));
    }
    const tx = {
      type: 1,
      chainId: handleNumber(transaction[0]).toNumber(),
      nonce: handleNumber(transaction[1]).toNumber(),
      gasPrice: handleNumber(transaction[2]),
      gasLimit: handleNumber(transaction[3]),
      to: handleAddress(transaction[4]),
      value: handleNumber(transaction[5]),
      data: transaction[6],
      accessList: accessListify(transaction[7])
    };
    if (transaction.length === 8) {
      return tx;
    }
    tx.hash = keccak256(payload);
    _parseEipSignature(tx, transaction.slice(8), _serializeEip2930);
    return tx;
  }
  function _parse(rawTransaction) {
    const transaction = decode2(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) {
      logger14.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    }
    const tx = {
      nonce: handleNumber(transaction[0]).toNumber(),
      gasPrice: handleNumber(transaction[1]),
      gasLimit: handleNumber(transaction[2]),
      to: handleAddress(transaction[3]),
      value: handleNumber(transaction[4]),
      data: transaction[5],
      chainId: 0
    };
    if (transaction.length === 6) {
      return tx;
    }
    try {
      tx.v = BigNumber.from(transaction[6]).toNumber();
    } catch (error) {
      return tx;
    }
    tx.r = hexZeroPad(transaction[7], 32);
    tx.s = hexZeroPad(transaction[8], 32);
    if (BigNumber.from(tx.r).isZero() && BigNumber.from(tx.s).isZero()) {
      tx.chainId = tx.v;
      tx.v = 0;
    } else {
      tx.chainId = Math.floor((tx.v - 35) / 2);
      if (tx.chainId < 0) {
        tx.chainId = 0;
      }
      let recoveryParam = tx.v - 27;
      const raw = transaction.slice(0, 6);
      if (tx.chainId !== 0) {
        raw.push(hexlify(tx.chainId));
        raw.push("0x");
        raw.push("0x");
        recoveryParam -= tx.chainId * 2 + 8;
      }
      const digest = keccak256(encode2(raw));
      try {
        tx.from = recoverAddress(digest, { r: hexlify(tx.r), s: hexlify(tx.s), recoveryParam });
      } catch (error) {
      }
      tx.hash = keccak256(rawTransaction);
    }
    tx.type = null;
    return tx;
  }
  function parse(rawTransaction) {
    const payload = arrayify(rawTransaction);
    if (payload[0] > 127) {
      return _parse(payload);
    }
    switch (payload[0]) {
      case 1:
        return _parseEip2930(payload);
      case 2:
        return _parseEip1559(payload);
      default:
        break;
    }
    return logger14.throwError(`unsupported transaction type: ${payload[0]}`, Logger.errors.UNSUPPORTED_OPERATION, {
      operation: "parseTransaction",
      transactionType: payload[0]
    });
  }
  var logger15 = new Logger(version13);
  var Formatter = class _Formatter {
    constructor() {
      this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
      const formats = {};
      const address = this.address.bind(this);
      const bigNumber = this.bigNumber.bind(this);
      const blockTag = this.blockTag.bind(this);
      const data = this.data.bind(this);
      const hash3 = this.hash.bind(this);
      const hex = this.hex.bind(this);
      const number = this.number.bind(this);
      const type = this.type.bind(this);
      const strictData = (v) => {
        return this.data(v, true);
      };
      formats.transaction = {
        hash: hash3,
        type,
        accessList: _Formatter.allowNull(this.accessList.bind(this), null),
        blockHash: _Formatter.allowNull(hash3, null),
        blockNumber: _Formatter.allowNull(number, null),
        transactionIndex: _Formatter.allowNull(number, null),
        confirmations: _Formatter.allowNull(number, null),
        from: address,
        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
        // must be set
        gasPrice: _Formatter.allowNull(bigNumber),
        maxPriorityFeePerGas: _Formatter.allowNull(bigNumber),
        maxFeePerGas: _Formatter.allowNull(bigNumber),
        gasLimit: bigNumber,
        to: _Formatter.allowNull(address, null),
        value: bigNumber,
        nonce: number,
        data,
        r: _Formatter.allowNull(this.uint256),
        s: _Formatter.allowNull(this.uint256),
        v: _Formatter.allowNull(number),
        creates: _Formatter.allowNull(address, null),
        raw: _Formatter.allowNull(data)
      };
      formats.transactionRequest = {
        from: _Formatter.allowNull(address),
        nonce: _Formatter.allowNull(number),
        gasLimit: _Formatter.allowNull(bigNumber),
        gasPrice: _Formatter.allowNull(bigNumber),
        maxPriorityFeePerGas: _Formatter.allowNull(bigNumber),
        maxFeePerGas: _Formatter.allowNull(bigNumber),
        to: _Formatter.allowNull(address),
        value: _Formatter.allowNull(bigNumber),
        data: _Formatter.allowNull(strictData),
        type: _Formatter.allowNull(number),
        accessList: _Formatter.allowNull(this.accessList.bind(this), null)
      };
      formats.receiptLog = {
        transactionIndex: number,
        blockNumber: number,
        transactionHash: hash3,
        address,
        topics: _Formatter.arrayOf(hash3),
        data,
        logIndex: number,
        blockHash: hash3
      };
      formats.receipt = {
        to: _Formatter.allowNull(this.address, null),
        from: _Formatter.allowNull(this.address, null),
        contractAddress: _Formatter.allowNull(address, null),
        transactionIndex: number,
        // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
        root: _Formatter.allowNull(hex),
        gasUsed: bigNumber,
        logsBloom: _Formatter.allowNull(data),
        blockHash: hash3,
        transactionHash: hash3,
        logs: _Formatter.arrayOf(this.receiptLog.bind(this)),
        blockNumber: number,
        confirmations: _Formatter.allowNull(number, null),
        cumulativeGasUsed: bigNumber,
        effectiveGasPrice: _Formatter.allowNull(bigNumber),
        status: _Formatter.allowNull(number),
        type
      };
      formats.block = {
        hash: _Formatter.allowNull(hash3),
        parentHash: hash3,
        number,
        timestamp: number,
        nonce: _Formatter.allowNull(hex),
        difficulty: this.difficulty.bind(this),
        gasLimit: bigNumber,
        gasUsed: bigNumber,
        miner: _Formatter.allowNull(address),
        extraData: data,
        transactions: _Formatter.allowNull(_Formatter.arrayOf(hash3)),
        baseFeePerGas: _Formatter.allowNull(bigNumber)
      };
      formats.blockWithTransactions = shallowCopy(formats.block);
      formats.blockWithTransactions.transactions = _Formatter.allowNull(_Formatter.arrayOf(this.transactionResponse.bind(this)));
      formats.filter = {
        fromBlock: _Formatter.allowNull(blockTag, void 0),
        toBlock: _Formatter.allowNull(blockTag, void 0),
        blockHash: _Formatter.allowNull(hash3, void 0),
        address: _Formatter.allowNull(address, void 0),
        topics: _Formatter.allowNull(this.topics.bind(this), void 0)
      };
      formats.filterLog = {
        blockNumber: _Formatter.allowNull(number),
        blockHash: _Formatter.allowNull(hash3),
        transactionIndex: number,
        removed: _Formatter.allowNull(this.boolean.bind(this)),
        address,
        data: _Formatter.allowFalsish(data, "0x"),
        topics: _Formatter.arrayOf(hash3),
        transactionHash: hash3,
        logIndex: number
      };
      return formats;
    }
    accessList(accessList) {
      return accessListify(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
      if (number === "0x") {
        return 0;
      }
      return BigNumber.from(number).toNumber();
    }
    type(number) {
      if (number === "0x" || number == null) {
        return 0;
      }
      return BigNumber.from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
      return BigNumber.from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
      if (typeof value === "boolean") {
        return value;
      }
      if (typeof value === "string") {
        value = value.toLowerCase();
        if (value === "true") {
          return true;
        }
        if (value === "false") {
          return false;
        }
      }
      throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
      if (typeof value === "string") {
        if (!strict && value.substring(0, 2) !== "0x") {
          value = "0x" + value;
        }
        if (isHexString(value)) {
          return value.toLowerCase();
        }
      }
      return logger15.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
      const result = this.hex(value, strict);
      if (result.length % 2 !== 0) {
        throw new Error("invalid data; odd-length - " + value);
      }
      return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
      return getAddress(value);
    }
    callAddress(value) {
      if (!isHexString(value, 32)) {
        return null;
      }
      const address = getAddress(hexDataSlice(value, 12));
      return address === AddressZero ? null : address;
    }
    contractAddress(value) {
      return getContractAddress(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
      if (blockTag == null) {
        return "latest";
      }
      if (blockTag === "earliest") {
        return "0x0";
      }
      switch (blockTag) {
        case "earliest":
          return "0x0";
        case "latest":
        case "pending":
        case "safe":
        case "finalized":
          return blockTag;
      }
      if (typeof blockTag === "number" || isHexString(blockTag)) {
        return hexValue(blockTag);
      }
      throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
      const result = this.hex(value, strict);
      if (hexDataLength(result) !== 32) {
        return logger15.throwArgumentError("invalid hash", "value", value);
      }
      return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
      if (value == null) {
        return null;
      }
      const v = BigNumber.from(value);
      try {
        return v.toNumber();
      } catch (error) {
      }
      return null;
    }
    uint256(value) {
      if (!isHexString(value)) {
        throw new Error("invalid uint256");
      }
      return hexZeroPad(value, 32);
    }
    _block(value, format) {
      if (value.author != null && value.miner == null) {
        value.miner = value.author;
      }
      const difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
      const result = _Formatter.check(format, value);
      result._difficulty = difficulty == null ? null : BigNumber.from(difficulty);
      return result;
    }
    block(value) {
      return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
      return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
      return _Formatter.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
      if (transaction.gas != null && transaction.gasLimit == null) {
        transaction.gasLimit = transaction.gas;
      }
      if (transaction.to && BigNumber.from(transaction.to).isZero()) {
        transaction.to = "0x0000000000000000000000000000000000000000";
      }
      if (transaction.input != null && transaction.data == null) {
        transaction.data = transaction.input;
      }
      if (transaction.to == null && transaction.creates == null) {
        transaction.creates = this.contractAddress(transaction);
      }
      if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
        transaction.accessList = [];
      }
      const result = _Formatter.check(this.formats.transaction, transaction);
      if (transaction.chainId != null) {
        let chainId = transaction.chainId;
        if (isHexString(chainId)) {
          chainId = BigNumber.from(chainId).toNumber();
        }
        result.chainId = chainId;
      } else {
        let chainId = transaction.networkId;
        if (chainId == null && result.v == null) {
          chainId = transaction.chainId;
        }
        if (isHexString(chainId)) {
          chainId = BigNumber.from(chainId).toNumber();
        }
        if (typeof chainId !== "number" && result.v != null) {
          chainId = (result.v - 35) / 2;
          if (chainId < 0) {
            chainId = 0;
          }
          chainId = parseInt(chainId);
        }
        if (typeof chainId !== "number") {
          chainId = 0;
        }
        result.chainId = chainId;
      }
      if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
        result.blockHash = null;
      }
      return result;
    }
    transaction(value) {
      return parse(value);
    }
    receiptLog(value) {
      return _Formatter.check(this.formats.receiptLog, value);
    }
    receipt(value) {
      const result = _Formatter.check(this.formats.receipt, value);
      if (result.root != null) {
        if (result.root.length <= 4) {
          const value2 = BigNumber.from(result.root).toNumber();
          if (value2 === 0 || value2 === 1) {
            if (result.status != null && result.status !== value2) {
              logger15.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status });
            }
            result.status = value2;
            delete result.root;
          } else {
            logger15.throwArgumentError("invalid alt-root-status", "value.root", result.root);
          }
        } else if (result.root.length !== 66) {
          logger15.throwArgumentError("invalid root hash", "value.root", result.root);
        }
      }
      if (result.status != null) {
        result.byzantium = true;
      }
      return result;
    }
    topics(value) {
      if (Array.isArray(value)) {
        return value.map((v) => this.topics(v));
      } else if (value != null) {
        return this.hash(value, true);
      }
      return null;
    }
    filter(value) {
      return _Formatter.check(this.formats.filter, value);
    }
    filterLog(value) {
      return _Formatter.check(this.formats.filterLog, value);
    }
    static check(format, object) {
      const result = {};
      for (const key22 in format) {
        try {
          const value = format[key22](object[key22]);
          if (value !== void 0) {
            result[key22] = value;
          }
        } catch (error) {
          error.checkKey = key22;
          error.checkValue = object[key22];
          throw error;
        }
      }
      return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
      return function(value) {
        if (value == null) {
          return nullValue;
        }
        return format(value);
      };
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
      return function(value) {
        if (!value) {
          return replaceValue;
        }
        return format(value);
      };
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
      return function(array) {
        if (!Array.isArray(array)) {
          throw new Error("not an array");
        }
        const result = [];
        array.forEach(function(value) {
          result.push(format(value));
        });
        return result;
      };
    }
  };
  var __awaiter6 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger16 = new Logger(version13);
  var MAX_CCIP_REDIRECTS = 10;
  function checkTopic(topic) {
    if (topic == null) {
      return "null";
    }
    if (hexDataLength(topic) !== 32) {
      logger16.throwArgumentError("invalid topic", "topic", topic);
    }
    return topic.toLowerCase();
  }
  function serializeTopics(topics) {
    topics = topics.slice();
    while (topics.length > 0 && topics[topics.length - 1] == null) {
      topics.pop();
    }
    return topics.map((topic) => {
      if (Array.isArray(topic)) {
        const unique = {};
        topic.forEach((topic2) => {
          unique[checkTopic(topic2)] = true;
        });
        const sorted = Object.keys(unique);
        sorted.sort();
        return sorted.join("|");
      } else {
        return checkTopic(topic);
      }
    }).join("&");
  }
  function deserializeTopics(data) {
    if (data === "") {
      return [];
    }
    return data.split(/&/g).map((topic) => {
      if (topic === "") {
        return [];
      }
      const comps = topic.split("|").map((topic2) => {
        return topic2 === "null" ? null : topic2;
      });
      return comps.length === 1 ? comps[0] : comps;
    });
  }
  function getEventTag(eventName) {
    if (typeof eventName === "string") {
      eventName = eventName.toLowerCase();
      if (hexDataLength(eventName) === 32) {
        return "tx:" + eventName;
      }
      if (eventName.indexOf(":") === -1) {
        return eventName;
      }
    } else if (Array.isArray(eventName)) {
      return "filter:*:" + serializeTopics(eventName);
    } else if (ForkEvent.isForkEvent(eventName)) {
      logger16.warn("not implemented");
      throw new Error("not implemented");
    } else if (eventName && typeof eventName === "object") {
      return "filter:" + (eventName.address || "*") + ":" + serializeTopics(eventName.topics || []);
    }
    throw new Error("invalid event - " + eventName);
  }
  function getTime() {
    return (/* @__PURE__ */ new Date()).getTime();
  }
  function stall(duration) {
    return new Promise((resolve) => {
      setTimeout(resolve, duration);
    });
  }
  var PollableEvents = ["block", "network", "pending", "poll"];
  var Event = class {
    constructor(tag, listener, once) {
      defineReadOnly(this, "tag", tag);
      defineReadOnly(this, "listener", listener);
      defineReadOnly(this, "once", once);
      this._lastBlockNumber = -2;
      this._inflight = false;
    }
    get event() {
      switch (this.type) {
        case "tx":
          return this.hash;
        case "filter":
          return this.filter;
      }
      return this.tag;
    }
    get type() {
      return this.tag.split(":")[0];
    }
    get hash() {
      const comps = this.tag.split(":");
      if (comps[0] !== "tx") {
        return null;
      }
      return comps[1];
    }
    get filter() {
      const comps = this.tag.split(":");
      if (comps[0] !== "filter") {
        return null;
      }
      const address = comps[1];
      const topics = deserializeTopics(comps[2]);
      const filter2 = {};
      if (topics.length > 0) {
        filter2.topics = topics;
      }
      if (address && address !== "*") {
        filter2.address = address;
      }
      return filter2;
    }
    pollable() {
      return this.tag.indexOf(":") >= 0 || PollableEvents.indexOf(this.tag) >= 0;
    }
  };
  var coinInfos = {
    "0": { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" },
    "2": { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" },
    "3": { symbol: "doge", p2pkh: 30, p2sh: 22 },
    "60": { symbol: "eth", ilk: "eth" },
    "61": { symbol: "etc", ilk: "eth" },
    "700": { symbol: "xdai", ilk: "eth" }
  };
  function bytes32ify(value) {
    return hexZeroPad(BigNumber.from(value).toHexString(), 32);
  }
  function base58Encode(data) {
    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));
  }
  var matcherIpfs = new RegExp("^(ipfs)://(.*)$", "i");
  var matchers = [
    new RegExp("^(https)://(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    matcherIpfs,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
  ];
  function _parseString(result, start) {
    try {
      return toUtf8String(_parseBytes(result, start));
    } catch (error) {
    }
    return null;
  }
  function _parseBytes(result, start) {
    if (result === "0x") {
      return null;
    }
    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();
    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();
    return hexDataSlice(result, offset + 32, offset + 32 + length);
  }
  function getIpfsLink(link) {
    if (link.match(/^ipfs:\/\/ipfs\//i)) {
      link = link.substring(12);
    } else if (link.match(/^ipfs:\/\//i)) {
      link = link.substring(7);
    } else {
      logger16.throwArgumentError("unsupported IPFS format", "link", link);
    }
    return `https://gateway.ipfs.io/ipfs/${link}`;
  }
  function numPad(value) {
    const result = arrayify(value);
    if (result.length > 32) {
      throw new Error("internal; should not happen");
    }
    const padded = new Uint8Array(32);
    padded.set(result, 32 - result.length);
    return padded;
  }
  function bytesPad(value) {
    if (value.length % 32 === 0) {
      return value;
    }
    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);
    result.set(value);
    return result;
  }
  function encodeBytes(datas) {
    const result = [];
    let byteCount = 0;
    for (let i = 0; i < datas.length; i++) {
      result.push(null);
      byteCount += 32;
    }
    for (let i = 0; i < datas.length; i++) {
      const data = arrayify(datas[i]);
      result[i] = numPad(byteCount);
      result.push(numPad(data.length));
      result.push(bytesPad(data));
      byteCount += 32 + Math.ceil(data.length / 32) * 32;
    }
    return hexConcat(result);
  }
  var Resolver = class {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress) {
      defineReadOnly(this, "provider", provider);
      defineReadOnly(this, "name", name);
      defineReadOnly(this, "address", provider.formatter.address(address));
      defineReadOnly(this, "_resolvedAddress", resolvedAddress);
    }
    supportsWildcard() {
      if (!this._supportsEip2544) {
        this._supportsEip2544 = this.provider.call({
          to: this.address,
          data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
        }).then((result) => {
          return BigNumber.from(result).eq(1);
        }).catch((error) => {
          if (error.code === Logger.errors.CALL_EXCEPTION) {
            return false;
          }
          this._supportsEip2544 = null;
          throw error;
        });
      }
      return this._supportsEip2544;
    }
    _fetch(selector, parameters) {
      return __awaiter6(this, void 0, void 0, function* () {
        const tx = {
          to: this.address,
          ccipReadEnabled: true,
          data: hexConcat([selector, namehash(this.name), parameters || "0x"])
        };
        let parseBytes = false;
        if (yield this.supportsWildcard()) {
          parseBytes = true;
          tx.data = hexConcat(["0x9061b923", encodeBytes([dnsEncode(this.name), tx.data])]);
        }
        try {
          let result = yield this.provider.call(tx);
          if (arrayify(result).length % 32 === 4) {
            logger16.throwError("resolver threw error", Logger.errors.CALL_EXCEPTION, {
              transaction: tx,
              data: result
            });
          }
          if (parseBytes) {
            result = _parseBytes(result, 0);
          }
          return result;
        } catch (error) {
          if (error.code === Logger.errors.CALL_EXCEPTION) {
            return null;
          }
          throw error;
        }
      });
    }
    _fetchBytes(selector, parameters) {
      return __awaiter6(this, void 0, void 0, function* () {
        const result = yield this._fetch(selector, parameters);
        if (result != null) {
          return _parseBytes(result, 0);
        }
        return null;
      });
    }
    _getAddress(coinType, hexBytes) {
      const coinInfo = coinInfos[String(coinType)];
      if (coinInfo == null) {
        logger16.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {
          operation: `getAddress(${coinType})`
        });
      }
      if (coinInfo.ilk === "eth") {
        return this.provider.formatter.address(hexBytes);
      }
      const bytes = arrayify(hexBytes);
      if (coinInfo.p2pkh != null) {
        const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
        if (p2pkh) {
          const length = parseInt(p2pkh[1], 16);
          if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
            return base58Encode(concat([[coinInfo.p2pkh], "0x" + p2pkh[2]]));
          }
        }
      }
      if (coinInfo.p2sh != null) {
        const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
        if (p2sh) {
          const length = parseInt(p2sh[1], 16);
          if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {
            return base58Encode(concat([[coinInfo.p2sh], "0x" + p2sh[2]]));
          }
        }
      }
      if (coinInfo.prefix != null) {
        const length = bytes[1];
        let version172 = bytes[0];
        if (version172 === 0) {
          if (length !== 20 && length !== 32) {
            version172 = -1;
          }
        } else {
          version172 = -1;
        }
        if (version172 >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
          const words2 = import_bech32.default.toWords(bytes.slice(2));
          words2.unshift(version172);
          return import_bech32.default.encode(coinInfo.prefix, words2);
        }
      }
      return null;
    }
    getAddress(coinType) {
      return __awaiter6(this, void 0, void 0, function* () {
        if (coinType == null) {
          coinType = 60;
        }
        if (coinType === 60) {
          try {
            const result = yield this._fetch("0x3b3b57de");
            if (result === "0x" || result === HashZero) {
              return null;
            }
            return this.provider.formatter.callAddress(result);
          } catch (error) {
            if (error.code === Logger.errors.CALL_EXCEPTION) {
              return null;
            }
            throw error;
          }
        }
        const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify(coinType));
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        const address = this._getAddress(coinType, hexBytes);
        if (address == null) {
          logger16.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {
            operation: `getAddress(${coinType})`,
            coinType,
            data: hexBytes
          });
        }
        return address;
      });
    }
    getAvatar() {
      return __awaiter6(this, void 0, void 0, function* () {
        const linkage = [{ type: "name", content: this.name }];
        try {
          const avatar = yield this.getText("avatar");
          if (avatar == null) {
            return null;
          }
          for (let i = 0; i < matchers.length; i++) {
            const match = avatar.match(matchers[i]);
            if (match == null) {
              continue;
            }
            const scheme = match[1].toLowerCase();
            switch (scheme) {
              case "https":
                linkage.push({ type: "url", content: avatar });
                return { linkage, url: avatar };
              case "data":
                linkage.push({ type: "data", content: avatar });
                return { linkage, url: avatar };
              case "ipfs":
                linkage.push({ type: "ipfs", content: avatar });
                return { linkage, url: getIpfsLink(avatar) };
              case "erc721":
              case "erc1155": {
                const selector = scheme === "erc721" ? "0xc87b56dd" : "0x0e89341c";
                linkage.push({ type: scheme, content: avatar });
                const owner = this._resolvedAddress || (yield this.getAddress());
                const comps = (match[2] || "").split("/");
                if (comps.length !== 2) {
                  return null;
                }
                const addr = yield this.provider.formatter.address(comps[0]);
                const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);
                if (scheme === "erc721") {
                  const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({
                    to: addr,
                    data: hexConcat(["0x6352211e", tokenId])
                  }));
                  if (owner !== tokenOwner) {
                    return null;
                  }
                  linkage.push({ type: "owner", content: tokenOwner });
                } else if (scheme === "erc1155") {
                  const balance = BigNumber.from(yield this.provider.call({
                    to: addr,
                    data: hexConcat(["0x00fdd58e", hexZeroPad(owner, 32), tokenId])
                  }));
                  if (balance.isZero()) {
                    return null;
                  }
                  linkage.push({ type: "balance", content: balance.toString() });
                }
                const tx = {
                  to: this.provider.formatter.address(comps[0]),
                  data: hexConcat([selector, tokenId])
                };
                let metadataUrl = _parseString(yield this.provider.call(tx), 0);
                if (metadataUrl == null) {
                  return null;
                }
                linkage.push({ type: "metadata-url-base", content: metadataUrl });
                if (scheme === "erc1155") {
                  metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                  linkage.push({ type: "metadata-url-expanded", content: metadataUrl });
                }
                if (metadataUrl.match(/^ipfs:/i)) {
                  metadataUrl = getIpfsLink(metadataUrl);
                }
                linkage.push({ type: "metadata-url", content: metadataUrl });
                const metadata = yield fetchJson(metadataUrl);
                if (!metadata) {
                  return null;
                }
                linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
                let imageUrl = metadata.image;
                if (typeof imageUrl !== "string") {
                  return null;
                }
                if (imageUrl.match(/^(https:\/\/|data:)/i)) {
                } else {
                  const ipfs = imageUrl.match(matcherIpfs);
                  if (ipfs == null) {
                    return null;
                  }
                  linkage.push({ type: "url-ipfs", content: imageUrl });
                  imageUrl = getIpfsLink(imageUrl);
                }
                linkage.push({ type: "url", content: imageUrl });
                return { linkage, url: imageUrl };
              }
            }
          }
        } catch (error) {
        }
        return null;
      });
    }
    getContentHash() {
      return __awaiter6(this, void 0, void 0, function* () {
        const hexBytes = yield this._fetchBytes("0xbc1c58d1");
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
        if (ipfs) {
          const length = parseInt(ipfs[3], 16);
          if (ipfs[4].length === length * 2) {
            return "ipfs://" + Base58.encode("0x" + ipfs[1]);
          }
        }
        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
        if (ipns) {
          const length = parseInt(ipns[3], 16);
          if (ipns[4].length === length * 2) {
            return "ipns://" + Base58.encode("0x" + ipns[1]);
          }
        }
        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
        if (swarm) {
          if (swarm[1].length === 32 * 2) {
            return "bzz://" + swarm[1];
          }
        }
        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);
        if (skynet) {
          if (skynet[1].length === 34 * 2) {
            const urlSafe = { "=": "", "+": "-", "/": "_" };
            const hash3 = encode("0x" + skynet[1]).replace(/[=+\/]/g, (a) => urlSafe[a]);
            return "sia://" + hash3;
          }
        }
        return logger16.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "getContentHash()",
          data: hexBytes
        });
      });
    }
    getText(key22) {
      return __awaiter6(this, void 0, void 0, function* () {
        let keyBytes = toUtf8Bytes(key22);
        keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);
        if (keyBytes.length % 32 !== 0) {
          keyBytes = concat([keyBytes, hexZeroPad("0x", 32 - key22.length % 32)]);
        }
        const hexBytes = yield this._fetchBytes("0x59d1d43c", hexlify(keyBytes));
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        return toUtf8String(hexBytes);
      });
    }
  };
  var defaultFormatter = null;
  var nextPollId = 1;
  var BaseProvider = class extends Provider {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */
    constructor(network) {
      super();
      this._events = [];
      this._emitted = { block: -2 };
      this.disableCcipRead = false;
      this.formatter = new.target.getFormatter();
      defineReadOnly(this, "anyNetwork", network === "any");
      if (this.anyNetwork) {
        network = this.detectNetwork();
      }
      if (network instanceof Promise) {
        this._networkPromise = network;
        network.catch((error) => {
        });
        this._ready().catch((error) => {
        });
      } else {
        const knownNetwork = getStatic(new.target, "getNetwork")(network);
        if (knownNetwork) {
          defineReadOnly(this, "_network", knownNetwork);
          this.emit("network", knownNetwork, null);
        } else {
          logger16.throwArgumentError("invalid network", "network", network);
        }
      }
      this._maxInternalBlockNumber = -1024;
      this._lastBlockNumber = -2;
      this._maxFilterBlockRange = 10;
      this._pollingInterval = 4e3;
      this._fastQueryDate = 0;
    }
    _ready() {
      return __awaiter6(this, void 0, void 0, function* () {
        if (this._network == null) {
          let network = null;
          if (this._networkPromise) {
            try {
              network = yield this._networkPromise;
            } catch (error) {
            }
          }
          if (network == null) {
            network = yield this.detectNetwork();
          }
          if (!network) {
            logger16.throwError("no network detected", Logger.errors.UNKNOWN_ERROR, {});
          }
          if (this._network == null) {
            if (this.anyNetwork) {
              this._network = network;
            } else {
              defineReadOnly(this, "_network", network);
            }
            this.emit("network", network, null);
          }
        }
        return this._network;
      });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
      return poll(() => {
        return this._ready().then((network) => {
          return network;
        }, (error) => {
          if (error.code === Logger.errors.NETWORK_ERROR && error.event === "noNetwork") {
            return void 0;
          }
          throw error;
        });
      });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
      if (defaultFormatter == null) {
        defaultFormatter = new Formatter();
      }
      return defaultFormatter;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
      return getNetwork(network == null ? "homestead" : network);
    }
    ccipReadFetch(tx, calldata, urls) {
      return __awaiter6(this, void 0, void 0, function* () {
        if (this.disableCcipRead || urls.length === 0) {
          return null;
        }
        const sender = tx.to.toLowerCase();
        const data = calldata.toLowerCase();
        const errorMessages = [];
        for (let i = 0; i < urls.length; i++) {
          const url = urls[i];
          const href = url.replace("{sender}", sender).replace("{data}", data);
          const json = url.indexOf("{data}") >= 0 ? null : JSON.stringify({ data, sender });
          const result = yield fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {
            value.status = response.statusCode;
            return value;
          });
          if (result.data) {
            return result.data;
          }
          const errorMessage = result.message || "unknown error";
          if (result.status >= 400 && result.status < 500) {
            return logger16.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger.errors.SERVER_ERROR, { url, errorMessage });
          }
          errorMessages.push(errorMessage);
        }
        return logger16.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(", ")}`, Logger.errors.SERVER_ERROR, {
          urls,
          errorMessages
        });
      });
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this._ready();
        if (maxAge > 0) {
          while (this._internalBlockNumber) {
            const internalBlockNumber = this._internalBlockNumber;
            try {
              const result = yield internalBlockNumber;
              if (getTime() - result.respTime <= maxAge) {
                return result.blockNumber;
              }
              break;
            } catch (error) {
              if (this._internalBlockNumber === internalBlockNumber) {
                break;
              }
            }
          }
        }
        const reqTime = getTime();
        const checkInternalBlockNumber = resolveProperties({
          blockNumber: this.perform("getBlockNumber", {}),
          networkError: this.getNetwork().then((network) => null, (error) => error)
        }).then(({ blockNumber, networkError }) => {
          if (networkError) {
            if (this._internalBlockNumber === checkInternalBlockNumber) {
              this._internalBlockNumber = null;
            }
            throw networkError;
          }
          const respTime = getTime();
          blockNumber = BigNumber.from(blockNumber).toNumber();
          if (blockNumber < this._maxInternalBlockNumber) {
            blockNumber = this._maxInternalBlockNumber;
          }
          this._maxInternalBlockNumber = blockNumber;
          this._setFastBlockNumber(blockNumber);
          return { blockNumber, reqTime, respTime };
        });
        this._internalBlockNumber = checkInternalBlockNumber;
        checkInternalBlockNumber.catch((error) => {
          if (this._internalBlockNumber === checkInternalBlockNumber) {
            this._internalBlockNumber = null;
          }
        });
        return (yield checkInternalBlockNumber).blockNumber;
      });
    }
    poll() {
      return __awaiter6(this, void 0, void 0, function* () {
        const pollId = nextPollId++;
        const runners = [];
        let blockNumber = null;
        try {
          blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
        } catch (error) {
          this.emit("error", error);
          return;
        }
        this._setFastBlockNumber(blockNumber);
        this.emit("poll", pollId, blockNumber);
        if (blockNumber === this._lastBlockNumber) {
          this.emit("didPoll", pollId);
          return;
        }
        if (this._emitted.block === -2) {
          this._emitted.block = blockNumber - 1;
        }
        if (Math.abs(this._emitted.block - blockNumber) > 1e3) {
          logger16.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
          this.emit("error", logger16.makeError("network block skew detected", Logger.errors.NETWORK_ERROR, {
            blockNumber,
            event: "blockSkew",
            previousBlockNumber: this._emitted.block
          }));
          this.emit("block", blockNumber);
        } else {
          for (let i = this._emitted.block + 1; i <= blockNumber; i++) {
            this.emit("block", i);
          }
        }
        if (this._emitted.block !== blockNumber) {
          this._emitted.block = blockNumber;
          Object.keys(this._emitted).forEach((key22) => {
            if (key22 === "block") {
              return;
            }
            const eventBlockNumber = this._emitted[key22];
            if (eventBlockNumber === "pending") {
              return;
            }
            if (blockNumber - eventBlockNumber > 12) {
              delete this._emitted[key22];
            }
          });
        }
        if (this._lastBlockNumber === -2) {
          this._lastBlockNumber = blockNumber - 1;
        }
        this._events.forEach((event) => {
          switch (event.type) {
            case "tx": {
              const hash3 = event.hash;
              let runner = this.getTransactionReceipt(hash3).then((receipt) => {
                if (!receipt || receipt.blockNumber == null) {
                  return null;
                }
                this._emitted["t:" + hash3] = receipt.blockNumber;
                this.emit(hash3, receipt);
                return null;
              }).catch((error) => {
                this.emit("error", error);
              });
              runners.push(runner);
              break;
            }
            case "filter": {
              if (!event._inflight) {
                event._inflight = true;
                if (event._lastBlockNumber === -2) {
                  event._lastBlockNumber = blockNumber - 1;
                }
                const filter2 = event.filter;
                filter2.fromBlock = event._lastBlockNumber + 1;
                filter2.toBlock = blockNumber;
                const minFromBlock = filter2.toBlock - this._maxFilterBlockRange;
                if (minFromBlock > filter2.fromBlock) {
                  filter2.fromBlock = minFromBlock;
                }
                if (filter2.fromBlock < 0) {
                  filter2.fromBlock = 0;
                }
                const runner = this.getLogs(filter2).then((logs) => {
                  event._inflight = false;
                  if (logs.length === 0) {
                    return;
                  }
                  logs.forEach((log) => {
                    if (log.blockNumber > event._lastBlockNumber) {
                      event._lastBlockNumber = log.blockNumber;
                    }
                    this._emitted["b:" + log.blockHash] = log.blockNumber;
                    this._emitted["t:" + log.transactionHash] = log.blockNumber;
                    this.emit(filter2, log);
                  });
                }).catch((error) => {
                  this.emit("error", error);
                  event._inflight = false;
                });
                runners.push(runner);
              }
              break;
            }
          }
        });
        this._lastBlockNumber = blockNumber;
        Promise.all(runners).then(() => {
          this.emit("didPoll", pollId);
        }).catch((error) => {
          this.emit("error", error);
        });
        return;
      });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
      this._lastBlockNumber = blockNumber - 1;
      if (this.polling) {
        this.poll();
      }
    }
    get network() {
      return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
      return __awaiter6(this, void 0, void 0, function* () {
        return logger16.throwError("provider does not support network detection", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: "provider.detectNetwork"
        });
      });
    }
    getNetwork() {
      return __awaiter6(this, void 0, void 0, function* () {
        const network = yield this._ready();
        const currentNetwork = yield this.detectNetwork();
        if (network.chainId !== currentNetwork.chainId) {
          if (this.anyNetwork) {
            this._network = currentNetwork;
            this._lastBlockNumber = -2;
            this._fastBlockNumber = null;
            this._fastBlockNumberPromise = null;
            this._fastQueryDate = 0;
            this._emitted.block = -2;
            this._maxInternalBlockNumber = -1024;
            this._internalBlockNumber = null;
            this.emit("network", currentNetwork, network);
            yield stall(0);
            return this._network;
          }
          const error = logger16.makeError("underlying network changed", Logger.errors.NETWORK_ERROR, {
            event: "changed",
            network,
            detectedNetwork: currentNetwork
          });
          this.emit("error", error);
          throw error;
        }
        return network;
      });
    }
    get blockNumber() {
      this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {
        this._setFastBlockNumber(blockNumber);
      }, (error) => {
      });
      return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
    }
    get polling() {
      return this._poller != null;
    }
    set polling(value) {
      if (value && !this._poller) {
        this._poller = setInterval(() => {
          this.poll();
        }, this.pollingInterval);
        if (!this._bootstrapPoll) {
          this._bootstrapPoll = setTimeout(() => {
            this.poll();
            this._bootstrapPoll = setTimeout(() => {
              if (!this._poller) {
                this.poll();
              }
              this._bootstrapPoll = null;
            }, this.pollingInterval);
          }, 0);
        }
      } else if (!value && this._poller) {
        clearInterval(this._poller);
        this._poller = null;
      }
    }
    get pollingInterval() {
      return this._pollingInterval;
    }
    set pollingInterval(value) {
      if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) {
        throw new Error("invalid polling interval");
      }
      this._pollingInterval = value;
      if (this._poller) {
        clearInterval(this._poller);
        this._poller = setInterval(() => {
          this.poll();
        }, this._pollingInterval);
      }
    }
    _getFastBlockNumber() {
      const now2 = getTime();
      if (now2 - this._fastQueryDate > 2 * this._pollingInterval) {
        this._fastQueryDate = now2;
        this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {
          if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
          }
          return this._fastBlockNumber;
        });
      }
      return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
      if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
        return;
      }
      this._fastQueryDate = getTime();
      if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
        this._fastBlockNumber = blockNumber;
        this._fastBlockNumberPromise = Promise.resolve(blockNumber);
      }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
      return __awaiter6(this, void 0, void 0, function* () {
        return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);
      });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
      return __awaiter6(this, void 0, void 0, function* () {
        const receipt = yield this.getTransactionReceipt(transactionHash);
        if ((receipt ? receipt.confirmations : 0) >= confirmations) {
          return receipt;
        }
        return new Promise((resolve, reject) => {
          const cancelFuncs = [];
          let done = false;
          const alreadyDone = function() {
            if (done) {
              return true;
            }
            done = true;
            cancelFuncs.forEach((func) => {
              func();
            });
            return false;
          };
          const minedHandler = (receipt2) => {
            if (receipt2.confirmations < confirmations) {
              return;
            }
            if (alreadyDone()) {
              return;
            }
            resolve(receipt2);
          };
          this.on(transactionHash, minedHandler);
          cancelFuncs.push(() => {
            this.removeListener(transactionHash, minedHandler);
          });
          if (replaceable) {
            let lastBlockNumber = replaceable.startBlock;
            let scannedBlock = null;
            const replaceHandler = (blockNumber) => __awaiter6(this, void 0, void 0, function* () {
              if (done) {
                return;
              }
              yield stall(1e3);
              this.getTransactionCount(replaceable.from).then((nonce) => __awaiter6(this, void 0, void 0, function* () {
                if (done) {
                  return;
                }
                if (nonce <= replaceable.nonce) {
                  lastBlockNumber = blockNumber;
                } else {
                  {
                    const mined = yield this.getTransaction(transactionHash);
                    if (mined && mined.blockNumber != null) {
                      return;
                    }
                  }
                  if (scannedBlock == null) {
                    scannedBlock = lastBlockNumber - 3;
                    if (scannedBlock < replaceable.startBlock) {
                      scannedBlock = replaceable.startBlock;
                    }
                  }
                  while (scannedBlock <= blockNumber) {
                    if (done) {
                      return;
                    }
                    const block = yield this.getBlockWithTransactions(scannedBlock);
                    for (let ti = 0; ti < block.transactions.length; ti++) {
                      const tx = block.transactions[ti];
                      if (tx.hash === transactionHash) {
                        return;
                      }
                      if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                        if (done) {
                          return;
                        }
                        const receipt2 = yield this.waitForTransaction(tx.hash, confirmations);
                        if (alreadyDone()) {
                          return;
                        }
                        let reason = "replaced";
                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                          reason = "repriced";
                        } else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                          reason = "cancelled";
                        }
                        reject(logger16.makeError("transaction was replaced", Logger.errors.TRANSACTION_REPLACED, {
                          cancelled: reason === "replaced" || reason === "cancelled",
                          reason,
                          replacement: this._wrapTransaction(tx),
                          hash: transactionHash,
                          receipt: receipt2
                        }));
                        return;
                      }
                    }
                    scannedBlock++;
                  }
                }
                if (done) {
                  return;
                }
                this.once("block", replaceHandler);
              }), (error) => {
                if (done) {
                  return;
                }
                this.once("block", replaceHandler);
              });
            });
            if (done) {
              return;
            }
            this.once("block", replaceHandler);
            cancelFuncs.push(() => {
              this.removeListener("block", replaceHandler);
            });
          }
          if (typeof timeout === "number" && timeout > 0) {
            const timer22 = setTimeout(() => {
              if (alreadyDone()) {
                return;
              }
              reject(logger16.makeError("timeout exceeded", Logger.errors.TIMEOUT, { timeout }));
            }, timeout);
            if (timer22.unref) {
              timer22.unref();
            }
            cancelFuncs.push(() => {
              clearTimeout(timer22);
            });
          }
        });
      });
    }
    getBlockNumber() {
      return __awaiter6(this, void 0, void 0, function* () {
        return this._getInternalBlockNumber(0);
      });
    }
    getGasPrice() {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const result = yield this.perform("getGasPrice", {});
        try {
          return BigNumber.from(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "getGasPrice",
            result,
            error
          });
        }
      });
    }
    getBalance(addressOrName, blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getBalance", params);
        try {
          return BigNumber.from(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "getBalance",
            params,
            result,
            error
          });
        }
      });
    }
    getTransactionCount(addressOrName, blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getTransactionCount", params);
        try {
          return BigNumber.from(result).toNumber();
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "getTransactionCount",
            params,
            result,
            error
          });
        }
      });
    }
    getCode(addressOrName, blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getCode", params);
        try {
          return hexlify(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "getCode",
            params,
            result,
            error
          });
        }
      });
    }
    getStorageAt(addressOrName, position, blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag),
          position: Promise.resolve(position).then((p) => hexValue(p))
        });
        const result = yield this.perform("getStorageAt", params);
        try {
          return hexlify(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "getStorageAt",
            params,
            result,
            error
          });
        }
      });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash3, startBlock) {
      if (hash3 != null && hexDataLength(hash3) !== 32) {
        throw new Error("invalid response - sendTransaction");
      }
      const result = tx;
      if (hash3 != null && tx.hash !== hash3) {
        logger16.throwError("Transaction hash mismatch from Provider.sendTransaction.", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash3 });
      }
      result.wait = (confirms, timeout) => __awaiter6(this, void 0, void 0, function* () {
        if (confirms == null) {
          confirms = 1;
        }
        if (timeout == null) {
          timeout = 0;
        }
        let replacement = void 0;
        if (confirms !== 0 && startBlock != null) {
          replacement = {
            data: tx.data,
            from: tx.from,
            nonce: tx.nonce,
            to: tx.to,
            value: tx.value,
            startBlock
          };
        }
        const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
        if (receipt == null && confirms === 0) {
          return null;
        }
        this._emitted["t:" + tx.hash] = receipt.blockNumber;
        if (receipt.status === 0) {
          logger16.throwError("transaction failed", Logger.errors.CALL_EXCEPTION, {
            transactionHash: tx.hash,
            transaction: tx,
            receipt
          });
        }
        return receipt;
      });
      return result;
    }
    sendTransaction(signedTransaction) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const hexTx = yield Promise.resolve(signedTransaction).then((t) => hexlify(t));
        const tx = this.formatter.transaction(signedTransaction);
        if (tx.confirmations == null) {
          tx.confirmations = 0;
        }
        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
        try {
          const hash3 = yield this.perform("sendTransaction", { signedTransaction: hexTx });
          return this._wrapTransaction(tx, hash3, blockNumber);
        } catch (error) {
          error.transaction = tx;
          error.transactionHash = tx.hash;
          throw error;
        }
      });
    }
    _getTransactionRequest(transaction) {
      return __awaiter6(this, void 0, void 0, function* () {
        const values = yield transaction;
        const tx = {};
        ["from", "to"].forEach((key22) => {
          if (values[key22] == null) {
            return;
          }
          tx[key22] = Promise.resolve(values[key22]).then((v) => v ? this._getAddress(v) : null);
        });
        ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key22) => {
          if (values[key22] == null) {
            return;
          }
          tx[key22] = Promise.resolve(values[key22]).then((v) => v ? BigNumber.from(v) : null);
        });
        ["type"].forEach((key22) => {
          if (values[key22] == null) {
            return;
          }
          tx[key22] = Promise.resolve(values[key22]).then((v) => v != null ? v : null);
        });
        if (values.accessList) {
          tx.accessList = this.formatter.accessList(values.accessList);
        }
        ["data"].forEach((key22) => {
          if (values[key22] == null) {
            return;
          }
          tx[key22] = Promise.resolve(values[key22]).then((v) => v ? hexlify(v) : null);
        });
        return this.formatter.transactionRequest(yield resolveProperties(tx));
      });
    }
    _getFilter(filter2) {
      return __awaiter6(this, void 0, void 0, function* () {
        filter2 = yield filter2;
        const result = {};
        if (filter2.address != null) {
          result.address = this._getAddress(filter2.address);
        }
        ["blockHash", "topics"].forEach((key22) => {
          if (filter2[key22] == null) {
            return;
          }
          result[key22] = filter2[key22];
        });
        ["fromBlock", "toBlock"].forEach((key22) => {
          if (filter2[key22] == null) {
            return;
          }
          result[key22] = this._getBlockTag(filter2[key22]);
        });
        return this.formatter.filter(yield resolveProperties(result));
      });
    }
    _call(transaction, blockTag, attempt) {
      return __awaiter6(this, void 0, void 0, function* () {
        if (attempt >= MAX_CCIP_REDIRECTS) {
          logger16.throwError("CCIP read exceeded maximum redirections", Logger.errors.SERVER_ERROR, {
            redirects: attempt,
            transaction
          });
        }
        const txSender = transaction.to;
        const result = yield this.perform("call", { transaction, blockTag });
        if (attempt >= 0 && blockTag === "latest" && txSender != null && result.substring(0, 10) === "0x556f1830" && hexDataLength(result) % 32 === 4) {
          try {
            const data = hexDataSlice(result, 4);
            const sender = hexDataSlice(data, 0, 32);
            if (!BigNumber.from(sender).eq(txSender)) {
              logger16.throwError("CCIP Read sender did not match", Logger.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const urls = [];
            const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();
            const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();
            const urlsData = hexDataSlice(data, urlsOffset + 32);
            for (let u = 0; u < urlsLength; u++) {
              const url = _parseString(urlsData, u * 32);
              if (url == null) {
                logger16.throwError("CCIP Read contained corrupt URL string", Logger.errors.CALL_EXCEPTION, {
                  name: "OffchainLookup",
                  signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                  transaction,
                  data: result
                });
              }
              urls.push(url);
            }
            const calldata = _parseBytes(data, 64);
            if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {
              logger16.throwError("CCIP Read callback selector included junk", Logger.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const callbackSelector = hexDataSlice(data, 96, 100);
            const extraData = _parseBytes(data, 128);
            const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
            if (ccipResult == null) {
              logger16.throwError("CCIP Read disabled or provided no URLs", Logger.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const tx = {
              to: txSender,
              data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])
            };
            return this._call(tx, blockTag, attempt + 1);
          } catch (error) {
            if (error.code === Logger.errors.SERVER_ERROR) {
              throw error;
            }
          }
        }
        try {
          return hexlify(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "call",
            params: { transaction, blockTag },
            result,
            error
          });
        }
      });
    }
    call(transaction, blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const resolved = yield resolveProperties({
          transaction: this._getTransactionRequest(transaction),
          blockTag: this._getBlockTag(blockTag),
          ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)
        });
        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
      });
    }
    estimateGas(transaction) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({
          transaction: this._getTransactionRequest(transaction)
        });
        const result = yield this.perform("estimateGas", params);
        try {
          return BigNumber.from(result);
        } catch (error) {
          return logger16.throwError("bad result from backend", Logger.errors.SERVER_ERROR, {
            method: "estimateGas",
            params,
            result,
            error
          });
        }
      });
    }
    _getAddress(addressOrName) {
      return __awaiter6(this, void 0, void 0, function* () {
        addressOrName = yield addressOrName;
        if (typeof addressOrName !== "string") {
          logger16.throwArgumentError("invalid address or ENS name", "name", addressOrName);
        }
        const address = yield this.resolveName(addressOrName);
        if (address == null) {
          logger16.throwError("ENS name not configured", Logger.errors.UNSUPPORTED_OPERATION, {
            operation: `resolveName(${JSON.stringify(addressOrName)})`
          });
        }
        return address;
      });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        blockHashOrBlockTag = yield blockHashOrBlockTag;
        let blockNumber = -128;
        const params = {
          includeTransactions: !!includeTransactions
        };
        if (isHexString(blockHashOrBlockTag, 32)) {
          params.blockHash = blockHashOrBlockTag;
        } else {
          try {
            params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
            if (isHexString(params.blockTag)) {
              blockNumber = parseInt(params.blockTag.substring(2), 16);
            }
          } catch (error) {
            logger16.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
          }
        }
        return poll(() => __awaiter6(this, void 0, void 0, function* () {
          const block = yield this.perform("getBlock", params);
          if (block == null) {
            if (params.blockHash != null) {
              if (this._emitted["b:" + params.blockHash] == null) {
                return null;
              }
            }
            if (params.blockTag != null) {
              if (blockNumber > this._emitted.block) {
                return null;
              }
            }
            return void 0;
          }
          if (includeTransactions) {
            let blockNumber2 = null;
            for (let i = 0; i < block.transactions.length; i++) {
              const tx = block.transactions[i];
              if (tx.blockNumber == null) {
                tx.confirmations = 0;
              } else if (tx.confirmations == null) {
                if (blockNumber2 == null) {
                  blockNumber2 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                }
                let confirmations = blockNumber2 - tx.blockNumber + 1;
                if (confirmations <= 0) {
                  confirmations = 1;
                }
                tx.confirmations = confirmations;
              }
            }
            const blockWithTxs = this.formatter.blockWithTransactions(block);
            blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));
            return blockWithTxs;
          }
          return this.formatter.block(block);
        }), { oncePoll: this });
      });
    }
    getBlock(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, false);
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, true);
    }
    getTransaction(transactionHash) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        transactionHash = yield transactionHash;
        const params = { transactionHash: this.formatter.hash(transactionHash, true) };
        return poll(() => __awaiter6(this, void 0, void 0, function* () {
          const result = yield this.perform("getTransaction", params);
          if (result == null) {
            if (this._emitted["t:" + transactionHash] == null) {
              return null;
            }
            return void 0;
          }
          const tx = this.formatter.transactionResponse(result);
          if (tx.blockNumber == null) {
            tx.confirmations = 0;
          } else if (tx.confirmations == null) {
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            let confirmations = blockNumber - tx.blockNumber + 1;
            if (confirmations <= 0) {
              confirmations = 1;
            }
            tx.confirmations = confirmations;
          }
          return this._wrapTransaction(tx);
        }), { oncePoll: this });
      });
    }
    getTransactionReceipt(transactionHash) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        transactionHash = yield transactionHash;
        const params = { transactionHash: this.formatter.hash(transactionHash, true) };
        return poll(() => __awaiter6(this, void 0, void 0, function* () {
          const result = yield this.perform("getTransactionReceipt", params);
          if (result == null) {
            if (this._emitted["t:" + transactionHash] == null) {
              return null;
            }
            return void 0;
          }
          if (result.blockHash == null) {
            return void 0;
          }
          const receipt = this.formatter.receipt(result);
          if (receipt.blockNumber == null) {
            receipt.confirmations = 0;
          } else if (receipt.confirmations == null) {
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            let confirmations = blockNumber - receipt.blockNumber + 1;
            if (confirmations <= 0) {
              confirmations = 1;
            }
            receipt.confirmations = confirmations;
          }
          return receipt;
        }), { oncePoll: this });
      });
    }
    getLogs(filter2) {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties({ filter: this._getFilter(filter2) });
        const logs = yield this.perform("getLogs", params);
        logs.forEach((log) => {
          if (log.removed == null) {
            log.removed = false;
          }
        });
        return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
      });
    }
    getEtherPrice() {
      return __awaiter6(this, void 0, void 0, function* () {
        yield this.getNetwork();
        return this.perform("getEtherPrice", {});
      });
    }
    _getBlockTag(blockTag) {
      return __awaiter6(this, void 0, void 0, function* () {
        blockTag = yield blockTag;
        if (typeof blockTag === "number" && blockTag < 0) {
          if (blockTag % 1) {
            logger16.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
          }
          let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
          blockNumber += blockTag;
          if (blockNumber < 0) {
            blockNumber = 0;
          }
          return this.formatter.blockTag(blockNumber);
        }
        return this.formatter.blockTag(blockTag);
      });
    }
    getResolver(name) {
      return __awaiter6(this, void 0, void 0, function* () {
        let currentName = name;
        while (true) {
          if (currentName === "" || currentName === ".") {
            return null;
          }
          if (name !== "eth" && currentName === "eth") {
            return null;
          }
          const addr = yield this._getResolver(currentName, "getResolver");
          if (addr != null) {
            const resolver = new Resolver(this, addr, name);
            if (currentName !== name && !(yield resolver.supportsWildcard())) {
              return null;
            }
            return resolver;
          }
          currentName = currentName.split(".").slice(1).join(".");
        }
      });
    }
    _getResolver(name, operation) {
      return __awaiter6(this, void 0, void 0, function* () {
        if (operation == null) {
          operation = "ENS";
        }
        const network = yield this.getNetwork();
        if (!network.ensAddress) {
          logger16.throwError("network does not support ENS", Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });
        }
        try {
          const addrData = yield this.call({
            to: network.ensAddress,
            data: "0x0178b8bf" + namehash(name).substring(2)
          });
          return this.formatter.callAddress(addrData);
        } catch (error) {
        }
        return null;
      });
    }
    resolveName(name) {
      return __awaiter6(this, void 0, void 0, function* () {
        name = yield name;
        try {
          return Promise.resolve(this.formatter.address(name));
        } catch (error) {
          if (isHexString(name)) {
            throw error;
          }
        }
        if (typeof name !== "string") {
          logger16.throwArgumentError("invalid ENS name", "name", name);
        }
        const resolver = yield this.getResolver(name);
        if (!resolver) {
          return null;
        }
        return yield resolver.getAddress();
      });
    }
    lookupAddress(address) {
      return __awaiter6(this, void 0, void 0, function* () {
        address = yield address;
        address = this.formatter.address(address);
        const node = address.substring(2).toLowerCase() + ".addr.reverse";
        const resolverAddr = yield this._getResolver(node, "lookupAddress");
        if (resolverAddr == null) {
          return null;
        }
        const name = _parseString(yield this.call({
          to: resolverAddr,
          data: "0x691f3431" + namehash(node).substring(2)
        }), 0);
        const addr = yield this.resolveName(name);
        if (addr != address) {
          return null;
        }
        return name;
      });
    }
    getAvatar(nameOrAddress) {
      return __awaiter6(this, void 0, void 0, function* () {
        let resolver = null;
        if (isHexString(nameOrAddress)) {
          const address = this.formatter.address(nameOrAddress);
          const node = address.substring(2).toLowerCase() + ".addr.reverse";
          const resolverAddress = yield this._getResolver(node, "getAvatar");
          if (!resolverAddress) {
            return null;
          }
          resolver = new Resolver(this, resolverAddress, node);
          try {
            const avatar2 = yield resolver.getAvatar();
            if (avatar2) {
              return avatar2.url;
            }
          } catch (error) {
            if (error.code !== Logger.errors.CALL_EXCEPTION) {
              throw error;
            }
          }
          try {
            const name = _parseString(yield this.call({
              to: resolverAddress,
              data: "0x691f3431" + namehash(node).substring(2)
            }), 0);
            resolver = yield this.getResolver(name);
          } catch (error) {
            if (error.code !== Logger.errors.CALL_EXCEPTION) {
              throw error;
            }
            return null;
          }
        } else {
          resolver = yield this.getResolver(nameOrAddress);
          if (!resolver) {
            return null;
          }
        }
        const avatar = yield resolver.getAvatar();
        if (avatar == null) {
          return null;
        }
        return avatar.url;
      });
    }
    perform(method, params) {
      return logger16.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
    }
    _startEvent(event) {
      this.polling = this._events.filter((e) => e.pollable()).length > 0;
    }
    _stopEvent(event) {
      this.polling = this._events.filter((e) => e.pollable()).length > 0;
    }
    _addEventListener(eventName, listener, once) {
      const event = new Event(getEventTag(eventName), listener, once);
      this._events.push(event);
      this._startEvent(event);
      return this;
    }
    on(eventName, listener) {
      return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
      return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
      let result = false;
      let stopped = [];
      let eventTag = getEventTag(eventName);
      this._events = this._events.filter((event) => {
        if (event.tag !== eventTag) {
          return true;
        }
        setTimeout(() => {
          event.listener.apply(this, args);
        }, 0);
        result = true;
        if (event.once) {
          stopped.push(event);
          return false;
        }
        return true;
      });
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return result;
    }
    listenerCount(eventName) {
      if (!eventName) {
        return this._events.length;
      }
      let eventTag = getEventTag(eventName);
      return this._events.filter((event) => {
        return event.tag === eventTag;
      }).length;
    }
    listeners(eventName) {
      if (eventName == null) {
        return this._events.map((event) => event.listener);
      }
      let eventTag = getEventTag(eventName);
      return this._events.filter((event) => event.tag === eventTag).map((event) => event.listener);
    }
    off(eventName, listener) {
      if (listener == null) {
        return this.removeAllListeners(eventName);
      }
      const stopped = [];
      let found = false;
      let eventTag = getEventTag(eventName);
      this._events = this._events.filter((event) => {
        if (event.tag !== eventTag || event.listener != listener) {
          return true;
        }
        if (found) {
          return true;
        }
        found = true;
        stopped.push(event);
        return false;
      });
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return this;
    }
    removeAllListeners(eventName) {
      let stopped = [];
      if (eventName == null) {
        stopped = this._events;
        this._events = [];
      } else {
        const eventTag = getEventTag(eventName);
        this._events = this._events.filter((event) => {
          if (event.tag !== eventTag) {
            return true;
          }
          stopped.push(event);
          return false;
        });
      }
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return this;
    }
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var version16 = "abstract-signer/5.7.0";
  var __awaiter7 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger17 = new Logger(version16);
  var allowedTransactionKeys = [
    "accessList",
    "ccipReadEnabled",
    "chainId",
    "customData",
    "data",
    "from",
    "gasLimit",
    "gasPrice",
    "maxFeePerGas",
    "maxPriorityFeePerGas",
    "nonce",
    "to",
    "type",
    "value"
  ];
  var forwardErrors = [
    Logger.errors.INSUFFICIENT_FUNDS,
    Logger.errors.NONCE_EXPIRED,
    Logger.errors.REPLACEMENT_UNDERPRICED
  ];
  var Signer = class _Signer {
    ///////////////////
    // Sub-classes MUST call super
    constructor() {
      logger17.checkAbstract(new.target, _Signer);
      defineReadOnly(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("getBalance");
        return yield this.provider.getBalance(this.getAddress(), blockTag);
      });
    }
    getTransactionCount(blockTag) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("getTransactionCount");
        return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
      });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("estimateGas");
        const tx = yield resolveProperties(this.checkTransaction(transaction));
        return yield this.provider.estimateGas(tx);
      });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("call");
        const tx = yield resolveProperties(this.checkTransaction(transaction));
        return yield this.provider.call(tx, blockTag);
      });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("sendTransaction");
        const tx = yield this.populateTransaction(transaction);
        const signedTx = yield this.signTransaction(tx);
        return yield this.provider.sendTransaction(signedTx);
      });
    }
    getChainId() {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("getChainId");
        const network = yield this.provider.getNetwork();
        return network.chainId;
      });
    }
    getGasPrice() {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("getGasPrice");
        return yield this.provider.getGasPrice();
      });
    }
    getFeeData() {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("getFeeData");
        return yield this.provider.getFeeData();
      });
    }
    resolveName(name) {
      return __awaiter7(this, void 0, void 0, function* () {
        this._checkProvider("resolveName");
        return yield this.provider.resolveName(name);
      });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
      for (const key22 in transaction) {
        if (allowedTransactionKeys.indexOf(key22) === -1) {
          logger17.throwArgumentError("invalid transaction key: " + key22, "transaction", transaction);
        }
      }
      const tx = shallowCopy(transaction);
      if (tx.from == null) {
        tx.from = this.getAddress();
      } else {
        tx.from = Promise.all([
          Promise.resolve(tx.from),
          this.getAddress()
        ]).then((result) => {
          if (result[0].toLowerCase() !== result[1].toLowerCase()) {
            logger17.throwArgumentError("from address mismatch", "transaction", transaction);
          }
          return result[0];
        });
      }
      return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
      return __awaiter7(this, void 0, void 0, function* () {
        const tx = yield resolveProperties(this.checkTransaction(transaction));
        if (tx.to != null) {
          tx.to = Promise.resolve(tx.to).then((to) => __awaiter7(this, void 0, void 0, function* () {
            if (to == null) {
              return null;
            }
            const address = yield this.resolveName(to);
            if (address == null) {
              logger17.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
            }
            return address;
          }));
          tx.to.catch((error) => {
          });
        }
        const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
          logger17.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
          logger17.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
        }
        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
          tx.type = 2;
        } else if (tx.type === 0 || tx.type === 1) {
          if (tx.gasPrice == null) {
            tx.gasPrice = this.getGasPrice();
          }
        } else {
          const feeData = yield this.getFeeData();
          if (tx.type == null) {
            if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
              tx.type = 2;
              if (tx.gasPrice != null) {
                const gasPrice = tx.gasPrice;
                delete tx.gasPrice;
                tx.maxFeePerGas = gasPrice;
                tx.maxPriorityFeePerGas = gasPrice;
              } else {
                if (tx.maxFeePerGas == null) {
                  tx.maxFeePerGas = feeData.maxFeePerGas;
                }
                if (tx.maxPriorityFeePerGas == null) {
                  tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                }
              }
            } else if (feeData.gasPrice != null) {
              if (hasEip1559) {
                logger17.throwError("network does not support EIP-1559", Logger.errors.UNSUPPORTED_OPERATION, {
                  operation: "populateTransaction"
                });
              }
              if (tx.gasPrice == null) {
                tx.gasPrice = feeData.gasPrice;
              }
              tx.type = 0;
            } else {
              logger17.throwError("failed to get consistent fee data", Logger.errors.UNSUPPORTED_OPERATION, {
                operation: "signer.getFeeData"
              });
            }
          } else if (tx.type === 2) {
            if (tx.maxFeePerGas == null) {
              tx.maxFeePerGas = feeData.maxFeePerGas;
            }
            if (tx.maxPriorityFeePerGas == null) {
              tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
            }
          }
        }
        if (tx.nonce == null) {
          tx.nonce = this.getTransactionCount("pending");
        }
        if (tx.gasLimit == null) {
          tx.gasLimit = this.estimateGas(tx).catch((error) => {
            if (forwardErrors.indexOf(error.code) >= 0) {
              throw error;
            }
            return logger17.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
              error,
              tx
            });
          });
        }
        if (tx.chainId == null) {
          tx.chainId = this.getChainId();
        } else {
          tx.chainId = Promise.all([
            Promise.resolve(tx.chainId),
            this.getChainId()
          ]).then((results) => {
            if (results[1] !== 0 && results[0] !== results[1]) {
              logger17.throwArgumentError("chainId address mismatch", "transaction", transaction);
            }
            return results[0];
          });
        }
        return yield resolveProperties(tx);
      });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
      if (!this.provider) {
        logger17.throwError("missing provider", Logger.errors.UNSUPPORTED_OPERATION, {
          operation: operation || "_checkProvider"
        });
      }
    }
    static isSigner(value) {
      return !!(value && value._isSigner);
    }
  };
  var __awaiter8 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger18 = new Logger(version13);
  var errorGas = ["call", "estimateGas"];
  function spelunk(value, requireData) {
    if (value == null) {
      return null;
    }
    if (typeof value.message === "string" && value.message.match("reverted")) {
      const data = isHexString(value.data) ? value.data : null;
      if (!requireData || data) {
        return { message: value.message, data };
      }
    }
    if (typeof value === "object") {
      for (const key22 in value) {
        const result = spelunk(value[key22], requireData);
        if (result) {
          return result;
        }
      }
      return null;
    }
    if (typeof value === "string") {
      try {
        return spelunk(JSON.parse(value), requireData);
      } catch (error) {
      }
    }
    return null;
  }
  function checkError(method, error, params) {
    const transaction = params.transaction || params.signedTransaction;
    if (method === "call") {
      const result = spelunk(error, true);
      if (result) {
        return result.data;
      }
      logger18.throwError("missing revert data in call exception; Transaction reverted without a reason string", Logger.errors.CALL_EXCEPTION, {
        data: "0x",
        transaction,
        error
      });
    }
    if (method === "estimateGas") {
      let result = spelunk(error.body, false);
      if (result == null) {
        result = spelunk(error, false);
      }
      if (result) {
        logger18.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
          reason: result.message,
          method,
          transaction,
          error
        });
      }
    }
    let message = error.message;
    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof error.error.message === "string") {
      message = error.error.message;
    } else if (typeof error.body === "string") {
      message = error.body;
    } else if (typeof error.responseText === "string") {
      message = error.responseText;
    }
    message = (message || "").toLowerCase();
    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {
      logger18.throwError("insufficient funds for intrinsic transaction cost", Logger.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/nonce (is )?too low/i)) {
      logger18.throwError("nonce has already been used", Logger.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {
      logger18.throwError("replacement fee too low", Logger.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/only replay-protected/i)) {
      logger18.throwError("legacy pre-eip-155 transactions not supported", Logger.errors.UNSUPPORTED_OPERATION, {
        error,
        method,
        transaction
      });
    }
    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {
      logger18.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
      });
    }
    throw error;
  }
  function timer(timeout) {
    return new Promise(function(resolve) {
      setTimeout(resolve, timeout);
    });
  }
  function getResult(payload) {
    if (payload.error) {
      const error = new Error(payload.error.message);
      error.code = payload.error.code;
      error.data = payload.error.data;
      throw error;
    }
    return payload.result;
  }
  function getLowerCase(value) {
    if (value) {
      return value.toLowerCase();
    }
    return value;
  }
  var _constructorGuard2 = {};
  var JsonRpcSigner = class extends Signer {
    constructor(constructorGuard, provider, addressOrIndex) {
      super();
      if (constructorGuard !== _constructorGuard2) {
        throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
      }
      defineReadOnly(this, "provider", provider);
      if (addressOrIndex == null) {
        addressOrIndex = 0;
      }
      if (typeof addressOrIndex === "string") {
        defineReadOnly(this, "_address", this.provider.formatter.address(addressOrIndex));
        defineReadOnly(this, "_index", null);
      } else if (typeof addressOrIndex === "number") {
        defineReadOnly(this, "_index", addressOrIndex);
        defineReadOnly(this, "_address", null);
      } else {
        logger18.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
      }
    }
    connect(provider) {
      return logger18.throwError("cannot alter JSON-RPC Signer connection", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "connect"
      });
    }
    connectUnchecked() {
      return new UncheckedJsonRpcSigner(_constructorGuard2, this.provider, this._address || this._index);
    }
    getAddress() {
      if (this._address) {
        return Promise.resolve(this._address);
      }
      return this.provider.send("eth_accounts", []).then((accounts) => {
        if (accounts.length <= this._index) {
          logger18.throwError("unknown account #" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {
            operation: "getAddress"
          });
        }
        return this.provider.formatter.address(accounts[this._index]);
      });
    }
    sendUncheckedTransaction(transaction) {
      transaction = shallowCopy(transaction);
      const fromAddress = this.getAddress().then((address) => {
        if (address) {
          address = address.toLowerCase();
        }
        return address;
      });
      if (transaction.gasLimit == null) {
        const estimate = shallowCopy(transaction);
        estimate.from = fromAddress;
        transaction.gasLimit = this.provider.estimateGas(estimate);
      }
      if (transaction.to != null) {
        transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter8(this, void 0, void 0, function* () {
          if (to == null) {
            return null;
          }
          const address = yield this.provider.resolveName(to);
          if (address == null) {
            logger18.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
          }
          return address;
        }));
      }
      return resolveProperties({
        tx: resolveProperties(transaction),
        sender: fromAddress
      }).then(({ tx, sender }) => {
        if (tx.from != null) {
          if (tx.from.toLowerCase() !== sender) {
            logger18.throwArgumentError("from address mismatch", "transaction", transaction);
          }
        } else {
          tx.from = sender;
        }
        const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });
        return this.provider.send("eth_sendTransaction", [hexTx]).then((hash3) => {
          return hash3;
        }, (error) => {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger18.throwError("user rejected transaction", Logger.errors.ACTION_REJECTED, {
              action: "sendTransaction",
              transaction: tx
            });
          }
          return checkError("sendTransaction", error, hexTx);
        });
      });
    }
    signTransaction(transaction) {
      return logger18.throwError("signing transactions is unsupported", Logger.errors.UNSUPPORTED_OPERATION, {
        operation: "signTransaction"
      });
    }
    sendTransaction(transaction) {
      return __awaiter8(this, void 0, void 0, function* () {
        const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
        const hash3 = yield this.sendUncheckedTransaction(transaction);
        try {
          return yield poll(() => __awaiter8(this, void 0, void 0, function* () {
            const tx = yield this.provider.getTransaction(hash3);
            if (tx === null) {
              return void 0;
            }
            return this.provider._wrapTransaction(tx, hash3, blockNumber);
          }), { oncePoll: this.provider });
        } catch (error) {
          error.transactionHash = hash3;
          throw error;
        }
      });
    }
    signMessage(message) {
      return __awaiter8(this, void 0, void 0, function* () {
        const data = typeof message === "string" ? toUtf8Bytes(message) : message;
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("personal_sign", [hexlify(data), address.toLowerCase()]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger18.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
              action: "signMessage",
              from: address,
              messageData: message
            });
          }
          throw error;
        }
      });
    }
    _legacySignMessage(message) {
      return __awaiter8(this, void 0, void 0, function* () {
        const data = typeof message === "string" ? toUtf8Bytes(message) : message;
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("eth_sign", [address.toLowerCase(), hexlify(data)]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger18.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
              action: "_legacySignMessage",
              from: address,
              messageData: message
            });
          }
          throw error;
        }
      });
    }
    _signTypedData(domain, types, value) {
      return __awaiter8(this, void 0, void 0, function* () {
        const populated = yield TypedDataEncoder.resolveNames(domain, types, value, (name) => {
          return this.provider.resolveName(name);
        });
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("eth_signTypedData_v4", [
            address.toLowerCase(),
            JSON.stringify(TypedDataEncoder.getPayload(populated.domain, types, populated.value))
          ]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger18.throwError("user rejected signing", Logger.errors.ACTION_REJECTED, {
              action: "_signTypedData",
              from: address,
              messageData: { domain: populated.domain, types, value: populated.value }
            });
          }
          throw error;
        }
      });
    }
    unlock(password) {
      return __awaiter8(this, void 0, void 0, function* () {
        const provider = this.provider;
        const address = yield this.getAddress();
        return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
      });
    }
  };
  var UncheckedJsonRpcSigner = class extends JsonRpcSigner {
    sendTransaction(transaction) {
      return this.sendUncheckedTransaction(transaction).then((hash3) => {
        return {
          hash: hash3,
          nonce: null,
          gasLimit: null,
          gasPrice: null,
          data: null,
          value: null,
          chainId: null,
          confirmations: 0,
          from: null,
          wait: (confirmations) => {
            return this.provider.waitForTransaction(hash3, confirmations);
          }
        };
      });
    }
  };
  var allowedTransactionKeys2 = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true
  };
  var JsonRpcProvider = class extends BaseProvider {
    constructor(url, network) {
      let networkOrReady = network;
      if (networkOrReady == null) {
        networkOrReady = new Promise((resolve, reject) => {
          setTimeout(() => {
            this.detectNetwork().then((network2) => {
              resolve(network2);
            }, (error) => {
              reject(error);
            });
          }, 0);
        });
      }
      super(networkOrReady);
      if (!url) {
        url = getStatic(this.constructor, "defaultUrl")();
      }
      if (typeof url === "string") {
        defineReadOnly(this, "connection", Object.freeze({
          url
        }));
      } else {
        defineReadOnly(this, "connection", Object.freeze(shallowCopy(url)));
      }
      this._nextId = 42;
    }
    get _cache() {
      if (this._eventLoopCache == null) {
        this._eventLoopCache = {};
      }
      return this._eventLoopCache;
    }
    static defaultUrl() {
      return "http://localhost:8545";
    }
    detectNetwork() {
      if (!this._cache["detectNetwork"]) {
        this._cache["detectNetwork"] = this._uncachedDetectNetwork();
        setTimeout(() => {
          this._cache["detectNetwork"] = null;
        }, 0);
      }
      return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
      return __awaiter8(this, void 0, void 0, function* () {
        yield timer(0);
        let chainId = null;
        try {
          chainId = yield this.send("eth_chainId", []);
        } catch (error) {
          try {
            chainId = yield this.send("net_version", []);
          } catch (error2) {
          }
        }
        if (chainId != null) {
          const getNetwork22 = getStatic(this.constructor, "getNetwork");
          try {
            return getNetwork22(BigNumber.from(chainId).toNumber());
          } catch (error) {
            return logger18.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
              chainId,
              event: "invalidNetwork",
              serverError: error
            });
          }
        }
        return logger18.throwError("could not detect network", Logger.errors.NETWORK_ERROR, {
          event: "noNetwork"
        });
      });
    }
    getSigner(addressOrIndex) {
      return new JsonRpcSigner(_constructorGuard2, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
      return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
      return this.send("eth_accounts", []).then((accounts) => {
        return accounts.map((a) => this.formatter.address(a));
      });
    }
    send(method, params) {
      const request = {
        method,
        params,
        id: this._nextId++,
        jsonrpc: "2.0"
      };
      this.emit("debug", {
        action: "request",
        request: deepCopy(request),
        provider: this
      });
      const cache = ["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0;
      if (cache && this._cache[method]) {
        return this._cache[method];
      }
      const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result2) => {
        this.emit("debug", {
          action: "response",
          request,
          response: result2,
          provider: this
        });
        return result2;
      }, (error) => {
        this.emit("debug", {
          action: "response",
          error,
          request,
          provider: this
        });
        throw error;
      });
      if (cache) {
        this._cache[method] = result;
        setTimeout(() => {
          this._cache[method] = null;
        }, 0);
      }
      return result;
    }
    prepareRequest(method, params) {
      switch (method) {
        case "getBlockNumber":
          return ["eth_blockNumber", []];
        case "getGasPrice":
          return ["eth_gasPrice", []];
        case "getBalance":
          return ["eth_getBalance", [getLowerCase(params.address), params.blockTag]];
        case "getTransactionCount":
          return ["eth_getTransactionCount", [getLowerCase(params.address), params.blockTag]];
        case "getCode":
          return ["eth_getCode", [getLowerCase(params.address), params.blockTag]];
        case "getStorageAt":
          return ["eth_getStorageAt", [getLowerCase(params.address), hexZeroPad(params.position, 32), params.blockTag]];
        case "sendTransaction":
          return ["eth_sendRawTransaction", [params.signedTransaction]];
        case "getBlock":
          if (params.blockTag) {
            return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
          } else if (params.blockHash) {
            return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
          }
          return null;
        case "getTransaction":
          return ["eth_getTransactionByHash", [params.transactionHash]];
        case "getTransactionReceipt":
          return ["eth_getTransactionReceipt", [params.transactionHash]];
        case "call": {
          const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
          return ["eth_call", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];
        }
        case "estimateGas": {
          const hexlifyTransaction = getStatic(this.constructor, "hexlifyTransaction");
          return ["eth_estimateGas", [hexlifyTransaction(params.transaction, { from: true })]];
        }
        case "getLogs":
          if (params.filter && params.filter.address != null) {
            params.filter.address = getLowerCase(params.filter.address);
          }
          return ["eth_getLogs", [params.filter]];
        default:
          break;
      }
      return null;
    }
    perform(method, params) {
      return __awaiter8(this, void 0, void 0, function* () {
        if (method === "call" || method === "estimateGas") {
          const tx = params.transaction;
          if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {
            if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
              const feeData = yield this.getFeeData();
              if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                params = shallowCopy(params);
                params.transaction = shallowCopy(tx);
                delete params.transaction.type;
              }
            }
          }
        }
        const args = this.prepareRequest(method, params);
        if (args == null) {
          logger18.throwError(method + " not implemented", Logger.errors.NOT_IMPLEMENTED, { operation: method });
        }
        try {
          return yield this.send(args[0], args[1]);
        } catch (error) {
          return checkError(method, error, params);
        }
      });
    }
    _startEvent(event) {
      if (event.tag === "pending") {
        this._startPending();
      }
      super._startEvent(event);
    }
    _startPending() {
      if (this._pendingFilter != null) {
        return;
      }
      const self2 = this;
      const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
      this._pendingFilter = pendingFilter;
      pendingFilter.then(function(filterId) {
        function poll22() {
          self2.send("eth_getFilterChanges", [filterId]).then(function(hashes) {
            if (self2._pendingFilter != pendingFilter) {
              return null;
            }
            let seq = Promise.resolve();
            hashes.forEach(function(hash3) {
              self2._emitted["t:" + hash3.toLowerCase()] = "pending";
              seq = seq.then(function() {
                return self2.getTransaction(hash3).then(function(tx) {
                  self2.emit("pending", tx);
                  return null;
                });
              });
            });
            return seq.then(function() {
              return timer(1e3);
            });
          }).then(function() {
            if (self2._pendingFilter != pendingFilter) {
              self2.send("eth_uninstallFilter", [filterId]);
              return;
            }
            setTimeout(function() {
              poll22();
            }, 0);
            return null;
          }).catch((error) => {
          });
        }
        poll22();
        return filterId;
      }).catch((error) => {
      });
    }
    _stopEvent(event) {
      if (event.tag === "pending" && this.listenerCount("pending") === 0) {
        this._pendingFilter = null;
      }
      super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
      const allowed = shallowCopy(allowedTransactionKeys2);
      if (allowExtra) {
        for (const key22 in allowExtra) {
          if (allowExtra[key22]) {
            allowed[key22] = true;
          }
        }
      }
      checkProperties(transaction, allowed);
      const result = {};
      ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(key22) {
        if (transaction[key22] == null) {
          return;
        }
        const value = hexValue(BigNumber.from(transaction[key22]));
        if (key22 === "gasLimit") {
          key22 = "gas";
        }
        result[key22] = value;
      });
      ["from", "to", "data"].forEach(function(key22) {
        if (transaction[key22] == null) {
          return;
        }
        result[key22] = hexlify(transaction[key22]);
      });
      if (transaction.accessList) {
        result["accessList"] = accessListify(transaction.accessList);
      }
      return result;
    }
  };
  var logger19 = new Logger(version13);
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function bind(fn, thisArg) {
    return function wrap() {
      return fn.apply(thisArg, arguments);
    };
  }
  var { toString } = Object.prototype;
  var { getPrototypeOf } = Object;
  var kindOf = /* @__PURE__ */ ((cache) => (thing) => {
    const str = toString.call(thing);
    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
  })(/* @__PURE__ */ Object.create(null));
  var kindOfTest = (type) => {
    type = type.toLowerCase();
    return (thing) => kindOf(thing) === type;
  };
  var typeOfTest = (type) => (thing) => typeof thing === type;
  var { isArray } = Array;
  var isUndefined = typeOfTest("undefined");
  function isBuffer(val) {
    return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);
  }
  var isArrayBuffer = kindOfTest("ArrayBuffer");
  function isArrayBufferView(val) {
    let result;
    if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
      result = ArrayBuffer.isView(val);
    } else {
      result = val && val.buffer && isArrayBuffer(val.buffer);
    }
    return result;
  }
  var isString = typeOfTest("string");
  var isFunction = typeOfTest("function");
  var isNumber = typeOfTest("number");
  var isObject = (thing) => thing !== null && typeof thing === "object";
  var isBoolean = (thing) => thing === true || thing === false;
  var isPlainObject = (val) => {
    if (kindOf(val) !== "object") {
      return false;
    }
    const prototype3 = getPrototypeOf(val);
    return (prototype3 === null || prototype3 === Object.prototype || Object.getPrototypeOf(prototype3) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
  };
  var isDate = kindOfTest("Date");
  var isFile = kindOfTest("File");
  var isBlob = kindOfTest("Blob");
  var isFileList = kindOfTest("FileList");
  var isStream = (val) => isObject(val) && isFunction(val.pipe);
  var isFormData = (thing) => {
    let kind;
    return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
    kind === "object" && isFunction(thing.toString) && thing.toString() === "[object FormData]"));
  };
  var isURLSearchParams = kindOfTest("URLSearchParams");
  var [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
  var trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  function forEach(obj, fn, { allOwnKeys = false } = {}) {
    if (obj === null || typeof obj === "undefined") {
      return;
    }
    let i;
    let l;
    if (typeof obj !== "object") {
      obj = [obj];
    }
    if (isArray(obj)) {
      for (i = 0, l = obj.length; i < l; i++) {
        fn.call(null, obj[i], i, obj);
      }
    } else {
      const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
      const len = keys.length;
      let key22;
      for (i = 0; i < len; i++) {
        key22 = keys[i];
        fn.call(null, obj[key22], key22, obj);
      }
    }
  }
  function findKey(obj, key22) {
    key22 = key22.toLowerCase();
    const keys = Object.keys(obj);
    let i = keys.length;
    let _key;
    while (i-- > 0) {
      _key = keys[i];
      if (key22 === _key.toLowerCase()) {
        return _key;
      }
    }
    return null;
  }
  var _global = (() => {
    if (typeof globalThis !== "undefined")
      return globalThis;
    return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
  })();
  var isContextDefined = (context) => !isUndefined(context) && context !== _global;
  function merge() {
    const { caseless } = isContextDefined(this) && this || {};
    const result = {};
    const assignValue = (val, key22) => {
      const targetKey = caseless && findKey(result, key22) || key22;
      if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
        result[targetKey] = merge(result[targetKey], val);
      } else if (isPlainObject(val)) {
        result[targetKey] = merge({}, val);
      } else if (isArray(val)) {
        result[targetKey] = val.slice();
      } else {
        result[targetKey] = val;
      }
    };
    for (let i = 0, l = arguments.length; i < l; i++) {
      arguments[i] && forEach(arguments[i], assignValue);
    }
    return result;
  }
  var extend = (a, b, thisArg, { allOwnKeys } = {}) => {
    forEach(b, (val, key22) => {
      if (thisArg && isFunction(val)) {
        a[key22] = bind(val, thisArg);
      } else {
        a[key22] = val;
      }
    }, { allOwnKeys });
    return a;
  };
  var stripBOM = (content) => {
    if (content.charCodeAt(0) === 65279) {
      content = content.slice(1);
    }
    return content;
  };
  var inherits = (constructor, superConstructor, props, descriptors2) => {
    constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
    constructor.prototype.constructor = constructor;
    Object.defineProperty(constructor, "super", {
      value: superConstructor.prototype
    });
    props && Object.assign(constructor.prototype, props);
  };
  var toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
    let props;
    let i;
    let prop;
    const merged = {};
    destObj = destObj || {};
    if (sourceObj == null)
      return destObj;
    do {
      props = Object.getOwnPropertyNames(sourceObj);
      i = props.length;
      while (i-- > 0) {
        prop = props[i];
        if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
          destObj[prop] = sourceObj[prop];
          merged[prop] = true;
        }
      }
      sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
    } while (sourceObj && (!filter2 || filter2(sourceObj, destObj)) && sourceObj !== Object.prototype);
    return destObj;
  };
  var endsWith = (str, searchString, position) => {
    str = String(str);
    if (position === void 0 || position > str.length) {
      position = str.length;
    }
    position -= searchString.length;
    const lastIndex = str.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };
  var toArray = (thing) => {
    if (!thing)
      return null;
    if (isArray(thing))
      return thing;
    let i = thing.length;
    if (!isNumber(i))
      return null;
    const arr = new Array(i);
    while (i-- > 0) {
      arr[i] = thing[i];
    }
    return arr;
  };
  var isTypedArray = /* @__PURE__ */ ((TypedArray) => {
    return (thing) => {
      return TypedArray && thing instanceof TypedArray;
    };
  })(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
  var forEachEntry = (obj, fn) => {
    const generator = obj && obj[Symbol.iterator];
    const iterator = generator.call(obj);
    let result;
    while ((result = iterator.next()) && !result.done) {
      const pair = result.value;
      fn.call(obj, pair[0], pair[1]);
    }
  };
  var matchAll = (regExp, str) => {
    let matches;
    const arr = [];
    while ((matches = regExp.exec(str)) !== null) {
      arr.push(matches);
    }
    return arr;
  };
  var isHTMLForm = kindOfTest("HTMLFormElement");
  var toCamelCase = (str) => {
    return str.toLowerCase().replace(
      /[-_\s]([a-z\d])(\w*)/g,
      function replacer(m, p1, p2) {
        return p1.toUpperCase() + p2;
      }
    );
  };
  var hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
  var isRegExp = kindOfTest("RegExp");
  var reduceDescriptors = (obj, reducer) => {
    const descriptors2 = Object.getOwnPropertyDescriptors(obj);
    const reducedDescriptors = {};
    forEach(descriptors2, (descriptor, name) => {
      let ret;
      if ((ret = reducer(descriptor, name, obj)) !== false) {
        reducedDescriptors[name] = ret || descriptor;
      }
    });
    Object.defineProperties(obj, reducedDescriptors);
  };
  var freezeMethods = (obj) => {
    reduceDescriptors(obj, (descriptor, name) => {
      if (isFunction(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1) {
        return false;
      }
      const value = obj[name];
      if (!isFunction(value))
        return;
      descriptor.enumerable = false;
      if ("writable" in descriptor) {
        descriptor.writable = false;
        return;
      }
      if (!descriptor.set) {
        descriptor.set = () => {
          throw Error("Can not rewrite read-only method '" + name + "'");
        };
      }
    });
  };
  var toObjectSet = (arrayOrString, delimiter) => {
    const obj = {};
    const define2 = (arr) => {
      arr.forEach((value) => {
        obj[value] = true;
      });
    };
    isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter));
    return obj;
  };
  var noop = () => {
  };
  var toFiniteNumber = (value, defaultValue) => {
    return value != null && Number.isFinite(value = +value) ? value : defaultValue;
  };
  var ALPHA = "abcdefghijklmnopqrstuvwxyz";
  var DIGIT = "0123456789";
  var ALPHABET = {
    DIGIT,
    ALPHA,
    ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
  };
  var generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
    let str = "";
    const { length } = alphabet;
    while (size--) {
      str += alphabet[Math.random() * length | 0];
    }
    return str;
  };
  function isSpecCompliantForm(thing) {
    return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
  }
  var toJSONObject = (obj) => {
    const stack = new Array(10);
    const visit = (source, i) => {
      if (isObject(source)) {
        if (stack.indexOf(source) >= 0) {
          return;
        }
        if (!("toJSON" in source)) {
          stack[i] = source;
          const target = isArray(source) ? [] : {};
          forEach(source, (value, key22) => {
            const reducedValue = visit(value, i + 1);
            !isUndefined(reducedValue) && (target[key22] = reducedValue);
          });
          stack[i] = void 0;
          return target;
        }
      }
      return source;
    };
    return visit(obj, 0);
  };
  var isAsyncFn = kindOfTest("AsyncFunction");
  var isThenable = (thing) => thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);
  var utils_default = {
    isArray,
    isArrayBuffer,
    isBuffer,
    isFormData,
    isArrayBufferView,
    isString,
    isNumber,
    isBoolean,
    isObject,
    isPlainObject,
    isReadableStream,
    isRequest,
    isResponse,
    isHeaders,
    isUndefined,
    isDate,
    isFile,
    isBlob,
    isRegExp,
    isFunction,
    isStream,
    isURLSearchParams,
    isTypedArray,
    isFileList,
    forEach,
    merge,
    extend,
    trim,
    stripBOM,
    inherits,
    toFlatObject,
    kindOf,
    kindOfTest,
    endsWith,
    toArray,
    forEachEntry,
    matchAll,
    isHTMLForm,
    hasOwnProperty,
    hasOwnProp: hasOwnProperty,
    // an alias to avoid ESLint no-prototype-builtins detection
    reduceDescriptors,
    freezeMethods,
    toObjectSet,
    toCamelCase,
    noop,
    toFiniteNumber,
    findKey,
    global: _global,
    isContextDefined,
    ALPHABET,
    generateString,
    isSpecCompliantForm,
    toJSONObject,
    isAsyncFn,
    isThenable
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function AxiosError(message, code, config, request, response) {
    Error.call(this);
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    } else {
      this.stack = new Error().stack;
    }
    this.message = message;
    this.name = "AxiosError";
    code && (this.code = code);
    config && (this.config = config);
    request && (this.request = request);
    response && (this.response = response);
  }
  utils_default.inherits(AxiosError, Error, {
    toJSON: function toJSON2() {
      return {
        // Standard
        message: this.message,
        name: this.name,
        // Microsoft
        description: this.description,
        number: this.number,
        // Mozilla
        fileName: this.fileName,
        lineNumber: this.lineNumber,
        columnNumber: this.columnNumber,
        stack: this.stack,
        // Axios
        config: utils_default.toJSONObject(this.config),
        code: this.code,
        status: this.response && this.response.status ? this.response.status : null
      };
    }
  });
  var prototype = AxiosError.prototype;
  var descriptors = {};
  [
    "ERR_BAD_OPTION_VALUE",
    "ERR_BAD_OPTION",
    "ECONNABORTED",
    "ETIMEDOUT",
    "ERR_NETWORK",
    "ERR_FR_TOO_MANY_REDIRECTS",
    "ERR_DEPRECATED",
    "ERR_BAD_RESPONSE",
    "ERR_BAD_REQUEST",
    "ERR_CANCELED",
    "ERR_NOT_SUPPORT",
    "ERR_INVALID_URL"
    // eslint-disable-next-line func-names
  ].forEach((code) => {
    descriptors[code] = { value: code };
  });
  Object.defineProperties(AxiosError, descriptors);
  Object.defineProperty(prototype, "isAxiosError", { value: true });
  AxiosError.from = (error, code, config, request, response, customProps) => {
    const axiosError = Object.create(prototype);
    utils_default.toFlatObject(error, axiosError, function filter2(obj) {
      return obj !== Error.prototype;
    }, (prop) => {
      return prop !== "isAxiosError";
    });
    AxiosError.call(axiosError, error.message, code, config, request, response);
    axiosError.cause = error;
    axiosError.name = error.name;
    customProps && Object.assign(axiosError, customProps);
    return axiosError;
  };
  var AxiosError_default = AxiosError;
  init_define_chainIDList();
  init_define_extraRpcs();
  var null_default = null;
  function isVisitable(thing) {
    return utils_default.isPlainObject(thing) || utils_default.isArray(thing);
  }
  function removeBrackets(key22) {
    return utils_default.endsWith(key22, "[]") ? key22.slice(0, -2) : key22;
  }
  function renderKey(path, key22, dots) {
    if (!path)
      return key22;
    return path.concat(key22).map(function each(token, i) {
      token = removeBrackets(token);
      return !dots && i ? "[" + token + "]" : token;
    }).join(dots ? "." : "");
  }
  function isFlatArray(arr) {
    return utils_default.isArray(arr) && !arr.some(isVisitable);
  }
  var predicates = utils_default.toFlatObject(utils_default, {}, null, function filter(prop) {
    return /^is[A-Z]/.test(prop);
  });
  function toFormData(obj, formData, options) {
    if (!utils_default.isObject(obj)) {
      throw new TypeError("target must be an object");
    }
    formData = formData || new (null_default || FormData)();
    options = utils_default.toFlatObject(options, {
      metaTokens: true,
      dots: false,
      indexes: false
    }, false, function defined(option, source) {
      return !utils_default.isUndefined(source[option]);
    });
    const metaTokens = options.metaTokens;
    const visitor = options.visitor || defaultVisitor;
    const dots = options.dots;
    const indexes = options.indexes;
    const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
    const useBlob = _Blob && utils_default.isSpecCompliantForm(formData);
    if (!utils_default.isFunction(visitor)) {
      throw new TypeError("visitor must be a function");
    }
    function convertValue(value) {
      if (value === null)
        return "";
      if (utils_default.isDate(value)) {
        return value.toISOString();
      }
      if (!useBlob && utils_default.isBlob(value)) {
        throw new AxiosError_default("Blob is not supported. Use a Buffer instead.");
      }
      if (utils_default.isArrayBuffer(value) || utils_default.isTypedArray(value)) {
        return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
      }
      return value;
    }
    function defaultVisitor(value, key22, path) {
      let arr = value;
      if (value && !path && typeof value === "object") {
        if (utils_default.endsWith(key22, "{}")) {
          key22 = metaTokens ? key22 : key22.slice(0, -2);
          value = JSON.stringify(value);
        } else if (utils_default.isArray(value) && isFlatArray(value) || (utils_default.isFileList(value) || utils_default.endsWith(key22, "[]")) && (arr = utils_default.toArray(value))) {
          key22 = removeBrackets(key22);
          arr.forEach(function each(el, index2) {
            !(utils_default.isUndefined(el) || el === null) && formData.append(
              // eslint-disable-next-line no-nested-ternary
              indexes === true ? renderKey([key22], index2, dots) : indexes === null ? key22 : key22 + "[]",
              convertValue(el)
            );
          });
          return false;
        }
      }
      if (isVisitable(value)) {
        return true;
      }
      formData.append(renderKey(path, key22, dots), convertValue(value));
      return false;
    }
    const stack = [];
    const exposedHelpers = Object.assign(predicates, {
      defaultVisitor,
      convertValue,
      isVisitable
    });
    function build(value, path) {
      if (utils_default.isUndefined(value))
        return;
      if (stack.indexOf(value) !== -1) {
        throw Error("Circular reference detected in " + path.join("."));
      }
      stack.push(value);
      utils_default.forEach(value, function each(el, key22) {
        const result = !(utils_default.isUndefined(el) || el === null) && visitor.call(
          formData,
          el,
          utils_default.isString(key22) ? key22.trim() : key22,
          path,
          exposedHelpers
        );
        if (result === true) {
          build(el, path ? path.concat(key22) : [key22]);
        }
      });
      stack.pop();
    }
    if (!utils_default.isObject(obj)) {
      throw new TypeError("data must be an object");
    }
    build(obj);
    return formData;
  }
  var toFormData_default = toFormData;
  function encode4(str) {
    const charMap = {
      "!": "%21",
      "'": "%27",
      "(": "%28",
      ")": "%29",
      "~": "%7E",
      "%20": "+",
      "%00": "\0"
    };
    return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
      return charMap[match];
    });
  }
  function AxiosURLSearchParams(params, options) {
    this._pairs = [];
    params && toFormData_default(params, this, options);
  }
  var prototype2 = AxiosURLSearchParams.prototype;
  prototype2.append = function append(name, value) {
    this._pairs.push([name, value]);
  };
  prototype2.toString = function toString2(encoder) {
    const _encode32 = encoder ? function(value) {
      return encoder.call(this, value, encode4);
    } : encode4;
    return this._pairs.map(function each(pair) {
      return _encode32(pair[0]) + "=" + _encode32(pair[1]);
    }, "").join("&");
  };
  var AxiosURLSearchParams_default = AxiosURLSearchParams;
  function encode5(val) {
    return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
  }
  function buildURL(url, params, options) {
    if (!params) {
      return url;
    }
    const _encode32 = options && options.encode || encode5;
    const serializeFn = options && options.serialize;
    let serializedParams;
    if (serializeFn) {
      serializedParams = serializeFn(params, options);
    } else {
      serializedParams = utils_default.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams_default(params, options).toString(_encode32);
    }
    if (serializedParams) {
      const hashmarkIndex = url.indexOf("#");
      if (hashmarkIndex !== -1) {
        url = url.slice(0, hashmarkIndex);
      }
      url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
    }
    return url;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var InterceptorManager = class {
    constructor() {
      this.handlers = [];
    }
    /**
     * Add a new interceptor to the stack
     *
     * @param {Function} fulfilled The function to handle `then` for a `Promise`
     * @param {Function} rejected The function to handle `reject` for a `Promise`
     *
     * @return {Number} An ID used to remove interceptor later
     */
    use(fulfilled, rejected, options) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options ? options.synchronous : false,
        runWhen: options ? options.runWhen : null
      });
      return this.handlers.length - 1;
    }
    /**
     * Remove an interceptor from the stack
     *
     * @param {Number} id The ID that was returned by `use`
     *
     * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
     */
    eject(id22) {
      if (this.handlers[id22]) {
        this.handlers[id22] = null;
      }
    }
    /**
     * Clear all interceptors from the stack
     *
     * @returns {void}
     */
    clear() {
      if (this.handlers) {
        this.handlers = [];
      }
    }
    /**
     * Iterate over all the registered interceptors
     *
     * This method is particularly useful for skipping over any
     * interceptors that may have become `null` calling `eject`.
     *
     * @param {Function} fn The function to call for each interceptor
     *
     * @returns {void}
     */
    forEach(fn) {
      utils_default.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    }
  };
  var InterceptorManager_default = InterceptorManager;
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var transitional_default = {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var URLSearchParams_default = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams_default;
  init_define_chainIDList();
  init_define_extraRpcs();
  var FormData_default = typeof FormData !== "undefined" ? FormData : null;
  init_define_chainIDList();
  init_define_extraRpcs();
  var Blob_default = typeof Blob !== "undefined" ? Blob : null;
  var browser_default = {
    isBrowser: true,
    classes: {
      URLSearchParams: URLSearchParams_default,
      FormData: FormData_default,
      Blob: Blob_default
    },
    protocols: ["http", "https", "file", "blob", "url", "data"]
  };
  var utils_exports = {};
  __export2(utils_exports, {
    hasBrowserEnv: () => hasBrowserEnv,
    hasStandardBrowserEnv: () => hasStandardBrowserEnv,
    hasStandardBrowserWebWorkerEnv: () => hasStandardBrowserWebWorkerEnv,
    origin: () => origin
  });
  init_define_chainIDList();
  init_define_extraRpcs();
  var hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
  var hasStandardBrowserEnv = ((product) => {
    return hasBrowserEnv && ["ReactNative", "NativeScript", "NS"].indexOf(product) < 0;
  })(typeof navigator !== "undefined" && navigator.product);
  var hasStandardBrowserWebWorkerEnv = (() => {
    return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
    self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
  })();
  var origin = hasBrowserEnv && window.location.href || "http://localhost";
  var platform_default = {
    ...utils_exports,
    ...browser_default
  };
  function toURLEncodedForm(data, options) {
    return toFormData_default(data, new platform_default.classes.URLSearchParams(), Object.assign({
      visitor: function(value, key22, path, helpers) {
        if (platform_default.isNode && utils_default.isBuffer(value)) {
          this.append(key22, value.toString("base64"));
          return false;
        }
        return helpers.defaultVisitor.apply(this, arguments);
      }
    }, options));
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function parsePropPath(name) {
    return utils_default.matchAll(/\w+|\[(\w*)]/g, name).map((match) => {
      return match[0] === "[]" ? "" : match[1] || match[0];
    });
  }
  function arrayToObject(arr) {
    const obj = {};
    const keys = Object.keys(arr);
    let i;
    const len = keys.length;
    let key22;
    for (i = 0; i < len; i++) {
      key22 = keys[i];
      obj[key22] = arr[key22];
    }
    return obj;
  }
  function formDataToJSON(formData) {
    function buildPath(path, value, target, index2) {
      let name = path[index2++];
      if (name === "__proto__")
        return true;
      const isNumericKey = Number.isFinite(+name);
      const isLast = index2 >= path.length;
      name = !name && utils_default.isArray(target) ? target.length : name;
      if (isLast) {
        if (utils_default.hasOwnProp(target, name)) {
          target[name] = [target[name], value];
        } else {
          target[name] = value;
        }
        return !isNumericKey;
      }
      if (!target[name] || !utils_default.isObject(target[name])) {
        target[name] = [];
      }
      const result = buildPath(path, value, target[name], index2);
      if (result && utils_default.isArray(target[name])) {
        target[name] = arrayToObject(target[name]);
      }
      return !isNumericKey;
    }
    if (utils_default.isFormData(formData) && utils_default.isFunction(formData.entries)) {
      const obj = {};
      utils_default.forEachEntry(formData, (name, value) => {
        buildPath(parsePropPath(name), value, obj, 0);
      });
      return obj;
    }
    return null;
  }
  var formDataToJSON_default = formDataToJSON;
  function stringifySafely(rawValue, parser, encoder) {
    if (utils_default.isString(rawValue)) {
      try {
        (parser || JSON.parse)(rawValue);
        return utils_default.trim(rawValue);
      } catch (e) {
        if (e.name !== "SyntaxError") {
          throw e;
        }
      }
    }
    return (encoder || JSON.stringify)(rawValue);
  }
  var defaults = {
    transitional: transitional_default,
    adapter: ["xhr", "http", "fetch"],
    transformRequest: [function transformRequest(data, headers) {
      const contentType = headers.getContentType() || "";
      const hasJSONContentType = contentType.indexOf("application/json") > -1;
      const isObjectPayload = utils_default.isObject(data);
      if (isObjectPayload && utils_default.isHTMLForm(data)) {
        data = new FormData(data);
      }
      const isFormData2 = utils_default.isFormData(data);
      if (isFormData2) {
        return hasJSONContentType ? JSON.stringify(formDataToJSON_default(data)) : data;
      }
      if (utils_default.isArrayBuffer(data) || utils_default.isBuffer(data) || utils_default.isStream(data) || utils_default.isFile(data) || utils_default.isBlob(data) || utils_default.isReadableStream(data)) {
        return data;
      }
      if (utils_default.isArrayBufferView(data)) {
        return data.buffer;
      }
      if (utils_default.isURLSearchParams(data)) {
        headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
        return data.toString();
      }
      let isFileList2;
      if (isObjectPayload) {
        if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
          return toURLEncodedForm(data, this.formSerializer).toString();
        }
        if ((isFileList2 = utils_default.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
          const _FormData = this.env && this.env.FormData;
          return toFormData_default(
            isFileList2 ? { "files[]": data } : data,
            _FormData && new _FormData(),
            this.formSerializer
          );
        }
      }
      if (isObjectPayload || hasJSONContentType) {
        headers.setContentType("application/json", false);
        return stringifySafely(data);
      }
      return data;
    }],
    transformResponse: [function transformResponse(data) {
      const transitional2 = this.transitional || defaults.transitional;
      const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
      const JSONRequested = this.responseType === "json";
      if (utils_default.isResponse(data) || utils_default.isReadableStream(data)) {
        return data;
      }
      if (data && utils_default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
        const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
        const strictJSONParsing = !silentJSONParsing && JSONRequested;
        try {
          return JSON.parse(data);
        } catch (e) {
          if (strictJSONParsing) {
            if (e.name === "SyntaxError") {
              throw AxiosError_default.from(e, AxiosError_default.ERR_BAD_RESPONSE, this, null, this.response);
            }
            throw e;
          }
        }
      }
      return data;
    }],
    /**
     * A timeout in milliseconds to abort a request. If set to 0 (default) a
     * timeout is not created.
     */
    timeout: 0,
    xsrfCookieName: "XSRF-TOKEN",
    xsrfHeaderName: "X-XSRF-TOKEN",
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: platform_default.classes.FormData,
      Blob: platform_default.classes.Blob
    },
    validateStatus: function validateStatus(status) {
      return status >= 200 && status < 300;
    },
    headers: {
      common: {
        "Accept": "application/json, text/plain, */*",
        "Content-Type": void 0
      }
    }
  };
  utils_default.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
    defaults.headers[method] = {};
  });
  var defaults_default = defaults;
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var ignoreDuplicateOf = utils_default.toObjectSet([
    "age",
    "authorization",
    "content-length",
    "content-type",
    "etag",
    "expires",
    "from",
    "host",
    "if-modified-since",
    "if-unmodified-since",
    "last-modified",
    "location",
    "max-forwards",
    "proxy-authorization",
    "referer",
    "retry-after",
    "user-agent"
  ]);
  var parseHeaders_default = (rawHeaders) => {
    const parsed = {};
    let key22;
    let val;
    let i;
    rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
      i = line.indexOf(":");
      key22 = line.substring(0, i).trim().toLowerCase();
      val = line.substring(i + 1).trim();
      if (!key22 || parsed[key22] && ignoreDuplicateOf[key22]) {
        return;
      }
      if (key22 === "set-cookie") {
        if (parsed[key22]) {
          parsed[key22].push(val);
        } else {
          parsed[key22] = [val];
        }
      } else {
        parsed[key22] = parsed[key22] ? parsed[key22] + ", " + val : val;
      }
    });
    return parsed;
  };
  var $internals = Symbol("internals");
  function normalizeHeader(header) {
    return header && String(header).trim().toLowerCase();
  }
  function normalizeValue(value) {
    if (value === false || value == null) {
      return value;
    }
    return utils_default.isArray(value) ? value.map(normalizeValue) : String(value);
  }
  function parseTokens(str) {
    const tokens2 = /* @__PURE__ */ Object.create(null);
    const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
    let match;
    while (match = tokensRE.exec(str)) {
      tokens2[match[1]] = match[2];
    }
    return tokens2;
  }
  var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
  function matchHeaderValue(context, value, header, filter2, isHeaderNameFilter) {
    if (utils_default.isFunction(filter2)) {
      return filter2.call(this, value, header);
    }
    if (isHeaderNameFilter) {
      value = header;
    }
    if (!utils_default.isString(value))
      return;
    if (utils_default.isString(filter2)) {
      return value.indexOf(filter2) !== -1;
    }
    if (utils_default.isRegExp(filter2)) {
      return filter2.test(value);
    }
  }
  function formatHeader(header) {
    return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w, char, str) => {
      return char.toUpperCase() + str;
    });
  }
  function buildAccessors(obj, header) {
    const accessorName = utils_default.toCamelCase(" " + header);
    ["get", "set", "has"].forEach((methodName) => {
      Object.defineProperty(obj, methodName + accessorName, {
        value: function(arg1, arg2, arg3) {
          return this[methodName].call(this, header, arg1, arg2, arg3);
        },
        configurable: true
      });
    });
  }
  var AxiosHeaders = class {
    constructor(headers) {
      headers && this.set(headers);
    }
    set(header, valueOrRewrite, rewrite) {
      const self2 = this;
      function setHeader(_value, _header, _rewrite) {
        const lHeader = normalizeHeader(_header);
        if (!lHeader) {
          throw new Error("header name must be a non-empty string");
        }
        const key22 = utils_default.findKey(self2, lHeader);
        if (!key22 || self2[key22] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key22] !== false) {
          self2[key22 || _header] = normalizeValue(_value);
        }
      }
      const setHeaders = (headers, _rewrite) => utils_default.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
      if (utils_default.isPlainObject(header) || header instanceof this.constructor) {
        setHeaders(header, valueOrRewrite);
      } else if (utils_default.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
        setHeaders(parseHeaders_default(header), valueOrRewrite);
      } else if (utils_default.isHeaders(header)) {
        for (const [key22, value] of header.entries()) {
          setHeader(value, key22, rewrite);
        }
      } else {
        header != null && setHeader(valueOrRewrite, header, rewrite);
      }
      return this;
    }
    get(header, parser) {
      header = normalizeHeader(header);
      if (header) {
        const key22 = utils_default.findKey(this, header);
        if (key22) {
          const value = this[key22];
          if (!parser) {
            return value;
          }
          if (parser === true) {
            return parseTokens(value);
          }
          if (utils_default.isFunction(parser)) {
            return parser.call(this, value, key22);
          }
          if (utils_default.isRegExp(parser)) {
            return parser.exec(value);
          }
          throw new TypeError("parser must be boolean|regexp|function");
        }
      }
    }
    has(header, matcher) {
      header = normalizeHeader(header);
      if (header) {
        const key22 = utils_default.findKey(this, header);
        return !!(key22 && this[key22] !== void 0 && (!matcher || matchHeaderValue(this, this[key22], key22, matcher)));
      }
      return false;
    }
    delete(header, matcher) {
      const self2 = this;
      let deleted = false;
      function deleteHeader(_header) {
        _header = normalizeHeader(_header);
        if (_header) {
          const key22 = utils_default.findKey(self2, _header);
          if (key22 && (!matcher || matchHeaderValue(self2, self2[key22], key22, matcher))) {
            delete self2[key22];
            deleted = true;
          }
        }
      }
      if (utils_default.isArray(header)) {
        header.forEach(deleteHeader);
      } else {
        deleteHeader(header);
      }
      return deleted;
    }
    clear(matcher) {
      const keys = Object.keys(this);
      let i = keys.length;
      let deleted = false;
      while (i--) {
        const key22 = keys[i];
        if (!matcher || matchHeaderValue(this, this[key22], key22, matcher, true)) {
          delete this[key22];
          deleted = true;
        }
      }
      return deleted;
    }
    normalize(format) {
      const self2 = this;
      const headers = {};
      utils_default.forEach(this, (value, header) => {
        const key22 = utils_default.findKey(headers, header);
        if (key22) {
          self2[key22] = normalizeValue(value);
          delete self2[header];
          return;
        }
        const normalized = format ? formatHeader(header) : String(header).trim();
        if (normalized !== header) {
          delete self2[header];
        }
        self2[normalized] = normalizeValue(value);
        headers[normalized] = true;
      });
      return this;
    }
    concat(...targets) {
      return this.constructor.concat(this, ...targets);
    }
    toJSON(asStrings) {
      const obj = /* @__PURE__ */ Object.create(null);
      utils_default.forEach(this, (value, header) => {
        value != null && value !== false && (obj[header] = asStrings && utils_default.isArray(value) ? value.join(", ") : value);
      });
      return obj;
    }
    [Symbol.iterator]() {
      return Object.entries(this.toJSON())[Symbol.iterator]();
    }
    toString() {
      return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
    }
    get [Symbol.toStringTag]() {
      return "AxiosHeaders";
    }
    static from(thing) {
      return thing instanceof this ? thing : new this(thing);
    }
    static concat(first, ...targets) {
      const computed = new this(first);
      targets.forEach((target) => computed.set(target));
      return computed;
    }
    static accessor(header) {
      const internals2 = this[$internals] = this[$internals] = {
        accessors: {}
      };
      const accessors = internals2.accessors;
      const prototype3 = this.prototype;
      function defineAccessor(_header) {
        const lHeader = normalizeHeader(_header);
        if (!accessors[lHeader]) {
          buildAccessors(prototype3, _header);
          accessors[lHeader] = true;
        }
      }
      utils_default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
      return this;
    }
  };
  AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
  utils_default.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key22) => {
    let mapped = key22[0].toUpperCase() + key22.slice(1);
    return {
      get: () => value,
      set(headerValue) {
        this[mapped] = headerValue;
      }
    };
  });
  utils_default.freezeMethods(AxiosHeaders);
  var AxiosHeaders_default = AxiosHeaders;
  function transformData(fns, response) {
    const config = this || defaults_default;
    const context = response || config;
    const headers = AxiosHeaders_default.from(context.headers);
    let data = context.data;
    utils_default.forEach(fns, function transform(fn) {
      data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
    });
    headers.normalize();
    return data;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function isCancel(value) {
    return !!(value && value.__CANCEL__);
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function CanceledError(message, config, request) {
    AxiosError_default.call(this, message == null ? "canceled" : message, AxiosError_default.ERR_CANCELED, config, request);
    this.name = "CanceledError";
  }
  utils_default.inherits(CanceledError, AxiosError_default, {
    __CANCEL__: true
  });
  var CanceledError_default = CanceledError;
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function settle(resolve, reject, response) {
    const validateStatus2 = response.config.validateStatus;
    if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
      resolve(response);
    } else {
      reject(new AxiosError_default(
        "Request failed with status code " + response.status,
        [AxiosError_default.ERR_BAD_REQUEST, AxiosError_default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
        response.config,
        response.request,
        response
      ));
    }
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function parseProtocol(url) {
    const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
    return match && match[1] || "";
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function speedometer(samplesCount, min) {
    samplesCount = samplesCount || 10;
    const bytes = new Array(samplesCount);
    const timestamps = new Array(samplesCount);
    let head = 0;
    let tail = 0;
    let firstSampleTS;
    min = min !== void 0 ? min : 1e3;
    return function push(chunkLength) {
      const now2 = Date.now();
      const startedAt = timestamps[tail];
      if (!firstSampleTS) {
        firstSampleTS = now2;
      }
      bytes[head] = chunkLength;
      timestamps[head] = now2;
      let i = tail;
      let bytesCount = 0;
      while (i !== head) {
        bytesCount += bytes[i++];
        i = i % samplesCount;
      }
      head = (head + 1) % samplesCount;
      if (head === tail) {
        tail = (tail + 1) % samplesCount;
      }
      if (now2 - firstSampleTS < min) {
        return;
      }
      const passed = startedAt && now2 - startedAt;
      return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
    };
  }
  var speedometer_default = speedometer;
  init_define_chainIDList();
  init_define_extraRpcs();
  function throttle(fn, freq) {
    let timestamp = 0;
    const threshold = 1e3 / freq;
    let timer22 = null;
    return function throttled() {
      const force = this === true;
      const now2 = Date.now();
      if (force || now2 - timestamp > threshold) {
        if (timer22) {
          clearTimeout(timer22);
          timer22 = null;
        }
        timestamp = now2;
        return fn.apply(null, arguments);
      }
      if (!timer22) {
        timer22 = setTimeout(() => {
          timer22 = null;
          timestamp = Date.now();
          return fn.apply(null, arguments);
        }, threshold - (now2 - timestamp));
      }
    };
  }
  var throttle_default = throttle;
  var progressEventReducer_default = (listener, isDownloadStream, freq = 3) => {
    let bytesNotified = 0;
    const _speedometer = speedometer_default(50, 250);
    return throttle_default((e) => {
      const loaded = e.loaded;
      const total = e.lengthComputable ? e.total : void 0;
      const progressBytes = loaded - bytesNotified;
      const rate = _speedometer(progressBytes);
      const inRange = loaded <= total;
      bytesNotified = loaded;
      const data = {
        loaded,
        total,
        progress: total ? loaded / total : void 0,
        bytes: progressBytes,
        rate: rate ? rate : void 0,
        estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
        event: e,
        lengthComputable: total != null
      };
      data[isDownloadStream ? "download" : "upload"] = true;
      listener(data);
    }, freq);
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var isURLSameOrigin_default = platform_default.hasStandardBrowserEnv ? (
    // Standard browser envs have full support of the APIs needed to test
    // whether the request URL is of the same origin as current location.
    function standardBrowserEnv() {
      const msie = /(msie|trident)/i.test(navigator.userAgent);
      const urlParsingNode = document.createElement("a");
      let originURL;
      function resolveURL(url) {
        let href = url;
        if (msie) {
          urlParsingNode.setAttribute("href", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute("href", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        const parsed = utils_default.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }()
  ) : (
    // Non standard browser envs (web workers, react-native) lack needed support.
    /* @__PURE__ */ function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }()
  );
  init_define_chainIDList();
  init_define_extraRpcs();
  var cookies_default = platform_default.hasStandardBrowserEnv ? (
    // Standard browser envs support document.cookie
    {
      write(name, value, expires, path, domain, secure) {
        const cookie = [name + "=" + encodeURIComponent(value)];
        utils_default.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
        utils_default.isString(path) && cookie.push("path=" + path);
        utils_default.isString(domain) && cookie.push("domain=" + domain);
        secure === true && cookie.push("secure");
        document.cookie = cookie.join("; ");
      },
      read(name) {
        const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
        return match ? decodeURIComponent(match[3]) : null;
      },
      remove(name) {
        this.write(name, "", Date.now() - 864e5);
      }
    }
  ) : (
    // Non-standard browser env (web workers, react-native) lack needed support.
    {
      write() {
      },
      read() {
        return null;
      },
      remove() {
      }
    }
  );
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  function isAbsoluteURL(url) {
    return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function combineURLs(baseURL, relativeURL) {
    return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
  }
  function buildFullPath(baseURL, requestedURL) {
    if (baseURL && !isAbsoluteURL(requestedURL)) {
      return combineURLs(baseURL, requestedURL);
    }
    return requestedURL;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var headersToObject = (thing) => thing instanceof AxiosHeaders_default ? { ...thing } : thing;
  function mergeConfig(config1, config2) {
    config2 = config2 || {};
    const config = {};
    function getMergedValue(target, source, caseless) {
      if (utils_default.isPlainObject(target) && utils_default.isPlainObject(source)) {
        return utils_default.merge.call({ caseless }, target, source);
      } else if (utils_default.isPlainObject(source)) {
        return utils_default.merge({}, source);
      } else if (utils_default.isArray(source)) {
        return source.slice();
      }
      return source;
    }
    function mergeDeepProperties(a, b, caseless) {
      if (!utils_default.isUndefined(b)) {
        return getMergedValue(a, b, caseless);
      } else if (!utils_default.isUndefined(a)) {
        return getMergedValue(void 0, a, caseless);
      }
    }
    function valueFromConfig2(a, b) {
      if (!utils_default.isUndefined(b)) {
        return getMergedValue(void 0, b);
      }
    }
    function defaultToConfig2(a, b) {
      if (!utils_default.isUndefined(b)) {
        return getMergedValue(void 0, b);
      } else if (!utils_default.isUndefined(a)) {
        return getMergedValue(void 0, a);
      }
    }
    function mergeDirectKeys(a, b, prop) {
      if (prop in config2) {
        return getMergedValue(a, b);
      } else if (prop in config1) {
        return getMergedValue(void 0, a);
      }
    }
    const mergeMap = {
      url: valueFromConfig2,
      method: valueFromConfig2,
      data: valueFromConfig2,
      baseURL: defaultToConfig2,
      transformRequest: defaultToConfig2,
      transformResponse: defaultToConfig2,
      paramsSerializer: defaultToConfig2,
      timeout: defaultToConfig2,
      timeoutMessage: defaultToConfig2,
      withCredentials: defaultToConfig2,
      withXSRFToken: defaultToConfig2,
      adapter: defaultToConfig2,
      responseType: defaultToConfig2,
      xsrfCookieName: defaultToConfig2,
      xsrfHeaderName: defaultToConfig2,
      onUploadProgress: defaultToConfig2,
      onDownloadProgress: defaultToConfig2,
      decompress: defaultToConfig2,
      maxContentLength: defaultToConfig2,
      maxBodyLength: defaultToConfig2,
      beforeRedirect: defaultToConfig2,
      transport: defaultToConfig2,
      httpAgent: defaultToConfig2,
      httpsAgent: defaultToConfig2,
      cancelToken: defaultToConfig2,
      socketPath: defaultToConfig2,
      responseEncoding: defaultToConfig2,
      validateStatus: mergeDirectKeys,
      headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)
    };
    utils_default.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {
      const merge2 = mergeMap[prop] || mergeDeepProperties;
      const configValue = merge2(config1[prop], config2[prop], prop);
      utils_default.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
    });
    return config;
  }
  var resolveConfig_default = (config) => {
    const newConfig = mergeConfig({}, config);
    let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
    newConfig.headers = headers = AxiosHeaders_default.from(headers);
    newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);
    if (auth) {
      headers.set(
        "Authorization",
        "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
      );
    }
    let contentType;
    if (utils_default.isFormData(data)) {
      if (platform_default.hasStandardBrowserEnv || platform_default.hasStandardBrowserWebWorkerEnv) {
        headers.setContentType(void 0);
      } else if ((contentType = headers.getContentType()) !== false) {
        const [type, ...tokens2] = contentType ? contentType.split(";").map((token) => token.trim()).filter(Boolean) : [];
        headers.setContentType([type || "multipart/form-data", ...tokens2].join("; "));
      }
    }
    if (platform_default.hasStandardBrowserEnv) {
      withXSRFToken && utils_default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
      if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin_default(newConfig.url)) {
        const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies_default.read(xsrfCookieName);
        if (xsrfValue) {
          headers.set(xsrfHeaderName, xsrfValue);
        }
      }
    }
    return newConfig;
  };
  var isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
  var xhr_default = isXHRAdapterSupported && function(config) {
    return new Promise(function dispatchXhrRequest(resolve, reject) {
      const _config = resolveConfig_default(config);
      let requestData = _config.data;
      const requestHeaders = AxiosHeaders_default.from(_config.headers).normalize();
      let { responseType } = _config;
      let onCanceled;
      function done() {
        if (_config.cancelToken) {
          _config.cancelToken.unsubscribe(onCanceled);
        }
        if (_config.signal) {
          _config.signal.removeEventListener("abort", onCanceled);
        }
      }
      let request = new XMLHttpRequest();
      request.open(_config.method.toUpperCase(), _config.url, true);
      request.timeout = _config.timeout;
      function onloadend() {
        if (!request) {
          return;
        }
        const responseHeaders = AxiosHeaders_default.from(
          "getAllResponseHeaders" in request && request.getAllResponseHeaders()
        );
        const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
        const response = {
          data: responseData,
          status: request.status,
          statusText: request.statusText,
          headers: responseHeaders,
          config,
          request
        };
        settle(function _resolve(value) {
          resolve(value);
          done();
        }, function _reject(err) {
          reject(err);
          done();
        }, response);
        request = null;
      }
      if ("onloadend" in request) {
        request.onloadend = onloadend;
      } else {
        request.onreadystatechange = function handleLoad() {
          if (!request || request.readyState !== 4) {
            return;
          }
          if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
            return;
          }
          setTimeout(onloadend);
        };
      }
      request.onabort = function handleAbort() {
        if (!request) {
          return;
        }
        reject(new AxiosError_default("Request aborted", AxiosError_default.ECONNABORTED, _config, request));
        request = null;
      };
      request.onerror = function handleError3() {
        reject(new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, _config, request));
        request = null;
      };
      request.ontimeout = function handleTimeout() {
        let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
        const transitional2 = _config.transitional || transitional_default;
        if (_config.timeoutErrorMessage) {
          timeoutErrorMessage = _config.timeoutErrorMessage;
        }
        reject(new AxiosError_default(
          timeoutErrorMessage,
          transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
          _config,
          request
        ));
        request = null;
      };
      requestData === void 0 && requestHeaders.setContentType(null);
      if ("setRequestHeader" in request) {
        utils_default.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key22) {
          request.setRequestHeader(key22, val);
        });
      }
      if (!utils_default.isUndefined(_config.withCredentials)) {
        request.withCredentials = !!_config.withCredentials;
      }
      if (responseType && responseType !== "json") {
        request.responseType = _config.responseType;
      }
      if (typeof _config.onDownloadProgress === "function") {
        request.addEventListener("progress", progressEventReducer_default(_config.onDownloadProgress, true));
      }
      if (typeof _config.onUploadProgress === "function" && request.upload) {
        request.upload.addEventListener("progress", progressEventReducer_default(_config.onUploadProgress));
      }
      if (_config.cancelToken || _config.signal) {
        onCanceled = (cancel) => {
          if (!request) {
            return;
          }
          reject(!cancel || cancel.type ? new CanceledError_default(null, config, request) : cancel);
          request.abort();
          request = null;
        };
        _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
        if (_config.signal) {
          _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
        }
      }
      const protocol = parseProtocol(_config.url);
      if (protocol && platform_default.protocols.indexOf(protocol) === -1) {
        reject(new AxiosError_default("Unsupported protocol " + protocol + ":", AxiosError_default.ERR_BAD_REQUEST, config));
        return;
      }
      request.send(requestData || null);
    });
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var composeSignals = (signals, timeout) => {
    let controller = new AbortController();
    let aborted;
    const onabort = function(cancel) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = cancel instanceof Error ? cancel : this.reason;
        controller.abort(err instanceof AxiosError_default ? err : new CanceledError_default(err instanceof Error ? err.message : err));
      }
    };
    let timer22 = timeout && setTimeout(() => {
      onabort(new AxiosError_default(`timeout ${timeout} of ms exceeded`, AxiosError_default.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer22 && clearTimeout(timer22);
        timer22 = null;
        signals.forEach((signal2) => {
          signal2 && (signal2.removeEventListener ? signal2.removeEventListener("abort", onabort) : signal2.unsubscribe(onabort));
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2 && signal2.addEventListener && signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = unsubscribe;
    return [signal, () => {
      timer22 && clearTimeout(timer22);
      timer22 = null;
    }];
  };
  var composeSignals_default = composeSignals;
  init_define_chainIDList();
  init_define_extraRpcs();
  var streamChunk = function* (chunk, chunkSize) {
    let len = chunk.byteLength;
    if (!chunkSize || len < chunkSize) {
      yield chunk;
      return;
    }
    let pos = 0;
    let end;
    while (pos < len) {
      end = pos + chunkSize;
      yield chunk.slice(pos, end);
      pos = end;
    }
  };
  var readBytes = async function* (iterable, chunkSize, encode62) {
    for await (const chunk of iterable) {
      yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : await encode62(String(chunk)), chunkSize);
    }
  };
  var trackStream = (stream, chunkSize, onProgress, onFinish, encode62) => {
    const iterator = readBytes(stream, chunkSize, encode62);
    let bytes = 0;
    return new ReadableStream({
      type: "bytes",
      async pull(controller) {
        const { done, value } = await iterator.next();
        if (done) {
          controller.close();
          onFinish();
          return;
        }
        let len = value.byteLength;
        onProgress && onProgress(bytes += len);
        controller.enqueue(new Uint8Array(value));
      },
      cancel(reason) {
        onFinish(reason);
        return iterator.return();
      }
    }, {
      highWaterMark: 2
    });
  };
  var fetchProgressDecorator = (total, fn) => {
    const lengthComputable = total != null;
    return (loaded) => setTimeout(() => fn({
      lengthComputable,
      total,
      loaded
    }));
  };
  var isFetchSupported = typeof fetch !== "undefined";
  var isReadableStreamSupported = isFetchSupported && typeof ReadableStream !== "undefined";
  var encodeText = isFetchSupported && (typeof TextEncoder !== "undefined" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Response(str).arrayBuffer()));
  var supportsRequestStream = isReadableStreamSupported && (() => {
    let duplexAccessed = false;
    const hasContentType = new Request(platform_default.origin, {
      body: new ReadableStream(),
      method: "POST",
      get duplex() {
        duplexAccessed = true;
        return "half";
      }
    }).headers.has("Content-Type");
    return duplexAccessed && !hasContentType;
  })();
  var DEFAULT_CHUNK_SIZE = 64 * 1024;
  var supportsResponseStream = isReadableStreamSupported && !!(() => {
    try {
      return utils_default.isReadableStream(new Response("").body);
    } catch (err) {
    }
  })();
  var resolvers = {
    stream: supportsResponseStream && ((res) => res.body)
  };
  isFetchSupported && ((res) => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
      !resolvers[type] && (resolvers[type] = utils_default.isFunction(res[type]) ? (res2) => res2[type]() : (_, config) => {
        throw new AxiosError_default(`Response type '${type}' is not supported`, AxiosError_default.ERR_NOT_SUPPORT, config);
      });
    });
  })(new Response());
  var getBodyLength = async (body) => {
    if (body == null) {
      return 0;
    }
    if (utils_default.isBlob(body)) {
      return body.size;
    }
    if (utils_default.isSpecCompliantForm(body)) {
      return (await new Request(body).arrayBuffer()).byteLength;
    }
    if (utils_default.isArrayBufferView(body)) {
      return body.byteLength;
    }
    if (utils_default.isURLSearchParams(body)) {
      body = body + "";
    }
    if (utils_default.isString(body)) {
      return (await encodeText(body)).byteLength;
    }
  };
  var resolveBodyLength = async (headers, body) => {
    const length = utils_default.toFiniteNumber(headers.getContentLength());
    return length == null ? getBodyLength(body) : length;
  };
  var fetch_default = isFetchSupported && (async (config) => {
    let {
      url,
      method,
      data,
      signal,
      cancelToken,
      timeout,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = "same-origin",
      fetchOptions
    } = resolveConfig_default(config);
    responseType = responseType ? (responseType + "").toLowerCase() : "text";
    let [composedSignal, stopTimeout] = signal || cancelToken || timeout ? composeSignals_default([signal, cancelToken], timeout) : [];
    let finished, request;
    const onFinish = () => {
      !finished && setTimeout(() => {
        composedSignal && composedSignal.unsubscribe();
      });
      finished = true;
    };
    let requestContentLength;
    try {
      if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
        let _request2 = new Request(url, {
          method: "POST",
          body: data,
          duplex: "half"
        });
        let contentTypeHeader;
        if (utils_default.isFormData(data) && (contentTypeHeader = _request2.headers.get("content-type"))) {
          headers.setContentType(contentTypeHeader);
        }
        if (_request2.body) {
          data = trackStream(_request2.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(
            requestContentLength,
            progressEventReducer_default(onUploadProgress)
          ), null, encodeText);
        }
      }
      if (!utils_default.isString(withCredentials)) {
        withCredentials = withCredentials ? "cors" : "omit";
      }
      request = new Request(url, {
        ...fetchOptions,
        signal: composedSignal,
        method: method.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data,
        duplex: "half",
        withCredentials
      });
      let response = await fetch(request);
      const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
      if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {
        const options = {};
        ["status", "statusText", "headers"].forEach((prop) => {
          options[prop] = response[prop];
        });
        const responseContentLength = utils_default.toFiniteNumber(response.headers.get("content-length"));
        response = new Response(
          trackStream(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(
            responseContentLength,
            progressEventReducer_default(onDownloadProgress, true)
          ), isStreamResponse && onFinish, encodeText),
          options
        );
      }
      responseType = responseType || "text";
      let responseData = await resolvers[utils_default.findKey(resolvers, responseType) || "text"](response, config);
      !isStreamResponse && onFinish();
      stopTimeout && stopTimeout();
      return await new Promise((resolve, reject) => {
        settle(resolve, reject, {
          data: responseData,
          headers: AxiosHeaders_default.from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request
        });
      });
    } catch (err) {
      onFinish();
      if (err && err.name === "TypeError" && /fetch/i.test(err.message)) {
        throw Object.assign(
          new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config, request),
          {
            cause: err.cause || err
          }
        );
      }
      throw AxiosError_default.from(err, err && err.code, config, request);
    }
  });
  var knownAdapters = {
    http: null_default,
    xhr: xhr_default,
    fetch: fetch_default
  };
  utils_default.forEach(knownAdapters, (fn, value) => {
    if (fn) {
      try {
        Object.defineProperty(fn, "name", { value });
      } catch (e) {
      }
      Object.defineProperty(fn, "adapterName", { value });
    }
  });
  var renderReason = (reason) => `- ${reason}`;
  var isResolvedHandle = (adapter) => utils_default.isFunction(adapter) || adapter === null || adapter === false;
  var adapters_default = {
    getAdapter: (adapters) => {
      adapters = utils_default.isArray(adapters) ? adapters : [adapters];
      const { length } = adapters;
      let nameOrAdapter;
      let adapter;
      const rejectedReasons = {};
      for (let i = 0; i < length; i++) {
        nameOrAdapter = adapters[i];
        let id22;
        adapter = nameOrAdapter;
        if (!isResolvedHandle(nameOrAdapter)) {
          adapter = knownAdapters[(id22 = String(nameOrAdapter)).toLowerCase()];
          if (adapter === void 0) {
            throw new AxiosError_default(`Unknown adapter '${id22}'`);
          }
        }
        if (adapter) {
          break;
        }
        rejectedReasons[id22 || "#" + i] = adapter;
      }
      if (!adapter) {
        const reasons = Object.entries(rejectedReasons).map(
          ([id22, state]) => `adapter ${id22} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
        );
        let s = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
        throw new AxiosError_default(
          `There is no suitable adapter to dispatch the request ` + s,
          "ERR_NOT_SUPPORT"
        );
      }
      return adapter;
    },
    adapters: knownAdapters
  };
  function throwIfCancellationRequested(config) {
    if (config.cancelToken) {
      config.cancelToken.throwIfRequested();
    }
    if (config.signal && config.signal.aborted) {
      throw new CanceledError_default(null, config);
    }
  }
  function dispatchRequest(config) {
    throwIfCancellationRequested(config);
    config.headers = AxiosHeaders_default.from(config.headers);
    config.data = transformData.call(
      config,
      config.transformRequest
    );
    if (["post", "put", "patch"].indexOf(config.method) !== -1) {
      config.headers.setContentType("application/x-www-form-urlencoded", false);
    }
    const adapter = adapters_default.getAdapter(config.adapter || defaults_default.adapter);
    return adapter(config).then(function onAdapterResolution(response) {
      throwIfCancellationRequested(config);
      response.data = transformData.call(
        config,
        config.transformResponse,
        response
      );
      response.headers = AxiosHeaders_default.from(response.headers);
      return response;
    }, function onAdapterRejection(reason) {
      if (!isCancel(reason)) {
        throwIfCancellationRequested(config);
        if (reason && reason.response) {
          reason.response.data = transformData.call(
            config,
            config.transformResponse,
            reason.response
          );
          reason.response.headers = AxiosHeaders_default.from(reason.response.headers);
        }
      }
      return Promise.reject(reason);
    });
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  init_define_chainIDList();
  init_define_extraRpcs();
  var VERSION = "1.7.1";
  var validators = {};
  ["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i) => {
    validators[type] = function validator(thing) {
      return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
    };
  });
  var deprecatedWarnings = {};
  validators.transitional = function transitional(validator, version172, message) {
    function formatMessage(opt, desc) {
      return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
    }
    return (value, opt, opts) => {
      if (validator === false) {
        throw new AxiosError_default(
          formatMessage(opt, " has been removed" + (version172 ? " in " + version172 : "")),
          AxiosError_default.ERR_DEPRECATED
        );
      }
      if (version172 && !deprecatedWarnings[opt]) {
        deprecatedWarnings[opt] = true;
        console.warn(
          formatMessage(
            opt,
            " has been deprecated since v" + version172 + " and will be removed in the near future"
          )
        );
      }
      return validator ? validator(value, opt, opts) : true;
    };
  };
  function assertOptions(options, schema, allowUnknown) {
    if (typeof options !== "object") {
      throw new AxiosError_default("options must be an object", AxiosError_default.ERR_BAD_OPTION_VALUE);
    }
    const keys = Object.keys(options);
    let i = keys.length;
    while (i-- > 0) {
      const opt = keys[i];
      const validator = schema[opt];
      if (validator) {
        const value = options[opt];
        const result = value === void 0 || validator(value, opt, options);
        if (result !== true) {
          throw new AxiosError_default("option " + opt + " must be " + result, AxiosError_default.ERR_BAD_OPTION_VALUE);
        }
        continue;
      }
      if (allowUnknown !== true) {
        throw new AxiosError_default("Unknown option " + opt, AxiosError_default.ERR_BAD_OPTION);
      }
    }
  }
  var validator_default = {
    assertOptions,
    validators
  };
  var validators2 = validator_default.validators;
  var Axios = class {
    constructor(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager_default(),
        response: new InterceptorManager_default()
      };
    }
    /**
     * Dispatch a request
     *
     * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
     * @param {?Object} config
     *
     * @returns {Promise} The Promise to be fulfilled
     */
    async request(configOrUrl, config) {
      try {
        return await this._request(configOrUrl, config);
      } catch (err) {
        if (err instanceof Error) {
          let dummy;
          Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : dummy = new Error();
          const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
          try {
            if (!err.stack) {
              err.stack = stack;
            } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
              err.stack += "\n" + stack;
            }
          } catch (e) {
          }
        }
        throw err;
      }
    }
    _request(configOrUrl, config) {
      if (typeof configOrUrl === "string") {
        config = config || {};
        config.url = configOrUrl;
      } else {
        config = configOrUrl || {};
      }
      config = mergeConfig(this.defaults, config);
      const { transitional: transitional2, paramsSerializer, headers } = config;
      if (transitional2 !== void 0) {
        validator_default.assertOptions(transitional2, {
          silentJSONParsing: validators2.transitional(validators2.boolean),
          forcedJSONParsing: validators2.transitional(validators2.boolean),
          clarifyTimeoutError: validators2.transitional(validators2.boolean)
        }, false);
      }
      if (paramsSerializer != null) {
        if (utils_default.isFunction(paramsSerializer)) {
          config.paramsSerializer = {
            serialize: paramsSerializer
          };
        } else {
          validator_default.assertOptions(paramsSerializer, {
            encode: validators2.function,
            serialize: validators2.function
          }, true);
        }
      }
      config.method = (config.method || this.defaults.method || "get").toLowerCase();
      let contextHeaders = headers && utils_default.merge(
        headers.common,
        headers[config.method]
      );
      headers && utils_default.forEach(
        ["delete", "get", "head", "post", "put", "patch", "common"],
        (method) => {
          delete headers[method];
        }
      );
      config.headers = AxiosHeaders_default.concat(contextHeaders, headers);
      const requestInterceptorChain = [];
      let synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      const responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      let promise;
      let i = 0;
      let len;
      if (!synchronousRequestInterceptors) {
        const chain = [dispatchRequest.bind(this), void 0];
        chain.unshift.apply(chain, requestInterceptorChain);
        chain.push.apply(chain, responseInterceptorChain);
        len = chain.length;
        promise = Promise.resolve(config);
        while (i < len) {
          promise = promise.then(chain[i++], chain[i++]);
        }
        return promise;
      }
      len = requestInterceptorChain.length;
      let newConfig = config;
      i = 0;
      while (i < len) {
        const onFulfilled = requestInterceptorChain[i++];
        const onRejected = requestInterceptorChain[i++];
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error) {
          onRejected.call(this, error);
          break;
        }
      }
      try {
        promise = dispatchRequest.call(this, newConfig);
      } catch (error) {
        return Promise.reject(error);
      }
      i = 0;
      len = responseInterceptorChain.length;
      while (i < len) {
        promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);
      }
      return promise;
    }
    getUri(config) {
      config = mergeConfig(this.defaults, config);
      const fullPath = buildFullPath(config.baseURL, config.url);
      return buildURL(fullPath, config.params, config.paramsSerializer);
    }
  };
  utils_default.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
    Axios.prototype[method] = function(url, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        url,
        data: (config || {}).data
      }));
    };
  });
  utils_default.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
    function generateHTTPMethod(isForm) {
      return function httpMethod(url, data, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          headers: isForm ? {
            "Content-Type": "multipart/form-data"
          } : {},
          url,
          data
        }));
      };
    }
    Axios.prototype[method] = generateHTTPMethod();
    Axios.prototype[method + "Form"] = generateHTTPMethod(true);
  });
  var Axios_default = Axios;
  init_define_chainIDList();
  init_define_extraRpcs();
  var CancelToken = class _CancelToken {
    constructor(executor) {
      if (typeof executor !== "function") {
        throw new TypeError("executor must be a function.");
      }
      let resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      const token = this;
      this.promise.then((cancel) => {
        if (!token._listeners)
          return;
        let i = token._listeners.length;
        while (i-- > 0) {
          token._listeners[i](cancel);
        }
        token._listeners = null;
      });
      this.promise.then = (onfulfilled) => {
        let _resolve;
        const promise = new Promise((resolve) => {
          token.subscribe(resolve);
          _resolve = resolve;
        }).then(onfulfilled);
        promise.cancel = function reject() {
          token.unsubscribe(_resolve);
        };
        return promise;
      };
      executor(function cancel(message, config, request) {
        if (token.reason) {
          return;
        }
        token.reason = new CanceledError_default(message, config, request);
        resolvePromise(token.reason);
      });
    }
    /**
     * Throws a `CanceledError` if cancellation has been requested.
     */
    throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    }
    /**
     * Subscribe to the cancel signal
     */
    subscribe(listener) {
      if (this.reason) {
        listener(this.reason);
        return;
      }
      if (this._listeners) {
        this._listeners.push(listener);
      } else {
        this._listeners = [listener];
      }
    }
    /**
     * Unsubscribe from the cancel signal
     */
    unsubscribe(listener) {
      if (!this._listeners) {
        return;
      }
      const index2 = this._listeners.indexOf(listener);
      if (index2 !== -1) {
        this._listeners.splice(index2, 1);
      }
    }
    /**
     * Returns an object that contains a new `CancelToken` and a function that, when called,
     * cancels the `CancelToken`.
     */
    static source() {
      let cancel;
      const token = new _CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    }
  };
  var CancelToken_default = CancelToken;
  init_define_chainIDList();
  init_define_extraRpcs();
  function spread(callback) {
    return function wrap(arr) {
      return callback.apply(null, arr);
    };
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  function isAxiosError(payload) {
    return utils_default.isObject(payload) && payload.isAxiosError === true;
  }
  init_define_chainIDList();
  init_define_extraRpcs();
  var HttpStatusCode = {
    Continue: 100,
    SwitchingProtocols: 101,
    Processing: 102,
    EarlyHints: 103,
    Ok: 200,
    Created: 201,
    Accepted: 202,
    NonAuthoritativeInformation: 203,
    NoContent: 204,
    ResetContent: 205,
    PartialContent: 206,
    MultiStatus: 207,
    AlreadyReported: 208,
    ImUsed: 226,
    MultipleChoices: 300,
    MovedPermanently: 301,
    Found: 302,
    SeeOther: 303,
    NotModified: 304,
    UseProxy: 305,
    Unused: 306,
    TemporaryRedirect: 307,
    PermanentRedirect: 308,
    BadRequest: 400,
    Unauthorized: 401,
    PaymentRequired: 402,
    Forbidden: 403,
    NotFound: 404,
    MethodNotAllowed: 405,
    NotAcceptable: 406,
    ProxyAuthenticationRequired: 407,
    RequestTimeout: 408,
    Conflict: 409,
    Gone: 410,
    LengthRequired: 411,
    PreconditionFailed: 412,
    PayloadTooLarge: 413,
    UriTooLong: 414,
    UnsupportedMediaType: 415,
    RangeNotSatisfiable: 416,
    ExpectationFailed: 417,
    ImATeapot: 418,
    MisdirectedRequest: 421,
    UnprocessableEntity: 422,
    Locked: 423,
    FailedDependency: 424,
    TooEarly: 425,
    UpgradeRequired: 426,
    PreconditionRequired: 428,
    TooManyRequests: 429,
    RequestHeaderFieldsTooLarge: 431,
    UnavailableForLegalReasons: 451,
    InternalServerError: 500,
    NotImplemented: 501,
    BadGateway: 502,
    ServiceUnavailable: 503,
    GatewayTimeout: 504,
    HttpVersionNotSupported: 505,
    VariantAlsoNegotiates: 506,
    InsufficientStorage: 507,
    LoopDetected: 508,
    NotExtended: 510,
    NetworkAuthenticationRequired: 511
  };
  Object.entries(HttpStatusCode).forEach(([key22, value]) => {
    HttpStatusCode[value] = key22;
  });
  var HttpStatusCode_default = HttpStatusCode;
  function createInstance(defaultConfig) {
    const context = new Axios_default(defaultConfig);
    const instance = bind(Axios_default.prototype.request, context);
    utils_default.extend(instance, Axios_default.prototype, context, { allOwnKeys: true });
    utils_default.extend(instance, context, null, { allOwnKeys: true });
    instance.create = function create(instanceConfig) {
      return createInstance(mergeConfig(defaultConfig, instanceConfig));
    };
    return instance;
  }
  var axios = createInstance(defaults_default);
  axios.Axios = Axios_default;
  axios.CanceledError = CanceledError_default;
  axios.CancelToken = CancelToken_default;
  axios.isCancel = isCancel;
  axios.VERSION = VERSION;
  axios.toFormData = toFormData_default;
  axios.AxiosError = AxiosError_default;
  axios.Cancel = axios.CanceledError;
  axios.all = function all(promises) {
    return Promise.all(promises);
  };
  axios.spread = spread;
  axios.isAxiosError = isAxiosError;
  axios.mergeConfig = mergeConfig;
  axios.AxiosHeaders = AxiosHeaders_default;
  axios.formToJSON = (thing) => formDataToJSON_default(utils_default.isHTMLForm(thing) ? new FormData(thing) : thing);
  axios.getAdapter = adapters_default.getAdapter;
  axios.HttpStatusCode = HttpStatusCode_default;
  axios.default = axios;
  var axios_default = axios;
  var {
    Axios: Axios2,
    AxiosError: AxiosError2,
    CanceledError: CanceledError2,
    isCancel: isCancel2,
    CancelToken: CancelToken2,
    VERSION: VERSION2,
    all: all2,
    Cancel,
    isAxiosError: isAxiosError2,
    spread: spread2,
    toFormData: toFormData2,
    AxiosHeaders: AxiosHeaders2,
    HttpStatusCode: HttpStatusCode2,
    formToJSON,
    getAdapter,
    mergeConfig: mergeConfig2
  } = axios_default;
  var RPCService = class {
    static async testRpcPerformance(networkId, latencies, runtimeRpcs, rpcHeader, rpcBody, rpcTimeout) {
      const instance = axios_default.create({
        timeout: rpcTimeout,
        headers: rpcHeader,
        cancelToken: new axios_default.CancelToken((c) => setTimeout(() => c("Request Timeout"), rpcTimeout))
      });
      const successfulPromises = runtimeRpcs.map(
        (rpcUrl) => new Promise((resolve) => {
          const startTime = performance.now();
          instance.post(rpcUrl, rpcBody).then(() => {
            const endTime = performance.now();
            resolve({
              rpcUrl,
              duration: endTime - startTime,
              success: true
            });
          }).catch(() => {
            resolve({ rpcUrl, success: false, duration: 0 });
          });
        })
      );
      const fastest = await Promise.race(successfulPromises);
      if (fastest.success) {
        latencies[`${networkId}__${fastest.rpcUrl}`] = fastest.duration;
      }
      const allResults = await Promise.allSettled(successfulPromises);
      allResults.forEach((result) => {
        if (result.status === "fulfilled" && result.value.success) {
          latencies[`${networkId}__${result.value.rpcUrl}`] = result.value.duration;
        } else if (result.status === "fulfilled") {
          const fulfilledResult = result.value;
          const index2 = runtimeRpcs.indexOf(fulfilledResult.rpcUrl);
          if (index2 > -1) {
            runtimeRpcs.splice(index2, 1);
          }
        }
      });
      return { latencies, runtimeRpcs };
    }
    static async findFastestRpc(latencies, networkId) {
      try {
        const validLatencies = Object.entries(latencies).filter(([key22]) => key22.startsWith(`${networkId}__`)).reduce(
          (acc, [key22, value]) => {
            acc[key22] = value;
            return acc;
          },
          {}
        );
        return Object.keys(validLatencies).reduce((a, b) => validLatencies[a] < validLatencies[b] ? a : b).split("__")[1];
      } catch (error) {
        console.error("[RPCService] Failed to find fastest RPC");
        return null;
      }
    }
    static _verifyBlock(data) {
      try {
        const { jsonrpc, id: id22, result } = data;
        const { number, timestamp, hash: hash3 } = result;
        return jsonrpc === "2.0" && id22 === 1 && parseInt(number, 16) > 0 && parseInt(timestamp, 16) > 0 && hash3.match(/[0-9|a-f|A-F|x]/gm)?.join("").length === 66;
      } catch (error) {
        return false;
      }
    }
  };
  init_define_chainIDList();
  init_define_extraRpcs();
  var StorageService = class {
    static getLatencies(env, networkId) {
      if (env === "browser") {
        if (this.bypassForTests())
          return {};
        const latencies = JSON.parse(localStorage.getItem("rpcLatencies") || "{}");
        return Object.keys(latencies).reduce((acc, key22) => {
          if (key22.startsWith(`${networkId}__`)) {
            acc[key22] = latencies[key22];
          }
          return acc;
        }, {});
      }
      return {};
    }
    static getRefreshLatencies(env) {
      if (env === "browser") {
        if (this.bypassForTests())
          return 0;
        const refresh = JSON.parse(localStorage.getItem("refreshLatencies") || "0");
        if (typeof refresh === "number") {
          return refresh;
        } else {
          return 0;
        }
      }
      return 0;
    }
    static setLatencies(env, latencies) {
      if (env === "browser") {
        if (this.bypassForTests())
          return;
        localStorage.setItem("rpcLatencies", JSON.stringify(latencies));
      }
    }
    static setRefreshLatencies(env, refreshLatencies) {
      if (env === "browser") {
        if (this.bypassForTests())
          return;
        localStorage.setItem("refreshLatencies", JSON.stringify(refreshLatencies));
      }
    }
    // This method is only used for env detection testing
    static bypassForTests() {
      if (typeof localStorage === "undefined") {
        console.log("Passing test because localStorage is not defined.");
        return true;
      }
    }
  };
  var RPCHandler = class _RPCHandler {
    static _instance = null;
    _provider = null;
    _networkId;
    _networkName;
    _env = "node";
    _rpcTimeout = Number.MAX_SAFE_INTEGER;
    // ms
    _cacheRefreshCycles = 10;
    _refreshLatencies = 0;
    _autoStorage = false;
    _runtimeRpcs = [];
    _latencies = {};
    _networkRpcs = [];
    constructor(config) {
      this._networkId = config.networkId;
      this._networkRpcs = networkRpcs[this._networkId];
      this._networkName = networkNames[this._networkId];
      this._initialize(config);
    }
    async getFastestRpcProvider() {
      if (this._networkId === 31337) {
        this._provider = new JsonRpcProvider(LOCAL_HOST, this._networkId);
      } else if (!this._provider) {
        this._provider = await this.testRpcPerformance();
      }
      if (this._provider && this._provider?.connection.url.includes("localhost") && this._networkId !== 31337) {
        this._provider = await this.testRpcPerformance();
      }
      return this._provider;
    }
    async testRpcPerformance() {
      const shouldRefreshRpcs = Object.keys(this._latencies).filter((rpc) => rpc.startsWith(`${this._networkId}__`)).length <= 1 || this._refreshLatencies >= this._cacheRefreshCycles;
      if (shouldRefreshRpcs) {
        this._runtimeRpcs = networkRpcs[this._networkId];
        this._refreshLatencies = 0;
      } else {
        this._runtimeRpcs = Object.keys(this._latencies).map((rpc) => {
          return rpc.split("__")[1];
        });
      }
      await this._testRpcPerformance();
      const fastestRpcUrl = await RPCService.findFastestRpc(this._latencies, this._networkId);
      if (!fastestRpcUrl) {
        throw new Error("Failed to find fastest RPC");
      }
      const provider = new JsonRpcProvider(fastestRpcUrl, this._networkId);
      this._provider = provider;
      if (this._autoStorage) {
        StorageService.setLatencies(this._env, this._latencies);
        StorageService.setRefreshLatencies(this._env, this._refreshLatencies);
      }
      if (!this._provider) {
        throw new Error("Provider could not be initialized");
      }
      return this._provider;
    }
    getProvider() {
      if (!this._provider) {
        throw new Error("Provider is not initialized");
      }
      return this._provider;
    }
    static getInstance(config) {
      if (!_RPCHandler._instance) {
        if (!config) {
          throw new Error("Config is required to initialize RPCHandler");
        }
        _RPCHandler._instance = new _RPCHandler(config);
      }
      return _RPCHandler._instance;
    }
    clearInstance() {
      _RPCHandler._instance = null;
    }
    getRuntimeRpcs() {
      return this._runtimeRpcs;
    }
    getNetworkId() {
      return this._networkId;
    }
    getNetworkName() {
      return this._networkName;
    }
    getNetworkRpcs() {
      return this._networkRpcs;
    }
    getLatencies() {
      return this._latencies;
    }
    getRefreshLatencies() {
      return this._refreshLatencies;
    }
    getCacheRefreshCycles() {
      return this._cacheRefreshCycles;
    }
    async _testRpcPerformance() {
      const { latencies, runtimeRpcs } = await RPCService.testRpcPerformance(
        this._networkId,
        this._latencies,
        this._runtimeRpcs,
        { "Content-Type": "application/json" },
        JSON.stringify({
          jsonrpc: "2.0",
          method: "eth_getBlockByNumber",
          params: ["latest", false],
          id: 1
        }),
        this._rpcTimeout
      );
      this._runtimeRpcs = runtimeRpcs;
      this._latencies = latencies;
      this._refreshLatencies++;
      StorageService.setLatencies(this._env, this._latencies);
      StorageService.setRefreshLatencies(this._env, this._refreshLatencies);
    }
    _updateConfig(config) {
      if (config.networkName) {
        this._networkName = config.networkName;
      }
      if (config.networkRpcs) {
        this._networkRpcs = [...this._networkRpcs, ...config.networkRpcs];
      }
      if (config.runtimeRpcs) {
        this._runtimeRpcs = config.runtimeRpcs;
      }
      if (config.cacheRefreshCycles) {
        this._cacheRefreshCycles = config.cacheRefreshCycles;
      }
      if (config.rpcTimeout) {
        this._rpcTimeout = config.rpcTimeout;
      }
      if (config.autoStorage) {
        this._autoStorage = true;
        this._latencies = StorageService.getLatencies(this._env, this._networkId);
        this._refreshLatencies = StorageService.getRefreshLatencies(this._env);
      }
    }
    _initialize(config) {
      this._env = typeof window === "undefined" ? "node" : "browser";
      this._updateConfig(config);
    }
  };

  // static/scripts/rewards/app-state.ts
  var AppState = class {
    claims = [];
    claimTxs = {};
    _provider;
    _currentIndex = 0;
    _signer = null;
    get signer() {
      return this._signer;
    }
    set signer(value) {
      this._signer = value;
    }
    get networkId() {
      return this.reward?.networkId || null;
    }
    get provider() {
      return this._provider;
    }
    set provider(value) {
      this._provider = value;
    }
    get rewardIndex() {
      return this._currentIndex;
    }
    get reward() {
      return this.rewardIndex < this.claims.length ? this.claims[this.rewardIndex] : this.claims[0];
    }
    get permitNetworkId() {
      return this.reward?.networkId;
    }
    get currentExplorerUrl() {
      if (!this.reward) {
        return "https://blockscan.com";
      }
      return networkExplorers[this.reward.networkId] || "https://blockscan.com";
    }
    nextPermit() {
      this._currentIndex = Math.min(this.claims.length - 1, this.rewardIndex + 1);
      return this.reward;
    }
    previousPermit() {
      this._currentIndex = Math.max(0, this._currentIndex - 1);
      return this.reward;
    }
  };
  var app = new AppState();

  // static/scripts/rewards/render-transaction/display-commit-hash.ts
  function displayCommitHash() {
    const buildElement = document.querySelector(`#build a`);
    buildElement.innerHTML = "bf4aeff";
    buildElement.href = `https://github.com/ubiquity/pay.ubq.fi/commit/${"bf4aeff"}`;
  }

  // node_modules/@supabase/functions-js/dist/module/helper.js
  var resolveFetch = (customFetch) => {
    let _fetch;
    if (customFetch) {
      _fetch = customFetch;
    } else if (typeof fetch === "undefined") {
      _fetch = (...args) => Promise.resolve().then(() => (init_browser(), browser_exports)).then(({ default: fetch3 }) => fetch3(...args));
    } else {
      _fetch = fetch;
    }
    return (...args) => _fetch(...args);
  };

  // node_modules/@supabase/functions-js/dist/module/types.js
  var FunctionsError = class extends Error {
    constructor(message, name = "FunctionsError", context) {
      super(message);
      this.name = name;
      this.context = context;
    }
  };
  var FunctionsFetchError = class extends FunctionsError {
    constructor(context) {
      super("Failed to send a request to the Edge Function", "FunctionsFetchError", context);
    }
  };
  var FunctionsRelayError = class extends FunctionsError {
    constructor(context) {
      super("Relay Error invoking the Edge Function", "FunctionsRelayError", context);
    }
  };
  var FunctionsHttpError = class extends FunctionsError {
    constructor(context) {
      super("Edge Function returned a non-2xx status code", "FunctionsHttpError", context);
    }
  };
  var FunctionRegion;
  (function(FunctionRegion2) {
    FunctionRegion2["Any"] = "any";
    FunctionRegion2["ApNortheast1"] = "ap-northeast-1";
    FunctionRegion2["ApNortheast2"] = "ap-northeast-2";
    FunctionRegion2["ApSouth1"] = "ap-south-1";
    FunctionRegion2["ApSoutheast1"] = "ap-southeast-1";
    FunctionRegion2["ApSoutheast2"] = "ap-southeast-2";
    FunctionRegion2["CaCentral1"] = "ca-central-1";
    FunctionRegion2["EuCentral1"] = "eu-central-1";
    FunctionRegion2["EuWest1"] = "eu-west-1";
    FunctionRegion2["EuWest2"] = "eu-west-2";
    FunctionRegion2["EuWest3"] = "eu-west-3";
    FunctionRegion2["SaEast1"] = "sa-east-1";
    FunctionRegion2["UsEast1"] = "us-east-1";
    FunctionRegion2["UsWest1"] = "us-west-1";
    FunctionRegion2["UsWest2"] = "us-west-2";
  })(FunctionRegion || (FunctionRegion = {}));

  // node_modules/@supabase/functions-js/dist/module/FunctionsClient.js
  var __awaiter9 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var FunctionsClient = class {
    constructor(url, { headers = {}, customFetch, region = FunctionRegion.Any } = {}) {
      this.url = url;
      this.headers = headers;
      this.region = region;
      this.fetch = resolveFetch(customFetch);
    }
    /**
     * Updates the authorization header
     * @param token - the new jwt token sent in the authorisation header
     */
    setAuth(token) {
      this.headers.Authorization = `Bearer ${token}`;
    }
    /**
     * Invokes a function
     * @param functionName - The name of the Function to invoke.
     * @param options - Options for invoking the Function.
     */
    invoke(functionName, options = {}) {
      var _a;
      return __awaiter9(this, void 0, void 0, function* () {
        try {
          const { headers, method, body: functionArgs } = options;
          let _headers = {};
          let { region } = options;
          if (!region) {
            region = this.region;
          }
          if (region && region !== "any") {
            _headers["x-region"] = region;
          }
          let body;
          if (functionArgs && (headers && !Object.prototype.hasOwnProperty.call(headers, "Content-Type") || !headers)) {
            if (typeof Blob !== "undefined" && functionArgs instanceof Blob || functionArgs instanceof ArrayBuffer) {
              _headers["Content-Type"] = "application/octet-stream";
              body = functionArgs;
            } else if (typeof functionArgs === "string") {
              _headers["Content-Type"] = "text/plain";
              body = functionArgs;
            } else if (typeof FormData !== "undefined" && functionArgs instanceof FormData) {
              body = functionArgs;
            } else {
              _headers["Content-Type"] = "application/json";
              body = JSON.stringify(functionArgs);
            }
          }
          const response = yield this.fetch(`${this.url}/${functionName}`, {
            method: method || "POST",
            // headers priority is (high to low):
            // 1. invoke-level headers
            // 2. client-level headers
            // 3. default Content-Type header
            headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),
            body
          }).catch((fetchError) => {
            throw new FunctionsFetchError(fetchError);
          });
          const isRelayError = response.headers.get("x-relay-error");
          if (isRelayError && isRelayError === "true") {
            throw new FunctionsRelayError(response);
          }
          if (!response.ok) {
            throw new FunctionsHttpError(response);
          }
          let responseType = ((_a = response.headers.get("Content-Type")) !== null && _a !== void 0 ? _a : "text/plain").split(";")[0].trim();
          let data;
          if (responseType === "application/json") {
            data = yield response.json();
          } else if (responseType === "application/octet-stream") {
            data = yield response.blob();
          } else if (responseType === "text/event-stream") {
            data = response;
          } else if (responseType === "multipart/form-data") {
            data = yield response.formData();
          } else {
            data = yield response.text();
          }
          return { data, error: null };
        } catch (error) {
          return { data: null, error };
        }
      });
    }
  };

  // node_modules/@supabase/postgrest-js/dist/esm/wrapper.mjs
  var import_cjs = __toESM(require_cjs(), 1);
  var {
    PostgrestClient,
    PostgrestQueryBuilder,
    PostgrestFilterBuilder,
    PostgrestTransformBuilder,
    PostgrestBuilder
  } = import_cjs.default;

  // node_modules/@supabase/realtime-js/dist/module/lib/version.js
  var version17 = "2.10.2";

  // node_modules/@supabase/realtime-js/dist/module/lib/constants.js
  var DEFAULT_HEADERS = { "X-Client-Info": `realtime-js/${version17}` };
  var VSN = "1.0.0";
  var DEFAULT_TIMEOUT = 1e4;
  var WS_CLOSE_NORMAL = 1e3;
  var SOCKET_STATES;
  (function(SOCKET_STATES2) {
    SOCKET_STATES2[SOCKET_STATES2["connecting"] = 0] = "connecting";
    SOCKET_STATES2[SOCKET_STATES2["open"] = 1] = "open";
    SOCKET_STATES2[SOCKET_STATES2["closing"] = 2] = "closing";
    SOCKET_STATES2[SOCKET_STATES2["closed"] = 3] = "closed";
  })(SOCKET_STATES || (SOCKET_STATES = {}));
  var CHANNEL_STATES;
  (function(CHANNEL_STATES2) {
    CHANNEL_STATES2["closed"] = "closed";
    CHANNEL_STATES2["errored"] = "errored";
    CHANNEL_STATES2["joined"] = "joined";
    CHANNEL_STATES2["joining"] = "joining";
    CHANNEL_STATES2["leaving"] = "leaving";
  })(CHANNEL_STATES || (CHANNEL_STATES = {}));
  var CHANNEL_EVENTS;
  (function(CHANNEL_EVENTS2) {
    CHANNEL_EVENTS2["close"] = "phx_close";
    CHANNEL_EVENTS2["error"] = "phx_error";
    CHANNEL_EVENTS2["join"] = "phx_join";
    CHANNEL_EVENTS2["reply"] = "phx_reply";
    CHANNEL_EVENTS2["leave"] = "phx_leave";
    CHANNEL_EVENTS2["access_token"] = "access_token";
  })(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));
  var TRANSPORTS;
  (function(TRANSPORTS2) {
    TRANSPORTS2["websocket"] = "websocket";
  })(TRANSPORTS || (TRANSPORTS = {}));
  var CONNECTION_STATE;
  (function(CONNECTION_STATE2) {
    CONNECTION_STATE2["Connecting"] = "connecting";
    CONNECTION_STATE2["Open"] = "open";
    CONNECTION_STATE2["Closing"] = "closing";
    CONNECTION_STATE2["Closed"] = "closed";
  })(CONNECTION_STATE || (CONNECTION_STATE = {}));

  // node_modules/@supabase/realtime-js/dist/module/lib/serializer.js
  var Serializer = class {
    constructor() {
      this.HEADER_LENGTH = 1;
    }
    decode(rawPayload, callback) {
      if (rawPayload.constructor === ArrayBuffer) {
        return callback(this._binaryDecode(rawPayload));
      }
      if (typeof rawPayload === "string") {
        return callback(JSON.parse(rawPayload));
      }
      return callback({});
    }
    _binaryDecode(buffer) {
      const view = new DataView(buffer);
      const decoder = new TextDecoder();
      return this._decodeBroadcast(buffer, view, decoder);
    }
    _decodeBroadcast(buffer, view, decoder) {
      const topicSize = view.getUint8(1);
      const eventSize = view.getUint8(2);
      let offset = this.HEADER_LENGTH + 2;
      const topic = decoder.decode(buffer.slice(offset, offset + topicSize));
      offset = offset + topicSize;
      const event = decoder.decode(buffer.slice(offset, offset + eventSize));
      offset = offset + eventSize;
      const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));
      return { ref: null, topic, event, payload: data };
    }
  };

  // node_modules/@supabase/realtime-js/dist/module/lib/timer.js
  var Timer = class {
    constructor(callback, timerCalc) {
      this.callback = callback;
      this.timerCalc = timerCalc;
      this.timer = void 0;
      this.tries = 0;
      this.callback = callback;
      this.timerCalc = timerCalc;
    }
    reset() {
      this.tries = 0;
      clearTimeout(this.timer);
    }
    // Cancels any previous scheduleTimeout and schedules callback
    scheduleTimeout() {
      clearTimeout(this.timer);
      this.timer = setTimeout(() => {
        this.tries = this.tries + 1;
        this.callback();
      }, this.timerCalc(this.tries + 1));
    }
  };

  // node_modules/@supabase/realtime-js/dist/module/lib/transformers.js
  var PostgresTypes;
  (function(PostgresTypes2) {
    PostgresTypes2["abstime"] = "abstime";
    PostgresTypes2["bool"] = "bool";
    PostgresTypes2["date"] = "date";
    PostgresTypes2["daterange"] = "daterange";
    PostgresTypes2["float4"] = "float4";
    PostgresTypes2["float8"] = "float8";
    PostgresTypes2["int2"] = "int2";
    PostgresTypes2["int4"] = "int4";
    PostgresTypes2["int4range"] = "int4range";
    PostgresTypes2["int8"] = "int8";
    PostgresTypes2["int8range"] = "int8range";
    PostgresTypes2["json"] = "json";
    PostgresTypes2["jsonb"] = "jsonb";
    PostgresTypes2["money"] = "money";
    PostgresTypes2["numeric"] = "numeric";
    PostgresTypes2["oid"] = "oid";
    PostgresTypes2["reltime"] = "reltime";
    PostgresTypes2["text"] = "text";
    PostgresTypes2["time"] = "time";
    PostgresTypes2["timestamp"] = "timestamp";
    PostgresTypes2["timestamptz"] = "timestamptz";
    PostgresTypes2["timetz"] = "timetz";
    PostgresTypes2["tsrange"] = "tsrange";
    PostgresTypes2["tstzrange"] = "tstzrange";
  })(PostgresTypes || (PostgresTypes = {}));
  var convertChangeData = (columns, record, options = {}) => {
    var _a;
    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];
    return Object.keys(record).reduce((acc, rec_key) => {
      acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);
      return acc;
    }, {});
  };
  var convertColumn = (columnName, columns, record, skipTypes) => {
    const column = columns.find((x) => x.name === columnName);
    const colType = column === null || column === void 0 ? void 0 : column.type;
    const value = record[columnName];
    if (colType && !skipTypes.includes(colType)) {
      return convertCell(colType, value);
    }
    return noop2(value);
  };
  var convertCell = (type, value) => {
    if (type.charAt(0) === "_") {
      const dataType = type.slice(1, type.length);
      return toArray2(value, dataType);
    }
    switch (type) {
      case PostgresTypes.bool:
        return toBoolean(value);
      case PostgresTypes.float4:
      case PostgresTypes.float8:
      case PostgresTypes.int2:
      case PostgresTypes.int4:
      case PostgresTypes.int8:
      case PostgresTypes.numeric:
      case PostgresTypes.oid:
        return toNumber(value);
      case PostgresTypes.json:
      case PostgresTypes.jsonb:
        return toJson(value);
      case PostgresTypes.timestamp:
        return toTimestampString(value);
      case PostgresTypes.abstime:
      case PostgresTypes.date:
      case PostgresTypes.daterange:
      case PostgresTypes.int4range:
      case PostgresTypes.int8range:
      case PostgresTypes.money:
      case PostgresTypes.reltime:
      case PostgresTypes.text:
      case PostgresTypes.time:
      case PostgresTypes.timestamptz:
      case PostgresTypes.timetz:
      case PostgresTypes.tsrange:
      case PostgresTypes.tstzrange:
        return noop2(value);
      default:
        return noop2(value);
    }
  };
  var noop2 = (value) => {
    return value;
  };
  var toBoolean = (value) => {
    switch (value) {
      case "t":
        return true;
      case "f":
        return false;
      default:
        return value;
    }
  };
  var toNumber = (value) => {
    if (typeof value === "string") {
      const parsedValue = parseFloat(value);
      if (!Number.isNaN(parsedValue)) {
        return parsedValue;
      }
    }
    return value;
  };
  var toJson = (value) => {
    if (typeof value === "string") {
      try {
        return JSON.parse(value);
      } catch (error) {
        console.log(`JSON parse error: ${error}`);
        return value;
      }
    }
    return value;
  };
  var toArray2 = (value, type) => {
    if (typeof value !== "string") {
      return value;
    }
    const lastIdx = value.length - 1;
    const closeBrace = value[lastIdx];
    const openBrace = value[0];
    if (openBrace === "{" && closeBrace === "}") {
      let arr;
      const valTrim = value.slice(1, lastIdx);
      try {
        arr = JSON.parse("[" + valTrim + "]");
      } catch (_) {
        arr = valTrim ? valTrim.split(",") : [];
      }
      return arr.map((val) => convertCell(type, val));
    }
    return value;
  };
  var toTimestampString = (value) => {
    if (typeof value === "string") {
      return value.replace(" ", "T");
    }
    return value;
  };
  var httpEndpointURL = (socketUrl) => {
    let url = socketUrl;
    url = url.replace(/^ws/i, "http");
    url = url.replace(/(\/socket\/websocket|\/socket|\/websocket)\/?$/i, "");
    return url.replace(/\/+$/, "");
  };

  // node_modules/@supabase/realtime-js/dist/module/lib/push.js
  var Push = class {
    /**
     * Initializes the Push
     *
     * @param channel The Channel
     * @param event The event, for example `"phx_join"`
     * @param payload The payload, for example `{user_id: 123}`
     * @param timeout The push timeout in milliseconds
     */
    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {
      this.channel = channel;
      this.event = event;
      this.payload = payload;
      this.timeout = timeout;
      this.sent = false;
      this.timeoutTimer = void 0;
      this.ref = "";
      this.receivedResp = null;
      this.recHooks = [];
      this.refEvent = null;
    }
    resend(timeout) {
      this.timeout = timeout;
      this._cancelRefEvent();
      this.ref = "";
      this.refEvent = null;
      this.receivedResp = null;
      this.sent = false;
      this.send();
    }
    send() {
      if (this._hasReceived("timeout")) {
        return;
      }
      this.startTimeout();
      this.sent = true;
      this.channel.socket.push({
        topic: this.channel.topic,
        event: this.event,
        payload: this.payload,
        ref: this.ref,
        join_ref: this.channel._joinRef()
      });
    }
    updatePayload(payload) {
      this.payload = Object.assign(Object.assign({}, this.payload), payload);
    }
    receive(status, callback) {
      var _a;
      if (this._hasReceived(status)) {
        callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);
      }
      this.recHooks.push({ status, callback });
      return this;
    }
    startTimeout() {
      if (this.timeoutTimer) {
        return;
      }
      this.ref = this.channel.socket._makeRef();
      this.refEvent = this.channel._replyEventName(this.ref);
      const callback = (payload) => {
        this._cancelRefEvent();
        this._cancelTimeout();
        this.receivedResp = payload;
        this._matchReceive(payload);
      };
      this.channel._on(this.refEvent, {}, callback);
      this.timeoutTimer = setTimeout(() => {
        this.trigger("timeout", {});
      }, this.timeout);
    }
    trigger(status, response) {
      if (this.refEvent)
        this.channel._trigger(this.refEvent, { status, response });
    }
    destroy() {
      this._cancelRefEvent();
      this._cancelTimeout();
    }
    _cancelRefEvent() {
      if (!this.refEvent) {
        return;
      }
      this.channel._off(this.refEvent, {});
    }
    _cancelTimeout() {
      clearTimeout(this.timeoutTimer);
      this.timeoutTimer = void 0;
    }
    _matchReceive({ status, response }) {
      this.recHooks.filter((h) => h.status === status).forEach((h) => h.callback(response));
    }
    _hasReceived(status) {
      return this.receivedResp && this.receivedResp.status === status;
    }
  };

  // node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js
  var REALTIME_PRESENCE_LISTEN_EVENTS;
  (function(REALTIME_PRESENCE_LISTEN_EVENTS2) {
    REALTIME_PRESENCE_LISTEN_EVENTS2["SYNC"] = "sync";
    REALTIME_PRESENCE_LISTEN_EVENTS2["JOIN"] = "join";
    REALTIME_PRESENCE_LISTEN_EVENTS2["LEAVE"] = "leave";
  })(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));
  var RealtimePresence = class _RealtimePresence {
    /**
     * Initializes the Presence.
     *
     * @param channel - The RealtimeChannel
     * @param opts - The options,
     *        for example `{events: {state: 'state', diff: 'diff'}}`
     */
    constructor(channel, opts) {
      this.channel = channel;
      this.state = {};
      this.pendingDiffs = [];
      this.joinRef = null;
      this.caller = {
        onJoin: () => {
        },
        onLeave: () => {
        },
        onSync: () => {
        }
      };
      const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {
        state: "presence_state",
        diff: "presence_diff"
      };
      this.channel._on(events.state, {}, (newState) => {
        const { onJoin, onLeave, onSync } = this.caller;
        this.joinRef = this.channel._joinRef();
        this.state = _RealtimePresence.syncState(this.state, newState, onJoin, onLeave);
        this.pendingDiffs.forEach((diff) => {
          this.state = _RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);
        });
        this.pendingDiffs = [];
        onSync();
      });
      this.channel._on(events.diff, {}, (diff) => {
        const { onJoin, onLeave, onSync } = this.caller;
        if (this.inPendingSyncState()) {
          this.pendingDiffs.push(diff);
        } else {
          this.state = _RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);
          onSync();
        }
      });
      this.onJoin((key3, currentPresences, newPresences) => {
        this.channel._trigger("presence", {
          event: "join",
          key: key3,
          currentPresences,
          newPresences
        });
      });
      this.onLeave((key3, currentPresences, leftPresences) => {
        this.channel._trigger("presence", {
          event: "leave",
          key: key3,
          currentPresences,
          leftPresences
        });
      });
      this.onSync(() => {
        this.channel._trigger("presence", { event: "sync" });
      });
    }
    /**
     * Used to sync the list of presences on the server with the
     * client's state.
     *
     * An optional `onJoin` and `onLeave` callback can be provided to
     * react to changes in the client's local presences across
     * disconnects and reconnects with the server.
     *
     * @internal
     */
    static syncState(currentState, newState, onJoin, onLeave) {
      const state = this.cloneDeep(currentState);
      const transformedState = this.transformState(newState);
      const joins = {};
      const leaves = {};
      this.map(state, (key3, presences) => {
        if (!transformedState[key3]) {
          leaves[key3] = presences;
        }
      });
      this.map(transformedState, (key3, newPresences) => {
        const currentPresences = state[key3];
        if (currentPresences) {
          const newPresenceRefs = newPresences.map((m) => m.presence_ref);
          const curPresenceRefs = currentPresences.map((m) => m.presence_ref);
          const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);
          const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);
          if (joinedPresences.length > 0) {
            joins[key3] = joinedPresences;
          }
          if (leftPresences.length > 0) {
            leaves[key3] = leftPresences;
          }
        } else {
          joins[key3] = newPresences;
        }
      });
      return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);
    }
    /**
     * Used to sync a diff of presence join and leave events from the
     * server, as they happen.
     *
     * Like `syncState`, `syncDiff` accepts optional `onJoin` and
     * `onLeave` callbacks to react to a user joining or leaving from a
     * device.
     *
     * @internal
     */
    static syncDiff(state, diff, onJoin, onLeave) {
      const { joins, leaves } = {
        joins: this.transformState(diff.joins),
        leaves: this.transformState(diff.leaves)
      };
      if (!onJoin) {
        onJoin = () => {
        };
      }
      if (!onLeave) {
        onLeave = () => {
        };
      }
      this.map(joins, (key3, newPresences) => {
        var _a;
        const currentPresences = (_a = state[key3]) !== null && _a !== void 0 ? _a : [];
        state[key3] = this.cloneDeep(newPresences);
        if (currentPresences.length > 0) {
          const joinedPresenceRefs = state[key3].map((m) => m.presence_ref);
          const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);
          state[key3].unshift(...curPresences);
        }
        onJoin(key3, currentPresences, newPresences);
      });
      this.map(leaves, (key3, leftPresences) => {
        let currentPresences = state[key3];
        if (!currentPresences)
          return;
        const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);
        currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);
        state[key3] = currentPresences;
        onLeave(key3, currentPresences, leftPresences);
        if (currentPresences.length === 0)
          delete state[key3];
      });
      return state;
    }
    /** @internal */
    static map(obj, func) {
      return Object.getOwnPropertyNames(obj).map((key3) => func(key3, obj[key3]));
    }
    /**
     * Remove 'metas' key
     * Change 'phx_ref' to 'presence_ref'
     * Remove 'phx_ref' and 'phx_ref_prev'
     *
     * @example
     * // returns {
     *  abc123: [
     *    { presence_ref: '2', user_id: 1 },
     *    { presence_ref: '3', user_id: 2 }
     *  ]
     * }
     * RealtimePresence.transformState({
     *  abc123: {
     *    metas: [
     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },
     *      { phx_ref: '3', user_id: 2 }
     *    ]
     *  }
     * })
     *
     * @internal
     */
    static transformState(state) {
      state = this.cloneDeep(state);
      return Object.getOwnPropertyNames(state).reduce((newState, key3) => {
        const presences = state[key3];
        if ("metas" in presences) {
          newState[key3] = presences.metas.map((presence) => {
            presence["presence_ref"] = presence["phx_ref"];
            delete presence["phx_ref"];
            delete presence["phx_ref_prev"];
            return presence;
          });
        } else {
          newState[key3] = presences;
        }
        return newState;
      }, {});
    }
    /** @internal */
    static cloneDeep(obj) {
      return JSON.parse(JSON.stringify(obj));
    }
    /** @internal */
    onJoin(callback) {
      this.caller.onJoin = callback;
    }
    /** @internal */
    onLeave(callback) {
      this.caller.onLeave = callback;
    }
    /** @internal */
    onSync(callback) {
      this.caller.onSync = callback;
    }
    /** @internal */
    inPendingSyncState() {
      return !this.joinRef || this.joinRef !== this.channel._joinRef();
    }
  };

  // node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js
  var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;
  (function(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2) {
    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["ALL"] = "*";
    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["INSERT"] = "INSERT";
    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["UPDATE"] = "UPDATE";
    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT2["DELETE"] = "DELETE";
  })(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));
  var REALTIME_LISTEN_TYPES;
  (function(REALTIME_LISTEN_TYPES2) {
    REALTIME_LISTEN_TYPES2["BROADCAST"] = "broadcast";
    REALTIME_LISTEN_TYPES2["PRESENCE"] = "presence";
    REALTIME_LISTEN_TYPES2["POSTGRES_CHANGES"] = "postgres_changes";
  })(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));
  var REALTIME_SUBSCRIBE_STATES;
  (function(REALTIME_SUBSCRIBE_STATES2) {
    REALTIME_SUBSCRIBE_STATES2["SUBSCRIBED"] = "SUBSCRIBED";
    REALTIME_SUBSCRIBE_STATES2["TIMED_OUT"] = "TIMED_OUT";
    REALTIME_SUBSCRIBE_STATES2["CLOSED"] = "CLOSED";
    REALTIME_SUBSCRIBE_STATES2["CHANNEL_ERROR"] = "CHANNEL_ERROR";
  })(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));
  var RealtimeChannel = class _RealtimeChannel {
    constructor(topic, params = { config: {} }, socket) {
      this.topic = topic;
      this.params = params;
      this.socket = socket;
      this.bindings = {};
      this.state = CHANNEL_STATES.closed;
      this.joinedOnce = false;
      this.pushBuffer = [];
      this.subTopic = topic.replace(/^realtime:/i, "");
      this.params.config = Object.assign({
        broadcast: { ack: false, self: false },
        presence: { key: "" },
        private: false
      }, params.config);
      this.timeout = this.socket.timeout;
      this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);
      this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);
      this.joinPush.receive("ok", () => {
        this.state = CHANNEL_STATES.joined;
        this.rejoinTimer.reset();
        this.pushBuffer.forEach((pushEvent) => pushEvent.send());
        this.pushBuffer = [];
      });
      this._onClose(() => {
        this.rejoinTimer.reset();
        this.socket.log("channel", `close ${this.topic} ${this._joinRef()}`);
        this.state = CHANNEL_STATES.closed;
        this.socket._remove(this);
      });
      this._onError((reason) => {
        if (this._isLeaving() || this._isClosed()) {
          return;
        }
        this.socket.log("channel", `error ${this.topic}`, reason);
        this.state = CHANNEL_STATES.errored;
        this.rejoinTimer.scheduleTimeout();
      });
      this.joinPush.receive("timeout", () => {
        if (!this._isJoining()) {
          return;
        }
        this.socket.log("channel", `timeout ${this.topic}`, this.joinPush.timeout);
        this.state = CHANNEL_STATES.errored;
        this.rejoinTimer.scheduleTimeout();
      });
      this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {
        this._trigger(this._replyEventName(ref), payload);
      });
      this.presence = new RealtimePresence(this);
      this.broadcastEndpointURL = httpEndpointURL(this.socket.endPoint) + "/api/broadcast";
    }
    /** Subscribe registers your client with the server */
    subscribe(callback, timeout = this.timeout) {
      var _a, _b;
      if (!this.socket.isConnected()) {
        this.socket.connect();
      }
      if (this.joinedOnce) {
        throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;
      } else {
        const { config: { broadcast, presence, private: isPrivate } } = this.params;
        this._onError((e) => callback && callback("CHANNEL_ERROR", e));
        this._onClose(() => callback && callback("CLOSED"));
        const accessTokenPayload = {};
        const config = {
          broadcast,
          presence,
          postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r3) => r3.filter)) !== null && _b !== void 0 ? _b : [],
          private: isPrivate
        };
        if (this.socket.accessToken) {
          accessTokenPayload.access_token = this.socket.accessToken;
        }
        this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));
        this.joinedOnce = true;
        this._rejoin(timeout);
        this.joinPush.receive("ok", ({ postgres_changes: serverPostgresFilters }) => {
          var _a2;
          this.socket.accessToken && this.socket.setAuth(this.socket.accessToken);
          if (serverPostgresFilters === void 0) {
            callback && callback("SUBSCRIBED");
            return;
          } else {
            const clientPostgresBindings = this.bindings.postgres_changes;
            const bindingsLen = (_a2 = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a2 !== void 0 ? _a2 : 0;
            const newPostgresBindings = [];
            for (let i = 0; i < bindingsLen; i++) {
              const clientPostgresBinding = clientPostgresBindings[i];
              const { filter: { event, schema, table: table3, filter: filter2 } } = clientPostgresBinding;
              const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];
              if (serverPostgresFilter && serverPostgresFilter.event === event && serverPostgresFilter.schema === schema && serverPostgresFilter.table === table3 && serverPostgresFilter.filter === filter2) {
                newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));
              } else {
                this.unsubscribe();
                callback && callback("CHANNEL_ERROR", new Error("mismatch between server and client bindings for postgres changes"));
                return;
              }
            }
            this.bindings.postgres_changes = newPostgresBindings;
            callback && callback("SUBSCRIBED");
            return;
          }
        }).receive("error", (error) => {
          callback && callback("CHANNEL_ERROR", new Error(JSON.stringify(Object.values(error).join(", ") || "error")));
          return;
        }).receive("timeout", () => {
          callback && callback("TIMED_OUT");
          return;
        });
      }
      return this;
    }
    presenceState() {
      return this.presence.state;
    }
    async track(payload, opts = {}) {
      return await this.send({
        type: "presence",
        event: "track",
        payload
      }, opts.timeout || this.timeout);
    }
    async untrack(opts = {}) {
      return await this.send({
        type: "presence",
        event: "untrack"
      }, opts);
    }
    on(type, filter2, callback) {
      return this._on(type, filter2, callback);
    }
    /**
     * Sends a message into the channel.
     *
     * @param args Arguments to send to channel
     * @param args.type The type of event to send
     * @param args.event The name of the event being sent
     * @param args.payload Payload to be sent
     * @param opts Options to be used during the send process
     */
    async send(args, opts = {}) {
      var _a, _b;
      if (!this._canPush() && args.type === "broadcast") {
        const { event, payload: endpoint_payload } = args;
        const options = {
          method: "POST",
          headers: {
            Authorization: this.socket.accessToken ? `Bearer ${this.socket.accessToken}` : "",
            apikey: this.socket.apiKey ? this.socket.apiKey : "",
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            messages: [
              { topic: this.subTopic, event, payload: endpoint_payload }
            ]
          })
        };
        try {
          const response = await this._fetchWithTimeout(this.broadcastEndpointURL, options, (_a = opts.timeout) !== null && _a !== void 0 ? _a : this.timeout);
          await ((_b = response.body) === null || _b === void 0 ? void 0 : _b.cancel());
          return response.ok ? "ok" : "error";
        } catch (error) {
          if (error.name === "AbortError") {
            return "timed out";
          } else {
            return "error";
          }
        }
      } else {
        return new Promise((resolve) => {
          var _a2, _b2, _c;
          const push = this._push(args.type, args, opts.timeout || this.timeout);
          if (args.type === "broadcast" && !((_c = (_b2 = (_a2 = this.params) === null || _a2 === void 0 ? void 0 : _a2.config) === null || _b2 === void 0 ? void 0 : _b2.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {
            resolve("ok");
          }
          push.receive("ok", () => resolve("ok"));
          push.receive("error", () => resolve("error"));
          push.receive("timeout", () => resolve("timed out"));
        });
      }
    }
    updateJoinPayload(payload) {
      this.joinPush.updatePayload(payload);
    }
    /**
     * Leaves the channel.
     *
     * Unsubscribes from server events, and instructs channel to terminate on server.
     * Triggers onClose() hooks.
     *
     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:
     * channel.unsubscribe().receive("ok", () => alert("left!") )
     */
    unsubscribe(timeout = this.timeout) {
      this.state = CHANNEL_STATES.leaving;
      const onClose = () => {
        this.socket.log("channel", `leave ${this.topic}`);
        this._trigger(CHANNEL_EVENTS.close, "leave", this._joinRef());
      };
      this.rejoinTimer.reset();
      this.joinPush.destroy();
      return new Promise((resolve) => {
        const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);
        leavePush.receive("ok", () => {
          onClose();
          resolve("ok");
        }).receive("timeout", () => {
          onClose();
          resolve("timed out");
        }).receive("error", () => {
          resolve("error");
        });
        leavePush.send();
        if (!this._canPush()) {
          leavePush.trigger("ok", {});
        }
      });
    }
    /** @internal */
    async _fetchWithTimeout(url, options, timeout) {
      const controller = new AbortController();
      const id3 = setTimeout(() => controller.abort(), timeout);
      const response = await this.socket.fetch(url, Object.assign(Object.assign({}, options), { signal: controller.signal }));
      clearTimeout(id3);
      return response;
    }
    /** @internal */
    _push(event, payload, timeout = this.timeout) {
      if (!this.joinedOnce) {
        throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;
      }
      let pushEvent = new Push(this, event, payload, timeout);
      if (this._canPush()) {
        pushEvent.send();
      } else {
        pushEvent.startTimeout();
        this.pushBuffer.push(pushEvent);
      }
      return pushEvent;
    }
    /**
     * Overridable message hook
     *
     * Receives all events for specialized message handling before dispatching to the channel callbacks.
     * Must return the payload, modified or unmodified.
     *
     * @internal
     */
    _onMessage(_event, payload, _ref) {
      return payload;
    }
    /** @internal */
    _isMember(topic) {
      return this.topic === topic;
    }
    /** @internal */
    _joinRef() {
      return this.joinPush.ref;
    }
    /** @internal */
    _trigger(type, payload, ref) {
      var _a, _b;
      const typeLower = type.toLocaleLowerCase();
      const { close, error, leave, join } = CHANNEL_EVENTS;
      const events = [close, error, leave, join];
      if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {
        return;
      }
      let handledPayload = this._onMessage(typeLower, payload, ref);
      if (payload && !handledPayload) {
        throw "channel onMessage callbacks must return the payload, modified or unmodified";
      }
      if (["insert", "update", "delete"].includes(typeLower)) {
        (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind2) => {
          var _a2, _b2, _c;
          return ((_a2 = bind2.filter) === null || _a2 === void 0 ? void 0 : _a2.event) === "*" || ((_c = (_b2 = bind2.filter) === null || _b2 === void 0 ? void 0 : _b2.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower;
        }).map((bind2) => bind2.callback(handledPayload, ref));
      } else {
        (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind2) => {
          var _a2, _b2, _c, _d, _e, _f;
          if (["broadcast", "presence", "postgres_changes"].includes(typeLower)) {
            if ("id" in bind2) {
              const bindId = bind2.id;
              const bindEvent = (_a2 = bind2.filter) === null || _a2 === void 0 ? void 0 : _a2.event;
              return bindId && ((_b2 = payload.ids) === null || _b2 === void 0 ? void 0 : _b2.includes(bindId)) && (bindEvent === "*" || (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) === ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase()));
            } else {
              const bindEvent = (_e = (_d = bind2 === null || bind2 === void 0 ? void 0 : bind2.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();
              return bindEvent === "*" || bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase());
            }
          } else {
            return bind2.type.toLocaleLowerCase() === typeLower;
          }
        }).map((bind2) => {
          if (typeof handledPayload === "object" && "ids" in handledPayload) {
            const postgresChanges = handledPayload.data;
            const { schema, table: table3, commit_timestamp, type: type2, errors } = postgresChanges;
            const enrichedPayload = {
              schema,
              table: table3,
              commit_timestamp,
              eventType: type2,
              new: {},
              old: {},
              errors
            };
            handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));
          }
          bind2.callback(handledPayload, ref);
        });
      }
    }
    /** @internal */
    _isClosed() {
      return this.state === CHANNEL_STATES.closed;
    }
    /** @internal */
    _isJoined() {
      return this.state === CHANNEL_STATES.joined;
    }
    /** @internal */
    _isJoining() {
      return this.state === CHANNEL_STATES.joining;
    }
    /** @internal */
    _isLeaving() {
      return this.state === CHANNEL_STATES.leaving;
    }
    /** @internal */
    _replyEventName(ref) {
      return `chan_reply_${ref}`;
    }
    /** @internal */
    _on(type, filter2, callback) {
      const typeLower = type.toLocaleLowerCase();
      const binding = {
        type: typeLower,
        filter: filter2,
        callback
      };
      if (this.bindings[typeLower]) {
        this.bindings[typeLower].push(binding);
      } else {
        this.bindings[typeLower] = [binding];
      }
      return this;
    }
    /** @internal */
    _off(type, filter2) {
      const typeLower = type.toLocaleLowerCase();
      this.bindings[typeLower] = this.bindings[typeLower].filter((bind2) => {
        var _a;
        return !(((_a = bind2.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower && _RealtimeChannel.isEqual(bind2.filter, filter2));
      });
      return this;
    }
    /** @internal */
    static isEqual(obj1, obj2) {
      if (Object.keys(obj1).length !== Object.keys(obj2).length) {
        return false;
      }
      for (const k in obj1) {
        if (obj1[k] !== obj2[k]) {
          return false;
        }
      }
      return true;
    }
    /** @internal */
    _rejoinUntilConnected() {
      this.rejoinTimer.scheduleTimeout();
      if (this.socket.isConnected()) {
        this._rejoin();
      }
    }
    /**
     * Registers a callback that will be executed when the channel closes.
     *
     * @internal
     */
    _onClose(callback) {
      this._on(CHANNEL_EVENTS.close, {}, callback);
    }
    /**
     * Registers a callback that will be executed when the channel encounteres an error.
     *
     * @internal
     */
    _onError(callback) {
      this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));
    }
    /**
     * Returns `true` if the socket is connected and the channel has been joined.
     *
     * @internal
     */
    _canPush() {
      return this.socket.isConnected() && this._isJoined();
    }
    /** @internal */
    _rejoin(timeout = this.timeout) {
      if (this._isLeaving()) {
        return;
      }
      this.socket._leaveOpenTopic(this.topic);
      this.state = CHANNEL_STATES.joining;
      this.joinPush.resend(timeout);
    }
    /** @internal */
    _getPayloadRecords(payload) {
      const records = {
        new: {},
        old: {}
      };
      if (payload.type === "INSERT" || payload.type === "UPDATE") {
        records.new = convertChangeData(payload.columns, payload.record);
      }
      if (payload.type === "UPDATE" || payload.type === "DELETE") {
        records.old = convertChangeData(payload.columns, payload.old_record);
      }
      return records;
    }
  };

  // node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js
  var noop3 = () => {
  };
  var NATIVE_WEBSOCKET_AVAILABLE = typeof WebSocket !== "undefined";
  var RealtimeClient = class {
    /**
     * Initializes the Socket.
     *
     * @param endPoint The string WebSocket endpoint, ie, "ws://example.com/socket", "wss://example.com", "/socket" (inherited host & protocol)
     * @param httpEndpoint The string HTTP endpoint, ie, "https://example.com", "/" (inherited host & protocol)
     * @param options.transport The Websocket Transport, for example WebSocket.
     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.
     * @param options.params The optional params to pass when connecting.
     * @param options.headers The optional headers to pass when connecting.
     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.
     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }
     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))
     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.
     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.
     */
    constructor(endPoint, options) {
      var _a;
      this.accessToken = null;
      this.apiKey = null;
      this.channels = [];
      this.endPoint = "";
      this.httpEndpoint = "";
      this.headers = DEFAULT_HEADERS;
      this.params = {};
      this.timeout = DEFAULT_TIMEOUT;
      this.heartbeatIntervalMs = 3e4;
      this.heartbeatTimer = void 0;
      this.pendingHeartbeatRef = null;
      this.ref = 0;
      this.logger = noop3;
      this.conn = null;
      this.sendBuffer = [];
      this.serializer = new Serializer();
      this.stateChangeCallbacks = {
        open: [],
        close: [],
        error: [],
        message: []
      };
      this._resolveFetch = (customFetch) => {
        let _fetch;
        if (customFetch) {
          _fetch = customFetch;
        } else if (typeof fetch === "undefined") {
          _fetch = (...args) => Promise.resolve().then(() => (init_browser(), browser_exports)).then(({ default: fetch3 }) => fetch3(...args));
        } else {
          _fetch = fetch;
        }
        return (...args) => _fetch(...args);
      };
      this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;
      this.httpEndpoint = httpEndpointURL(endPoint);
      if (options === null || options === void 0 ? void 0 : options.transport) {
        this.transport = options.transport;
      } else {
        this.transport = null;
      }
      if (options === null || options === void 0 ? void 0 : options.params)
        this.params = options.params;
      if (options === null || options === void 0 ? void 0 : options.headers)
        this.headers = Object.assign(Object.assign({}, this.headers), options.headers);
      if (options === null || options === void 0 ? void 0 : options.timeout)
        this.timeout = options.timeout;
      if (options === null || options === void 0 ? void 0 : options.logger)
        this.logger = options.logger;
      if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)
        this.heartbeatIntervalMs = options.heartbeatIntervalMs;
      const accessToken = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.apikey;
      if (accessToken) {
        this.accessToken = accessToken;
        this.apiKey = accessToken;
      }
      this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs) ? options.reconnectAfterMs : (tries) => {
        return [1e3, 2e3, 5e3, 1e4][tries - 1] || 1e4;
      };
      this.encode = (options === null || options === void 0 ? void 0 : options.encode) ? options.encode : (payload, callback) => {
        return callback(JSON.stringify(payload));
      };
      this.decode = (options === null || options === void 0 ? void 0 : options.decode) ? options.decode : this.serializer.decode.bind(this.serializer);
      this.reconnectTimer = new Timer(async () => {
        this.disconnect();
        this.connect();
      }, this.reconnectAfterMs);
      this.fetch = this._resolveFetch(options === null || options === void 0 ? void 0 : options.fetch);
    }
    /**
     * Connects the socket, unless already connected.
     */
    connect() {
      if (this.conn) {
        return;
      }
      if (this.transport) {
        this.conn = new this.transport(this._endPointURL(), void 0, {
          headers: this.headers
        });
        return;
      }
      if (NATIVE_WEBSOCKET_AVAILABLE) {
        this.conn = new WebSocket(this._endPointURL());
        this.setupConnection();
        return;
      }
      this.conn = new WSWebSocketDummy(this._endPointURL(), void 0, {
        close: () => {
          this.conn = null;
        }
      });
      Promise.resolve().then(() => __toESM(require_browser())).then(({ default: WS2 }) => {
        this.conn = new WS2(this._endPointURL(), void 0, {
          headers: this.headers
        });
        this.setupConnection();
      });
    }
    /**
     * Disconnects the socket.
     *
     * @param code A numeric status code to send on disconnect.
     * @param reason A custom reason for the disconnect.
     */
    disconnect(code, reason) {
      if (this.conn) {
        this.conn.onclose = function() {
        };
        if (code) {
          this.conn.close(code, reason !== null && reason !== void 0 ? reason : "");
        } else {
          this.conn.close();
        }
        this.conn = null;
        this.heartbeatTimer && clearInterval(this.heartbeatTimer);
        this.reconnectTimer.reset();
      }
    }
    /**
     * Returns all created channels
     */
    getChannels() {
      return this.channels;
    }
    /**
     * Unsubscribes and removes a single channel
     * @param channel A RealtimeChannel instance
     */
    async removeChannel(channel) {
      const status = await channel.unsubscribe();
      if (this.channels.length === 0) {
        this.disconnect();
      }
      return status;
    }
    /**
     * Unsubscribes and removes all channels
     */
    async removeAllChannels() {
      const values_1 = await Promise.all(this.channels.map((channel) => channel.unsubscribe()));
      this.disconnect();
      return values_1;
    }
    /**
     * Logs the message.
     *
     * For customized logging, `this.logger` can be overridden.
     */
    log(kind, msg, data) {
      this.logger(kind, msg, data);
    }
    /**
     * Returns the current state of the socket.
     */
    connectionState() {
      switch (this.conn && this.conn.readyState) {
        case SOCKET_STATES.connecting:
          return CONNECTION_STATE.Connecting;
        case SOCKET_STATES.open:
          return CONNECTION_STATE.Open;
        case SOCKET_STATES.closing:
          return CONNECTION_STATE.Closing;
        default:
          return CONNECTION_STATE.Closed;
      }
    }
    /**
     * Returns `true` is the connection is open.
     */
    isConnected() {
      return this.connectionState() === CONNECTION_STATE.Open;
    }
    channel(topic, params = { config: {} }) {
      const chan = new RealtimeChannel(`realtime:${topic}`, params, this);
      this.channels.push(chan);
      return chan;
    }
    /**
     * Push out a message if the socket is connected.
     *
     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.
     */
    push(data) {
      const { topic, event, payload, ref } = data;
      const callback = () => {
        this.encode(data, (result) => {
          var _a;
          (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);
        });
      };
      this.log("push", `${topic} ${event} (${ref})`, payload);
      if (this.isConnected()) {
        callback();
      } else {
        this.sendBuffer.push(callback);
      }
    }
    /**
     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.
     *
     * @param token A JWT string.
     */
    setAuth(token) {
      this.accessToken = token;
      this.channels.forEach((channel) => {
        token && channel.updateJoinPayload({ access_token: token });
        if (channel.joinedOnce && channel._isJoined()) {
          channel._push(CHANNEL_EVENTS.access_token, { access_token: token });
        }
      });
    }
    /**
     * Return the next message ref, accounting for overflows
     *
     * @internal
     */
    _makeRef() {
      let newRef = this.ref + 1;
      if (newRef === this.ref) {
        this.ref = 0;
      } else {
        this.ref = newRef;
      }
      return this.ref.toString();
    }
    /**
     * Unsubscribe from channels with the specified topic.
     *
     * @internal
     */
    _leaveOpenTopic(topic) {
      let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));
      if (dupChannel) {
        this.log("transport", `leaving duplicate topic "${topic}"`);
        dupChannel.unsubscribe();
      }
    }
    /**
     * Removes a subscription from the socket.
     *
     * @param channel An open subscription.
     *
     * @internal
     */
    _remove(channel) {
      this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());
    }
    /**
     * Sets up connection handlers.
     *
     * @internal
     */
    setupConnection() {
      if (this.conn) {
        this.conn.binaryType = "arraybuffer";
        this.conn.onopen = () => this._onConnOpen();
        this.conn.onerror = (error) => this._onConnError(error);
        this.conn.onmessage = (event) => this._onConnMessage(event);
        this.conn.onclose = (event) => this._onConnClose(event);
      }
    }
    /**
     * Returns the URL of the websocket.
     *
     * @internal
     */
    _endPointURL() {
      return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));
    }
    /** @internal */
    _onConnMessage(rawMessage) {
      this.decode(rawMessage.data, (msg) => {
        let { topic, event, payload, ref } = msg;
        if (ref && ref === this.pendingHeartbeatRef || event === (payload === null || payload === void 0 ? void 0 : payload.type)) {
          this.pendingHeartbeatRef = null;
        }
        this.log("receive", `${payload.status || ""} ${topic} ${event} ${ref && "(" + ref + ")" || ""}`, payload);
        this.channels.filter((channel) => channel._isMember(topic)).forEach((channel) => channel._trigger(event, payload, ref));
        this.stateChangeCallbacks.message.forEach((callback) => callback(msg));
      });
    }
    /** @internal */
    _onConnOpen() {
      this.log("transport", `connected to ${this._endPointURL()}`);
      this._flushSendBuffer();
      this.reconnectTimer.reset();
      this.heartbeatTimer && clearInterval(this.heartbeatTimer);
      this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);
      this.stateChangeCallbacks.open.forEach((callback) => callback());
    }
    /** @internal */
    _onConnClose(event) {
      this.log("transport", "close", event);
      this._triggerChanError();
      this.heartbeatTimer && clearInterval(this.heartbeatTimer);
      this.reconnectTimer.scheduleTimeout();
      this.stateChangeCallbacks.close.forEach((callback) => callback(event));
    }
    /** @internal */
    _onConnError(error) {
      this.log("transport", error.message);
      this._triggerChanError();
      this.stateChangeCallbacks.error.forEach((callback) => callback(error));
    }
    /** @internal */
    _triggerChanError() {
      this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));
    }
    /** @internal */
    _appendParams(url, params) {
      if (Object.keys(params).length === 0) {
        return url;
      }
      const prefix = url.match(/\?/) ? "&" : "?";
      const query = new URLSearchParams(params);
      return `${url}${prefix}${query}`;
    }
    /** @internal */
    _flushSendBuffer() {
      if (this.isConnected() && this.sendBuffer.length > 0) {
        this.sendBuffer.forEach((callback) => callback());
        this.sendBuffer = [];
      }
    }
    /** @internal */
    _sendHeartbeat() {
      var _a;
      if (!this.isConnected()) {
        return;
      }
      if (this.pendingHeartbeatRef) {
        this.pendingHeartbeatRef = null;
        this.log("transport", "heartbeat timeout. Attempting to re-establish connection");
        (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, "hearbeat timeout");
        return;
      }
      this.pendingHeartbeatRef = this._makeRef();
      this.push({
        topic: "phoenix",
        event: "heartbeat",
        payload: {},
        ref: this.pendingHeartbeatRef
      });
      this.setAuth(this.accessToken);
    }
  };
  var WSWebSocketDummy = class {
    constructor(address, _protocols, options) {
      this.binaryType = "arraybuffer";
      this.onclose = () => {
      };
      this.onerror = () => {
      };
      this.onmessage = () => {
      };
      this.onopen = () => {
      };
      this.readyState = SOCKET_STATES.connecting;
      this.send = () => {
      };
      this.url = null;
      this.url = address;
      this.close = options.close;
    }
  };

  // node_modules/@supabase/storage-js/dist/module/lib/errors.js
  var StorageError = class extends Error {
    constructor(message) {
      super(message);
      this.__isStorageError = true;
      this.name = "StorageError";
    }
  };
  function isStorageError(error) {
    return typeof error === "object" && error !== null && "__isStorageError" in error;
  }
  var StorageApiError = class extends StorageError {
    constructor(message, status) {
      super(message);
      this.name = "StorageApiError";
      this.status = status;
    }
    toJSON() {
      return {
        name: this.name,
        message: this.message,
        status: this.status
      };
    }
  };
  var StorageUnknownError = class extends StorageError {
    constructor(message, originalError) {
      super(message);
      this.name = "StorageUnknownError";
      this.originalError = originalError;
    }
  };

  // node_modules/@supabase/storage-js/dist/module/lib/helpers.js
  var __awaiter10 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var resolveFetch2 = (customFetch) => {
    let _fetch;
    if (customFetch) {
      _fetch = customFetch;
    } else if (typeof fetch === "undefined") {
      _fetch = (...args) => Promise.resolve().then(() => (init_browser(), browser_exports)).then(({ default: fetch3 }) => fetch3(...args));
    } else {
      _fetch = fetch;
    }
    return (...args) => _fetch(...args);
  };
  var resolveResponse = () => __awaiter10(void 0, void 0, void 0, function* () {
    if (typeof Response === "undefined") {
      return (yield Promise.resolve().then(() => (init_browser(), browser_exports))).Response;
    }
    return Response;
  });

  // node_modules/@supabase/storage-js/dist/module/lib/fetch.js
  var __awaiter11 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);
  var handleError = (error, reject) => __awaiter11(void 0, void 0, void 0, function* () {
    const Res = yield resolveResponse();
    if (error instanceof Res) {
      error.json().then((err) => {
        reject(new StorageApiError(_getErrorMessage(err), error.status || 500));
      }).catch((err) => {
        reject(new StorageUnknownError(_getErrorMessage(err), err));
      });
    } else {
      reject(new StorageUnknownError(_getErrorMessage(error), error));
    }
  });
  var _getRequestParams = (method, options, parameters, body) => {
    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };
    if (method === "GET") {
      return params;
    }
    params.headers = Object.assign({ "Content-Type": "application/json" }, options === null || options === void 0 ? void 0 : options.headers);
    params.body = JSON.stringify(body);
    return Object.assign(Object.assign({}, params), parameters);
  };
  function _handleRequest(fetcher, method, url, options, parameters, body) {
    return __awaiter11(this, void 0, void 0, function* () {
      return new Promise((resolve, reject) => {
        fetcher(url, _getRequestParams(method, options, parameters, body)).then((result) => {
          if (!result.ok)
            throw result;
          if (options === null || options === void 0 ? void 0 : options.noResolveJson)
            return result;
          return result.json();
        }).then((data) => resolve(data)).catch((error) => handleError(error, reject));
      });
    });
  }
  function get(fetcher, url, options, parameters) {
    return __awaiter11(this, void 0, void 0, function* () {
      return _handleRequest(fetcher, "GET", url, options, parameters);
    });
  }
  function post(fetcher, url, body, options, parameters) {
    return __awaiter11(this, void 0, void 0, function* () {
      return _handleRequest(fetcher, "POST", url, options, parameters, body);
    });
  }
  function put(fetcher, url, body, options, parameters) {
    return __awaiter11(this, void 0, void 0, function* () {
      return _handleRequest(fetcher, "PUT", url, options, parameters, body);
    });
  }
  function remove(fetcher, url, body, options, parameters) {
    return __awaiter11(this, void 0, void 0, function* () {
      return _handleRequest(fetcher, "DELETE", url, options, parameters, body);
    });
  }

  // node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js
  var __awaiter12 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var DEFAULT_SEARCH_OPTIONS = {
    limit: 100,
    offset: 0,
    sortBy: {
      column: "name",
      order: "asc"
    }
  };
  var DEFAULT_FILE_OPTIONS = {
    cacheControl: "3600",
    contentType: "text/plain;charset=UTF-8",
    upsert: false
  };
  var StorageFileApi = class {
    constructor(url, headers = {}, bucketId, fetch3) {
      this.url = url;
      this.headers = headers;
      this.bucketId = bucketId;
      this.fetch = resolveFetch2(fetch3);
    }
    /**
     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.
     *
     * @param method HTTP method.
     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
     * @param fileBody The body of the file to be stored in the bucket.
     */
    uploadOrUpdate(method, path, fileBody, fileOptions) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          let body;
          const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);
          const headers = Object.assign(Object.assign({}, this.headers), method === "POST" && { "x-upsert": String(options.upsert) });
          if (typeof Blob !== "undefined" && fileBody instanceof Blob) {
            body = new FormData();
            body.append("cacheControl", options.cacheControl);
            body.append("", fileBody);
          } else if (typeof FormData !== "undefined" && fileBody instanceof FormData) {
            body = fileBody;
            body.append("cacheControl", options.cacheControl);
          } else {
            body = fileBody;
            headers["cache-control"] = `max-age=${options.cacheControl}`;
            headers["content-type"] = options.contentType;
          }
          const cleanPath = this._removeEmptyFolders(path);
          const _path = this._getFinalPath(cleanPath);
          const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body, headers }, (options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {}));
          const data = yield res.json();
          if (res.ok) {
            return {
              data: { path: cleanPath, id: data.Id, fullPath: data.Key },
              error: null
            };
          } else {
            const error = data;
            return { data: null, error };
          }
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Uploads a file to an existing bucket.
     *
     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
     * @param fileBody The body of the file to be stored in the bucket.
     */
    upload(path, fileBody, fileOptions) {
      return __awaiter12(this, void 0, void 0, function* () {
        return this.uploadOrUpdate("POST", path, fileBody, fileOptions);
      });
    }
    /**
     * Upload a file with a token generated from `createSignedUploadUrl`.
     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.
     * @param token The token generated from `createSignedUploadUrl`
     * @param fileBody The body of the file to be stored in the bucket.
     */
    uploadToSignedUrl(path, token, fileBody, fileOptions) {
      return __awaiter12(this, void 0, void 0, function* () {
        const cleanPath = this._removeEmptyFolders(path);
        const _path = this._getFinalPath(cleanPath);
        const url = new URL(this.url + `/object/upload/sign/${_path}`);
        url.searchParams.set("token", token);
        try {
          let body;
          const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);
          const headers = Object.assign(Object.assign({}, this.headers), { "x-upsert": String(options.upsert) });
          if (typeof Blob !== "undefined" && fileBody instanceof Blob) {
            body = new FormData();
            body.append("cacheControl", options.cacheControl);
            body.append("", fileBody);
          } else if (typeof FormData !== "undefined" && fileBody instanceof FormData) {
            body = fileBody;
            body.append("cacheControl", options.cacheControl);
          } else {
            body = fileBody;
            headers["cache-control"] = `max-age=${options.cacheControl}`;
            headers["content-type"] = options.contentType;
          }
          const res = yield this.fetch(url.toString(), {
            method: "PUT",
            body,
            headers
          });
          const data = yield res.json();
          if (res.ok) {
            return {
              data: { path: cleanPath, fullPath: data.Key },
              error: null
            };
          } else {
            const error = data;
            return { data: null, error };
          }
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Creates a signed upload URL.
     * Signed upload URLs can be used to upload files to the bucket without further authentication.
     * They are valid for 2 hours.
     * @param path The file path, including the current file name. For example `folder/image.png`.
     * @param options.upsert If set to true, allows the file to be overwritten if it already exists.
     */
    createSignedUploadUrl(path, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          let _path = this._getFinalPath(path);
          const headers = Object.assign({}, this.headers);
          if (options === null || options === void 0 ? void 0 : options.upsert) {
            headers["x-upsert"] = "true";
          }
          const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers });
          const url = new URL(this.url + data.url);
          const token = url.searchParams.get("token");
          if (!token) {
            throw new StorageError("No token returned by API");
          }
          return { data: { signedUrl: url.toString(), path, token }, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Replaces an existing file at the specified path with a new one.
     *
     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.
     * @param fileBody The body of the file to be stored in the bucket.
     */
    update(path, fileBody, fileOptions) {
      return __awaiter12(this, void 0, void 0, function* () {
        return this.uploadOrUpdate("PUT", path, fileBody, fileOptions);
      });
    }
    /**
     * Moves an existing file to a new path in the same bucket.
     *
     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.
     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.
     * @param options The destination options.
     */
    move(fromPath, toPath, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          const data = yield post(this.fetch, `${this.url}/object/move`, {
            bucketId: this.bucketId,
            sourceKey: fromPath,
            destinationKey: toPath,
            destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket
          }, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Copies an existing file to a new path in the same bucket.
     *
     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.
     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.
     * @param options The destination options.
     */
    copy(fromPath, toPath, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          const data = yield post(this.fetch, `${this.url}/object/copy`, {
            bucketId: this.bucketId,
            sourceKey: fromPath,
            destinationKey: toPath,
            destinationBucket: options === null || options === void 0 ? void 0 : options.destinationBucket
          }, { headers: this.headers });
          return { data: { path: data.Key }, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.
     *
     * @param path The file path, including the current file name. For example `folder/image.png`.
     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.
     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
     * @param options.transform Transform the asset before serving it to the client.
     */
    createSignedUrl(path, expiresIn, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          let _path = this._getFinalPath(path);
          let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, (options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {}), { headers: this.headers });
          const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? `&download=${options.download === true ? "" : options.download}` : "";
          const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);
          data = { signedUrl };
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.
     *
     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.
     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.
     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
     */
    createSignedUrls(paths, expiresIn, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });
          const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? `&download=${options.download === true ? "" : options.download}` : "";
          return {
            data: data.map((datum) => Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`) : null })),
            error: null
          };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.
     *
     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.
     * @param options.transform Transform the asset before serving it to the client.
     */
    download(path, options) {
      return __awaiter12(this, void 0, void 0, function* () {
        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== "undefined";
        const renderPath = wantsTransformation ? "render/image/authenticated" : "object";
        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});
        const queryString = transformationQuery ? `?${transformationQuery}` : "";
        try {
          const _path = this._getFinalPath(path);
          const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {
            headers: this.headers,
            noResolveJson: true
          });
          const data = yield res.blob();
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.
     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.
     *
     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.
     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.
     * @param options.transform Transform the asset before serving it to the client.
     */
    getPublicUrl(path, options) {
      const _path = this._getFinalPath(path);
      const _queryString = [];
      const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download) ? `download=${options.download === true ? "" : options.download}` : "";
      if (downloadQueryParam !== "") {
        _queryString.push(downloadQueryParam);
      }
      const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== "undefined";
      const renderPath = wantsTransformation ? "render/image" : "object";
      const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});
      if (transformationQuery !== "") {
        _queryString.push(transformationQuery);
      }
      let queryString = _queryString.join("&");
      if (queryString !== "") {
        queryString = `?${queryString}`;
      }
      return {
        data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) }
      };
    }
    /**
     * Deletes files within the same bucket
     *
     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].
     */
    remove(paths) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Get file metadata
     * @param id the file id to retrieve metadata
     */
    // async getMetadata(
    //   id: string
    // ): Promise<
    //   | {
    //       data: Metadata
    //       error: null
    //     }
    //   | {
    //       data: null
    //       error: StorageError
    //     }
    // > {
    //   try {
    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })
    //     return { data, error: null }
    //   } catch (error) {
    //     if (isStorageError(error)) {
    //       return { data: null, error }
    //     }
    //     throw error
    //   }
    // }
    /**
     * Update file metadata
     * @param id the file id to update metadata
     * @param meta the new file metadata
     */
    // async updateMetadata(
    //   id: string,
    //   meta: Metadata
    // ): Promise<
    //   | {
    //       data: Metadata
    //       error: null
    //     }
    //   | {
    //       data: null
    //       error: StorageError
    //     }
    // > {
    //   try {
    //     const data = await post(
    //       this.fetch,
    //       `${this.url}/metadata/${id}`,
    //       { ...meta },
    //       { headers: this.headers }
    //     )
    //     return { data, error: null }
    //   } catch (error) {
    //     if (isStorageError(error)) {
    //       return { data: null, error }
    //     }
    //     throw error
    //   }
    // }
    /**
     * Lists all the files within a bucket.
     * @param path The folder path.
     */
    list(path, options, parameters) {
      return __awaiter12(this, void 0, void 0, function* () {
        try {
          const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || "" });
          const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    _getFinalPath(path) {
      return `${this.bucketId}/${path}`;
    }
    _removeEmptyFolders(path) {
      return path.replace(/^\/|\/$/g, "").replace(/\/+/g, "/");
    }
    transformOptsToQueryString(transform) {
      const params = [];
      if (transform.width) {
        params.push(`width=${transform.width}`);
      }
      if (transform.height) {
        params.push(`height=${transform.height}`);
      }
      if (transform.resize) {
        params.push(`resize=${transform.resize}`);
      }
      if (transform.format) {
        params.push(`format=${transform.format}`);
      }
      if (transform.quality) {
        params.push(`quality=${transform.quality}`);
      }
      return params.join("&");
    }
  };

  // node_modules/@supabase/storage-js/dist/module/lib/version.js
  var version18 = "2.6.0";

  // node_modules/@supabase/storage-js/dist/module/lib/constants.js
  var DEFAULT_HEADERS2 = { "X-Client-Info": `storage-js/${version18}` };

  // node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js
  var __awaiter13 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var StorageBucketApi = class {
    constructor(url, headers = {}, fetch3) {
      this.url = url;
      this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS2), headers);
      this.fetch = resolveFetch2(fetch3);
    }
    /**
     * Retrieves the details of all Storage buckets within an existing project.
     */
    listBuckets() {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Retrieves the details of an existing Storage bucket.
     *
     * @param id The unique identifier of the bucket you would like to retrieve.
     */
    getBucket(id3) {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield get(this.fetch, `${this.url}/bucket/${id3}`, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Creates a new Storage bucket
     *
     * @param id A unique identifier for the bucket you are creating.
     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.
     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.
     * The global file size limit takes precedence over this value.
     * The default value is null, which doesn't set a per bucket file size limit.
     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.
     * The default value is null, which allows files with all mime types to be uploaded.
     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.
     * @returns newly created bucket id
     */
    createBucket(id3, options = {
      public: false
    }) {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield post(this.fetch, `${this.url}/bucket`, {
            id: id3,
            name: id3,
            public: options.public,
            file_size_limit: options.fileSizeLimit,
            allowed_mime_types: options.allowedMimeTypes
          }, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Updates a Storage bucket
     *
     * @param id A unique identifier for the bucket you are updating.
     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.
     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.
     * The global file size limit takes precedence over this value.
     * The default value is null, which doesn't set a per bucket file size limit.
     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.
     * The default value is null, which allows files with all mime types to be uploaded.
     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.
     */
    updateBucket(id3, options) {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield put(this.fetch, `${this.url}/bucket/${id3}`, {
            id: id3,
            name: id3,
            public: options.public,
            file_size_limit: options.fileSizeLimit,
            allowed_mime_types: options.allowedMimeTypes
          }, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Removes all objects inside a single bucket.
     *
     * @param id The unique identifier of the bucket you would like to empty.
     */
    emptyBucket(id3) {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield post(this.fetch, `${this.url}/bucket/${id3}/empty`, {}, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.
     * You must first `empty()` the bucket.
     *
     * @param id The unique identifier of the bucket you would like to delete.
     */
    deleteBucket(id3) {
      return __awaiter13(this, void 0, void 0, function* () {
        try {
          const data = yield remove(this.fetch, `${this.url}/bucket/${id3}`, {}, { headers: this.headers });
          return { data, error: null };
        } catch (error) {
          if (isStorageError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
  };

  // node_modules/@supabase/storage-js/dist/module/StorageClient.js
  var StorageClient = class extends StorageBucketApi {
    constructor(url, headers = {}, fetch3) {
      super(url, headers, fetch3);
    }
    /**
     * Perform file operation in a bucket.
     *
     * @param id The bucket id to operate on.
     */
    from(id3) {
      return new StorageFileApi(this.url, this.headers, id3, this.fetch);
    }
  };

  // node_modules/@supabase/supabase-js/dist/module/lib/version.js
  var version19 = "2.44.4";

  // node_modules/@supabase/supabase-js/dist/module/lib/constants.js
  var JS_ENV = "";
  if (typeof Deno !== "undefined") {
    JS_ENV = "deno";
  } else if (typeof document !== "undefined") {
    JS_ENV = "web";
  } else if (typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    JS_ENV = "react-native";
  } else {
    JS_ENV = "node";
  }
  var DEFAULT_HEADERS3 = { "X-Client-Info": `supabase-js-${JS_ENV}/${version19}` };
  var DEFAULT_GLOBAL_OPTIONS = {
    headers: DEFAULT_HEADERS3
  };
  var DEFAULT_DB_OPTIONS = {
    schema: "public"
  };
  var DEFAULT_AUTH_OPTIONS = {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    flowType: "implicit"
  };
  var DEFAULT_REALTIME_OPTIONS = {};

  // node_modules/@supabase/supabase-js/dist/module/lib/fetch.js
  init_browser();
  var __awaiter14 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var resolveFetch3 = (customFetch) => {
    let _fetch;
    if (customFetch) {
      _fetch = customFetch;
    } else if (typeof fetch === "undefined") {
      _fetch = browser_default2;
    } else {
      _fetch = fetch;
    }
    return (...args) => _fetch(...args);
  };
  var resolveHeadersConstructor = () => {
    if (typeof Headers === "undefined") {
      return Headers2;
    }
    return Headers;
  };
  var fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {
    const fetch3 = resolveFetch3(customFetch);
    const HeadersConstructor = resolveHeadersConstructor();
    return (input, init3) => __awaiter14(void 0, void 0, void 0, function* () {
      var _a;
      const accessToken = (_a = yield getAccessToken()) !== null && _a !== void 0 ? _a : supabaseKey;
      let headers = new HeadersConstructor(init3 === null || init3 === void 0 ? void 0 : init3.headers);
      if (!headers.has("apikey")) {
        headers.set("apikey", supabaseKey);
      }
      if (!headers.has("Authorization")) {
        headers.set("Authorization", `Bearer ${accessToken}`);
      }
      return fetch3(input, Object.assign(Object.assign({}, init3), { headers }));
    });
  };

  // node_modules/@supabase/supabase-js/dist/module/lib/helpers.js
  function stripTrailingSlash(url) {
    return url.replace(/\/$/, "");
  }
  function applySettingDefaults(options, defaults2) {
    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions } = options;
    const { db: DEFAULT_DB_OPTIONS2, auth: DEFAULT_AUTH_OPTIONS2, realtime: DEFAULT_REALTIME_OPTIONS2, global: DEFAULT_GLOBAL_OPTIONS2 } = defaults2;
    return {
      db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS2), dbOptions),
      auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS2), authOptions),
      realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS2), realtimeOptions),
      global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS2), globalOptions)
    };
  }

  // node_modules/@supabase/auth-js/dist/module/lib/version.js
  var version20 = "2.64.4";

  // node_modules/@supabase/auth-js/dist/module/lib/constants.js
  var GOTRUE_URL = "http://localhost:9999";
  var STORAGE_KEY = "supabase.auth.token";
  var DEFAULT_HEADERS4 = { "X-Client-Info": `gotrue-js/${version20}` };
  var EXPIRY_MARGIN = 10;
  var API_VERSION_HEADER_NAME = "X-Supabase-Api-Version";
  var API_VERSIONS = {
    "2024-01-01": {
      timestamp: Date.parse("2024-01-01T00:00:00.0Z"),
      name: "2024-01-01"
    }
  };

  // node_modules/@supabase/auth-js/dist/module/lib/helpers.js
  function expiresAt(expiresIn) {
    const timeNow = Math.round(Date.now() / 1e3);
    return timeNow + expiresIn;
  }
  function uuid() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function(c) {
      const r3 = Math.random() * 16 | 0, v = c == "x" ? r3 : r3 & 3 | 8;
      return v.toString(16);
    });
  }
  var isBrowser = () => typeof document !== "undefined";
  var localStorageWriteTests = {
    tested: false,
    writable: false
  };
  var supportsLocalStorage = () => {
    if (!isBrowser()) {
      return false;
    }
    try {
      if (typeof globalThis.localStorage !== "object") {
        return false;
      }
    } catch (e) {
      return false;
    }
    if (localStorageWriteTests.tested) {
      return localStorageWriteTests.writable;
    }
    const randomKey = `lswt-${Math.random()}${Math.random()}`;
    try {
      globalThis.localStorage.setItem(randomKey, randomKey);
      globalThis.localStorage.removeItem(randomKey);
      localStorageWriteTests.tested = true;
      localStorageWriteTests.writable = true;
    } catch (e) {
      localStorageWriteTests.tested = true;
      localStorageWriteTests.writable = false;
    }
    return localStorageWriteTests.writable;
  };
  function parseParametersFromURL(href) {
    const result = {};
    const url = new URL(href);
    if (url.hash && url.hash[0] === "#") {
      try {
        const hashSearchParams = new URLSearchParams(url.hash.substring(1));
        hashSearchParams.forEach((value, key3) => {
          result[key3] = value;
        });
      } catch (e) {
      }
    }
    url.searchParams.forEach((value, key3) => {
      result[key3] = value;
    });
    return result;
  }
  var resolveFetch4 = (customFetch) => {
    let _fetch;
    if (customFetch) {
      _fetch = customFetch;
    } else if (typeof fetch === "undefined") {
      _fetch = (...args) => Promise.resolve().then(() => (init_browser(), browser_exports)).then(({ default: fetch3 }) => fetch3(...args));
    } else {
      _fetch = fetch;
    }
    return (...args) => _fetch(...args);
  };
  var looksLikeFetchResponse = (maybeResponse) => {
    return typeof maybeResponse === "object" && maybeResponse !== null && "status" in maybeResponse && "ok" in maybeResponse && "json" in maybeResponse && typeof maybeResponse.json === "function";
  };
  var setItemAsync = async (storage, key3, data) => {
    await storage.setItem(key3, JSON.stringify(data));
  };
  var getItemAsync = async (storage, key3) => {
    const value = await storage.getItem(key3);
    if (!value) {
      return null;
    }
    try {
      return JSON.parse(value);
    } catch (_a) {
      return value;
    }
  };
  var removeItemAsync = async (storage, key3) => {
    await storage.removeItem(key3);
  };
  function decodeBase64URL(value) {
    const key3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    let base64 = "";
    let chr1, chr2, chr3;
    let enc1, enc2, enc3, enc4;
    let i = 0;
    value = value.replace("-", "+").replace("_", "/");
    while (i < value.length) {
      enc1 = key3.indexOf(value.charAt(i++));
      enc2 = key3.indexOf(value.charAt(i++));
      enc3 = key3.indexOf(value.charAt(i++));
      enc4 = key3.indexOf(value.charAt(i++));
      chr1 = enc1 << 2 | enc2 >> 4;
      chr2 = (enc2 & 15) << 4 | enc3 >> 2;
      chr3 = (enc3 & 3) << 6 | enc4;
      base64 = base64 + String.fromCharCode(chr1);
      if (enc3 != 64 && chr2 != 0) {
        base64 = base64 + String.fromCharCode(chr2);
      }
      if (enc4 != 64 && chr3 != 0) {
        base64 = base64 + String.fromCharCode(chr3);
      }
    }
    return base64;
  }
  var Deferred = class _Deferred {
    constructor() {
      ;
      this.promise = new _Deferred.promiseConstructor((res, rej) => {
        ;
        this.resolve = res;
        this.reject = rej;
      });
    }
  };
  Deferred.promiseConstructor = Promise;
  function decodeJWTPayload(token) {
    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;
    const parts = token.split(".");
    if (parts.length !== 3) {
      throw new Error("JWT is not valid: not a JWT structure");
    }
    if (!base64UrlRegex.test(parts[1])) {
      throw new Error("JWT is not valid: payload is not in base64url format");
    }
    const base64Url = parts[1];
    return JSON.parse(decodeBase64URL(base64Url));
  }
  async function sleep(time) {
    return await new Promise((accept) => {
      setTimeout(() => accept(null), time);
    });
  }
  function retryable(fn, isRetryable) {
    const promise = new Promise((accept, reject) => {
      ;
      (async () => {
        for (let attempt = 0; attempt < Infinity; attempt++) {
          try {
            const result = await fn(attempt);
            if (!isRetryable(attempt, null, result)) {
              accept(result);
              return;
            }
          } catch (e) {
            if (!isRetryable(attempt, e)) {
              reject(e);
              return;
            }
          }
        }
      })();
    });
    return promise;
  }
  function dec2hex(dec) {
    return ("0" + dec.toString(16)).substr(-2);
  }
  function generatePKCEVerifier() {
    const verifierLength = 56;
    const array = new Uint32Array(verifierLength);
    if (typeof crypto === "undefined") {
      const charSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~";
      const charSetLen = charSet.length;
      let verifier = "";
      for (let i = 0; i < verifierLength; i++) {
        verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));
      }
      return verifier;
    }
    crypto.getRandomValues(array);
    return Array.from(array, dec2hex).join("");
  }
  async function sha2562(randomString) {
    const encoder = new TextEncoder();
    const encodedData = encoder.encode(randomString);
    const hash3 = await crypto.subtle.digest("SHA-256", encodedData);
    const bytes = new Uint8Array(hash3);
    return Array.from(bytes).map((c) => String.fromCharCode(c)).join("");
  }
  function base64urlencode(str) {
    return btoa(str).replace(/\+/g, "-").replace(/\//g, "_").replace(/=+$/, "");
  }
  async function generatePKCEChallenge(verifier) {
    const hasCryptoSupport = typeof crypto !== "undefined" && typeof crypto.subtle !== "undefined" && typeof TextEncoder !== "undefined";
    if (!hasCryptoSupport) {
      console.warn("WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.");
      return verifier;
    }
    const hashed = await sha2562(verifier);
    return base64urlencode(hashed);
  }
  async function getCodeChallengeAndMethod(storage, storageKey, isPasswordRecovery = false) {
    const codeVerifier = generatePKCEVerifier();
    let storedCodeVerifier = codeVerifier;
    if (isPasswordRecovery) {
      storedCodeVerifier += "/PASSWORD_RECOVERY";
    }
    await setItemAsync(storage, `${storageKey}-code-verifier`, storedCodeVerifier);
    const codeChallenge = await generatePKCEChallenge(codeVerifier);
    const codeChallengeMethod = codeVerifier === codeChallenge ? "plain" : "s256";
    return [codeChallenge, codeChallengeMethod];
  }
  var API_VERSION_REGEX = /^2[0-9]{3}-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[0-9]|3[0-1])$/i;
  function parseResponseAPIVersion(response) {
    const apiVersion = response.headers.get(API_VERSION_HEADER_NAME);
    if (!apiVersion) {
      return null;
    }
    if (!apiVersion.match(API_VERSION_REGEX)) {
      return null;
    }
    try {
      const date = /* @__PURE__ */ new Date(`${apiVersion}T00:00:00.0Z`);
      return date;
    } catch (e) {
      return null;
    }
  }

  // node_modules/@supabase/auth-js/dist/module/lib/errors.js
  var AuthError = class extends Error {
    constructor(message, status, code) {
      super(message);
      this.__isAuthError = true;
      this.name = "AuthError";
      this.status = status;
      this.code = code;
    }
  };
  function isAuthError(error) {
    return typeof error === "object" && error !== null && "__isAuthError" in error;
  }
  var AuthApiError = class extends AuthError {
    constructor(message, status, code) {
      super(message, status, code);
      this.name = "AuthApiError";
      this.status = status;
      this.code = code;
    }
  };
  function isAuthApiError(error) {
    return isAuthError(error) && error.name === "AuthApiError";
  }
  var AuthUnknownError = class extends AuthError {
    constructor(message, originalError) {
      super(message);
      this.name = "AuthUnknownError";
      this.originalError = originalError;
    }
  };
  var CustomAuthError = class extends AuthError {
    constructor(message, name, status, code) {
      super(message, status, code);
      this.name = name;
      this.status = status;
    }
  };
  var AuthSessionMissingError = class extends CustomAuthError {
    constructor() {
      super("Auth session missing!", "AuthSessionMissingError", 400, void 0);
    }
  };
  var AuthInvalidTokenResponseError = class extends CustomAuthError {
    constructor() {
      super("Auth session or user missing", "AuthInvalidTokenResponseError", 500, void 0);
    }
  };
  var AuthInvalidCredentialsError = class extends CustomAuthError {
    constructor(message) {
      super(message, "AuthInvalidCredentialsError", 400, void 0);
    }
  };
  var AuthImplicitGrantRedirectError = class extends CustomAuthError {
    constructor(message, details = null) {
      super(message, "AuthImplicitGrantRedirectError", 500, void 0);
      this.details = null;
      this.details = details;
    }
    toJSON() {
      return {
        name: this.name,
        message: this.message,
        status: this.status,
        details: this.details
      };
    }
  };
  var AuthPKCEGrantCodeExchangeError = class extends CustomAuthError {
    constructor(message, details = null) {
      super(message, "AuthPKCEGrantCodeExchangeError", 500, void 0);
      this.details = null;
      this.details = details;
    }
    toJSON() {
      return {
        name: this.name,
        message: this.message,
        status: this.status,
        details: this.details
      };
    }
  };
  var AuthRetryableFetchError = class extends CustomAuthError {
    constructor(message, status) {
      super(message, "AuthRetryableFetchError", status, void 0);
    }
  };
  function isAuthRetryableFetchError(error) {
    return isAuthError(error) && error.name === "AuthRetryableFetchError";
  }
  var AuthWeakPasswordError = class extends CustomAuthError {
    constructor(message, status, reasons) {
      super(message, "AuthWeakPasswordError", status, "weak_password");
      this.reasons = reasons;
    }
  };

  // node_modules/@supabase/auth-js/dist/module/lib/fetch.js
  var __rest = function(s, e) {
    var t = {};
    for (var p in s)
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };
  var _getErrorMessage2 = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);
  var NETWORK_ERROR_CODES = [502, 503, 504];
  async function handleError2(error) {
    var _a;
    if (!looksLikeFetchResponse(error)) {
      throw new AuthRetryableFetchError(_getErrorMessage2(error), 0);
    }
    if (NETWORK_ERROR_CODES.includes(error.status)) {
      throw new AuthRetryableFetchError(_getErrorMessage2(error), error.status);
    }
    let data;
    try {
      data = await error.json();
    } catch (e) {
      throw new AuthUnknownError(_getErrorMessage2(e), e);
    }
    let errorCode = void 0;
    const responseAPIVersion = parseResponseAPIVersion(error);
    if (responseAPIVersion && responseAPIVersion.getTime() >= API_VERSIONS["2024-01-01"].timestamp && typeof data === "object" && data && typeof data.code === "string") {
      errorCode = data.code;
    } else if (typeof data === "object" && data && typeof data.error_code === "string") {
      errorCode = data.error_code;
    }
    if (!errorCode) {
      if (typeof data === "object" && data && typeof data.weak_password === "object" && data.weak_password && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.reasons.reduce((a, i) => a && typeof i === "string", true)) {
        throw new AuthWeakPasswordError(_getErrorMessage2(data), error.status, data.weak_password.reasons);
      }
    } else if (errorCode === "weak_password") {
      throw new AuthWeakPasswordError(_getErrorMessage2(data), error.status, ((_a = data.weak_password) === null || _a === void 0 ? void 0 : _a.reasons) || []);
    }
    throw new AuthApiError(_getErrorMessage2(data), error.status || 500, errorCode);
  }
  var _getRequestParams2 = (method, options, parameters, body) => {
    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };
    if (method === "GET") {
      return params;
    }
    params.headers = Object.assign({ "Content-Type": "application/json;charset=UTF-8" }, options === null || options === void 0 ? void 0 : options.headers);
    params.body = JSON.stringify(body);
    return Object.assign(Object.assign({}, params), parameters);
  };
  async function _request(fetcher, method, url, options) {
    var _a;
    const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);
    if (!headers[API_VERSION_HEADER_NAME]) {
      headers[API_VERSION_HEADER_NAME] = API_VERSIONS["2024-01-01"].name;
    }
    if (options === null || options === void 0 ? void 0 : options.jwt) {
      headers["Authorization"] = `Bearer ${options.jwt}`;
    }
    const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};
    if (options === null || options === void 0 ? void 0 : options.redirectTo) {
      qs["redirect_to"] = options.redirectTo;
    }
    const queryString = Object.keys(qs).length ? "?" + new URLSearchParams(qs).toString() : "";
    const data = await _handleRequest2(fetcher, method, url + queryString, {
      headers,
      noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson
    }, {}, options === null || options === void 0 ? void 0 : options.body);
    return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };
  }
  async function _handleRequest2(fetcher, method, url, options, parameters, body) {
    const requestParams = _getRequestParams2(method, options, parameters, body);
    let result;
    try {
      result = await fetcher(url, Object.assign({}, requestParams));
    } catch (e) {
      console.error(e);
      throw new AuthRetryableFetchError(_getErrorMessage2(e), 0);
    }
    if (!result.ok) {
      await handleError2(result);
    }
    if (options === null || options === void 0 ? void 0 : options.noResolveJson) {
      return result;
    }
    try {
      return await result.json();
    } catch (e) {
      await handleError2(e);
    }
  }
  function _sessionResponse(data) {
    var _a;
    let session = null;
    if (hasSession(data)) {
      session = Object.assign({}, data);
      if (!data.expires_at) {
        session.expires_at = expiresAt(data.expires_in);
      }
    }
    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;
    return { data: { session, user }, error: null };
  }
  function _sessionResponsePassword(data) {
    const response = _sessionResponse(data);
    if (!response.error && data.weak_password && typeof data.weak_password === "object" && Array.isArray(data.weak_password.reasons) && data.weak_password.reasons.length && data.weak_password.message && typeof data.weak_password.message === "string" && data.weak_password.reasons.reduce((a, i) => a && typeof i === "string", true)) {
      response.data.weak_password = data.weak_password;
    }
    return response;
  }
  function _userResponse(data) {
    var _a;
    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;
    return { data: { user }, error: null };
  }
  function _ssoResponse(data) {
    return { data, error: null };
  }
  function _generateLinkResponse(data) {
    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, ["action_link", "email_otp", "hashed_token", "redirect_to", "verification_type"]);
    const properties = {
      action_link,
      email_otp,
      hashed_token,
      redirect_to,
      verification_type
    };
    const user = Object.assign({}, rest);
    return {
      data: {
        properties,
        user
      },
      error: null
    };
  }
  function _noResolveJsonResponse(data) {
    return data;
  }
  function hasSession(data) {
    return data.access_token && data.refresh_token && data.expires_in;
  }

  // node_modules/@supabase/auth-js/dist/module/GoTrueAdminApi.js
  var __rest2 = function(s, e) {
    var t = {};
    for (var p in s)
      if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
          t[p[i]] = s[p[i]];
      }
    return t;
  };
  var GoTrueAdminApi = class {
    constructor({ url = "", headers = {}, fetch: fetch3 }) {
      this.url = url;
      this.headers = headers;
      this.fetch = resolveFetch4(fetch3);
      this.mfa = {
        listFactors: this._listFactors.bind(this),
        deleteFactor: this._deleteFactor.bind(this)
      };
    }
    /**
     * Removes a logged-in session.
     * @param jwt A valid, logged-in JWT.
     * @param scope The logout sope.
     */
    async signOut(jwt, scope = "global") {
      try {
        await _request(this.fetch, "POST", `${this.url}/logout?scope=${scope}`, {
          headers: this.headers,
          jwt,
          noResolveJson: true
        });
        return { data: null, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * Sends an invite link to an email address.
     * @param email The email address of the user.
     * @param options Additional options to be included when inviting.
     */
    async inviteUserByEmail(email, options = {}) {
      try {
        return await _request(this.fetch, "POST", `${this.url}/invite`, {
          body: { email, data: options.data },
          headers: this.headers,
          redirectTo: options.redirectTo,
          xform: _userResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Generates email links and OTPs to be sent via a custom email provider.
     * @param email The user's email.
     * @param options.password User password. For signup only.
     * @param options.data Optional user metadata. For signup only.
     * @param options.redirectTo The redirect url which should be appended to the generated link
     */
    async generateLink(params) {
      try {
        const { options } = params, rest = __rest2(params, ["options"]);
        const body = Object.assign(Object.assign({}, rest), options);
        if ("newEmail" in rest) {
          body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;
          delete body["newEmail"];
        }
        return await _request(this.fetch, "POST", `${this.url}/admin/generate_link`, {
          body,
          headers: this.headers,
          xform: _generateLinkResponse,
          redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo
        });
      } catch (error) {
        if (isAuthError(error)) {
          return {
            data: {
              properties: null,
              user: null
            },
            error
          };
        }
        throw error;
      }
    }
    // User Admin API
    /**
     * Creates a new user.
     * This function should only be called on a server. Never expose your `service_role` key in the browser.
     */
    async createUser(attributes) {
      try {
        return await _request(this.fetch, "POST", `${this.url}/admin/users`, {
          body: attributes,
          headers: this.headers,
          xform: _userResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Get a list of users.
     *
     * This function should only be called on a server. Never expose your `service_role` key in the browser.
     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.
     */
    async listUsers(params) {
      var _a, _b, _c, _d, _e, _f, _g;
      try {
        const pagination = { nextPage: null, lastPage: 0, total: 0 };
        const response = await _request(this.fetch, "GET", `${this.url}/admin/users`, {
          headers: this.headers,
          noResolveJson: true,
          query: {
            page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "",
            per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ""
          },
          xform: _noResolveJsonResponse
        });
        if (response.error)
          throw response.error;
        const users = await response.json();
        const total = (_e = response.headers.get("x-total-count")) !== null && _e !== void 0 ? _e : 0;
        const links = (_g = (_f = response.headers.get("link")) === null || _f === void 0 ? void 0 : _f.split(",")) !== null && _g !== void 0 ? _g : [];
        if (links.length > 0) {
          links.forEach((link) => {
            const page = parseInt(link.split(";")[0].split("=")[1].substring(0, 1));
            const rel = JSON.parse(link.split(";")[1].split("=")[1]);
            pagination[`${rel}Page`] = page;
          });
          pagination.total = parseInt(total);
        }
        return { data: Object.assign(Object.assign({}, users), pagination), error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { users: [] }, error };
        }
        throw error;
      }
    }
    /**
     * Get user by id.
     *
     * @param uid The user's unique identifier
     *
     * This function should only be called on a server. Never expose your `service_role` key in the browser.
     */
    async getUserById(uid) {
      try {
        return await _request(this.fetch, "GET", `${this.url}/admin/users/${uid}`, {
          headers: this.headers,
          xform: _userResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Updates the user data.
     *
     * @param attributes The data you want to update.
     *
     * This function should only be called on a server. Never expose your `service_role` key in the browser.
     */
    async updateUserById(uid, attributes) {
      try {
        return await _request(this.fetch, "PUT", `${this.url}/admin/users/${uid}`, {
          body: attributes,
          headers: this.headers,
          xform: _userResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Delete a user. Requires a `service_role` key.
     *
     * @param id The user id you want to remove.
     * @param shouldSoftDelete If true, then the user will be soft-deleted (setting `deleted_at` to the current timestamp and disabling their account while preserving their data) from the auth schema.
     * Defaults to false for backward compatibility.
     *
     * This function should only be called on a server. Never expose your `service_role` key in the browser.
     */
    async deleteUser(id3, shouldSoftDelete = false) {
      try {
        return await _request(this.fetch, "DELETE", `${this.url}/admin/users/${id3}`, {
          headers: this.headers,
          body: {
            should_soft_delete: shouldSoftDelete
          },
          xform: _userResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    async _listFactors(params) {
      try {
        const { data, error } = await _request(this.fetch, "GET", `${this.url}/admin/users/${params.userId}/factors`, {
          headers: this.headers,
          xform: (factors) => {
            return { data: { factors }, error: null };
          }
        });
        return { data, error };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    async _deleteFactor(params) {
      try {
        const data = await _request(this.fetch, "DELETE", `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {
          headers: this.headers
        });
        return { data, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
  };

  // node_modules/@supabase/auth-js/dist/module/lib/local-storage.js
  var localStorageAdapter = {
    getItem: (key3) => {
      if (!supportsLocalStorage()) {
        return null;
      }
      return globalThis.localStorage.getItem(key3);
    },
    setItem: (key3, value) => {
      if (!supportsLocalStorage()) {
        return;
      }
      globalThis.localStorage.setItem(key3, value);
    },
    removeItem: (key3) => {
      if (!supportsLocalStorage()) {
        return;
      }
      globalThis.localStorage.removeItem(key3);
    }
  };
  function memoryLocalStorageAdapter(store = {}) {
    return {
      getItem: (key3) => {
        return store[key3] || null;
      },
      setItem: (key3, value) => {
        store[key3] = value;
      },
      removeItem: (key3) => {
        delete store[key3];
      }
    };
  }

  // node_modules/@supabase/auth-js/dist/module/lib/polyfills.js
  function polyfillGlobalThis() {
    if (typeof globalThis === "object")
      return;
    try {
      Object.defineProperty(Object.prototype, "__magic__", {
        get: function() {
          return this;
        },
        configurable: true
      });
      __magic__.globalThis = __magic__;
      delete Object.prototype.__magic__;
    } catch (e) {
      if (typeof self !== "undefined") {
        self.globalThis = self;
      }
    }
  }

  // node_modules/@supabase/auth-js/dist/module/lib/locks.js
  var internals = {
    /**
     * @experimental
     */
    debug: !!(globalThis && supportsLocalStorage() && globalThis.localStorage && globalThis.localStorage.getItem("supabase.gotrue-js.locks.debug") === "true")
  };
  var LockAcquireTimeoutError = class extends Error {
    constructor(message) {
      super(message);
      this.isAcquireTimeout = true;
    }
  };
  var NavigatorLockAcquireTimeoutError = class extends LockAcquireTimeoutError {
  };
  async function navigatorLock(name, acquireTimeout, fn) {
    if (internals.debug) {
      console.log("@supabase/gotrue-js: navigatorLock: acquire lock", name, acquireTimeout);
    }
    const abortController = new globalThis.AbortController();
    if (acquireTimeout > 0) {
      setTimeout(() => {
        abortController.abort();
        if (internals.debug) {
          console.log("@supabase/gotrue-js: navigatorLock acquire timed out", name);
        }
      }, acquireTimeout);
    }
    return await globalThis.navigator.locks.request(name, acquireTimeout === 0 ? {
      mode: "exclusive",
      ifAvailable: true
    } : {
      mode: "exclusive",
      signal: abortController.signal
    }, async (lock) => {
      if (lock) {
        if (internals.debug) {
          console.log("@supabase/gotrue-js: navigatorLock: acquired", name, lock.name);
        }
        try {
          return await fn();
        } finally {
          if (internals.debug) {
            console.log("@supabase/gotrue-js: navigatorLock: released", name, lock.name);
          }
        }
      } else {
        if (acquireTimeout === 0) {
          if (internals.debug) {
            console.log("@supabase/gotrue-js: navigatorLock: not immediately available", name);
          }
          throw new NavigatorLockAcquireTimeoutError(`Acquiring an exclusive Navigator LockManager lock "${name}" immediately failed`);
        } else {
          if (internals.debug) {
            try {
              const result = await globalThis.navigator.locks.query();
              console.log("@supabase/gotrue-js: Navigator LockManager state", JSON.stringify(result, null, "  "));
            } catch (e) {
              console.warn("@supabase/gotrue-js: Error when querying Navigator LockManager state", e);
            }
          }
          console.warn("@supabase/gotrue-js: Navigator LockManager returned a null lock when using #request without ifAvailable set to true, it appears this browser is not following the LockManager spec https://developer.mozilla.org/en-US/docs/Web/API/LockManager/request");
          return await fn();
        }
      }
    });
  }

  // node_modules/@supabase/auth-js/dist/module/GoTrueClient.js
  polyfillGlobalThis();
  var DEFAULT_OPTIONS = {
    url: GOTRUE_URL,
    storageKey: STORAGE_KEY,
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true,
    headers: DEFAULT_HEADERS4,
    flowType: "implicit",
    debug: false,
    hasCustomAuthorizationHeader: false
  };
  var AUTO_REFRESH_TICK_DURATION = 30 * 1e3;
  var AUTO_REFRESH_TICK_THRESHOLD = 3;
  async function lockNoOp(name, acquireTimeout, fn) {
    return await fn();
  }
  var GoTrueClient = class _GoTrueClient {
    /**
     * Create a new client for use in the browser.
     */
    constructor(options) {
      var _a, _b;
      this.memoryStorage = null;
      this.stateChangeEmitters = /* @__PURE__ */ new Map();
      this.autoRefreshTicker = null;
      this.visibilityChangedCallback = null;
      this.refreshingDeferred = null;
      this.initializePromise = null;
      this.detectSessionInUrl = true;
      this.hasCustomAuthorizationHeader = false;
      this.suppressGetSessionWarning = false;
      this.lockAcquired = false;
      this.pendingInLock = [];
      this.broadcastChannel = null;
      this.logger = console.log;
      this.instanceID = _GoTrueClient.nextInstanceID;
      _GoTrueClient.nextInstanceID += 1;
      if (this.instanceID > 0 && isBrowser()) {
        console.warn("Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.");
      }
      const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);
      this.logDebugMessages = !!settings.debug;
      if (typeof settings.debug === "function") {
        this.logger = settings.debug;
      }
      this.persistSession = settings.persistSession;
      this.storageKey = settings.storageKey;
      this.autoRefreshToken = settings.autoRefreshToken;
      this.admin = new GoTrueAdminApi({
        url: settings.url,
        headers: settings.headers,
        fetch: settings.fetch
      });
      this.url = settings.url;
      this.headers = settings.headers;
      this.fetch = resolveFetch4(settings.fetch);
      this.lock = settings.lock || lockNoOp;
      this.detectSessionInUrl = settings.detectSessionInUrl;
      this.flowType = settings.flowType;
      this.hasCustomAuthorizationHeader = settings.hasCustomAuthorizationHeader;
      if (settings.lock) {
        this.lock = settings.lock;
      } else if (isBrowser() && ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.locks)) {
        this.lock = navigatorLock;
      } else {
        this.lock = lockNoOp;
      }
      this.mfa = {
        verify: this._verify.bind(this),
        enroll: this._enroll.bind(this),
        unenroll: this._unenroll.bind(this),
        challenge: this._challenge.bind(this),
        listFactors: this._listFactors.bind(this),
        challengeAndVerify: this._challengeAndVerify.bind(this),
        getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this)
      };
      if (this.persistSession) {
        if (settings.storage) {
          this.storage = settings.storage;
        } else {
          if (supportsLocalStorage()) {
            this.storage = localStorageAdapter;
          } else {
            this.memoryStorage = {};
            this.storage = memoryLocalStorageAdapter(this.memoryStorage);
          }
        }
      } else {
        this.memoryStorage = {};
        this.storage = memoryLocalStorageAdapter(this.memoryStorage);
      }
      if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {
        try {
          this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);
        } catch (e) {
          console.error("Failed to create a new BroadcastChannel, multi-tab state changes will not be available", e);
        }
        (_b = this.broadcastChannel) === null || _b === void 0 ? void 0 : _b.addEventListener("message", async (event) => {
          this._debug("received broadcast notification from other tab or client", event);
          await this._notifyAllSubscribers(event.data.event, event.data.session, false);
        });
      }
      this.initialize();
    }
    _debug(...args) {
      if (this.logDebugMessages) {
        this.logger(`GoTrueClient@${this.instanceID} (${version20}) ${(/* @__PURE__ */ new Date()).toISOString()}`, ...args);
      }
      return this;
    }
    /**
     * Initializes the client session either from the url or from storage.
     * This method is automatically called when instantiating the client, but should also be called
     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).
     */
    async initialize() {
      if (this.initializePromise) {
        return await this.initializePromise;
      }
      this.initializePromise = (async () => {
        return await this._acquireLock(-1, async () => {
          return await this._initialize();
        });
      })();
      return await this.initializePromise;
    }
    /**
     * IMPORTANT:
     * 1. Never throw in this method, as it is called from the constructor
     * 2. Never return a session from this method as it would be cached over
     *    the whole lifetime of the client
     */
    async _initialize() {
      try {
        const isPKCEFlow = isBrowser() ? await this._isPKCEFlow() : false;
        this._debug("#_initialize()", "begin", "is PKCE flow", isPKCEFlow);
        if (isPKCEFlow || this.detectSessionInUrl && this._isImplicitGrantFlow()) {
          const { data, error } = await this._getSessionFromURL(isPKCEFlow);
          if (error) {
            this._debug("#_initialize()", "error detecting session from URL", error);
            if ((error === null || error === void 0 ? void 0 : error.message) === "Identity is already linked" || (error === null || error === void 0 ? void 0 : error.message) === "Identity is already linked to another user") {
              return { error };
            }
            await this._removeSession();
            return { error };
          }
          const { session, redirectType } = data;
          this._debug("#_initialize()", "detected session in URL", session, "redirect type", redirectType);
          await this._saveSession(session);
          setTimeout(async () => {
            if (redirectType === "recovery") {
              await this._notifyAllSubscribers("PASSWORD_RECOVERY", session);
            } else {
              await this._notifyAllSubscribers("SIGNED_IN", session);
            }
          }, 0);
          return { error: null };
        }
        await this._recoverAndRefresh();
        return { error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { error };
        }
        return {
          error: new AuthUnknownError("Unexpected error during initialization", error)
        };
      } finally {
        await this._handleVisibilityChange();
        this._debug("#_initialize()", "end");
      }
    }
    /**
     * Creates a new anonymous user.
     *
     * @returns A session where the is_anonymous claim in the access token JWT set to true
     */
    async signInAnonymously(credentials) {
      var _a, _b, _c;
      try {
        const res = await _request(this.fetch, "POST", `${this.url}/signup`, {
          headers: this.headers,
          body: {
            data: (_b = (_a = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _a === void 0 ? void 0 : _a.data) !== null && _b !== void 0 ? _b : {},
            gotrue_meta_security: { captcha_token: (_c = credentials === null || credentials === void 0 ? void 0 : credentials.options) === null || _c === void 0 ? void 0 : _c.captchaToken }
          },
          xform: _sessionResponse
        });
        const { data, error } = res;
        if (error || !data) {
          return { data: { user: null, session: null }, error };
        }
        const session = data.session;
        const user = data.user;
        if (data.session) {
          await this._saveSession(data.session);
          await this._notifyAllSubscribers("SIGNED_IN", session);
        }
        return { data: { user, session }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Creates a new user.
     *
     * Be aware that if a user account exists in the system you may get back an
     * error message that attempts to hide this information from the user.
     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.
     *
     * @returns A logged-in session if the server has "autoconfirm" ON
     * @returns A user if the server has "autoconfirm" OFF
     */
    async signUp(credentials) {
      var _a, _b, _c;
      try {
        let res;
        if ("email" in credentials) {
          const { email, password, options } = credentials;
          let codeChallenge = null;
          let codeChallengeMethod = null;
          if (this.flowType === "pkce") {
            ;
            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);
          }
          res = await _request(this.fetch, "POST", `${this.url}/signup`, {
            headers: this.headers,
            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,
            body: {
              email,
              password,
              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },
              code_challenge: codeChallenge,
              code_challenge_method: codeChallengeMethod
            },
            xform: _sessionResponse
          });
        } else if ("phone" in credentials) {
          const { phone, password, options } = credentials;
          res = await _request(this.fetch, "POST", `${this.url}/signup`, {
            headers: this.headers,
            body: {
              phone,
              password,
              data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},
              channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : "sms",
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
            },
            xform: _sessionResponse
          });
        } else {
          throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
        }
        const { data, error } = res;
        if (error || !data) {
          return { data: { user: null, session: null }, error };
        }
        const session = data.session;
        const user = data.user;
        if (data.session) {
          await this._saveSession(data.session);
          await this._notifyAllSubscribers("SIGNED_IN", session);
        }
        return { data: { user, session }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Log in an existing user with an email and password or phone and password.
     *
     * Be aware that you may get back an error message that will not distinguish
     * between the cases where the account does not exist or that the
     * email/phone and password combination is wrong or that the account can only
     * be accessed via social login.
     */
    async signInWithPassword(credentials) {
      try {
        let res;
        if ("email" in credentials) {
          const { email, password, options } = credentials;
          res = await _request(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
            headers: this.headers,
            body: {
              email,
              password,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
            },
            xform: _sessionResponsePassword
          });
        } else if ("phone" in credentials) {
          const { phone, password, options } = credentials;
          res = await _request(this.fetch, "POST", `${this.url}/token?grant_type=password`, {
            headers: this.headers,
            body: {
              phone,
              password,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
            },
            xform: _sessionResponsePassword
          });
        } else {
          throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a password");
        }
        const { data, error } = res;
        if (error) {
          return { data: { user: null, session: null }, error };
        } else if (!data || !data.session || !data.user) {
          return { data: { user: null, session: null }, error: new AuthInvalidTokenResponseError() };
        }
        if (data.session) {
          await this._saveSession(data.session);
          await this._notifyAllSubscribers("SIGNED_IN", data.session);
        }
        return {
          data: Object.assign({ user: data.user, session: data.session }, data.weak_password ? { weakPassword: data.weak_password } : null),
          error
        };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Log in an existing user via a third-party provider.
     * This method supports the PKCE flow.
     */
    async signInWithOAuth(credentials) {
      var _a, _b, _c, _d;
      return await this._handleProviderSignIn(credentials.provider, {
        redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,
        scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,
        queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,
        skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect
      });
    }
    /**
     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.
     */
    async exchangeCodeForSession(authCode) {
      await this.initializePromise;
      return this._acquireLock(-1, async () => {
        return this._exchangeCodeForSession(authCode);
      });
    }
    async _exchangeCodeForSession(authCode) {
      const storageItem = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);
      const [codeVerifier, redirectType] = (storageItem !== null && storageItem !== void 0 ? storageItem : "").split("/");
      const { data, error } = await _request(this.fetch, "POST", `${this.url}/token?grant_type=pkce`, {
        headers: this.headers,
        body: {
          auth_code: authCode,
          code_verifier: codeVerifier
        },
        xform: _sessionResponse
      });
      await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);
      if (error) {
        return { data: { user: null, session: null, redirectType: null }, error };
      } else if (!data || !data.session || !data.user) {
        return {
          data: { user: null, session: null, redirectType: null },
          error: new AuthInvalidTokenResponseError()
        };
      }
      if (data.session) {
        await this._saveSession(data.session);
        await this._notifyAllSubscribers("SIGNED_IN", data.session);
      }
      return { data: Object.assign(Object.assign({}, data), { redirectType: redirectType !== null && redirectType !== void 0 ? redirectType : null }), error };
    }
    /**
     * Allows signing in with an OIDC ID token. The authentication provider used
     * should be enabled and configured.
     */
    async signInWithIdToken(credentials) {
      try {
        const { options, provider, token, access_token, nonce } = credentials;
        const res = await _request(this.fetch, "POST", `${this.url}/token?grant_type=id_token`, {
          headers: this.headers,
          body: {
            provider,
            id_token: token,
            access_token,
            nonce,
            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
          },
          xform: _sessionResponse
        });
        const { data, error } = res;
        if (error) {
          return { data: { user: null, session: null }, error };
        } else if (!data || !data.session || !data.user) {
          return {
            data: { user: null, session: null },
            error: new AuthInvalidTokenResponseError()
          };
        }
        if (data.session) {
          await this._saveSession(data.session);
          await this._notifyAllSubscribers("SIGNED_IN", data.session);
        }
        return { data, error };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Log in a user using magiclink or a one-time password (OTP).
     *
     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.
     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.
     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.
     *
     * Be aware that you may get back an error message that will not distinguish
     * between the cases where the account does not exist or, that the account
     * can only be accessed via social login.
     *
     * Do note that you will need to configure a Whatsapp sender on Twilio
     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp
     * channel is not supported on other providers
     * at this time.
     * This method supports PKCE when an email is passed.
     */
    async signInWithOtp(credentials) {
      var _a, _b, _c, _d, _e;
      try {
        if ("email" in credentials) {
          const { email, options } = credentials;
          let codeChallenge = null;
          let codeChallengeMethod = null;
          if (this.flowType === "pkce") {
            ;
            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);
          }
          const { error } = await _request(this.fetch, "POST", `${this.url}/otp`, {
            headers: this.headers,
            body: {
              email,
              data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},
              create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },
              code_challenge: codeChallenge,
              code_challenge_method: codeChallengeMethod
            },
            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo
          });
          return { data: { user: null, session: null }, error };
        }
        if ("phone" in credentials) {
          const { phone, options } = credentials;
          const { data, error } = await _request(this.fetch, "POST", `${this.url}/otp`, {
            headers: this.headers,
            body: {
              phone,
              data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},
              create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },
              channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : "sms"
            }
          });
          return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };
        }
        throw new AuthInvalidCredentialsError("You must provide either an email or phone number.");
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Log in a user given a User supplied OTP or TokenHash received through mobile or email.
     */
    async verifyOtp(params) {
      var _a, _b;
      try {
        let redirectTo = void 0;
        let captchaToken = void 0;
        if ("options" in params) {
          redirectTo = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo;
          captchaToken = (_b = params.options) === null || _b === void 0 ? void 0 : _b.captchaToken;
        }
        const { data, error } = await _request(this.fetch, "POST", `${this.url}/verify`, {
          headers: this.headers,
          body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: captchaToken } }),
          redirectTo,
          xform: _sessionResponse
        });
        if (error) {
          throw error;
        }
        if (!data) {
          throw new Error("An error occurred on token verification.");
        }
        const session = data.session;
        const user = data.user;
        if (session === null || session === void 0 ? void 0 : session.access_token) {
          await this._saveSession(session);
          await this._notifyAllSubscribers(params.type == "recovery" ? "PASSWORD_RECOVERY" : "SIGNED_IN", session);
        }
        return { data: { user, session }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Attempts a single-sign on using an enterprise Identity Provider. A
     * successful SSO attempt will redirect the current page to the identity
     * provider authorization page. The redirect URL is implementation and SSO
     * protocol specific.
     *
     * You can use it by providing a SSO domain. Typically you can extract this
     * domain by asking users for their email address. If this domain is
     * registered on the Auth instance the redirect will use that organization's
     * currently active SSO Identity Provider for the login.
     *
     * If you have built an organization-specific login page, you can use the
     * organization's SSO Identity Provider UUID directly instead.
     */
    async signInWithSSO(params) {
      var _a, _b, _c;
      try {
        let codeChallenge = null;
        let codeChallengeMethod = null;
        if (this.flowType === "pkce") {
          ;
          [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);
        }
        return await _request(this.fetch, "POST", `${this.url}/sso`, {
          body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, "providerId" in params ? { provider_id: params.providerId } : null), "domain" in params ? { domain: params.domain } : null), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : void 0 }), ((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken) ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } } : null), { skip_http_redirect: true, code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),
          headers: this.headers,
          xform: _ssoResponse
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * Sends a reauthentication OTP to the user's email or phone number.
     * Requires the user to be signed-in.
     */
    async reauthenticate() {
      await this.initializePromise;
      return await this._acquireLock(-1, async () => {
        return await this._reauthenticate();
      });
    }
    async _reauthenticate() {
      try {
        return await this._useSession(async (result) => {
          const { data: { session }, error: sessionError } = result;
          if (sessionError)
            throw sessionError;
          if (!session)
            throw new AuthSessionMissingError();
          const { error } = await _request(this.fetch, "GET", `${this.url}/reauthenticate`, {
            headers: this.headers,
            jwt: session.access_token
          });
          return { data: { user: null, session: null }, error };
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.
     */
    async resend(credentials) {
      try {
        const endpoint = `${this.url}/resend`;
        if ("email" in credentials) {
          const { email, type, options } = credentials;
          const { error } = await _request(this.fetch, "POST", endpoint, {
            headers: this.headers,
            body: {
              email,
              type,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
            },
            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo
          });
          return { data: { user: null, session: null }, error };
        } else if ("phone" in credentials) {
          const { phone, type, options } = credentials;
          const { data, error } = await _request(this.fetch, "POST", endpoint, {
            headers: this.headers,
            body: {
              phone,
              type,
              gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken }
            }
          });
          return { data: { user: null, session: null, messageId: data === null || data === void 0 ? void 0 : data.message_id }, error };
        }
        throw new AuthInvalidCredentialsError("You must provide either an email or phone number and a type");
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Returns the session, refreshing it if necessary.
     *
     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.
     *
     * **IMPORTANT:** This method loads values directly from the storage attached
     * to the client. If that storage is based on request cookies for example,
     * the values in it may not be authentic and therefore it's strongly advised
     * against using this method and its results in such circumstances. A warning
     * will be emitted if this is detected. Use {@link #getUser()} instead.
     */
    async getSession() {
      await this.initializePromise;
      const result = await this._acquireLock(-1, async () => {
        return this._useSession(async (result2) => {
          return result2;
        });
      });
      return result;
    }
    /**
     * Acquires a global lock based on the storage key.
     */
    async _acquireLock(acquireTimeout, fn) {
      this._debug("#_acquireLock", "begin", acquireTimeout);
      try {
        if (this.lockAcquired) {
          const last = this.pendingInLock.length ? this.pendingInLock[this.pendingInLock.length - 1] : Promise.resolve();
          const result = (async () => {
            await last;
            return await fn();
          })();
          this.pendingInLock.push((async () => {
            try {
              await result;
            } catch (e) {
            }
          })());
          return result;
        }
        return await this.lock(`lock:${this.storageKey}`, acquireTimeout, async () => {
          this._debug("#_acquireLock", "lock acquired for storage key", this.storageKey);
          try {
            this.lockAcquired = true;
            const result = fn();
            this.pendingInLock.push((async () => {
              try {
                await result;
              } catch (e) {
              }
            })());
            await result;
            while (this.pendingInLock.length) {
              const waitOn = [...this.pendingInLock];
              await Promise.all(waitOn);
              this.pendingInLock.splice(0, waitOn.length);
            }
            return await result;
          } finally {
            this._debug("#_acquireLock", "lock released for storage key", this.storageKey);
            this.lockAcquired = false;
          }
        });
      } finally {
        this._debug("#_acquireLock", "end");
      }
    }
    /**
     * Use instead of {@link #getSession} inside the library. It is
     * semantically usually what you want, as getting a session involves some
     * processing afterwards that requires only one client operating on the
     * session at once across multiple tabs or processes.
     */
    async _useSession(fn) {
      this._debug("#_useSession", "begin");
      try {
        const result = await this.__loadSession();
        return await fn(result);
      } finally {
        this._debug("#_useSession", "end");
      }
    }
    /**
     * NEVER USE DIRECTLY!
     *
     * Always use {@link #_useSession}.
     */
    async __loadSession() {
      this._debug("#__loadSession()", "begin");
      if (!this.lockAcquired) {
        this._debug("#__loadSession()", "used outside of an acquired lock!", new Error().stack);
      }
      try {
        let currentSession = null;
        const maybeSession = await getItemAsync(this.storage, this.storageKey);
        this._debug("#getSession()", "session from storage", maybeSession);
        if (maybeSession !== null) {
          if (this._isValidSession(maybeSession)) {
            currentSession = maybeSession;
          } else {
            this._debug("#getSession()", "session from storage is not valid");
            await this._removeSession();
          }
        }
        if (!currentSession) {
          return { data: { session: null }, error: null };
        }
        const hasExpired = currentSession.expires_at ? currentSession.expires_at <= Date.now() / 1e3 : false;
        this._debug("#__loadSession()", `session has${hasExpired ? "" : " not"} expired`, "expires_at", currentSession.expires_at);
        if (!hasExpired) {
          if (this.storage.isServer) {
            let suppressWarning = this.suppressGetSessionWarning;
            const proxySession = new Proxy(currentSession, {
              get: (target, prop, receiver) => {
                if (!suppressWarning && prop === "user") {
                  console.warn("Using the user object as returned from supabase.auth.getSession() or from some supabase.auth.onAuthStateChange() events could be insecure! This value comes directly from the storage medium (usually cookies on the server) and many not be authentic. Use supabase.auth.getUser() instead which authenticates the data by contacting the Supabase Auth server.");
                  suppressWarning = true;
                  this.suppressGetSessionWarning = true;
                }
                return Reflect.get(target, prop, receiver);
              }
            });
            currentSession = proxySession;
          }
          return { data: { session: currentSession }, error: null };
        }
        const { session, error } = await this._callRefreshToken(currentSession.refresh_token);
        if (error) {
          return { data: { session: null }, error };
        }
        return { data: { session }, error: null };
      } finally {
        this._debug("#__loadSession()", "end");
      }
    }
    /**
     * Gets the current user details if there is an existing session. This method
     * performs a network request to the Supabase Auth server, so the returned
     * value is authentic and can be used to base authorization rules on.
     *
     * @param jwt Takes in an optional access token JWT. If no JWT is provided, the JWT from the current session is used.
     */
    async getUser(jwt) {
      if (jwt) {
        return await this._getUser(jwt);
      }
      await this.initializePromise;
      const result = await this._acquireLock(-1, async () => {
        return await this._getUser();
      });
      return result;
    }
    async _getUser(jwt) {
      try {
        if (jwt) {
          return await _request(this.fetch, "GET", `${this.url}/user`, {
            headers: this.headers,
            jwt,
            xform: _userResponse
          });
        }
        return await this._useSession(async (result) => {
          var _a, _b, _c;
          const { data, error } = result;
          if (error) {
            throw error;
          }
          if (!((_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) && !this.hasCustomAuthorizationHeader) {
            return { data: { user: null }, error: new AuthSessionMissingError() };
          }
          return await _request(this.fetch, "GET", `${this.url}/user`, {
            headers: this.headers,
            jwt: (_c = (_b = data.session) === null || _b === void 0 ? void 0 : _b.access_token) !== null && _c !== void 0 ? _c : void 0,
            xform: _userResponse
          });
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Updates user data for a logged in user.
     */
    async updateUser(attributes, options = {}) {
      await this.initializePromise;
      return await this._acquireLock(-1, async () => {
        return await this._updateUser(attributes, options);
      });
    }
    async _updateUser(attributes, options = {}) {
      try {
        return await this._useSession(async (result) => {
          const { data: sessionData, error: sessionError } = result;
          if (sessionError) {
            throw sessionError;
          }
          if (!sessionData.session) {
            throw new AuthSessionMissingError();
          }
          const session = sessionData.session;
          let codeChallenge = null;
          let codeChallengeMethod = null;
          if (this.flowType === "pkce" && attributes.email != null) {
            ;
            [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);
          }
          const { data, error: userError } = await _request(this.fetch, "PUT", `${this.url}/user`, {
            headers: this.headers,
            redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,
            body: Object.assign(Object.assign({}, attributes), { code_challenge: codeChallenge, code_challenge_method: codeChallengeMethod }),
            jwt: session.access_token,
            xform: _userResponse
          });
          if (userError)
            throw userError;
          session.user = data.user;
          await this._saveSession(session);
          await this._notifyAllSubscribers("USER_UPDATED", session);
          return { data: { user: session.user }, error: null };
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Decodes a JWT (without performing any validation).
     */
    _decodeJWT(jwt) {
      return decodeJWTPayload(jwt);
    }
    /**
     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.
     * If the refresh token or access token in the current session is invalid, an error will be thrown.
     * @param currentSession The current session that minimally contains an access token and refresh token.
     */
    async setSession(currentSession) {
      await this.initializePromise;
      return await this._acquireLock(-1, async () => {
        return await this._setSession(currentSession);
      });
    }
    async _setSession(currentSession) {
      try {
        if (!currentSession.access_token || !currentSession.refresh_token) {
          throw new AuthSessionMissingError();
        }
        const timeNow = Date.now() / 1e3;
        let expiresAt2 = timeNow;
        let hasExpired = true;
        let session = null;
        const payload = decodeJWTPayload(currentSession.access_token);
        if (payload.exp) {
          expiresAt2 = payload.exp;
          hasExpired = expiresAt2 <= timeNow;
        }
        if (hasExpired) {
          const { session: refreshedSession, error } = await this._callRefreshToken(currentSession.refresh_token);
          if (error) {
            return { data: { user: null, session: null }, error };
          }
          if (!refreshedSession) {
            return { data: { user: null, session: null }, error: null };
          }
          session = refreshedSession;
        } else {
          const { data, error } = await this._getUser(currentSession.access_token);
          if (error) {
            throw error;
          }
          session = {
            access_token: currentSession.access_token,
            refresh_token: currentSession.refresh_token,
            user: data.user,
            token_type: "bearer",
            expires_in: expiresAt2 - timeNow,
            expires_at: expiresAt2
          };
          await this._saveSession(session);
          await this._notifyAllSubscribers("SIGNED_IN", session);
        }
        return { data: { user: session.user, session }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { session: null, user: null }, error };
        }
        throw error;
      }
    }
    /**
     * Returns a new session, regardless of expiry status.
     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().
     * If the current session's refresh token is invalid, an error will be thrown.
     * @param currentSession The current session. If passed in, it must contain a refresh token.
     */
    async refreshSession(currentSession) {
      await this.initializePromise;
      return await this._acquireLock(-1, async () => {
        return await this._refreshSession(currentSession);
      });
    }
    async _refreshSession(currentSession) {
      try {
        return await this._useSession(async (result) => {
          var _a;
          if (!currentSession) {
            const { data, error: error2 } = result;
            if (error2) {
              throw error2;
            }
            currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : void 0;
          }
          if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {
            throw new AuthSessionMissingError();
          }
          const { session, error } = await this._callRefreshToken(currentSession.refresh_token);
          if (error) {
            return { data: { user: null, session: null }, error };
          }
          if (!session) {
            return { data: { user: null, session: null }, error: null };
          }
          return { data: { user: session.user, session }, error: null };
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { user: null, session: null }, error };
        }
        throw error;
      }
    }
    /**
     * Gets the session data from a URL string
     */
    async _getSessionFromURL(isPKCEFlow) {
      try {
        if (!isBrowser())
          throw new AuthImplicitGrantRedirectError("No browser detected.");
        if (this.flowType === "implicit" && !this._isImplicitGrantFlow()) {
          throw new AuthImplicitGrantRedirectError("Not a valid implicit grant flow url.");
        } else if (this.flowType == "pkce" && !isPKCEFlow) {
          throw new AuthPKCEGrantCodeExchangeError("Not a valid PKCE flow url.");
        }
        const params = parseParametersFromURL(window.location.href);
        if (isPKCEFlow) {
          if (!params.code)
            throw new AuthPKCEGrantCodeExchangeError("No code detected.");
          const { data: data2, error: error2 } = await this._exchangeCodeForSession(params.code);
          if (error2)
            throw error2;
          const url = new URL(window.location.href);
          url.searchParams.delete("code");
          window.history.replaceState(window.history.state, "", url.toString());
          return { data: { session: data2.session, redirectType: null }, error: null };
        }
        if (params.error || params.error_description || params.error_code) {
          throw new AuthImplicitGrantRedirectError(params.error_description || "Error in URL with unspecified error_description", {
            error: params.error || "unspecified_error",
            code: params.error_code || "unspecified_code"
          });
        }
        const { provider_token, provider_refresh_token, access_token, refresh_token, expires_in, expires_at, token_type } = params;
        if (!access_token || !expires_in || !refresh_token || !token_type) {
          throw new AuthImplicitGrantRedirectError("No session defined in URL");
        }
        const timeNow = Math.round(Date.now() / 1e3);
        const expiresIn = parseInt(expires_in);
        let expiresAt2 = timeNow + expiresIn;
        if (expires_at) {
          expiresAt2 = parseInt(expires_at);
        }
        const actuallyExpiresIn = expiresAt2 - timeNow;
        if (actuallyExpiresIn * 1e3 <= AUTO_REFRESH_TICK_DURATION) {
          console.warn(`@supabase/gotrue-js: Session as retrieved from URL expires in ${actuallyExpiresIn}s, should have been closer to ${expiresIn}s`);
        }
        const issuedAt = expiresAt2 - expiresIn;
        if (timeNow - issuedAt >= 120) {
          console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued over 120s ago, URL could be stale", issuedAt, expiresAt2, timeNow);
        } else if (timeNow - issuedAt < 0) {
          console.warn("@supabase/gotrue-js: Session as retrieved from URL was issued in the future? Check the device clok for skew", issuedAt, expiresAt2, timeNow);
        }
        const { data, error } = await this._getUser(access_token);
        if (error)
          throw error;
        const session = {
          provider_token,
          provider_refresh_token,
          access_token,
          expires_in: expiresIn,
          expires_at: expiresAt2,
          refresh_token,
          token_type,
          user: data.user
        };
        window.location.hash = "";
        this._debug("#_getSessionFromURL()", "clearing window.location.hash");
        return { data: { session, redirectType: params.type }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { session: null, redirectType: null }, error };
        }
        throw error;
      }
    }
    /**
     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)
     */
    _isImplicitGrantFlow() {
      const params = parseParametersFromURL(window.location.href);
      return !!(isBrowser() && (params.access_token || params.error_description));
    }
    /**
     * Checks if the current URL and backing storage contain parameters given by a PKCE flow
     */
    async _isPKCEFlow() {
      const params = parseParametersFromURL(window.location.href);
      const currentStorageContent = await getItemAsync(this.storage, `${this.storageKey}-code-verifier`);
      return !!(params.code && currentStorageContent);
    }
    /**
     * Inside a browser context, `signOut()` will remove the logged in user from the browser session and log them out - removing all items from localstorage and then trigger a `"SIGNED_OUT"` event.
     *
     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.
     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.
     *
     * If using `others` scope, no `SIGNED_OUT` event is fired!
     */
    async signOut(options = { scope: "global" }) {
      await this.initializePromise;
      return await this._acquireLock(-1, async () => {
        return await this._signOut(options);
      });
    }
    async _signOut({ scope } = { scope: "global" }) {
      return await this._useSession(async (result) => {
        var _a;
        const { data, error: sessionError } = result;
        if (sessionError) {
          return { error: sessionError };
        }
        const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;
        if (accessToken) {
          const { error } = await this.admin.signOut(accessToken, scope);
          if (error) {
            if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401 || error.status === 403))) {
              return { error };
            }
          }
        }
        if (scope !== "others") {
          await this._removeSession();
          await removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);
          await this._notifyAllSubscribers("SIGNED_OUT", null);
        }
        return { error: null };
      });
    }
    /**
     * Receive a notification every time an auth event happens.
     * @param callback A callback function to be invoked when an auth event happens.
     */
    onAuthStateChange(callback) {
      const id3 = uuid();
      const subscription = {
        id: id3,
        callback,
        unsubscribe: () => {
          this._debug("#unsubscribe()", "state change callback with id removed", id3);
          this.stateChangeEmitters.delete(id3);
        }
      };
      this._debug("#onAuthStateChange()", "registered callback with id", id3);
      this.stateChangeEmitters.set(id3, subscription);
      (async () => {
        await this.initializePromise;
        await this._acquireLock(-1, async () => {
          this._emitInitialSession(id3);
        });
      })();
      return { data: { subscription } };
    }
    async _emitInitialSession(id3) {
      return await this._useSession(async (result) => {
        var _a, _b;
        try {
          const { data: { session }, error } = result;
          if (error)
            throw error;
          await ((_a = this.stateChangeEmitters.get(id3)) === null || _a === void 0 ? void 0 : _a.callback("INITIAL_SESSION", session));
          this._debug("INITIAL_SESSION", "callback id", id3, "session", session);
        } catch (err) {
          await ((_b = this.stateChangeEmitters.get(id3)) === null || _b === void 0 ? void 0 : _b.callback("INITIAL_SESSION", null));
          this._debug("INITIAL_SESSION", "callback id", id3, "error", err);
          console.error(err);
        }
      });
    }
    /**
     * Sends a password reset request to an email address. This method supports the PKCE flow.
     *
     * @param email The email address of the user.
     * @param options.redirectTo The URL to send the user to after they click the password reset link.
     * @param options.captchaToken Verification token received when the user completes the captcha on the site.
     */
    async resetPasswordForEmail(email, options = {}) {
      let codeChallenge = null;
      let codeChallengeMethod = null;
      if (this.flowType === "pkce") {
        ;
        [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(
          this.storage,
          this.storageKey,
          true
          // isPasswordRecovery
        );
      }
      try {
        return await _request(this.fetch, "POST", `${this.url}/recover`, {
          body: {
            email,
            code_challenge: codeChallenge,
            code_challenge_method: codeChallengeMethod,
            gotrue_meta_security: { captcha_token: options.captchaToken }
          },
          headers: this.headers,
          redirectTo: options.redirectTo
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * Gets all the identities linked to a user.
     */
    async getUserIdentities() {
      var _a;
      try {
        const { data, error } = await this.getUser();
        if (error)
          throw error;
        return { data: { identities: (_a = data.user.identities) !== null && _a !== void 0 ? _a : [] }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * Links an oauth identity to an existing user.
     * This method supports the PKCE flow.
     */
    async linkIdentity(credentials) {
      var _a;
      try {
        const { data, error } = await this._useSession(async (result) => {
          var _a2, _b, _c, _d, _e;
          const { data: data2, error: error2 } = result;
          if (error2)
            throw error2;
          const url = await this._getUrlForProvider(`${this.url}/user/identities/authorize`, credentials.provider, {
            redirectTo: (_a2 = credentials.options) === null || _a2 === void 0 ? void 0 : _a2.redirectTo,
            scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,
            queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,
            skipBrowserRedirect: true
          });
          return await _request(this.fetch, "GET", url, {
            headers: this.headers,
            jwt: (_e = (_d = data2.session) === null || _d === void 0 ? void 0 : _d.access_token) !== null && _e !== void 0 ? _e : void 0
          });
        });
        if (error)
          throw error;
        if (isBrowser() && !((_a = credentials.options) === null || _a === void 0 ? void 0 : _a.skipBrowserRedirect)) {
          window.location.assign(data === null || data === void 0 ? void 0 : data.url);
        }
        return { data: { provider: credentials.provider, url: data === null || data === void 0 ? void 0 : data.url }, error: null };
      } catch (error) {
        if (isAuthError(error)) {
          return { data: { provider: credentials.provider, url: null }, error };
        }
        throw error;
      }
    }
    /**
     * Unlinks an identity from a user by deleting it. The user will no longer be able to sign in with that identity once it's unlinked.
     */
    async unlinkIdentity(identity) {
      try {
        return await this._useSession(async (result) => {
          var _a, _b;
          const { data, error } = result;
          if (error) {
            throw error;
          }
          return await _request(this.fetch, "DELETE", `${this.url}/user/identities/${identity.identity_id}`, {
            headers: this.headers,
            jwt: (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : void 0
          });
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * Generates a new JWT.
     * @param refreshToken A valid refresh token that was returned on login.
     */
    async _refreshAccessToken(refreshToken) {
      const debugName = `#_refreshAccessToken(${refreshToken.substring(0, 5)}...)`;
      this._debug(debugName, "begin");
      try {
        const startedAt = Date.now();
        return await retryable(async (attempt) => {
          if (attempt > 0) {
            await sleep(200 * Math.pow(2, attempt - 1));
          }
          this._debug(debugName, "refreshing attempt", attempt);
          return await _request(this.fetch, "POST", `${this.url}/token?grant_type=refresh_token`, {
            body: { refresh_token: refreshToken },
            headers: this.headers,
            xform: _sessionResponse
          });
        }, (attempt, error) => {
          const nextBackOffInterval = 200 * Math.pow(2, attempt);
          return error && isAuthRetryableFetchError(error) && // retryable only if the request can be sent before the backoff overflows the tick duration
          Date.now() + nextBackOffInterval - startedAt < AUTO_REFRESH_TICK_DURATION;
        });
      } catch (error) {
        this._debug(debugName, "error", error);
        if (isAuthError(error)) {
          return { data: { session: null, user: null }, error };
        }
        throw error;
      } finally {
        this._debug(debugName, "end");
      }
    }
    _isValidSession(maybeSession) {
      const isValidSession = typeof maybeSession === "object" && maybeSession !== null && "access_token" in maybeSession && "refresh_token" in maybeSession && "expires_at" in maybeSession;
      return isValidSession;
    }
    async _handleProviderSignIn(provider, options) {
      const url = await this._getUrlForProvider(`${this.url}/authorize`, provider, {
        redirectTo: options.redirectTo,
        scopes: options.scopes,
        queryParams: options.queryParams
      });
      this._debug("#_handleProviderSignIn()", "provider", provider, "options", options, "url", url);
      if (isBrowser() && !options.skipBrowserRedirect) {
        window.location.assign(url);
      }
      return { data: { provider, url }, error: null };
    }
    /**
     * Recovers the session from LocalStorage and refreshes
     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.
     */
    async _recoverAndRefresh() {
      var _a;
      const debugName = "#_recoverAndRefresh()";
      this._debug(debugName, "begin");
      try {
        const currentSession = await getItemAsync(this.storage, this.storageKey);
        this._debug(debugName, "session from storage", currentSession);
        if (!this._isValidSession(currentSession)) {
          this._debug(debugName, "session is not valid");
          if (currentSession !== null) {
            await this._removeSession();
          }
          return;
        }
        const timeNow = Math.round(Date.now() / 1e3);
        const expiresWithMargin = ((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN;
        this._debug(debugName, `session has${expiresWithMargin ? "" : " not"} expired with margin of ${EXPIRY_MARGIN}s`);
        if (expiresWithMargin) {
          if (this.autoRefreshToken && currentSession.refresh_token) {
            const { error } = await this._callRefreshToken(currentSession.refresh_token);
            if (error) {
              console.error(error);
              if (!isAuthRetryableFetchError(error)) {
                this._debug(debugName, "refresh failed with a non-retryable error, removing the session", error);
                await this._removeSession();
              }
            }
          }
        } else {
          await this._notifyAllSubscribers("SIGNED_IN", currentSession);
        }
      } catch (err) {
        this._debug(debugName, "error", err);
        console.error(err);
        return;
      } finally {
        this._debug(debugName, "end");
      }
    }
    async _callRefreshToken(refreshToken) {
      var _a, _b;
      if (!refreshToken) {
        throw new AuthSessionMissingError();
      }
      if (this.refreshingDeferred) {
        return this.refreshingDeferred.promise;
      }
      const debugName = `#_callRefreshToken(${refreshToken.substring(0, 5)}...)`;
      this._debug(debugName, "begin");
      try {
        this.refreshingDeferred = new Deferred();
        const { data, error } = await this._refreshAccessToken(refreshToken);
        if (error)
          throw error;
        if (!data.session)
          throw new AuthSessionMissingError();
        await this._saveSession(data.session);
        await this._notifyAllSubscribers("TOKEN_REFRESHED", data.session);
        const result = { session: data.session, error: null };
        this.refreshingDeferred.resolve(result);
        return result;
      } catch (error) {
        this._debug(debugName, "error", error);
        if (isAuthError(error)) {
          const result = { session: null, error };
          if (!isAuthRetryableFetchError(error)) {
            await this._removeSession();
            await this._notifyAllSubscribers("SIGNED_OUT", null);
          }
          (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);
          return result;
        }
        (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);
        throw error;
      } finally {
        this.refreshingDeferred = null;
        this._debug(debugName, "end");
      }
    }
    async _notifyAllSubscribers(event, session, broadcast = true) {
      const debugName = `#_notifyAllSubscribers(${event})`;
      this._debug(debugName, "begin", session, `broadcast = ${broadcast}`);
      try {
        if (this.broadcastChannel && broadcast) {
          this.broadcastChannel.postMessage({ event, session });
        }
        const errors = [];
        const promises = Array.from(this.stateChangeEmitters.values()).map(async (x) => {
          try {
            await x.callback(event, session);
          } catch (e) {
            errors.push(e);
          }
        });
        await Promise.all(promises);
        if (errors.length > 0) {
          for (let i = 0; i < errors.length; i += 1) {
            console.error(errors[i]);
          }
          throw errors[0];
        }
      } finally {
        this._debug(debugName, "end");
      }
    }
    /**
     * set currentSession and currentUser
     * process to _startAutoRefreshToken if possible
     */
    async _saveSession(session) {
      this._debug("#_saveSession()", session);
      this.suppressGetSessionWarning = true;
      await setItemAsync(this.storage, this.storageKey, session);
    }
    async _removeSession() {
      this._debug("#_removeSession()");
      await removeItemAsync(this.storage, this.storageKey);
    }
    /**
     * Removes any registered visibilitychange callback.
     *
     * {@see #startAutoRefresh}
     * {@see #stopAutoRefresh}
     */
    _removeVisibilityChangedCallback() {
      this._debug("#_removeVisibilityChangedCallback()");
      const callback = this.visibilityChangedCallback;
      this.visibilityChangedCallback = null;
      try {
        if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {
          window.removeEventListener("visibilitychange", callback);
        }
      } catch (e) {
        console.error("removing visibilitychange callback failed", e);
      }
    }
    /**
     * This is the private implementation of {@link #startAutoRefresh}. Use this
     * within the library.
     */
    async _startAutoRefresh() {
      await this._stopAutoRefresh();
      this._debug("#_startAutoRefresh()");
      const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);
      this.autoRefreshTicker = ticker;
      if (ticker && typeof ticker === "object" && typeof ticker.unref === "function") {
        ticker.unref();
      } else if (typeof Deno !== "undefined" && typeof Deno.unrefTimer === "function") {
        Deno.unrefTimer(ticker);
      }
      setTimeout(async () => {
        await this.initializePromise;
        await this._autoRefreshTokenTick();
      }, 0);
    }
    /**
     * This is the private implementation of {@link #stopAutoRefresh}. Use this
     * within the library.
     */
    async _stopAutoRefresh() {
      this._debug("#_stopAutoRefresh()");
      const ticker = this.autoRefreshTicker;
      this.autoRefreshTicker = null;
      if (ticker) {
        clearInterval(ticker);
      }
    }
    /**
     * Starts an auto-refresh process in the background. The session is checked
     * every few seconds. Close to the time of expiration a process is started to
     * refresh the session. If refreshing fails it will be retried for as long as
     * necessary.
     *
     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need
     * to call this function, it will be called for you.
     *
     * On browsers the refresh process works only when the tab/window is in the
     * foreground to conserve resources as well as prevent race conditions and
     * flooding auth with requests. If you call this method any managed
     * visibility change callback will be removed and you must manage visibility
     * changes on your own.
     *
     * On non-browser platforms the refresh process works *continuously* in the
     * background, which may not be desirable. You should hook into your
     * platform's foreground indication mechanism and call these methods
     * appropriately to conserve resources.
     *
     * {@see #stopAutoRefresh}
     */
    async startAutoRefresh() {
      this._removeVisibilityChangedCallback();
      await this._startAutoRefresh();
    }
    /**
     * Stops an active auto refresh process running in the background (if any).
     *
     * If you call this method any managed visibility change callback will be
     * removed and you must manage visibility changes on your own.
     *
     * See {@link #startAutoRefresh} for more details.
     */
    async stopAutoRefresh() {
      this._removeVisibilityChangedCallback();
      await this._stopAutoRefresh();
    }
    /**
     * Runs the auto refresh token tick.
     */
    async _autoRefreshTokenTick() {
      this._debug("#_autoRefreshTokenTick()", "begin");
      try {
        await this._acquireLock(0, async () => {
          try {
            const now2 = Date.now();
            try {
              return await this._useSession(async (result) => {
                const { data: { session } } = result;
                if (!session || !session.refresh_token || !session.expires_at) {
                  this._debug("#_autoRefreshTokenTick()", "no session");
                  return;
                }
                const expiresInTicks = Math.floor((session.expires_at * 1e3 - now2) / AUTO_REFRESH_TICK_DURATION);
                this._debug("#_autoRefreshTokenTick()", `access token expires in ${expiresInTicks} ticks, a tick lasts ${AUTO_REFRESH_TICK_DURATION}ms, refresh threshold is ${AUTO_REFRESH_TICK_THRESHOLD} ticks`);
                if (expiresInTicks <= AUTO_REFRESH_TICK_THRESHOLD) {
                  await this._callRefreshToken(session.refresh_token);
                }
              });
            } catch (e) {
              console.error("Auto refresh tick failed with error. This is likely a transient error.", e);
            }
          } finally {
            this._debug("#_autoRefreshTokenTick()", "end");
          }
        });
      } catch (e) {
        if (e.isAcquireTimeout || e instanceof LockAcquireTimeoutError) {
          this._debug("auto refresh token tick lock not available");
        } else {
          throw e;
        }
      }
    }
    /**
     * Registers callbacks on the browser / platform, which in-turn run
     * algorithms when the browser window/tab are in foreground. On non-browser
     * platforms it assumes always foreground.
     */
    async _handleVisibilityChange() {
      this._debug("#_handleVisibilityChange()");
      if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {
        if (this.autoRefreshToken) {
          this.startAutoRefresh();
        }
        return false;
      }
      try {
        this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false);
        window === null || window === void 0 ? void 0 : window.addEventListener("visibilitychange", this.visibilityChangedCallback);
        await this._onVisibilityChanged(true);
      } catch (error) {
        console.error("_handleVisibilityChange", error);
      }
    }
    /**
     * Callback registered with `window.addEventListener('visibilitychange')`.
     */
    async _onVisibilityChanged(calledFromInitialize) {
      const methodName = `#_onVisibilityChanged(${calledFromInitialize})`;
      this._debug(methodName, "visibilityState", document.visibilityState);
      if (document.visibilityState === "visible") {
        if (this.autoRefreshToken) {
          this._startAutoRefresh();
        }
        if (!calledFromInitialize) {
          await this.initializePromise;
          await this._acquireLock(-1, async () => {
            if (document.visibilityState !== "visible") {
              this._debug(methodName, "acquired the lock to recover the session, but the browser visibilityState is no longer visible, aborting");
              return;
            }
            await this._recoverAndRefresh();
          });
        }
      } else if (document.visibilityState === "hidden") {
        if (this.autoRefreshToken) {
          this._stopAutoRefresh();
        }
      }
    }
    /**
     * Generates the relevant login URL for a third-party provider.
     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.
     * @param options.scopes A space-separated list of scopes granted to the OAuth application.
     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.
     */
    async _getUrlForProvider(url, provider, options) {
      const urlParams2 = [`provider=${encodeURIComponent(provider)}`];
      if (options === null || options === void 0 ? void 0 : options.redirectTo) {
        urlParams2.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);
      }
      if (options === null || options === void 0 ? void 0 : options.scopes) {
        urlParams2.push(`scopes=${encodeURIComponent(options.scopes)}`);
      }
      if (this.flowType === "pkce") {
        const [codeChallenge, codeChallengeMethod] = await getCodeChallengeAndMethod(this.storage, this.storageKey);
        const flowParams = new URLSearchParams({
          code_challenge: `${encodeURIComponent(codeChallenge)}`,
          code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`
        });
        urlParams2.push(flowParams.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.queryParams) {
        const query = new URLSearchParams(options.queryParams);
        urlParams2.push(query.toString());
      }
      if (options === null || options === void 0 ? void 0 : options.skipBrowserRedirect) {
        urlParams2.push(`skip_http_redirect=${options.skipBrowserRedirect}`);
      }
      return `${url}?${urlParams2.join("&")}`;
    }
    async _unenroll(params) {
      try {
        return await this._useSession(async (result) => {
          var _a;
          const { data: sessionData, error: sessionError } = result;
          if (sessionError) {
            return { data: null, error: sessionError };
          }
          return await _request(this.fetch, "DELETE", `${this.url}/factors/${params.factorId}`, {
            headers: this.headers,
            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
          });
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * {@see GoTrueMFAApi#enroll}
     */
    async _enroll(params) {
      try {
        return await this._useSession(async (result) => {
          var _a, _b;
          const { data: sessionData, error: sessionError } = result;
          if (sessionError) {
            return { data: null, error: sessionError };
          }
          const { data, error } = await _request(this.fetch, "POST", `${this.url}/factors`, {
            body: {
              friendly_name: params.friendlyName,
              factor_type: params.factorType,
              issuer: params.issuer
            },
            headers: this.headers,
            jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
          });
          if (error) {
            return { data: null, error };
          }
          if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {
            data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;
          }
          return { data, error: null };
        });
      } catch (error) {
        if (isAuthError(error)) {
          return { data: null, error };
        }
        throw error;
      }
    }
    /**
     * {@see GoTrueMFAApi#verify}
     */
    async _verify(params) {
      return this._acquireLock(-1, async () => {
        try {
          return await this._useSession(async (result) => {
            var _a;
            const { data: sessionData, error: sessionError } = result;
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            const { data, error } = await _request(this.fetch, "POST", `${this.url}/factors/${params.factorId}/verify`, {
              body: { code: params.code, challenge_id: params.challengeId },
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
            if (error) {
              return { data: null, error };
            }
            await this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1e3) + data.expires_in }, data));
            await this._notifyAllSubscribers("MFA_CHALLENGE_VERIFIED", data);
            return { data, error };
          });
        } catch (error) {
          if (isAuthError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * {@see GoTrueMFAApi#challenge}
     */
    async _challenge(params) {
      return this._acquireLock(-1, async () => {
        try {
          return await this._useSession(async (result) => {
            var _a;
            const { data: sessionData, error: sessionError } = result;
            if (sessionError) {
              return { data: null, error: sessionError };
            }
            return await _request(this.fetch, "POST", `${this.url}/factors/${params.factorId}/challenge`, {
              headers: this.headers,
              jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token
            });
          });
        } catch (error) {
          if (isAuthError(error)) {
            return { data: null, error };
          }
          throw error;
        }
      });
    }
    /**
     * {@see GoTrueMFAApi#challengeAndVerify}
     */
    async _challengeAndVerify(params) {
      const { data: challengeData, error: challengeError } = await this._challenge({
        factorId: params.factorId
      });
      if (challengeError) {
        return { data: null, error: challengeError };
      }
      return await this._verify({
        factorId: params.factorId,
        challengeId: challengeData.id,
        code: params.code
      });
    }
    /**
     * {@see GoTrueMFAApi#listFactors}
     */
    async _listFactors() {
      const { data: { user }, error: userError } = await this.getUser();
      if (userError) {
        return { data: null, error: userError };
      }
      const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];
      const totp = factors.filter((factor) => factor.factor_type === "totp" && factor.status === "verified");
      return {
        data: {
          all: factors,
          totp
        },
        error: null
      };
    }
    /**
     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}
     */
    async _getAuthenticatorAssuranceLevel() {
      return this._acquireLock(-1, async () => {
        return await this._useSession(async (result) => {
          var _a, _b;
          const { data: { session }, error: sessionError } = result;
          if (sessionError) {
            return { data: null, error: sessionError };
          }
          if (!session) {
            return {
              data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },
              error: null
            };
          }
          const payload = this._decodeJWT(session.access_token);
          let currentLevel = null;
          if (payload.aal) {
            currentLevel = payload.aal;
          }
          let nextLevel = currentLevel;
          const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === "verified")) !== null && _b !== void 0 ? _b : [];
          if (verifiedFactors.length > 0) {
            nextLevel = "aal2";
          }
          const currentAuthenticationMethods = payload.amr || [];
          return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };
        });
      });
    }
  };
  GoTrueClient.nextInstanceID = 0;

  // node_modules/@supabase/auth-js/dist/module/AuthClient.js
  var AuthClient = GoTrueClient;
  var AuthClient_default = AuthClient;

  // node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js
  var SupabaseAuthClient = class extends AuthClient_default {
    constructor(options) {
      super(options);
    }
  };

  // node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js
  var __awaiter15 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var SupabaseClient = class {
    /**
     * Create a new client for use in the browser.
     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.
     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.
     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.
     * @param options.auth.autoRefreshToken Set to "true" if you want to automatically refresh the token before expiring.
     * @param options.auth.persistSession Set to "true" if you want to automatically save the user session into local storage.
     * @param options.auth.detectSessionInUrl Set to "true" if you want to automatically detects OAuth grants in the URL and signs in the user.
     * @param options.realtime Options passed along to realtime-js constructor.
     * @param options.global.fetch A custom fetch implementation.
     * @param options.global.headers Any additional headers to send with each network request.
     */
    constructor(supabaseUrl, supabaseKey, options) {
      var _a, _b, _c;
      this.supabaseUrl = supabaseUrl;
      this.supabaseKey = supabaseKey;
      if (!supabaseUrl)
        throw new Error("supabaseUrl is required.");
      if (!supabaseKey)
        throw new Error("supabaseKey is required.");
      const _supabaseUrl = stripTrailingSlash(supabaseUrl);
      this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, "ws");
      this.authUrl = `${_supabaseUrl}/auth/v1`;
      this.storageUrl = `${_supabaseUrl}/storage/v1`;
      this.functionsUrl = `${_supabaseUrl}/functions/v1`;
      const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split(".")[0]}-auth-token`;
      const DEFAULTS = {
        db: DEFAULT_DB_OPTIONS,
        realtime: DEFAULT_REALTIME_OPTIONS,
        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),
        global: DEFAULT_GLOBAL_OPTIONS
      };
      const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);
      this.storageKey = (_a = settings.auth.storageKey) !== null && _a !== void 0 ? _a : "";
      this.headers = (_b = settings.global.headers) !== null && _b !== void 0 ? _b : {};
      this.auth = this._initSupabaseAuthClient((_c = settings.auth) !== null && _c !== void 0 ? _c : {}, this.headers, settings.global.fetch);
      this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global.fetch);
      this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));
      this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {
        headers: this.headers,
        schema: settings.db.schema,
        fetch: this.fetch
      });
      this._listenForAuthEvents();
    }
    /**
     * Supabase Functions allows you to deploy and invoke edge functions.
     */
    get functions() {
      return new FunctionsClient(this.functionsUrl, {
        headers: this.headers,
        customFetch: this.fetch
      });
    }
    /**
     * Supabase Storage allows you to manage user-generated content, such as photos or videos.
     */
    get storage() {
      return new StorageClient(this.storageUrl, this.headers, this.fetch);
    }
    /**
     * Perform a query on a table or a view.
     *
     * @param relation - The table or view name to query
     */
    from(relation) {
      return this.rest.from(relation);
    }
    // NOTE: signatures must be kept in sync with PostgrestClient.schema
    /**
     * Select a schema to query or perform an function (rpc) call.
     *
     * The schema needs to be on the list of exposed schemas inside Supabase.
     *
     * @param schema - The schema to query
     */
    schema(schema) {
      return this.rest.schema(schema);
    }
    // NOTE: signatures must be kept in sync with PostgrestClient.rpc
    /**
     * Perform a function call.
     *
     * @param fn - The function name to call
     * @param args - The arguments to pass to the function call
     * @param options - Named parameters
     * @param options.head - When set to `true`, `data` will not be returned.
     * Useful if you only need the count.
     * @param options.get - When set to `true`, the function will be called with
     * read-only access mode.
     * @param options.count - Count algorithm to use to count rows returned by the
     * function. Only applicable for [set-returning
     * functions](https://www.postgresql.org/docs/current/functions-srf.html).
     *
     * `"exact"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the
     * hood.
     *
     * `"planned"`: Approximated but fast count algorithm. Uses the Postgres
     * statistics under the hood.
     *
     * `"estimated"`: Uses exact count for low numbers and planned count for high
     * numbers.
     */
    rpc(fn, args = {}, options = {}) {
      return this.rest.rpc(fn, args, options);
    }
    /**
     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.
     *
     * @param {string} name - The name of the Realtime channel.
     * @param {Object} opts - The options to pass to the Realtime channel.
     *
     */
    channel(name, opts = { config: {} }) {
      return this.realtime.channel(name, opts);
    }
    /**
     * Returns all Realtime channels.
     */
    getChannels() {
      return this.realtime.getChannels();
    }
    /**
     * Unsubscribes and removes Realtime channel from Realtime client.
     *
     * @param {RealtimeChannel} channel - The name of the Realtime channel.
     *
     */
    removeChannel(channel) {
      return this.realtime.removeChannel(channel);
    }
    /**
     * Unsubscribes and removes all Realtime channels from Realtime client.
     */
    removeAllChannels() {
      return this.realtime.removeAllChannels();
    }
    _getAccessToken() {
      var _a, _b;
      return __awaiter15(this, void 0, void 0, function* () {
        const { data } = yield this.auth.getSession();
        return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;
      });
    }
    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, debug }, headers, fetch3) {
      var _a;
      const authHeaders = {
        Authorization: `Bearer ${this.supabaseKey}`,
        apikey: `${this.supabaseKey}`
      };
      return new SupabaseAuthClient({
        url: this.authUrl,
        headers: Object.assign(Object.assign({}, authHeaders), headers),
        storageKey,
        autoRefreshToken,
        persistSession,
        detectSessionInUrl,
        storage,
        flowType,
        debug,
        fetch: fetch3,
        // auth checks if there is a custom authorizaiton header using this flag
        // so it knows whether to return an error when getUser is called with no session
        hasCustomAuthorizationHeader: (_a = "Authorization" in this.headers) !== null && _a !== void 0 ? _a : false
      });
    }
    _initRealtimeClient(options) {
      return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));
    }
    _listenForAuthEvents() {
      let data = this.auth.onAuthStateChange((event, session) => {
        this._handleTokenChanged(event, "CLIENT", session === null || session === void 0 ? void 0 : session.access_token);
      });
      return data;
    }
    _handleTokenChanged(event, source, token) {
      if ((event === "TOKEN_REFRESHED" || event === "SIGNED_IN") && this.changedAccessToken !== token) {
        this.realtime.setAuth(token !== null && token !== void 0 ? token : null);
        this.changedAccessToken = token;
      } else if (event === "SIGNED_OUT") {
        this.realtime.setAuth(this.supabaseKey);
        if (source == "STORAGE")
          this.auth.signOut();
        this.changedAccessToken = void 0;
      }
    }
  };

  // node_modules/@supabase/supabase-js/dist/module/index.js
  var createClient = (supabaseUrl, supabaseKey, options) => {
    return new SupabaseClient(supabaseUrl, supabaseKey, options);
  };

  // static/scripts/rewards/render-transaction/read-claim-data-from-url.ts
  var import_handlers = __toESM(require_handlers());

  // static/scripts/rewards/button-controller.ts
  var LOADER = "data-loader";
  var MAKE_CLAIM = "data-make-claim";
  var VIEW_CLAIM = "data-view-claim";
  var INVALIDATOR = "data-invalidator";
  var ButtonController = class {
    _controls;
    constructor(controls2) {
      this._controls = controls2;
      this.hideAll();
    }
    showLoader() {
      if (window.ethereum) {
        this._controls.setAttribute(LOADER, "true");
      } else {
        throw new Error("Can not show loader without `ethereum`");
      }
    }
    hideLoader() {
      this._controls.setAttribute(LOADER, "false");
    }
    hideMakeClaim() {
      this._controls.setAttribute(MAKE_CLAIM, "false");
    }
    showMakeClaim() {
      if (window.ethereum) {
        this._controls.setAttribute(MAKE_CLAIM, "true");
      } else {
        throw new Error("Can not show make claim button without `ethereum`");
      }
    }
    hideViewClaim() {
      this._controls.setAttribute(VIEW_CLAIM, "false");
    }
    showViewClaim() {
      this._controls.setAttribute(VIEW_CLAIM, "true");
    }
    hideInvalidator() {
      this._controls.setAttribute(INVALIDATOR, "false");
    }
    showInvalidator() {
      if (window.ethereum) {
        this._controls.setAttribute(INVALIDATOR, "true");
      } else {
        throw new Error("Can not show invalidator button without `ethereum`");
      }
    }
    onlyShowLoader() {
      this.hideMakeClaim();
      this.hideViewClaim();
      this.hideInvalidator();
      this.showLoader();
    }
    onlyShowMakeClaim() {
      this.hideLoader();
      this.showMakeClaim();
      this.hideViewClaim();
      this.hideInvalidator();
    }
    onlyShowViewClaim() {
      this.hideLoader();
      this.hideMakeClaim();
      this.showViewClaim();
      this.hideInvalidator();
    }
    onlyShowInvalidator() {
      this.hideLoader();
      this.hideMakeClaim();
      this.hideViewClaim();
      this.showInvalidator();
    }
    hideAll() {
      this.hideLoader();
      this.hideMakeClaim();
      this.hideViewClaim();
      this.hideInvalidator();
    }
  };

  // static/scripts/rewards/toaster.ts
  var toaster = {
    create: createToast,
    error: errorToast,
    icons: {
      success: "fa-circle-check",
      error: "fa-circle-xmark",
      warning: "fa-triangle-exclamation",
      info: "fa-circle-info"
    }
  };
  var controls = document.getElementById("controls");
  function getMakeClaimButton() {
    return document.getElementById("make-claim");
  }
  var viewClaimButton = document.getElementById("view-claim");
  var notifications = document.querySelector(".notifications");
  var buttonController = new ButtonController(controls);
  function createToast(meaning, text, timeout = 5e3) {
    if (meaning != "info")
      buttonController.hideLoader();
    const toastDetails = {
      timer: timeout
    };
    const _icon = toaster.icons[meaning];
    const toastContent = document.createElement("li");
    toastContent.className = `toast .${_icon} ${meaning}`;
    toastContent.innerHTML = `<div class="column"><i class="fa-solid ${_icon}"></i><span>${text}</span></div>`;
    const i = document.createElement("i");
    i.className = "fa-solid fa-xmark";
    i.onclick = () => removeToast(toastContent, toastDetails.timeoutId);
    toastContent.appendChild(i);
    notifications.appendChild(toastContent);
    if (timeout !== Infinity) {
      toastDetails.timeoutId = setTimeout(() => removeToast(toastContent, toastDetails.timeoutId), toastDetails.timer);
    }
  }
  function removeToast(toast, timeoutId) {
    toast.classList.add("hide");
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
    setTimeout(() => toast.remove(), 500);
  }
  function errorToast(error, errorMessage) {
    if (errorMessage) {
      toaster.create("error", errorMessage);
      return;
    }
    toaster.create("error", error.reason);
  }

  // node_modules/ethers/lib.esm/ethers.js
  var ethers_exports = {};
  __export(ethers_exports, {
    BaseContract: () => BaseContract,
    BigNumber: () => BigNumber2,
    Contract: () => Contract,
    ContractFactory: () => ContractFactory,
    FixedNumber: () => FixedNumber,
    Signer: () => Signer2,
    VoidSigner: () => VoidSigner,
    Wallet: () => Wallet,
    Wordlist: () => Wordlist,
    constants: () => lib_exports2,
    errors: () => ErrorCode2,
    getDefaultProvider: () => getDefaultProvider,
    logger: () => logger65,
    providers: () => lib_exports4,
    utils: () => utils_exports2,
    version: () => version46,
    wordlists: () => wordlists
  });

  // node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
  var import_bn3 = __toESM(require_bn2());

  // node_modules/@ethersproject/logger/lib.esm/_version.js
  var version21 = "logger/5.7.0";

  // node_modules/@ethersproject/logger/lib.esm/index.js
  var _permanentCensorErrors2 = false;
  var _censorErrors2 = false;
  var LogLevels2 = { debug: 1, "default": 2, info: 2, warning: 3, error: 4, off: 5 };
  var _logLevel2 = LogLevels2["default"];
  var _globalLogger2 = null;
  function _checkNormalize2() {
    try {
      const missing = [];
      ["NFD", "NFC", "NFKD", "NFKC"].forEach((form) => {
        try {
          if ("test".normalize(form) !== "test") {
            throw new Error("bad normalize");
          }
          ;
        } catch (error) {
          missing.push(form);
        }
      });
      if (missing.length) {
        throw new Error("missing " + missing.join(", "));
      }
      if (String.fromCharCode(233).normalize("NFD") !== String.fromCharCode(101, 769)) {
        throw new Error("broken implementation");
      }
    } catch (error) {
      return error.message;
    }
    return null;
  }
  var _normalizeError2 = _checkNormalize2();
  var LogLevel2;
  (function(LogLevel3) {
    LogLevel3["DEBUG"] = "DEBUG";
    LogLevel3["INFO"] = "INFO";
    LogLevel3["WARNING"] = "WARNING";
    LogLevel3["ERROR"] = "ERROR";
    LogLevel3["OFF"] = "OFF";
  })(LogLevel2 || (LogLevel2 = {}));
  var ErrorCode2;
  (function(ErrorCode3) {
    ErrorCode3["UNKNOWN_ERROR"] = "UNKNOWN_ERROR";
    ErrorCode3["NOT_IMPLEMENTED"] = "NOT_IMPLEMENTED";
    ErrorCode3["UNSUPPORTED_OPERATION"] = "UNSUPPORTED_OPERATION";
    ErrorCode3["NETWORK_ERROR"] = "NETWORK_ERROR";
    ErrorCode3["SERVER_ERROR"] = "SERVER_ERROR";
    ErrorCode3["TIMEOUT"] = "TIMEOUT";
    ErrorCode3["BUFFER_OVERRUN"] = "BUFFER_OVERRUN";
    ErrorCode3["NUMERIC_FAULT"] = "NUMERIC_FAULT";
    ErrorCode3["MISSING_NEW"] = "MISSING_NEW";
    ErrorCode3["INVALID_ARGUMENT"] = "INVALID_ARGUMENT";
    ErrorCode3["MISSING_ARGUMENT"] = "MISSING_ARGUMENT";
    ErrorCode3["UNEXPECTED_ARGUMENT"] = "UNEXPECTED_ARGUMENT";
    ErrorCode3["CALL_EXCEPTION"] = "CALL_EXCEPTION";
    ErrorCode3["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    ErrorCode3["NONCE_EXPIRED"] = "NONCE_EXPIRED";
    ErrorCode3["REPLACEMENT_UNDERPRICED"] = "REPLACEMENT_UNDERPRICED";
    ErrorCode3["UNPREDICTABLE_GAS_LIMIT"] = "UNPREDICTABLE_GAS_LIMIT";
    ErrorCode3["TRANSACTION_REPLACED"] = "TRANSACTION_REPLACED";
    ErrorCode3["ACTION_REJECTED"] = "ACTION_REJECTED";
  })(ErrorCode2 || (ErrorCode2 = {}));
  var HEX2 = "0123456789abcdef";
  var Logger2 = class _Logger2 {
    constructor(version47) {
      Object.defineProperty(this, "version", {
        enumerable: true,
        value: version47,
        writable: false
      });
    }
    _log(logLevel, args) {
      const level = logLevel.toLowerCase();
      if (LogLevels2[level] == null) {
        this.throwArgumentError("invalid log level name", "logLevel", logLevel);
      }
      if (_logLevel2 > LogLevels2[level]) {
        return;
      }
      console.log.apply(console, args);
    }
    debug(...args) {
      this._log(_Logger2.levels.DEBUG, args);
    }
    info(...args) {
      this._log(_Logger2.levels.INFO, args);
    }
    warn(...args) {
      this._log(_Logger2.levels.WARNING, args);
    }
    makeError(message, code, params) {
      if (_censorErrors2) {
        return this.makeError("censored error", code, {});
      }
      if (!code) {
        code = _Logger2.errors.UNKNOWN_ERROR;
      }
      if (!params) {
        params = {};
      }
      const messageDetails = [];
      Object.keys(params).forEach((key3) => {
        const value = params[key3];
        try {
          if (value instanceof Uint8Array) {
            let hex = "";
            for (let i = 0; i < value.length; i++) {
              hex += HEX2[value[i] >> 4];
              hex += HEX2[value[i] & 15];
            }
            messageDetails.push(key3 + "=Uint8Array(0x" + hex + ")");
          } else {
            messageDetails.push(key3 + "=" + JSON.stringify(value));
          }
        } catch (error2) {
          messageDetails.push(key3 + "=" + JSON.stringify(params[key3].toString()));
        }
      });
      messageDetails.push(`code=${code}`);
      messageDetails.push(`version=${this.version}`);
      const reason = message;
      let url = "";
      switch (code) {
        case ErrorCode2.NUMERIC_FAULT: {
          url = "NUMERIC_FAULT";
          const fault = message;
          switch (fault) {
            case "overflow":
            case "underflow":
            case "division-by-zero":
              url += "-" + fault;
              break;
            case "negative-power":
            case "negative-width":
              url += "-unsupported";
              break;
            case "unbound-bitwise-result":
              url += "-unbound-result";
              break;
          }
          break;
        }
        case ErrorCode2.CALL_EXCEPTION:
        case ErrorCode2.INSUFFICIENT_FUNDS:
        case ErrorCode2.MISSING_NEW:
        case ErrorCode2.NONCE_EXPIRED:
        case ErrorCode2.REPLACEMENT_UNDERPRICED:
        case ErrorCode2.TRANSACTION_REPLACED:
        case ErrorCode2.UNPREDICTABLE_GAS_LIMIT:
          url = code;
          break;
      }
      if (url) {
        message += " [ See: https://links.ethers.org/v5-errors-" + url + " ]";
      }
      if (messageDetails.length) {
        message += " (" + messageDetails.join(", ") + ")";
      }
      const error = new Error(message);
      error.reason = reason;
      error.code = code;
      Object.keys(params).forEach(function(key3) {
        error[key3] = params[key3];
      });
      return error;
    }
    throwError(message, code, params) {
      throw this.makeError(message, code, params);
    }
    throwArgumentError(message, name, value) {
      return this.throwError(message, _Logger2.errors.INVALID_ARGUMENT, {
        argument: name,
        value
      });
    }
    assert(condition, message, code, params) {
      if (!!condition) {
        return;
      }
      this.throwError(message, code, params);
    }
    assertArgument(condition, message, name, value) {
      if (!!condition) {
        return;
      }
      this.throwArgumentError(message, name, value);
    }
    checkNormalize(message) {
      if (message == null) {
        message = "platform missing String.prototype.normalize";
      }
      if (_normalizeError2) {
        this.throwError("platform missing String.prototype.normalize", _Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "String.prototype.normalize",
          form: _normalizeError2
        });
      }
    }
    checkSafeUint53(value, message) {
      if (typeof value !== "number") {
        return;
      }
      if (message == null) {
        message = "value not safe";
      }
      if (value < 0 || value >= 9007199254740991) {
        this.throwError(message, _Logger2.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "out-of-safe-range",
          value
        });
      }
      if (value % 1) {
        this.throwError(message, _Logger2.errors.NUMERIC_FAULT, {
          operation: "checkSafeInteger",
          fault: "non-integer",
          value
        });
      }
    }
    checkArgumentCount(count, expectedCount, message) {
      if (message) {
        message = ": " + message;
      } else {
        message = "";
      }
      if (count < expectedCount) {
        this.throwError("missing argument" + message, _Logger2.errors.MISSING_ARGUMENT, {
          count,
          expectedCount
        });
      }
      if (count > expectedCount) {
        this.throwError("too many arguments" + message, _Logger2.errors.UNEXPECTED_ARGUMENT, {
          count,
          expectedCount
        });
      }
    }
    checkNew(target, kind) {
      if (target === Object || target == null) {
        this.throwError("missing new", _Logger2.errors.MISSING_NEW, { name: kind.name });
      }
    }
    checkAbstract(target, kind) {
      if (target === kind) {
        this.throwError("cannot instantiate abstract class " + JSON.stringify(kind.name) + " directly; use a sub-class", _Logger2.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: "new" });
      } else if (target === Object || target == null) {
        this.throwError("missing new", _Logger2.errors.MISSING_NEW, { name: kind.name });
      }
    }
    static globalLogger() {
      if (!_globalLogger2) {
        _globalLogger2 = new _Logger2(version21);
      }
      return _globalLogger2;
    }
    static setCensorship(censorship, permanent) {
      if (!censorship && permanent) {
        this.globalLogger().throwError("cannot permanently disable censorship", _Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      if (_permanentCensorErrors2) {
        if (!censorship) {
          return;
        }
        this.globalLogger().throwError("error censorship permanent", _Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "setCensorship"
        });
      }
      _censorErrors2 = !!censorship;
      _permanentCensorErrors2 = !!permanent;
    }
    static setLogLevel(logLevel) {
      const level = LogLevels2[logLevel.toLowerCase()];
      if (level == null) {
        _Logger2.globalLogger().warn("invalid log level - " + logLevel);
        return;
      }
      _logLevel2 = level;
    }
    static from(version47) {
      return new _Logger2(version47);
    }
  };
  Logger2.errors = ErrorCode2;
  Logger2.levels = LogLevel2;

  // node_modules/@ethersproject/bytes/lib.esm/_version.js
  var version22 = "bytes/5.7.0";

  // node_modules/@ethersproject/bytes/lib.esm/index.js
  var logger20 = new Logger2(version22);
  function isHexable2(value) {
    return !!value.toHexString;
  }
  function addSlice2(array) {
    if (array.slice) {
      return array;
    }
    array.slice = function() {
      const args = Array.prototype.slice.call(arguments);
      return addSlice2(new Uint8Array(Array.prototype.slice.apply(array, args)));
    };
    return array;
  }
  function isBytesLike2(value) {
    return isHexString2(value) && !(value.length % 2) || isBytes2(value);
  }
  function isInteger2(value) {
    return typeof value === "number" && value == value && value % 1 === 0;
  }
  function isBytes2(value) {
    if (value == null) {
      return false;
    }
    if (value.constructor === Uint8Array) {
      return true;
    }
    if (typeof value === "string") {
      return false;
    }
    if (!isInteger2(value.length) || value.length < 0) {
      return false;
    }
    for (let i = 0; i < value.length; i++) {
      const v = value[i];
      if (!isInteger2(v) || v < 0 || v >= 256) {
        return false;
      }
    }
    return true;
  }
  function arrayify2(value, options) {
    if (!options) {
      options = {};
    }
    if (typeof value === "number") {
      logger20.checkSafeUint53(value, "invalid arrayify value");
      const result = [];
      while (value) {
        result.unshift(value & 255);
        value = parseInt(String(value / 256));
      }
      if (result.length === 0) {
        result.push(0);
      }
      return addSlice2(new Uint8Array(result));
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (isHexable2(value)) {
      value = value.toHexString();
    }
    if (isHexString2(value)) {
      let hex = value.substring(2);
      if (hex.length % 2) {
        if (options.hexPad === "left") {
          hex = "0" + hex;
        } else if (options.hexPad === "right") {
          hex += "0";
        } else {
          logger20.throwArgumentError("hex data is odd-length", "value", value);
        }
      }
      const result = [];
      for (let i = 0; i < hex.length; i += 2) {
        result.push(parseInt(hex.substring(i, i + 2), 16));
      }
      return addSlice2(new Uint8Array(result));
    }
    if (isBytes2(value)) {
      return addSlice2(new Uint8Array(value));
    }
    return logger20.throwArgumentError("invalid arrayify value", "value", value);
  }
  function concat2(items) {
    const objects = items.map((item) => arrayify2(item));
    const length = objects.reduce((accum, item) => accum + item.length, 0);
    const result = new Uint8Array(length);
    objects.reduce((offset, object) => {
      result.set(object, offset);
      return offset + object.length;
    }, 0);
    return addSlice2(result);
  }
  function stripZeros2(value) {
    let result = arrayify2(value);
    if (result.length === 0) {
      return result;
    }
    let start = 0;
    while (start < result.length && result[start] === 0) {
      start++;
    }
    if (start) {
      result = result.slice(start);
    }
    return result;
  }
  function zeroPad2(value, length) {
    value = arrayify2(value);
    if (value.length > length) {
      logger20.throwArgumentError("value out of range", "value", arguments[0]);
    }
    const result = new Uint8Array(length);
    result.set(value, length - value.length);
    return addSlice2(result);
  }
  function isHexString2(value, length) {
    if (typeof value !== "string" || !value.match(/^0x[0-9A-Fa-f]*$/)) {
      return false;
    }
    if (length && value.length !== 2 + 2 * length) {
      return false;
    }
    return true;
  }
  var HexCharacters2 = "0123456789abcdef";
  function hexlify2(value, options) {
    if (!options) {
      options = {};
    }
    if (typeof value === "number") {
      logger20.checkSafeUint53(value, "invalid hexlify value");
      let hex = "";
      while (value) {
        hex = HexCharacters2[value & 15] + hex;
        value = Math.floor(value / 16);
      }
      if (hex.length) {
        if (hex.length % 2) {
          hex = "0" + hex;
        }
        return "0x" + hex;
      }
      return "0x00";
    }
    if (typeof value === "bigint") {
      value = value.toString(16);
      if (value.length % 2) {
        return "0x0" + value;
      }
      return "0x" + value;
    }
    if (options.allowMissingPrefix && typeof value === "string" && value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (isHexable2(value)) {
      return value.toHexString();
    }
    if (isHexString2(value)) {
      if (value.length % 2) {
        if (options.hexPad === "left") {
          value = "0x0" + value.substring(2);
        } else if (options.hexPad === "right") {
          value += "0";
        } else {
          logger20.throwArgumentError("hex data is odd-length", "value", value);
        }
      }
      return value.toLowerCase();
    }
    if (isBytes2(value)) {
      let result = "0x";
      for (let i = 0; i < value.length; i++) {
        let v = value[i];
        result += HexCharacters2[(v & 240) >> 4] + HexCharacters2[v & 15];
      }
      return result;
    }
    return logger20.throwArgumentError("invalid hexlify value", "value", value);
  }
  function hexDataLength2(data) {
    if (typeof data !== "string") {
      data = hexlify2(data);
    } else if (!isHexString2(data) || data.length % 2) {
      return null;
    }
    return (data.length - 2) / 2;
  }
  function hexDataSlice2(data, offset, endOffset) {
    if (typeof data !== "string") {
      data = hexlify2(data);
    } else if (!isHexString2(data) || data.length % 2) {
      logger20.throwArgumentError("invalid hexData", "value", data);
    }
    offset = 2 + 2 * offset;
    if (endOffset != null) {
      return "0x" + data.substring(offset, 2 + 2 * endOffset);
    }
    return "0x" + data.substring(offset);
  }
  function hexConcat2(items) {
    let result = "0x";
    items.forEach((item) => {
      result += hexlify2(item).substring(2);
    });
    return result;
  }
  function hexValue2(value) {
    const trimmed = hexStripZeros2(hexlify2(value, { hexPad: "left" }));
    if (trimmed === "0x") {
      return "0x0";
    }
    return trimmed;
  }
  function hexStripZeros2(value) {
    if (typeof value !== "string") {
      value = hexlify2(value);
    }
    if (!isHexString2(value)) {
      logger20.throwArgumentError("invalid hex string", "value", value);
    }
    value = value.substring(2);
    let offset = 0;
    while (offset < value.length && value[offset] === "0") {
      offset++;
    }
    return "0x" + value.substring(offset);
  }
  function hexZeroPad2(value, length) {
    if (typeof value !== "string") {
      value = hexlify2(value);
    } else if (!isHexString2(value)) {
      logger20.throwArgumentError("invalid hex string", "value", value);
    }
    if (value.length > 2 * length + 2) {
      logger20.throwArgumentError("value out of range", "value", arguments[1]);
    }
    while (value.length < 2 * length + 2) {
      value = "0x0" + value.substring(2);
    }
    return value;
  }
  function splitSignature2(signature3) {
    const result = {
      r: "0x",
      s: "0x",
      _vs: "0x",
      recoveryParam: 0,
      v: 0,
      yParityAndS: "0x",
      compact: "0x"
    };
    if (isBytesLike2(signature3)) {
      let bytes = arrayify2(signature3);
      if (bytes.length === 64) {
        result.v = 27 + (bytes[32] >> 7);
        bytes[32] &= 127;
        result.r = hexlify2(bytes.slice(0, 32));
        result.s = hexlify2(bytes.slice(32, 64));
      } else if (bytes.length === 65) {
        result.r = hexlify2(bytes.slice(0, 32));
        result.s = hexlify2(bytes.slice(32, 64));
        result.v = bytes[64];
      } else {
        logger20.throwArgumentError("invalid signature string", "signature", signature3);
      }
      if (result.v < 27) {
        if (result.v === 0 || result.v === 1) {
          result.v += 27;
        } else {
          logger20.throwArgumentError("signature invalid v byte", "signature", signature3);
        }
      }
      result.recoveryParam = 1 - result.v % 2;
      if (result.recoveryParam) {
        bytes[32] |= 128;
      }
      result._vs = hexlify2(bytes.slice(32, 64));
    } else {
      result.r = signature3.r;
      result.s = signature3.s;
      result.v = signature3.v;
      result.recoveryParam = signature3.recoveryParam;
      result._vs = signature3._vs;
      if (result._vs != null) {
        const vs2 = zeroPad2(arrayify2(result._vs), 32);
        result._vs = hexlify2(vs2);
        const recoveryParam = vs2[0] >= 128 ? 1 : 0;
        if (result.recoveryParam == null) {
          result.recoveryParam = recoveryParam;
        } else if (result.recoveryParam !== recoveryParam) {
          logger20.throwArgumentError("signature recoveryParam mismatch _vs", "signature", signature3);
        }
        vs2[0] &= 127;
        const s = hexlify2(vs2);
        if (result.s == null) {
          result.s = s;
        } else if (result.s !== s) {
          logger20.throwArgumentError("signature v mismatch _vs", "signature", signature3);
        }
      }
      if (result.recoveryParam == null) {
        if (result.v == null) {
          logger20.throwArgumentError("signature missing v and recoveryParam", "signature", signature3);
        } else if (result.v === 0 || result.v === 1) {
          result.recoveryParam = result.v;
        } else {
          result.recoveryParam = 1 - result.v % 2;
        }
      } else {
        if (result.v == null) {
          result.v = 27 + result.recoveryParam;
        } else {
          const recId = result.v === 0 || result.v === 1 ? result.v : 1 - result.v % 2;
          if (result.recoveryParam !== recId) {
            logger20.throwArgumentError("signature recoveryParam mismatch v", "signature", signature3);
          }
        }
      }
      if (result.r == null || !isHexString2(result.r)) {
        logger20.throwArgumentError("signature missing or invalid r", "signature", signature3);
      } else {
        result.r = hexZeroPad2(result.r, 32);
      }
      if (result.s == null || !isHexString2(result.s)) {
        logger20.throwArgumentError("signature missing or invalid s", "signature", signature3);
      } else {
        result.s = hexZeroPad2(result.s, 32);
      }
      const vs = arrayify2(result.s);
      if (vs[0] >= 128) {
        logger20.throwArgumentError("signature s out of range", "signature", signature3);
      }
      if (result.recoveryParam) {
        vs[0] |= 128;
      }
      const _vs = hexlify2(vs);
      if (result._vs) {
        if (!isHexString2(result._vs)) {
          logger20.throwArgumentError("signature invalid _vs", "signature", signature3);
        }
        result._vs = hexZeroPad2(result._vs, 32);
      }
      if (result._vs == null) {
        result._vs = _vs;
      } else if (result._vs !== _vs) {
        logger20.throwArgumentError("signature _vs mismatch v and s", "signature", signature3);
      }
    }
    result.yParityAndS = result._vs;
    result.compact = result.r + result.yParityAndS.substring(2);
    return result;
  }
  function joinSignature(signature3) {
    signature3 = splitSignature2(signature3);
    return hexlify2(concat2([
      signature3.r,
      signature3.s,
      signature3.recoveryParam ? "0x1c" : "0x1b"
    ]));
  }

  // node_modules/@ethersproject/bignumber/lib.esm/_version.js
  var version23 = "bignumber/5.7.0";

  // node_modules/@ethersproject/bignumber/lib.esm/bignumber.js
  var BN2 = import_bn3.default.BN;
  var logger21 = new Logger2(version23);
  var _constructorGuard3 = {};
  var MAX_SAFE2 = 9007199254740991;
  function isBigNumberish(value) {
    return value != null && (BigNumber2.isBigNumber(value) || typeof value === "number" && value % 1 === 0 || typeof value === "string" && !!value.match(/^-?[0-9]+$/) || isHexString2(value) || typeof value === "bigint" || isBytes2(value));
  }
  var _warnedToStringRadix2 = false;
  var BigNumber2 = class _BigNumber2 {
    constructor(constructorGuard, hex) {
      if (constructorGuard !== _constructorGuard3) {
        logger21.throwError("cannot call constructor directly; use BigNumber.from", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "new (BigNumber)"
        });
      }
      this._hex = hex;
      this._isBigNumber = true;
      Object.freeze(this);
    }
    fromTwos(value) {
      return toBigNumber2(toBN2(this).fromTwos(value));
    }
    toTwos(value) {
      return toBigNumber2(toBN2(this).toTwos(value));
    }
    abs() {
      if (this._hex[0] === "-") {
        return _BigNumber2.from(this._hex.substring(1));
      }
      return this;
    }
    add(other) {
      return toBigNumber2(toBN2(this).add(toBN2(other)));
    }
    sub(other) {
      return toBigNumber2(toBN2(this).sub(toBN2(other)));
    }
    div(other) {
      const o = _BigNumber2.from(other);
      if (o.isZero()) {
        throwFault2("division-by-zero", "div");
      }
      return toBigNumber2(toBN2(this).div(toBN2(other)));
    }
    mul(other) {
      return toBigNumber2(toBN2(this).mul(toBN2(other)));
    }
    mod(other) {
      const value = toBN2(other);
      if (value.isNeg()) {
        throwFault2("division-by-zero", "mod");
      }
      return toBigNumber2(toBN2(this).umod(value));
    }
    pow(other) {
      const value = toBN2(other);
      if (value.isNeg()) {
        throwFault2("negative-power", "pow");
      }
      return toBigNumber2(toBN2(this).pow(value));
    }
    and(other) {
      const value = toBN2(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault2("unbound-bitwise-result", "and");
      }
      return toBigNumber2(toBN2(this).and(value));
    }
    or(other) {
      const value = toBN2(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault2("unbound-bitwise-result", "or");
      }
      return toBigNumber2(toBN2(this).or(value));
    }
    xor(other) {
      const value = toBN2(other);
      if (this.isNegative() || value.isNeg()) {
        throwFault2("unbound-bitwise-result", "xor");
      }
      return toBigNumber2(toBN2(this).xor(value));
    }
    mask(value) {
      if (this.isNegative() || value < 0) {
        throwFault2("negative-width", "mask");
      }
      return toBigNumber2(toBN2(this).maskn(value));
    }
    shl(value) {
      if (this.isNegative() || value < 0) {
        throwFault2("negative-width", "shl");
      }
      return toBigNumber2(toBN2(this).shln(value));
    }
    shr(value) {
      if (this.isNegative() || value < 0) {
        throwFault2("negative-width", "shr");
      }
      return toBigNumber2(toBN2(this).shrn(value));
    }
    eq(other) {
      return toBN2(this).eq(toBN2(other));
    }
    lt(other) {
      return toBN2(this).lt(toBN2(other));
    }
    lte(other) {
      return toBN2(this).lte(toBN2(other));
    }
    gt(other) {
      return toBN2(this).gt(toBN2(other));
    }
    gte(other) {
      return toBN2(this).gte(toBN2(other));
    }
    isNegative() {
      return this._hex[0] === "-";
    }
    isZero() {
      return toBN2(this).isZero();
    }
    toNumber() {
      try {
        return toBN2(this).toNumber();
      } catch (error) {
        throwFault2("overflow", "toNumber", this.toString());
      }
      return null;
    }
    toBigInt() {
      try {
        return BigInt(this.toString());
      } catch (e) {
      }
      return logger21.throwError("this platform does not support BigInt", Logger2.errors.UNSUPPORTED_OPERATION, {
        value: this.toString()
      });
    }
    toString() {
      if (arguments.length > 0) {
        if (arguments[0] === 10) {
          if (!_warnedToStringRadix2) {
            _warnedToStringRadix2 = true;
            logger21.warn("BigNumber.toString does not accept any parameters; base-10 is assumed");
          }
        } else if (arguments[0] === 16) {
          logger21.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()", Logger2.errors.UNEXPECTED_ARGUMENT, {});
        } else {
          logger21.throwError("BigNumber.toString does not accept parameters", Logger2.errors.UNEXPECTED_ARGUMENT, {});
        }
      }
      return toBN2(this).toString(10);
    }
    toHexString() {
      return this._hex;
    }
    toJSON(key3) {
      return { type: "BigNumber", hex: this.toHexString() };
    }
    static from(value) {
      if (value instanceof _BigNumber2) {
        return value;
      }
      if (typeof value === "string") {
        if (value.match(/^-?0x[0-9a-f]+$/i)) {
          return new _BigNumber2(_constructorGuard3, toHex2(value));
        }
        if (value.match(/^-?[0-9]+$/)) {
          return new _BigNumber2(_constructorGuard3, toHex2(new BN2(value)));
        }
        return logger21.throwArgumentError("invalid BigNumber string", "value", value);
      }
      if (typeof value === "number") {
        if (value % 1) {
          throwFault2("underflow", "BigNumber.from", value);
        }
        if (value >= MAX_SAFE2 || value <= -MAX_SAFE2) {
          throwFault2("overflow", "BigNumber.from", value);
        }
        return _BigNumber2.from(String(value));
      }
      const anyValue = value;
      if (typeof anyValue === "bigint") {
        return _BigNumber2.from(anyValue.toString());
      }
      if (isBytes2(anyValue)) {
        return _BigNumber2.from(hexlify2(anyValue));
      }
      if (anyValue) {
        if (anyValue.toHexString) {
          const hex = anyValue.toHexString();
          if (typeof hex === "string") {
            return _BigNumber2.from(hex);
          }
        } else {
          let hex = anyValue._hex;
          if (hex == null && anyValue.type === "BigNumber") {
            hex = anyValue.hex;
          }
          if (typeof hex === "string") {
            if (isHexString2(hex) || hex[0] === "-" && isHexString2(hex.substring(1))) {
              return _BigNumber2.from(hex);
            }
          }
        }
      }
      return logger21.throwArgumentError("invalid BigNumber value", "value", value);
    }
    static isBigNumber(value) {
      return !!(value && value._isBigNumber);
    }
  };
  function toHex2(value) {
    if (typeof value !== "string") {
      return toHex2(value.toString(16));
    }
    if (value[0] === "-") {
      value = value.substring(1);
      if (value[0] === "-") {
        logger21.throwArgumentError("invalid hex", "value", value);
      }
      value = toHex2(value);
      if (value === "0x00") {
        return value;
      }
      return "-" + value;
    }
    if (value.substring(0, 2) !== "0x") {
      value = "0x" + value;
    }
    if (value === "0x") {
      return "0x00";
    }
    if (value.length % 2) {
      value = "0x0" + value.substring(2);
    }
    while (value.length > 4 && value.substring(0, 4) === "0x00") {
      value = "0x" + value.substring(4);
    }
    return value;
  }
  function toBigNumber2(value) {
    return BigNumber2.from(toHex2(value));
  }
  function toBN2(value) {
    const hex = BigNumber2.from(value).toHexString();
    if (hex[0] === "-") {
      return new BN2("-" + hex.substring(3), 16);
    }
    return new BN2(hex.substring(2), 16);
  }
  function throwFault2(fault, operation, value) {
    const params = { fault, operation };
    if (value != null) {
      params.value = value;
    }
    return logger21.throwError(fault, Logger2.errors.NUMERIC_FAULT, params);
  }
  function _base36To162(value) {
    return new BN2(value, 36).toString(16);
  }
  function _base16To36(value) {
    return new BN2(value, 16).toString(36);
  }

  // node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js
  var logger22 = new Logger2(version23);
  var _constructorGuard4 = {};
  var Zero3 = BigNumber2.from(0);
  var NegativeOne = BigNumber2.from(-1);
  function throwFault3(message, fault, operation, value) {
    const params = { fault, operation };
    if (value !== void 0) {
      params.value = value;
    }
    return logger22.throwError(message, Logger2.errors.NUMERIC_FAULT, params);
  }
  var zeros = "0";
  while (zeros.length < 256) {
    zeros += zeros;
  }
  function getMultiplier(decimals) {
    if (typeof decimals !== "number") {
      try {
        decimals = BigNumber2.from(decimals).toNumber();
      } catch (e) {
      }
    }
    if (typeof decimals === "number" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {
      return "1" + zeros.substring(0, decimals);
    }
    return logger22.throwArgumentError("invalid decimal size", "decimals", decimals);
  }
  function formatFixed(value, decimals) {
    if (decimals == null) {
      decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    value = BigNumber2.from(value);
    const negative = value.lt(Zero3);
    if (negative) {
      value = value.mul(NegativeOne);
    }
    let fraction = value.mod(multiplier).toString();
    while (fraction.length < multiplier.length - 1) {
      fraction = "0" + fraction;
    }
    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];
    const whole = value.div(multiplier).toString();
    if (multiplier.length === 1) {
      value = whole;
    } else {
      value = whole + "." + fraction;
    }
    if (negative) {
      value = "-" + value;
    }
    return value;
  }
  function parseFixed(value, decimals) {
    if (decimals == null) {
      decimals = 0;
    }
    const multiplier = getMultiplier(decimals);
    if (typeof value !== "string" || !value.match(/^-?[0-9.]+$/)) {
      logger22.throwArgumentError("invalid decimal value", "value", value);
    }
    const negative = value.substring(0, 1) === "-";
    if (negative) {
      value = value.substring(1);
    }
    if (value === ".") {
      logger22.throwArgumentError("missing value", "value", value);
    }
    const comps = value.split(".");
    if (comps.length > 2) {
      logger22.throwArgumentError("too many decimal points", "value", value);
    }
    let whole = comps[0], fraction = comps[1];
    if (!whole) {
      whole = "0";
    }
    if (!fraction) {
      fraction = "0";
    }
    while (fraction[fraction.length - 1] === "0") {
      fraction = fraction.substring(0, fraction.length - 1);
    }
    if (fraction.length > multiplier.length - 1) {
      throwFault3("fractional component exceeds decimals", "underflow", "parseFixed");
    }
    if (fraction === "") {
      fraction = "0";
    }
    while (fraction.length < multiplier.length - 1) {
      fraction += "0";
    }
    const wholeValue = BigNumber2.from(whole);
    const fractionValue = BigNumber2.from(fraction);
    let wei = wholeValue.mul(multiplier).add(fractionValue);
    if (negative) {
      wei = wei.mul(NegativeOne);
    }
    return wei;
  }
  var FixedFormat = class _FixedFormat {
    constructor(constructorGuard, signed3, width, decimals) {
      if (constructorGuard !== _constructorGuard4) {
        logger22.throwError("cannot use FixedFormat constructor; use FixedFormat.from", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "new FixedFormat"
        });
      }
      this.signed = signed3;
      this.width = width;
      this.decimals = decimals;
      this.name = (signed3 ? "" : "u") + "fixed" + String(width) + "x" + String(decimals);
      this._multiplier = getMultiplier(decimals);
      Object.freeze(this);
    }
    static from(value) {
      if (value instanceof _FixedFormat) {
        return value;
      }
      if (typeof value === "number") {
        value = `fixed128x${value}`;
      }
      let signed3 = true;
      let width = 128;
      let decimals = 18;
      if (typeof value === "string") {
        if (value === "fixed") {
        } else if (value === "ufixed") {
          signed3 = false;
        } else {
          const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
          if (!match) {
            logger22.throwArgumentError("invalid fixed format", "format", value);
          }
          signed3 = match[1] !== "u";
          width = parseInt(match[2]);
          decimals = parseInt(match[3]);
        }
      } else if (value) {
        const check = (key3, type, defaultValue) => {
          if (value[key3] == null) {
            return defaultValue;
          }
          if (typeof value[key3] !== type) {
            logger22.throwArgumentError("invalid fixed format (" + key3 + " not " + type + ")", "format." + key3, value[key3]);
          }
          return value[key3];
        };
        signed3 = check("signed", "boolean", signed3);
        width = check("width", "number", width);
        decimals = check("decimals", "number", decimals);
      }
      if (width % 8) {
        logger22.throwArgumentError("invalid fixed format width (not byte aligned)", "format.width", width);
      }
      if (decimals > 80) {
        logger22.throwArgumentError("invalid fixed format (decimals too large)", "format.decimals", decimals);
      }
      return new _FixedFormat(_constructorGuard4, signed3, width, decimals);
    }
  };
  var FixedNumber = class _FixedNumber {
    constructor(constructorGuard, hex, value, format) {
      if (constructorGuard !== _constructorGuard4) {
        logger22.throwError("cannot use FixedNumber constructor; use FixedNumber.from", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "new FixedFormat"
        });
      }
      this.format = format;
      this._hex = hex;
      this._value = value;
      this._isFixedNumber = true;
      Object.freeze(this);
    }
    _checkFormat(other) {
      if (this.format.name !== other.format.name) {
        logger22.throwArgumentError("incompatible format; use fixedNumber.toFormat", "other", other);
      }
    }
    addUnsafe(other) {
      this._checkFormat(other);
      const a = parseFixed(this._value, this.format.decimals);
      const b = parseFixed(other._value, other.format.decimals);
      return _FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);
    }
    subUnsafe(other) {
      this._checkFormat(other);
      const a = parseFixed(this._value, this.format.decimals);
      const b = parseFixed(other._value, other.format.decimals);
      return _FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);
    }
    mulUnsafe(other) {
      this._checkFormat(other);
      const a = parseFixed(this._value, this.format.decimals);
      const b = parseFixed(other._value, other.format.decimals);
      return _FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);
    }
    divUnsafe(other) {
      this._checkFormat(other);
      const a = parseFixed(this._value, this.format.decimals);
      const b = parseFixed(other._value, other.format.decimals);
      return _FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);
    }
    floor() {
      const comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      let result = _FixedNumber.from(comps[0], this.format);
      const hasFraction = !comps[1].match(/^(0*)$/);
      if (this.isNegative() && hasFraction) {
        result = result.subUnsafe(ONE.toFormat(result.format));
      }
      return result;
    }
    ceiling() {
      const comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      let result = _FixedNumber.from(comps[0], this.format);
      const hasFraction = !comps[1].match(/^(0*)$/);
      if (!this.isNegative() && hasFraction) {
        result = result.addUnsafe(ONE.toFormat(result.format));
      }
      return result;
    }
    // @TODO: Support other rounding algorithms
    round(decimals) {
      if (decimals == null) {
        decimals = 0;
      }
      const comps = this.toString().split(".");
      if (comps.length === 1) {
        comps.push("0");
      }
      if (decimals < 0 || decimals > 80 || decimals % 1) {
        logger22.throwArgumentError("invalid decimal count", "decimals", decimals);
      }
      if (comps[1].length <= decimals) {
        return this;
      }
      const factor = _FixedNumber.from("1" + zeros.substring(0, decimals), this.format);
      const bump = BUMP.toFormat(this.format);
      return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);
    }
    isZero() {
      return this._value === "0.0" || this._value === "0";
    }
    isNegative() {
      return this._value[0] === "-";
    }
    toString() {
      return this._value;
    }
    toHexString(width) {
      if (width == null) {
        return this._hex;
      }
      if (width % 8) {
        logger22.throwArgumentError("invalid byte width", "width", width);
      }
      const hex = BigNumber2.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();
      return hexZeroPad2(hex, width / 8);
    }
    toUnsafeFloat() {
      return parseFloat(this.toString());
    }
    toFormat(format) {
      return _FixedNumber.fromString(this._value, format);
    }
    static fromValue(value, decimals, format) {
      if (format == null && decimals != null && !isBigNumberish(decimals)) {
        format = decimals;
        decimals = null;
      }
      if (decimals == null) {
        decimals = 0;
      }
      if (format == null) {
        format = "fixed";
      }
      return _FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));
    }
    static fromString(value, format) {
      if (format == null) {
        format = "fixed";
      }
      const fixedFormat = FixedFormat.from(format);
      const numeric = parseFixed(value, fixedFormat.decimals);
      if (!fixedFormat.signed && numeric.lt(Zero3)) {
        throwFault3("unsigned value cannot be negative", "overflow", "value", value);
      }
      let hex = null;
      if (fixedFormat.signed) {
        hex = numeric.toTwos(fixedFormat.width).toHexString();
      } else {
        hex = numeric.toHexString();
        hex = hexZeroPad2(hex, fixedFormat.width / 8);
      }
      const decimal = formatFixed(numeric, fixedFormat.decimals);
      return new _FixedNumber(_constructorGuard4, hex, decimal, fixedFormat);
    }
    static fromBytes(value, format) {
      if (format == null) {
        format = "fixed";
      }
      const fixedFormat = FixedFormat.from(format);
      if (arrayify2(value).length > fixedFormat.width / 8) {
        throw new Error("overflow");
      }
      let numeric = BigNumber2.from(value);
      if (fixedFormat.signed) {
        numeric = numeric.fromTwos(fixedFormat.width);
      }
      const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();
      const decimal = formatFixed(numeric, fixedFormat.decimals);
      return new _FixedNumber(_constructorGuard4, hex, decimal, fixedFormat);
    }
    static from(value, format) {
      if (typeof value === "string") {
        return _FixedNumber.fromString(value, format);
      }
      if (isBytes2(value)) {
        return _FixedNumber.fromBytes(value, format);
      }
      try {
        return _FixedNumber.fromValue(value, 0, format);
      } catch (error) {
        if (error.code !== Logger2.errors.INVALID_ARGUMENT) {
          throw error;
        }
      }
      return logger22.throwArgumentError("invalid FixedNumber value", "value", value);
    }
    static isFixedNumber(value) {
      return !!(value && value._isFixedNumber);
    }
  };
  var ONE = FixedNumber.from(1);
  var BUMP = FixedNumber.from("0.5");

  // node_modules/@ethersproject/properties/lib.esm/_version.js
  var version24 = "properties/5.7.0";

  // node_modules/@ethersproject/properties/lib.esm/index.js
  var __awaiter16 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger23 = new Logger2(version24);
  function defineReadOnly2(object, name, value) {
    Object.defineProperty(object, name, {
      enumerable: true,
      value,
      writable: false
    });
  }
  function getStatic2(ctor, key3) {
    for (let i = 0; i < 32; i++) {
      if (ctor[key3]) {
        return ctor[key3];
      }
      if (!ctor.prototype || typeof ctor.prototype !== "object") {
        break;
      }
      ctor = Object.getPrototypeOf(ctor.prototype).constructor;
    }
    return null;
  }
  function resolveProperties2(object) {
    return __awaiter16(this, void 0, void 0, function* () {
      const promises = Object.keys(object).map((key3) => {
        const value = object[key3];
        return Promise.resolve(value).then((v) => ({ key: key3, value: v }));
      });
      const results = yield Promise.all(promises);
      return results.reduce((accum, result) => {
        accum[result.key] = result.value;
        return accum;
      }, {});
    });
  }
  function checkProperties2(object, properties) {
    if (!object || typeof object !== "object") {
      logger23.throwArgumentError("invalid object", "object", object);
    }
    Object.keys(object).forEach((key3) => {
      if (!properties[key3]) {
        logger23.throwArgumentError("invalid object key - " + key3, "transaction:" + key3, object);
      }
    });
  }
  function shallowCopy2(object) {
    const result = {};
    for (const key3 in object) {
      result[key3] = object[key3];
    }
    return result;
  }
  var opaque2 = { bigint: true, boolean: true, "function": true, number: true, string: true };
  function _isFrozen2(object) {
    if (object === void 0 || object === null || opaque2[typeof object]) {
      return true;
    }
    if (Array.isArray(object) || typeof object === "object") {
      if (!Object.isFrozen(object)) {
        return false;
      }
      const keys = Object.keys(object);
      for (let i = 0; i < keys.length; i++) {
        let value = null;
        try {
          value = object[keys[i]];
        } catch (error) {
          continue;
        }
        if (!_isFrozen2(value)) {
          return false;
        }
      }
      return true;
    }
    return logger23.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
  }
  function _deepCopy2(object) {
    if (_isFrozen2(object)) {
      return object;
    }
    if (Array.isArray(object)) {
      return Object.freeze(object.map((item) => deepCopy2(item)));
    }
    if (typeof object === "object") {
      const result = {};
      for (const key3 in object) {
        const value = object[key3];
        if (value === void 0) {
          continue;
        }
        defineReadOnly2(result, key3, deepCopy2(value));
      }
      return result;
    }
    return logger23.throwArgumentError(`Cannot deepCopy ${typeof object}`, "object", object);
  }
  function deepCopy2(object) {
    return _deepCopy2(object);
  }
  var Description2 = class {
    constructor(info) {
      for (const key3 in info) {
        this[key3] = deepCopy2(info[key3]);
      }
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/_version.js
  var version25 = "abi/5.7.0";

  // node_modules/@ethersproject/abi/lib.esm/fragments.js
  var logger24 = new Logger2(version25);
  var _constructorGuard5 = {};
  var ModifiersBytes = { calldata: true, memory: true, storage: true };
  var ModifiersNest = { calldata: true, memory: true };
  function checkModifier(type, name) {
    if (type === "bytes" || type === "string") {
      if (ModifiersBytes[name]) {
        return true;
      }
    } else if (type === "address") {
      if (name === "payable") {
        return true;
      }
    } else if (type.indexOf("[") >= 0 || type === "tuple") {
      if (ModifiersNest[name]) {
        return true;
      }
    }
    if (ModifiersBytes[name] || name === "payable") {
      logger24.throwArgumentError("invalid modifier", "name", name);
    }
    return false;
  }
  function parseParamType(param, allowIndexed) {
    let originalParam = param;
    function throwError(i) {
      logger24.throwArgumentError(`unexpected character at position ${i}`, "param", param);
    }
    param = param.replace(/\s/g, " ");
    function newNode(parent2) {
      let node2 = { type: "", name: "", parent: parent2, state: { allowType: true } };
      if (allowIndexed) {
        node2.indexed = false;
      }
      return node2;
    }
    let parent = { type: "", name: "", state: { allowType: true } };
    let node = parent;
    for (let i = 0; i < param.length; i++) {
      let c = param[i];
      switch (c) {
        case "(":
          if (node.state.allowType && node.type === "") {
            node.type = "tuple";
          } else if (!node.state.allowParams) {
            throwError(i);
          }
          node.state.allowType = false;
          node.type = verifyType(node.type);
          node.components = [newNode(node)];
          node = node.components[0];
          break;
        case ")":
          delete node.state;
          if (node.name === "indexed") {
            if (!allowIndexed) {
              throwError(i);
            }
            node.indexed = true;
            node.name = "";
          }
          if (checkModifier(node.type, node.name)) {
            node.name = "";
          }
          node.type = verifyType(node.type);
          let child = node;
          node = node.parent;
          if (!node) {
            throwError(i);
          }
          delete child.parent;
          node.state.allowParams = false;
          node.state.allowName = true;
          node.state.allowArray = true;
          break;
        case ",":
          delete node.state;
          if (node.name === "indexed") {
            if (!allowIndexed) {
              throwError(i);
            }
            node.indexed = true;
            node.name = "";
          }
          if (checkModifier(node.type, node.name)) {
            node.name = "";
          }
          node.type = verifyType(node.type);
          let sibling = newNode(node.parent);
          node.parent.components.push(sibling);
          delete node.parent;
          node = sibling;
          break;
        case " ":
          if (node.state.allowType) {
            if (node.type !== "") {
              node.type = verifyType(node.type);
              delete node.state.allowType;
              node.state.allowName = true;
              node.state.allowParams = true;
            }
          }
          if (node.state.allowName) {
            if (node.name !== "") {
              if (node.name === "indexed") {
                if (!allowIndexed) {
                  throwError(i);
                }
                if (node.indexed) {
                  throwError(i);
                }
                node.indexed = true;
                node.name = "";
              } else if (checkModifier(node.type, node.name)) {
                node.name = "";
              } else {
                node.state.allowName = false;
              }
            }
          }
          break;
        case "[":
          if (!node.state.allowArray) {
            throwError(i);
          }
          node.type += c;
          node.state.allowArray = false;
          node.state.allowName = false;
          node.state.readArray = true;
          break;
        case "]":
          if (!node.state.readArray) {
            throwError(i);
          }
          node.type += c;
          node.state.readArray = false;
          node.state.allowArray = true;
          node.state.allowName = true;
          break;
        default:
          if (node.state.allowType) {
            node.type += c;
            node.state.allowParams = true;
            node.state.allowArray = true;
          } else if (node.state.allowName) {
            node.name += c;
            delete node.state.allowArray;
          } else if (node.state.readArray) {
            node.type += c;
          } else {
            throwError(i);
          }
      }
    }
    if (node.parent) {
      logger24.throwArgumentError("unexpected eof", "param", param);
    }
    delete parent.state;
    if (node.name === "indexed") {
      if (!allowIndexed) {
        throwError(originalParam.length - 7);
      }
      if (node.indexed) {
        throwError(originalParam.length - 7);
      }
      node.indexed = true;
      node.name = "";
    } else if (checkModifier(node.type, node.name)) {
      node.name = "";
    }
    parent.type = verifyType(parent.type);
    return parent;
  }
  function populate(object, params) {
    for (let key3 in params) {
      defineReadOnly2(object, key3, params[key3]);
    }
  }
  var FormatTypes = Object.freeze({
    // Bare formatting, as is needed for computing a sighash of an event or function
    sighash: "sighash",
    // Human-Readable with Minimal spacing and without names (compact human-readable)
    minimal: "minimal",
    // Human-Readable with nice spacing, including all names
    full: "full",
    // JSON-format a la Solidity
    json: "json"
  });
  var paramTypeArray = new RegExp(/^(.*)\[([0-9]*)\]$/);
  var ParamType = class _ParamType {
    constructor(constructorGuard, params) {
      if (constructorGuard !== _constructorGuard5) {
        logger24.throwError("use fromString", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "new ParamType()"
        });
      }
      populate(this, params);
      let match = this.type.match(paramTypeArray);
      if (match) {
        populate(this, {
          arrayLength: parseInt(match[2] || "-1"),
          arrayChildren: _ParamType.fromObject({
            type: match[1],
            components: this.components
          }),
          baseType: "array"
        });
      } else {
        populate(this, {
          arrayLength: null,
          arrayChildren: null,
          baseType: this.components != null ? "tuple" : this.type
        });
      }
      this._isParamType = true;
      Object.freeze(this);
    }
    // Format the parameter fragment
    //   - sighash: "(uint256,address)"
    //   - minimal: "tuple(uint256,address) indexed"
    //   - full:    "tuple(uint256 foo, address bar) indexed baz"
    format(format) {
      if (!format) {
        format = FormatTypes.sighash;
      }
      if (!FormatTypes[format]) {
        logger24.throwArgumentError("invalid format type", "format", format);
      }
      if (format === FormatTypes.json) {
        let result2 = {
          type: this.baseType === "tuple" ? "tuple" : this.type,
          name: this.name || void 0
        };
        if (typeof this.indexed === "boolean") {
          result2.indexed = this.indexed;
        }
        if (this.components) {
          result2.components = this.components.map((comp) => JSON.parse(comp.format(format)));
        }
        return JSON.stringify(result2);
      }
      let result = "";
      if (this.baseType === "array") {
        result += this.arrayChildren.format(format);
        result += "[" + (this.arrayLength < 0 ? "" : String(this.arrayLength)) + "]";
      } else {
        if (this.baseType === "tuple") {
          if (format !== FormatTypes.sighash) {
            result += this.type;
          }
          result += "(" + this.components.map((comp) => comp.format(format)).join(format === FormatTypes.full ? ", " : ",") + ")";
        } else {
          result += this.type;
        }
      }
      if (format !== FormatTypes.sighash) {
        if (this.indexed === true) {
          result += " indexed";
        }
        if (format === FormatTypes.full && this.name) {
          result += " " + this.name;
        }
      }
      return result;
    }
    static from(value, allowIndexed) {
      if (typeof value === "string") {
        return _ParamType.fromString(value, allowIndexed);
      }
      return _ParamType.fromObject(value);
    }
    static fromObject(value) {
      if (_ParamType.isParamType(value)) {
        return value;
      }
      return new _ParamType(_constructorGuard5, {
        name: value.name || null,
        type: verifyType(value.type),
        indexed: value.indexed == null ? null : !!value.indexed,
        components: value.components ? value.components.map(_ParamType.fromObject) : null
      });
    }
    static fromString(value, allowIndexed) {
      function ParamTypify(node) {
        return _ParamType.fromObject({
          name: node.name,
          type: node.type,
          indexed: node.indexed,
          components: node.components
        });
      }
      return ParamTypify(parseParamType(value, !!allowIndexed));
    }
    static isParamType(value) {
      return !!(value != null && value._isParamType);
    }
  };
  function parseParams(value, allowIndex) {
    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));
  }
  var Fragment = class _Fragment {
    constructor(constructorGuard, params) {
      if (constructorGuard !== _constructorGuard5) {
        logger24.throwError("use a static from method", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "new Fragment()"
        });
      }
      populate(this, params);
      this._isFragment = true;
      Object.freeze(this);
    }
    static from(value) {
      if (_Fragment.isFragment(value)) {
        return value;
      }
      if (typeof value === "string") {
        return _Fragment.fromString(value);
      }
      return _Fragment.fromObject(value);
    }
    static fromObject(value) {
      if (_Fragment.isFragment(value)) {
        return value;
      }
      switch (value.type) {
        case "function":
          return FunctionFragment.fromObject(value);
        case "event":
          return EventFragment.fromObject(value);
        case "constructor":
          return ConstructorFragment.fromObject(value);
        case "error":
          return ErrorFragment.fromObject(value);
        case "fallback":
        case "receive":
          return null;
      }
      return logger24.throwArgumentError("invalid fragment object", "value", value);
    }
    static fromString(value) {
      value = value.replace(/\s/g, " ");
      value = value.replace(/\(/g, " (").replace(/\)/g, ") ").replace(/\s+/g, " ");
      value = value.trim();
      if (value.split(" ")[0] === "event") {
        return EventFragment.fromString(value.substring(5).trim());
      } else if (value.split(" ")[0] === "function") {
        return FunctionFragment.fromString(value.substring(8).trim());
      } else if (value.split("(")[0].trim() === "constructor") {
        return ConstructorFragment.fromString(value.trim());
      } else if (value.split(" ")[0] === "error") {
        return ErrorFragment.fromString(value.substring(5).trim());
      }
      return logger24.throwArgumentError("unsupported fragment", "value", value);
    }
    static isFragment(value) {
      return !!(value && value._isFragment);
    }
  };
  var EventFragment = class _EventFragment extends Fragment {
    format(format) {
      if (!format) {
        format = FormatTypes.sighash;
      }
      if (!FormatTypes[format]) {
        logger24.throwArgumentError("invalid format type", "format", format);
      }
      if (format === FormatTypes.json) {
        return JSON.stringify({
          type: "event",
          anonymous: this.anonymous,
          name: this.name,
          inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
        });
      }
      let result = "";
      if (format !== FormatTypes.sighash) {
        result += "event ";
      }
      result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ";
      if (format !== FormatTypes.sighash) {
        if (this.anonymous) {
          result += "anonymous ";
        }
      }
      return result.trim();
    }
    static from(value) {
      if (typeof value === "string") {
        return _EventFragment.fromString(value);
      }
      return _EventFragment.fromObject(value);
    }
    static fromObject(value) {
      if (_EventFragment.isEventFragment(value)) {
        return value;
      }
      if (value.type !== "event") {
        logger24.throwArgumentError("invalid event object", "value", value);
      }
      const params = {
        name: verifyIdentifier(value.name),
        anonymous: value.anonymous,
        inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
        type: "event"
      };
      return new _EventFragment(_constructorGuard5, params);
    }
    static fromString(value) {
      let match = value.match(regexParen);
      if (!match) {
        logger24.throwArgumentError("invalid event string", "value", value);
      }
      let anonymous = false;
      match[3].split(" ").forEach((modifier) => {
        switch (modifier.trim()) {
          case "anonymous":
            anonymous = true;
            break;
          case "":
            break;
          default:
            logger24.warn("unknown modifier: " + modifier);
        }
      });
      return _EventFragment.fromObject({
        name: match[1].trim(),
        anonymous,
        inputs: parseParams(match[2], true),
        type: "event"
      });
    }
    static isEventFragment(value) {
      return value && value._isFragment && value.type === "event";
    }
  };
  function parseGas(value, params) {
    params.gas = null;
    let comps = value.split("@");
    if (comps.length !== 1) {
      if (comps.length > 2) {
        logger24.throwArgumentError("invalid human-readable ABI signature", "value", value);
      }
      if (!comps[1].match(/^[0-9]+$/)) {
        logger24.throwArgumentError("invalid human-readable ABI signature gas", "value", value);
      }
      params.gas = BigNumber2.from(comps[1]);
      return comps[0];
    }
    return value;
  }
  function parseModifiers(value, params) {
    params.constant = false;
    params.payable = false;
    params.stateMutability = "nonpayable";
    value.split(" ").forEach((modifier) => {
      switch (modifier.trim()) {
        case "constant":
          params.constant = true;
          break;
        case "payable":
          params.payable = true;
          params.stateMutability = "payable";
          break;
        case "nonpayable":
          params.payable = false;
          params.stateMutability = "nonpayable";
          break;
        case "pure":
          params.constant = true;
          params.stateMutability = "pure";
          break;
        case "view":
          params.constant = true;
          params.stateMutability = "view";
          break;
        case "external":
        case "public":
        case "":
          break;
        default:
          console.log("unknown modifier: " + modifier);
      }
    });
  }
  function verifyState(value) {
    let result = {
      constant: false,
      payable: true,
      stateMutability: "payable"
    };
    if (value.stateMutability != null) {
      result.stateMutability = value.stateMutability;
      result.constant = result.stateMutability === "view" || result.stateMutability === "pure";
      if (value.constant != null) {
        if (!!value.constant !== result.constant) {
          logger24.throwArgumentError("cannot have constant function with mutability " + result.stateMutability, "value", value);
        }
      }
      result.payable = result.stateMutability === "payable";
      if (value.payable != null) {
        if (!!value.payable !== result.payable) {
          logger24.throwArgumentError("cannot have payable function with mutability " + result.stateMutability, "value", value);
        }
      }
    } else if (value.payable != null) {
      result.payable = !!value.payable;
      if (value.constant == null && !result.payable && value.type !== "constructor") {
        logger24.throwArgumentError("unable to determine stateMutability", "value", value);
      }
      result.constant = !!value.constant;
      if (result.constant) {
        result.stateMutability = "view";
      } else {
        result.stateMutability = result.payable ? "payable" : "nonpayable";
      }
      if (result.payable && result.constant) {
        logger24.throwArgumentError("cannot have constant payable function", "value", value);
      }
    } else if (value.constant != null) {
      result.constant = !!value.constant;
      result.payable = !result.constant;
      result.stateMutability = result.constant ? "view" : "payable";
    } else if (value.type !== "constructor") {
      logger24.throwArgumentError("unable to determine stateMutability", "value", value);
    }
    return result;
  }
  var ConstructorFragment = class _ConstructorFragment extends Fragment {
    format(format) {
      if (!format) {
        format = FormatTypes.sighash;
      }
      if (!FormatTypes[format]) {
        logger24.throwArgumentError("invalid format type", "format", format);
      }
      if (format === FormatTypes.json) {
        return JSON.stringify({
          type: "constructor",
          stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
          payable: this.payable,
          gas: this.gas ? this.gas.toNumber() : void 0,
          inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
        });
      }
      if (format === FormatTypes.sighash) {
        logger24.throwError("cannot format a constructor for sighash", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "format(sighash)"
        });
      }
      let result = "constructor(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ";
      if (this.stateMutability && this.stateMutability !== "nonpayable") {
        result += this.stateMutability + " ";
      }
      return result.trim();
    }
    static from(value) {
      if (typeof value === "string") {
        return _ConstructorFragment.fromString(value);
      }
      return _ConstructorFragment.fromObject(value);
    }
    static fromObject(value) {
      if (_ConstructorFragment.isConstructorFragment(value)) {
        return value;
      }
      if (value.type !== "constructor") {
        logger24.throwArgumentError("invalid constructor object", "value", value);
      }
      let state = verifyState(value);
      if (state.constant) {
        logger24.throwArgumentError("constructor cannot be constant", "value", value);
      }
      const params = {
        name: null,
        type: value.type,
        inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
        payable: state.payable,
        stateMutability: state.stateMutability,
        gas: value.gas ? BigNumber2.from(value.gas) : null
      };
      return new _ConstructorFragment(_constructorGuard5, params);
    }
    static fromString(value) {
      let params = { type: "constructor" };
      value = parseGas(value, params);
      let parens = value.match(regexParen);
      if (!parens || parens[1].trim() !== "constructor") {
        logger24.throwArgumentError("invalid constructor string", "value", value);
      }
      params.inputs = parseParams(parens[2].trim(), false);
      parseModifiers(parens[3].trim(), params);
      return _ConstructorFragment.fromObject(params);
    }
    static isConstructorFragment(value) {
      return value && value._isFragment && value.type === "constructor";
    }
  };
  var FunctionFragment = class _FunctionFragment extends ConstructorFragment {
    format(format) {
      if (!format) {
        format = FormatTypes.sighash;
      }
      if (!FormatTypes[format]) {
        logger24.throwArgumentError("invalid format type", "format", format);
      }
      if (format === FormatTypes.json) {
        return JSON.stringify({
          type: "function",
          name: this.name,
          constant: this.constant,
          stateMutability: this.stateMutability !== "nonpayable" ? this.stateMutability : void 0,
          payable: this.payable,
          gas: this.gas ? this.gas.toNumber() : void 0,
          inputs: this.inputs.map((input) => JSON.parse(input.format(format))),
          outputs: this.outputs.map((output) => JSON.parse(output.format(format)))
        });
      }
      let result = "";
      if (format !== FormatTypes.sighash) {
        result += "function ";
      }
      result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ";
      if (format !== FormatTypes.sighash) {
        if (this.stateMutability) {
          if (this.stateMutability !== "nonpayable") {
            result += this.stateMutability + " ";
          }
        } else if (this.constant) {
          result += "view ";
        }
        if (this.outputs && this.outputs.length) {
          result += "returns (" + this.outputs.map((output) => output.format(format)).join(", ") + ") ";
        }
        if (this.gas != null) {
          result += "@" + this.gas.toString() + " ";
        }
      }
      return result.trim();
    }
    static from(value) {
      if (typeof value === "string") {
        return _FunctionFragment.fromString(value);
      }
      return _FunctionFragment.fromObject(value);
    }
    static fromObject(value) {
      if (_FunctionFragment.isFunctionFragment(value)) {
        return value;
      }
      if (value.type !== "function") {
        logger24.throwArgumentError("invalid function object", "value", value);
      }
      let state = verifyState(value);
      const params = {
        type: value.type,
        name: verifyIdentifier(value.name),
        constant: state.constant,
        inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : [],
        outputs: value.outputs ? value.outputs.map(ParamType.fromObject) : [],
        payable: state.payable,
        stateMutability: state.stateMutability,
        gas: value.gas ? BigNumber2.from(value.gas) : null
      };
      return new _FunctionFragment(_constructorGuard5, params);
    }
    static fromString(value) {
      let params = { type: "function" };
      value = parseGas(value, params);
      let comps = value.split(" returns ");
      if (comps.length > 2) {
        logger24.throwArgumentError("invalid function string", "value", value);
      }
      let parens = comps[0].match(regexParen);
      if (!parens) {
        logger24.throwArgumentError("invalid function signature", "value", value);
      }
      params.name = parens[1].trim();
      if (params.name) {
        verifyIdentifier(params.name);
      }
      params.inputs = parseParams(parens[2], false);
      parseModifiers(parens[3].trim(), params);
      if (comps.length > 1) {
        let returns = comps[1].match(regexParen);
        if (returns[1].trim() != "" || returns[3].trim() != "") {
          logger24.throwArgumentError("unexpected tokens", "value", value);
        }
        params.outputs = parseParams(returns[2], false);
      } else {
        params.outputs = [];
      }
      return _FunctionFragment.fromObject(params);
    }
    static isFunctionFragment(value) {
      return value && value._isFragment && value.type === "function";
    }
  };
  function checkForbidden(fragment) {
    const sig = fragment.format();
    if (sig === "Error(string)" || sig === "Panic(uint256)") {
      logger24.throwArgumentError(`cannot specify user defined ${sig} error`, "fragment", fragment);
    }
    return fragment;
  }
  var ErrorFragment = class _ErrorFragment extends Fragment {
    format(format) {
      if (!format) {
        format = FormatTypes.sighash;
      }
      if (!FormatTypes[format]) {
        logger24.throwArgumentError("invalid format type", "format", format);
      }
      if (format === FormatTypes.json) {
        return JSON.stringify({
          type: "error",
          name: this.name,
          inputs: this.inputs.map((input) => JSON.parse(input.format(format)))
        });
      }
      let result = "";
      if (format !== FormatTypes.sighash) {
        result += "error ";
      }
      result += this.name + "(" + this.inputs.map((input) => input.format(format)).join(format === FormatTypes.full ? ", " : ",") + ") ";
      return result.trim();
    }
    static from(value) {
      if (typeof value === "string") {
        return _ErrorFragment.fromString(value);
      }
      return _ErrorFragment.fromObject(value);
    }
    static fromObject(value) {
      if (_ErrorFragment.isErrorFragment(value)) {
        return value;
      }
      if (value.type !== "error") {
        logger24.throwArgumentError("invalid error object", "value", value);
      }
      const params = {
        type: value.type,
        name: verifyIdentifier(value.name),
        inputs: value.inputs ? value.inputs.map(ParamType.fromObject) : []
      };
      return checkForbidden(new _ErrorFragment(_constructorGuard5, params));
    }
    static fromString(value) {
      let params = { type: "error" };
      let parens = value.match(regexParen);
      if (!parens) {
        logger24.throwArgumentError("invalid error signature", "value", value);
      }
      params.name = parens[1].trim();
      if (params.name) {
        verifyIdentifier(params.name);
      }
      params.inputs = parseParams(parens[2], false);
      return checkForbidden(_ErrorFragment.fromObject(params));
    }
    static isErrorFragment(value) {
      return value && value._isFragment && value.type === "error";
    }
  };
  function verifyType(type) {
    if (type.match(/^uint($|[^1-9])/)) {
      type = "uint256" + type.substring(4);
    } else if (type.match(/^int($|[^1-9])/)) {
      type = "int256" + type.substring(3);
    }
    return type;
  }
  var regexIdentifier = new RegExp("^[a-zA-Z$_][a-zA-Z0-9$_]*$");
  function verifyIdentifier(value) {
    if (!value || !value.match(regexIdentifier)) {
      logger24.throwArgumentError(`invalid identifier "${value}"`, "value", value);
    }
    return value;
  }
  var regexParen = new RegExp("^([^)(]*)\\((.*)\\)([^)(]*)$");
  function splitNesting(value) {
    value = value.trim();
    let result = [];
    let accum = "";
    let depth = 0;
    for (let offset = 0; offset < value.length; offset++) {
      let c = value[offset];
      if (c === "," && depth === 0) {
        result.push(accum);
        accum = "";
      } else {
        accum += c;
        if (c === "(") {
          depth++;
        } else if (c === ")") {
          depth--;
          if (depth === -1) {
            logger24.throwArgumentError("unbalanced parenthesis", "value", value);
          }
        }
      }
    }
    if (accum) {
      result.push(accum);
    }
    return result;
  }

  // node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js
  var logger25 = new Logger2(version25);
  function checkResultErrors(result) {
    const errors = [];
    const checkErrors = function(path, object) {
      if (!Array.isArray(object)) {
        return;
      }
      for (let key3 in object) {
        const childPath = path.slice();
        childPath.push(key3);
        try {
          checkErrors(childPath, object[key3]);
        } catch (error) {
          errors.push({ path: childPath, error });
        }
      }
    };
    checkErrors([], result);
    return errors;
  }
  var Coder = class {
    constructor(name, type, localName, dynamic) {
      this.name = name;
      this.type = type;
      this.localName = localName;
      this.dynamic = dynamic;
    }
    _throwError(message, value) {
      logger25.throwArgumentError(message, this.localName, value);
    }
  };
  var Writer = class {
    constructor(wordSize) {
      defineReadOnly2(this, "wordSize", wordSize || 32);
      this._data = [];
      this._dataLength = 0;
      this._padding = new Uint8Array(wordSize);
    }
    get data() {
      return hexConcat2(this._data);
    }
    get length() {
      return this._dataLength;
    }
    _writeData(data) {
      this._data.push(data);
      this._dataLength += data.length;
      return data.length;
    }
    appendWriter(writer) {
      return this._writeData(concat2(writer._data));
    }
    // Arrayish items; padded on the right to wordSize
    writeBytes(value) {
      let bytes = arrayify2(value);
      const paddingOffset = bytes.length % this.wordSize;
      if (paddingOffset) {
        bytes = concat2([bytes, this._padding.slice(paddingOffset)]);
      }
      return this._writeData(bytes);
    }
    _getValue(value) {
      let bytes = arrayify2(BigNumber2.from(value));
      if (bytes.length > this.wordSize) {
        logger25.throwError("value out-of-bounds", Logger2.errors.BUFFER_OVERRUN, {
          length: this.wordSize,
          offset: bytes.length
        });
      }
      if (bytes.length % this.wordSize) {
        bytes = concat2([this._padding.slice(bytes.length % this.wordSize), bytes]);
      }
      return bytes;
    }
    // BigNumberish items; padded on the left to wordSize
    writeValue(value) {
      return this._writeData(this._getValue(value));
    }
    writeUpdatableValue() {
      const offset = this._data.length;
      this._data.push(this._padding);
      this._dataLength += this.wordSize;
      return (value) => {
        this._data[offset] = this._getValue(value);
      };
    }
  };
  var Reader = class _Reader {
    constructor(data, wordSize, coerceFunc, allowLoose) {
      defineReadOnly2(this, "_data", arrayify2(data));
      defineReadOnly2(this, "wordSize", wordSize || 32);
      defineReadOnly2(this, "_coerceFunc", coerceFunc);
      defineReadOnly2(this, "allowLoose", allowLoose);
      this._offset = 0;
    }
    get data() {
      return hexlify2(this._data);
    }
    get consumed() {
      return this._offset;
    }
    // The default Coerce function
    static coerce(name, value) {
      let match = name.match("^u?int([0-9]+)$");
      if (match && parseInt(match[1]) <= 48) {
        value = value.toNumber();
      }
      return value;
    }
    coerce(name, value) {
      if (this._coerceFunc) {
        return this._coerceFunc(name, value);
      }
      return _Reader.coerce(name, value);
    }
    _peekBytes(offset, length, loose) {
      let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;
      if (this._offset + alignedLength > this._data.length) {
        if (this.allowLoose && loose && this._offset + length <= this._data.length) {
          alignedLength = length;
        } else {
          logger25.throwError("data out-of-bounds", Logger2.errors.BUFFER_OVERRUN, {
            length: this._data.length,
            offset: this._offset + alignedLength
          });
        }
      }
      return this._data.slice(this._offset, this._offset + alignedLength);
    }
    subReader(offset) {
      return new _Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);
    }
    readBytes(length, loose) {
      let bytes = this._peekBytes(0, length, !!loose);
      this._offset += bytes.length;
      return bytes.slice(0, length);
    }
    readValue() {
      return BigNumber2.from(this.readBytes(this.wordSize));
    }
  };

  // node_modules/@ethersproject/keccak256/lib.esm/index.js
  var import_js_sha32 = __toESM(require_sha32());
  function keccak2562(data) {
    return "0x" + import_js_sha32.default.keccak_256(arrayify2(data));
  }

  // node_modules/@ethersproject/rlp/lib.esm/index.js
  var lib_exports = {};
  __export(lib_exports, {
    decode: () => decode3,
    encode: () => encode6
  });

  // node_modules/@ethersproject/rlp/lib.esm/_version.js
  var version26 = "rlp/5.7.0";

  // node_modules/@ethersproject/rlp/lib.esm/index.js
  var logger26 = new Logger2(version26);
  function arrayifyInteger2(value) {
    const result = [];
    while (value) {
      result.unshift(value & 255);
      value >>= 8;
    }
    return result;
  }
  function unarrayifyInteger2(data, offset, length) {
    let result = 0;
    for (let i = 0; i < length; i++) {
      result = result * 256 + data[offset + i];
    }
    return result;
  }
  function _encode3(object) {
    if (Array.isArray(object)) {
      let payload = [];
      object.forEach(function(child) {
        payload = payload.concat(_encode3(child));
      });
      if (payload.length <= 55) {
        payload.unshift(192 + payload.length);
        return payload;
      }
      const length2 = arrayifyInteger2(payload.length);
      length2.unshift(247 + length2.length);
      return length2.concat(payload);
    }
    if (!isBytesLike2(object)) {
      logger26.throwArgumentError("RLP object must be BytesLike", "object", object);
    }
    const data = Array.prototype.slice.call(arrayify2(object));
    if (data.length === 1 && data[0] <= 127) {
      return data;
    } else if (data.length <= 55) {
      data.unshift(128 + data.length);
      return data;
    }
    const length = arrayifyInteger2(data.length);
    length.unshift(183 + length.length);
    return length.concat(data);
  }
  function encode6(object) {
    return hexlify2(_encode3(object));
  }
  function _decodeChildren2(data, offset, childOffset, length) {
    const result = [];
    while (childOffset < offset + 1 + length) {
      const decoded = _decode2(data, childOffset);
      result.push(decoded.result);
      childOffset += decoded.consumed;
      if (childOffset > offset + 1 + length) {
        logger26.throwError("child data too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
    }
    return { consumed: 1 + length, result };
  }
  function _decode2(data, offset) {
    if (data.length === 0) {
      logger26.throwError("data too short", Logger2.errors.BUFFER_OVERRUN, {});
    }
    if (data[offset] >= 248) {
      const lengthLength = data[offset] - 247;
      if (offset + 1 + lengthLength > data.length) {
        logger26.throwError("data short segment too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      const length = unarrayifyInteger2(data, offset + 1, lengthLength);
      if (offset + 1 + lengthLength + length > data.length) {
        logger26.throwError("data long segment too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      return _decodeChildren2(data, offset, offset + 1 + lengthLength, lengthLength + length);
    } else if (data[offset] >= 192) {
      const length = data[offset] - 192;
      if (offset + 1 + length > data.length) {
        logger26.throwError("data array too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      return _decodeChildren2(data, offset, offset + 1, length);
    } else if (data[offset] >= 184) {
      const lengthLength = data[offset] - 183;
      if (offset + 1 + lengthLength > data.length) {
        logger26.throwError("data array too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      const length = unarrayifyInteger2(data, offset + 1, lengthLength);
      if (offset + 1 + lengthLength + length > data.length) {
        logger26.throwError("data array too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      const result = hexlify2(data.slice(offset + 1 + lengthLength, offset + 1 + lengthLength + length));
      return { consumed: 1 + lengthLength + length, result };
    } else if (data[offset] >= 128) {
      const length = data[offset] - 128;
      if (offset + 1 + length > data.length) {
        logger26.throwError("data too short", Logger2.errors.BUFFER_OVERRUN, {});
      }
      const result = hexlify2(data.slice(offset + 1, offset + 1 + length));
      return { consumed: 1 + length, result };
    }
    return { consumed: 1, result: hexlify2(data[offset]) };
  }
  function decode3(data) {
    const bytes = arrayify2(data);
    const decoded = _decode2(bytes, 0);
    if (decoded.consumed !== bytes.length) {
      logger26.throwArgumentError("invalid rlp data", "data", data);
    }
    return decoded.result;
  }

  // node_modules/@ethersproject/address/lib.esm/_version.js
  var version27 = "address/5.7.0";

  // node_modules/@ethersproject/address/lib.esm/index.js
  var logger27 = new Logger2(version27);
  function getChecksumAddress2(address) {
    if (!isHexString2(address, 20)) {
      logger27.throwArgumentError("invalid address", "address", address);
    }
    address = address.toLowerCase();
    const chars = address.substring(2).split("");
    const expanded = new Uint8Array(40);
    for (let i = 0; i < 40; i++) {
      expanded[i] = chars[i].charCodeAt(0);
    }
    const hashed = arrayify2(keccak2562(expanded));
    for (let i = 0; i < 40; i += 2) {
      if (hashed[i >> 1] >> 4 >= 8) {
        chars[i] = chars[i].toUpperCase();
      }
      if ((hashed[i >> 1] & 15) >= 8) {
        chars[i + 1] = chars[i + 1].toUpperCase();
      }
    }
    return "0x" + chars.join("");
  }
  var MAX_SAFE_INTEGER2 = 9007199254740991;
  function log102(x) {
    if (Math.log10) {
      return Math.log10(x);
    }
    return Math.log(x) / Math.LN10;
  }
  var ibanLookup2 = {};
  for (let i = 0; i < 10; i++) {
    ibanLookup2[String(i)] = String(i);
  }
  for (let i = 0; i < 26; i++) {
    ibanLookup2[String.fromCharCode(65 + i)] = String(10 + i);
  }
  var safeDigits2 = Math.floor(log102(MAX_SAFE_INTEGER2));
  function ibanChecksum2(address) {
    address = address.toUpperCase();
    address = address.substring(4) + address.substring(0, 2) + "00";
    let expanded = address.split("").map((c) => {
      return ibanLookup2[c];
    }).join("");
    while (expanded.length >= safeDigits2) {
      let block = expanded.substring(0, safeDigits2);
      expanded = parseInt(block, 10) % 97 + expanded.substring(block.length);
    }
    let checksum = String(98 - parseInt(expanded, 10) % 97);
    while (checksum.length < 2) {
      checksum = "0" + checksum;
    }
    return checksum;
  }
  function getAddress2(address) {
    let result = null;
    if (typeof address !== "string") {
      logger27.throwArgumentError("invalid address", "address", address);
    }
    if (address.match(/^(0x)?[0-9a-fA-F]{40}$/)) {
      if (address.substring(0, 2) !== "0x") {
        address = "0x" + address;
      }
      result = getChecksumAddress2(address);
      if (address.match(/([A-F].*[a-f])|([a-f].*[A-F])/) && result !== address) {
        logger27.throwArgumentError("bad address checksum", "address", address);
      }
    } else if (address.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
      if (address.substring(2, 4) !== ibanChecksum2(address)) {
        logger27.throwArgumentError("bad icap checksum", "address", address);
      }
      result = _base36To162(address.substring(4));
      while (result.length < 40) {
        result = "0" + result;
      }
      result = getChecksumAddress2("0x" + result);
    } else {
      logger27.throwArgumentError("invalid address", "address", address);
    }
    return result;
  }
  function isAddress(address) {
    try {
      getAddress2(address);
      return true;
    } catch (error) {
    }
    return false;
  }
  function getIcapAddress(address) {
    let base36 = _base16To36(getAddress2(address).substring(2)).toUpperCase();
    while (base36.length < 30) {
      base36 = "0" + base36;
    }
    return "XE" + ibanChecksum2("XE00" + base36) + base36;
  }
  function getContractAddress2(transaction) {
    let from = null;
    try {
      from = getAddress2(transaction.from);
    } catch (error) {
      logger27.throwArgumentError("missing from address", "transaction", transaction);
    }
    const nonce = stripZeros2(arrayify2(BigNumber2.from(transaction.nonce).toHexString()));
    return getAddress2(hexDataSlice2(keccak2562(encode6([from, nonce])), 12));
  }
  function getCreate2Address(from, salt, initCodeHash) {
    if (hexDataLength2(salt) !== 32) {
      logger27.throwArgumentError("salt must be 32 bytes", "salt", salt);
    }
    if (hexDataLength2(initCodeHash) !== 32) {
      logger27.throwArgumentError("initCodeHash must be 32 bytes", "initCodeHash", initCodeHash);
    }
    return getAddress2(hexDataSlice2(keccak2562(concat2(["0xff", getAddress2(from), salt, initCodeHash])), 12));
  }

  // node_modules/@ethersproject/abi/lib.esm/coders/address.js
  var AddressCoder = class extends Coder {
    constructor(localName) {
      super("address", "address", localName, false);
    }
    defaultValue() {
      return "0x0000000000000000000000000000000000000000";
    }
    encode(writer, value) {
      try {
        value = getAddress2(value);
      } catch (error) {
        this._throwError(error.message, value);
      }
      return writer.writeValue(value);
    }
    decode(reader) {
      return getAddress2(hexZeroPad2(reader.readValue().toHexString(), 20));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js
  var AnonymousCoder = class extends Coder {
    constructor(coder) {
      super(coder.name, coder.type, void 0, coder.dynamic);
      this.coder = coder;
    }
    defaultValue() {
      return this.coder.defaultValue();
    }
    encode(writer, value) {
      return this.coder.encode(writer, value);
    }
    decode(reader) {
      return this.coder.decode(reader);
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/array.js
  var logger28 = new Logger2(version25);
  function pack(writer, coders, values) {
    let arrayValues = null;
    if (Array.isArray(values)) {
      arrayValues = values;
    } else if (values && typeof values === "object") {
      let unique = {};
      arrayValues = coders.map((coder) => {
        const name = coder.localName;
        if (!name) {
          logger28.throwError("cannot encode object for signature with missing names", Logger2.errors.INVALID_ARGUMENT, {
            argument: "values",
            coder,
            value: values
          });
        }
        if (unique[name]) {
          logger28.throwError("cannot encode object for signature with duplicate names", Logger2.errors.INVALID_ARGUMENT, {
            argument: "values",
            coder,
            value: values
          });
        }
        unique[name] = true;
        return values[name];
      });
    } else {
      logger28.throwArgumentError("invalid tuple value", "tuple", values);
    }
    if (coders.length !== arrayValues.length) {
      logger28.throwArgumentError("types/value length mismatch", "tuple", values);
    }
    let staticWriter = new Writer(writer.wordSize);
    let dynamicWriter = new Writer(writer.wordSize);
    let updateFuncs = [];
    coders.forEach((coder, index2) => {
      let value = arrayValues[index2];
      if (coder.dynamic) {
        let dynamicOffset = dynamicWriter.length;
        coder.encode(dynamicWriter, value);
        let updateFunc = staticWriter.writeUpdatableValue();
        updateFuncs.push((baseOffset) => {
          updateFunc(baseOffset + dynamicOffset);
        });
      } else {
        coder.encode(staticWriter, value);
      }
    });
    updateFuncs.forEach((func) => {
      func(staticWriter.length);
    });
    let length = writer.appendWriter(staticWriter);
    length += writer.appendWriter(dynamicWriter);
    return length;
  }
  function unpack(reader, coders) {
    let values = [];
    let baseReader = reader.subReader(0);
    coders.forEach((coder) => {
      let value = null;
      if (coder.dynamic) {
        let offset = reader.readValue();
        let offsetReader = baseReader.subReader(offset.toNumber());
        try {
          value = coder.decode(offsetReader);
        } catch (error) {
          if (error.code === Logger2.errors.BUFFER_OVERRUN) {
            throw error;
          }
          value = error;
          value.baseType = coder.name;
          value.name = coder.localName;
          value.type = coder.type;
        }
      } else {
        try {
          value = coder.decode(reader);
        } catch (error) {
          if (error.code === Logger2.errors.BUFFER_OVERRUN) {
            throw error;
          }
          value = error;
          value.baseType = coder.name;
          value.name = coder.localName;
          value.type = coder.type;
        }
      }
      if (value != void 0) {
        values.push(value);
      }
    });
    const uniqueNames = coders.reduce((accum, coder) => {
      const name = coder.localName;
      if (name) {
        if (!accum[name]) {
          accum[name] = 0;
        }
        accum[name]++;
      }
      return accum;
    }, {});
    coders.forEach((coder, index2) => {
      let name = coder.localName;
      if (!name || uniqueNames[name] !== 1) {
        return;
      }
      if (name === "length") {
        name = "_length";
      }
      if (values[name] != null) {
        return;
      }
      const value = values[index2];
      if (value instanceof Error) {
        Object.defineProperty(values, name, {
          enumerable: true,
          get: () => {
            throw value;
          }
        });
      } else {
        values[name] = value;
      }
    });
    for (let i = 0; i < values.length; i++) {
      const value = values[i];
      if (value instanceof Error) {
        Object.defineProperty(values, i, {
          enumerable: true,
          get: () => {
            throw value;
          }
        });
      }
    }
    return Object.freeze(values);
  }
  var ArrayCoder = class extends Coder {
    constructor(coder, length, localName) {
      const type = coder.type + "[" + (length >= 0 ? length : "") + "]";
      const dynamic = length === -1 || coder.dynamic;
      super("array", type, localName, dynamic);
      this.coder = coder;
      this.length = length;
    }
    defaultValue() {
      const defaultChild = this.coder.defaultValue();
      const result = [];
      for (let i = 0; i < this.length; i++) {
        result.push(defaultChild);
      }
      return result;
    }
    encode(writer, value) {
      if (!Array.isArray(value)) {
        this._throwError("expected array value", value);
      }
      let count = this.length;
      if (count === -1) {
        count = value.length;
        writer.writeValue(value.length);
      }
      logger28.checkArgumentCount(value.length, count, "coder array" + (this.localName ? " " + this.localName : ""));
      let coders = [];
      for (let i = 0; i < value.length; i++) {
        coders.push(this.coder);
      }
      return pack(writer, coders, value);
    }
    decode(reader) {
      let count = this.length;
      if (count === -1) {
        count = reader.readValue().toNumber();
        if (count * 32 > reader._data.length) {
          logger28.throwError("insufficient data length", Logger2.errors.BUFFER_OVERRUN, {
            length: reader._data.length,
            count
          });
        }
      }
      let coders = [];
      for (let i = 0; i < count; i++) {
        coders.push(new AnonymousCoder(this.coder));
      }
      return reader.coerce(this.name, unpack(reader, coders));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/boolean.js
  var BooleanCoder = class extends Coder {
    constructor(localName) {
      super("bool", "bool", localName, false);
    }
    defaultValue() {
      return false;
    }
    encode(writer, value) {
      return writer.writeValue(value ? 1 : 0);
    }
    decode(reader) {
      return reader.coerce(this.type, !reader.readValue().isZero());
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/bytes.js
  var DynamicBytesCoder = class extends Coder {
    constructor(type, localName) {
      super(type, type, localName, true);
    }
    defaultValue() {
      return "0x";
    }
    encode(writer, value) {
      value = arrayify2(value);
      let length = writer.writeValue(value.length);
      length += writer.writeBytes(value);
      return length;
    }
    decode(reader) {
      return reader.readBytes(reader.readValue().toNumber(), true);
    }
  };
  var BytesCoder = class extends DynamicBytesCoder {
    constructor(localName) {
      super("bytes", localName);
    }
    decode(reader) {
      return reader.coerce(this.name, hexlify2(super.decode(reader)));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js
  var FixedBytesCoder = class extends Coder {
    constructor(size, localName) {
      let name = "bytes" + String(size);
      super(name, name, localName, false);
      this.size = size;
    }
    defaultValue() {
      return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(0, 2 + this.size * 2);
    }
    encode(writer, value) {
      let data = arrayify2(value);
      if (data.length !== this.size) {
        this._throwError("incorrect data length", value);
      }
      return writer.writeBytes(data);
    }
    decode(reader) {
      return reader.coerce(this.name, hexlify2(reader.readBytes(this.size)));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/null.js
  var NullCoder = class extends Coder {
    constructor(localName) {
      super("null", "", localName, false);
    }
    defaultValue() {
      return null;
    }
    encode(writer, value) {
      if (value != null) {
        this._throwError("not null", value);
      }
      return writer.writeBytes([]);
    }
    decode(reader) {
      reader.readBytes(0);
      return reader.coerce(this.name, null);
    }
  };

  // node_modules/@ethersproject/constants/lib.esm/index.js
  var lib_exports2 = {};
  __export(lib_exports2, {
    AddressZero: () => AddressZero2,
    EtherSymbol: () => EtherSymbol,
    HashZero: () => HashZero2,
    MaxInt256: () => MaxInt256,
    MaxUint256: () => MaxUint256,
    MinInt256: () => MinInt256,
    NegativeOne: () => NegativeOne3,
    One: () => One,
    Two: () => Two,
    WeiPerEther: () => WeiPerEther,
    Zero: () => Zero4
  });

  // node_modules/@ethersproject/constants/lib.esm/addresses.js
  var AddressZero2 = "0x0000000000000000000000000000000000000000";

  // node_modules/@ethersproject/constants/lib.esm/bignumbers.js
  var NegativeOne3 = /* @__PURE__ */ BigNumber2.from(-1);
  var Zero4 = /* @__PURE__ */ BigNumber2.from(0);
  var One = /* @__PURE__ */ BigNumber2.from(1);
  var Two = /* @__PURE__ */ BigNumber2.from(2);
  var WeiPerEther = /* @__PURE__ */ BigNumber2.from("1000000000000000000");
  var MaxUint256 = /* @__PURE__ */ BigNumber2.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
  var MinInt256 = /* @__PURE__ */ BigNumber2.from("-0x8000000000000000000000000000000000000000000000000000000000000000");
  var MaxInt256 = /* @__PURE__ */ BigNumber2.from("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");

  // node_modules/@ethersproject/constants/lib.esm/hashes.js
  var HashZero2 = "0x0000000000000000000000000000000000000000000000000000000000000000";

  // node_modules/@ethersproject/constants/lib.esm/strings.js
  var EtherSymbol = "\u039E";

  // node_modules/@ethersproject/abi/lib.esm/coders/number.js
  var NumberCoder = class extends Coder {
    constructor(size, signed3, localName) {
      const name = (signed3 ? "int" : "uint") + size * 8;
      super(name, name, localName, false);
      this.size = size;
      this.signed = signed3;
    }
    defaultValue() {
      return 0;
    }
    encode(writer, value) {
      let v = BigNumber2.from(value);
      let maxUintValue = MaxUint256.mask(writer.wordSize * 8);
      if (this.signed) {
        let bounds = maxUintValue.mask(this.size * 8 - 1);
        if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne3))) {
          this._throwError("value out-of-bounds", value);
        }
      } else if (v.lt(Zero4) || v.gt(maxUintValue.mask(this.size * 8))) {
        this._throwError("value out-of-bounds", value);
      }
      v = v.toTwos(this.size * 8).mask(this.size * 8);
      if (this.signed) {
        v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);
      }
      return writer.writeValue(v);
    }
    decode(reader) {
      let value = reader.readValue().mask(this.size * 8);
      if (this.signed) {
        value = value.fromTwos(this.size * 8);
      }
      return reader.coerce(this.name, value);
    }
  };

  // node_modules/@ethersproject/strings/lib.esm/_version.js
  var version28 = "strings/5.7.0";

  // node_modules/@ethersproject/strings/lib.esm/utf8.js
  var logger29 = new Logger2(version28);
  var UnicodeNormalizationForm2;
  (function(UnicodeNormalizationForm3) {
    UnicodeNormalizationForm3["current"] = "";
    UnicodeNormalizationForm3["NFC"] = "NFC";
    UnicodeNormalizationForm3["NFD"] = "NFD";
    UnicodeNormalizationForm3["NFKC"] = "NFKC";
    UnicodeNormalizationForm3["NFKD"] = "NFKD";
  })(UnicodeNormalizationForm2 || (UnicodeNormalizationForm2 = {}));
  var Utf8ErrorReason2;
  (function(Utf8ErrorReason3) {
    Utf8ErrorReason3["UNEXPECTED_CONTINUE"] = "unexpected continuation byte";
    Utf8ErrorReason3["BAD_PREFIX"] = "bad codepoint prefix";
    Utf8ErrorReason3["OVERRUN"] = "string overrun";
    Utf8ErrorReason3["MISSING_CONTINUE"] = "missing continuation byte";
    Utf8ErrorReason3["OUT_OF_RANGE"] = "out of UTF-8 range";
    Utf8ErrorReason3["UTF16_SURROGATE"] = "UTF-16 surrogate";
    Utf8ErrorReason3["OVERLONG"] = "overlong representation";
  })(Utf8ErrorReason2 || (Utf8ErrorReason2 = {}));
  function errorFunc2(reason, offset, bytes, output, badCodepoint) {
    return logger29.throwArgumentError(`invalid codepoint at offset ${offset}; ${reason}`, "bytes", bytes);
  }
  function ignoreFunc2(reason, offset, bytes, output, badCodepoint) {
    if (reason === Utf8ErrorReason2.BAD_PREFIX || reason === Utf8ErrorReason2.UNEXPECTED_CONTINUE) {
      let i = 0;
      for (let o = offset + 1; o < bytes.length; o++) {
        if (bytes[o] >> 6 !== 2) {
          break;
        }
        i++;
      }
      return i;
    }
    if (reason === Utf8ErrorReason2.OVERRUN) {
      return bytes.length - offset - 1;
    }
    return 0;
  }
  function replaceFunc2(reason, offset, bytes, output, badCodepoint) {
    if (reason === Utf8ErrorReason2.OVERLONG) {
      output.push(badCodepoint);
      return 0;
    }
    output.push(65533);
    return ignoreFunc2(reason, offset, bytes, output, badCodepoint);
  }
  var Utf8ErrorFuncs2 = Object.freeze({
    error: errorFunc2,
    ignore: ignoreFunc2,
    replace: replaceFunc2
  });
  function getUtf8CodePoints2(bytes, onError) {
    if (onError == null) {
      onError = Utf8ErrorFuncs2.error;
    }
    bytes = arrayify2(bytes);
    const result = [];
    let i = 0;
    while (i < bytes.length) {
      const c = bytes[i++];
      if (c >> 7 === 0) {
        result.push(c);
        continue;
      }
      let extraLength = null;
      let overlongMask = null;
      if ((c & 224) === 192) {
        extraLength = 1;
        overlongMask = 127;
      } else if ((c & 240) === 224) {
        extraLength = 2;
        overlongMask = 2047;
      } else if ((c & 248) === 240) {
        extraLength = 3;
        overlongMask = 65535;
      } else {
        if ((c & 192) === 128) {
          i += onError(Utf8ErrorReason2.UNEXPECTED_CONTINUE, i - 1, bytes, result);
        } else {
          i += onError(Utf8ErrorReason2.BAD_PREFIX, i - 1, bytes, result);
        }
        continue;
      }
      if (i - 1 + extraLength >= bytes.length) {
        i += onError(Utf8ErrorReason2.OVERRUN, i - 1, bytes, result);
        continue;
      }
      let res = c & (1 << 8 - extraLength - 1) - 1;
      for (let j = 0; j < extraLength; j++) {
        let nextChar = bytes[i];
        if ((nextChar & 192) != 128) {
          i += onError(Utf8ErrorReason2.MISSING_CONTINUE, i, bytes, result);
          res = null;
          break;
        }
        ;
        res = res << 6 | nextChar & 63;
        i++;
      }
      if (res === null) {
        continue;
      }
      if (res > 1114111) {
        i += onError(Utf8ErrorReason2.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      if (res >= 55296 && res <= 57343) {
        i += onError(Utf8ErrorReason2.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      if (res <= overlongMask) {
        i += onError(Utf8ErrorReason2.OVERLONG, i - 1 - extraLength, bytes, result, res);
        continue;
      }
      result.push(res);
    }
    return result;
  }
  function toUtf8Bytes2(str, form = UnicodeNormalizationForm2.current) {
    if (form != UnicodeNormalizationForm2.current) {
      logger29.checkNormalize();
      str = str.normalize(form);
    }
    let result = [];
    for (let i = 0; i < str.length; i++) {
      const c = str.charCodeAt(i);
      if (c < 128) {
        result.push(c);
      } else if (c < 2048) {
        result.push(c >> 6 | 192);
        result.push(c & 63 | 128);
      } else if ((c & 64512) == 55296) {
        i++;
        const c2 = str.charCodeAt(i);
        if (i >= str.length || (c2 & 64512) !== 56320) {
          throw new Error("invalid utf-8 string");
        }
        const pair = 65536 + ((c & 1023) << 10) + (c2 & 1023);
        result.push(pair >> 18 | 240);
        result.push(pair >> 12 & 63 | 128);
        result.push(pair >> 6 & 63 | 128);
        result.push(pair & 63 | 128);
      } else {
        result.push(c >> 12 | 224);
        result.push(c >> 6 & 63 | 128);
        result.push(c & 63 | 128);
      }
    }
    return arrayify2(result);
  }
  function escapeChar(value) {
    const hex = "0000" + value.toString(16);
    return "\\u" + hex.substring(hex.length - 4);
  }
  function _toEscapedUtf8String(bytes, onError) {
    return '"' + getUtf8CodePoints2(bytes, onError).map((codePoint) => {
      if (codePoint < 256) {
        switch (codePoint) {
          case 8:
            return "\\b";
          case 9:
            return "\\t";
          case 10:
            return "\\n";
          case 13:
            return "\\r";
          case 34:
            return '\\"';
          case 92:
            return "\\\\";
        }
        if (codePoint >= 32 && codePoint < 127) {
          return String.fromCharCode(codePoint);
        }
      }
      if (codePoint <= 65535) {
        return escapeChar(codePoint);
      }
      codePoint -= 65536;
      return escapeChar((codePoint >> 10 & 1023) + 55296) + escapeChar((codePoint & 1023) + 56320);
    }).join("") + '"';
  }
  function _toUtf8String2(codePoints) {
    return codePoints.map((codePoint) => {
      if (codePoint <= 65535) {
        return String.fromCharCode(codePoint);
      }
      codePoint -= 65536;
      return String.fromCharCode((codePoint >> 10 & 1023) + 55296, (codePoint & 1023) + 56320);
    }).join("");
  }
  function toUtf8String2(bytes, onError) {
    return _toUtf8String2(getUtf8CodePoints2(bytes, onError));
  }
  function toUtf8CodePoints2(str, form = UnicodeNormalizationForm2.current) {
    return getUtf8CodePoints2(toUtf8Bytes2(str, form));
  }

  // node_modules/@ethersproject/strings/lib.esm/bytes32.js
  function formatBytes32String(text) {
    const bytes = toUtf8Bytes2(text);
    if (bytes.length > 31) {
      throw new Error("bytes32 string must be less than 32 bytes");
    }
    return hexlify2(concat2([bytes, HashZero2]).slice(0, 32));
  }
  function parseBytes32String(bytes) {
    const data = arrayify2(bytes);
    if (data.length !== 32) {
      throw new Error("invalid bytes32 - not 32 bytes long");
    }
    if (data[31] !== 0) {
      throw new Error("invalid bytes32 string - no null terminator");
    }
    let length = 31;
    while (data[length - 1] === 0) {
      length--;
    }
    return toUtf8String2(data.slice(0, length));
  }

  // node_modules/@ethersproject/strings/lib.esm/idna.js
  function bytes2(data) {
    if (data.length % 4 !== 0) {
      throw new Error("bad data");
    }
    let result = [];
    for (let i = 0; i < data.length; i += 4) {
      result.push(parseInt(data.substring(i, i + 4), 16));
    }
    return result;
  }
  function createTable(data, func) {
    if (!func) {
      func = function(value) {
        return [parseInt(value, 16)];
      };
    }
    let lo = 0;
    let result = {};
    data.split(",").forEach((pair) => {
      let comps = pair.split(":");
      lo += parseInt(comps[0], 16);
      result[lo] = func(comps[1]);
    });
    return result;
  }
  function createRangeTable(data) {
    let hi = 0;
    return data.split(",").map((v) => {
      let comps = v.split("-");
      if (comps.length === 1) {
        comps[1] = "0";
      } else if (comps[1] === "") {
        comps[1] = "1";
      }
      let lo = hi + parseInt(comps[0], 16);
      hi = parseInt(comps[1], 16);
      return { l: lo, h: hi };
    });
  }
  function matchMap(value, ranges) {
    let lo = 0;
    for (let i = 0; i < ranges.length; i++) {
      let range = ranges[i];
      lo += range.l;
      if (value >= lo && value <= lo + range.h && (value - lo) % (range.d || 1) === 0) {
        if (range.e && range.e.indexOf(value - lo) !== -1) {
          continue;
        }
        return range;
      }
    }
    return null;
  }
  var Table_A_1_ranges = createRangeTable("221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d");
  var Table_B_1_flags = "ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff".split(",").map((v) => parseInt(v, 16));
  var Table_B_2_ranges = [
    { h: 25, s: 32, l: 65 },
    { h: 30, s: 32, e: [23], l: 127 },
    { h: 54, s: 1, e: [48], l: 64, d: 2 },
    { h: 14, s: 1, l: 57, d: 2 },
    { h: 44, s: 1, l: 17, d: 2 },
    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },
    { h: 16, s: 1, l: 68, d: 2 },
    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },
    { h: 26, s: 32, e: [17], l: 435 },
    { h: 22, s: 1, l: 71, d: 2 },
    { h: 15, s: 80, l: 40 },
    { h: 31, s: 32, l: 16 },
    { h: 32, s: 1, l: 80, d: 2 },
    { h: 52, s: 1, l: 42, d: 2 },
    { h: 12, s: 1, l: 55, d: 2 },
    { h: 40, s: 1, e: [38], l: 15, d: 2 },
    { h: 14, s: 1, l: 48, d: 2 },
    { h: 37, s: 48, l: 49 },
    { h: 148, s: 1, l: 6351, d: 2 },
    { h: 88, s: 1, l: 160, d: 2 },
    { h: 15, s: 16, l: 704 },
    { h: 25, s: 26, l: 854 },
    { h: 25, s: 32, l: 55915 },
    { h: 37, s: 40, l: 1247 },
    { h: 25, s: -119711, l: 53248 },
    { h: 25, s: -119763, l: 52 },
    { h: 25, s: -119815, l: 52 },
    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },
    { h: 25, s: -119919, l: 52 },
    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },
    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },
    { h: 25, s: -120075, l: 52 },
    { h: 25, s: -120127, l: 52 },
    { h: 25, s: -120179, l: 52 },
    { h: 25, s: -120231, l: 52 },
    { h: 25, s: -120283, l: 52 },
    { h: 25, s: -120335, l: 52 },
    { h: 24, s: -119543, e: [17], l: 56 },
    { h: 24, s: -119601, e: [17], l: 58 },
    { h: 24, s: -119659, e: [17], l: 58 },
    { h: 24, s: -119717, e: [17], l: 58 },
    { h: 24, s: -119775, e: [17], l: 58 }
  ];
  var Table_B_2_lut_abs = createTable("b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3");
  var Table_B_2_lut_rel = createTable("179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7");
  var Table_B_2_complex = createTable("df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D", bytes2);
  var Table_C_ranges = createRangeTable("80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001");
  function flatten(values) {
    return values.reduce((accum, value) => {
      value.forEach((value2) => {
        accum.push(value2);
      });
      return accum;
    }, []);
  }
  function _nameprepTableA1(codepoint) {
    return !!matchMap(codepoint, Table_A_1_ranges);
  }
  function _nameprepTableB2(codepoint) {
    let range = matchMap(codepoint, Table_B_2_ranges);
    if (range) {
      return [codepoint + range.s];
    }
    let codes = Table_B_2_lut_abs[codepoint];
    if (codes) {
      return codes;
    }
    let shift = Table_B_2_lut_rel[codepoint];
    if (shift) {
      return [codepoint + shift[0]];
    }
    let complex = Table_B_2_complex[codepoint];
    if (complex) {
      return complex;
    }
    return null;
  }
  function _nameprepTableC(codepoint) {
    return !!matchMap(codepoint, Table_C_ranges);
  }
  function nameprep(value) {
    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {
      return value.toLowerCase();
    }
    let codes = toUtf8CodePoints2(value);
    codes = flatten(codes.map((code) => {
      if (Table_B_1_flags.indexOf(code) >= 0) {
        return [];
      }
      if (code >= 65024 && code <= 65039) {
        return [];
      }
      let codesTableB2 = _nameprepTableB2(code);
      if (codesTableB2) {
        return codesTableB2;
      }
      return [code];
    }));
    codes = toUtf8CodePoints2(_toUtf8String2(codes), UnicodeNormalizationForm2.NFKC);
    codes.forEach((code) => {
      if (_nameprepTableC(code)) {
        throw new Error("STRINGPREP_CONTAINS_PROHIBITED");
      }
    });
    codes.forEach((code) => {
      if (_nameprepTableA1(code)) {
        throw new Error("STRINGPREP_CONTAINS_UNASSIGNED");
      }
    });
    let name = _toUtf8String2(codes);
    if (name.substring(0, 1) === "-" || name.substring(2, 4) === "--" || name.substring(name.length - 1) === "-") {
      throw new Error("invalid hyphen");
    }
    return name;
  }

  // node_modules/@ethersproject/abi/lib.esm/coders/string.js
  var StringCoder = class extends DynamicBytesCoder {
    constructor(localName) {
      super("string", localName);
    }
    defaultValue() {
      return "";
    }
    encode(writer, value) {
      return super.encode(writer, toUtf8Bytes2(value));
    }
    decode(reader) {
      return toUtf8String2(super.decode(reader));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/coders/tuple.js
  var TupleCoder = class extends Coder {
    constructor(coders, localName) {
      let dynamic = false;
      const types = [];
      coders.forEach((coder) => {
        if (coder.dynamic) {
          dynamic = true;
        }
        types.push(coder.type);
      });
      const type = "tuple(" + types.join(",") + ")";
      super("tuple", type, localName, dynamic);
      this.coders = coders;
    }
    defaultValue() {
      const values = [];
      this.coders.forEach((coder) => {
        values.push(coder.defaultValue());
      });
      const uniqueNames = this.coders.reduce((accum, coder) => {
        const name = coder.localName;
        if (name) {
          if (!accum[name]) {
            accum[name] = 0;
          }
          accum[name]++;
        }
        return accum;
      }, {});
      this.coders.forEach((coder, index2) => {
        let name = coder.localName;
        if (!name || uniqueNames[name] !== 1) {
          return;
        }
        if (name === "length") {
          name = "_length";
        }
        if (values[name] != null) {
          return;
        }
        values[name] = values[index2];
      });
      return Object.freeze(values);
    }
    encode(writer, value) {
      return pack(writer, this.coders, value);
    }
    decode(reader) {
      return reader.coerce(this.name, unpack(reader, this.coders));
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/abi-coder.js
  var logger30 = new Logger2(version25);
  var paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);
  var paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);
  var AbiCoder = class {
    constructor(coerceFunc) {
      defineReadOnly2(this, "coerceFunc", coerceFunc || null);
    }
    _getCoder(param) {
      switch (param.baseType) {
        case "address":
          return new AddressCoder(param.name);
        case "bool":
          return new BooleanCoder(param.name);
        case "string":
          return new StringCoder(param.name);
        case "bytes":
          return new BytesCoder(param.name);
        case "array":
          return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);
        case "tuple":
          return new TupleCoder((param.components || []).map((component) => {
            return this._getCoder(component);
          }), param.name);
        case "":
          return new NullCoder(param.name);
      }
      let match = param.type.match(paramTypeNumber);
      if (match) {
        let size = parseInt(match[2] || "256");
        if (size === 0 || size > 256 || size % 8 !== 0) {
          logger30.throwArgumentError("invalid " + match[1] + " bit length", "param", param);
        }
        return new NumberCoder(size / 8, match[1] === "int", param.name);
      }
      match = param.type.match(paramTypeBytes);
      if (match) {
        let size = parseInt(match[1]);
        if (size === 0 || size > 32) {
          logger30.throwArgumentError("invalid bytes length", "param", param);
        }
        return new FixedBytesCoder(size, param.name);
      }
      return logger30.throwArgumentError("invalid type", "type", param.type);
    }
    _getWordSize() {
      return 32;
    }
    _getReader(data, allowLoose) {
      return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);
    }
    _getWriter() {
      return new Writer(this._getWordSize());
    }
    getDefaultValue(types) {
      const coders = types.map((type) => this._getCoder(ParamType.from(type)));
      const coder = new TupleCoder(coders, "_");
      return coder.defaultValue();
    }
    encode(types, values) {
      if (types.length !== values.length) {
        logger30.throwError("types/values length mismatch", Logger2.errors.INVALID_ARGUMENT, {
          count: { types: types.length, values: values.length },
          value: { types, values }
        });
      }
      const coders = types.map((type) => this._getCoder(ParamType.from(type)));
      const coder = new TupleCoder(coders, "_");
      const writer = this._getWriter();
      coder.encode(writer, values);
      return writer.data;
    }
    decode(types, data, loose) {
      const coders = types.map((type) => this._getCoder(ParamType.from(type)));
      const coder = new TupleCoder(coders, "_");
      return coder.decode(this._getReader(arrayify2(data), loose));
    }
  };
  var defaultAbiCoder = new AbiCoder();

  // node_modules/@ethersproject/hash/lib.esm/id.js
  function id2(text) {
    return keccak2562(toUtf8Bytes2(text));
  }

  // node_modules/@ethersproject/hash/lib.esm/_version.js
  var version29 = "hash/5.7.0";

  // node_modules/@ethersproject/base64/lib.esm/index.js
  var lib_exports3 = {};
  __export(lib_exports3, {
    decode: () => decode4,
    encode: () => encode7
  });

  // node_modules/@ethersproject/base64/lib.esm/base64.js
  function decode4(textData) {
    textData = atob(textData);
    const data = [];
    for (let i = 0; i < textData.length; i++) {
      data.push(textData.charCodeAt(i));
    }
    return arrayify2(data);
  }
  function encode7(data) {
    data = arrayify2(data);
    let textData = "";
    for (let i = 0; i < data.length; i++) {
      textData += String.fromCharCode(data[i]);
    }
    return btoa(textData);
  }

  // node_modules/@ethersproject/hash/lib.esm/ens-normalize/decoder.js
  function flat2(array, depth) {
    if (depth == null) {
      depth = 1;
    }
    const result = [];
    const forEach2 = result.forEach;
    const flatDeep = function(arr, depth2) {
      forEach2.call(arr, function(val) {
        if (depth2 > 0 && Array.isArray(val)) {
          flatDeep(val, depth2 - 1);
        } else {
          result.push(val);
        }
      });
    };
    flatDeep(array, depth);
    return result;
  }
  function fromEntries2(array) {
    const result = {};
    for (let i = 0; i < array.length; i++) {
      const value = array[i];
      result[value[0]] = value[1];
    }
    return result;
  }
  function decode_arithmetic2(bytes) {
    let pos = 0;
    function u16() {
      return bytes[pos++] << 8 | bytes[pos++];
    }
    let symbol_count = u16();
    let total = 1;
    let acc = [0, 1];
    for (let i = 1; i < symbol_count; i++) {
      acc.push(total += u16());
    }
    let skip = u16();
    let pos_payload = pos;
    pos += skip;
    let read_width = 0;
    let read_buffer = 0;
    function read_bit() {
      if (read_width == 0) {
        read_buffer = read_buffer << 8 | bytes[pos++];
        read_width = 8;
      }
      return read_buffer >> --read_width & 1;
    }
    const N2 = 31;
    const FULL = Math.pow(2, N2);
    const HALF = FULL >>> 1;
    const QRTR = HALF >> 1;
    const MASK = FULL - 1;
    let register = 0;
    for (let i = 0; i < N2; i++)
      register = register << 1 | read_bit();
    let symbols = [];
    let low = 0;
    let range = FULL;
    while (true) {
      let value = Math.floor(((register - low + 1) * total - 1) / range);
      let start = 0;
      let end = symbol_count;
      while (end - start > 1) {
        let mid = start + end >>> 1;
        if (value < acc[mid]) {
          end = mid;
        } else {
          start = mid;
        }
      }
      if (start == 0)
        break;
      symbols.push(start);
      let a = low + Math.floor(range * acc[start] / total);
      let b = low + Math.floor(range * acc[start + 1] / total) - 1;
      while (((a ^ b) & HALF) == 0) {
        register = register << 1 & MASK | read_bit();
        a = a << 1 & MASK;
        b = b << 1 & MASK | 1;
      }
      while (a & ~b & QRTR) {
        register = register & HALF | register << 1 & MASK >>> 1 | read_bit();
        a = a << 1 ^ HALF;
        b = (b ^ HALF) << 1 | HALF | 1;
      }
      low = a;
      range = 1 + b - a;
    }
    let offset = symbol_count - 4;
    return symbols.map((x) => {
      switch (x - offset) {
        case 3:
          return offset + 65792 + (bytes[pos_payload++] << 16 | bytes[pos_payload++] << 8 | bytes[pos_payload++]);
        case 2:
          return offset + 256 + (bytes[pos_payload++] << 8 | bytes[pos_payload++]);
        case 1:
          return offset + bytes[pos_payload++];
        default:
          return x - 1;
      }
    });
  }
  function read_payload2(v) {
    let pos = 0;
    return () => v[pos++];
  }
  function read_compressed_payload2(bytes) {
    return read_payload2(decode_arithmetic2(bytes));
  }
  function signed2(i) {
    return i & 1 ? ~i >> 1 : i >> 1;
  }
  function read_counts2(n, next) {
    let v = Array(n);
    for (let i = 0; i < n; i++)
      v[i] = 1 + next();
    return v;
  }
  function read_ascending2(n, next) {
    let v = Array(n);
    for (let i = 0, x = -1; i < n; i++)
      v[i] = x += 1 + next();
    return v;
  }
  function read_deltas2(n, next) {
    let v = Array(n);
    for (let i = 0, x = 0; i < n; i++)
      v[i] = x += signed2(next());
    return v;
  }
  function read_member_array2(next, lookup) {
    let v = read_ascending2(next(), next);
    let n = next();
    let vX = read_ascending2(n, next);
    let vN = read_counts2(n, next);
    for (let i = 0; i < n; i++) {
      for (let j = 0; j < vN[i]; j++) {
        v.push(vX[i] + j);
      }
    }
    return lookup ? v.map((x) => lookup[x]) : v;
  }
  function read_mapped_map2(next) {
    let ret = [];
    while (true) {
      let w = next();
      if (w == 0)
        break;
      ret.push(read_linear_table2(w, next));
    }
    while (true) {
      let w = next() - 1;
      if (w < 0)
        break;
      ret.push(read_replacement_table2(w, next));
    }
    return fromEntries2(flat2(ret));
  }
  function read_zero_terminated_array2(next) {
    let v = [];
    while (true) {
      let i = next();
      if (i == 0)
        break;
      v.push(i);
    }
    return v;
  }
  function read_transposed2(n, w, next) {
    let m = Array(n).fill(void 0).map(() => []);
    for (let i = 0; i < w; i++) {
      read_deltas2(n, next).forEach((x, j) => m[j].push(x));
    }
    return m;
  }
  function read_linear_table2(w, next) {
    let dx = 1 + next();
    let dy = next();
    let vN = read_zero_terminated_array2(next);
    let m = read_transposed2(vN.length, 1 + w, next);
    return flat2(m.map((v, i) => {
      const x = v[0], ys = v.slice(1);
      return Array(vN[i]).fill(void 0).map((_, j) => {
        let j_dy = j * dy;
        return [x + j * dx, ys.map((y) => y + j_dy)];
      });
    }));
  }
  function read_replacement_table2(w, next) {
    let n = 1 + next();
    let m = read_transposed2(n, 1 + w, next);
    return m.map((v) => [v[0], v.slice(1)]);
  }
  function read_emoji_trie2(next) {
    let sorted = read_member_array2(next).sort((a, b) => a - b);
    return read();
    function read() {
      let branches = [];
      while (true) {
        let keys = read_member_array2(next, sorted);
        if (keys.length == 0)
          break;
        branches.push({ set: new Set(keys), node: read() });
      }
      branches.sort((a, b) => b.set.size - a.set.size);
      let temp = next();
      let valid = temp % 3;
      temp = temp / 3 | 0;
      let fe0f = !!(temp & 1);
      temp >>= 1;
      let save = temp == 1;
      let check = temp == 2;
      return { branches, valid, fe0f, save, check };
    }
  }

  // node_modules/@ethersproject/hash/lib.esm/ens-normalize/include.js
  function getData2() {
    return read_compressed_payload2(decode4(""));
  }

  // node_modules/@ethersproject/hash/lib.esm/ens-normalize/lib.js
  var r2 = getData2();
  var VALID2 = new Set(read_member_array2(r2));
  var IGNORED2 = new Set(read_member_array2(r2));
  var MAPPED2 = read_mapped_map2(r2);
  var EMOJI_ROOT2 = read_emoji_trie2(r2);
  var HYPHEN2 = 45;
  var UNDERSCORE2 = 95;
  function explode_cp2(name) {
    return toUtf8CodePoints2(name);
  }
  function filter_fe0f2(cps) {
    return cps.filter((cp) => cp != 65039);
  }
  function ens_normalize_post_check2(name) {
    for (let label of name.split(".")) {
      let cps = explode_cp2(label);
      try {
        for (let i = cps.lastIndexOf(UNDERSCORE2) - 1; i >= 0; i--) {
          if (cps[i] !== UNDERSCORE2) {
            throw new Error(`underscore only allowed at start`);
          }
        }
        if (cps.length >= 4 && cps.every((cp) => cp < 128) && cps[2] === HYPHEN2 && cps[3] === HYPHEN2) {
          throw new Error(`invalid label extension`);
        }
      } catch (err) {
        throw new Error(`Invalid label "${label}": ${err.message}`);
      }
    }
    return name;
  }
  function ens_normalize2(name) {
    return ens_normalize_post_check2(normalize2(name, filter_fe0f2));
  }
  function normalize2(name, emoji_filter) {
    let input = explode_cp2(name).reverse();
    let output = [];
    while (input.length) {
      let emoji = consume_emoji_reversed2(input);
      if (emoji) {
        output.push(...emoji_filter(emoji));
        continue;
      }
      let cp = input.pop();
      if (VALID2.has(cp)) {
        output.push(cp);
        continue;
      }
      if (IGNORED2.has(cp)) {
        continue;
      }
      let cps = MAPPED2[cp];
      if (cps) {
        output.push(...cps);
        continue;
      }
      throw new Error(`Disallowed codepoint: 0x${cp.toString(16).toUpperCase()}`);
    }
    return ens_normalize_post_check2(nfc2(String.fromCodePoint(...output)));
  }
  function nfc2(s) {
    return s.normalize("NFC");
  }
  function consume_emoji_reversed2(cps, eaten) {
    var _a;
    let node = EMOJI_ROOT2;
    let emoji;
    let saved;
    let stack = [];
    let pos = cps.length;
    if (eaten)
      eaten.length = 0;
    while (pos) {
      let cp = cps[--pos];
      node = (_a = node.branches.find((x) => x.set.has(cp))) === null || _a === void 0 ? void 0 : _a.node;
      if (!node)
        break;
      if (node.save) {
        saved = cp;
      } else if (node.check) {
        if (cp === saved)
          break;
      }
      stack.push(cp);
      if (node.fe0f) {
        stack.push(65039);
        if (pos > 0 && cps[pos - 1] == 65039)
          pos--;
      }
      if (node.valid) {
        emoji = stack.slice();
        if (node.valid == 2)
          emoji.splice(1, 1);
        if (eaten)
          eaten.push(...cps.slice(pos).reverse());
        cps.length = pos;
      }
    }
    return emoji;
  }

  // node_modules/@ethersproject/hash/lib.esm/namehash.js
  var logger31 = new Logger2(version29);
  var Zeros2 = new Uint8Array(32);
  Zeros2.fill(0);
  function checkComponent2(comp) {
    if (comp.length === 0) {
      throw new Error("invalid ENS name; empty component");
    }
    return comp;
  }
  function ensNameSplit2(name) {
    const bytes = toUtf8Bytes2(ens_normalize2(name));
    const comps = [];
    if (name.length === 0) {
      return comps;
    }
    let last = 0;
    for (let i = 0; i < bytes.length; i++) {
      const d = bytes[i];
      if (d === 46) {
        comps.push(checkComponent2(bytes.slice(last, i)));
        last = i + 1;
      }
    }
    if (last >= bytes.length) {
      throw new Error("invalid ENS name; empty component");
    }
    comps.push(checkComponent2(bytes.slice(last)));
    return comps;
  }
  function isValidName(name) {
    try {
      return ensNameSplit2(name).length !== 0;
    } catch (error) {
    }
    return false;
  }
  function namehash2(name) {
    if (typeof name !== "string") {
      logger31.throwArgumentError("invalid ENS name; not a string", "name", name);
    }
    let result = Zeros2;
    const comps = ensNameSplit2(name);
    while (comps.length) {
      result = keccak2562(concat2([result, keccak2562(comps.pop())]));
    }
    return hexlify2(result);
  }
  function dnsEncode2(name) {
    return hexlify2(concat2(ensNameSplit2(name).map((comp) => {
      if (comp.length > 63) {
        throw new Error("invalid DNS encoded entry; length exceeds 63 bytes");
      }
      const bytes = new Uint8Array(comp.length + 1);
      bytes.set(comp, 1);
      bytes[0] = bytes.length - 1;
      return bytes;
    }))) + "00";
  }

  // node_modules/@ethersproject/hash/lib.esm/message.js
  var messagePrefix = "Ethereum Signed Message:\n";
  function hashMessage(message) {
    if (typeof message === "string") {
      message = toUtf8Bytes2(message);
    }
    return keccak2562(concat2([
      toUtf8Bytes2(messagePrefix),
      toUtf8Bytes2(String(message.length)),
      message
    ]));
  }

  // node_modules/@ethersproject/hash/lib.esm/typed-data.js
  var __awaiter17 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger32 = new Logger2(version29);
  var padding2 = new Uint8Array(32);
  padding2.fill(0);
  var NegativeOne4 = BigNumber2.from(-1);
  var Zero5 = BigNumber2.from(0);
  var One3 = BigNumber2.from(1);
  var MaxUint2563 = BigNumber2.from("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
  function hexPadRight2(value) {
    const bytes = arrayify2(value);
    const padOffset = bytes.length % 32;
    if (padOffset) {
      return hexConcat2([bytes, padding2.slice(padOffset)]);
    }
    return hexlify2(bytes);
  }
  var hexTrue2 = hexZeroPad2(One3.toHexString(), 32);
  var hexFalse2 = hexZeroPad2(Zero5.toHexString(), 32);
  var domainFieldTypes2 = {
    name: "string",
    version: "string",
    chainId: "uint256",
    verifyingContract: "address",
    salt: "bytes32"
  };
  var domainFieldNames2 = [
    "name",
    "version",
    "chainId",
    "verifyingContract",
    "salt"
  ];
  function checkString2(key3) {
    return function(value) {
      if (typeof value !== "string") {
        logger32.throwArgumentError(`invalid domain value for ${JSON.stringify(key3)}`, `domain.${key3}`, value);
      }
      return value;
    };
  }
  var domainChecks2 = {
    name: checkString2("name"),
    version: checkString2("version"),
    chainId: function(value) {
      try {
        return BigNumber2.from(value).toString();
      } catch (error) {
      }
      return logger32.throwArgumentError(`invalid domain value for "chainId"`, "domain.chainId", value);
    },
    verifyingContract: function(value) {
      try {
        return getAddress2(value).toLowerCase();
      } catch (error) {
      }
      return logger32.throwArgumentError(`invalid domain value "verifyingContract"`, "domain.verifyingContract", value);
    },
    salt: function(value) {
      try {
        const bytes = arrayify2(value);
        if (bytes.length !== 32) {
          throw new Error("bad length");
        }
        return hexlify2(bytes);
      } catch (error) {
      }
      return logger32.throwArgumentError(`invalid domain value "salt"`, "domain.salt", value);
    }
  };
  function getBaseEncoder2(type) {
    {
      const match = type.match(/^(u?)int(\d*)$/);
      if (match) {
        const signed3 = match[1] === "";
        const width = parseInt(match[2] || "256");
        if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {
          logger32.throwArgumentError("invalid numeric width", "type", type);
        }
        const boundsUpper = MaxUint2563.mask(signed3 ? width - 1 : width);
        const boundsLower = signed3 ? boundsUpper.add(One3).mul(NegativeOne4) : Zero5;
        return function(value) {
          const v = BigNumber2.from(value);
          if (v.lt(boundsLower) || v.gt(boundsUpper)) {
            logger32.throwArgumentError(`value out-of-bounds for ${type}`, "value", value);
          }
          return hexZeroPad2(v.toTwos(256).toHexString(), 32);
        };
      }
    }
    {
      const match = type.match(/^bytes(\d+)$/);
      if (match) {
        const width = parseInt(match[1]);
        if (width === 0 || width > 32 || match[1] !== String(width)) {
          logger32.throwArgumentError("invalid bytes width", "type", type);
        }
        return function(value) {
          const bytes = arrayify2(value);
          if (bytes.length !== width) {
            logger32.throwArgumentError(`invalid length for ${type}`, "value", value);
          }
          return hexPadRight2(value);
        };
      }
    }
    switch (type) {
      case "address":
        return function(value) {
          return hexZeroPad2(getAddress2(value), 32);
        };
      case "bool":
        return function(value) {
          return !value ? hexFalse2 : hexTrue2;
        };
      case "bytes":
        return function(value) {
          return keccak2562(value);
        };
      case "string":
        return function(value) {
          return id2(value);
        };
    }
    return null;
  }
  function encodeType2(name, fields) {
    return `${name}(${fields.map(({ name: name2, type }) => type + " " + name2).join(",")})`;
  }
  var TypedDataEncoder2 = class _TypedDataEncoder2 {
    constructor(types) {
      defineReadOnly2(this, "types", Object.freeze(deepCopy2(types)));
      defineReadOnly2(this, "_encoderCache", {});
      defineReadOnly2(this, "_types", {});
      const links = {};
      const parents = {};
      const subtypes = {};
      Object.keys(types).forEach((type) => {
        links[type] = {};
        parents[type] = [];
        subtypes[type] = {};
      });
      for (const name in types) {
        const uniqueNames = {};
        types[name].forEach((field) => {
          if (uniqueNames[field.name]) {
            logger32.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, "types", types);
          }
          uniqueNames[field.name] = true;
          const baseType = field.type.match(/^([^\x5b]*)(\x5b|$)/)[1];
          if (baseType === name) {
            logger32.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, "types", types);
          }
          const encoder = getBaseEncoder2(baseType);
          if (encoder) {
            return;
          }
          if (!parents[baseType]) {
            logger32.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, "types", types);
          }
          parents[baseType].push(name);
          links[name][baseType] = true;
        });
      }
      const primaryTypes = Object.keys(parents).filter((n) => parents[n].length === 0);
      if (primaryTypes.length === 0) {
        logger32.throwArgumentError("missing primary type", "types", types);
      } else if (primaryTypes.length > 1) {
        logger32.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => JSON.stringify(t)).join(", ")}`, "types", types);
      }
      defineReadOnly2(this, "primaryType", primaryTypes[0]);
      function checkCircular(type, found) {
        if (found[type]) {
          logger32.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, "types", types);
        }
        found[type] = true;
        Object.keys(links[type]).forEach((child) => {
          if (!parents[child]) {
            return;
          }
          checkCircular(child, found);
          Object.keys(found).forEach((subtype) => {
            subtypes[subtype][child] = true;
          });
        });
        delete found[type];
      }
      checkCircular(this.primaryType, {});
      for (const name in subtypes) {
        const st = Object.keys(subtypes[name]);
        st.sort();
        this._types[name] = encodeType2(name, types[name]) + st.map((t) => encodeType2(t, types[t])).join("");
      }
    }
    getEncoder(type) {
      let encoder = this._encoderCache[type];
      if (!encoder) {
        encoder = this._encoderCache[type] = this._getEncoder(type);
      }
      return encoder;
    }
    _getEncoder(type) {
      {
        const encoder = getBaseEncoder2(type);
        if (encoder) {
          return encoder;
        }
      }
      const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        const subtype = match[1];
        const subEncoder = this.getEncoder(subtype);
        const length = parseInt(match[3]);
        return (value) => {
          if (length >= 0 && value.length !== length) {
            logger32.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
          }
          let result = value.map(subEncoder);
          if (this._types[subtype]) {
            result = result.map(keccak2562);
          }
          return keccak2562(hexConcat2(result));
        };
      }
      const fields = this.types[type];
      if (fields) {
        const encodedType = id2(this._types[type]);
        return (value) => {
          const values = fields.map(({ name, type: type2 }) => {
            const result = this.getEncoder(type2)(value[name]);
            if (this._types[type2]) {
              return keccak2562(result);
            }
            return result;
          });
          values.unshift(encodedType);
          return hexConcat2(values);
        };
      }
      return logger32.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    encodeType(name) {
      const result = this._types[name];
      if (!result) {
        logger32.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, "name", name);
      }
      return result;
    }
    encodeData(type, value) {
      return this.getEncoder(type)(value);
    }
    hashStruct(name, value) {
      return keccak2562(this.encodeData(name, value));
    }
    encode(value) {
      return this.encodeData(this.primaryType, value);
    }
    hash(value) {
      return this.hashStruct(this.primaryType, value);
    }
    _visit(type, value, callback) {
      {
        const encoder = getBaseEncoder2(type);
        if (encoder) {
          return callback(type, value);
        }
      }
      const match = type.match(/^(.*)(\x5b(\d*)\x5d)$/);
      if (match) {
        const subtype = match[1];
        const length = parseInt(match[3]);
        if (length >= 0 && value.length !== length) {
          logger32.throwArgumentError("array length mismatch; expected length ${ arrayLength }", "value", value);
        }
        return value.map((v) => this._visit(subtype, v, callback));
      }
      const fields = this.types[type];
      if (fields) {
        return fields.reduce((accum, { name, type: type2 }) => {
          accum[name] = this._visit(type2, value[name], callback);
          return accum;
        }, {});
      }
      return logger32.throwArgumentError(`unknown type: ${type}`, "type", type);
    }
    visit(value, callback) {
      return this._visit(this.primaryType, value, callback);
    }
    static from(types) {
      return new _TypedDataEncoder2(types);
    }
    static getPrimaryType(types) {
      return _TypedDataEncoder2.from(types).primaryType;
    }
    static hashStruct(name, types, value) {
      return _TypedDataEncoder2.from(types).hashStruct(name, value);
    }
    static hashDomain(domain) {
      const domainFields = [];
      for (const name in domain) {
        const type = domainFieldTypes2[name];
        if (!type) {
          logger32.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, "domain", domain);
        }
        domainFields.push({ name, type });
      }
      domainFields.sort((a, b) => {
        return domainFieldNames2.indexOf(a.name) - domainFieldNames2.indexOf(b.name);
      });
      return _TypedDataEncoder2.hashStruct("EIP712Domain", { EIP712Domain: domainFields }, domain);
    }
    static encode(domain, types, value) {
      return hexConcat2([
        "0x1901",
        _TypedDataEncoder2.hashDomain(domain),
        _TypedDataEncoder2.from(types).hash(value)
      ]);
    }
    static hash(domain, types, value) {
      return keccak2562(_TypedDataEncoder2.encode(domain, types, value));
    }
    // Replaces all address types with ENS names with their looked up address
    static resolveNames(domain, types, value, resolveName2) {
      return __awaiter17(this, void 0, void 0, function* () {
        domain = shallowCopy2(domain);
        const ensCache = {};
        if (domain.verifyingContract && !isHexString2(domain.verifyingContract, 20)) {
          ensCache[domain.verifyingContract] = "0x";
        }
        const encoder = _TypedDataEncoder2.from(types);
        encoder.visit(value, (type, value2) => {
          if (type === "address" && !isHexString2(value2, 20)) {
            ensCache[value2] = "0x";
          }
          return value2;
        });
        for (const name in ensCache) {
          ensCache[name] = yield resolveName2(name);
        }
        if (domain.verifyingContract && ensCache[domain.verifyingContract]) {
          domain.verifyingContract = ensCache[domain.verifyingContract];
        }
        value = encoder.visit(value, (type, value2) => {
          if (type === "address" && ensCache[value2]) {
            return ensCache[value2];
          }
          return value2;
        });
        return { domain, value };
      });
    }
    static getPayload(domain, types, value) {
      _TypedDataEncoder2.hashDomain(domain);
      const domainValues = {};
      const domainTypes = [];
      domainFieldNames2.forEach((name) => {
        const value2 = domain[name];
        if (value2 == null) {
          return;
        }
        domainValues[name] = domainChecks2[name](value2);
        domainTypes.push({ name, type: domainFieldTypes2[name] });
      });
      const encoder = _TypedDataEncoder2.from(types);
      const typesWithDomain = shallowCopy2(types);
      if (typesWithDomain.EIP712Domain) {
        logger32.throwArgumentError("types must not contain EIP712Domain type", "types.EIP712Domain", types);
      } else {
        typesWithDomain.EIP712Domain = domainTypes;
      }
      encoder.encode(value);
      return {
        types: typesWithDomain,
        domain: domainValues,
        primaryType: encoder.primaryType,
        message: encoder.visit(value, (type, value2) => {
          if (type.match(/^bytes(\d*)/)) {
            return hexlify2(arrayify2(value2));
          }
          if (type.match(/^u?int/)) {
            return BigNumber2.from(value2).toString();
          }
          switch (type) {
            case "address":
              return value2.toLowerCase();
            case "bool":
              return !!value2;
            case "string":
              if (typeof value2 !== "string") {
                logger32.throwArgumentError(`invalid string`, "value", value2);
              }
              return value2;
          }
          return logger32.throwArgumentError("unsupported type", "type", type);
        })
      };
    }
  };

  // node_modules/@ethersproject/abi/lib.esm/interface.js
  var logger33 = new Logger2(version25);
  var LogDescription = class extends Description2 {
  };
  var TransactionDescription = class extends Description2 {
  };
  var ErrorDescription = class extends Description2 {
  };
  var Indexed = class extends Description2 {
    static isIndexed(value) {
      return !!(value && value._isIndexed);
    }
  };
  var BuiltinErrors = {
    "0x08c379a0": { signature: "Error(string)", name: "Error", inputs: ["string"], reason: true },
    "0x4e487b71": { signature: "Panic(uint256)", name: "Panic", inputs: ["uint256"] }
  };
  function wrapAccessError(property, error) {
    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);
    wrap.error = error;
    return wrap;
  }
  var Interface = class {
    constructor(fragments) {
      let abi = [];
      if (typeof fragments === "string") {
        abi = JSON.parse(fragments);
      } else {
        abi = fragments;
      }
      defineReadOnly2(this, "fragments", abi.map((fragment) => {
        return Fragment.from(fragment);
      }).filter((fragment) => fragment != null));
      defineReadOnly2(this, "_abiCoder", getStatic2(new.target, "getAbiCoder")());
      defineReadOnly2(this, "functions", {});
      defineReadOnly2(this, "errors", {});
      defineReadOnly2(this, "events", {});
      defineReadOnly2(this, "structs", {});
      this.fragments.forEach((fragment) => {
        let bucket = null;
        switch (fragment.type) {
          case "constructor":
            if (this.deploy) {
              logger33.warn("duplicate definition - constructor");
              return;
            }
            defineReadOnly2(this, "deploy", fragment);
            return;
          case "function":
            bucket = this.functions;
            break;
          case "event":
            bucket = this.events;
            break;
          case "error":
            bucket = this.errors;
            break;
          default:
            return;
        }
        let signature3 = fragment.format();
        if (bucket[signature3]) {
          logger33.warn("duplicate definition - " + signature3);
          return;
        }
        bucket[signature3] = fragment;
      });
      if (!this.deploy) {
        defineReadOnly2(this, "deploy", ConstructorFragment.from({
          payable: false,
          type: "constructor"
        }));
      }
      defineReadOnly2(this, "_isInterface", true);
    }
    format(format) {
      if (!format) {
        format = FormatTypes.full;
      }
      if (format === FormatTypes.sighash) {
        logger33.throwArgumentError("interface does not support formatting sighash", "format", format);
      }
      const abi = this.fragments.map((fragment) => fragment.format(format));
      if (format === FormatTypes.json) {
        return JSON.stringify(abi.map((j) => JSON.parse(j)));
      }
      return abi;
    }
    // Sub-classes can override these to handle other blockchains
    static getAbiCoder() {
      return defaultAbiCoder;
    }
    static getAddress(address) {
      return getAddress2(address);
    }
    static getSighash(fragment) {
      return hexDataSlice2(id2(fragment.format()), 0, 4);
    }
    static getEventTopic(eventFragment) {
      return id2(eventFragment.format());
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getFunction(nameOrSignatureOrSighash) {
      if (isHexString2(nameOrSignatureOrSighash)) {
        for (const name in this.functions) {
          if (nameOrSignatureOrSighash === this.getSighash(name)) {
            return this.functions[name];
          }
        }
        logger33.throwArgumentError("no matching function", "sighash", nameOrSignatureOrSighash);
      }
      if (nameOrSignatureOrSighash.indexOf("(") === -1) {
        const name = nameOrSignatureOrSighash.trim();
        const matching = Object.keys(this.functions).filter((f) => f.split(
          "("
          /* fix:) */
        )[0] === name);
        if (matching.length === 0) {
          logger33.throwArgumentError("no matching function", "name", name);
        } else if (matching.length > 1) {
          logger33.throwArgumentError("multiple matching functions", "name", name);
        }
        return this.functions[matching[0]];
      }
      const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
      if (!result) {
        logger33.throwArgumentError("no matching function", "signature", nameOrSignatureOrSighash);
      }
      return result;
    }
    // Find an event definition by any means necessary (unless it is ambiguous)
    getEvent(nameOrSignatureOrTopic) {
      if (isHexString2(nameOrSignatureOrTopic)) {
        const topichash = nameOrSignatureOrTopic.toLowerCase();
        for (const name in this.events) {
          if (topichash === this.getEventTopic(name)) {
            return this.events[name];
          }
        }
        logger33.throwArgumentError("no matching event", "topichash", topichash);
      }
      if (nameOrSignatureOrTopic.indexOf("(") === -1) {
        const name = nameOrSignatureOrTopic.trim();
        const matching = Object.keys(this.events).filter((f) => f.split(
          "("
          /* fix:) */
        )[0] === name);
        if (matching.length === 0) {
          logger33.throwArgumentError("no matching event", "name", name);
        } else if (matching.length > 1) {
          logger33.throwArgumentError("multiple matching events", "name", name);
        }
        return this.events[matching[0]];
      }
      const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];
      if (!result) {
        logger33.throwArgumentError("no matching event", "signature", nameOrSignatureOrTopic);
      }
      return result;
    }
    // Find a function definition by any means necessary (unless it is ambiguous)
    getError(nameOrSignatureOrSighash) {
      if (isHexString2(nameOrSignatureOrSighash)) {
        const getSighash = getStatic2(this.constructor, "getSighash");
        for (const name in this.errors) {
          const error = this.errors[name];
          if (nameOrSignatureOrSighash === getSighash(error)) {
            return this.errors[name];
          }
        }
        logger33.throwArgumentError("no matching error", "sighash", nameOrSignatureOrSighash);
      }
      if (nameOrSignatureOrSighash.indexOf("(") === -1) {
        const name = nameOrSignatureOrSighash.trim();
        const matching = Object.keys(this.errors).filter((f) => f.split(
          "("
          /* fix:) */
        )[0] === name);
        if (matching.length === 0) {
          logger33.throwArgumentError("no matching error", "name", name);
        } else if (matching.length > 1) {
          logger33.throwArgumentError("multiple matching errors", "name", name);
        }
        return this.errors[matching[0]];
      }
      const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];
      if (!result) {
        logger33.throwArgumentError("no matching error", "signature", nameOrSignatureOrSighash);
      }
      return result;
    }
    // Get the sighash (the bytes4 selector) used by Solidity to identify a function
    getSighash(fragment) {
      if (typeof fragment === "string") {
        try {
          fragment = this.getFunction(fragment);
        } catch (error) {
          try {
            fragment = this.getError(fragment);
          } catch (_) {
            throw error;
          }
        }
      }
      return getStatic2(this.constructor, "getSighash")(fragment);
    }
    // Get the topic (the bytes32 hash) used by Solidity to identify an event
    getEventTopic(eventFragment) {
      if (typeof eventFragment === "string") {
        eventFragment = this.getEvent(eventFragment);
      }
      return getStatic2(this.constructor, "getEventTopic")(eventFragment);
    }
    _decodeParams(params, data) {
      return this._abiCoder.decode(params, data);
    }
    _encodeParams(params, values) {
      return this._abiCoder.encode(params, values);
    }
    encodeDeploy(values) {
      return this._encodeParams(this.deploy.inputs, values || []);
    }
    decodeErrorResult(fragment, data) {
      if (typeof fragment === "string") {
        fragment = this.getError(fragment);
      }
      const bytes = arrayify2(data);
      if (hexlify2(bytes.slice(0, 4)) !== this.getSighash(fragment)) {
        logger33.throwArgumentError(`data signature does not match error ${fragment.name}.`, "data", hexlify2(bytes));
      }
      return this._decodeParams(fragment.inputs, bytes.slice(4));
    }
    encodeErrorResult(fragment, values) {
      if (typeof fragment === "string") {
        fragment = this.getError(fragment);
      }
      return hexlify2(concat2([
        this.getSighash(fragment),
        this._encodeParams(fragment.inputs, values || [])
      ]));
    }
    // Decode the data for a function call (e.g. tx.data)
    decodeFunctionData(functionFragment, data) {
      if (typeof functionFragment === "string") {
        functionFragment = this.getFunction(functionFragment);
      }
      const bytes = arrayify2(data);
      if (hexlify2(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {
        logger33.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, "data", hexlify2(bytes));
      }
      return this._decodeParams(functionFragment.inputs, bytes.slice(4));
    }
    // Encode the data for a function call (e.g. tx.data)
    encodeFunctionData(functionFragment, values) {
      if (typeof functionFragment === "string") {
        functionFragment = this.getFunction(functionFragment);
      }
      return hexlify2(concat2([
        this.getSighash(functionFragment),
        this._encodeParams(functionFragment.inputs, values || [])
      ]));
    }
    // Decode the result from a function call (e.g. from eth_call)
    decodeFunctionResult(functionFragment, data) {
      if (typeof functionFragment === "string") {
        functionFragment = this.getFunction(functionFragment);
      }
      let bytes = arrayify2(data);
      let reason = null;
      let message = "";
      let errorArgs = null;
      let errorName = null;
      let errorSignature = null;
      switch (bytes.length % this._abiCoder._getWordSize()) {
        case 0:
          try {
            return this._abiCoder.decode(functionFragment.outputs, bytes);
          } catch (error) {
          }
          break;
        case 4: {
          const selector = hexlify2(bytes.slice(0, 4));
          const builtin = BuiltinErrors[selector];
          if (builtin) {
            errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));
            errorName = builtin.name;
            errorSignature = builtin.signature;
            if (builtin.reason) {
              reason = errorArgs[0];
            }
            if (errorName === "Error") {
              message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;
            } else if (errorName === "Panic") {
              message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;
            }
          } else {
            try {
              const error = this.getError(selector);
              errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));
              errorName = error.name;
              errorSignature = error.format();
            } catch (error) {
            }
          }
          break;
        }
      }
      return logger33.throwError("call revert exception" + message, Logger2.errors.CALL_EXCEPTION, {
        method: functionFragment.format(),
        data: hexlify2(data),
        errorArgs,
        errorName,
        errorSignature,
        reason
      });
    }
    // Encode the result for a function call (e.g. for eth_call)
    encodeFunctionResult(functionFragment, values) {
      if (typeof functionFragment === "string") {
        functionFragment = this.getFunction(functionFragment);
      }
      return hexlify2(this._abiCoder.encode(functionFragment.outputs, values || []));
    }
    // Create the filter for the event with search criteria (e.g. for eth_filterLog)
    encodeFilterTopics(eventFragment, values) {
      if (typeof eventFragment === "string") {
        eventFragment = this.getEvent(eventFragment);
      }
      if (values.length > eventFragment.inputs.length) {
        logger33.throwError("too many arguments for " + eventFragment.format(), Logger2.errors.UNEXPECTED_ARGUMENT, {
          argument: "values",
          value: values
        });
      }
      let topics = [];
      if (!eventFragment.anonymous) {
        topics.push(this.getEventTopic(eventFragment));
      }
      const encodeTopic = (param, value) => {
        if (param.type === "string") {
          return id2(value);
        } else if (param.type === "bytes") {
          return keccak2562(hexlify2(value));
        }
        if (param.type === "bool" && typeof value === "boolean") {
          value = value ? "0x01" : "0x00";
        }
        if (param.type.match(/^u?int/)) {
          value = BigNumber2.from(value).toHexString();
        }
        if (param.type === "address") {
          this._abiCoder.encode(["address"], [value]);
        }
        return hexZeroPad2(hexlify2(value), 32);
      };
      values.forEach((value, index2) => {
        let param = eventFragment.inputs[index2];
        if (!param.indexed) {
          if (value != null) {
            logger33.throwArgumentError("cannot filter non-indexed parameters; must be null", "contract." + param.name, value);
          }
          return;
        }
        if (value == null) {
          topics.push(null);
        } else if (param.baseType === "array" || param.baseType === "tuple") {
          logger33.throwArgumentError("filtering with tuples or arrays not supported", "contract." + param.name, value);
        } else if (Array.isArray(value)) {
          topics.push(value.map((value2) => encodeTopic(param, value2)));
        } else {
          topics.push(encodeTopic(param, value));
        }
      });
      while (topics.length && topics[topics.length - 1] === null) {
        topics.pop();
      }
      return topics;
    }
    encodeEventLog(eventFragment, values) {
      if (typeof eventFragment === "string") {
        eventFragment = this.getEvent(eventFragment);
      }
      const topics = [];
      const dataTypes = [];
      const dataValues = [];
      if (!eventFragment.anonymous) {
        topics.push(this.getEventTopic(eventFragment));
      }
      if (values.length !== eventFragment.inputs.length) {
        logger33.throwArgumentError("event arguments/values mismatch", "values", values);
      }
      eventFragment.inputs.forEach((param, index2) => {
        const value = values[index2];
        if (param.indexed) {
          if (param.type === "string") {
            topics.push(id2(value));
          } else if (param.type === "bytes") {
            topics.push(keccak2562(value));
          } else if (param.baseType === "tuple" || param.baseType === "array") {
            throw new Error("not implemented");
          } else {
            topics.push(this._abiCoder.encode([param.type], [value]));
          }
        } else {
          dataTypes.push(param);
          dataValues.push(value);
        }
      });
      return {
        data: this._abiCoder.encode(dataTypes, dataValues),
        topics
      };
    }
    // Decode a filter for the event and the search criteria
    decodeEventLog(eventFragment, data, topics) {
      if (typeof eventFragment === "string") {
        eventFragment = this.getEvent(eventFragment);
      }
      if (topics != null && !eventFragment.anonymous) {
        let topicHash = this.getEventTopic(eventFragment);
        if (!isHexString2(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {
          logger33.throwError("fragment/topic mismatch", Logger2.errors.INVALID_ARGUMENT, { argument: "topics[0]", expected: topicHash, value: topics[0] });
        }
        topics = topics.slice(1);
      }
      let indexed = [];
      let nonIndexed = [];
      let dynamic = [];
      eventFragment.inputs.forEach((param, index2) => {
        if (param.indexed) {
          if (param.type === "string" || param.type === "bytes" || param.baseType === "tuple" || param.baseType === "array") {
            indexed.push(ParamType.fromObject({ type: "bytes32", name: param.name }));
            dynamic.push(true);
          } else {
            indexed.push(param);
            dynamic.push(false);
          }
        } else {
          nonIndexed.push(param);
          dynamic.push(false);
        }
      });
      let resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat2(topics)) : null;
      let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);
      let result = [];
      let nonIndexedIndex = 0, indexedIndex = 0;
      eventFragment.inputs.forEach((param, index2) => {
        if (param.indexed) {
          if (resultIndexed == null) {
            result[index2] = new Indexed({ _isIndexed: true, hash: null });
          } else if (dynamic[index2]) {
            result[index2] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });
          } else {
            try {
              result[index2] = resultIndexed[indexedIndex++];
            } catch (error) {
              result[index2] = error;
            }
          }
        } else {
          try {
            result[index2] = resultNonIndexed[nonIndexedIndex++];
          } catch (error) {
            result[index2] = error;
          }
        }
        if (param.name && result[param.name] == null) {
          const value = result[index2];
          if (value instanceof Error) {
            Object.defineProperty(result, param.name, {
              enumerable: true,
              get: () => {
                throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value);
              }
            });
          } else {
            result[param.name] = value;
          }
        }
      });
      for (let i = 0; i < result.length; i++) {
        const value = result[i];
        if (value instanceof Error) {
          Object.defineProperty(result, i, {
            enumerable: true,
            get: () => {
              throw wrapAccessError(`index ${i}`, value);
            }
          });
        }
      }
      return Object.freeze(result);
    }
    // Given a transaction, find the matching function fragment (if any) and
    // determine all its properties and call parameters
    parseTransaction(tx) {
      let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());
      if (!fragment) {
        return null;
      }
      return new TransactionDescription({
        args: this._abiCoder.decode(fragment.inputs, "0x" + tx.data.substring(10)),
        functionFragment: fragment,
        name: fragment.name,
        signature: fragment.format(),
        sighash: this.getSighash(fragment),
        value: BigNumber2.from(tx.value || "0")
      });
    }
    // @TODO
    //parseCallResult(data: BytesLike): ??
    // Given an event log, find the matching event fragment (if any) and
    // determine all its properties and values
    parseLog(log) {
      let fragment = this.getEvent(log.topics[0]);
      if (!fragment || fragment.anonymous) {
        return null;
      }
      return new LogDescription({
        eventFragment: fragment,
        name: fragment.name,
        signature: fragment.format(),
        topic: this.getEventTopic(fragment),
        args: this.decodeEventLog(fragment, log.data, log.topics)
      });
    }
    parseError(data) {
      const hexData = hexlify2(data);
      let fragment = this.getError(hexData.substring(0, 10).toLowerCase());
      if (!fragment) {
        return null;
      }
      return new ErrorDescription({
        args: this._abiCoder.decode(fragment.inputs, "0x" + hexData.substring(10)),
        errorFragment: fragment,
        name: fragment.name,
        signature: fragment.format(),
        sighash: this.getSighash(fragment)
      });
    }
    /*
    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {
        if (Interface.isInterface(value)) {
            return value;
        }
        if (typeof(value) === "string") {
            return new Interface(JSON.parse(value));
        }
        return new Interface(value);
    }
    */
    static isInterface(value) {
      return !!(value && value._isInterface);
    }
  };

  // node_modules/@ethersproject/abstract-provider/lib.esm/_version.js
  var version30 = "abstract-provider/5.7.0";

  // node_modules/@ethersproject/abstract-provider/lib.esm/index.js
  var __awaiter18 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger34 = new Logger2(version30);
  var ForkEvent2 = class extends Description2 {
    static isForkEvent(value) {
      return !!(value && value._isForkEvent);
    }
  };
  var Provider2 = class _Provider2 {
    constructor() {
      logger34.checkAbstract(new.target, _Provider2);
      defineReadOnly2(this, "_isProvider", true);
    }
    getFeeData() {
      return __awaiter18(this, void 0, void 0, function* () {
        const { block, gasPrice } = yield resolveProperties2({
          block: this.getBlock("latest"),
          gasPrice: this.getGasPrice().catch((error) => {
            return null;
          })
        });
        let lastBaseFeePerGas = null, maxFeePerGas = null, maxPriorityFeePerGas = null;
        if (block && block.baseFeePerGas) {
          lastBaseFeePerGas = block.baseFeePerGas;
          maxPriorityFeePerGas = BigNumber2.from("1500000000");
          maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);
        }
        return { lastBaseFeePerGas, maxFeePerGas, maxPriorityFeePerGas, gasPrice };
      });
    }
    // Alias for "on"
    addListener(eventName, listener) {
      return this.on(eventName, listener);
    }
    // Alias for "off"
    removeListener(eventName, listener) {
      return this.off(eventName, listener);
    }
    static isProvider(value) {
      return !!(value && value._isProvider);
    }
  };

  // node_modules/@ethersproject/abstract-signer/lib.esm/_version.js
  var version31 = "abstract-signer/5.7.0";

  // node_modules/@ethersproject/abstract-signer/lib.esm/index.js
  var __awaiter19 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger35 = new Logger2(version31);
  var allowedTransactionKeys3 = [
    "accessList",
    "ccipReadEnabled",
    "chainId",
    "customData",
    "data",
    "from",
    "gasLimit",
    "gasPrice",
    "maxFeePerGas",
    "maxPriorityFeePerGas",
    "nonce",
    "to",
    "type",
    "value"
  ];
  var forwardErrors2 = [
    Logger2.errors.INSUFFICIENT_FUNDS,
    Logger2.errors.NONCE_EXPIRED,
    Logger2.errors.REPLACEMENT_UNDERPRICED
  ];
  var Signer2 = class _Signer2 {
    ///////////////////
    // Sub-classes MUST call super
    constructor() {
      logger35.checkAbstract(new.target, _Signer2);
      defineReadOnly2(this, "_isSigner", true);
    }
    ///////////////////
    // Sub-classes MAY override these
    getBalance(blockTag) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("getBalance");
        return yield this.provider.getBalance(this.getAddress(), blockTag);
      });
    }
    getTransactionCount(blockTag) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("getTransactionCount");
        return yield this.provider.getTransactionCount(this.getAddress(), blockTag);
      });
    }
    // Populates "from" if unspecified, and estimates the gas for the transaction
    estimateGas(transaction) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("estimateGas");
        const tx = yield resolveProperties2(this.checkTransaction(transaction));
        return yield this.provider.estimateGas(tx);
      });
    }
    // Populates "from" if unspecified, and calls with the transaction
    call(transaction, blockTag) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("call");
        const tx = yield resolveProperties2(this.checkTransaction(transaction));
        return yield this.provider.call(tx, blockTag);
      });
    }
    // Populates all fields in a transaction, signs it and sends it to the network
    sendTransaction(transaction) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("sendTransaction");
        const tx = yield this.populateTransaction(transaction);
        const signedTx = yield this.signTransaction(tx);
        return yield this.provider.sendTransaction(signedTx);
      });
    }
    getChainId() {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("getChainId");
        const network = yield this.provider.getNetwork();
        return network.chainId;
      });
    }
    getGasPrice() {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("getGasPrice");
        return yield this.provider.getGasPrice();
      });
    }
    getFeeData() {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("getFeeData");
        return yield this.provider.getFeeData();
      });
    }
    resolveName(name) {
      return __awaiter19(this, void 0, void 0, function* () {
        this._checkProvider("resolveName");
        return yield this.provider.resolveName(name);
      });
    }
    // Checks a transaction does not contain invalid keys and if
    // no "from" is provided, populates it.
    // - does NOT require a provider
    // - adds "from" is not present
    // - returns a COPY (safe to mutate the result)
    // By default called from: (overriding these prevents it)
    //   - call
    //   - estimateGas
    //   - populateTransaction (and therefor sendTransaction)
    checkTransaction(transaction) {
      for (const key3 in transaction) {
        if (allowedTransactionKeys3.indexOf(key3) === -1) {
          logger35.throwArgumentError("invalid transaction key: " + key3, "transaction", transaction);
        }
      }
      const tx = shallowCopy2(transaction);
      if (tx.from == null) {
        tx.from = this.getAddress();
      } else {
        tx.from = Promise.all([
          Promise.resolve(tx.from),
          this.getAddress()
        ]).then((result) => {
          if (result[0].toLowerCase() !== result[1].toLowerCase()) {
            logger35.throwArgumentError("from address mismatch", "transaction", transaction);
          }
          return result[0];
        });
      }
      return tx;
    }
    // Populates ALL keys for a transaction and checks that "from" matches
    // this Signer. Should be used by sendTransaction but NOT by signTransaction.
    // By default called from: (overriding these prevents it)
    //   - sendTransaction
    //
    // Notes:
    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas
    populateTransaction(transaction) {
      return __awaiter19(this, void 0, void 0, function* () {
        const tx = yield resolveProperties2(this.checkTransaction(transaction));
        if (tx.to != null) {
          tx.to = Promise.resolve(tx.to).then((to) => __awaiter19(this, void 0, void 0, function* () {
            if (to == null) {
              return null;
            }
            const address = yield this.resolveName(to);
            if (address == null) {
              logger35.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
            }
            return address;
          }));
          tx.to.catch((error) => {
          });
        }
        const hasEip1559 = tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null;
        if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {
          logger35.throwArgumentError("eip-1559 transaction do not support gasPrice", "transaction", transaction);
        } else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {
          logger35.throwArgumentError("pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas", "transaction", transaction);
        }
        if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {
          tx.type = 2;
        } else if (tx.type === 0 || tx.type === 1) {
          if (tx.gasPrice == null) {
            tx.gasPrice = this.getGasPrice();
          }
        } else {
          const feeData = yield this.getFeeData();
          if (tx.type == null) {
            if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {
              tx.type = 2;
              if (tx.gasPrice != null) {
                const gasPrice = tx.gasPrice;
                delete tx.gasPrice;
                tx.maxFeePerGas = gasPrice;
                tx.maxPriorityFeePerGas = gasPrice;
              } else {
                if (tx.maxFeePerGas == null) {
                  tx.maxFeePerGas = feeData.maxFeePerGas;
                }
                if (tx.maxPriorityFeePerGas == null) {
                  tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
                }
              }
            } else if (feeData.gasPrice != null) {
              if (hasEip1559) {
                logger35.throwError("network does not support EIP-1559", Logger2.errors.UNSUPPORTED_OPERATION, {
                  operation: "populateTransaction"
                });
              }
              if (tx.gasPrice == null) {
                tx.gasPrice = feeData.gasPrice;
              }
              tx.type = 0;
            } else {
              logger35.throwError("failed to get consistent fee data", Logger2.errors.UNSUPPORTED_OPERATION, {
                operation: "signer.getFeeData"
              });
            }
          } else if (tx.type === 2) {
            if (tx.maxFeePerGas == null) {
              tx.maxFeePerGas = feeData.maxFeePerGas;
            }
            if (tx.maxPriorityFeePerGas == null) {
              tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;
            }
          }
        }
        if (tx.nonce == null) {
          tx.nonce = this.getTransactionCount("pending");
        }
        if (tx.gasLimit == null) {
          tx.gasLimit = this.estimateGas(tx).catch((error) => {
            if (forwardErrors2.indexOf(error.code) >= 0) {
              throw error;
            }
            return logger35.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger2.errors.UNPREDICTABLE_GAS_LIMIT, {
              error,
              tx
            });
          });
        }
        if (tx.chainId == null) {
          tx.chainId = this.getChainId();
        } else {
          tx.chainId = Promise.all([
            Promise.resolve(tx.chainId),
            this.getChainId()
          ]).then((results) => {
            if (results[1] !== 0 && results[0] !== results[1]) {
              logger35.throwArgumentError("chainId address mismatch", "transaction", transaction);
            }
            return results[0];
          });
        }
        return yield resolveProperties2(tx);
      });
    }
    ///////////////////
    // Sub-classes SHOULD leave these alone
    _checkProvider(operation) {
      if (!this.provider) {
        logger35.throwError("missing provider", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: operation || "_checkProvider"
        });
      }
    }
    static isSigner(value) {
      return !!(value && value._isSigner);
    }
  };
  var VoidSigner = class _VoidSigner extends Signer2 {
    constructor(address, provider) {
      super();
      defineReadOnly2(this, "address", address);
      defineReadOnly2(this, "provider", provider || null);
    }
    getAddress() {
      return Promise.resolve(this.address);
    }
    _fail(message, operation) {
      return Promise.resolve().then(() => {
        logger35.throwError(message, Logger2.errors.UNSUPPORTED_OPERATION, { operation });
      });
    }
    signMessage(message) {
      return this._fail("VoidSigner cannot sign messages", "signMessage");
    }
    signTransaction(transaction) {
      return this._fail("VoidSigner cannot sign transactions", "signTransaction");
    }
    _signTypedData(domain, types, value) {
      return this._fail("VoidSigner cannot sign typed data", "signTypedData");
    }
    connect(provider) {
      return new _VoidSigner(this.address, provider);
    }
  };

  // node_modules/@ethersproject/signing-key/lib.esm/elliptic.js
  var import_bn4 = __toESM(require_bn2());
  var import_hash4 = __toESM(require_hash2());
  function createCommonjsModule2(fn, basedir, module) {
    return module = {
      path: basedir,
      exports: {},
      require: function(path, base3) {
        return commonjsRequire2(path, base3 === void 0 || base3 === null ? module.path : base3);
      }
    }, fn(module, module.exports), module.exports;
  }
  function commonjsRequire2() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }
  var minimalisticAssert2 = assert2;
  function assert2(val, msg) {
    if (!val)
      throw new Error(msg || "Assertion failed");
  }
  assert2.equal = function assertEqual2(l, r3, msg) {
    if (l != r3)
      throw new Error(msg || "Assertion failed: " + l + " != " + r3);
  };
  var utils_12 = createCommonjsModule2(function(module, exports) {
    "use strict";
    var utils = exports;
    function toArray3(msg, enc) {
      if (Array.isArray(msg))
        return msg.slice();
      if (!msg)
        return [];
      var res = [];
      if (typeof msg !== "string") {
        for (var i = 0; i < msg.length; i++)
          res[i] = msg[i] | 0;
        return res;
      }
      if (enc === "hex") {
        msg = msg.replace(/[^a-z0-9]+/ig, "");
        if (msg.length % 2 !== 0)
          msg = "0" + msg;
        for (var i = 0; i < msg.length; i += 2)
          res.push(parseInt(msg[i] + msg[i + 1], 16));
      } else {
        for (var i = 0; i < msg.length; i++) {
          var c = msg.charCodeAt(i);
          var hi = c >> 8;
          var lo = c & 255;
          if (hi)
            res.push(hi, lo);
          else
            res.push(lo);
        }
      }
      return res;
    }
    utils.toArray = toArray3;
    function zero2(word) {
      if (word.length === 1)
        return "0" + word;
      else
        return word;
    }
    utils.zero2 = zero2;
    function toHex3(msg) {
      var res = "";
      for (var i = 0; i < msg.length; i++)
        res += zero2(msg[i].toString(16));
      return res;
    }
    utils.toHex = toHex3;
    utils.encode = function encode9(arr, enc) {
      if (enc === "hex")
        return toHex3(arr);
      else
        return arr;
    };
  });
  var utils_1$12 = createCommonjsModule2(function(module, exports) {
    "use strict";
    var utils = exports;
    utils.assert = minimalisticAssert2;
    utils.toArray = utils_12.toArray;
    utils.zero2 = utils_12.zero2;
    utils.toHex = utils_12.toHex;
    utils.encode = utils_12.encode;
    function getNAF3(num, w, bits) {
      var naf = new Array(Math.max(num.bitLength(), bits) + 1);
      naf.fill(0);
      var ws = 1 << w + 1;
      var k = num.clone();
      for (var i = 0; i < naf.length; i++) {
        var z;
        var mod = k.andln(ws - 1);
        if (k.isOdd()) {
          if (mod > (ws >> 1) - 1)
            z = (ws >> 1) - mod;
          else
            z = mod;
          k.isubn(z);
        } else {
          z = 0;
        }
        naf[i] = z;
        k.iushrn(1);
      }
      return naf;
    }
    utils.getNAF = getNAF3;
    function getJSF3(k1, k2) {
      var jsf = [
        [],
        []
      ];
      k1 = k1.clone();
      k2 = k2.clone();
      var d1 = 0;
      var d2 = 0;
      var m8;
      while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {
        var m14 = k1.andln(3) + d1 & 3;
        var m24 = k2.andln(3) + d2 & 3;
        if (m14 === 3)
          m14 = -1;
        if (m24 === 3)
          m24 = -1;
        var u1;
        if ((m14 & 1) === 0) {
          u1 = 0;
        } else {
          m8 = k1.andln(7) + d1 & 7;
          if ((m8 === 3 || m8 === 5) && m24 === 2)
            u1 = -m14;
          else
            u1 = m14;
        }
        jsf[0].push(u1);
        var u2;
        if ((m24 & 1) === 0) {
          u2 = 0;
        } else {
          m8 = k2.andln(7) + d2 & 7;
          if ((m8 === 3 || m8 === 5) && m14 === 2)
            u2 = -m24;
          else
            u2 = m24;
        }
        jsf[1].push(u2);
        if (2 * d1 === u1 + 1)
          d1 = 1 - d1;
        if (2 * d2 === u2 + 1)
          d2 = 1 - d2;
        k1.iushrn(1);
        k2.iushrn(1);
      }
      return jsf;
    }
    utils.getJSF = getJSF3;
    function cachedProperty(obj, name, computer) {
      var key3 = "_" + name;
      obj.prototype[name] = function cachedProperty2() {
        return this[key3] !== void 0 ? this[key3] : this[key3] = computer.call(this);
      };
    }
    utils.cachedProperty = cachedProperty;
    function parseBytes(bytes) {
      return typeof bytes === "string" ? utils.toArray(bytes, "hex") : bytes;
    }
    utils.parseBytes = parseBytes;
    function intFromLE(bytes) {
      return new import_bn4.default(bytes, "hex", "le");
    }
    utils.intFromLE = intFromLE;
  });
  var getNAF2 = utils_1$12.getNAF;
  var getJSF2 = utils_1$12.getJSF;
  var assert$12 = utils_1$12.assert;
  function BaseCurve2(type, conf) {
    this.type = type;
    this.p = new import_bn4.default(conf.p, 16);
    this.red = conf.prime ? import_bn4.default.red(conf.prime) : import_bn4.default.mont(this.p);
    this.zero = new import_bn4.default(0).toRed(this.red);
    this.one = new import_bn4.default(1).toRed(this.red);
    this.two = new import_bn4.default(2).toRed(this.red);
    this.n = conf.n && new import_bn4.default(conf.n, 16);
    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);
    this._wnafT1 = new Array(4);
    this._wnafT2 = new Array(4);
    this._wnafT3 = new Array(4);
    this._wnafT4 = new Array(4);
    this._bitLength = this.n ? this.n.bitLength() : 0;
    var adjustCount = this.n && this.p.div(this.n);
    if (!adjustCount || adjustCount.cmpn(100) > 0) {
      this.redN = null;
    } else {
      this._maxwellTrick = true;
      this.redN = this.n.toRed(this.red);
    }
  }
  var base2 = BaseCurve2;
  BaseCurve2.prototype.point = function point3() {
    throw new Error("Not implemented");
  };
  BaseCurve2.prototype.validate = function validate5() {
    throw new Error("Not implemented");
  };
  BaseCurve2.prototype._fixedNafMul = function _fixedNafMul2(p, k) {
    assert$12(p.precomputed);
    var doubles = p._getDoubles();
    var naf = getNAF2(k, 1, this._bitLength);
    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);
    I /= 3;
    var repr = [];
    var j;
    var nafW;
    for (j = 0; j < naf.length; j += doubles.step) {
      nafW = 0;
      for (var l = j + doubles.step - 1; l >= j; l--)
        nafW = (nafW << 1) + naf[l];
      repr.push(nafW);
    }
    var a = this.jpoint(null, null, null);
    var b = this.jpoint(null, null, null);
    for (var i = I; i > 0; i--) {
      for (j = 0; j < repr.length; j++) {
        nafW = repr[j];
        if (nafW === i)
          b = b.mixedAdd(doubles.points[j]);
        else if (nafW === -i)
          b = b.mixedAdd(doubles.points[j].neg());
      }
      a = a.add(b);
    }
    return a.toP();
  };
  BaseCurve2.prototype._wnafMul = function _wnafMul2(p, k) {
    var w = 4;
    var nafPoints = p._getNAFPoints(w);
    w = nafPoints.wnd;
    var wnd = nafPoints.points;
    var naf = getNAF2(k, w, this._bitLength);
    var acc = this.jpoint(null, null, null);
    for (var i = naf.length - 1; i >= 0; i--) {
      for (var l = 0; i >= 0 && naf[i] === 0; i--)
        l++;
      if (i >= 0)
        l++;
      acc = acc.dblp(l);
      if (i < 0)
        break;
      var z = naf[i];
      assert$12(z !== 0);
      if (p.type === "affine") {
        if (z > 0)
          acc = acc.mixedAdd(wnd[z - 1 >> 1]);
        else
          acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());
      } else {
        if (z > 0)
          acc = acc.add(wnd[z - 1 >> 1]);
        else
          acc = acc.add(wnd[-z - 1 >> 1].neg());
      }
    }
    return p.type === "affine" ? acc.toP() : acc;
  };
  BaseCurve2.prototype._wnafMulAdd = function _wnafMulAdd2(defW, points, coeffs, len, jacobianResult) {
    var wndWidth = this._wnafT1;
    var wnd = this._wnafT2;
    var naf = this._wnafT3;
    var max = 0;
    var i;
    var j;
    var p;
    for (i = 0; i < len; i++) {
      p = points[i];
      var nafPoints = p._getNAFPoints(defW);
      wndWidth[i] = nafPoints.wnd;
      wnd[i] = nafPoints.points;
    }
    for (i = len - 1; i >= 1; i -= 2) {
      var a = i - 1;
      var b = i;
      if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
        naf[a] = getNAF2(coeffs[a], wndWidth[a], this._bitLength);
        naf[b] = getNAF2(coeffs[b], wndWidth[b], this._bitLength);
        max = Math.max(naf[a].length, max);
        max = Math.max(naf[b].length, max);
        continue;
      }
      var comb = [
        points[a],
        /* 1 */
        null,
        /* 3 */
        null,
        /* 5 */
        points[b]
        /* 7 */
      ];
      if (points[a].y.cmp(points[b].y) === 0) {
        comb[1] = points[a].add(points[b]);
        comb[2] = points[a].toJ().mixedAdd(points[b].neg());
      } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
        comb[1] = points[a].toJ().mixedAdd(points[b]);
        comb[2] = points[a].add(points[b].neg());
      } else {
        comb[1] = points[a].toJ().mixedAdd(points[b]);
        comb[2] = points[a].toJ().mixedAdd(points[b].neg());
      }
      var index2 = [
        -3,
        /* -1 -1 */
        -1,
        /* -1 0 */
        -5,
        /* -1 1 */
        -7,
        /* 0 -1 */
        0,
        /* 0 0 */
        7,
        /* 0 1 */
        5,
        /* 1 -1 */
        1,
        /* 1 0 */
        3
        /* 1 1 */
      ];
      var jsf = getJSF2(coeffs[a], coeffs[b]);
      max = Math.max(jsf[0].length, max);
      naf[a] = new Array(max);
      naf[b] = new Array(max);
      for (j = 0; j < max; j++) {
        var ja = jsf[0][j] | 0;
        var jb = jsf[1][j] | 0;
        naf[a][j] = index2[(ja + 1) * 3 + (jb + 1)];
        naf[b][j] = 0;
        wnd[a] = comb;
      }
    }
    var acc = this.jpoint(null, null, null);
    var tmp = this._wnafT4;
    for (i = max; i >= 0; i--) {
      var k = 0;
      while (i >= 0) {
        var zero = true;
        for (j = 0; j < len; j++) {
          tmp[j] = naf[j][i] | 0;
          if (tmp[j] !== 0)
            zero = false;
        }
        if (!zero)
          break;
        k++;
        i--;
      }
      if (i >= 0)
        k++;
      acc = acc.dblp(k);
      if (i < 0)
        break;
      for (j = 0; j < len; j++) {
        var z = tmp[j];
        p;
        if (z === 0)
          continue;
        else if (z > 0)
          p = wnd[j][z - 1 >> 1];
        else if (z < 0)
          p = wnd[j][-z - 1 >> 1].neg();
        if (p.type === "affine")
          acc = acc.mixedAdd(p);
        else
          acc = acc.add(p);
      }
    }
    for (i = 0; i < len; i++)
      wnd[i] = null;
    if (jacobianResult)
      return acc;
    else
      return acc.toP();
  };
  function BasePoint2(curve, type) {
    this.curve = curve;
    this.type = type;
    this.precomputed = null;
  }
  BaseCurve2.BasePoint = BasePoint2;
  BasePoint2.prototype.eq = function eq4() {
    throw new Error("Not implemented");
  };
  BasePoint2.prototype.validate = function validate6() {
    return this.curve.validate(this);
  };
  BaseCurve2.prototype.decodePoint = function decodePoint2(bytes, enc) {
    bytes = utils_1$12.toArray(bytes, enc);
    var len = this.p.byteLength();
    if ((bytes[0] === 4 || bytes[0] === 6 || bytes[0] === 7) && bytes.length - 1 === 2 * len) {
      if (bytes[0] === 6)
        assert$12(bytes[bytes.length - 1] % 2 === 0);
      else if (bytes[0] === 7)
        assert$12(bytes[bytes.length - 1] % 2 === 1);
      var res = this.point(
        bytes.slice(1, 1 + len),
        bytes.slice(1 + len, 1 + 2 * len)
      );
      return res;
    } else if ((bytes[0] === 2 || bytes[0] === 3) && bytes.length - 1 === len) {
      return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 3);
    }
    throw new Error("Unknown point format");
  };
  BasePoint2.prototype.encodeCompressed = function encodeCompressed2(enc) {
    return this.encode(enc, true);
  };
  BasePoint2.prototype._encode = function _encode4(compact) {
    var len = this.curve.p.byteLength();
    var x = this.getX().toArray("be", len);
    if (compact)
      return [this.getY().isEven() ? 2 : 3].concat(x);
    return [4].concat(x, this.getY().toArray("be", len));
  };
  BasePoint2.prototype.encode = function encode8(enc, compact) {
    return utils_1$12.encode(this._encode(compact), enc);
  };
  BasePoint2.prototype.precompute = function precompute2(power) {
    if (this.precomputed)
      return this;
    var precomputed = {
      doubles: null,
      naf: null,
      beta: null
    };
    precomputed.naf = this._getNAFPoints(8);
    precomputed.doubles = this._getDoubles(4, power);
    precomputed.beta = this._getBeta();
    this.precomputed = precomputed;
    return this;
  };
  BasePoint2.prototype._hasDoubles = function _hasDoubles2(k) {
    if (!this.precomputed)
      return false;
    var doubles = this.precomputed.doubles;
    if (!doubles)
      return false;
    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
  };
  BasePoint2.prototype._getDoubles = function _getDoubles2(step, power) {
    if (this.precomputed && this.precomputed.doubles)
      return this.precomputed.doubles;
    var doubles = [this];
    var acc = this;
    for (var i = 0; i < power; i += step) {
      for (var j = 0; j < step; j++)
        acc = acc.dbl();
      doubles.push(acc);
    }
    return {
      step,
      points: doubles
    };
  };
  BasePoint2.prototype._getNAFPoints = function _getNAFPoints2(wnd) {
    if (this.precomputed && this.precomputed.naf)
      return this.precomputed.naf;
    var res = [this];
    var max = (1 << wnd) - 1;
    var dbl5 = max === 1 ? null : this.dbl();
    for (var i = 1; i < max; i++)
      res[i] = res[i - 1].add(dbl5);
    return {
      wnd,
      points: res
    };
  };
  BasePoint2.prototype._getBeta = function _getBeta3() {
    return null;
  };
  BasePoint2.prototype.dblp = function dblp3(k) {
    var r3 = this;
    for (var i = 0; i < k; i++)
      r3 = r3.dbl();
    return r3;
  };
  var inherits_browser2 = createCommonjsModule2(function(module) {
    if (typeof Object.create === "function") {
      module.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      module.exports = function inherits2(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function() {
          };
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
  });
  var assert$22 = utils_1$12.assert;
  function ShortCurve2(conf) {
    base2.call(this, "short", conf);
    this.a = new import_bn4.default(conf.a, 16).toRed(this.red);
    this.b = new import_bn4.default(conf.b, 16).toRed(this.red);
    this.tinv = this.two.redInvm();
    this.zeroA = this.a.fromRed().cmpn(0) === 0;
    this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;
    this.endo = this._getEndomorphism(conf);
    this._endoWnafT1 = new Array(4);
    this._endoWnafT2 = new Array(4);
  }
  inherits_browser2(ShortCurve2, base2);
  var short_12 = ShortCurve2;
  ShortCurve2.prototype._getEndomorphism = function _getEndomorphism2(conf) {
    if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
      return;
    var beta;
    var lambda;
    if (conf.beta) {
      beta = new import_bn4.default(conf.beta, 16).toRed(this.red);
    } else {
      var betas = this._getEndoRoots(this.p);
      beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
      beta = beta.toRed(this.red);
    }
    if (conf.lambda) {
      lambda = new import_bn4.default(conf.lambda, 16);
    } else {
      var lambdas = this._getEndoRoots(this.n);
      if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
        lambda = lambdas[0];
      } else {
        lambda = lambdas[1];
        assert$22(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
      }
    }
    var basis;
    if (conf.basis) {
      basis = conf.basis.map(function(vec) {
        return {
          a: new import_bn4.default(vec.a, 16),
          b: new import_bn4.default(vec.b, 16)
        };
      });
    } else {
      basis = this._getEndoBasis(lambda);
    }
    return {
      beta,
      lambda,
      basis
    };
  };
  ShortCurve2.prototype._getEndoRoots = function _getEndoRoots2(num) {
    var red = num === this.p ? this.red : import_bn4.default.mont(num);
    var tinv = new import_bn4.default(2).toRed(red).redInvm();
    var ntinv = tinv.redNeg();
    var s = new import_bn4.default(3).toRed(red).redNeg().redSqrt().redMul(tinv);
    var l1 = ntinv.redAdd(s).fromRed();
    var l2 = ntinv.redSub(s).fromRed();
    return [l1, l2];
  };
  ShortCurve2.prototype._getEndoBasis = function _getEndoBasis2(lambda) {
    var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));
    var u = lambda;
    var v = this.n.clone();
    var x1 = new import_bn4.default(1);
    var y1 = new import_bn4.default(0);
    var x2 = new import_bn4.default(0);
    var y2 = new import_bn4.default(1);
    var a0;
    var b0;
    var a1;
    var b1;
    var a2;
    var b2;
    var prevR;
    var i = 0;
    var r3;
    var x;
    while (u.cmpn(0) !== 0) {
      var q = v.div(u);
      r3 = v.sub(q.mul(u));
      x = x2.sub(q.mul(x1));
      var y = y2.sub(q.mul(y1));
      if (!a1 && r3.cmp(aprxSqrt) < 0) {
        a0 = prevR.neg();
        b0 = x1;
        a1 = r3.neg();
        b1 = x;
      } else if (a1 && ++i === 2) {
        break;
      }
      prevR = r3;
      v = u;
      u = r3;
      x2 = x1;
      x1 = x;
      y2 = y1;
      y1 = y;
    }
    a2 = r3.neg();
    b2 = x;
    var len1 = a1.sqr().add(b1.sqr());
    var len2 = a2.sqr().add(b2.sqr());
    if (len2.cmp(len1) >= 0) {
      a2 = a0;
      b2 = b0;
    }
    if (a1.negative) {
      a1 = a1.neg();
      b1 = b1.neg();
    }
    if (a2.negative) {
      a2 = a2.neg();
      b2 = b2.neg();
    }
    return [
      { a: a1, b: b1 },
      { a: a2, b: b2 }
    ];
  };
  ShortCurve2.prototype._endoSplit = function _endoSplit2(k) {
    var basis = this.endo.basis;
    var v1 = basis[0];
    var v2 = basis[1];
    var c1 = v2.b.mul(k).divRound(this.n);
    var c2 = v1.b.neg().mul(k).divRound(this.n);
    var p1 = c1.mul(v1.a);
    var p2 = c2.mul(v2.a);
    var q1 = c1.mul(v1.b);
    var q2 = c2.mul(v2.b);
    var k1 = k.sub(p1).sub(p2);
    var k2 = q1.add(q2).neg();
    return { k1, k2 };
  };
  ShortCurve2.prototype.pointFromX = function pointFromX2(x, odd) {
    x = new import_bn4.default(x, 16);
    if (!x.red)
      x = x.toRed(this.red);
    var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
    var y = y2.redSqrt();
    if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
      throw new Error("invalid point");
    var isOdd = y.fromRed().isOdd();
    if (odd && !isOdd || !odd && isOdd)
      y = y.redNeg();
    return this.point(x, y);
  };
  ShortCurve2.prototype.validate = function validate7(point5) {
    if (point5.inf)
      return true;
    var x = point5.x;
    var y = point5.y;
    var ax = this.a.redMul(x);
    var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
    return y.redSqr().redISub(rhs).cmpn(0) === 0;
  };
  ShortCurve2.prototype._endoWnafMulAdd = function _endoWnafMulAdd2(points, coeffs, jacobianResult) {
    var npoints = this._endoWnafT1;
    var ncoeffs = this._endoWnafT2;
    for (var i = 0; i < points.length; i++) {
      var split = this._endoSplit(coeffs[i]);
      var p = points[i];
      var beta = p._getBeta();
      if (split.k1.negative) {
        split.k1.ineg();
        p = p.neg(true);
      }
      if (split.k2.negative) {
        split.k2.ineg();
        beta = beta.neg(true);
      }
      npoints[i * 2] = p;
      npoints[i * 2 + 1] = beta;
      ncoeffs[i * 2] = split.k1;
      ncoeffs[i * 2 + 1] = split.k2;
    }
    var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);
    for (var j = 0; j < i * 2; j++) {
      npoints[j] = null;
      ncoeffs[j] = null;
    }
    return res;
  };
  function Point2(curve, x, y, isRed) {
    base2.BasePoint.call(this, curve, "affine");
    if (x === null && y === null) {
      this.x = null;
      this.y = null;
      this.inf = true;
    } else {
      this.x = new import_bn4.default(x, 16);
      this.y = new import_bn4.default(y, 16);
      if (isRed) {
        this.x.forceRed(this.curve.red);
        this.y.forceRed(this.curve.red);
      }
      if (!this.x.red)
        this.x = this.x.toRed(this.curve.red);
      if (!this.y.red)
        this.y = this.y.toRed(this.curve.red);
      this.inf = false;
    }
  }
  inherits_browser2(Point2, base2.BasePoint);
  ShortCurve2.prototype.point = function point4(x, y, isRed) {
    return new Point2(this, x, y, isRed);
  };
  ShortCurve2.prototype.pointFromJSON = function pointFromJSON2(obj, red) {
    return Point2.fromJSON(this, obj, red);
  };
  Point2.prototype._getBeta = function _getBeta4() {
    if (!this.curve.endo)
      return;
    var pre = this.precomputed;
    if (pre && pre.beta)
      return pre.beta;
    var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
    if (pre) {
      var curve = this.curve;
      var endoMul = function(p) {
        return curve.point(p.x.redMul(curve.endo.beta), p.y);
      };
      pre.beta = beta;
      beta.precomputed = {
        beta: null,
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: pre.naf.points.map(endoMul)
        },
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: pre.doubles.points.map(endoMul)
        }
      };
    }
    return beta;
  };
  Point2.prototype.toJSON = function toJSON3() {
    if (!this.precomputed)
      return [this.x, this.y];
    return [this.x, this.y, this.precomputed && {
      doubles: this.precomputed.doubles && {
        step: this.precomputed.doubles.step,
        points: this.precomputed.doubles.points.slice(1)
      },
      naf: this.precomputed.naf && {
        wnd: this.precomputed.naf.wnd,
        points: this.precomputed.naf.points.slice(1)
      }
    }];
  };
  Point2.fromJSON = function fromJSON2(curve, obj, red) {
    if (typeof obj === "string")
      obj = JSON.parse(obj);
    var res = curve.point(obj[0], obj[1], red);
    if (!obj[2])
      return res;
    function obj2point(obj2) {
      return curve.point(obj2[0], obj2[1], red);
    }
    var pre = obj[2];
    res.precomputed = {
      beta: null,
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: [res].concat(pre.doubles.points.map(obj2point))
      },
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: [res].concat(pre.naf.points.map(obj2point))
      }
    };
    return res;
  };
  Point2.prototype.inspect = function inspect4() {
    if (this.isInfinity())
      return "<EC Point Infinity>";
    return "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
  };
  Point2.prototype.isInfinity = function isInfinity3() {
    return this.inf;
  };
  Point2.prototype.add = function add3(p) {
    if (this.inf)
      return p;
    if (p.inf)
      return this;
    if (this.eq(p))
      return this.dbl();
    if (this.neg().eq(p))
      return this.curve.point(null, null);
    if (this.x.cmp(p.x) === 0)
      return this.curve.point(null, null);
    var c = this.y.redSub(p.y);
    if (c.cmpn(0) !== 0)
      c = c.redMul(this.x.redSub(p.x).redInvm());
    var nx = c.redSqr().redISub(this.x).redISub(p.x);
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
  };
  Point2.prototype.dbl = function dbl3() {
    if (this.inf)
      return this;
    var ys1 = this.y.redAdd(this.y);
    if (ys1.cmpn(0) === 0)
      return this.curve.point(null, null);
    var a = this.curve.a;
    var x2 = this.x.redSqr();
    var dyinv = ys1.redInvm();
    var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);
    var nx = c.redSqr().redISub(this.x.redAdd(this.x));
    var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
    return this.curve.point(nx, ny);
  };
  Point2.prototype.getX = function getX2() {
    return this.x.fromRed();
  };
  Point2.prototype.getY = function getY2() {
    return this.y.fromRed();
  };
  Point2.prototype.mul = function mul3(k) {
    k = new import_bn4.default(k, 16);
    if (this.isInfinity())
      return this;
    else if (this._hasDoubles(k))
      return this.curve._fixedNafMul(this, k);
    else if (this.curve.endo)
      return this.curve._endoWnafMulAdd([this], [k]);
    else
      return this.curve._wnafMul(this, k);
  };
  Point2.prototype.mulAdd = function mulAdd2(k1, p2, k2) {
    var points = [this, p2];
    var coeffs = [k1, k2];
    if (this.curve.endo)
      return this.curve._endoWnafMulAdd(points, coeffs);
    else
      return this.curve._wnafMulAdd(1, points, coeffs, 2);
  };
  Point2.prototype.jmulAdd = function jmulAdd2(k1, p2, k2) {
    var points = [this, p2];
    var coeffs = [k1, k2];
    if (this.curve.endo)
      return this.curve._endoWnafMulAdd(points, coeffs, true);
    else
      return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
  };
  Point2.prototype.eq = function eq5(p) {
    return this === p || this.inf === p.inf && (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
  };
  Point2.prototype.neg = function neg3(_precompute) {
    if (this.inf)
      return this;
    var res = this.curve.point(this.x, this.y.redNeg());
    if (_precompute && this.precomputed) {
      var pre = this.precomputed;
      var negate = function(p) {
        return p.neg();
      };
      res.precomputed = {
        naf: pre.naf && {
          wnd: pre.naf.wnd,
          points: pre.naf.points.map(negate)
        },
        doubles: pre.doubles && {
          step: pre.doubles.step,
          points: pre.doubles.points.map(negate)
        }
      };
    }
    return res;
  };
  Point2.prototype.toJ = function toJ2() {
    if (this.inf)
      return this.curve.jpoint(null, null, null);
    var res = this.curve.jpoint(this.x, this.y, this.curve.one);
    return res;
  };
  function JPoint2(curve, x, y, z) {
    base2.BasePoint.call(this, curve, "jacobian");
    if (x === null && y === null && z === null) {
      this.x = this.curve.one;
      this.y = this.curve.one;
      this.z = new import_bn4.default(0);
    } else {
      this.x = new import_bn4.default(x, 16);
      this.y = new import_bn4.default(y, 16);
      this.z = new import_bn4.default(z, 16);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;
  }
  inherits_browser2(JPoint2, base2.BasePoint);
  ShortCurve2.prototype.jpoint = function jpoint2(x, y, z) {
    return new JPoint2(this, x, y, z);
  };
  JPoint2.prototype.toP = function toP2() {
    if (this.isInfinity())
      return this.curve.point(null, null);
    var zinv = this.z.redInvm();
    var zinv2 = zinv.redSqr();
    var ax = this.x.redMul(zinv2);
    var ay = this.y.redMul(zinv2).redMul(zinv);
    return this.curve.point(ax, ay);
  };
  JPoint2.prototype.neg = function neg4() {
    return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
  };
  JPoint2.prototype.add = function add4(p) {
    if (this.isInfinity())
      return p;
    if (p.isInfinity())
      return this;
    var pz2 = p.z.redSqr();
    var z2 = this.z.redSqr();
    var u1 = this.x.redMul(pz2);
    var u2 = p.x.redMul(z2);
    var s1 = this.y.redMul(pz2.redMul(p.z));
    var s2 = p.y.redMul(z2.redMul(this.z));
    var h = u1.redSub(u2);
    var r3 = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
      if (r3.cmpn(0) !== 0)
        return this.curve.jpoint(null, null, null);
      else
        return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r3.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r3.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(p.z).redMul(h);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype.mixedAdd = function mixedAdd2(p) {
    if (this.isInfinity())
      return p.toJ();
    if (p.isInfinity())
      return this;
    var z2 = this.z.redSqr();
    var u1 = this.x;
    var u2 = p.x.redMul(z2);
    var s1 = this.y;
    var s2 = p.y.redMul(z2).redMul(this.z);
    var h = u1.redSub(u2);
    var r3 = s1.redSub(s2);
    if (h.cmpn(0) === 0) {
      if (r3.cmpn(0) !== 0)
        return this.curve.jpoint(null, null, null);
      else
        return this.dbl();
    }
    var h2 = h.redSqr();
    var h3 = h2.redMul(h);
    var v = u1.redMul(h2);
    var nx = r3.redSqr().redIAdd(h3).redISub(v).redISub(v);
    var ny = r3.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
    var nz = this.z.redMul(h);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype.dblp = function dblp4(pow) {
    if (pow === 0)
      return this;
    if (this.isInfinity())
      return this;
    if (!pow)
      return this.dbl();
    var i;
    if (this.curve.zeroA || this.curve.threeA) {
      var r3 = this;
      for (i = 0; i < pow; i++)
        r3 = r3.dbl();
      return r3;
    }
    var a = this.curve.a;
    var tinv = this.curve.tinv;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jyd = jy.redAdd(jy);
    for (i = 0; i < pow; i++) {
      var jx2 = jx.redSqr();
      var jyd2 = jyd.redSqr();
      var jyd4 = jyd2.redSqr();
      var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
      var t1 = jx.redMul(jyd2);
      var nx = c.redSqr().redISub(t1.redAdd(t1));
      var t2 = t1.redISub(nx);
      var dny = c.redMul(t2);
      dny = dny.redIAdd(dny).redISub(jyd4);
      var nz = jyd.redMul(jz);
      if (i + 1 < pow)
        jz4 = jz4.redMul(jyd4);
      jx = nx;
      jz = nz;
      jyd = dny;
    }
    return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
  };
  JPoint2.prototype.dbl = function dbl4() {
    if (this.isInfinity())
      return this;
    if (this.curve.zeroA)
      return this._zeroDbl();
    else if (this.curve.threeA)
      return this._threeDbl();
    else
      return this._dbl();
  };
  JPoint2.prototype._zeroDbl = function _zeroDbl2() {
    var nx;
    var ny;
    var nz;
    if (this.zOne) {
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var yyyy = yy.redSqr();
      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      s = s.redIAdd(s);
      var m = xx.redAdd(xx).redIAdd(xx);
      var t = m.redSqr().redISub(s).redISub(s);
      var yyyy8 = yyyy.redIAdd(yyyy);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      nx = t;
      ny = m.redMul(s.redISub(t)).redISub(yyyy8);
      nz = this.y.redAdd(this.y);
    } else {
      var a = this.x.redSqr();
      var b = this.y.redSqr();
      var c = b.redSqr();
      var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
      d = d.redIAdd(d);
      var e = a.redAdd(a).redIAdd(a);
      var f = e.redSqr();
      var c8 = c.redIAdd(c);
      c8 = c8.redIAdd(c8);
      c8 = c8.redIAdd(c8);
      nx = f.redISub(d).redISub(d);
      ny = e.redMul(d.redISub(nx)).redISub(c8);
      nz = this.y.redMul(this.z);
      nz = nz.redIAdd(nz);
    }
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype._threeDbl = function _threeDbl2() {
    var nx;
    var ny;
    var nz;
    if (this.zOne) {
      var xx = this.x.redSqr();
      var yy = this.y.redSqr();
      var yyyy = yy.redSqr();
      var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
      s = s.redIAdd(s);
      var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
      var t = m.redSqr().redISub(s).redISub(s);
      nx = t;
      var yyyy8 = yyyy.redIAdd(yyyy);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      yyyy8 = yyyy8.redIAdd(yyyy8);
      ny = m.redMul(s.redISub(t)).redISub(yyyy8);
      nz = this.y.redAdd(this.y);
    } else {
      var delta = this.z.redSqr();
      var gamma = this.y.redSqr();
      var beta = this.x.redMul(gamma);
      var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
      alpha = alpha.redAdd(alpha).redIAdd(alpha);
      var beta4 = beta.redIAdd(beta);
      beta4 = beta4.redIAdd(beta4);
      var beta8 = beta4.redAdd(beta4);
      nx = alpha.redSqr().redISub(beta8);
      nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
      var ggamma8 = gamma.redSqr();
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ggamma8 = ggamma8.redIAdd(ggamma8);
      ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
    }
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype._dbl = function _dbl2() {
    var a = this.curve.a;
    var jx = this.x;
    var jy = this.y;
    var jz = this.z;
    var jz4 = jz.redSqr().redSqr();
    var jx2 = jx.redSqr();
    var jy2 = jy.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));
    var jxd4 = jx.redAdd(jx);
    jxd4 = jxd4.redIAdd(jxd4);
    var t1 = jxd4.redMul(jy2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var jyd8 = jy2.redSqr();
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    jyd8 = jyd8.redIAdd(jyd8);
    var ny = c.redMul(t2).redISub(jyd8);
    var nz = jy.redAdd(jy).redMul(jz);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype.trpl = function trpl2() {
    if (!this.curve.zeroA)
      return this.dbl().add(this);
    var xx = this.x.redSqr();
    var yy = this.y.redSqr();
    var zz = this.z.redSqr();
    var yyyy = yy.redSqr();
    var m = xx.redAdd(xx).redIAdd(xx);
    var mm = m.redSqr();
    var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    e = e.redIAdd(e);
    e = e.redAdd(e).redIAdd(e);
    e = e.redISub(mm);
    var ee = e.redSqr();
    var t = yyyy.redIAdd(yyyy);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    t = t.redIAdd(t);
    var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
    var yyu4 = yy.redMul(u);
    yyu4 = yyu4.redIAdd(yyu4);
    yyu4 = yyu4.redIAdd(yyu4);
    var nx = this.x.redMul(ee).redISub(yyu4);
    nx = nx.redIAdd(nx);
    nx = nx.redIAdd(nx);
    var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    ny = ny.redIAdd(ny);
    var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);
    return this.curve.jpoint(nx, ny, nz);
  };
  JPoint2.prototype.mul = function mul4(k, kbase) {
    k = new import_bn4.default(k, kbase);
    return this.curve._wnafMul(this, k);
  };
  JPoint2.prototype.eq = function eq6(p) {
    if (p.type === "affine")
      return this.eq(p.toJ());
    if (this === p)
      return true;
    var z2 = this.z.redSqr();
    var pz2 = p.z.redSqr();
    if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
      return false;
    var z3 = z2.redMul(this.z);
    var pz3 = pz2.redMul(p.z);
    return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
  };
  JPoint2.prototype.eqXToP = function eqXToP2(x) {
    var zs = this.z.redSqr();
    var rx = x.toRed(this.curve.red).redMul(zs);
    if (this.x.cmp(rx) === 0)
      return true;
    var xc = x.clone();
    var t = this.curve.redN.redMul(zs);
    for (; ; ) {
      xc.iadd(this.curve.n);
      if (xc.cmp(this.curve.p) >= 0)
        return false;
      rx.redIAdd(t);
      if (this.x.cmp(rx) === 0)
        return true;
    }
  };
  JPoint2.prototype.inspect = function inspect5() {
    if (this.isInfinity())
      return "<EC JPoint Infinity>";
    return "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
  };
  JPoint2.prototype.isInfinity = function isInfinity4() {
    return this.z.cmpn(0) === 0;
  };
  var curve_12 = createCommonjsModule2(function(module, exports) {
    "use strict";
    var curve = exports;
    curve.base = base2;
    curve.short = short_12;
    curve.mont = /*RicMoo:ethers:require(./mont)*/
    null;
    curve.edwards = /*RicMoo:ethers:require(./edwards)*/
    null;
  });
  var curves_12 = createCommonjsModule2(function(module, exports) {
    "use strict";
    var curves = exports;
    var assert3 = utils_1$12.assert;
    function PresetCurve(options) {
      if (options.type === "short")
        this.curve = new curve_12.short(options);
      else if (options.type === "edwards")
        this.curve = new curve_12.edwards(options);
      else
        this.curve = new curve_12.mont(options);
      this.g = this.curve.g;
      this.n = this.curve.n;
      this.hash = options.hash;
      assert3(this.g.validate(), "Invalid curve");
      assert3(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    curves.PresetCurve = PresetCurve;
    function defineCurve(name, options) {
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        get: function() {
          var curve = new PresetCurve(options);
          Object.defineProperty(curves, name, {
            configurable: true,
            enumerable: true,
            value: curve
          });
          return curve;
        }
      });
    }
    defineCurve("p192", {
      type: "short",
      prime: "p192",
      p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
      b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
      n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
      hash: import_hash4.default.sha256,
      gRed: false,
      g: [
        "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
        "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
      ]
    });
    defineCurve("p224", {
      type: "short",
      prime: "p224",
      p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
      a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
      b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
      n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
      hash: import_hash4.default.sha256,
      gRed: false,
      g: [
        "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
        "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
      ]
    });
    defineCurve("p256", {
      type: "short",
      prime: null,
      p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
      a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
      b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
      n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
      hash: import_hash4.default.sha256,
      gRed: false,
      g: [
        "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
        "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
      ]
    });
    defineCurve("p384", {
      type: "short",
      prime: null,
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
      a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
      b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
      n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
      hash: import_hash4.default.sha384,
      gRed: false,
      g: [
        "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
        "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
      ]
    });
    defineCurve("p521", {
      type: "short",
      prime: null,
      p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
      a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
      b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
      n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
      hash: import_hash4.default.sha512,
      gRed: false,
      g: [
        "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
        "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
      ]
    });
    defineCurve("curve25519", {
      type: "mont",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "76d06",
      b: "1",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: import_hash4.default.sha256,
      gRed: false,
      g: [
        "9"
      ]
    });
    defineCurve("ed25519", {
      type: "edwards",
      prime: "p25519",
      p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
      a: "-1",
      c: "1",
      // -121665 * (121666^(-1)) (mod P)
      d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
      n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
      hash: import_hash4.default.sha256,
      gRed: false,
      g: [
        "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
        // 4/5
        "6666666666666666666666666666666666666666666666666666666666666658"
      ]
    });
    var pre;
    try {
      pre = /*RicMoo:ethers:require(./precomputed/secp256k1)*/
      null.crash();
    } catch (e) {
      pre = void 0;
    }
    defineCurve("secp256k1", {
      type: "short",
      prime: "k256",
      p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
      a: "0",
      b: "7",
      n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
      h: "1",
      hash: import_hash4.default.sha256,
      // Precomputed endomorphism
      beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
      lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
      basis: [
        {
          a: "3086d221a7d46bcde86c90e49284eb15",
          b: "-e4437ed6010e88286f547fa90abfe4c3"
        },
        {
          a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
          b: "3086d221a7d46bcde86c90e49284eb15"
        }
      ],
      gRed: false,
      g: [
        "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
        "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
        pre
      ]
    });
  });
  function HmacDRBG2(options) {
    if (!(this instanceof HmacDRBG2))
      return new HmacDRBG2(options);
    this.hash = options.hash;
    this.predResist = !!options.predResist;
    this.outLen = this.hash.outSize;
    this.minEntropy = options.minEntropy || this.hash.hmacStrength;
    this._reseed = null;
    this.reseedInterval = null;
    this.K = null;
    this.V = null;
    var entropy = utils_12.toArray(options.entropy, options.entropyEnc || "hex");
    var nonce = utils_12.toArray(options.nonce, options.nonceEnc || "hex");
    var pers = utils_12.toArray(options.pers, options.persEnc || "hex");
    minimalisticAssert2(
      entropy.length >= this.minEntropy / 8,
      "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
    );
    this._init(entropy, nonce, pers);
  }
  var hmacDrbg2 = HmacDRBG2;
  HmacDRBG2.prototype._init = function init2(entropy, nonce, pers) {
    var seed = entropy.concat(nonce).concat(pers);
    this.K = new Array(this.outLen / 8);
    this.V = new Array(this.outLen / 8);
    for (var i = 0; i < this.V.length; i++) {
      this.K[i] = 0;
      this.V[i] = 1;
    }
    this._update(seed);
    this._reseed = 1;
    this.reseedInterval = 281474976710656;
  };
  HmacDRBG2.prototype._hmac = function hmac2() {
    return new import_hash4.default.hmac(this.hash, this.K);
  };
  HmacDRBG2.prototype._update = function update2(seed) {
    var kmac = this._hmac().update(this.V).update([0]);
    if (seed)
      kmac = kmac.update(seed);
    this.K = kmac.digest();
    this.V = this._hmac().update(this.V).digest();
    if (!seed)
      return;
    this.K = this._hmac().update(this.V).update([1]).update(seed).digest();
    this.V = this._hmac().update(this.V).digest();
  };
  HmacDRBG2.prototype.reseed = function reseed2(entropy, entropyEnc, add5, addEnc) {
    if (typeof entropyEnc !== "string") {
      addEnc = add5;
      add5 = entropyEnc;
      entropyEnc = null;
    }
    entropy = utils_12.toArray(entropy, entropyEnc);
    add5 = utils_12.toArray(add5, addEnc);
    minimalisticAssert2(
      entropy.length >= this.minEntropy / 8,
      "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
    );
    this._update(entropy.concat(add5 || []));
    this._reseed = 1;
  };
  HmacDRBG2.prototype.generate = function generate2(len, enc, add5, addEnc) {
    if (this._reseed > this.reseedInterval)
      throw new Error("Reseed is required");
    if (typeof enc !== "string") {
      addEnc = add5;
      add5 = enc;
      enc = null;
    }
    if (add5) {
      add5 = utils_12.toArray(add5, addEnc || "hex");
      this._update(add5);
    }
    var temp = [];
    while (temp.length < len) {
      this.V = this._hmac().update(this.V).digest();
      temp = temp.concat(this.V);
    }
    var res = temp.slice(0, len);
    this._update(add5);
    this._reseed++;
    return utils_12.encode(res, enc);
  };
  var assert$32 = utils_1$12.assert;
  function KeyPair2(ec3, options) {
    this.ec = ec3;
    this.priv = null;
    this.pub = null;
    if (options.priv)
      this._importPrivate(options.priv, options.privEnc);
    if (options.pub)
      this._importPublic(options.pub, options.pubEnc);
  }
  var key2 = KeyPair2;
  KeyPair2.fromPublic = function fromPublic2(ec3, pub, enc) {
    if (pub instanceof KeyPair2)
      return pub;
    return new KeyPair2(ec3, {
      pub,
      pubEnc: enc
    });
  };
  KeyPair2.fromPrivate = function fromPrivate2(ec3, priv, enc) {
    if (priv instanceof KeyPair2)
      return priv;
    return new KeyPair2(ec3, {
      priv,
      privEnc: enc
    });
  };
  KeyPair2.prototype.validate = function validate8() {
    var pub = this.getPublic();
    if (pub.isInfinity())
      return { result: false, reason: "Invalid public key" };
    if (!pub.validate())
      return { result: false, reason: "Public key is not a point" };
    if (!pub.mul(this.ec.curve.n).isInfinity())
      return { result: false, reason: "Public key * N != O" };
    return { result: true, reason: null };
  };
  KeyPair2.prototype.getPublic = function getPublic2(compact, enc) {
    if (typeof compact === "string") {
      enc = compact;
      compact = null;
    }
    if (!this.pub)
      this.pub = this.ec.g.mul(this.priv);
    if (!enc)
      return this.pub;
    return this.pub.encode(enc, compact);
  };
  KeyPair2.prototype.getPrivate = function getPrivate2(enc) {
    if (enc === "hex")
      return this.priv.toString(16, 2);
    else
      return this.priv;
  };
  KeyPair2.prototype._importPrivate = function _importPrivate2(key3, enc) {
    this.priv = new import_bn4.default(key3, enc || 16);
    this.priv = this.priv.umod(this.ec.curve.n);
  };
  KeyPair2.prototype._importPublic = function _importPublic2(key3, enc) {
    if (key3.x || key3.y) {
      if (this.ec.curve.type === "mont") {
        assert$32(key3.x, "Need x coordinate");
      } else if (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") {
        assert$32(key3.x && key3.y, "Need both x and y coordinate");
      }
      this.pub = this.ec.curve.point(key3.x, key3.y);
      return;
    }
    this.pub = this.ec.curve.decodePoint(key3, enc);
  };
  KeyPair2.prototype.derive = function derive2(pub) {
    if (!pub.validate()) {
      assert$32(pub.validate(), "public point not validated");
    }
    return pub.mul(this.priv).getX();
  };
  KeyPair2.prototype.sign = function sign3(msg, enc, options) {
    return this.ec.sign(msg, this, enc, options);
  };
  KeyPair2.prototype.verify = function verify3(msg, signature3) {
    return this.ec.verify(msg, signature3, this);
  };
  KeyPair2.prototype.inspect = function inspect6() {
    return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
  };
  var assert$42 = utils_1$12.assert;
  function Signature2(options, enc) {
    if (options instanceof Signature2)
      return options;
    if (this._importDER(options, enc))
      return;
    assert$42(options.r && options.s, "Signature without r or s");
    this.r = new import_bn4.default(options.r, 16);
    this.s = new import_bn4.default(options.s, 16);
    if (options.recoveryParam === void 0)
      this.recoveryParam = null;
    else
      this.recoveryParam = options.recoveryParam;
  }
  var signature2 = Signature2;
  function Position2() {
    this.place = 0;
  }
  function getLength2(buf, p) {
    var initial = buf[p.place++];
    if (!(initial & 128)) {
      return initial;
    }
    var octetLen = initial & 15;
    if (octetLen === 0 || octetLen > 4) {
      return false;
    }
    var val = 0;
    for (var i = 0, off = p.place; i < octetLen; i++, off++) {
      val <<= 8;
      val |= buf[off];
      val >>>= 0;
    }
    if (val <= 127) {
      return false;
    }
    p.place = off;
    return val;
  }
  function rmPadding2(buf) {
    var i = 0;
    var len = buf.length - 1;
    while (!buf[i] && !(buf[i + 1] & 128) && i < len) {
      i++;
    }
    if (i === 0) {
      return buf;
    }
    return buf.slice(i);
  }
  Signature2.prototype._importDER = function _importDER2(data, enc) {
    data = utils_1$12.toArray(data, enc);
    var p = new Position2();
    if (data[p.place++] !== 48) {
      return false;
    }
    var len = getLength2(data, p);
    if (len === false) {
      return false;
    }
    if (len + p.place !== data.length) {
      return false;
    }
    if (data[p.place++] !== 2) {
      return false;
    }
    var rlen = getLength2(data, p);
    if (rlen === false) {
      return false;
    }
    var r3 = data.slice(p.place, rlen + p.place);
    p.place += rlen;
    if (data[p.place++] !== 2) {
      return false;
    }
    var slen = getLength2(data, p);
    if (slen === false) {
      return false;
    }
    if (data.length !== slen + p.place) {
      return false;
    }
    var s = data.slice(p.place, slen + p.place);
    if (r3[0] === 0) {
      if (r3[1] & 128) {
        r3 = r3.slice(1);
      } else {
        return false;
      }
    }
    if (s[0] === 0) {
      if (s[1] & 128) {
        s = s.slice(1);
      } else {
        return false;
      }
    }
    this.r = new import_bn4.default(r3);
    this.s = new import_bn4.default(s);
    this.recoveryParam = null;
    return true;
  };
  function constructLength2(arr, len) {
    if (len < 128) {
      arr.push(len);
      return;
    }
    var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
    arr.push(octets | 128);
    while (--octets) {
      arr.push(len >>> (octets << 3) & 255);
    }
    arr.push(len);
  }
  Signature2.prototype.toDER = function toDER2(enc) {
    var r3 = this.r.toArray();
    var s = this.s.toArray();
    if (r3[0] & 128)
      r3 = [0].concat(r3);
    if (s[0] & 128)
      s = [0].concat(s);
    r3 = rmPadding2(r3);
    s = rmPadding2(s);
    while (!s[0] && !(s[1] & 128)) {
      s = s.slice(1);
    }
    var arr = [2];
    constructLength2(arr, r3.length);
    arr = arr.concat(r3);
    arr.push(2);
    constructLength2(arr, s.length);
    var backHalf = arr.concat(s);
    var res = [48];
    constructLength2(res, backHalf.length);
    res = res.concat(backHalf);
    return utils_1$12.encode(res, enc);
  };
  var rand2 = (
    /*RicMoo:ethers:require(brorand)*/
    function() {
      throw new Error("unsupported");
    }
  );
  var assert$52 = utils_1$12.assert;
  function EC2(options) {
    if (!(this instanceof EC2))
      return new EC2(options);
    if (typeof options === "string") {
      assert$52(
        Object.prototype.hasOwnProperty.call(curves_12, options),
        "Unknown curve " + options
      );
      options = curves_12[options];
    }
    if (options instanceof curves_12.PresetCurve)
      options = { curve: options };
    this.curve = options.curve.curve;
    this.n = this.curve.n;
    this.nh = this.n.ushrn(1);
    this.g = this.curve.g;
    this.g = options.curve.g;
    this.g.precompute(options.curve.n.bitLength() + 1);
    this.hash = options.hash || options.curve.hash;
  }
  var ec2 = EC2;
  EC2.prototype.keyPair = function keyPair2(options) {
    return new key2(this, options);
  };
  EC2.prototype.keyFromPrivate = function keyFromPrivate2(priv, enc) {
    return key2.fromPrivate(this, priv, enc);
  };
  EC2.prototype.keyFromPublic = function keyFromPublic2(pub, enc) {
    return key2.fromPublic(this, pub, enc);
  };
  EC2.prototype.genKeyPair = function genKeyPair2(options) {
    if (!options)
      options = {};
    var drbg = new hmacDrbg2({
      hash: this.hash,
      pers: options.pers,
      persEnc: options.persEnc || "utf8",
      entropy: options.entropy || rand2(this.hash.hmacStrength),
      entropyEnc: options.entropy && options.entropyEnc || "utf8",
      nonce: this.n.toArray()
    });
    var bytes = this.n.byteLength();
    var ns2 = this.n.sub(new import_bn4.default(2));
    for (; ; ) {
      var priv = new import_bn4.default(drbg.generate(bytes));
      if (priv.cmp(ns2) > 0)
        continue;
      priv.iaddn(1);
      return this.keyFromPrivate(priv);
    }
  };
  EC2.prototype._truncateToN = function _truncateToN2(msg, truncOnly) {
    var delta = msg.byteLength() * 8 - this.n.bitLength();
    if (delta > 0)
      msg = msg.ushrn(delta);
    if (!truncOnly && msg.cmp(this.n) >= 0)
      return msg.sub(this.n);
    else
      return msg;
  };
  EC2.prototype.sign = function sign4(msg, key3, enc, options) {
    if (typeof enc === "object") {
      options = enc;
      enc = null;
    }
    if (!options)
      options = {};
    key3 = this.keyFromPrivate(key3, enc);
    msg = this._truncateToN(new import_bn4.default(msg, 16));
    var bytes = this.n.byteLength();
    var bkey = key3.getPrivate().toArray("be", bytes);
    var nonce = msg.toArray("be", bytes);
    var drbg = new hmacDrbg2({
      hash: this.hash,
      entropy: bkey,
      nonce,
      pers: options.pers,
      persEnc: options.persEnc || "utf8"
    });
    var ns1 = this.n.sub(new import_bn4.default(1));
    for (var iter = 0; ; iter++) {
      var k = options.k ? options.k(iter) : new import_bn4.default(drbg.generate(this.n.byteLength()));
      k = this._truncateToN(k, true);
      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
        continue;
      var kp = this.g.mul(k);
      if (kp.isInfinity())
        continue;
      var kpX = kp.getX();
      var r3 = kpX.umod(this.n);
      if (r3.cmpn(0) === 0)
        continue;
      var s = k.invm(this.n).mul(r3.mul(key3.getPrivate()).iadd(msg));
      s = s.umod(this.n);
      if (s.cmpn(0) === 0)
        continue;
      var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r3) !== 0 ? 2 : 0);
      if (options.canonical && s.cmp(this.nh) > 0) {
        s = this.n.sub(s);
        recoveryParam ^= 1;
      }
      return new signature2({ r: r3, s, recoveryParam });
    }
  };
  EC2.prototype.verify = function verify4(msg, signature$1, key3, enc) {
    msg = this._truncateToN(new import_bn4.default(msg, 16));
    key3 = this.keyFromPublic(key3, enc);
    signature$1 = new signature2(signature$1, "hex");
    var r3 = signature$1.r;
    var s = signature$1.s;
    if (r3.cmpn(1) < 0 || r3.cmp(this.n) >= 0)
      return false;
    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
      return false;
    var sinv = s.invm(this.n);
    var u1 = sinv.mul(msg).umod(this.n);
    var u2 = sinv.mul(r3).umod(this.n);
    var p;
    if (!this.curve._maxwellTrick) {
      p = this.g.mulAdd(u1, key3.getPublic(), u2);
      if (p.isInfinity())
        return false;
      return p.getX().umod(this.n).cmp(r3) === 0;
    }
    p = this.g.jmulAdd(u1, key3.getPublic(), u2);
    if (p.isInfinity())
      return false;
    return p.eqXToP(r3);
  };
  EC2.prototype.recoverPubKey = function(msg, signature$1, j, enc) {
    assert$52((3 & j) === j, "The recovery param is more than two bits");
    signature$1 = new signature2(signature$1, enc);
    var n = this.n;
    var e = new import_bn4.default(msg);
    var r3 = signature$1.r;
    var s = signature$1.s;
    var isYOdd = j & 1;
    var isSecondKey = j >> 1;
    if (r3.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
      throw new Error("Unable to find sencond key candinate");
    if (isSecondKey)
      r3 = this.curve.pointFromX(r3.add(this.curve.n), isYOdd);
    else
      r3 = this.curve.pointFromX(r3, isYOdd);
    var rInv = signature$1.r.invm(n);
    var s1 = n.sub(e).mul(rInv).umod(n);
    var s2 = s.mul(rInv).umod(n);
    return this.g.mulAdd(s1, r3, s2);
  };
  EC2.prototype.getKeyRecoveryParam = function(e, signature$1, Q, enc) {
    signature$1 = new signature2(signature$1, enc);
    if (signature$1.recoveryParam !== null)
      return signature$1.recoveryParam;
    for (var i = 0; i < 4; i++) {
      var Qprime;
      try {
        Qprime = this.recoverPubKey(e, signature$1, i);
      } catch (e2) {
        continue;
      }
      if (Qprime.eq(Q))
        return i;
    }
    throw new Error("Unable to find valid recovery factor");
  };
  var elliptic_12 = createCommonjsModule2(function(module, exports) {
    "use strict";
    var elliptic = exports;
    elliptic.version = /*RicMoo:ethers*/
    { version: "6.5.4" }.version;
    elliptic.utils = utils_1$12;
    elliptic.rand = /*RicMoo:ethers:require(brorand)*/
    function() {
      throw new Error("unsupported");
    };
    elliptic.curve = curve_12;
    elliptic.curves = curves_12;
    elliptic.ec = ec2;
    elliptic.eddsa = /*RicMoo:ethers:require(./elliptic/eddsa)*/
    null;
  });
  var EC$12 = elliptic_12.ec;

  // node_modules/@ethersproject/signing-key/lib.esm/_version.js
  var version32 = "signing-key/5.7.0";

  // node_modules/@ethersproject/signing-key/lib.esm/index.js
  var logger36 = new Logger2(version32);
  var _curve2 = null;
  function getCurve2() {
    if (!_curve2) {
      _curve2 = new EC$12("secp256k1");
    }
    return _curve2;
  }
  var SigningKey2 = class {
    constructor(privateKey) {
      defineReadOnly2(this, "curve", "secp256k1");
      defineReadOnly2(this, "privateKey", hexlify2(privateKey));
      if (hexDataLength2(this.privateKey) !== 32) {
        logger36.throwArgumentError("invalid private key", "privateKey", "[[ REDACTED ]]");
      }
      const keyPair3 = getCurve2().keyFromPrivate(arrayify2(this.privateKey));
      defineReadOnly2(this, "publicKey", "0x" + keyPair3.getPublic(false, "hex"));
      defineReadOnly2(this, "compressedPublicKey", "0x" + keyPair3.getPublic(true, "hex"));
      defineReadOnly2(this, "_isSigningKey", true);
    }
    _addPoint(other) {
      const p0 = getCurve2().keyFromPublic(arrayify2(this.publicKey));
      const p1 = getCurve2().keyFromPublic(arrayify2(other));
      return "0x" + p0.pub.add(p1.pub).encodeCompressed("hex");
    }
    signDigest(digest) {
      const keyPair3 = getCurve2().keyFromPrivate(arrayify2(this.privateKey));
      const digestBytes = arrayify2(digest);
      if (digestBytes.length !== 32) {
        logger36.throwArgumentError("bad digest length", "digest", digest);
      }
      const signature3 = keyPair3.sign(digestBytes, { canonical: true });
      return splitSignature2({
        recoveryParam: signature3.recoveryParam,
        r: hexZeroPad2("0x" + signature3.r.toString(16), 32),
        s: hexZeroPad2("0x" + signature3.s.toString(16), 32)
      });
    }
    computeSharedSecret(otherKey) {
      const keyPair3 = getCurve2().keyFromPrivate(arrayify2(this.privateKey));
      const otherKeyPair = getCurve2().keyFromPublic(arrayify2(computePublicKey2(otherKey)));
      return hexZeroPad2("0x" + keyPair3.derive(otherKeyPair.getPublic()).toString(16), 32);
    }
    static isSigningKey(value) {
      return !!(value && value._isSigningKey);
    }
  };
  function recoverPublicKey2(digest, signature3) {
    const sig = splitSignature2(signature3);
    const rs = { r: arrayify2(sig.r), s: arrayify2(sig.s) };
    return "0x" + getCurve2().recoverPubKey(arrayify2(digest), rs, sig.recoveryParam).encode("hex", false);
  }
  function computePublicKey2(key3, compressed) {
    const bytes = arrayify2(key3);
    if (bytes.length === 32) {
      const signingKey = new SigningKey2(bytes);
      if (compressed) {
        return "0x" + getCurve2().keyFromPrivate(bytes).getPublic(true, "hex");
      }
      return signingKey.publicKey;
    } else if (bytes.length === 33) {
      if (compressed) {
        return hexlify2(bytes);
      }
      return "0x" + getCurve2().keyFromPublic(bytes).getPublic(false, "hex");
    } else if (bytes.length === 65) {
      if (!compressed) {
        return hexlify2(bytes);
      }
      return "0x" + getCurve2().keyFromPublic(bytes).getPublic(true, "hex");
    }
    return logger36.throwArgumentError("invalid public or private key", "key", "[REDACTED]");
  }

  // node_modules/@ethersproject/transactions/lib.esm/_version.js
  var version33 = "transactions/5.7.0";

  // node_modules/@ethersproject/transactions/lib.esm/index.js
  var logger37 = new Logger2(version33);
  var TransactionTypes2;
  (function(TransactionTypes3) {
    TransactionTypes3[TransactionTypes3["legacy"] = 0] = "legacy";
    TransactionTypes3[TransactionTypes3["eip2930"] = 1] = "eip2930";
    TransactionTypes3[TransactionTypes3["eip1559"] = 2] = "eip1559";
  })(TransactionTypes2 || (TransactionTypes2 = {}));
  function handleAddress2(value) {
    if (value === "0x") {
      return null;
    }
    return getAddress2(value);
  }
  function handleNumber2(value) {
    if (value === "0x") {
      return Zero4;
    }
    return BigNumber2.from(value);
  }
  var transactionFields = [
    { name: "nonce", maxLength: 32, numeric: true },
    { name: "gasPrice", maxLength: 32, numeric: true },
    { name: "gasLimit", maxLength: 32, numeric: true },
    { name: "to", length: 20 },
    { name: "value", maxLength: 32, numeric: true },
    { name: "data" }
  ];
  var allowedTransactionKeys4 = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    type: true,
    value: true
  };
  function computeAddress2(key3) {
    const publicKey = computePublicKey2(key3);
    return getAddress2(hexDataSlice2(keccak2562(hexDataSlice2(publicKey, 1)), 12));
  }
  function recoverAddress2(digest, signature3) {
    return computeAddress2(recoverPublicKey2(arrayify2(digest), signature3));
  }
  function formatNumber2(value, name) {
    const result = stripZeros2(BigNumber2.from(value).toHexString());
    if (result.length > 32) {
      logger37.throwArgumentError("invalid length for " + name, "transaction:" + name, value);
    }
    return result;
  }
  function accessSetify2(addr, storageKeys) {
    return {
      address: getAddress2(addr),
      storageKeys: (storageKeys || []).map((storageKey, index2) => {
        if (hexDataLength2(storageKey) !== 32) {
          logger37.throwArgumentError("invalid access list storageKey", `accessList[${addr}:${index2}]`, storageKey);
        }
        return storageKey.toLowerCase();
      })
    };
  }
  function accessListify2(value) {
    if (Array.isArray(value)) {
      return value.map((set, index2) => {
        if (Array.isArray(set)) {
          if (set.length > 2) {
            logger37.throwArgumentError("access list expected to be [ address, storageKeys[] ]", `value[${index2}]`, set);
          }
          return accessSetify2(set[0], set[1]);
        }
        return accessSetify2(set.address, set.storageKeys);
      });
    }
    const result = Object.keys(value).map((addr) => {
      const storageKeys = value[addr].reduce((accum, storageKey) => {
        accum[storageKey] = true;
        return accum;
      }, {});
      return accessSetify2(addr, Object.keys(storageKeys).sort());
    });
    result.sort((a, b) => a.address.localeCompare(b.address));
    return result;
  }
  function formatAccessList2(value) {
    return accessListify2(value).map((set) => [set.address, set.storageKeys]);
  }
  function _serializeEip15592(transaction, signature3) {
    if (transaction.gasPrice != null) {
      const gasPrice = BigNumber2.from(transaction.gasPrice);
      const maxFeePerGas = BigNumber2.from(transaction.maxFeePerGas || 0);
      if (!gasPrice.eq(maxFeePerGas)) {
        logger37.throwArgumentError("mismatch EIP-1559 gasPrice != maxFeePerGas", "tx", {
          gasPrice,
          maxFeePerGas
        });
      }
    }
    const fields = [
      formatNumber2(transaction.chainId || 0, "chainId"),
      formatNumber2(transaction.nonce || 0, "nonce"),
      formatNumber2(transaction.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
      formatNumber2(transaction.maxFeePerGas || 0, "maxFeePerGas"),
      formatNumber2(transaction.gasLimit || 0, "gasLimit"),
      transaction.to != null ? getAddress2(transaction.to) : "0x",
      formatNumber2(transaction.value || 0, "value"),
      transaction.data || "0x",
      formatAccessList2(transaction.accessList || [])
    ];
    if (signature3) {
      const sig = splitSignature2(signature3);
      fields.push(formatNumber2(sig.recoveryParam, "recoveryParam"));
      fields.push(stripZeros2(sig.r));
      fields.push(stripZeros2(sig.s));
    }
    return hexConcat2(["0x02", encode6(fields)]);
  }
  function _serializeEip29302(transaction, signature3) {
    const fields = [
      formatNumber2(transaction.chainId || 0, "chainId"),
      formatNumber2(transaction.nonce || 0, "nonce"),
      formatNumber2(transaction.gasPrice || 0, "gasPrice"),
      formatNumber2(transaction.gasLimit || 0, "gasLimit"),
      transaction.to != null ? getAddress2(transaction.to) : "0x",
      formatNumber2(transaction.value || 0, "value"),
      transaction.data || "0x",
      formatAccessList2(transaction.accessList || [])
    ];
    if (signature3) {
      const sig = splitSignature2(signature3);
      fields.push(formatNumber2(sig.recoveryParam, "recoveryParam"));
      fields.push(stripZeros2(sig.r));
      fields.push(stripZeros2(sig.s));
    }
    return hexConcat2(["0x01", encode6(fields)]);
  }
  function _serialize(transaction, signature3) {
    checkProperties2(transaction, allowedTransactionKeys4);
    const raw = [];
    transactionFields.forEach(function(fieldInfo) {
      let value = transaction[fieldInfo.name] || [];
      const options = {};
      if (fieldInfo.numeric) {
        options.hexPad = "left";
      }
      value = arrayify2(hexlify2(value, options));
      if (fieldInfo.length && value.length !== fieldInfo.length && value.length > 0) {
        logger37.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
      }
      if (fieldInfo.maxLength) {
        value = stripZeros2(value);
        if (value.length > fieldInfo.maxLength) {
          logger37.throwArgumentError("invalid length for " + fieldInfo.name, "transaction:" + fieldInfo.name, value);
        }
      }
      raw.push(hexlify2(value));
    });
    let chainId = 0;
    if (transaction.chainId != null) {
      chainId = transaction.chainId;
      if (typeof chainId !== "number") {
        logger37.throwArgumentError("invalid transaction.chainId", "transaction", transaction);
      }
    } else if (signature3 && !isBytesLike2(signature3) && signature3.v > 28) {
      chainId = Math.floor((signature3.v - 35) / 2);
    }
    if (chainId !== 0) {
      raw.push(hexlify2(chainId));
      raw.push("0x");
      raw.push("0x");
    }
    if (!signature3) {
      return encode6(raw);
    }
    const sig = splitSignature2(signature3);
    let v = 27 + sig.recoveryParam;
    if (chainId !== 0) {
      raw.pop();
      raw.pop();
      raw.pop();
      v += chainId * 2 + 8;
      if (sig.v > 28 && sig.v !== v) {
        logger37.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature3);
      }
    } else if (sig.v !== v) {
      logger37.throwArgumentError("transaction.chainId/signature.v mismatch", "signature", signature3);
    }
    raw.push(hexlify2(v));
    raw.push(stripZeros2(arrayify2(sig.r)));
    raw.push(stripZeros2(arrayify2(sig.s)));
    return encode6(raw);
  }
  function serialize(transaction, signature3) {
    if (transaction.type == null || transaction.type === 0) {
      if (transaction.accessList != null) {
        logger37.throwArgumentError("untyped transactions do not support accessList; include type: 1", "transaction", transaction);
      }
      return _serialize(transaction, signature3);
    }
    switch (transaction.type) {
      case 1:
        return _serializeEip29302(transaction, signature3);
      case 2:
        return _serializeEip15592(transaction, signature3);
      default:
        break;
    }
    return logger37.throwError(`unsupported transaction type: ${transaction.type}`, Logger2.errors.UNSUPPORTED_OPERATION, {
      operation: "serializeTransaction",
      transactionType: transaction.type
    });
  }
  function _parseEipSignature2(tx, fields, serialize3) {
    try {
      const recid = handleNumber2(fields[0]).toNumber();
      if (recid !== 0 && recid !== 1) {
        throw new Error("bad recid");
      }
      tx.v = recid;
    } catch (error) {
      logger37.throwArgumentError("invalid v for transaction type: 1", "v", fields[0]);
    }
    tx.r = hexZeroPad2(fields[1], 32);
    tx.s = hexZeroPad2(fields[2], 32);
    try {
      const digest = keccak2562(serialize3(tx));
      tx.from = recoverAddress2(digest, { r: tx.r, s: tx.s, recoveryParam: tx.v });
    } catch (error) {
    }
  }
  function _parseEip15592(payload) {
    const transaction = decode3(payload.slice(1));
    if (transaction.length !== 9 && transaction.length !== 12) {
      logger37.throwArgumentError("invalid component count for transaction type: 2", "payload", hexlify2(payload));
    }
    const maxPriorityFeePerGas = handleNumber2(transaction[2]);
    const maxFeePerGas = handleNumber2(transaction[3]);
    const tx = {
      type: 2,
      chainId: handleNumber2(transaction[0]).toNumber(),
      nonce: handleNumber2(transaction[1]).toNumber(),
      maxPriorityFeePerGas,
      maxFeePerGas,
      gasPrice: null,
      gasLimit: handleNumber2(transaction[4]),
      to: handleAddress2(transaction[5]),
      value: handleNumber2(transaction[6]),
      data: transaction[7],
      accessList: accessListify2(transaction[8])
    };
    if (transaction.length === 9) {
      return tx;
    }
    tx.hash = keccak2562(payload);
    _parseEipSignature2(tx, transaction.slice(9), _serializeEip15592);
    return tx;
  }
  function _parseEip29302(payload) {
    const transaction = decode3(payload.slice(1));
    if (transaction.length !== 8 && transaction.length !== 11) {
      logger37.throwArgumentError("invalid component count for transaction type: 1", "payload", hexlify2(payload));
    }
    const tx = {
      type: 1,
      chainId: handleNumber2(transaction[0]).toNumber(),
      nonce: handleNumber2(transaction[1]).toNumber(),
      gasPrice: handleNumber2(transaction[2]),
      gasLimit: handleNumber2(transaction[3]),
      to: handleAddress2(transaction[4]),
      value: handleNumber2(transaction[5]),
      data: transaction[6],
      accessList: accessListify2(transaction[7])
    };
    if (transaction.length === 8) {
      return tx;
    }
    tx.hash = keccak2562(payload);
    _parseEipSignature2(tx, transaction.slice(8), _serializeEip29302);
    return tx;
  }
  function _parse2(rawTransaction) {
    const transaction = decode3(rawTransaction);
    if (transaction.length !== 9 && transaction.length !== 6) {
      logger37.throwArgumentError("invalid raw transaction", "rawTransaction", rawTransaction);
    }
    const tx = {
      nonce: handleNumber2(transaction[0]).toNumber(),
      gasPrice: handleNumber2(transaction[1]),
      gasLimit: handleNumber2(transaction[2]),
      to: handleAddress2(transaction[3]),
      value: handleNumber2(transaction[4]),
      data: transaction[5],
      chainId: 0
    };
    if (transaction.length === 6) {
      return tx;
    }
    try {
      tx.v = BigNumber2.from(transaction[6]).toNumber();
    } catch (error) {
      return tx;
    }
    tx.r = hexZeroPad2(transaction[7], 32);
    tx.s = hexZeroPad2(transaction[8], 32);
    if (BigNumber2.from(tx.r).isZero() && BigNumber2.from(tx.s).isZero()) {
      tx.chainId = tx.v;
      tx.v = 0;
    } else {
      tx.chainId = Math.floor((tx.v - 35) / 2);
      if (tx.chainId < 0) {
        tx.chainId = 0;
      }
      let recoveryParam = tx.v - 27;
      const raw = transaction.slice(0, 6);
      if (tx.chainId !== 0) {
        raw.push(hexlify2(tx.chainId));
        raw.push("0x");
        raw.push("0x");
        recoveryParam -= tx.chainId * 2 + 8;
      }
      const digest = keccak2562(encode6(raw));
      try {
        tx.from = recoverAddress2(digest, { r: hexlify2(tx.r), s: hexlify2(tx.s), recoveryParam });
      } catch (error) {
      }
      tx.hash = keccak2562(rawTransaction);
    }
    tx.type = null;
    return tx;
  }
  function parse2(rawTransaction) {
    const payload = arrayify2(rawTransaction);
    if (payload[0] > 127) {
      return _parse2(payload);
    }
    switch (payload[0]) {
      case 1:
        return _parseEip29302(payload);
      case 2:
        return _parseEip15592(payload);
      default:
        break;
    }
    return logger37.throwError(`unsupported transaction type: ${payload[0]}`, Logger2.errors.UNSUPPORTED_OPERATION, {
      operation: "parseTransaction",
      transactionType: payload[0]
    });
  }

  // node_modules/@ethersproject/contracts/lib.esm/_version.js
  var version34 = "contracts/5.7.0";

  // node_modules/@ethersproject/contracts/lib.esm/index.js
  var __awaiter20 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger38 = new Logger2(version34);
  var allowedTransactionKeys5 = {
    chainId: true,
    data: true,
    from: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true,
    customData: true,
    ccipReadEnabled: true
  };
  function resolveName(resolver, nameOrPromise) {
    return __awaiter20(this, void 0, void 0, function* () {
      const name = yield nameOrPromise;
      if (typeof name !== "string") {
        logger38.throwArgumentError("invalid address or ENS name", "name", name);
      }
      try {
        return getAddress2(name);
      } catch (error) {
      }
      if (!resolver) {
        logger38.throwError("a provider or signer is needed to resolve ENS names", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "resolveName"
        });
      }
      const address = yield resolver.resolveName(name);
      if (address == null) {
        logger38.throwArgumentError("resolver or addr is not configured for ENS name", "name", name);
      }
      return address;
    });
  }
  function resolveAddresses(resolver, value, paramType) {
    return __awaiter20(this, void 0, void 0, function* () {
      if (Array.isArray(paramType)) {
        return yield Promise.all(paramType.map((paramType2, index2) => {
          return resolveAddresses(resolver, Array.isArray(value) ? value[index2] : value[paramType2.name], paramType2);
        }));
      }
      if (paramType.type === "address") {
        return yield resolveName(resolver, value);
      }
      if (paramType.type === "tuple") {
        return yield resolveAddresses(resolver, value, paramType.components);
      }
      if (paramType.baseType === "array") {
        if (!Array.isArray(value)) {
          return Promise.reject(logger38.makeError("invalid value for array", Logger2.errors.INVALID_ARGUMENT, {
            argument: "value",
            value
          }));
        }
        return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));
      }
      return value;
    });
  }
  function populateTransaction(contract, fragment, args) {
    return __awaiter20(this, void 0, void 0, function* () {
      let overrides = {};
      if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") {
        overrides = shallowCopy2(args.pop());
      }
      logger38.checkArgumentCount(args.length, fragment.inputs.length, "passed to contract");
      if (contract.signer) {
        if (overrides.from) {
          overrides.from = resolveProperties2({
            override: resolveName(contract.signer, overrides.from),
            signer: contract.signer.getAddress()
          }).then((check) => __awaiter20(this, void 0, void 0, function* () {
            if (getAddress2(check.signer) !== check.override) {
              logger38.throwError("Contract with a Signer cannot override from", Logger2.errors.UNSUPPORTED_OPERATION, {
                operation: "overrides.from"
              });
            }
            return check.override;
          }));
        } else {
          overrides.from = contract.signer.getAddress();
        }
      } else if (overrides.from) {
        overrides.from = resolveName(contract.provider, overrides.from);
      }
      const resolved = yield resolveProperties2({
        args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),
        address: contract.resolvedAddress,
        overrides: resolveProperties2(overrides) || {}
      });
      const data = contract.interface.encodeFunctionData(fragment, resolved.args);
      const tx = {
        data,
        to: resolved.address
      };
      const ro = resolved.overrides;
      if (ro.nonce != null) {
        tx.nonce = BigNumber2.from(ro.nonce).toNumber();
      }
      if (ro.gasLimit != null) {
        tx.gasLimit = BigNumber2.from(ro.gasLimit);
      }
      if (ro.gasPrice != null) {
        tx.gasPrice = BigNumber2.from(ro.gasPrice);
      }
      if (ro.maxFeePerGas != null) {
        tx.maxFeePerGas = BigNumber2.from(ro.maxFeePerGas);
      }
      if (ro.maxPriorityFeePerGas != null) {
        tx.maxPriorityFeePerGas = BigNumber2.from(ro.maxPriorityFeePerGas);
      }
      if (ro.from != null) {
        tx.from = ro.from;
      }
      if (ro.type != null) {
        tx.type = ro.type;
      }
      if (ro.accessList != null) {
        tx.accessList = accessListify2(ro.accessList);
      }
      if (tx.gasLimit == null && fragment.gas != null) {
        let intrinsic = 21e3;
        const bytes = arrayify2(data);
        for (let i = 0; i < bytes.length; i++) {
          intrinsic += 4;
          if (bytes[i]) {
            intrinsic += 64;
          }
        }
        tx.gasLimit = BigNumber2.from(fragment.gas).add(intrinsic);
      }
      if (ro.value) {
        const roValue = BigNumber2.from(ro.value);
        if (!roValue.isZero() && !fragment.payable) {
          logger38.throwError("non-payable method cannot override value", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "overrides.value",
            value: overrides.value
          });
        }
        tx.value = roValue;
      }
      if (ro.customData) {
        tx.customData = shallowCopy2(ro.customData);
      }
      if (ro.ccipReadEnabled) {
        tx.ccipReadEnabled = !!ro.ccipReadEnabled;
      }
      delete overrides.nonce;
      delete overrides.gasLimit;
      delete overrides.gasPrice;
      delete overrides.from;
      delete overrides.value;
      delete overrides.type;
      delete overrides.accessList;
      delete overrides.maxFeePerGas;
      delete overrides.maxPriorityFeePerGas;
      delete overrides.customData;
      delete overrides.ccipReadEnabled;
      const leftovers = Object.keys(overrides).filter((key3) => overrides[key3] != null);
      if (leftovers.length) {
        logger38.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(",")}`, Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "overrides",
          overrides: leftovers
        });
      }
      return tx;
    });
  }
  function buildPopulate(contract, fragment) {
    return function(...args) {
      return populateTransaction(contract, fragment, args);
    };
  }
  function buildEstimate(contract, fragment) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
      return __awaiter20(this, void 0, void 0, function* () {
        if (!signerOrProvider) {
          logger38.throwError("estimate require a provider or signer", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "estimateGas"
          });
        }
        const tx = yield populateTransaction(contract, fragment, args);
        return yield signerOrProvider.estimateGas(tx);
      });
    };
  }
  function addContractWait(contract, tx) {
    const wait = tx.wait.bind(tx);
    tx.wait = (confirmations) => {
      return wait(confirmations).then((receipt) => {
        receipt.events = receipt.logs.map((log) => {
          let event = deepCopy2(log);
          let parsed = null;
          try {
            parsed = contract.interface.parseLog(log);
          } catch (e) {
          }
          if (parsed) {
            event.args = parsed.args;
            event.decode = (data, topics) => {
              return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);
            };
            event.event = parsed.name;
            event.eventSignature = parsed.signature;
          }
          event.removeListener = () => {
            return contract.provider;
          };
          event.getBlock = () => {
            return contract.provider.getBlock(receipt.blockHash);
          };
          event.getTransaction = () => {
            return contract.provider.getTransaction(receipt.transactionHash);
          };
          event.getTransactionReceipt = () => {
            return Promise.resolve(receipt);
          };
          return event;
        });
        return receipt;
      });
    };
  }
  function buildCall(contract, fragment, collapseSimple) {
    const signerOrProvider = contract.signer || contract.provider;
    return function(...args) {
      return __awaiter20(this, void 0, void 0, function* () {
        let blockTag = void 0;
        if (args.length === fragment.inputs.length + 1 && typeof args[args.length - 1] === "object") {
          const overrides = shallowCopy2(args.pop());
          if (overrides.blockTag != null) {
            blockTag = yield overrides.blockTag;
          }
          delete overrides.blockTag;
          args.push(overrides);
        }
        if (contract.deployTransaction != null) {
          yield contract._deployed(blockTag);
        }
        const tx = yield populateTransaction(contract, fragment, args);
        const result = yield signerOrProvider.call(tx, blockTag);
        try {
          let value = contract.interface.decodeFunctionResult(fragment, result);
          if (collapseSimple && fragment.outputs.length === 1) {
            value = value[0];
          }
          return value;
        } catch (error) {
          if (error.code === Logger2.errors.CALL_EXCEPTION) {
            error.address = contract.address;
            error.args = args;
            error.transaction = tx;
          }
          throw error;
        }
      });
    };
  }
  function buildSend(contract, fragment) {
    return function(...args) {
      return __awaiter20(this, void 0, void 0, function* () {
        if (!contract.signer) {
          logger38.throwError("sending a transaction requires a signer", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "sendTransaction"
          });
        }
        if (contract.deployTransaction != null) {
          yield contract._deployed();
        }
        const txRequest = yield populateTransaction(contract, fragment, args);
        const tx = yield contract.signer.sendTransaction(txRequest);
        addContractWait(contract, tx);
        return tx;
      });
    };
  }
  function buildDefault(contract, fragment, collapseSimple) {
    if (fragment.constant) {
      return buildCall(contract, fragment, collapseSimple);
    }
    return buildSend(contract, fragment);
  }
  function getEventTag2(filter2) {
    if (filter2.address && (filter2.topics == null || filter2.topics.length === 0)) {
      return "*";
    }
    return (filter2.address || "*") + "@" + (filter2.topics ? filter2.topics.map((topic) => {
      if (Array.isArray(topic)) {
        return topic.join("|");
      }
      return topic;
    }).join(":") : "");
  }
  var RunningEvent = class {
    constructor(tag, filter2) {
      defineReadOnly2(this, "tag", tag);
      defineReadOnly2(this, "filter", filter2);
      this._listeners = [];
    }
    addListener(listener, once) {
      this._listeners.push({ listener, once });
    }
    removeListener(listener) {
      let done = false;
      this._listeners = this._listeners.filter((item) => {
        if (done || item.listener !== listener) {
          return true;
        }
        done = true;
        return false;
      });
    }
    removeAllListeners() {
      this._listeners = [];
    }
    listeners() {
      return this._listeners.map((i) => i.listener);
    }
    listenerCount() {
      return this._listeners.length;
    }
    run(args) {
      const listenerCount = this.listenerCount();
      this._listeners = this._listeners.filter((item) => {
        const argsCopy = args.slice();
        setTimeout(() => {
          item.listener.apply(this, argsCopy);
        }, 0);
        return !item.once;
      });
      return listenerCount;
    }
    prepareEvent(event) {
    }
    // Returns the array that will be applied to an emit
    getEmit(event) {
      return [event];
    }
  };
  var ErrorRunningEvent = class extends RunningEvent {
    constructor() {
      super("error", null);
    }
  };
  var FragmentRunningEvent = class extends RunningEvent {
    constructor(address, contractInterface, fragment, topics) {
      const filter2 = {
        address
      };
      let topic = contractInterface.getEventTopic(fragment);
      if (topics) {
        if (topic !== topics[0]) {
          logger38.throwArgumentError("topic mismatch", "topics", topics);
        }
        filter2.topics = topics.slice();
      } else {
        filter2.topics = [topic];
      }
      super(getEventTag2(filter2), filter2);
      defineReadOnly2(this, "address", address);
      defineReadOnly2(this, "interface", contractInterface);
      defineReadOnly2(this, "fragment", fragment);
    }
    prepareEvent(event) {
      super.prepareEvent(event);
      event.event = this.fragment.name;
      event.eventSignature = this.fragment.format();
      event.decode = (data, topics) => {
        return this.interface.decodeEventLog(this.fragment, data, topics);
      };
      try {
        event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);
      } catch (error) {
        event.args = null;
        event.decodeError = error;
      }
    }
    getEmit(event) {
      const errors = checkResultErrors(event.args);
      if (errors.length) {
        throw errors[0].error;
      }
      const args = (event.args || []).slice();
      args.push(event);
      return args;
    }
  };
  var WildcardRunningEvent = class extends RunningEvent {
    constructor(address, contractInterface) {
      super("*", { address });
      defineReadOnly2(this, "address", address);
      defineReadOnly2(this, "interface", contractInterface);
    }
    prepareEvent(event) {
      super.prepareEvent(event);
      try {
        const parsed = this.interface.parseLog(event);
        event.event = parsed.name;
        event.eventSignature = parsed.signature;
        event.decode = (data, topics) => {
          return this.interface.decodeEventLog(parsed.eventFragment, data, topics);
        };
        event.args = parsed.args;
      } catch (error) {
      }
    }
  };
  var BaseContract = class {
    constructor(addressOrName, contractInterface, signerOrProvider) {
      defineReadOnly2(this, "interface", getStatic2(new.target, "getInterface")(contractInterface));
      if (signerOrProvider == null) {
        defineReadOnly2(this, "provider", null);
        defineReadOnly2(this, "signer", null);
      } else if (Signer2.isSigner(signerOrProvider)) {
        defineReadOnly2(this, "provider", signerOrProvider.provider || null);
        defineReadOnly2(this, "signer", signerOrProvider);
      } else if (Provider2.isProvider(signerOrProvider)) {
        defineReadOnly2(this, "provider", signerOrProvider);
        defineReadOnly2(this, "signer", null);
      } else {
        logger38.throwArgumentError("invalid signer or provider", "signerOrProvider", signerOrProvider);
      }
      defineReadOnly2(this, "callStatic", {});
      defineReadOnly2(this, "estimateGas", {});
      defineReadOnly2(this, "functions", {});
      defineReadOnly2(this, "populateTransaction", {});
      defineReadOnly2(this, "filters", {});
      {
        const uniqueFilters = {};
        Object.keys(this.interface.events).forEach((eventSignature) => {
          const event = this.interface.events[eventSignature];
          defineReadOnly2(this.filters, eventSignature, (...args) => {
            return {
              address: this.address,
              topics: this.interface.encodeFilterTopics(event, args)
            };
          });
          if (!uniqueFilters[event.name]) {
            uniqueFilters[event.name] = [];
          }
          uniqueFilters[event.name].push(eventSignature);
        });
        Object.keys(uniqueFilters).forEach((name) => {
          const filters = uniqueFilters[name];
          if (filters.length === 1) {
            defineReadOnly2(this.filters, name, this.filters[filters[0]]);
          } else {
            logger38.warn(`Duplicate definition of ${name} (${filters.join(", ")})`);
          }
        });
      }
      defineReadOnly2(this, "_runningEvents", {});
      defineReadOnly2(this, "_wrappedEmits", {});
      if (addressOrName == null) {
        logger38.throwArgumentError("invalid contract address or ENS name", "addressOrName", addressOrName);
      }
      defineReadOnly2(this, "address", addressOrName);
      if (this.provider) {
        defineReadOnly2(this, "resolvedAddress", resolveName(this.provider, addressOrName));
      } else {
        try {
          defineReadOnly2(this, "resolvedAddress", Promise.resolve(getAddress2(addressOrName)));
        } catch (error) {
          logger38.throwError("provider is required to use ENS name as contract address", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "new Contract"
          });
        }
      }
      this.resolvedAddress.catch((e) => {
      });
      const uniqueNames = {};
      const uniqueSignatures = {};
      Object.keys(this.interface.functions).forEach((signature3) => {
        const fragment = this.interface.functions[signature3];
        if (uniqueSignatures[signature3]) {
          logger38.warn(`Duplicate ABI entry for ${JSON.stringify(signature3)}`);
          return;
        }
        uniqueSignatures[signature3] = true;
        {
          const name = fragment.name;
          if (!uniqueNames[`%${name}`]) {
            uniqueNames[`%${name}`] = [];
          }
          uniqueNames[`%${name}`].push(signature3);
        }
        if (this[signature3] == null) {
          defineReadOnly2(this, signature3, buildDefault(this, fragment, true));
        }
        if (this.functions[signature3] == null) {
          defineReadOnly2(this.functions, signature3, buildDefault(this, fragment, false));
        }
        if (this.callStatic[signature3] == null) {
          defineReadOnly2(this.callStatic, signature3, buildCall(this, fragment, true));
        }
        if (this.populateTransaction[signature3] == null) {
          defineReadOnly2(this.populateTransaction, signature3, buildPopulate(this, fragment));
        }
        if (this.estimateGas[signature3] == null) {
          defineReadOnly2(this.estimateGas, signature3, buildEstimate(this, fragment));
        }
      });
      Object.keys(uniqueNames).forEach((name) => {
        const signatures = uniqueNames[name];
        if (signatures.length > 1) {
          return;
        }
        name = name.substring(1);
        const signature3 = signatures[0];
        try {
          if (this[name] == null) {
            defineReadOnly2(this, name, this[signature3]);
          }
        } catch (e) {
        }
        if (this.functions[name] == null) {
          defineReadOnly2(this.functions, name, this.functions[signature3]);
        }
        if (this.callStatic[name] == null) {
          defineReadOnly2(this.callStatic, name, this.callStatic[signature3]);
        }
        if (this.populateTransaction[name] == null) {
          defineReadOnly2(this.populateTransaction, name, this.populateTransaction[signature3]);
        }
        if (this.estimateGas[name] == null) {
          defineReadOnly2(this.estimateGas, name, this.estimateGas[signature3]);
        }
      });
    }
    static getContractAddress(transaction) {
      return getContractAddress2(transaction);
    }
    static getInterface(contractInterface) {
      if (Interface.isInterface(contractInterface)) {
        return contractInterface;
      }
      return new Interface(contractInterface);
    }
    // @TODO: Allow timeout?
    deployed() {
      return this._deployed();
    }
    _deployed(blockTag) {
      if (!this._deployedPromise) {
        if (this.deployTransaction) {
          this._deployedPromise = this.deployTransaction.wait().then(() => {
            return this;
          });
        } else {
          this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {
            if (code === "0x") {
              logger38.throwError("contract not deployed", Logger2.errors.UNSUPPORTED_OPERATION, {
                contractAddress: this.address,
                operation: "getDeployed"
              });
            }
            return this;
          });
        }
      }
      return this._deployedPromise;
    }
    // @TODO:
    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>
    // @TODO:
    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>
    fallback(overrides) {
      if (!this.signer) {
        logger38.throwError("sending a transactions require a signer", Logger2.errors.UNSUPPORTED_OPERATION, { operation: "sendTransaction(fallback)" });
      }
      const tx = shallowCopy2(overrides || {});
      ["from", "to"].forEach(function(key3) {
        if (tx[key3] == null) {
          return;
        }
        logger38.throwError("cannot override " + key3, Logger2.errors.UNSUPPORTED_OPERATION, { operation: key3 });
      });
      tx.to = this.resolvedAddress;
      return this.deployed().then(() => {
        return this.signer.sendTransaction(tx);
      });
    }
    // Reconnect to a different signer or provider
    connect(signerOrProvider) {
      if (typeof signerOrProvider === "string") {
        signerOrProvider = new VoidSigner(signerOrProvider, this.provider);
      }
      const contract = new this.constructor(this.address, this.interface, signerOrProvider);
      if (this.deployTransaction) {
        defineReadOnly2(contract, "deployTransaction", this.deployTransaction);
      }
      return contract;
    }
    // Re-attach to a different on-chain instance of this contract
    attach(addressOrName) {
      return new this.constructor(addressOrName, this.interface, this.signer || this.provider);
    }
    static isIndexed(value) {
      return Indexed.isIndexed(value);
    }
    _normalizeRunningEvent(runningEvent) {
      if (this._runningEvents[runningEvent.tag]) {
        return this._runningEvents[runningEvent.tag];
      }
      return runningEvent;
    }
    _getRunningEvent(eventName) {
      if (typeof eventName === "string") {
        if (eventName === "error") {
          return this._normalizeRunningEvent(new ErrorRunningEvent());
        }
        if (eventName === "event") {
          return this._normalizeRunningEvent(new RunningEvent("event", null));
        }
        if (eventName === "*") {
          return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
        }
        const fragment = this.interface.getEvent(eventName);
        return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));
      }
      if (eventName.topics && eventName.topics.length > 0) {
        try {
          const topic = eventName.topics[0];
          if (typeof topic !== "string") {
            throw new Error("invalid topic");
          }
          const fragment = this.interface.getEvent(topic);
          return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));
        } catch (error) {
        }
        const filter2 = {
          address: this.address,
          topics: eventName.topics
        };
        return this._normalizeRunningEvent(new RunningEvent(getEventTag2(filter2), filter2));
      }
      return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));
    }
    _checkRunningEvents(runningEvent) {
      if (runningEvent.listenerCount() === 0) {
        delete this._runningEvents[runningEvent.tag];
        const emit = this._wrappedEmits[runningEvent.tag];
        if (emit && runningEvent.filter) {
          this.provider.off(runningEvent.filter, emit);
          delete this._wrappedEmits[runningEvent.tag];
        }
      }
    }
    // Subclasses can override this to gracefully recover
    // from parse errors if they wish
    _wrapEvent(runningEvent, log, listener) {
      const event = deepCopy2(log);
      event.removeListener = () => {
        if (!listener) {
          return;
        }
        runningEvent.removeListener(listener);
        this._checkRunningEvents(runningEvent);
      };
      event.getBlock = () => {
        return this.provider.getBlock(log.blockHash);
      };
      event.getTransaction = () => {
        return this.provider.getTransaction(log.transactionHash);
      };
      event.getTransactionReceipt = () => {
        return this.provider.getTransactionReceipt(log.transactionHash);
      };
      runningEvent.prepareEvent(event);
      return event;
    }
    _addEventListener(runningEvent, listener, once) {
      if (!this.provider) {
        logger38.throwError("events require a provider or a signer with a provider", Logger2.errors.UNSUPPORTED_OPERATION, { operation: "once" });
      }
      runningEvent.addListener(listener, once);
      this._runningEvents[runningEvent.tag] = runningEvent;
      if (!this._wrappedEmits[runningEvent.tag]) {
        const wrappedEmit = (log) => {
          let event = this._wrapEvent(runningEvent, log, listener);
          if (event.decodeError == null) {
            try {
              const args = runningEvent.getEmit(event);
              this.emit(runningEvent.filter, ...args);
            } catch (error) {
              event.decodeError = error.error;
            }
          }
          if (runningEvent.filter != null) {
            this.emit("event", event);
          }
          if (event.decodeError != null) {
            this.emit("error", event.decodeError, event);
          }
        };
        this._wrappedEmits[runningEvent.tag] = wrappedEmit;
        if (runningEvent.filter != null) {
          this.provider.on(runningEvent.filter, wrappedEmit);
        }
      }
    }
    queryFilter(event, fromBlockOrBlockhash, toBlock) {
      const runningEvent = this._getRunningEvent(event);
      const filter2 = shallowCopy2(runningEvent.filter);
      if (typeof fromBlockOrBlockhash === "string" && isHexString2(fromBlockOrBlockhash, 32)) {
        if (toBlock != null) {
          logger38.throwArgumentError("cannot specify toBlock with blockhash", "toBlock", toBlock);
        }
        filter2.blockHash = fromBlockOrBlockhash;
      } else {
        filter2.fromBlock = fromBlockOrBlockhash != null ? fromBlockOrBlockhash : 0;
        filter2.toBlock = toBlock != null ? toBlock : "latest";
      }
      return this.provider.getLogs(filter2).then((logs) => {
        return logs.map((log) => this._wrapEvent(runningEvent, log, null));
      });
    }
    on(event, listener) {
      this._addEventListener(this._getRunningEvent(event), listener, false);
      return this;
    }
    once(event, listener) {
      this._addEventListener(this._getRunningEvent(event), listener, true);
      return this;
    }
    emit(eventName, ...args) {
      if (!this.provider) {
        return false;
      }
      const runningEvent = this._getRunningEvent(eventName);
      const result = runningEvent.run(args) > 0;
      this._checkRunningEvents(runningEvent);
      return result;
    }
    listenerCount(eventName) {
      if (!this.provider) {
        return 0;
      }
      if (eventName == null) {
        return Object.keys(this._runningEvents).reduce((accum, key3) => {
          return accum + this._runningEvents[key3].listenerCount();
        }, 0);
      }
      return this._getRunningEvent(eventName).listenerCount();
    }
    listeners(eventName) {
      if (!this.provider) {
        return [];
      }
      if (eventName == null) {
        const result = [];
        for (let tag in this._runningEvents) {
          this._runningEvents[tag].listeners().forEach((listener) => {
            result.push(listener);
          });
        }
        return result;
      }
      return this._getRunningEvent(eventName).listeners();
    }
    removeAllListeners(eventName) {
      if (!this.provider) {
        return this;
      }
      if (eventName == null) {
        for (const tag in this._runningEvents) {
          const runningEvent2 = this._runningEvents[tag];
          runningEvent2.removeAllListeners();
          this._checkRunningEvents(runningEvent2);
        }
        return this;
      }
      const runningEvent = this._getRunningEvent(eventName);
      runningEvent.removeAllListeners();
      this._checkRunningEvents(runningEvent);
      return this;
    }
    off(eventName, listener) {
      if (!this.provider) {
        return this;
      }
      const runningEvent = this._getRunningEvent(eventName);
      runningEvent.removeListener(listener);
      this._checkRunningEvents(runningEvent);
      return this;
    }
    removeListener(eventName, listener) {
      return this.off(eventName, listener);
    }
  };
  var Contract = class extends BaseContract {
  };
  var ContractFactory = class {
    constructor(contractInterface, bytecode, signer) {
      let bytecodeHex = null;
      if (typeof bytecode === "string") {
        bytecodeHex = bytecode;
      } else if (isBytes2(bytecode)) {
        bytecodeHex = hexlify2(bytecode);
      } else if (bytecode && typeof bytecode.object === "string") {
        bytecodeHex = bytecode.object;
      } else {
        bytecodeHex = "!";
      }
      if (bytecodeHex.substring(0, 2) !== "0x") {
        bytecodeHex = "0x" + bytecodeHex;
      }
      if (!isHexString2(bytecodeHex) || bytecodeHex.length % 2) {
        logger38.throwArgumentError("invalid bytecode", "bytecode", bytecode);
      }
      if (signer && !Signer2.isSigner(signer)) {
        logger38.throwArgumentError("invalid signer", "signer", signer);
      }
      defineReadOnly2(this, "bytecode", bytecodeHex);
      defineReadOnly2(this, "interface", getStatic2(new.target, "getInterface")(contractInterface));
      defineReadOnly2(this, "signer", signer || null);
    }
    // @TODO: Future; rename to populateTransaction?
    getDeployTransaction(...args) {
      let tx = {};
      if (args.length === this.interface.deploy.inputs.length + 1 && typeof args[args.length - 1] === "object") {
        tx = shallowCopy2(args.pop());
        for (const key3 in tx) {
          if (!allowedTransactionKeys5[key3]) {
            throw new Error("unknown transaction override " + key3);
          }
        }
      }
      ["data", "from", "to"].forEach((key3) => {
        if (tx[key3] == null) {
          return;
        }
        logger38.throwError("cannot override " + key3, Logger2.errors.UNSUPPORTED_OPERATION, { operation: key3 });
      });
      if (tx.value) {
        const value = BigNumber2.from(tx.value);
        if (!value.isZero() && !this.interface.deploy.payable) {
          logger38.throwError("non-payable constructor cannot override value", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "overrides.value",
            value: tx.value
          });
        }
      }
      logger38.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
      tx.data = hexlify2(concat2([
        this.bytecode,
        this.interface.encodeDeploy(args)
      ]));
      return tx;
    }
    deploy(...args) {
      return __awaiter20(this, void 0, void 0, function* () {
        let overrides = {};
        if (args.length === this.interface.deploy.inputs.length + 1) {
          overrides = args.pop();
        }
        logger38.checkArgumentCount(args.length, this.interface.deploy.inputs.length, " in Contract constructor");
        const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);
        params.push(overrides);
        const unsignedTx = this.getDeployTransaction(...params);
        const tx = yield this.signer.sendTransaction(unsignedTx);
        const address = getStatic2(this.constructor, "getContractAddress")(tx);
        const contract = getStatic2(this.constructor, "getContract")(address, this.interface, this.signer);
        addContractWait(contract, tx);
        defineReadOnly2(contract, "deployTransaction", tx);
        return contract;
      });
    }
    attach(address) {
      return this.constructor.getContract(address, this.interface, this.signer);
    }
    connect(signer) {
      return new this.constructor(this.interface, this.bytecode, signer);
    }
    static fromSolidity(compilerOutput, signer) {
      if (compilerOutput == null) {
        logger38.throwError("missing compiler output", Logger2.errors.MISSING_ARGUMENT, { argument: "compilerOutput" });
      }
      if (typeof compilerOutput === "string") {
        compilerOutput = JSON.parse(compilerOutput);
      }
      const abi = compilerOutput.abi;
      let bytecode = null;
      if (compilerOutput.bytecode) {
        bytecode = compilerOutput.bytecode;
      } else if (compilerOutput.evm && compilerOutput.evm.bytecode) {
        bytecode = compilerOutput.evm.bytecode;
      }
      return new this(abi, bytecode, signer);
    }
    static getInterface(contractInterface) {
      return Contract.getInterface(contractInterface);
    }
    static getContractAddress(tx) {
      return getContractAddress2(tx);
    }
    static getContract(address, contractInterface, signer) {
      return new Contract(address, contractInterface, signer);
    }
  };

  // node_modules/@ethersproject/basex/lib.esm/index.js
  var BaseX2 = class {
    constructor(alphabet) {
      defineReadOnly2(this, "alphabet", alphabet);
      defineReadOnly2(this, "base", alphabet.length);
      defineReadOnly2(this, "_alphabetMap", {});
      defineReadOnly2(this, "_leader", alphabet.charAt(0));
      for (let i = 0; i < alphabet.length; i++) {
        this._alphabetMap[alphabet.charAt(i)] = i;
      }
    }
    encode(value) {
      let source = arrayify2(value);
      if (source.length === 0) {
        return "";
      }
      let digits = [0];
      for (let i = 0; i < source.length; ++i) {
        let carry = source[i];
        for (let j = 0; j < digits.length; ++j) {
          carry += digits[j] << 8;
          digits[j] = carry % this.base;
          carry = carry / this.base | 0;
        }
        while (carry > 0) {
          digits.push(carry % this.base);
          carry = carry / this.base | 0;
        }
      }
      let string = "";
      for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {
        string += this._leader;
      }
      for (let q = digits.length - 1; q >= 0; --q) {
        string += this.alphabet[digits[q]];
      }
      return string;
    }
    decode(value) {
      if (typeof value !== "string") {
        throw new TypeError("Expected String");
      }
      let bytes = [];
      if (value.length === 0) {
        return new Uint8Array(bytes);
      }
      bytes.push(0);
      for (let i = 0; i < value.length; i++) {
        let byte = this._alphabetMap[value[i]];
        if (byte === void 0) {
          throw new Error("Non-base" + this.base + " character");
        }
        let carry = byte;
        for (let j = 0; j < bytes.length; ++j) {
          carry += bytes[j] * this.base;
          bytes[j] = carry & 255;
          carry >>= 8;
        }
        while (carry > 0) {
          bytes.push(carry & 255);
          carry >>= 8;
        }
      }
      for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {
        bytes.push(0);
      }
      return arrayify2(new Uint8Array(bytes.reverse()));
    }
  };
  var Base322 = new BaseX2("abcdefghijklmnopqrstuvwxyz234567");
  var Base582 = new BaseX2("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");

  // node_modules/@ethersproject/sha2/lib.esm/sha2.js
  var import_hash5 = __toESM(require_hash2());

  // node_modules/@ethersproject/sha2/lib.esm/types.js
  var SupportedAlgorithm;
  (function(SupportedAlgorithm2) {
    SupportedAlgorithm2["sha256"] = "sha256";
    SupportedAlgorithm2["sha512"] = "sha512";
  })(SupportedAlgorithm || (SupportedAlgorithm = {}));

  // node_modules/@ethersproject/sha2/lib.esm/_version.js
  var version35 = "sha2/5.7.0";

  // node_modules/@ethersproject/sha2/lib.esm/sha2.js
  var logger39 = new Logger2(version35);
  function ripemd160(data) {
    return "0x" + import_hash5.default.ripemd160().update(arrayify2(data)).digest("hex");
  }
  function sha2563(data) {
    return "0x" + import_hash5.default.sha256().update(arrayify2(data)).digest("hex");
  }
  function sha512(data) {
    return "0x" + import_hash5.default.sha512().update(arrayify2(data)).digest("hex");
  }
  function computeHmac(algorithm, key3, data) {
    if (!SupportedAlgorithm[algorithm]) {
      logger39.throwError("unsupported algorithm " + algorithm, Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "hmac",
        algorithm
      });
    }
    return "0x" + import_hash5.default.hmac(import_hash5.default[algorithm], arrayify2(key3)).update(arrayify2(data)).digest("hex");
  }

  // node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js
  function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {
    password = arrayify2(password);
    salt = arrayify2(salt);
    let hLen;
    let l = 1;
    const DK = new Uint8Array(keylen);
    const block1 = new Uint8Array(salt.length + 4);
    block1.set(salt);
    let r3;
    let T;
    for (let i = 1; i <= l; i++) {
      block1[salt.length] = i >> 24 & 255;
      block1[salt.length + 1] = i >> 16 & 255;
      block1[salt.length + 2] = i >> 8 & 255;
      block1[salt.length + 3] = i & 255;
      let U = arrayify2(computeHmac(hashAlgorithm, password, block1));
      if (!hLen) {
        hLen = U.length;
        T = new Uint8Array(hLen);
        l = Math.ceil(keylen / hLen);
        r3 = keylen - (l - 1) * hLen;
      }
      T.set(U);
      for (let j = 1; j < iterations; j++) {
        U = arrayify2(computeHmac(hashAlgorithm, password, U));
        for (let k = 0; k < hLen; k++)
          T[k] ^= U[k];
      }
      const destPos = (i - 1) * hLen;
      const len = i === l ? r3 : hLen;
      DK.set(arrayify2(T).slice(0, len), destPos);
    }
    return hexlify2(DK);
  }

  // node_modules/@ethersproject/wordlists/lib.esm/_version.js
  var version36 = "wordlists/5.7.0";

  // node_modules/@ethersproject/wordlists/lib.esm/wordlist.js
  var exportWordlist = false;
  var logger40 = new Logger2(version36);
  var Wordlist = class _Wordlist {
    constructor(locale) {
      logger40.checkAbstract(new.target, _Wordlist);
      defineReadOnly2(this, "locale", locale);
    }
    // Subclasses may override this
    split(mnemonic) {
      return mnemonic.toLowerCase().split(/ +/g);
    }
    // Subclasses may override this
    join(words2) {
      return words2.join(" ");
    }
    static check(wordlist2) {
      const words2 = [];
      for (let i = 0; i < 2048; i++) {
        const word = wordlist2.getWord(i);
        if (i !== wordlist2.getWordIndex(word)) {
          return "0x";
        }
        words2.push(word);
      }
      return id2(words2.join("\n") + "\n");
    }
    static register(lang, name) {
      if (!name) {
        name = lang.locale;
      }
      if (exportWordlist) {
        try {
          const anyGlobal2 = window;
          if (anyGlobal2._ethers && anyGlobal2._ethers.wordlists) {
            if (!anyGlobal2._ethers.wordlists[name]) {
              defineReadOnly2(anyGlobal2._ethers.wordlists, name, lang);
            }
          }
        } catch (error) {
        }
      }
    }
  };

  // node_modules/@ethersproject/wordlists/lib.esm/lang-en.js
  var words = "AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo";
  var wordlist = null;
  function loadWords(lang) {
    if (wordlist != null) {
      return;
    }
    wordlist = words.replace(/([A-Z])/g, " $1").toLowerCase().substring(1).split(" ");
    if (Wordlist.check(lang) !== "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60") {
      wordlist = null;
      throw new Error("BIP39 Wordlist for en (English) FAILED");
    }
  }
  var LangEn = class extends Wordlist {
    constructor() {
      super("en");
    }
    getWord(index2) {
      loadWords(this);
      return wordlist[index2];
    }
    getWordIndex(word) {
      loadWords(this);
      return wordlist.indexOf(word);
    }
  };
  var langEn = new LangEn();
  Wordlist.register(langEn);

  // node_modules/@ethersproject/wordlists/lib.esm/wordlists.js
  var wordlists = {
    en: langEn
  };

  // node_modules/@ethersproject/hdnode/lib.esm/_version.js
  var version37 = "hdnode/5.7.0";

  // node_modules/@ethersproject/hdnode/lib.esm/index.js
  var logger41 = new Logger2(version37);
  var N = BigNumber2.from("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141");
  var MasterSecret = toUtf8Bytes2("Bitcoin seed");
  var HardenedBit = 2147483648;
  function getUpperMask(bits) {
    return (1 << bits) - 1 << 8 - bits;
  }
  function getLowerMask(bits) {
    return (1 << bits) - 1;
  }
  function bytes32(value) {
    return hexZeroPad2(hexlify2(value), 32);
  }
  function base58check(data) {
    return Base582.encode(concat2([data, hexDataSlice2(sha2563(sha2563(data)), 0, 4)]));
  }
  function getWordlist(wordlist2) {
    if (wordlist2 == null) {
      return wordlists["en"];
    }
    if (typeof wordlist2 === "string") {
      const words2 = wordlists[wordlist2];
      if (words2 == null) {
        logger41.throwArgumentError("unknown locale", "wordlist", wordlist2);
      }
      return words2;
    }
    return wordlist2;
  }
  var _constructorGuard6 = {};
  var defaultPath = "m/44'/60'/0'/0/0";
  var HDNode = class _HDNode {
    /**
     *  This constructor should not be called directly.
     *
     *  Please use:
     *   - fromMnemonic
     *   - fromSeed
     */
    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index2, depth, mnemonicOrPath) {
      if (constructorGuard !== _constructorGuard6) {
        throw new Error("HDNode constructor cannot be called directly");
      }
      if (privateKey) {
        const signingKey = new SigningKey2(privateKey);
        defineReadOnly2(this, "privateKey", signingKey.privateKey);
        defineReadOnly2(this, "publicKey", signingKey.compressedPublicKey);
      } else {
        defineReadOnly2(this, "privateKey", null);
        defineReadOnly2(this, "publicKey", hexlify2(publicKey));
      }
      defineReadOnly2(this, "parentFingerprint", parentFingerprint);
      defineReadOnly2(this, "fingerprint", hexDataSlice2(ripemd160(sha2563(this.publicKey)), 0, 4));
      defineReadOnly2(this, "address", computeAddress2(this.publicKey));
      defineReadOnly2(this, "chainCode", chainCode);
      defineReadOnly2(this, "index", index2);
      defineReadOnly2(this, "depth", depth);
      if (mnemonicOrPath == null) {
        defineReadOnly2(this, "mnemonic", null);
        defineReadOnly2(this, "path", null);
      } else if (typeof mnemonicOrPath === "string") {
        defineReadOnly2(this, "mnemonic", null);
        defineReadOnly2(this, "path", mnemonicOrPath);
      } else {
        defineReadOnly2(this, "mnemonic", mnemonicOrPath);
        defineReadOnly2(this, "path", mnemonicOrPath.path);
      }
    }
    get extendedKey() {
      if (this.depth >= 256) {
        throw new Error("Depth too large!");
      }
      return base58check(concat2([
        this.privateKey != null ? "0x0488ADE4" : "0x0488B21E",
        hexlify2(this.depth),
        this.parentFingerprint,
        hexZeroPad2(hexlify2(this.index), 4),
        this.chainCode,
        this.privateKey != null ? concat2(["0x00", this.privateKey]) : this.publicKey
      ]));
    }
    neuter() {
      return new _HDNode(_constructorGuard6, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);
    }
    _derive(index2) {
      if (index2 > 4294967295) {
        throw new Error("invalid index - " + String(index2));
      }
      let path = this.path;
      if (path) {
        path += "/" + (index2 & ~HardenedBit);
      }
      const data = new Uint8Array(37);
      if (index2 & HardenedBit) {
        if (!this.privateKey) {
          throw new Error("cannot derive child of neutered node");
        }
        data.set(arrayify2(this.privateKey), 1);
        if (path) {
          path += "'";
        }
      } else {
        data.set(arrayify2(this.publicKey));
      }
      for (let i = 24; i >= 0; i -= 8) {
        data[33 + (i >> 3)] = index2 >> 24 - i & 255;
      }
      const I = arrayify2(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));
      const IL = I.slice(0, 32);
      const IR = I.slice(32);
      let ki = null;
      let Ki = null;
      if (this.privateKey) {
        ki = bytes32(BigNumber2.from(IL).add(this.privateKey).mod(N));
      } else {
        const ek = new SigningKey2(hexlify2(IL));
        Ki = ek._addPoint(this.publicKey);
      }
      let mnemonicOrPath = path;
      const srcMnemonic = this.mnemonic;
      if (srcMnemonic) {
        mnemonicOrPath = Object.freeze({
          phrase: srcMnemonic.phrase,
          path,
          locale: srcMnemonic.locale || "en"
        });
      }
      return new _HDNode(_constructorGuard6, ki, Ki, this.fingerprint, bytes32(IR), index2, this.depth + 1, mnemonicOrPath);
    }
    derivePath(path) {
      const components = path.split("/");
      if (components.length === 0 || components[0] === "m" && this.depth !== 0) {
        throw new Error("invalid path - " + path);
      }
      if (components[0] === "m") {
        components.shift();
      }
      let result = this;
      for (let i = 0; i < components.length; i++) {
        const component = components[i];
        if (component.match(/^[0-9]+'$/)) {
          const index2 = parseInt(component.substring(0, component.length - 1));
          if (index2 >= HardenedBit) {
            throw new Error("invalid path index - " + component);
          }
          result = result._derive(HardenedBit + index2);
        } else if (component.match(/^[0-9]+$/)) {
          const index2 = parseInt(component);
          if (index2 >= HardenedBit) {
            throw new Error("invalid path index - " + component);
          }
          result = result._derive(index2);
        } else {
          throw new Error("invalid path component - " + component);
        }
      }
      return result;
    }
    static _fromSeed(seed, mnemonic) {
      const seedArray = arrayify2(seed);
      if (seedArray.length < 16 || seedArray.length > 64) {
        throw new Error("invalid seed");
      }
      const I = arrayify2(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));
      return new _HDNode(_constructorGuard6, bytes32(I.slice(0, 32)), null, "0x00000000", bytes32(I.slice(32)), 0, 0, mnemonic);
    }
    static fromMnemonic(mnemonic, password, wordlist2) {
      wordlist2 = getWordlist(wordlist2);
      mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist2), wordlist2);
      return _HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {
        phrase: mnemonic,
        path: "m",
        locale: wordlist2.locale
      });
    }
    static fromSeed(seed) {
      return _HDNode._fromSeed(seed, null);
    }
    static fromExtendedKey(extendedKey) {
      const bytes = Base582.decode(extendedKey);
      if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {
        logger41.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
      }
      const depth = bytes[4];
      const parentFingerprint = hexlify2(bytes.slice(5, 9));
      const index2 = parseInt(hexlify2(bytes.slice(9, 13)).substring(2), 16);
      const chainCode = hexlify2(bytes.slice(13, 45));
      const key3 = bytes.slice(45, 78);
      switch (hexlify2(bytes.slice(0, 4))) {
        case "0x0488b21e":
        case "0x043587cf":
          return new _HDNode(_constructorGuard6, null, hexlify2(key3), parentFingerprint, chainCode, index2, depth, null);
        case "0x0488ade4":
        case "0x04358394 ":
          if (key3[0] !== 0) {
            break;
          }
          return new _HDNode(_constructorGuard6, hexlify2(key3.slice(1)), null, parentFingerprint, chainCode, index2, depth, null);
      }
      return logger41.throwArgumentError("invalid extended key", "extendedKey", "[REDACTED]");
    }
  };
  function mnemonicToSeed(mnemonic, password) {
    if (!password) {
      password = "";
    }
    const salt = toUtf8Bytes2("mnemonic" + password, UnicodeNormalizationForm2.NFKD);
    return pbkdf2(toUtf8Bytes2(mnemonic, UnicodeNormalizationForm2.NFKD), salt, 2048, 64, "sha512");
  }
  function mnemonicToEntropy(mnemonic, wordlist2) {
    wordlist2 = getWordlist(wordlist2);
    logger41.checkNormalize();
    const words2 = wordlist2.split(mnemonic);
    if (words2.length % 3 !== 0) {
      throw new Error("invalid mnemonic");
    }
    const entropy = arrayify2(new Uint8Array(Math.ceil(11 * words2.length / 8)));
    let offset = 0;
    for (let i = 0; i < words2.length; i++) {
      let index2 = wordlist2.getWordIndex(words2[i].normalize("NFKD"));
      if (index2 === -1) {
        throw new Error("invalid mnemonic");
      }
      for (let bit = 0; bit < 11; bit++) {
        if (index2 & 1 << 10 - bit) {
          entropy[offset >> 3] |= 1 << 7 - offset % 8;
        }
        offset++;
      }
    }
    const entropyBits = 32 * words2.length / 3;
    const checksumBits = words2.length / 3;
    const checksumMask = getUpperMask(checksumBits);
    const checksum = arrayify2(sha2563(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;
    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {
      throw new Error("invalid checksum");
    }
    return hexlify2(entropy.slice(0, entropyBits / 8));
  }
  function entropyToMnemonic(entropy, wordlist2) {
    wordlist2 = getWordlist(wordlist2);
    entropy = arrayify2(entropy);
    if (entropy.length % 4 !== 0 || entropy.length < 16 || entropy.length > 32) {
      throw new Error("invalid entropy");
    }
    const indices = [0];
    let remainingBits = 11;
    for (let i = 0; i < entropy.length; i++) {
      if (remainingBits > 8) {
        indices[indices.length - 1] <<= 8;
        indices[indices.length - 1] |= entropy[i];
        remainingBits -= 8;
      } else {
        indices[indices.length - 1] <<= remainingBits;
        indices[indices.length - 1] |= entropy[i] >> 8 - remainingBits;
        indices.push(entropy[i] & getLowerMask(8 - remainingBits));
        remainingBits += 3;
      }
    }
    const checksumBits = entropy.length / 4;
    const checksum = arrayify2(sha2563(entropy))[0] & getUpperMask(checksumBits);
    indices[indices.length - 1] <<= checksumBits;
    indices[indices.length - 1] |= checksum >> 8 - checksumBits;
    return wordlist2.join(indices.map((index2) => wordlist2.getWord(index2)));
  }
  function isValidMnemonic(mnemonic, wordlist2) {
    try {
      mnemonicToEntropy(mnemonic, wordlist2);
      return true;
    } catch (error) {
    }
    return false;
  }
  function getAccountPath(index2) {
    if (typeof index2 !== "number" || index2 < 0 || index2 >= HardenedBit || index2 % 1) {
      logger41.throwArgumentError("invalid account index", "index", index2);
    }
    return `m/44'/60'/${index2}'/0/0`;
  }

  // node_modules/@ethersproject/random/lib.esm/_version.js
  var version38 = "random/5.7.0";

  // node_modules/@ethersproject/random/lib.esm/random.js
  var logger42 = new Logger2(version38);
  function getGlobal2() {
    if (typeof self !== "undefined") {
      return self;
    }
    if (typeof window !== "undefined") {
      return window;
    }
    if (typeof global !== "undefined") {
      return global;
    }
    throw new Error("unable to locate global object");
  }
  var anyGlobal = getGlobal2();
  var crypto2 = anyGlobal.crypto || anyGlobal.msCrypto;
  if (!crypto2 || !crypto2.getRandomValues) {
    logger42.warn("WARNING: Missing strong random number source");
    crypto2 = {
      getRandomValues: function(buffer) {
        return logger42.throwError("no secure random source avaialble", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "crypto.getRandomValues"
        });
      }
    };
  }
  function randomBytes(length) {
    if (length <= 0 || length > 1024 || length % 1 || length != length) {
      logger42.throwArgumentError("invalid length", "length", length);
    }
    const result = new Uint8Array(length);
    crypto2.getRandomValues(result);
    return arrayify2(result);
  }

  // node_modules/@ethersproject/random/lib.esm/shuffle.js
  function shuffled(array) {
    array = array.slice();
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      const tmp = array[i];
      array[i] = array[j];
      array[j] = tmp;
    }
    return array;
  }

  // node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js
  var import_aes_js = __toESM(require_aes_js());

  // node_modules/@ethersproject/json-wallets/lib.esm/_version.js
  var version39 = "json-wallets/5.7.0";

  // node_modules/@ethersproject/json-wallets/lib.esm/utils.js
  function looseArrayify(hexString) {
    if (typeof hexString === "string" && hexString.substring(0, 2) !== "0x") {
      hexString = "0x" + hexString;
    }
    return arrayify2(hexString);
  }
  function zpad(value, length) {
    value = String(value);
    while (value.length < length) {
      value = "0" + value;
    }
    return value;
  }
  function getPassword(password) {
    if (typeof password === "string") {
      return toUtf8Bytes2(password, UnicodeNormalizationForm2.NFKC);
    }
    return arrayify2(password);
  }
  function searchPath(object, path) {
    let currentChild = object;
    const comps = path.toLowerCase().split("/");
    for (let i = 0; i < comps.length; i++) {
      let matchingChild = null;
      for (const key3 in currentChild) {
        if (key3.toLowerCase() === comps[i]) {
          matchingChild = currentChild[key3];
          break;
        }
      }
      if (matchingChild === null) {
        return null;
      }
      currentChild = matchingChild;
    }
    return currentChild;
  }
  function uuidV4(randomBytes2) {
    const bytes = arrayify2(randomBytes2);
    bytes[6] = bytes[6] & 15 | 64;
    bytes[8] = bytes[8] & 63 | 128;
    const value = hexlify2(bytes);
    return [
      value.substring(2, 10),
      value.substring(10, 14),
      value.substring(14, 18),
      value.substring(18, 22),
      value.substring(22, 34)
    ].join("-");
  }

  // node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js
  var logger43 = new Logger2(version39);
  var CrowdsaleAccount = class extends Description2 {
    isCrowdsaleAccount(value) {
      return !!(value && value._isCrowdsaleAccount);
    }
  };
  function decrypt(json, password) {
    const data = JSON.parse(json);
    password = getPassword(password);
    const ethaddr = getAddress2(searchPath(data, "ethaddr"));
    const encseed = looseArrayify(searchPath(data, "encseed"));
    if (!encseed || encseed.length % 16 !== 0) {
      logger43.throwArgumentError("invalid encseed", "json", json);
    }
    const key3 = arrayify2(pbkdf2(password, password, 2e3, 32, "sha256")).slice(0, 16);
    const iv = encseed.slice(0, 16);
    const encryptedSeed = encseed.slice(16);
    const aesCbc = new import_aes_js.default.ModeOfOperation.cbc(key3, iv);
    const seed = import_aes_js.default.padding.pkcs7.strip(arrayify2(aesCbc.decrypt(encryptedSeed)));
    let seedHex = "";
    for (let i = 0; i < seed.length; i++) {
      seedHex += String.fromCharCode(seed[i]);
    }
    const seedHexBytes = toUtf8Bytes2(seedHex);
    const privateKey = keccak2562(seedHexBytes);
    return new CrowdsaleAccount({
      _isCrowdsaleAccount: true,
      address: ethaddr,
      privateKey
    });
  }

  // node_modules/@ethersproject/json-wallets/lib.esm/inspect.js
  function isCrowdsaleWallet(json) {
    let data = null;
    try {
      data = JSON.parse(json);
    } catch (error) {
      return false;
    }
    return data.encseed && data.ethaddr;
  }
  function isKeystoreWallet(json) {
    let data = null;
    try {
      data = JSON.parse(json);
    } catch (error) {
      return false;
    }
    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {
      return false;
    }
    return true;
  }
  function getJsonWalletAddress(json) {
    if (isCrowdsaleWallet(json)) {
      try {
        return getAddress2(JSON.parse(json).ethaddr);
      } catch (error) {
        return null;
      }
    }
    if (isKeystoreWallet(json)) {
      try {
        return getAddress2(JSON.parse(json).address);
      } catch (error) {
        return null;
      }
    }
    return null;
  }

  // node_modules/@ethersproject/json-wallets/lib.esm/keystore.js
  var import_aes_js2 = __toESM(require_aes_js());
  var import_scrypt_js = __toESM(require_scrypt());
  var __awaiter21 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger44 = new Logger2(version39);
  function hasMnemonic(value) {
    return value != null && value.mnemonic && value.mnemonic.phrase;
  }
  var KeystoreAccount = class extends Description2 {
    isKeystoreAccount(value) {
      return !!(value && value._isKeystoreAccount);
    }
  };
  function _decrypt(data, key3, ciphertext) {
    const cipher = searchPath(data, "crypto/cipher");
    if (cipher === "aes-128-ctr") {
      const iv = looseArrayify(searchPath(data, "crypto/cipherparams/iv"));
      const counter = new import_aes_js2.default.Counter(iv);
      const aesCtr = new import_aes_js2.default.ModeOfOperation.ctr(key3, counter);
      return arrayify2(aesCtr.decrypt(ciphertext));
    }
    return null;
  }
  function _getAccount(data, key3) {
    const ciphertext = looseArrayify(searchPath(data, "crypto/ciphertext"));
    const computedMAC = hexlify2(keccak2562(concat2([key3.slice(16, 32), ciphertext]))).substring(2);
    if (computedMAC !== searchPath(data, "crypto/mac").toLowerCase()) {
      throw new Error("invalid password");
    }
    const privateKey = _decrypt(data, key3.slice(0, 16), ciphertext);
    if (!privateKey) {
      logger44.throwError("unsupported cipher", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "decrypt"
      });
    }
    const mnemonicKey = key3.slice(32, 64);
    const address = computeAddress2(privateKey);
    if (data.address) {
      let check = data.address.toLowerCase();
      if (check.substring(0, 2) !== "0x") {
        check = "0x" + check;
      }
      if (getAddress2(check) !== address) {
        throw new Error("address mismatch");
      }
    }
    const account = {
      _isKeystoreAccount: true,
      address,
      privateKey: hexlify2(privateKey)
    };
    if (searchPath(data, "x-ethers/version") === "0.1") {
      const mnemonicCiphertext = looseArrayify(searchPath(data, "x-ethers/mnemonicCiphertext"));
      const mnemonicIv = looseArrayify(searchPath(data, "x-ethers/mnemonicCounter"));
      const mnemonicCounter = new import_aes_js2.default.Counter(mnemonicIv);
      const mnemonicAesCtr = new import_aes_js2.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
      const path = searchPath(data, "x-ethers/path") || defaultPath;
      const locale = searchPath(data, "x-ethers/locale") || "en";
      const entropy = arrayify2(mnemonicAesCtr.decrypt(mnemonicCiphertext));
      try {
        const mnemonic = entropyToMnemonic(entropy, locale);
        const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);
        if (node.privateKey != account.privateKey) {
          throw new Error("mnemonic mismatch");
        }
        account.mnemonic = node.mnemonic;
      } catch (error) {
        if (error.code !== Logger2.errors.INVALID_ARGUMENT || error.argument !== "wordlist") {
          throw error;
        }
      }
    }
    return new KeystoreAccount(account);
  }
  function pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {
    return arrayify2(pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));
  }
  function pbkdf22(passwordBytes, salt, count, dkLen, prfFunc) {
    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));
  }
  function _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {
    const passwordBytes = getPassword(password);
    const kdf = searchPath(data, "crypto/kdf");
    if (kdf && typeof kdf === "string") {
      const throwError = function(name, value) {
        return logger44.throwArgumentError("invalid key-derivation function parameters", name, value);
      };
      if (kdf.toLowerCase() === "scrypt") {
        const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
        const N2 = parseInt(searchPath(data, "crypto/kdfparams/n"));
        const r3 = parseInt(searchPath(data, "crypto/kdfparams/r"));
        const p = parseInt(searchPath(data, "crypto/kdfparams/p"));
        if (!N2 || !r3 || !p) {
          throwError("kdf", kdf);
        }
        if ((N2 & N2 - 1) !== 0) {
          throwError("N", N2);
        }
        const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
        if (dkLen !== 32) {
          throwError("dklen", dkLen);
        }
        return scryptFunc(passwordBytes, salt, N2, r3, p, 64, progressCallback);
      } else if (kdf.toLowerCase() === "pbkdf2") {
        const salt = looseArrayify(searchPath(data, "crypto/kdfparams/salt"));
        let prfFunc = null;
        const prf = searchPath(data, "crypto/kdfparams/prf");
        if (prf === "hmac-sha256") {
          prfFunc = "sha256";
        } else if (prf === "hmac-sha512") {
          prfFunc = "sha512";
        } else {
          throwError("prf", prf);
        }
        const count = parseInt(searchPath(data, "crypto/kdfparams/c"));
        const dkLen = parseInt(searchPath(data, "crypto/kdfparams/dklen"));
        if (dkLen !== 32) {
          throwError("dklen", dkLen);
        }
        return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);
      }
    }
    return logger44.throwArgumentError("unsupported key-derivation function", "kdf", kdf);
  }
  function decryptSync(json, password) {
    const data = JSON.parse(json);
    const key3 = _computeKdfKey(data, password, pbkdf2Sync, import_scrypt_js.default.syncScrypt);
    return _getAccount(data, key3);
  }
  function decrypt2(json, password, progressCallback) {
    return __awaiter21(this, void 0, void 0, function* () {
      const data = JSON.parse(json);
      const key3 = yield _computeKdfKey(data, password, pbkdf22, import_scrypt_js.default.scrypt, progressCallback);
      return _getAccount(data, key3);
    });
  }
  function encrypt(account, password, options, progressCallback) {
    try {
      if (getAddress2(account.address) !== computeAddress2(account.privateKey)) {
        throw new Error("address/privateKey mismatch");
      }
      if (hasMnemonic(account)) {
        const mnemonic = account.mnemonic;
        const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);
        if (node.privateKey != account.privateKey) {
          throw new Error("mnemonic mismatch");
        }
      }
    } catch (e) {
      return Promise.reject(e);
    }
    if (typeof options === "function" && !progressCallback) {
      progressCallback = options;
      options = {};
    }
    if (!options) {
      options = {};
    }
    const privateKey = arrayify2(account.privateKey);
    const passwordBytes = getPassword(password);
    let entropy = null;
    let path = null;
    let locale = null;
    if (hasMnemonic(account)) {
      const srcMnemonic = account.mnemonic;
      entropy = arrayify2(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || "en"));
      path = srcMnemonic.path || defaultPath;
      locale = srcMnemonic.locale || "en";
    }
    let client = options.client;
    if (!client) {
      client = "ethers.js";
    }
    let salt = null;
    if (options.salt) {
      salt = arrayify2(options.salt);
    } else {
      salt = randomBytes(32);
      ;
    }
    let iv = null;
    if (options.iv) {
      iv = arrayify2(options.iv);
      if (iv.length !== 16) {
        throw new Error("invalid iv");
      }
    } else {
      iv = randomBytes(16);
    }
    let uuidRandom = null;
    if (options.uuid) {
      uuidRandom = arrayify2(options.uuid);
      if (uuidRandom.length !== 16) {
        throw new Error("invalid uuid");
      }
    } else {
      uuidRandom = randomBytes(16);
    }
    let N2 = 1 << 17, r3 = 8, p = 1;
    if (options.scrypt) {
      if (options.scrypt.N) {
        N2 = options.scrypt.N;
      }
      if (options.scrypt.r) {
        r3 = options.scrypt.r;
      }
      if (options.scrypt.p) {
        p = options.scrypt.p;
      }
    }
    return import_scrypt_js.default.scrypt(passwordBytes, salt, N2, r3, p, 64, progressCallback).then((key3) => {
      key3 = arrayify2(key3);
      const derivedKey = key3.slice(0, 16);
      const macPrefix = key3.slice(16, 32);
      const mnemonicKey = key3.slice(32, 64);
      const counter = new import_aes_js2.default.Counter(iv);
      const aesCtr = new import_aes_js2.default.ModeOfOperation.ctr(derivedKey, counter);
      const ciphertext = arrayify2(aesCtr.encrypt(privateKey));
      const mac = keccak2562(concat2([macPrefix, ciphertext]));
      const data = {
        address: account.address.substring(2).toLowerCase(),
        id: uuidV4(uuidRandom),
        version: 3,
        crypto: {
          cipher: "aes-128-ctr",
          cipherparams: {
            iv: hexlify2(iv).substring(2)
          },
          ciphertext: hexlify2(ciphertext).substring(2),
          kdf: "scrypt",
          kdfparams: {
            salt: hexlify2(salt).substring(2),
            n: N2,
            dklen: 32,
            p,
            r: r3
          },
          mac: mac.substring(2)
        }
      };
      if (entropy) {
        const mnemonicIv = randomBytes(16);
        const mnemonicCounter = new import_aes_js2.default.Counter(mnemonicIv);
        const mnemonicAesCtr = new import_aes_js2.default.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);
        const mnemonicCiphertext = arrayify2(mnemonicAesCtr.encrypt(entropy));
        const now2 = /* @__PURE__ */ new Date();
        const timestamp = now2.getUTCFullYear() + "-" + zpad(now2.getUTCMonth() + 1, 2) + "-" + zpad(now2.getUTCDate(), 2) + "T" + zpad(now2.getUTCHours(), 2) + "-" + zpad(now2.getUTCMinutes(), 2) + "-" + zpad(now2.getUTCSeconds(), 2) + ".0Z";
        data["x-ethers"] = {
          client,
          gethFilename: "UTC--" + timestamp + "--" + data.address,
          mnemonicCounter: hexlify2(mnemonicIv).substring(2),
          mnemonicCiphertext: hexlify2(mnemonicCiphertext).substring(2),
          path,
          locale,
          version: "0.1"
        };
      }
      return JSON.stringify(data);
    });
  }

  // node_modules/@ethersproject/json-wallets/lib.esm/index.js
  function decryptJsonWallet(json, password, progressCallback) {
    if (isCrowdsaleWallet(json)) {
      if (progressCallback) {
        progressCallback(0);
      }
      const account = decrypt(json, password);
      if (progressCallback) {
        progressCallback(1);
      }
      return Promise.resolve(account);
    }
    if (isKeystoreWallet(json)) {
      return decrypt2(json, password, progressCallback);
    }
    return Promise.reject(new Error("invalid JSON wallet"));
  }
  function decryptJsonWalletSync(json, password) {
    if (isCrowdsaleWallet(json)) {
      return decrypt(json, password);
    }
    if (isKeystoreWallet(json)) {
      return decryptSync(json, password);
    }
    throw new Error("invalid JSON wallet");
  }

  // node_modules/@ethersproject/wallet/lib.esm/_version.js
  var version40 = "wallet/5.7.0";

  // node_modules/@ethersproject/wallet/lib.esm/index.js
  var __awaiter22 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger45 = new Logger2(version40);
  function isAccount(value) {
    return value != null && isHexString2(value.privateKey, 32) && value.address != null;
  }
  function hasMnemonic2(value) {
    const mnemonic = value.mnemonic;
    return mnemonic && mnemonic.phrase;
  }
  var Wallet = class _Wallet extends Signer2 {
    constructor(privateKey, provider) {
      super();
      if (isAccount(privateKey)) {
        const signingKey = new SigningKey2(privateKey.privateKey);
        defineReadOnly2(this, "_signingKey", () => signingKey);
        defineReadOnly2(this, "address", computeAddress2(this.publicKey));
        if (this.address !== getAddress2(privateKey.address)) {
          logger45.throwArgumentError("privateKey/address mismatch", "privateKey", "[REDACTED]");
        }
        if (hasMnemonic2(privateKey)) {
          const srcMnemonic = privateKey.mnemonic;
          defineReadOnly2(this, "_mnemonic", () => ({
            phrase: srcMnemonic.phrase,
            path: srcMnemonic.path || defaultPath,
            locale: srcMnemonic.locale || "en"
          }));
          const mnemonic = this.mnemonic;
          const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);
          if (computeAddress2(node.privateKey) !== this.address) {
            logger45.throwArgumentError("mnemonic/address mismatch", "privateKey", "[REDACTED]");
          }
        } else {
          defineReadOnly2(this, "_mnemonic", () => null);
        }
      } else {
        if (SigningKey2.isSigningKey(privateKey)) {
          if (privateKey.curve !== "secp256k1") {
            logger45.throwArgumentError("unsupported curve; must be secp256k1", "privateKey", "[REDACTED]");
          }
          defineReadOnly2(this, "_signingKey", () => privateKey);
        } else {
          if (typeof privateKey === "string") {
            if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {
              privateKey = "0x" + privateKey;
            }
          }
          const signingKey = new SigningKey2(privateKey);
          defineReadOnly2(this, "_signingKey", () => signingKey);
        }
        defineReadOnly2(this, "_mnemonic", () => null);
        defineReadOnly2(this, "address", computeAddress2(this.publicKey));
      }
      if (provider && !Provider2.isProvider(provider)) {
        logger45.throwArgumentError("invalid provider", "provider", provider);
      }
      defineReadOnly2(this, "provider", provider || null);
    }
    get mnemonic() {
      return this._mnemonic();
    }
    get privateKey() {
      return this._signingKey().privateKey;
    }
    get publicKey() {
      return this._signingKey().publicKey;
    }
    getAddress() {
      return Promise.resolve(this.address);
    }
    connect(provider) {
      return new _Wallet(this, provider);
    }
    signTransaction(transaction) {
      return resolveProperties2(transaction).then((tx) => {
        if (tx.from != null) {
          if (getAddress2(tx.from) !== this.address) {
            logger45.throwArgumentError("transaction from address mismatch", "transaction.from", transaction.from);
          }
          delete tx.from;
        }
        const signature3 = this._signingKey().signDigest(keccak2562(serialize(tx)));
        return serialize(tx, signature3);
      });
    }
    signMessage(message) {
      return __awaiter22(this, void 0, void 0, function* () {
        return joinSignature(this._signingKey().signDigest(hashMessage(message)));
      });
    }
    _signTypedData(domain, types, value) {
      return __awaiter22(this, void 0, void 0, function* () {
        const populated = yield TypedDataEncoder2.resolveNames(domain, types, value, (name) => {
          if (this.provider == null) {
            logger45.throwError("cannot resolve ENS names without a provider", Logger2.errors.UNSUPPORTED_OPERATION, {
              operation: "resolveName",
              value: name
            });
          }
          return this.provider.resolveName(name);
        });
        return joinSignature(this._signingKey().signDigest(TypedDataEncoder2.hash(populated.domain, types, populated.value)));
      });
    }
    encrypt(password, options, progressCallback) {
      if (typeof options === "function" && !progressCallback) {
        progressCallback = options;
        options = {};
      }
      if (progressCallback && typeof progressCallback !== "function") {
        throw new Error("invalid callback");
      }
      if (!options) {
        options = {};
      }
      return encrypt(this, password, options, progressCallback);
    }
    /**
     *  Static methods to create Wallet instances.
     */
    static createRandom(options) {
      let entropy = randomBytes(16);
      if (!options) {
        options = {};
      }
      if (options.extraEntropy) {
        entropy = arrayify2(hexDataSlice2(keccak2562(concat2([entropy, options.extraEntropy])), 0, 16));
      }
      const mnemonic = entropyToMnemonic(entropy, options.locale);
      return _Wallet.fromMnemonic(mnemonic, options.path, options.locale);
    }
    static fromEncryptedJson(json, password, progressCallback) {
      return decryptJsonWallet(json, password, progressCallback).then((account) => {
        return new _Wallet(account);
      });
    }
    static fromEncryptedJsonSync(json, password) {
      return new _Wallet(decryptJsonWalletSync(json, password));
    }
    static fromMnemonic(mnemonic, path, wordlist2) {
      if (!path) {
        path = defaultPath;
      }
      return new _Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist2).derivePath(path));
    }
  };
  function verifyMessage(message, signature3) {
    return recoverAddress2(hashMessage(message), signature3);
  }
  function verifyTypedData(domain, types, value, signature3) {
    return recoverAddress2(TypedDataEncoder2.hash(domain, types, value), signature3);
  }

  // node_modules/@ethersproject/providers/lib.esm/index.js
  var lib_exports4 = {};
  __export(lib_exports4, {
    AlchemyProvider: () => AlchemyProvider,
    AlchemyWebSocketProvider: () => AlchemyWebSocketProvider,
    AnkrProvider: () => AnkrProvider,
    BaseProvider: () => BaseProvider2,
    CloudflareProvider: () => CloudflareProvider,
    EtherscanProvider: () => EtherscanProvider,
    FallbackProvider: () => FallbackProvider,
    Formatter: () => Formatter2,
    InfuraProvider: () => InfuraProvider,
    InfuraWebSocketProvider: () => InfuraWebSocketProvider,
    IpcProvider: () => IpcProvider,
    JsonRpcBatchProvider: () => JsonRpcBatchProvider,
    JsonRpcProvider: () => JsonRpcProvider2,
    JsonRpcSigner: () => JsonRpcSigner2,
    NodesmithProvider: () => NodesmithProvider,
    PocketProvider: () => PocketProvider,
    Provider: () => Provider2,
    Resolver: () => Resolver2,
    StaticJsonRpcProvider: () => StaticJsonRpcProvider,
    UrlJsonRpcProvider: () => UrlJsonRpcProvider,
    Web3Provider: () => Web3Provider,
    WebSocketProvider: () => WebSocketProvider,
    getDefaultProvider: () => getDefaultProvider,
    getNetwork: () => getNetwork2,
    isCommunityResourcable: () => isCommunityResourcable,
    isCommunityResource: () => isCommunityResource,
    showThrottleMessage: () => showThrottleMessage
  });

  // node_modules/@ethersproject/networks/lib.esm/_version.js
  var version41 = "networks/5.7.1";

  // node_modules/@ethersproject/networks/lib.esm/index.js
  var logger46 = new Logger2(version41);
  function isRenetworkable2(value) {
    return value && typeof value.renetwork === "function";
  }
  function ethDefaultProvider2(network) {
    const func = function(providers, options) {
      if (options == null) {
        options = {};
      }
      const providerList = [];
      if (providers.InfuraProvider && options.infura !== "-") {
        try {
          providerList.push(new providers.InfuraProvider(network, options.infura));
        } catch (error) {
        }
      }
      if (providers.EtherscanProvider && options.etherscan !== "-") {
        try {
          providerList.push(new providers.EtherscanProvider(network, options.etherscan));
        } catch (error) {
        }
      }
      if (providers.AlchemyProvider && options.alchemy !== "-") {
        try {
          providerList.push(new providers.AlchemyProvider(network, options.alchemy));
        } catch (error) {
        }
      }
      if (providers.PocketProvider && options.pocket !== "-") {
        const skip = ["goerli", "ropsten", "rinkeby", "sepolia"];
        try {
          const provider = new providers.PocketProvider(network, options.pocket);
          if (provider.network && skip.indexOf(provider.network.name) === -1) {
            providerList.push(provider);
          }
        } catch (error) {
        }
      }
      if (providers.CloudflareProvider && options.cloudflare !== "-") {
        try {
          providerList.push(new providers.CloudflareProvider(network));
        } catch (error) {
        }
      }
      if (providers.AnkrProvider && options.ankr !== "-") {
        try {
          const skip = ["ropsten"];
          const provider = new providers.AnkrProvider(network, options.ankr);
          if (provider.network && skip.indexOf(provider.network.name) === -1) {
            providerList.push(provider);
          }
        } catch (error) {
        }
      }
      if (providerList.length === 0) {
        return null;
      }
      if (providers.FallbackProvider) {
        let quorum = 1;
        if (options.quorum != null) {
          quorum = options.quorum;
        } else if (network === "homestead") {
          quorum = 2;
        }
        return new providers.FallbackProvider(providerList, quorum);
      }
      return providerList[0];
    };
    func.renetwork = function(network2) {
      return ethDefaultProvider2(network2);
    };
    return func;
  }
  function etcDefaultProvider2(url, network) {
    const func = function(providers, options) {
      if (providers.JsonRpcProvider) {
        return new providers.JsonRpcProvider(url, network);
      }
      return null;
    };
    func.renetwork = function(network2) {
      return etcDefaultProvider2(url, network2);
    };
    return func;
  }
  var homestead2 = {
    chainId: 1,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "homestead",
    _defaultProvider: ethDefaultProvider2("homestead")
  };
  var ropsten2 = {
    chainId: 3,
    ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
    name: "ropsten",
    _defaultProvider: ethDefaultProvider2("ropsten")
  };
  var classicMordor2 = {
    chainId: 63,
    name: "classicMordor",
    _defaultProvider: etcDefaultProvider2("https://www.ethercluster.com/mordor", "classicMordor")
  };
  var networks2 = {
    unspecified: { chainId: 0, name: "unspecified" },
    homestead: homestead2,
    mainnet: homestead2,
    morden: { chainId: 2, name: "morden" },
    ropsten: ropsten2,
    testnet: ropsten2,
    rinkeby: {
      chainId: 4,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "rinkeby",
      _defaultProvider: ethDefaultProvider2("rinkeby")
    },
    kovan: {
      chainId: 42,
      name: "kovan",
      _defaultProvider: ethDefaultProvider2("kovan")
    },
    goerli: {
      chainId: 5,
      ensAddress: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
      name: "goerli",
      _defaultProvider: ethDefaultProvider2("goerli")
    },
    kintsugi: { chainId: 1337702, name: "kintsugi" },
    sepolia: {
      chainId: 11155111,
      name: "sepolia",
      _defaultProvider: ethDefaultProvider2("sepolia")
    },
    // ETC (See: #351)
    classic: {
      chainId: 61,
      name: "classic",
      _defaultProvider: etcDefaultProvider2("https://www.ethercluster.com/etc", "classic")
    },
    classicMorden: { chainId: 62, name: "classicMorden" },
    classicMordor: classicMordor2,
    classicTestnet: classicMordor2,
    classicKotti: {
      chainId: 6,
      name: "classicKotti",
      _defaultProvider: etcDefaultProvider2("https://www.ethercluster.com/kotti", "classicKotti")
    },
    xdai: { chainId: 100, name: "xdai" },
    matic: {
      chainId: 137,
      name: "matic",
      _defaultProvider: ethDefaultProvider2("matic")
    },
    maticmum: { chainId: 80001, name: "maticmum" },
    optimism: {
      chainId: 10,
      name: "optimism",
      _defaultProvider: ethDefaultProvider2("optimism")
    },
    "optimism-kovan": { chainId: 69, name: "optimism-kovan" },
    "optimism-goerli": { chainId: 420, name: "optimism-goerli" },
    arbitrum: { chainId: 42161, name: "arbitrum" },
    "arbitrum-rinkeby": { chainId: 421611, name: "arbitrum-rinkeby" },
    "arbitrum-goerli": { chainId: 421613, name: "arbitrum-goerli" },
    bnb: { chainId: 56, name: "bnb" },
    bnbt: { chainId: 97, name: "bnbt" }
  };
  function getNetwork2(network) {
    if (network == null) {
      return null;
    }
    if (typeof network === "number") {
      for (const name in networks2) {
        const standard2 = networks2[name];
        if (standard2.chainId === network) {
          return {
            name: standard2.name,
            chainId: standard2.chainId,
            ensAddress: standard2.ensAddress || null,
            _defaultProvider: standard2._defaultProvider || null
          };
        }
      }
      return {
        chainId: network,
        name: "unknown"
      };
    }
    if (typeof network === "string") {
      const standard2 = networks2[network];
      if (standard2 == null) {
        return null;
      }
      return {
        name: standard2.name,
        chainId: standard2.chainId,
        ensAddress: standard2.ensAddress,
        _defaultProvider: standard2._defaultProvider || null
      };
    }
    const standard = networks2[network.name];
    if (!standard) {
      if (typeof network.chainId !== "number") {
        logger46.throwArgumentError("invalid network chainId", "network", network);
      }
      return network;
    }
    if (network.chainId !== 0 && network.chainId !== standard.chainId) {
      logger46.throwArgumentError("network chainId mismatch", "network", network);
    }
    let defaultProvider = network._defaultProvider || null;
    if (defaultProvider == null && standard._defaultProvider) {
      if (isRenetworkable2(standard._defaultProvider)) {
        defaultProvider = standard._defaultProvider.renetwork(network);
      } else {
        defaultProvider = standard._defaultProvider;
      }
    }
    return {
      name: network.name,
      chainId: standard.chainId,
      ensAddress: network.ensAddress || standard.ensAddress || null,
      _defaultProvider: defaultProvider
    };
  }

  // node_modules/@ethersproject/web/lib.esm/_version.js
  var version42 = "web/5.7.1";

  // node_modules/@ethersproject/web/lib.esm/geturl.js
  var __awaiter23 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  function getUrl2(href, options) {
    return __awaiter23(this, void 0, void 0, function* () {
      if (options == null) {
        options = {};
      }
      const request = {
        method: options.method || "GET",
        headers: options.headers || {},
        body: options.body || void 0
      };
      if (options.skipFetchSetup !== true) {
        request.mode = "cors";
        request.cache = "no-cache";
        request.credentials = "same-origin";
        request.redirect = "follow";
        request.referrer = "client";
      }
      ;
      if (options.fetchOptions != null) {
        const opts = options.fetchOptions;
        if (opts.mode) {
          request.mode = opts.mode;
        }
        if (opts.cache) {
          request.cache = opts.cache;
        }
        if (opts.credentials) {
          request.credentials = opts.credentials;
        }
        if (opts.redirect) {
          request.redirect = opts.redirect;
        }
        if (opts.referrer) {
          request.referrer = opts.referrer;
        }
      }
      const response = yield fetch(href, request);
      const body = yield response.arrayBuffer();
      const headers = {};
      if (response.headers.forEach) {
        response.headers.forEach((value, key3) => {
          headers[key3.toLowerCase()] = value;
        });
      } else {
        response.headers.keys().forEach((key3) => {
          headers[key3.toLowerCase()] = response.headers.get(key3);
        });
      }
      return {
        headers,
        statusCode: response.status,
        statusMessage: response.statusText,
        body: arrayify2(new Uint8Array(body))
      };
    });
  }

  // node_modules/@ethersproject/web/lib.esm/index.js
  var __awaiter24 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger47 = new Logger2(version42);
  function staller2(duration) {
    return new Promise((resolve) => {
      setTimeout(resolve, duration);
    });
  }
  function bodyify2(value, type) {
    if (value == null) {
      return null;
    }
    if (typeof value === "string") {
      return value;
    }
    if (isBytesLike2(value)) {
      if (type && (type.split("/")[0] === "text" || type.split(";")[0].trim() === "application/json")) {
        try {
          return toUtf8String2(value);
        } catch (error) {
        }
        ;
      }
      return hexlify2(value);
    }
    return value;
  }
  function unpercent2(value) {
    return toUtf8Bytes2(value.replace(/%([0-9a-f][0-9a-f])/gi, (all3, code) => {
      return String.fromCharCode(parseInt(code, 16));
    }));
  }
  function _fetchData2(connection, body, processFunc) {
    const attemptLimit = typeof connection === "object" && connection.throttleLimit != null ? connection.throttleLimit : 12;
    logger47.assertArgument(attemptLimit > 0 && attemptLimit % 1 === 0, "invalid connection throttle limit", "connection.throttleLimit", attemptLimit);
    const throttleCallback = typeof connection === "object" ? connection.throttleCallback : null;
    const throttleSlotInterval = typeof connection === "object" && typeof connection.throttleSlotInterval === "number" ? connection.throttleSlotInterval : 100;
    logger47.assertArgument(throttleSlotInterval > 0 && throttleSlotInterval % 1 === 0, "invalid connection throttle slot interval", "connection.throttleSlotInterval", throttleSlotInterval);
    const errorPassThrough = typeof connection === "object" ? !!connection.errorPassThrough : false;
    const headers = {};
    let url = null;
    const options = {
      method: "GET"
    };
    let allow304 = false;
    let timeout = 2 * 60 * 1e3;
    if (typeof connection === "string") {
      url = connection;
    } else if (typeof connection === "object") {
      if (connection == null || connection.url == null) {
        logger47.throwArgumentError("missing URL", "connection.url", connection);
      }
      url = connection.url;
      if (typeof connection.timeout === "number" && connection.timeout > 0) {
        timeout = connection.timeout;
      }
      if (connection.headers) {
        for (const key3 in connection.headers) {
          headers[key3.toLowerCase()] = { key: key3, value: String(connection.headers[key3]) };
          if (["if-none-match", "if-modified-since"].indexOf(key3.toLowerCase()) >= 0) {
            allow304 = true;
          }
        }
      }
      options.allowGzip = !!connection.allowGzip;
      if (connection.user != null && connection.password != null) {
        if (url.substring(0, 6) !== "https:" && connection.allowInsecureAuthentication !== true) {
          logger47.throwError("basic authentication requires a secure https url", Logger2.errors.INVALID_ARGUMENT, { argument: "url", url, user: connection.user, password: "[REDACTED]" });
        }
        const authorization = connection.user + ":" + connection.password;
        headers["authorization"] = {
          key: "Authorization",
          value: "Basic " + encode7(toUtf8Bytes2(authorization))
        };
      }
      if (connection.skipFetchSetup != null) {
        options.skipFetchSetup = !!connection.skipFetchSetup;
      }
      if (connection.fetchOptions != null) {
        options.fetchOptions = shallowCopy2(connection.fetchOptions);
      }
    }
    const reData = new RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i");
    const dataMatch = url ? url.match(reData) : null;
    if (dataMatch) {
      try {
        const response = {
          statusCode: 200,
          statusMessage: "OK",
          headers: { "content-type": dataMatch[1] || "text/plain" },
          body: dataMatch[2] ? decode4(dataMatch[3]) : unpercent2(dataMatch[3])
        };
        let result = response.body;
        if (processFunc) {
          result = processFunc(response.body, response);
        }
        return Promise.resolve(result);
      } catch (error) {
        logger47.throwError("processing response error", Logger2.errors.SERVER_ERROR, {
          body: bodyify2(dataMatch[1], dataMatch[2]),
          error,
          requestBody: null,
          requestMethod: "GET",
          url
        });
      }
    }
    if (body) {
      options.method = "POST";
      options.body = body;
      if (headers["content-type"] == null) {
        headers["content-type"] = { key: "Content-Type", value: "application/octet-stream" };
      }
      if (headers["content-length"] == null) {
        headers["content-length"] = { key: "Content-Length", value: String(body.length) };
      }
    }
    const flatHeaders = {};
    Object.keys(headers).forEach((key3) => {
      const header = headers[key3];
      flatHeaders[header.key] = header.value;
    });
    options.headers = flatHeaders;
    const runningTimeout = function() {
      let timer3 = null;
      const promise = new Promise(function(resolve, reject) {
        if (timeout) {
          timer3 = setTimeout(() => {
            if (timer3 == null) {
              return;
            }
            timer3 = null;
            reject(logger47.makeError("timeout", Logger2.errors.TIMEOUT, {
              requestBody: bodyify2(options.body, flatHeaders["content-type"]),
              requestMethod: options.method,
              timeout,
              url
            }));
          }, timeout);
        }
      });
      const cancel = function() {
        if (timer3 == null) {
          return;
        }
        clearTimeout(timer3);
        timer3 = null;
      };
      return { promise, cancel };
    }();
    const runningFetch = function() {
      return __awaiter24(this, void 0, void 0, function* () {
        for (let attempt = 0; attempt < attemptLimit; attempt++) {
          let response = null;
          try {
            response = yield getUrl2(url, options);
            if (attempt < attemptLimit) {
              if (response.statusCode === 301 || response.statusCode === 302) {
                const location = response.headers.location || "";
                if (options.method === "GET" && location.match(/^https:/)) {
                  url = response.headers.location;
                  continue;
                }
              } else if (response.statusCode === 429) {
                let tryAgain = true;
                if (throttleCallback) {
                  tryAgain = yield throttleCallback(attempt, url);
                }
                if (tryAgain) {
                  let stall4 = 0;
                  const retryAfter = response.headers["retry-after"];
                  if (typeof retryAfter === "string" && retryAfter.match(/^[1-9][0-9]*$/)) {
                    stall4 = parseInt(retryAfter) * 1e3;
                  } else {
                    stall4 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                  }
                  yield staller2(stall4);
                  continue;
                }
              }
            }
          } catch (error) {
            response = error.response;
            if (response == null) {
              runningTimeout.cancel();
              logger47.throwError("missing response", Logger2.errors.SERVER_ERROR, {
                requestBody: bodyify2(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                serverError: error,
                url
              });
            }
          }
          let body2 = response.body;
          if (allow304 && response.statusCode === 304) {
            body2 = null;
          } else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {
            runningTimeout.cancel();
            logger47.throwError("bad response", Logger2.errors.SERVER_ERROR, {
              status: response.statusCode,
              headers: response.headers,
              body: bodyify2(body2, response.headers ? response.headers["content-type"] : null),
              requestBody: bodyify2(options.body, flatHeaders["content-type"]),
              requestMethod: options.method,
              url
            });
          }
          if (processFunc) {
            try {
              const result = yield processFunc(body2, response);
              runningTimeout.cancel();
              return result;
            } catch (error) {
              if (error.throttleRetry && attempt < attemptLimit) {
                let tryAgain = true;
                if (throttleCallback) {
                  tryAgain = yield throttleCallback(attempt, url);
                }
                if (tryAgain) {
                  const timeout2 = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));
                  yield staller2(timeout2);
                  continue;
                }
              }
              runningTimeout.cancel();
              logger47.throwError("processing response error", Logger2.errors.SERVER_ERROR, {
                body: bodyify2(body2, response.headers ? response.headers["content-type"] : null),
                error,
                requestBody: bodyify2(options.body, flatHeaders["content-type"]),
                requestMethod: options.method,
                url
              });
            }
          }
          runningTimeout.cancel();
          return body2;
        }
        return logger47.throwError("failed response", Logger2.errors.SERVER_ERROR, {
          requestBody: bodyify2(options.body, flatHeaders["content-type"]),
          requestMethod: options.method,
          url
        });
      });
    }();
    return Promise.race([runningTimeout.promise, runningFetch]);
  }
  function fetchJson2(connection, json, processFunc) {
    let processJsonFunc = (value, response) => {
      let result = null;
      if (value != null) {
        try {
          result = JSON.parse(toUtf8String2(value));
        } catch (error) {
          logger47.throwError("invalid JSON", Logger2.errors.SERVER_ERROR, {
            body: value,
            error
          });
        }
      }
      if (processFunc) {
        result = processFunc(result, response);
      }
      return result;
    };
    let body = null;
    if (json != null) {
      body = toUtf8Bytes2(json);
      const updated = typeof connection === "string" ? { url: connection } : shallowCopy2(connection);
      if (updated.headers) {
        const hasContentType = Object.keys(updated.headers).filter((k) => k.toLowerCase() === "content-type").length !== 0;
        if (!hasContentType) {
          updated.headers = shallowCopy2(updated.headers);
          updated.headers["content-type"] = "application/json";
        }
      } else {
        updated.headers = { "content-type": "application/json" };
      }
      connection = updated;
    }
    return _fetchData2(connection, body, processJsonFunc);
  }
  function poll2(func, options) {
    if (!options) {
      options = {};
    }
    options = shallowCopy2(options);
    if (options.floor == null) {
      options.floor = 0;
    }
    if (options.ceiling == null) {
      options.ceiling = 1e4;
    }
    if (options.interval == null) {
      options.interval = 250;
    }
    return new Promise(function(resolve, reject) {
      let timer3 = null;
      let done = false;
      const cancel = () => {
        if (done) {
          return false;
        }
        done = true;
        if (timer3) {
          clearTimeout(timer3);
        }
        return true;
      };
      if (options.timeout) {
        timer3 = setTimeout(() => {
          if (cancel()) {
            reject(new Error("timeout"));
          }
        }, options.timeout);
      }
      const retryLimit = options.retryLimit;
      let attempt = 0;
      function check() {
        return func().then(function(result) {
          if (result !== void 0) {
            if (cancel()) {
              resolve(result);
            }
          } else if (options.oncePoll) {
            options.oncePoll.once("poll", check);
          } else if (options.onceBlock) {
            options.onceBlock.once("block", check);
          } else if (!done) {
            attempt++;
            if (attempt > retryLimit) {
              if (cancel()) {
                reject(new Error("retry limit reached"));
              }
              return;
            }
            let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));
            if (timeout < options.floor) {
              timeout = options.floor;
            }
            if (timeout > options.ceiling) {
              timeout = options.ceiling;
            }
            setTimeout(check, timeout);
          }
          return null;
        }, function(error) {
          if (cancel()) {
            reject(error);
          }
        });
      }
      check();
    });
  }

  // node_modules/@ethersproject/providers/lib.esm/base-provider.js
  var import_bech322 = __toESM(require_bech322());

  // node_modules/@ethersproject/providers/lib.esm/_version.js
  var version43 = "providers/5.7.2";

  // node_modules/@ethersproject/providers/lib.esm/formatter.js
  var logger48 = new Logger2(version43);
  var Formatter2 = class _Formatter2 {
    constructor() {
      this.formats = this.getDefaultFormats();
    }
    getDefaultFormats() {
      const formats = {};
      const address = this.address.bind(this);
      const bigNumber = this.bigNumber.bind(this);
      const blockTag = this.blockTag.bind(this);
      const data = this.data.bind(this);
      const hash3 = this.hash.bind(this);
      const hex = this.hex.bind(this);
      const number = this.number.bind(this);
      const type = this.type.bind(this);
      const strictData = (v) => {
        return this.data(v, true);
      };
      formats.transaction = {
        hash: hash3,
        type,
        accessList: _Formatter2.allowNull(this.accessList.bind(this), null),
        blockHash: _Formatter2.allowNull(hash3, null),
        blockNumber: _Formatter2.allowNull(number, null),
        transactionIndex: _Formatter2.allowNull(number, null),
        confirmations: _Formatter2.allowNull(number, null),
        from: address,
        // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)
        // must be set
        gasPrice: _Formatter2.allowNull(bigNumber),
        maxPriorityFeePerGas: _Formatter2.allowNull(bigNumber),
        maxFeePerGas: _Formatter2.allowNull(bigNumber),
        gasLimit: bigNumber,
        to: _Formatter2.allowNull(address, null),
        value: bigNumber,
        nonce: number,
        data,
        r: _Formatter2.allowNull(this.uint256),
        s: _Formatter2.allowNull(this.uint256),
        v: _Formatter2.allowNull(number),
        creates: _Formatter2.allowNull(address, null),
        raw: _Formatter2.allowNull(data)
      };
      formats.transactionRequest = {
        from: _Formatter2.allowNull(address),
        nonce: _Formatter2.allowNull(number),
        gasLimit: _Formatter2.allowNull(bigNumber),
        gasPrice: _Formatter2.allowNull(bigNumber),
        maxPriorityFeePerGas: _Formatter2.allowNull(bigNumber),
        maxFeePerGas: _Formatter2.allowNull(bigNumber),
        to: _Formatter2.allowNull(address),
        value: _Formatter2.allowNull(bigNumber),
        data: _Formatter2.allowNull(strictData),
        type: _Formatter2.allowNull(number),
        accessList: _Formatter2.allowNull(this.accessList.bind(this), null)
      };
      formats.receiptLog = {
        transactionIndex: number,
        blockNumber: number,
        transactionHash: hash3,
        address,
        topics: _Formatter2.arrayOf(hash3),
        data,
        logIndex: number,
        blockHash: hash3
      };
      formats.receipt = {
        to: _Formatter2.allowNull(this.address, null),
        from: _Formatter2.allowNull(this.address, null),
        contractAddress: _Formatter2.allowNull(address, null),
        transactionIndex: number,
        // should be allowNull(hash), but broken-EIP-658 support is handled in receipt
        root: _Formatter2.allowNull(hex),
        gasUsed: bigNumber,
        logsBloom: _Formatter2.allowNull(data),
        blockHash: hash3,
        transactionHash: hash3,
        logs: _Formatter2.arrayOf(this.receiptLog.bind(this)),
        blockNumber: number,
        confirmations: _Formatter2.allowNull(number, null),
        cumulativeGasUsed: bigNumber,
        effectiveGasPrice: _Formatter2.allowNull(bigNumber),
        status: _Formatter2.allowNull(number),
        type
      };
      formats.block = {
        hash: _Formatter2.allowNull(hash3),
        parentHash: hash3,
        number,
        timestamp: number,
        nonce: _Formatter2.allowNull(hex),
        difficulty: this.difficulty.bind(this),
        gasLimit: bigNumber,
        gasUsed: bigNumber,
        miner: _Formatter2.allowNull(address),
        extraData: data,
        transactions: _Formatter2.allowNull(_Formatter2.arrayOf(hash3)),
        baseFeePerGas: _Formatter2.allowNull(bigNumber)
      };
      formats.blockWithTransactions = shallowCopy2(formats.block);
      formats.blockWithTransactions.transactions = _Formatter2.allowNull(_Formatter2.arrayOf(this.transactionResponse.bind(this)));
      formats.filter = {
        fromBlock: _Formatter2.allowNull(blockTag, void 0),
        toBlock: _Formatter2.allowNull(blockTag, void 0),
        blockHash: _Formatter2.allowNull(hash3, void 0),
        address: _Formatter2.allowNull(address, void 0),
        topics: _Formatter2.allowNull(this.topics.bind(this), void 0)
      };
      formats.filterLog = {
        blockNumber: _Formatter2.allowNull(number),
        blockHash: _Formatter2.allowNull(hash3),
        transactionIndex: number,
        removed: _Formatter2.allowNull(this.boolean.bind(this)),
        address,
        data: _Formatter2.allowFalsish(data, "0x"),
        topics: _Formatter2.arrayOf(hash3),
        transactionHash: hash3,
        logIndex: number
      };
      return formats;
    }
    accessList(accessList) {
      return accessListify2(accessList || []);
    }
    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number
    // Strict! Used on input.
    number(number) {
      if (number === "0x") {
        return 0;
      }
      return BigNumber2.from(number).toNumber();
    }
    type(number) {
      if (number === "0x" || number == null) {
        return 0;
      }
      return BigNumber2.from(number).toNumber();
    }
    // Strict! Used on input.
    bigNumber(value) {
      return BigNumber2.from(value);
    }
    // Requires a boolean, "true" or  "false"; returns a boolean
    boolean(value) {
      if (typeof value === "boolean") {
        return value;
      }
      if (typeof value === "string") {
        value = value.toLowerCase();
        if (value === "true") {
          return true;
        }
        if (value === "false") {
          return false;
        }
      }
      throw new Error("invalid boolean - " + value);
    }
    hex(value, strict) {
      if (typeof value === "string") {
        if (!strict && value.substring(0, 2) !== "0x") {
          value = "0x" + value;
        }
        if (isHexString2(value)) {
          return value.toLowerCase();
        }
      }
      return logger48.throwArgumentError("invalid hash", "value", value);
    }
    data(value, strict) {
      const result = this.hex(value, strict);
      if (result.length % 2 !== 0) {
        throw new Error("invalid data; odd-length - " + value);
      }
      return result;
    }
    // Requires an address
    // Strict! Used on input.
    address(value) {
      return getAddress2(value);
    }
    callAddress(value) {
      if (!isHexString2(value, 32)) {
        return null;
      }
      const address = getAddress2(hexDataSlice2(value, 12));
      return address === AddressZero2 ? null : address;
    }
    contractAddress(value) {
      return getContractAddress2(value);
    }
    // Strict! Used on input.
    blockTag(blockTag) {
      if (blockTag == null) {
        return "latest";
      }
      if (blockTag === "earliest") {
        return "0x0";
      }
      switch (blockTag) {
        case "earliest":
          return "0x0";
        case "latest":
        case "pending":
        case "safe":
        case "finalized":
          return blockTag;
      }
      if (typeof blockTag === "number" || isHexString2(blockTag)) {
        return hexValue2(blockTag);
      }
      throw new Error("invalid blockTag");
    }
    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.
    hash(value, strict) {
      const result = this.hex(value, strict);
      if (hexDataLength2(result) !== 32) {
        return logger48.throwArgumentError("invalid hash", "value", value);
      }
      return result;
    }
    // Returns the difficulty as a number, or if too large (i.e. PoA network) null
    difficulty(value) {
      if (value == null) {
        return null;
      }
      const v = BigNumber2.from(value);
      try {
        return v.toNumber();
      } catch (error) {
      }
      return null;
    }
    uint256(value) {
      if (!isHexString2(value)) {
        throw new Error("invalid uint256");
      }
      return hexZeroPad2(value, 32);
    }
    _block(value, format) {
      if (value.author != null && value.miner == null) {
        value.miner = value.author;
      }
      const difficulty = value._difficulty != null ? value._difficulty : value.difficulty;
      const result = _Formatter2.check(format, value);
      result._difficulty = difficulty == null ? null : BigNumber2.from(difficulty);
      return result;
    }
    block(value) {
      return this._block(value, this.formats.block);
    }
    blockWithTransactions(value) {
      return this._block(value, this.formats.blockWithTransactions);
    }
    // Strict! Used on input.
    transactionRequest(value) {
      return _Formatter2.check(this.formats.transactionRequest, value);
    }
    transactionResponse(transaction) {
      if (transaction.gas != null && transaction.gasLimit == null) {
        transaction.gasLimit = transaction.gas;
      }
      if (transaction.to && BigNumber2.from(transaction.to).isZero()) {
        transaction.to = "0x0000000000000000000000000000000000000000";
      }
      if (transaction.input != null && transaction.data == null) {
        transaction.data = transaction.input;
      }
      if (transaction.to == null && transaction.creates == null) {
        transaction.creates = this.contractAddress(transaction);
      }
      if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {
        transaction.accessList = [];
      }
      const result = _Formatter2.check(this.formats.transaction, transaction);
      if (transaction.chainId != null) {
        let chainId = transaction.chainId;
        if (isHexString2(chainId)) {
          chainId = BigNumber2.from(chainId).toNumber();
        }
        result.chainId = chainId;
      } else {
        let chainId = transaction.networkId;
        if (chainId == null && result.v == null) {
          chainId = transaction.chainId;
        }
        if (isHexString2(chainId)) {
          chainId = BigNumber2.from(chainId).toNumber();
        }
        if (typeof chainId !== "number" && result.v != null) {
          chainId = (result.v - 35) / 2;
          if (chainId < 0) {
            chainId = 0;
          }
          chainId = parseInt(chainId);
        }
        if (typeof chainId !== "number") {
          chainId = 0;
        }
        result.chainId = chainId;
      }
      if (result.blockHash && result.blockHash.replace(/0/g, "") === "x") {
        result.blockHash = null;
      }
      return result;
    }
    transaction(value) {
      return parse2(value);
    }
    receiptLog(value) {
      return _Formatter2.check(this.formats.receiptLog, value);
    }
    receipt(value) {
      const result = _Formatter2.check(this.formats.receipt, value);
      if (result.root != null) {
        if (result.root.length <= 4) {
          const value2 = BigNumber2.from(result.root).toNumber();
          if (value2 === 0 || value2 === 1) {
            if (result.status != null && result.status !== value2) {
              logger48.throwArgumentError("alt-root-status/status mismatch", "value", { root: result.root, status: result.status });
            }
            result.status = value2;
            delete result.root;
          } else {
            logger48.throwArgumentError("invalid alt-root-status", "value.root", result.root);
          }
        } else if (result.root.length !== 66) {
          logger48.throwArgumentError("invalid root hash", "value.root", result.root);
        }
      }
      if (result.status != null) {
        result.byzantium = true;
      }
      return result;
    }
    topics(value) {
      if (Array.isArray(value)) {
        return value.map((v) => this.topics(v));
      } else if (value != null) {
        return this.hash(value, true);
      }
      return null;
    }
    filter(value) {
      return _Formatter2.check(this.formats.filter, value);
    }
    filterLog(value) {
      return _Formatter2.check(this.formats.filterLog, value);
    }
    static check(format, object) {
      const result = {};
      for (const key3 in format) {
        try {
          const value = format[key3](object[key3]);
          if (value !== void 0) {
            result[key3] = value;
          }
        } catch (error) {
          error.checkKey = key3;
          error.checkValue = object[key3];
          throw error;
        }
      }
      return result;
    }
    // if value is null-ish, nullValue is returned
    static allowNull(format, nullValue) {
      return function(value) {
        if (value == null) {
          return nullValue;
        }
        return format(value);
      };
    }
    // If value is false-ish, replaceValue is returned
    static allowFalsish(format, replaceValue) {
      return function(value) {
        if (!value) {
          return replaceValue;
        }
        return format(value);
      };
    }
    // Requires an Array satisfying check
    static arrayOf(format) {
      return function(array) {
        if (!Array.isArray(array)) {
          throw new Error("not an array");
        }
        const result = [];
        array.forEach(function(value) {
          result.push(format(value));
        });
        return result;
      };
    }
  };
  function isCommunityResourcable(value) {
    return value && typeof value.isCommunityResource === "function";
  }
  function isCommunityResource(value) {
    return isCommunityResourcable(value) && value.isCommunityResource();
  }
  var throttleMessage = false;
  function showThrottleMessage() {
    if (throttleMessage) {
      return;
    }
    throttleMessage = true;
    console.log("========= NOTICE =========");
    console.log("Request-Rate Exceeded  (this message will not be repeated)");
    console.log("");
    console.log("The default API keys for each service are provided as a highly-throttled,");
    console.log("community resource for low-traffic projects and early prototyping.");
    console.log("");
    console.log("While your application will continue to function, we highly recommended");
    console.log("signing up for your own API keys to improve performance, increase your");
    console.log("request rate/limit and enable other perks, such as metrics and advanced APIs.");
    console.log("");
    console.log("For more details: https://docs.ethers.io/api-keys/");
    console.log("==========================");
  }

  // node_modules/@ethersproject/providers/lib.esm/base-provider.js
  var __awaiter25 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger49 = new Logger2(version43);
  var MAX_CCIP_REDIRECTS2 = 10;
  function checkTopic2(topic) {
    if (topic == null) {
      return "null";
    }
    if (hexDataLength2(topic) !== 32) {
      logger49.throwArgumentError("invalid topic", "topic", topic);
    }
    return topic.toLowerCase();
  }
  function serializeTopics2(topics) {
    topics = topics.slice();
    while (topics.length > 0 && topics[topics.length - 1] == null) {
      topics.pop();
    }
    return topics.map((topic) => {
      if (Array.isArray(topic)) {
        const unique = {};
        topic.forEach((topic2) => {
          unique[checkTopic2(topic2)] = true;
        });
        const sorted = Object.keys(unique);
        sorted.sort();
        return sorted.join("|");
      } else {
        return checkTopic2(topic);
      }
    }).join("&");
  }
  function deserializeTopics2(data) {
    if (data === "") {
      return [];
    }
    return data.split(/&/g).map((topic) => {
      if (topic === "") {
        return [];
      }
      const comps = topic.split("|").map((topic2) => {
        return topic2 === "null" ? null : topic2;
      });
      return comps.length === 1 ? comps[0] : comps;
    });
  }
  function getEventTag3(eventName) {
    if (typeof eventName === "string") {
      eventName = eventName.toLowerCase();
      if (hexDataLength2(eventName) === 32) {
        return "tx:" + eventName;
      }
      if (eventName.indexOf(":") === -1) {
        return eventName;
      }
    } else if (Array.isArray(eventName)) {
      return "filter:*:" + serializeTopics2(eventName);
    } else if (ForkEvent2.isForkEvent(eventName)) {
      logger49.warn("not implemented");
      throw new Error("not implemented");
    } else if (eventName && typeof eventName === "object") {
      return "filter:" + (eventName.address || "*") + ":" + serializeTopics2(eventName.topics || []);
    }
    throw new Error("invalid event - " + eventName);
  }
  function getTime2() {
    return (/* @__PURE__ */ new Date()).getTime();
  }
  function stall2(duration) {
    return new Promise((resolve) => {
      setTimeout(resolve, duration);
    });
  }
  var PollableEvents2 = ["block", "network", "pending", "poll"];
  var Event2 = class {
    constructor(tag, listener, once) {
      defineReadOnly2(this, "tag", tag);
      defineReadOnly2(this, "listener", listener);
      defineReadOnly2(this, "once", once);
      this._lastBlockNumber = -2;
      this._inflight = false;
    }
    get event() {
      switch (this.type) {
        case "tx":
          return this.hash;
        case "filter":
          return this.filter;
      }
      return this.tag;
    }
    get type() {
      return this.tag.split(":")[0];
    }
    get hash() {
      const comps = this.tag.split(":");
      if (comps[0] !== "tx") {
        return null;
      }
      return comps[1];
    }
    get filter() {
      const comps = this.tag.split(":");
      if (comps[0] !== "filter") {
        return null;
      }
      const address = comps[1];
      const topics = deserializeTopics2(comps[2]);
      const filter2 = {};
      if (topics.length > 0) {
        filter2.topics = topics;
      }
      if (address && address !== "*") {
        filter2.address = address;
      }
      return filter2;
    }
    pollable() {
      return this.tag.indexOf(":") >= 0 || PollableEvents2.indexOf(this.tag) >= 0;
    }
  };
  var coinInfos2 = {
    "0": { symbol: "btc", p2pkh: 0, p2sh: 5, prefix: "bc" },
    "2": { symbol: "ltc", p2pkh: 48, p2sh: 50, prefix: "ltc" },
    "3": { symbol: "doge", p2pkh: 30, p2sh: 22 },
    "60": { symbol: "eth", ilk: "eth" },
    "61": { symbol: "etc", ilk: "eth" },
    "700": { symbol: "xdai", ilk: "eth" }
  };
  function bytes32ify2(value) {
    return hexZeroPad2(BigNumber2.from(value).toHexString(), 32);
  }
  function base58Encode2(data) {
    return Base582.encode(concat2([data, hexDataSlice2(sha2563(sha2563(data)), 0, 4)]));
  }
  var matcherIpfs2 = new RegExp("^(ipfs)://(.*)$", "i");
  var matchers2 = [
    new RegExp("^(https)://(.*)$", "i"),
    new RegExp("^(data):(.*)$", "i"),
    matcherIpfs2,
    new RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i")
  ];
  function _parseString2(result, start) {
    try {
      return toUtf8String2(_parseBytes2(result, start));
    } catch (error) {
    }
    return null;
  }
  function _parseBytes2(result, start) {
    if (result === "0x") {
      return null;
    }
    const offset = BigNumber2.from(hexDataSlice2(result, start, start + 32)).toNumber();
    const length = BigNumber2.from(hexDataSlice2(result, offset, offset + 32)).toNumber();
    return hexDataSlice2(result, offset + 32, offset + 32 + length);
  }
  function getIpfsLink2(link) {
    if (link.match(/^ipfs:\/\/ipfs\//i)) {
      link = link.substring(12);
    } else if (link.match(/^ipfs:\/\//i)) {
      link = link.substring(7);
    } else {
      logger49.throwArgumentError("unsupported IPFS format", "link", link);
    }
    return `https://gateway.ipfs.io/ipfs/${link}`;
  }
  function numPad2(value) {
    const result = arrayify2(value);
    if (result.length > 32) {
      throw new Error("internal; should not happen");
    }
    const padded = new Uint8Array(32);
    padded.set(result, 32 - result.length);
    return padded;
  }
  function bytesPad2(value) {
    if (value.length % 32 === 0) {
      return value;
    }
    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);
    result.set(value);
    return result;
  }
  function encodeBytes2(datas) {
    const result = [];
    let byteCount = 0;
    for (let i = 0; i < datas.length; i++) {
      result.push(null);
      byteCount += 32;
    }
    for (let i = 0; i < datas.length; i++) {
      const data = arrayify2(datas[i]);
      result[i] = numPad2(byteCount);
      result.push(numPad2(data.length));
      result.push(bytesPad2(data));
      byteCount += 32 + Math.ceil(data.length / 32) * 32;
    }
    return hexConcat2(result);
  }
  var Resolver2 = class {
    // The resolvedAddress is only for creating a ReverseLookup resolver
    constructor(provider, address, name, resolvedAddress) {
      defineReadOnly2(this, "provider", provider);
      defineReadOnly2(this, "name", name);
      defineReadOnly2(this, "address", provider.formatter.address(address));
      defineReadOnly2(this, "_resolvedAddress", resolvedAddress);
    }
    supportsWildcard() {
      if (!this._supportsEip2544) {
        this._supportsEip2544 = this.provider.call({
          to: this.address,
          data: "0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000"
        }).then((result) => {
          return BigNumber2.from(result).eq(1);
        }).catch((error) => {
          if (error.code === Logger2.errors.CALL_EXCEPTION) {
            return false;
          }
          this._supportsEip2544 = null;
          throw error;
        });
      }
      return this._supportsEip2544;
    }
    _fetch(selector, parameters) {
      return __awaiter25(this, void 0, void 0, function* () {
        const tx = {
          to: this.address,
          ccipReadEnabled: true,
          data: hexConcat2([selector, namehash2(this.name), parameters || "0x"])
        };
        let parseBytes = false;
        if (yield this.supportsWildcard()) {
          parseBytes = true;
          tx.data = hexConcat2(["0x9061b923", encodeBytes2([dnsEncode2(this.name), tx.data])]);
        }
        try {
          let result = yield this.provider.call(tx);
          if (arrayify2(result).length % 32 === 4) {
            logger49.throwError("resolver threw error", Logger2.errors.CALL_EXCEPTION, {
              transaction: tx,
              data: result
            });
          }
          if (parseBytes) {
            result = _parseBytes2(result, 0);
          }
          return result;
        } catch (error) {
          if (error.code === Logger2.errors.CALL_EXCEPTION) {
            return null;
          }
          throw error;
        }
      });
    }
    _fetchBytes(selector, parameters) {
      return __awaiter25(this, void 0, void 0, function* () {
        const result = yield this._fetch(selector, parameters);
        if (result != null) {
          return _parseBytes2(result, 0);
        }
        return null;
      });
    }
    _getAddress(coinType, hexBytes) {
      const coinInfo = coinInfos2[String(coinType)];
      if (coinInfo == null) {
        logger49.throwError(`unsupported coin type: ${coinType}`, Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: `getAddress(${coinType})`
        });
      }
      if (coinInfo.ilk === "eth") {
        return this.provider.formatter.address(hexBytes);
      }
      const bytes = arrayify2(hexBytes);
      if (coinInfo.p2pkh != null) {
        const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);
        if (p2pkh) {
          const length = parseInt(p2pkh[1], 16);
          if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {
            return base58Encode2(concat2([[coinInfo.p2pkh], "0x" + p2pkh[2]]));
          }
        }
      }
      if (coinInfo.p2sh != null) {
        const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);
        if (p2sh) {
          const length = parseInt(p2sh[1], 16);
          if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {
            return base58Encode2(concat2([[coinInfo.p2sh], "0x" + p2sh[2]]));
          }
        }
      }
      if (coinInfo.prefix != null) {
        const length = bytes[1];
        let version47 = bytes[0];
        if (version47 === 0) {
          if (length !== 20 && length !== 32) {
            version47 = -1;
          }
        } else {
          version47 = -1;
        }
        if (version47 >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {
          const words2 = import_bech322.default.toWords(bytes.slice(2));
          words2.unshift(version47);
          return import_bech322.default.encode(coinInfo.prefix, words2);
        }
      }
      return null;
    }
    getAddress(coinType) {
      return __awaiter25(this, void 0, void 0, function* () {
        if (coinType == null) {
          coinType = 60;
        }
        if (coinType === 60) {
          try {
            const result = yield this._fetch("0x3b3b57de");
            if (result === "0x" || result === HashZero2) {
              return null;
            }
            return this.provider.formatter.callAddress(result);
          } catch (error) {
            if (error.code === Logger2.errors.CALL_EXCEPTION) {
              return null;
            }
            throw error;
          }
        }
        const hexBytes = yield this._fetchBytes("0xf1cb7e06", bytes32ify2(coinType));
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        const address = this._getAddress(coinType, hexBytes);
        if (address == null) {
          logger49.throwError(`invalid or unsupported coin data`, Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: `getAddress(${coinType})`,
            coinType,
            data: hexBytes
          });
        }
        return address;
      });
    }
    getAvatar() {
      return __awaiter25(this, void 0, void 0, function* () {
        const linkage = [{ type: "name", content: this.name }];
        try {
          const avatar = yield this.getText("avatar");
          if (avatar == null) {
            return null;
          }
          for (let i = 0; i < matchers2.length; i++) {
            const match = avatar.match(matchers2[i]);
            if (match == null) {
              continue;
            }
            const scheme = match[1].toLowerCase();
            switch (scheme) {
              case "https":
                linkage.push({ type: "url", content: avatar });
                return { linkage, url: avatar };
              case "data":
                linkage.push({ type: "data", content: avatar });
                return { linkage, url: avatar };
              case "ipfs":
                linkage.push({ type: "ipfs", content: avatar });
                return { linkage, url: getIpfsLink2(avatar) };
              case "erc721":
              case "erc1155": {
                const selector = scheme === "erc721" ? "0xc87b56dd" : "0x0e89341c";
                linkage.push({ type: scheme, content: avatar });
                const owner = this._resolvedAddress || (yield this.getAddress());
                const comps = (match[2] || "").split("/");
                if (comps.length !== 2) {
                  return null;
                }
                const addr = yield this.provider.formatter.address(comps[0]);
                const tokenId = hexZeroPad2(BigNumber2.from(comps[1]).toHexString(), 32);
                if (scheme === "erc721") {
                  const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({
                    to: addr,
                    data: hexConcat2(["0x6352211e", tokenId])
                  }));
                  if (owner !== tokenOwner) {
                    return null;
                  }
                  linkage.push({ type: "owner", content: tokenOwner });
                } else if (scheme === "erc1155") {
                  const balance = BigNumber2.from(yield this.provider.call({
                    to: addr,
                    data: hexConcat2(["0x00fdd58e", hexZeroPad2(owner, 32), tokenId])
                  }));
                  if (balance.isZero()) {
                    return null;
                  }
                  linkage.push({ type: "balance", content: balance.toString() });
                }
                const tx = {
                  to: this.provider.formatter.address(comps[0]),
                  data: hexConcat2([selector, tokenId])
                };
                let metadataUrl = _parseString2(yield this.provider.call(tx), 0);
                if (metadataUrl == null) {
                  return null;
                }
                linkage.push({ type: "metadata-url-base", content: metadataUrl });
                if (scheme === "erc1155") {
                  metadataUrl = metadataUrl.replace("{id}", tokenId.substring(2));
                  linkage.push({ type: "metadata-url-expanded", content: metadataUrl });
                }
                if (metadataUrl.match(/^ipfs:/i)) {
                  metadataUrl = getIpfsLink2(metadataUrl);
                }
                linkage.push({ type: "metadata-url", content: metadataUrl });
                const metadata = yield fetchJson2(metadataUrl);
                if (!metadata) {
                  return null;
                }
                linkage.push({ type: "metadata", content: JSON.stringify(metadata) });
                let imageUrl = metadata.image;
                if (typeof imageUrl !== "string") {
                  return null;
                }
                if (imageUrl.match(/^(https:\/\/|data:)/i)) {
                } else {
                  const ipfs = imageUrl.match(matcherIpfs2);
                  if (ipfs == null) {
                    return null;
                  }
                  linkage.push({ type: "url-ipfs", content: imageUrl });
                  imageUrl = getIpfsLink2(imageUrl);
                }
                linkage.push({ type: "url", content: imageUrl });
                return { linkage, url: imageUrl };
              }
            }
          }
        } catch (error) {
        }
        return null;
      });
    }
    getContentHash() {
      return __awaiter25(this, void 0, void 0, function* () {
        const hexBytes = yield this._fetchBytes("0xbc1c58d1");
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
        if (ipfs) {
          const length = parseInt(ipfs[3], 16);
          if (ipfs[4].length === length * 2) {
            return "ipfs://" + Base582.encode("0x" + ipfs[1]);
          }
        }
        const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);
        if (ipns) {
          const length = parseInt(ipns[3], 16);
          if (ipns[4].length === length * 2) {
            return "ipns://" + Base582.encode("0x" + ipns[1]);
          }
        }
        const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);
        if (swarm) {
          if (swarm[1].length === 32 * 2) {
            return "bzz://" + swarm[1];
          }
        }
        const skynet = hexBytes.match(/^0x90b2c605([0-9a-f]*)$/);
        if (skynet) {
          if (skynet[1].length === 34 * 2) {
            const urlSafe = { "=": "", "+": "-", "/": "_" };
            const hash3 = encode7("0x" + skynet[1]).replace(/[=+\/]/g, (a) => urlSafe[a]);
            return "sia://" + hash3;
          }
        }
        return logger49.throwError(`invalid or unsupported content hash data`, Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "getContentHash()",
          data: hexBytes
        });
      });
    }
    getText(key3) {
      return __awaiter25(this, void 0, void 0, function* () {
        let keyBytes = toUtf8Bytes2(key3);
        keyBytes = concat2([bytes32ify2(64), bytes32ify2(keyBytes.length), keyBytes]);
        if (keyBytes.length % 32 !== 0) {
          keyBytes = concat2([keyBytes, hexZeroPad2("0x", 32 - key3.length % 32)]);
        }
        const hexBytes = yield this._fetchBytes("0x59d1d43c", hexlify2(keyBytes));
        if (hexBytes == null || hexBytes === "0x") {
          return null;
        }
        return toUtf8String2(hexBytes);
      });
    }
  };
  var defaultFormatter2 = null;
  var nextPollId2 = 1;
  var BaseProvider2 = class extends Provider2 {
    /**
     *  ready
     *
     *  A Promise<Network> that resolves only once the provider is ready.
     *
     *  Sub-classes that call the super with a network without a chainId
     *  MUST set this. Standard named networks have a known chainId.
     *
     */
    constructor(network) {
      super();
      this._events = [];
      this._emitted = { block: -2 };
      this.disableCcipRead = false;
      this.formatter = new.target.getFormatter();
      defineReadOnly2(this, "anyNetwork", network === "any");
      if (this.anyNetwork) {
        network = this.detectNetwork();
      }
      if (network instanceof Promise) {
        this._networkPromise = network;
        network.catch((error) => {
        });
        this._ready().catch((error) => {
        });
      } else {
        const knownNetwork = getStatic2(new.target, "getNetwork")(network);
        if (knownNetwork) {
          defineReadOnly2(this, "_network", knownNetwork);
          this.emit("network", knownNetwork, null);
        } else {
          logger49.throwArgumentError("invalid network", "network", network);
        }
      }
      this._maxInternalBlockNumber = -1024;
      this._lastBlockNumber = -2;
      this._maxFilterBlockRange = 10;
      this._pollingInterval = 4e3;
      this._fastQueryDate = 0;
    }
    _ready() {
      return __awaiter25(this, void 0, void 0, function* () {
        if (this._network == null) {
          let network = null;
          if (this._networkPromise) {
            try {
              network = yield this._networkPromise;
            } catch (error) {
            }
          }
          if (network == null) {
            network = yield this.detectNetwork();
          }
          if (!network) {
            logger49.throwError("no network detected", Logger2.errors.UNKNOWN_ERROR, {});
          }
          if (this._network == null) {
            if (this.anyNetwork) {
              this._network = network;
            } else {
              defineReadOnly2(this, "_network", network);
            }
            this.emit("network", network, null);
          }
        }
        return this._network;
      });
    }
    // This will always return the most recently established network.
    // For "any", this can change (a "network" event is emitted before
    // any change is reflected); otherwise this cannot change
    get ready() {
      return poll2(() => {
        return this._ready().then((network) => {
          return network;
        }, (error) => {
          if (error.code === Logger2.errors.NETWORK_ERROR && error.event === "noNetwork") {
            return void 0;
          }
          throw error;
        });
      });
    }
    // @TODO: Remove this and just create a singleton formatter
    static getFormatter() {
      if (defaultFormatter2 == null) {
        defaultFormatter2 = new Formatter2();
      }
      return defaultFormatter2;
    }
    // @TODO: Remove this and just use getNetwork
    static getNetwork(network) {
      return getNetwork2(network == null ? "homestead" : network);
    }
    ccipReadFetch(tx, calldata, urls) {
      return __awaiter25(this, void 0, void 0, function* () {
        if (this.disableCcipRead || urls.length === 0) {
          return null;
        }
        const sender = tx.to.toLowerCase();
        const data = calldata.toLowerCase();
        const errorMessages = [];
        for (let i = 0; i < urls.length; i++) {
          const url = urls[i];
          const href = url.replace("{sender}", sender).replace("{data}", data);
          const json = url.indexOf("{data}") >= 0 ? null : JSON.stringify({ data, sender });
          const result = yield fetchJson2({ url: href, errorPassThrough: true }, json, (value, response) => {
            value.status = response.statusCode;
            return value;
          });
          if (result.data) {
            return result.data;
          }
          const errorMessage = result.message || "unknown error";
          if (result.status >= 400 && result.status < 500) {
            return logger49.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger2.errors.SERVER_ERROR, { url, errorMessage });
          }
          errorMessages.push(errorMessage);
        }
        return logger49.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(", ")}`, Logger2.errors.SERVER_ERROR, {
          urls,
          errorMessages
        });
      });
    }
    // Fetches the blockNumber, but will reuse any result that is less
    // than maxAge old or has been requested since the last request
    _getInternalBlockNumber(maxAge) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this._ready();
        if (maxAge > 0) {
          while (this._internalBlockNumber) {
            const internalBlockNumber = this._internalBlockNumber;
            try {
              const result = yield internalBlockNumber;
              if (getTime2() - result.respTime <= maxAge) {
                return result.blockNumber;
              }
              break;
            } catch (error) {
              if (this._internalBlockNumber === internalBlockNumber) {
                break;
              }
            }
          }
        }
        const reqTime = getTime2();
        const checkInternalBlockNumber = resolveProperties2({
          blockNumber: this.perform("getBlockNumber", {}),
          networkError: this.getNetwork().then((network) => null, (error) => error)
        }).then(({ blockNumber, networkError }) => {
          if (networkError) {
            if (this._internalBlockNumber === checkInternalBlockNumber) {
              this._internalBlockNumber = null;
            }
            throw networkError;
          }
          const respTime = getTime2();
          blockNumber = BigNumber2.from(blockNumber).toNumber();
          if (blockNumber < this._maxInternalBlockNumber) {
            blockNumber = this._maxInternalBlockNumber;
          }
          this._maxInternalBlockNumber = blockNumber;
          this._setFastBlockNumber(blockNumber);
          return { blockNumber, reqTime, respTime };
        });
        this._internalBlockNumber = checkInternalBlockNumber;
        checkInternalBlockNumber.catch((error) => {
          if (this._internalBlockNumber === checkInternalBlockNumber) {
            this._internalBlockNumber = null;
          }
        });
        return (yield checkInternalBlockNumber).blockNumber;
      });
    }
    poll() {
      return __awaiter25(this, void 0, void 0, function* () {
        const pollId = nextPollId2++;
        const runners = [];
        let blockNumber = null;
        try {
          blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);
        } catch (error) {
          this.emit("error", error);
          return;
        }
        this._setFastBlockNumber(blockNumber);
        this.emit("poll", pollId, blockNumber);
        if (blockNumber === this._lastBlockNumber) {
          this.emit("didPoll", pollId);
          return;
        }
        if (this._emitted.block === -2) {
          this._emitted.block = blockNumber - 1;
        }
        if (Math.abs(this._emitted.block - blockNumber) > 1e3) {
          logger49.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);
          this.emit("error", logger49.makeError("network block skew detected", Logger2.errors.NETWORK_ERROR, {
            blockNumber,
            event: "blockSkew",
            previousBlockNumber: this._emitted.block
          }));
          this.emit("block", blockNumber);
        } else {
          for (let i = this._emitted.block + 1; i <= blockNumber; i++) {
            this.emit("block", i);
          }
        }
        if (this._emitted.block !== blockNumber) {
          this._emitted.block = blockNumber;
          Object.keys(this._emitted).forEach((key3) => {
            if (key3 === "block") {
              return;
            }
            const eventBlockNumber = this._emitted[key3];
            if (eventBlockNumber === "pending") {
              return;
            }
            if (blockNumber - eventBlockNumber > 12) {
              delete this._emitted[key3];
            }
          });
        }
        if (this._lastBlockNumber === -2) {
          this._lastBlockNumber = blockNumber - 1;
        }
        this._events.forEach((event) => {
          switch (event.type) {
            case "tx": {
              const hash3 = event.hash;
              let runner = this.getTransactionReceipt(hash3).then((receipt) => {
                if (!receipt || receipt.blockNumber == null) {
                  return null;
                }
                this._emitted["t:" + hash3] = receipt.blockNumber;
                this.emit(hash3, receipt);
                return null;
              }).catch((error) => {
                this.emit("error", error);
              });
              runners.push(runner);
              break;
            }
            case "filter": {
              if (!event._inflight) {
                event._inflight = true;
                if (event._lastBlockNumber === -2) {
                  event._lastBlockNumber = blockNumber - 1;
                }
                const filter2 = event.filter;
                filter2.fromBlock = event._lastBlockNumber + 1;
                filter2.toBlock = blockNumber;
                const minFromBlock = filter2.toBlock - this._maxFilterBlockRange;
                if (minFromBlock > filter2.fromBlock) {
                  filter2.fromBlock = minFromBlock;
                }
                if (filter2.fromBlock < 0) {
                  filter2.fromBlock = 0;
                }
                const runner = this.getLogs(filter2).then((logs) => {
                  event._inflight = false;
                  if (logs.length === 0) {
                    return;
                  }
                  logs.forEach((log) => {
                    if (log.blockNumber > event._lastBlockNumber) {
                      event._lastBlockNumber = log.blockNumber;
                    }
                    this._emitted["b:" + log.blockHash] = log.blockNumber;
                    this._emitted["t:" + log.transactionHash] = log.blockNumber;
                    this.emit(filter2, log);
                  });
                }).catch((error) => {
                  this.emit("error", error);
                  event._inflight = false;
                });
                runners.push(runner);
              }
              break;
            }
          }
        });
        this._lastBlockNumber = blockNumber;
        Promise.all(runners).then(() => {
          this.emit("didPoll", pollId);
        }).catch((error) => {
          this.emit("error", error);
        });
        return;
      });
    }
    // Deprecated; do not use this
    resetEventsBlock(blockNumber) {
      this._lastBlockNumber = blockNumber - 1;
      if (this.polling) {
        this.poll();
      }
    }
    get network() {
      return this._network;
    }
    // This method should query the network if the underlying network
    // can change, such as when connected to a JSON-RPC backend
    detectNetwork() {
      return __awaiter25(this, void 0, void 0, function* () {
        return logger49.throwError("provider does not support network detection", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "provider.detectNetwork"
        });
      });
    }
    getNetwork() {
      return __awaiter25(this, void 0, void 0, function* () {
        const network = yield this._ready();
        const currentNetwork = yield this.detectNetwork();
        if (network.chainId !== currentNetwork.chainId) {
          if (this.anyNetwork) {
            this._network = currentNetwork;
            this._lastBlockNumber = -2;
            this._fastBlockNumber = null;
            this._fastBlockNumberPromise = null;
            this._fastQueryDate = 0;
            this._emitted.block = -2;
            this._maxInternalBlockNumber = -1024;
            this._internalBlockNumber = null;
            this.emit("network", currentNetwork, network);
            yield stall2(0);
            return this._network;
          }
          const error = logger49.makeError("underlying network changed", Logger2.errors.NETWORK_ERROR, {
            event: "changed",
            network,
            detectedNetwork: currentNetwork
          });
          this.emit("error", error);
          throw error;
        }
        return network;
      });
    }
    get blockNumber() {
      this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {
        this._setFastBlockNumber(blockNumber);
      }, (error) => {
      });
      return this._fastBlockNumber != null ? this._fastBlockNumber : -1;
    }
    get polling() {
      return this._poller != null;
    }
    set polling(value) {
      if (value && !this._poller) {
        this._poller = setInterval(() => {
          this.poll();
        }, this.pollingInterval);
        if (!this._bootstrapPoll) {
          this._bootstrapPoll = setTimeout(() => {
            this.poll();
            this._bootstrapPoll = setTimeout(() => {
              if (!this._poller) {
                this.poll();
              }
              this._bootstrapPoll = null;
            }, this.pollingInterval);
          }, 0);
        }
      } else if (!value && this._poller) {
        clearInterval(this._poller);
        this._poller = null;
      }
    }
    get pollingInterval() {
      return this._pollingInterval;
    }
    set pollingInterval(value) {
      if (typeof value !== "number" || value <= 0 || parseInt(String(value)) != value) {
        throw new Error("invalid polling interval");
      }
      this._pollingInterval = value;
      if (this._poller) {
        clearInterval(this._poller);
        this._poller = setInterval(() => {
          this.poll();
        }, this._pollingInterval);
      }
    }
    _getFastBlockNumber() {
      const now2 = getTime2();
      if (now2 - this._fastQueryDate > 2 * this._pollingInterval) {
        this._fastQueryDate = now2;
        this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {
          if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
            this._fastBlockNumber = blockNumber;
          }
          return this._fastBlockNumber;
        });
      }
      return this._fastBlockNumberPromise;
    }
    _setFastBlockNumber(blockNumber) {
      if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {
        return;
      }
      this._fastQueryDate = getTime2();
      if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {
        this._fastBlockNumber = blockNumber;
        this._fastBlockNumberPromise = Promise.resolve(blockNumber);
      }
    }
    waitForTransaction(transactionHash, confirmations, timeout) {
      return __awaiter25(this, void 0, void 0, function* () {
        return this._waitForTransaction(transactionHash, confirmations == null ? 1 : confirmations, timeout || 0, null);
      });
    }
    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {
      return __awaiter25(this, void 0, void 0, function* () {
        const receipt = yield this.getTransactionReceipt(transactionHash);
        if ((receipt ? receipt.confirmations : 0) >= confirmations) {
          return receipt;
        }
        return new Promise((resolve, reject) => {
          const cancelFuncs = [];
          let done = false;
          const alreadyDone = function() {
            if (done) {
              return true;
            }
            done = true;
            cancelFuncs.forEach((func) => {
              func();
            });
            return false;
          };
          const minedHandler = (receipt2) => {
            if (receipt2.confirmations < confirmations) {
              return;
            }
            if (alreadyDone()) {
              return;
            }
            resolve(receipt2);
          };
          this.on(transactionHash, minedHandler);
          cancelFuncs.push(() => {
            this.removeListener(transactionHash, minedHandler);
          });
          if (replaceable) {
            let lastBlockNumber = replaceable.startBlock;
            let scannedBlock = null;
            const replaceHandler = (blockNumber) => __awaiter25(this, void 0, void 0, function* () {
              if (done) {
                return;
              }
              yield stall2(1e3);
              this.getTransactionCount(replaceable.from).then((nonce) => __awaiter25(this, void 0, void 0, function* () {
                if (done) {
                  return;
                }
                if (nonce <= replaceable.nonce) {
                  lastBlockNumber = blockNumber;
                } else {
                  {
                    const mined = yield this.getTransaction(transactionHash);
                    if (mined && mined.blockNumber != null) {
                      return;
                    }
                  }
                  if (scannedBlock == null) {
                    scannedBlock = lastBlockNumber - 3;
                    if (scannedBlock < replaceable.startBlock) {
                      scannedBlock = replaceable.startBlock;
                    }
                  }
                  while (scannedBlock <= blockNumber) {
                    if (done) {
                      return;
                    }
                    const block = yield this.getBlockWithTransactions(scannedBlock);
                    for (let ti = 0; ti < block.transactions.length; ti++) {
                      const tx = block.transactions[ti];
                      if (tx.hash === transactionHash) {
                        return;
                      }
                      if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {
                        if (done) {
                          return;
                        }
                        const receipt2 = yield this.waitForTransaction(tx.hash, confirmations);
                        if (alreadyDone()) {
                          return;
                        }
                        let reason = "replaced";
                        if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {
                          reason = "repriced";
                        } else if (tx.data === "0x" && tx.from === tx.to && tx.value.isZero()) {
                          reason = "cancelled";
                        }
                        reject(logger49.makeError("transaction was replaced", Logger2.errors.TRANSACTION_REPLACED, {
                          cancelled: reason === "replaced" || reason === "cancelled",
                          reason,
                          replacement: this._wrapTransaction(tx),
                          hash: transactionHash,
                          receipt: receipt2
                        }));
                        return;
                      }
                    }
                    scannedBlock++;
                  }
                }
                if (done) {
                  return;
                }
                this.once("block", replaceHandler);
              }), (error) => {
                if (done) {
                  return;
                }
                this.once("block", replaceHandler);
              });
            });
            if (done) {
              return;
            }
            this.once("block", replaceHandler);
            cancelFuncs.push(() => {
              this.removeListener("block", replaceHandler);
            });
          }
          if (typeof timeout === "number" && timeout > 0) {
            const timer3 = setTimeout(() => {
              if (alreadyDone()) {
                return;
              }
              reject(logger49.makeError("timeout exceeded", Logger2.errors.TIMEOUT, { timeout }));
            }, timeout);
            if (timer3.unref) {
              timer3.unref();
            }
            cancelFuncs.push(() => {
              clearTimeout(timer3);
            });
          }
        });
      });
    }
    getBlockNumber() {
      return __awaiter25(this, void 0, void 0, function* () {
        return this._getInternalBlockNumber(0);
      });
    }
    getGasPrice() {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const result = yield this.perform("getGasPrice", {});
        try {
          return BigNumber2.from(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "getGasPrice",
            result,
            error
          });
        }
      });
    }
    getBalance(addressOrName, blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getBalance", params);
        try {
          return BigNumber2.from(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "getBalance",
            params,
            result,
            error
          });
        }
      });
    }
    getTransactionCount(addressOrName, blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getTransactionCount", params);
        try {
          return BigNumber2.from(result).toNumber();
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "getTransactionCount",
            params,
            result,
            error
          });
        }
      });
    }
    getCode(addressOrName, blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag)
        });
        const result = yield this.perform("getCode", params);
        try {
          return hexlify2(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "getCode",
            params,
            result,
            error
          });
        }
      });
    }
    getStorageAt(addressOrName, position, blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({
          address: this._getAddress(addressOrName),
          blockTag: this._getBlockTag(blockTag),
          position: Promise.resolve(position).then((p) => hexValue2(p))
        });
        const result = yield this.perform("getStorageAt", params);
        try {
          return hexlify2(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "getStorageAt",
            params,
            result,
            error
          });
        }
      });
    }
    // This should be called by any subclass wrapping a TransactionResponse
    _wrapTransaction(tx, hash3, startBlock) {
      if (hash3 != null && hexDataLength2(hash3) !== 32) {
        throw new Error("invalid response - sendTransaction");
      }
      const result = tx;
      if (hash3 != null && tx.hash !== hash3) {
        logger49.throwError("Transaction hash mismatch from Provider.sendTransaction.", Logger2.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash3 });
      }
      result.wait = (confirms, timeout) => __awaiter25(this, void 0, void 0, function* () {
        if (confirms == null) {
          confirms = 1;
        }
        if (timeout == null) {
          timeout = 0;
        }
        let replacement = void 0;
        if (confirms !== 0 && startBlock != null) {
          replacement = {
            data: tx.data,
            from: tx.from,
            nonce: tx.nonce,
            to: tx.to,
            value: tx.value,
            startBlock
          };
        }
        const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);
        if (receipt == null && confirms === 0) {
          return null;
        }
        this._emitted["t:" + tx.hash] = receipt.blockNumber;
        if (receipt.status === 0) {
          logger49.throwError("transaction failed", Logger2.errors.CALL_EXCEPTION, {
            transactionHash: tx.hash,
            transaction: tx,
            receipt
          });
        }
        return receipt;
      });
      return result;
    }
    sendTransaction(signedTransaction) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const hexTx = yield Promise.resolve(signedTransaction).then((t) => hexlify2(t));
        const tx = this.formatter.transaction(signedTransaction);
        if (tx.confirmations == null) {
          tx.confirmations = 0;
        }
        const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
        try {
          const hash3 = yield this.perform("sendTransaction", { signedTransaction: hexTx });
          return this._wrapTransaction(tx, hash3, blockNumber);
        } catch (error) {
          error.transaction = tx;
          error.transactionHash = tx.hash;
          throw error;
        }
      });
    }
    _getTransactionRequest(transaction) {
      return __awaiter25(this, void 0, void 0, function* () {
        const values = yield transaction;
        const tx = {};
        ["from", "to"].forEach((key3) => {
          if (values[key3] == null) {
            return;
          }
          tx[key3] = Promise.resolve(values[key3]).then((v) => v ? this._getAddress(v) : null);
        });
        ["gasLimit", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "value"].forEach((key3) => {
          if (values[key3] == null) {
            return;
          }
          tx[key3] = Promise.resolve(values[key3]).then((v) => v ? BigNumber2.from(v) : null);
        });
        ["type"].forEach((key3) => {
          if (values[key3] == null) {
            return;
          }
          tx[key3] = Promise.resolve(values[key3]).then((v) => v != null ? v : null);
        });
        if (values.accessList) {
          tx.accessList = this.formatter.accessList(values.accessList);
        }
        ["data"].forEach((key3) => {
          if (values[key3] == null) {
            return;
          }
          tx[key3] = Promise.resolve(values[key3]).then((v) => v ? hexlify2(v) : null);
        });
        return this.formatter.transactionRequest(yield resolveProperties2(tx));
      });
    }
    _getFilter(filter2) {
      return __awaiter25(this, void 0, void 0, function* () {
        filter2 = yield filter2;
        const result = {};
        if (filter2.address != null) {
          result.address = this._getAddress(filter2.address);
        }
        ["blockHash", "topics"].forEach((key3) => {
          if (filter2[key3] == null) {
            return;
          }
          result[key3] = filter2[key3];
        });
        ["fromBlock", "toBlock"].forEach((key3) => {
          if (filter2[key3] == null) {
            return;
          }
          result[key3] = this._getBlockTag(filter2[key3]);
        });
        return this.formatter.filter(yield resolveProperties2(result));
      });
    }
    _call(transaction, blockTag, attempt) {
      return __awaiter25(this, void 0, void 0, function* () {
        if (attempt >= MAX_CCIP_REDIRECTS2) {
          logger49.throwError("CCIP read exceeded maximum redirections", Logger2.errors.SERVER_ERROR, {
            redirects: attempt,
            transaction
          });
        }
        const txSender = transaction.to;
        const result = yield this.perform("call", { transaction, blockTag });
        if (attempt >= 0 && blockTag === "latest" && txSender != null && result.substring(0, 10) === "0x556f1830" && hexDataLength2(result) % 32 === 4) {
          try {
            const data = hexDataSlice2(result, 4);
            const sender = hexDataSlice2(data, 0, 32);
            if (!BigNumber2.from(sender).eq(txSender)) {
              logger49.throwError("CCIP Read sender did not match", Logger2.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const urls = [];
            const urlsOffset = BigNumber2.from(hexDataSlice2(data, 32, 64)).toNumber();
            const urlsLength = BigNumber2.from(hexDataSlice2(data, urlsOffset, urlsOffset + 32)).toNumber();
            const urlsData = hexDataSlice2(data, urlsOffset + 32);
            for (let u = 0; u < urlsLength; u++) {
              const url = _parseString2(urlsData, u * 32);
              if (url == null) {
                logger49.throwError("CCIP Read contained corrupt URL string", Logger2.errors.CALL_EXCEPTION, {
                  name: "OffchainLookup",
                  signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                  transaction,
                  data: result
                });
              }
              urls.push(url);
            }
            const calldata = _parseBytes2(data, 64);
            if (!BigNumber2.from(hexDataSlice2(data, 100, 128)).isZero()) {
              logger49.throwError("CCIP Read callback selector included junk", Logger2.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const callbackSelector = hexDataSlice2(data, 96, 100);
            const extraData = _parseBytes2(data, 128);
            const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);
            if (ccipResult == null) {
              logger49.throwError("CCIP Read disabled or provided no URLs", Logger2.errors.CALL_EXCEPTION, {
                name: "OffchainLookup",
                signature: "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                transaction,
                data: result
              });
            }
            const tx = {
              to: txSender,
              data: hexConcat2([callbackSelector, encodeBytes2([ccipResult, extraData])])
            };
            return this._call(tx, blockTag, attempt + 1);
          } catch (error) {
            if (error.code === Logger2.errors.SERVER_ERROR) {
              throw error;
            }
          }
        }
        try {
          return hexlify2(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "call",
            params: { transaction, blockTag },
            result,
            error
          });
        }
      });
    }
    call(transaction, blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const resolved = yield resolveProperties2({
          transaction: this._getTransactionRequest(transaction),
          blockTag: this._getBlockTag(blockTag),
          ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)
        });
        return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);
      });
    }
    estimateGas(transaction) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({
          transaction: this._getTransactionRequest(transaction)
        });
        const result = yield this.perform("estimateGas", params);
        try {
          return BigNumber2.from(result);
        } catch (error) {
          return logger49.throwError("bad result from backend", Logger2.errors.SERVER_ERROR, {
            method: "estimateGas",
            params,
            result,
            error
          });
        }
      });
    }
    _getAddress(addressOrName) {
      return __awaiter25(this, void 0, void 0, function* () {
        addressOrName = yield addressOrName;
        if (typeof addressOrName !== "string") {
          logger49.throwArgumentError("invalid address or ENS name", "name", addressOrName);
        }
        const address = yield this.resolveName(addressOrName);
        if (address == null) {
          logger49.throwError("ENS name not configured", Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: `resolveName(${JSON.stringify(addressOrName)})`
          });
        }
        return address;
      });
    }
    _getBlock(blockHashOrBlockTag, includeTransactions) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        blockHashOrBlockTag = yield blockHashOrBlockTag;
        let blockNumber = -128;
        const params = {
          includeTransactions: !!includeTransactions
        };
        if (isHexString2(blockHashOrBlockTag, 32)) {
          params.blockHash = blockHashOrBlockTag;
        } else {
          try {
            params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);
            if (isHexString2(params.blockTag)) {
              blockNumber = parseInt(params.blockTag.substring(2), 16);
            }
          } catch (error) {
            logger49.throwArgumentError("invalid block hash or block tag", "blockHashOrBlockTag", blockHashOrBlockTag);
          }
        }
        return poll2(() => __awaiter25(this, void 0, void 0, function* () {
          const block = yield this.perform("getBlock", params);
          if (block == null) {
            if (params.blockHash != null) {
              if (this._emitted["b:" + params.blockHash] == null) {
                return null;
              }
            }
            if (params.blockTag != null) {
              if (blockNumber > this._emitted.block) {
                return null;
              }
            }
            return void 0;
          }
          if (includeTransactions) {
            let blockNumber2 = null;
            for (let i = 0; i < block.transactions.length; i++) {
              const tx = block.transactions[i];
              if (tx.blockNumber == null) {
                tx.confirmations = 0;
              } else if (tx.confirmations == null) {
                if (blockNumber2 == null) {
                  blockNumber2 = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
                }
                let confirmations = blockNumber2 - tx.blockNumber + 1;
                if (confirmations <= 0) {
                  confirmations = 1;
                }
                tx.confirmations = confirmations;
              }
            }
            const blockWithTxs = this.formatter.blockWithTransactions(block);
            blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));
            return blockWithTxs;
          }
          return this.formatter.block(block);
        }), { oncePoll: this });
      });
    }
    getBlock(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, false);
    }
    getBlockWithTransactions(blockHashOrBlockTag) {
      return this._getBlock(blockHashOrBlockTag, true);
    }
    getTransaction(transactionHash) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        transactionHash = yield transactionHash;
        const params = { transactionHash: this.formatter.hash(transactionHash, true) };
        return poll2(() => __awaiter25(this, void 0, void 0, function* () {
          const result = yield this.perform("getTransaction", params);
          if (result == null) {
            if (this._emitted["t:" + transactionHash] == null) {
              return null;
            }
            return void 0;
          }
          const tx = this.formatter.transactionResponse(result);
          if (tx.blockNumber == null) {
            tx.confirmations = 0;
          } else if (tx.confirmations == null) {
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            let confirmations = blockNumber - tx.blockNumber + 1;
            if (confirmations <= 0) {
              confirmations = 1;
            }
            tx.confirmations = confirmations;
          }
          return this._wrapTransaction(tx);
        }), { oncePoll: this });
      });
    }
    getTransactionReceipt(transactionHash) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        transactionHash = yield transactionHash;
        const params = { transactionHash: this.formatter.hash(transactionHash, true) };
        return poll2(() => __awaiter25(this, void 0, void 0, function* () {
          const result = yield this.perform("getTransactionReceipt", params);
          if (result == null) {
            if (this._emitted["t:" + transactionHash] == null) {
              return null;
            }
            return void 0;
          }
          if (result.blockHash == null) {
            return void 0;
          }
          const receipt = this.formatter.receipt(result);
          if (receipt.blockNumber == null) {
            receipt.confirmations = 0;
          } else if (receipt.confirmations == null) {
            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
            let confirmations = blockNumber - receipt.blockNumber + 1;
            if (confirmations <= 0) {
              confirmations = 1;
            }
            receipt.confirmations = confirmations;
          }
          return receipt;
        }), { oncePoll: this });
      });
    }
    getLogs(filter2) {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        const params = yield resolveProperties2({ filter: this._getFilter(filter2) });
        const logs = yield this.perform("getLogs", params);
        logs.forEach((log) => {
          if (log.removed == null) {
            log.removed = false;
          }
        });
        return Formatter2.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);
      });
    }
    getEtherPrice() {
      return __awaiter25(this, void 0, void 0, function* () {
        yield this.getNetwork();
        return this.perform("getEtherPrice", {});
      });
    }
    _getBlockTag(blockTag) {
      return __awaiter25(this, void 0, void 0, function* () {
        blockTag = yield blockTag;
        if (typeof blockTag === "number" && blockTag < 0) {
          if (blockTag % 1) {
            logger49.throwArgumentError("invalid BlockTag", "blockTag", blockTag);
          }
          let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);
          blockNumber += blockTag;
          if (blockNumber < 0) {
            blockNumber = 0;
          }
          return this.formatter.blockTag(blockNumber);
        }
        return this.formatter.blockTag(blockTag);
      });
    }
    getResolver(name) {
      return __awaiter25(this, void 0, void 0, function* () {
        let currentName = name;
        while (true) {
          if (currentName === "" || currentName === ".") {
            return null;
          }
          if (name !== "eth" && currentName === "eth") {
            return null;
          }
          const addr = yield this._getResolver(currentName, "getResolver");
          if (addr != null) {
            const resolver = new Resolver2(this, addr, name);
            if (currentName !== name && !(yield resolver.supportsWildcard())) {
              return null;
            }
            return resolver;
          }
          currentName = currentName.split(".").slice(1).join(".");
        }
      });
    }
    _getResolver(name, operation) {
      return __awaiter25(this, void 0, void 0, function* () {
        if (operation == null) {
          operation = "ENS";
        }
        const network = yield this.getNetwork();
        if (!network.ensAddress) {
          logger49.throwError("network does not support ENS", Logger2.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });
        }
        try {
          const addrData = yield this.call({
            to: network.ensAddress,
            data: "0x0178b8bf" + namehash2(name).substring(2)
          });
          return this.formatter.callAddress(addrData);
        } catch (error) {
        }
        return null;
      });
    }
    resolveName(name) {
      return __awaiter25(this, void 0, void 0, function* () {
        name = yield name;
        try {
          return Promise.resolve(this.formatter.address(name));
        } catch (error) {
          if (isHexString2(name)) {
            throw error;
          }
        }
        if (typeof name !== "string") {
          logger49.throwArgumentError("invalid ENS name", "name", name);
        }
        const resolver = yield this.getResolver(name);
        if (!resolver) {
          return null;
        }
        return yield resolver.getAddress();
      });
    }
    lookupAddress(address) {
      return __awaiter25(this, void 0, void 0, function* () {
        address = yield address;
        address = this.formatter.address(address);
        const node = address.substring(2).toLowerCase() + ".addr.reverse";
        const resolverAddr = yield this._getResolver(node, "lookupAddress");
        if (resolverAddr == null) {
          return null;
        }
        const name = _parseString2(yield this.call({
          to: resolverAddr,
          data: "0x691f3431" + namehash2(node).substring(2)
        }), 0);
        const addr = yield this.resolveName(name);
        if (addr != address) {
          return null;
        }
        return name;
      });
    }
    getAvatar(nameOrAddress) {
      return __awaiter25(this, void 0, void 0, function* () {
        let resolver = null;
        if (isHexString2(nameOrAddress)) {
          const address = this.formatter.address(nameOrAddress);
          const node = address.substring(2).toLowerCase() + ".addr.reverse";
          const resolverAddress = yield this._getResolver(node, "getAvatar");
          if (!resolverAddress) {
            return null;
          }
          resolver = new Resolver2(this, resolverAddress, node);
          try {
            const avatar2 = yield resolver.getAvatar();
            if (avatar2) {
              return avatar2.url;
            }
          } catch (error) {
            if (error.code !== Logger2.errors.CALL_EXCEPTION) {
              throw error;
            }
          }
          try {
            const name = _parseString2(yield this.call({
              to: resolverAddress,
              data: "0x691f3431" + namehash2(node).substring(2)
            }), 0);
            resolver = yield this.getResolver(name);
          } catch (error) {
            if (error.code !== Logger2.errors.CALL_EXCEPTION) {
              throw error;
            }
            return null;
          }
        } else {
          resolver = yield this.getResolver(nameOrAddress);
          if (!resolver) {
            return null;
          }
        }
        const avatar = yield resolver.getAvatar();
        if (avatar == null) {
          return null;
        }
        return avatar.url;
      });
    }
    perform(method, params) {
      return logger49.throwError(method + " not implemented", Logger2.errors.NOT_IMPLEMENTED, { operation: method });
    }
    _startEvent(event) {
      this.polling = this._events.filter((e) => e.pollable()).length > 0;
    }
    _stopEvent(event) {
      this.polling = this._events.filter((e) => e.pollable()).length > 0;
    }
    _addEventListener(eventName, listener, once) {
      const event = new Event2(getEventTag3(eventName), listener, once);
      this._events.push(event);
      this._startEvent(event);
      return this;
    }
    on(eventName, listener) {
      return this._addEventListener(eventName, listener, false);
    }
    once(eventName, listener) {
      return this._addEventListener(eventName, listener, true);
    }
    emit(eventName, ...args) {
      let result = false;
      let stopped = [];
      let eventTag = getEventTag3(eventName);
      this._events = this._events.filter((event) => {
        if (event.tag !== eventTag) {
          return true;
        }
        setTimeout(() => {
          event.listener.apply(this, args);
        }, 0);
        result = true;
        if (event.once) {
          stopped.push(event);
          return false;
        }
        return true;
      });
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return result;
    }
    listenerCount(eventName) {
      if (!eventName) {
        return this._events.length;
      }
      let eventTag = getEventTag3(eventName);
      return this._events.filter((event) => {
        return event.tag === eventTag;
      }).length;
    }
    listeners(eventName) {
      if (eventName == null) {
        return this._events.map((event) => event.listener);
      }
      let eventTag = getEventTag3(eventName);
      return this._events.filter((event) => event.tag === eventTag).map((event) => event.listener);
    }
    off(eventName, listener) {
      if (listener == null) {
        return this.removeAllListeners(eventName);
      }
      const stopped = [];
      let found = false;
      let eventTag = getEventTag3(eventName);
      this._events = this._events.filter((event) => {
        if (event.tag !== eventTag || event.listener != listener) {
          return true;
        }
        if (found) {
          return true;
        }
        found = true;
        stopped.push(event);
        return false;
      });
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return this;
    }
    removeAllListeners(eventName) {
      let stopped = [];
      if (eventName == null) {
        stopped = this._events;
        this._events = [];
      } else {
        const eventTag = getEventTag3(eventName);
        this._events = this._events.filter((event) => {
          if (event.tag !== eventTag) {
            return true;
          }
          stopped.push(event);
          return false;
        });
      }
      stopped.forEach((event) => {
        this._stopEvent(event);
      });
      return this;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js
  var __awaiter26 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger50 = new Logger2(version43);
  var errorGas2 = ["call", "estimateGas"];
  function spelunk2(value, requireData) {
    if (value == null) {
      return null;
    }
    if (typeof value.message === "string" && value.message.match("reverted")) {
      const data = isHexString2(value.data) ? value.data : null;
      if (!requireData || data) {
        return { message: value.message, data };
      }
    }
    if (typeof value === "object") {
      for (const key3 in value) {
        const result = spelunk2(value[key3], requireData);
        if (result) {
          return result;
        }
      }
      return null;
    }
    if (typeof value === "string") {
      try {
        return spelunk2(JSON.parse(value), requireData);
      } catch (error) {
      }
    }
    return null;
  }
  function checkError2(method, error, params) {
    const transaction = params.transaction || params.signedTransaction;
    if (method === "call") {
      const result = spelunk2(error, true);
      if (result) {
        return result.data;
      }
      logger50.throwError("missing revert data in call exception; Transaction reverted without a reason string", Logger2.errors.CALL_EXCEPTION, {
        data: "0x",
        transaction,
        error
      });
    }
    if (method === "estimateGas") {
      let result = spelunk2(error.body, false);
      if (result == null) {
        result = spelunk2(error, false);
      }
      if (result) {
        logger50.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger2.errors.UNPREDICTABLE_GAS_LIMIT, {
          reason: result.message,
          method,
          transaction,
          error
        });
      }
    }
    let message = error.message;
    if (error.code === Logger2.errors.SERVER_ERROR && error.error && typeof error.error.message === "string") {
      message = error.error.message;
    } else if (typeof error.body === "string") {
      message = error.body;
    } else if (typeof error.responseText === "string") {
      message = error.responseText;
    }
    message = (message || "").toLowerCase();
    if (message.match(/insufficient funds|base fee exceeds gas limit|InsufficientFunds/i)) {
      logger50.throwError("insufficient funds for intrinsic transaction cost", Logger2.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/nonce (is )?too low/i)) {
      logger50.throwError("nonce has already been used", Logger2.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/replacement transaction underpriced|transaction gas price.*too low/i)) {
      logger50.throwError("replacement fee too low", Logger2.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/only replay-protected/i)) {
      logger50.throwError("legacy pre-eip-155 transactions not supported", Logger2.errors.UNSUPPORTED_OPERATION, {
        error,
        method,
        transaction
      });
    }
    if (errorGas2.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted|revert/)) {
      logger50.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger2.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
      });
    }
    throw error;
  }
  function timer2(timeout) {
    return new Promise(function(resolve) {
      setTimeout(resolve, timeout);
    });
  }
  function getResult2(payload) {
    if (payload.error) {
      const error = new Error(payload.error.message);
      error.code = payload.error.code;
      error.data = payload.error.data;
      throw error;
    }
    return payload.result;
  }
  function getLowerCase2(value) {
    if (value) {
      return value.toLowerCase();
    }
    return value;
  }
  var _constructorGuard7 = {};
  var JsonRpcSigner2 = class extends Signer2 {
    constructor(constructorGuard, provider, addressOrIndex) {
      super();
      if (constructorGuard !== _constructorGuard7) {
        throw new Error("do not call the JsonRpcSigner constructor directly; use provider.getSigner");
      }
      defineReadOnly2(this, "provider", provider);
      if (addressOrIndex == null) {
        addressOrIndex = 0;
      }
      if (typeof addressOrIndex === "string") {
        defineReadOnly2(this, "_address", this.provider.formatter.address(addressOrIndex));
        defineReadOnly2(this, "_index", null);
      } else if (typeof addressOrIndex === "number") {
        defineReadOnly2(this, "_index", addressOrIndex);
        defineReadOnly2(this, "_address", null);
      } else {
        logger50.throwArgumentError("invalid address or index", "addressOrIndex", addressOrIndex);
      }
    }
    connect(provider) {
      return logger50.throwError("cannot alter JSON-RPC Signer connection", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "connect"
      });
    }
    connectUnchecked() {
      return new UncheckedJsonRpcSigner2(_constructorGuard7, this.provider, this._address || this._index);
    }
    getAddress() {
      if (this._address) {
        return Promise.resolve(this._address);
      }
      return this.provider.send("eth_accounts", []).then((accounts) => {
        if (accounts.length <= this._index) {
          logger50.throwError("unknown account #" + this._index, Logger2.errors.UNSUPPORTED_OPERATION, {
            operation: "getAddress"
          });
        }
        return this.provider.formatter.address(accounts[this._index]);
      });
    }
    sendUncheckedTransaction(transaction) {
      transaction = shallowCopy2(transaction);
      const fromAddress = this.getAddress().then((address) => {
        if (address) {
          address = address.toLowerCase();
        }
        return address;
      });
      if (transaction.gasLimit == null) {
        const estimate = shallowCopy2(transaction);
        estimate.from = fromAddress;
        transaction.gasLimit = this.provider.estimateGas(estimate);
      }
      if (transaction.to != null) {
        transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter26(this, void 0, void 0, function* () {
          if (to == null) {
            return null;
          }
          const address = yield this.provider.resolveName(to);
          if (address == null) {
            logger50.throwArgumentError("provided ENS name resolves to null", "tx.to", to);
          }
          return address;
        }));
      }
      return resolveProperties2({
        tx: resolveProperties2(transaction),
        sender: fromAddress
      }).then(({ tx, sender }) => {
        if (tx.from != null) {
          if (tx.from.toLowerCase() !== sender) {
            logger50.throwArgumentError("from address mismatch", "transaction", transaction);
          }
        } else {
          tx.from = sender;
        }
        const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });
        return this.provider.send("eth_sendTransaction", [hexTx]).then((hash3) => {
          return hash3;
        }, (error) => {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger50.throwError("user rejected transaction", Logger2.errors.ACTION_REJECTED, {
              action: "sendTransaction",
              transaction: tx
            });
          }
          return checkError2("sendTransaction", error, hexTx);
        });
      });
    }
    signTransaction(transaction) {
      return logger50.throwError("signing transactions is unsupported", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "signTransaction"
      });
    }
    sendTransaction(transaction) {
      return __awaiter26(this, void 0, void 0, function* () {
        const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);
        const hash3 = yield this.sendUncheckedTransaction(transaction);
        try {
          return yield poll2(() => __awaiter26(this, void 0, void 0, function* () {
            const tx = yield this.provider.getTransaction(hash3);
            if (tx === null) {
              return void 0;
            }
            return this.provider._wrapTransaction(tx, hash3, blockNumber);
          }), { oncePoll: this.provider });
        } catch (error) {
          error.transactionHash = hash3;
          throw error;
        }
      });
    }
    signMessage(message) {
      return __awaiter26(this, void 0, void 0, function* () {
        const data = typeof message === "string" ? toUtf8Bytes2(message) : message;
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("personal_sign", [hexlify2(data), address.toLowerCase()]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger50.throwError("user rejected signing", Logger2.errors.ACTION_REJECTED, {
              action: "signMessage",
              from: address,
              messageData: message
            });
          }
          throw error;
        }
      });
    }
    _legacySignMessage(message) {
      return __awaiter26(this, void 0, void 0, function* () {
        const data = typeof message === "string" ? toUtf8Bytes2(message) : message;
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("eth_sign", [address.toLowerCase(), hexlify2(data)]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger50.throwError("user rejected signing", Logger2.errors.ACTION_REJECTED, {
              action: "_legacySignMessage",
              from: address,
              messageData: message
            });
          }
          throw error;
        }
      });
    }
    _signTypedData(domain, types, value) {
      return __awaiter26(this, void 0, void 0, function* () {
        const populated = yield TypedDataEncoder2.resolveNames(domain, types, value, (name) => {
          return this.provider.resolveName(name);
        });
        const address = yield this.getAddress();
        try {
          return yield this.provider.send("eth_signTypedData_v4", [
            address.toLowerCase(),
            JSON.stringify(TypedDataEncoder2.getPayload(populated.domain, types, populated.value))
          ]);
        } catch (error) {
          if (typeof error.message === "string" && error.message.match(/user denied/i)) {
            logger50.throwError("user rejected signing", Logger2.errors.ACTION_REJECTED, {
              action: "_signTypedData",
              from: address,
              messageData: { domain: populated.domain, types, value: populated.value }
            });
          }
          throw error;
        }
      });
    }
    unlock(password) {
      return __awaiter26(this, void 0, void 0, function* () {
        const provider = this.provider;
        const address = yield this.getAddress();
        return provider.send("personal_unlockAccount", [address.toLowerCase(), password, null]);
      });
    }
  };
  var UncheckedJsonRpcSigner2 = class extends JsonRpcSigner2 {
    sendTransaction(transaction) {
      return this.sendUncheckedTransaction(transaction).then((hash3) => {
        return {
          hash: hash3,
          nonce: null,
          gasLimit: null,
          gasPrice: null,
          data: null,
          value: null,
          chainId: null,
          confirmations: 0,
          from: null,
          wait: (confirmations) => {
            return this.provider.waitForTransaction(hash3, confirmations);
          }
        };
      });
    }
  };
  var allowedTransactionKeys6 = {
    chainId: true,
    data: true,
    gasLimit: true,
    gasPrice: true,
    nonce: true,
    to: true,
    value: true,
    type: true,
    accessList: true,
    maxFeePerGas: true,
    maxPriorityFeePerGas: true
  };
  var JsonRpcProvider2 = class extends BaseProvider2 {
    constructor(url, network) {
      let networkOrReady = network;
      if (networkOrReady == null) {
        networkOrReady = new Promise((resolve, reject) => {
          setTimeout(() => {
            this.detectNetwork().then((network2) => {
              resolve(network2);
            }, (error) => {
              reject(error);
            });
          }, 0);
        });
      }
      super(networkOrReady);
      if (!url) {
        url = getStatic2(this.constructor, "defaultUrl")();
      }
      if (typeof url === "string") {
        defineReadOnly2(this, "connection", Object.freeze({
          url
        }));
      } else {
        defineReadOnly2(this, "connection", Object.freeze(shallowCopy2(url)));
      }
      this._nextId = 42;
    }
    get _cache() {
      if (this._eventLoopCache == null) {
        this._eventLoopCache = {};
      }
      return this._eventLoopCache;
    }
    static defaultUrl() {
      return "http://localhost:8545";
    }
    detectNetwork() {
      if (!this._cache["detectNetwork"]) {
        this._cache["detectNetwork"] = this._uncachedDetectNetwork();
        setTimeout(() => {
          this._cache["detectNetwork"] = null;
        }, 0);
      }
      return this._cache["detectNetwork"];
    }
    _uncachedDetectNetwork() {
      return __awaiter26(this, void 0, void 0, function* () {
        yield timer2(0);
        let chainId = null;
        try {
          chainId = yield this.send("eth_chainId", []);
        } catch (error) {
          try {
            chainId = yield this.send("net_version", []);
          } catch (error2) {
          }
        }
        if (chainId != null) {
          const getNetwork3 = getStatic2(this.constructor, "getNetwork");
          try {
            return getNetwork3(BigNumber2.from(chainId).toNumber());
          } catch (error) {
            return logger50.throwError("could not detect network", Logger2.errors.NETWORK_ERROR, {
              chainId,
              event: "invalidNetwork",
              serverError: error
            });
          }
        }
        return logger50.throwError("could not detect network", Logger2.errors.NETWORK_ERROR, {
          event: "noNetwork"
        });
      });
    }
    getSigner(addressOrIndex) {
      return new JsonRpcSigner2(_constructorGuard7, this, addressOrIndex);
    }
    getUncheckedSigner(addressOrIndex) {
      return this.getSigner(addressOrIndex).connectUnchecked();
    }
    listAccounts() {
      return this.send("eth_accounts", []).then((accounts) => {
        return accounts.map((a) => this.formatter.address(a));
      });
    }
    send(method, params) {
      const request = {
        method,
        params,
        id: this._nextId++,
        jsonrpc: "2.0"
      };
      this.emit("debug", {
        action: "request",
        request: deepCopy2(request),
        provider: this
      });
      const cache = ["eth_chainId", "eth_blockNumber"].indexOf(method) >= 0;
      if (cache && this._cache[method]) {
        return this._cache[method];
      }
      const result = fetchJson2(this.connection, JSON.stringify(request), getResult2).then((result2) => {
        this.emit("debug", {
          action: "response",
          request,
          response: result2,
          provider: this
        });
        return result2;
      }, (error) => {
        this.emit("debug", {
          action: "response",
          error,
          request,
          provider: this
        });
        throw error;
      });
      if (cache) {
        this._cache[method] = result;
        setTimeout(() => {
          this._cache[method] = null;
        }, 0);
      }
      return result;
    }
    prepareRequest(method, params) {
      switch (method) {
        case "getBlockNumber":
          return ["eth_blockNumber", []];
        case "getGasPrice":
          return ["eth_gasPrice", []];
        case "getBalance":
          return ["eth_getBalance", [getLowerCase2(params.address), params.blockTag]];
        case "getTransactionCount":
          return ["eth_getTransactionCount", [getLowerCase2(params.address), params.blockTag]];
        case "getCode":
          return ["eth_getCode", [getLowerCase2(params.address), params.blockTag]];
        case "getStorageAt":
          return ["eth_getStorageAt", [getLowerCase2(params.address), hexZeroPad2(params.position, 32), params.blockTag]];
        case "sendTransaction":
          return ["eth_sendRawTransaction", [params.signedTransaction]];
        case "getBlock":
          if (params.blockTag) {
            return ["eth_getBlockByNumber", [params.blockTag, !!params.includeTransactions]];
          } else if (params.blockHash) {
            return ["eth_getBlockByHash", [params.blockHash, !!params.includeTransactions]];
          }
          return null;
        case "getTransaction":
          return ["eth_getTransactionByHash", [params.transactionHash]];
        case "getTransactionReceipt":
          return ["eth_getTransactionReceipt", [params.transactionHash]];
        case "call": {
          const hexlifyTransaction = getStatic2(this.constructor, "hexlifyTransaction");
          return ["eth_call", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];
        }
        case "estimateGas": {
          const hexlifyTransaction = getStatic2(this.constructor, "hexlifyTransaction");
          return ["eth_estimateGas", [hexlifyTransaction(params.transaction, { from: true })]];
        }
        case "getLogs":
          if (params.filter && params.filter.address != null) {
            params.filter.address = getLowerCase2(params.filter.address);
          }
          return ["eth_getLogs", [params.filter]];
        default:
          break;
      }
      return null;
    }
    perform(method, params) {
      return __awaiter26(this, void 0, void 0, function* () {
        if (method === "call" || method === "estimateGas") {
          const tx = params.transaction;
          if (tx && tx.type != null && BigNumber2.from(tx.type).isZero()) {
            if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {
              const feeData = yield this.getFeeData();
              if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {
                params = shallowCopy2(params);
                params.transaction = shallowCopy2(tx);
                delete params.transaction.type;
              }
            }
          }
        }
        const args = this.prepareRequest(method, params);
        if (args == null) {
          logger50.throwError(method + " not implemented", Logger2.errors.NOT_IMPLEMENTED, { operation: method });
        }
        try {
          return yield this.send(args[0], args[1]);
        } catch (error) {
          return checkError2(method, error, params);
        }
      });
    }
    _startEvent(event) {
      if (event.tag === "pending") {
        this._startPending();
      }
      super._startEvent(event);
    }
    _startPending() {
      if (this._pendingFilter != null) {
        return;
      }
      const self2 = this;
      const pendingFilter = this.send("eth_newPendingTransactionFilter", []);
      this._pendingFilter = pendingFilter;
      pendingFilter.then(function(filterId) {
        function poll3() {
          self2.send("eth_getFilterChanges", [filterId]).then(function(hashes) {
            if (self2._pendingFilter != pendingFilter) {
              return null;
            }
            let seq = Promise.resolve();
            hashes.forEach(function(hash3) {
              self2._emitted["t:" + hash3.toLowerCase()] = "pending";
              seq = seq.then(function() {
                return self2.getTransaction(hash3).then(function(tx) {
                  self2.emit("pending", tx);
                  return null;
                });
              });
            });
            return seq.then(function() {
              return timer2(1e3);
            });
          }).then(function() {
            if (self2._pendingFilter != pendingFilter) {
              self2.send("eth_uninstallFilter", [filterId]);
              return;
            }
            setTimeout(function() {
              poll3();
            }, 0);
            return null;
          }).catch((error) => {
          });
        }
        poll3();
        return filterId;
      }).catch((error) => {
      });
    }
    _stopEvent(event) {
      if (event.tag === "pending" && this.listenerCount("pending") === 0) {
        this._pendingFilter = null;
      }
      super._stopEvent(event);
    }
    // Convert an ethers.js transaction into a JSON-RPC transaction
    //  - gasLimit => gas
    //  - All values hexlified
    //  - All numeric values zero-striped
    //  - All addresses are lowercased
    // NOTE: This allows a TransactionRequest, but all values should be resolved
    //       before this is called
    // @TODO: This will likely be removed in future versions and prepareRequest
    //        will be the preferred method for this.
    static hexlifyTransaction(transaction, allowExtra) {
      const allowed = shallowCopy2(allowedTransactionKeys6);
      if (allowExtra) {
        for (const key3 in allowExtra) {
          if (allowExtra[key3]) {
            allowed[key3] = true;
          }
        }
      }
      checkProperties2(transaction, allowed);
      const result = {};
      ["chainId", "gasLimit", "gasPrice", "type", "maxFeePerGas", "maxPriorityFeePerGas", "nonce", "value"].forEach(function(key3) {
        if (transaction[key3] == null) {
          return;
        }
        const value = hexValue2(BigNumber2.from(transaction[key3]));
        if (key3 === "gasLimit") {
          key3 = "gas";
        }
        result[key3] = value;
      });
      ["from", "to", "data"].forEach(function(key3) {
        if (transaction[key3] == null) {
          return;
        }
        result[key3] = hexlify2(transaction[key3]);
      });
      if (transaction.accessList) {
        result["accessList"] = accessListify2(transaction.accessList);
      }
      return result;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/ws.js
  var WS = null;
  try {
    WS = WebSocket;
    if (WS == null) {
      throw new Error("inject please");
    }
  } catch (error) {
    const logger66 = new Logger2(version43);
    WS = function() {
      logger66.throwError("WebSockets not supported in this environment", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "new WebSocket()"
      });
    };
  }

  // node_modules/@ethersproject/providers/lib.esm/websocket-provider.js
  var __awaiter27 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger51 = new Logger2(version43);
  var NextId = 1;
  var WebSocketProvider = class extends JsonRpcProvider2 {
    constructor(url, network) {
      if (network === "any") {
        logger51.throwError("WebSocketProvider does not support 'any' network yet", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "network:any"
        });
      }
      if (typeof url === "string") {
        super(url, network);
      } else {
        super("_websocket", network);
      }
      this._pollingInterval = -1;
      this._wsReady = false;
      if (typeof url === "string") {
        defineReadOnly2(this, "_websocket", new WS(this.connection.url));
      } else {
        defineReadOnly2(this, "_websocket", url);
      }
      defineReadOnly2(this, "_requests", {});
      defineReadOnly2(this, "_subs", {});
      defineReadOnly2(this, "_subIds", {});
      defineReadOnly2(this, "_detectNetwork", super.detectNetwork());
      this.websocket.onopen = () => {
        this._wsReady = true;
        Object.keys(this._requests).forEach((id3) => {
          this.websocket.send(this._requests[id3].payload);
        });
      };
      this.websocket.onmessage = (messageEvent) => {
        const data = messageEvent.data;
        const result = JSON.parse(data);
        if (result.id != null) {
          const id3 = String(result.id);
          const request = this._requests[id3];
          delete this._requests[id3];
          if (result.result !== void 0) {
            request.callback(null, result.result);
            this.emit("debug", {
              action: "response",
              request: JSON.parse(request.payload),
              response: result.result,
              provider: this
            });
          } else {
            let error = null;
            if (result.error) {
              error = new Error(result.error.message || "unknown error");
              defineReadOnly2(error, "code", result.error.code || null);
              defineReadOnly2(error, "response", data);
            } else {
              error = new Error("unknown error");
            }
            request.callback(error, void 0);
            this.emit("debug", {
              action: "response",
              error,
              request: JSON.parse(request.payload),
              provider: this
            });
          }
        } else if (result.method === "eth_subscription") {
          const sub = this._subs[result.params.subscription];
          if (sub) {
            sub.processFunc(result.params.result);
          }
        } else {
          console.warn("this should not happen");
        }
      };
      const fauxPoll = setInterval(() => {
        this.emit("poll");
      }, 1e3);
      if (fauxPoll.unref) {
        fauxPoll.unref();
      }
    }
    // Cannot narrow the type of _websocket, as that is not backwards compatible
    // so we add a getter and let the WebSocket be a public API.
    get websocket() {
      return this._websocket;
    }
    detectNetwork() {
      return this._detectNetwork;
    }
    get pollingInterval() {
      return 0;
    }
    resetEventsBlock(blockNumber) {
      logger51.throwError("cannot reset events block on WebSocketProvider", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "resetEventBlock"
      });
    }
    set pollingInterval(value) {
      logger51.throwError("cannot set polling interval on WebSocketProvider", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "setPollingInterval"
      });
    }
    poll() {
      return __awaiter27(this, void 0, void 0, function* () {
        return null;
      });
    }
    set polling(value) {
      if (!value) {
        return;
      }
      logger51.throwError("cannot set polling on WebSocketProvider", Logger2.errors.UNSUPPORTED_OPERATION, {
        operation: "setPolling"
      });
    }
    send(method, params) {
      const rid = NextId++;
      return new Promise((resolve, reject) => {
        function callback(error, result) {
          if (error) {
            return reject(error);
          }
          return resolve(result);
        }
        const payload = JSON.stringify({
          method,
          params,
          id: rid,
          jsonrpc: "2.0"
        });
        this.emit("debug", {
          action: "request",
          request: JSON.parse(payload),
          provider: this
        });
        this._requests[String(rid)] = { callback, payload };
        if (this._wsReady) {
          this.websocket.send(payload);
        }
      });
    }
    static defaultUrl() {
      return "ws://localhost:8546";
    }
    _subscribe(tag, param, processFunc) {
      return __awaiter27(this, void 0, void 0, function* () {
        let subIdPromise = this._subIds[tag];
        if (subIdPromise == null) {
          subIdPromise = Promise.all(param).then((param2) => {
            return this.send("eth_subscribe", param2);
          });
          this._subIds[tag] = subIdPromise;
        }
        const subId = yield subIdPromise;
        this._subs[subId] = { tag, processFunc };
      });
    }
    _startEvent(event) {
      switch (event.type) {
        case "block":
          this._subscribe("block", ["newHeads"], (result) => {
            const blockNumber = BigNumber2.from(result.number).toNumber();
            this._emitted.block = blockNumber;
            this.emit("block", blockNumber);
          });
          break;
        case "pending":
          this._subscribe("pending", ["newPendingTransactions"], (result) => {
            this.emit("pending", result);
          });
          break;
        case "filter":
          this._subscribe(event.tag, ["logs", this._getFilter(event.filter)], (result) => {
            if (result.removed == null) {
              result.removed = false;
            }
            this.emit(event.filter, this.formatter.filterLog(result));
          });
          break;
        case "tx": {
          const emitReceipt = (event2) => {
            const hash3 = event2.hash;
            this.getTransactionReceipt(hash3).then((receipt) => {
              if (!receipt) {
                return;
              }
              this.emit(hash3, receipt);
            });
          };
          emitReceipt(event);
          this._subscribe("tx", ["newHeads"], (result) => {
            this._events.filter((e) => e.type === "tx").forEach(emitReceipt);
          });
          break;
        }
        case "debug":
        case "poll":
        case "willPoll":
        case "didPoll":
        case "error":
          break;
        default:
          console.log("unhandled:", event);
          break;
      }
    }
    _stopEvent(event) {
      let tag = event.tag;
      if (event.type === "tx") {
        if (this._events.filter((e) => e.type === "tx").length) {
          return;
        }
        tag = "tx";
      } else if (this.listenerCount(event.event)) {
        return;
      }
      const subId = this._subIds[tag];
      if (!subId) {
        return;
      }
      delete this._subIds[tag];
      subId.then((subId2) => {
        if (!this._subs[subId2]) {
          return;
        }
        delete this._subs[subId2];
        this.send("eth_unsubscribe", [subId2]);
      });
    }
    destroy() {
      return __awaiter27(this, void 0, void 0, function* () {
        if (this.websocket.readyState === WS.CONNECTING) {
          yield new Promise((resolve) => {
            this.websocket.onopen = function() {
              resolve(true);
            };
            this.websocket.onerror = function() {
              resolve(false);
            };
          });
        }
        this.websocket.close(1e3);
      });
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js
  var __awaiter28 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger52 = new Logger2(version43);
  var StaticJsonRpcProvider = class extends JsonRpcProvider2 {
    detectNetwork() {
      const _super = Object.create(null, {
        detectNetwork: { get: () => super.detectNetwork }
      });
      return __awaiter28(this, void 0, void 0, function* () {
        let network = this.network;
        if (network == null) {
          network = yield _super.detectNetwork.call(this);
          if (!network) {
            logger52.throwError("no network detected", Logger2.errors.UNKNOWN_ERROR, {});
          }
          if (this._network == null) {
            defineReadOnly2(this, "_network", network);
            this.emit("network", network, null);
          }
        }
        return network;
      });
    }
  };
  var UrlJsonRpcProvider = class _UrlJsonRpcProvider extends StaticJsonRpcProvider {
    constructor(network, apiKey) {
      logger52.checkAbstract(new.target, _UrlJsonRpcProvider);
      network = getStatic2(new.target, "getNetwork")(network);
      apiKey = getStatic2(new.target, "getApiKey")(apiKey);
      const connection = getStatic2(new.target, "getUrl")(network, apiKey);
      super(connection, network);
      if (typeof apiKey === "string") {
        defineReadOnly2(this, "apiKey", apiKey);
      } else if (apiKey != null) {
        Object.keys(apiKey).forEach((key3) => {
          defineReadOnly2(this, key3, apiKey[key3]);
        });
      }
    }
    _startPending() {
      logger52.warn("WARNING: API provider does not support pending filters");
    }
    isCommunityResource() {
      return false;
    }
    getSigner(address) {
      return logger52.throwError("API provider does not support signing", Logger2.errors.UNSUPPORTED_OPERATION, { operation: "getSigner" });
    }
    listAccounts() {
      return Promise.resolve([]);
    }
    // Return a defaultApiKey if null, otherwise validate the API key
    static getApiKey(apiKey) {
      return apiKey;
    }
    // Returns the url or connection for the given network and API key. The
    // API key will have been sanitized by the getApiKey first, so any validation
    // or transformations can be done there.
    static getUrl(network, apiKey) {
      return logger52.throwError("not implemented; sub-classes must override getUrl", Logger2.errors.NOT_IMPLEMENTED, {
        operation: "getUrl"
      });
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js
  var logger53 = new Logger2(version43);
  var defaultApiKey = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
  var AlchemyWebSocketProvider = class extends WebSocketProvider {
    constructor(network, apiKey) {
      const provider = new AlchemyProvider(network, apiKey);
      const url = provider.connection.url.replace(/^http/i, "ws").replace(".alchemyapi.", ".ws.alchemyapi.");
      super(url, provider.network);
      defineReadOnly2(this, "apiKey", provider.apiKey);
    }
    isCommunityResource() {
      return this.apiKey === defaultApiKey;
    }
  };
  var AlchemyProvider = class extends UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
      return new AlchemyWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
      if (apiKey == null) {
        return defaultApiKey;
      }
      if (apiKey && typeof apiKey !== "string") {
        logger53.throwArgumentError("invalid apiKey", "apiKey", apiKey);
      }
      return apiKey;
    }
    static getUrl(network, apiKey) {
      let host = null;
      switch (network.name) {
        case "homestead":
          host = "eth-mainnet.alchemyapi.io/v2/";
          break;
        case "goerli":
          host = "eth-goerli.g.alchemy.com/v2/";
          break;
        case "matic":
          host = "polygon-mainnet.g.alchemy.com/v2/";
          break;
        case "maticmum":
          host = "polygon-mumbai.g.alchemy.com/v2/";
          break;
        case "arbitrum":
          host = "arb-mainnet.g.alchemy.com/v2/";
          break;
        case "arbitrum-goerli":
          host = "arb-goerli.g.alchemy.com/v2/";
          break;
        case "optimism":
          host = "opt-mainnet.g.alchemy.com/v2/";
          break;
        case "optimism-goerli":
          host = "opt-goerli.g.alchemy.com/v2/";
          break;
        default:
          logger53.throwArgumentError("unsupported network", "network", arguments[0]);
      }
      return {
        allowGzip: true,
        url: "https://" + host + apiKey,
        throttleCallback: (attempt, url) => {
          if (apiKey === defaultApiKey) {
            showThrottleMessage();
          }
          return Promise.resolve(true);
        }
      };
    }
    isCommunityResource() {
      return this.apiKey === defaultApiKey;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/ankr-provider.js
  var logger54 = new Logger2(version43);
  var defaultApiKey2 = "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
  function getHost(name) {
    switch (name) {
      case "homestead":
        return "rpc.ankr.com/eth/";
      case "ropsten":
        return "rpc.ankr.com/eth_ropsten/";
      case "rinkeby":
        return "rpc.ankr.com/eth_rinkeby/";
      case "goerli":
        return "rpc.ankr.com/eth_goerli/";
      case "matic":
        return "rpc.ankr.com/polygon/";
      case "arbitrum":
        return "rpc.ankr.com/arbitrum/";
    }
    return logger54.throwArgumentError("unsupported network", "name", name);
  }
  var AnkrProvider = class extends UrlJsonRpcProvider {
    isCommunityResource() {
      return this.apiKey === defaultApiKey2;
    }
    static getApiKey(apiKey) {
      if (apiKey == null) {
        return defaultApiKey2;
      }
      return apiKey;
    }
    static getUrl(network, apiKey) {
      if (apiKey == null) {
        apiKey = defaultApiKey2;
      }
      const connection = {
        allowGzip: true,
        url: "https://" + getHost(network.name) + apiKey,
        throttleCallback: (attempt, url) => {
          if (apiKey.apiKey === defaultApiKey2) {
            showThrottleMessage();
          }
          return Promise.resolve(true);
        }
      };
      if (apiKey.projectSecret != null) {
        connection.user = "";
        connection.password = apiKey.projectSecret;
      }
      return connection;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js
  var __awaiter29 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger55 = new Logger2(version43);
  var CloudflareProvider = class extends UrlJsonRpcProvider {
    static getApiKey(apiKey) {
      if (apiKey != null) {
        logger55.throwArgumentError("apiKey not supported for cloudflare", "apiKey", apiKey);
      }
      return null;
    }
    static getUrl(network, apiKey) {
      let host = null;
      switch (network.name) {
        case "homestead":
          host = "https://cloudflare-eth.com/";
          break;
        default:
          logger55.throwArgumentError("unsupported network", "network", arguments[0]);
      }
      return host;
    }
    perform(method, params) {
      const _super = Object.create(null, {
        perform: { get: () => super.perform }
      });
      return __awaiter29(this, void 0, void 0, function* () {
        if (method === "getBlockNumber") {
          const block = yield _super.perform.call(this, "getBlock", { blockTag: "latest" });
          return block.number;
        }
        return _super.perform.call(this, method, params);
      });
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js
  var __awaiter30 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger56 = new Logger2(version43);
  function getTransactionPostData(transaction) {
    const result = {};
    for (let key3 in transaction) {
      if (transaction[key3] == null) {
        continue;
      }
      let value = transaction[key3];
      if (key3 === "type" && value === 0) {
        continue;
      }
      if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key3]) {
        value = hexValue2(hexlify2(value));
      } else if (key3 === "accessList") {
        value = "[" + accessListify2(value).map((set) => {
          return `{address:"${set.address}",storageKeys:["${set.storageKeys.join('","')}"]}`;
        }).join(",") + "]";
      } else {
        value = hexlify2(value);
      }
      result[key3] = value;
    }
    return result;
  }
  function getResult3(result) {
    if (result.status == 0 && (result.message === "No records found" || result.message === "No transactions found")) {
      return result.result;
    }
    if (result.status != 1 || typeof result.message !== "string" || !result.message.match(/^OK/)) {
      const error = new Error("invalid response");
      error.result = JSON.stringify(result);
      if ((result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
        error.throttleRetry = true;
      }
      throw error;
    }
    return result.result;
  }
  function getJsonResult(result) {
    if (result && result.status == 0 && result.message == "NOTOK" && (result.result || "").toLowerCase().indexOf("rate limit") >= 0) {
      const error = new Error("throttled response");
      error.result = JSON.stringify(result);
      error.throttleRetry = true;
      throw error;
    }
    if (result.jsonrpc != "2.0") {
      const error = new Error("invalid response");
      error.result = JSON.stringify(result);
      throw error;
    }
    if (result.error) {
      const error = new Error(result.error.message || "unknown error");
      if (result.error.code) {
        error.code = result.error.code;
      }
      if (result.error.data) {
        error.data = result.error.data;
      }
      throw error;
    }
    return result.result;
  }
  function checkLogTag(blockTag) {
    if (blockTag === "pending") {
      throw new Error("pending not supported");
    }
    if (blockTag === "latest") {
      return blockTag;
    }
    return parseInt(blockTag.substring(2), 16);
  }
  function checkError3(method, error, transaction) {
    if (method === "call" && error.code === Logger2.errors.SERVER_ERROR) {
      const e = error.error;
      if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {
        let data = e.data;
        if (data) {
          data = "0x" + data.replace(/^.*0x/i, "");
        }
        if (isHexString2(data)) {
          return data;
        }
        logger56.throwError("missing revert data in call exception", Logger2.errors.CALL_EXCEPTION, {
          error,
          data: "0x"
        });
      }
    }
    let message = error.message;
    if (error.code === Logger2.errors.SERVER_ERROR) {
      if (error.error && typeof error.error.message === "string") {
        message = error.error.message;
      } else if (typeof error.body === "string") {
        message = error.body;
      } else if (typeof error.responseText === "string") {
        message = error.responseText;
      }
    }
    message = (message || "").toLowerCase();
    if (message.match(/insufficient funds/)) {
      logger56.throwError("insufficient funds for intrinsic transaction cost", Logger2.errors.INSUFFICIENT_FUNDS, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {
      logger56.throwError("nonce has already been used", Logger2.errors.NONCE_EXPIRED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/another transaction with same nonce/)) {
      logger56.throwError("replacement fee too low", Logger2.errors.REPLACEMENT_UNDERPRICED, {
        error,
        method,
        transaction
      });
    }
    if (message.match(/execution failed due to an exception|execution reverted/)) {
      logger56.throwError("cannot estimate gas; transaction may fail or may require manual gas limit", Logger2.errors.UNPREDICTABLE_GAS_LIMIT, {
        error,
        method,
        transaction
      });
    }
    throw error;
  }
  var EtherscanProvider = class extends BaseProvider2 {
    constructor(network, apiKey) {
      super(network);
      defineReadOnly2(this, "baseUrl", this.getBaseUrl());
      defineReadOnly2(this, "apiKey", apiKey || null);
    }
    getBaseUrl() {
      switch (this.network ? this.network.name : "invalid") {
        case "homestead":
          return "https://api.etherscan.io";
        case "goerli":
          return "https://api-goerli.etherscan.io";
        case "sepolia":
          return "https://api-sepolia.etherscan.io";
        case "matic":
          return "https://api.polygonscan.com";
        case "maticmum":
          return "https://api-testnet.polygonscan.com";
        case "arbitrum":
          return "https://api.arbiscan.io";
        case "arbitrum-goerli":
          return "https://api-goerli.arbiscan.io";
        case "optimism":
          return "https://api-optimistic.etherscan.io";
        case "optimism-goerli":
          return "https://api-goerli-optimistic.etherscan.io";
        default:
      }
      return logger56.throwArgumentError("unsupported network", "network", this.network.name);
    }
    getUrl(module, params) {
      const query = Object.keys(params).reduce((accum, key3) => {
        const value = params[key3];
        if (value != null) {
          accum += `&${key3}=${value}`;
        }
        return accum;
      }, "");
      const apiKey = this.apiKey ? `&apikey=${this.apiKey}` : "";
      return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;
    }
    getPostUrl() {
      return `${this.baseUrl}/api`;
    }
    getPostData(module, params) {
      params.module = module;
      params.apikey = this.apiKey;
      return params;
    }
    fetch(module, params, post2) {
      return __awaiter30(this, void 0, void 0, function* () {
        const url = post2 ? this.getPostUrl() : this.getUrl(module, params);
        const payload = post2 ? this.getPostData(module, params) : null;
        const procFunc = module === "proxy" ? getJsonResult : getResult3;
        this.emit("debug", {
          action: "request",
          request: url,
          provider: this
        });
        const connection = {
          url,
          throttleSlotInterval: 1e3,
          throttleCallback: (attempt, url2) => {
            if (this.isCommunityResource()) {
              showThrottleMessage();
            }
            return Promise.resolve(true);
          }
        };
        let payloadStr = null;
        if (payload) {
          connection.headers = { "content-type": "application/x-www-form-urlencoded; charset=UTF-8" };
          payloadStr = Object.keys(payload).map((key3) => {
            return `${key3}=${payload[key3]}`;
          }).join("&");
        }
        const result = yield fetchJson2(connection, payloadStr, procFunc || getJsonResult);
        this.emit("debug", {
          action: "response",
          request: url,
          response: deepCopy2(result),
          provider: this
        });
        return result;
      });
    }
    detectNetwork() {
      return __awaiter30(this, void 0, void 0, function* () {
        return this.network;
      });
    }
    perform(method, params) {
      const _super = Object.create(null, {
        perform: { get: () => super.perform }
      });
      return __awaiter30(this, void 0, void 0, function* () {
        switch (method) {
          case "getBlockNumber":
            return this.fetch("proxy", { action: "eth_blockNumber" });
          case "getGasPrice":
            return this.fetch("proxy", { action: "eth_gasPrice" });
          case "getBalance":
            return this.fetch("account", {
              action: "balance",
              address: params.address,
              tag: params.blockTag
            });
          case "getTransactionCount":
            return this.fetch("proxy", {
              action: "eth_getTransactionCount",
              address: params.address,
              tag: params.blockTag
            });
          case "getCode":
            return this.fetch("proxy", {
              action: "eth_getCode",
              address: params.address,
              tag: params.blockTag
            });
          case "getStorageAt":
            return this.fetch("proxy", {
              action: "eth_getStorageAt",
              address: params.address,
              position: params.position,
              tag: params.blockTag
            });
          case "sendTransaction":
            return this.fetch("proxy", {
              action: "eth_sendRawTransaction",
              hex: params.signedTransaction
            }, true).catch((error) => {
              return checkError3("sendTransaction", error, params.signedTransaction);
            });
          case "getBlock":
            if (params.blockTag) {
              return this.fetch("proxy", {
                action: "eth_getBlockByNumber",
                tag: params.blockTag,
                boolean: params.includeTransactions ? "true" : "false"
              });
            }
            throw new Error("getBlock by blockHash not implemented");
          case "getTransaction":
            return this.fetch("proxy", {
              action: "eth_getTransactionByHash",
              txhash: params.transactionHash
            });
          case "getTransactionReceipt":
            return this.fetch("proxy", {
              action: "eth_getTransactionReceipt",
              txhash: params.transactionHash
            });
          case "call": {
            if (params.blockTag !== "latest") {
              throw new Error("EtherscanProvider does not support blockTag for call");
            }
            const postData = getTransactionPostData(params.transaction);
            postData.module = "proxy";
            postData.action = "eth_call";
            try {
              return yield this.fetch("proxy", postData, true);
            } catch (error) {
              return checkError3("call", error, params.transaction);
            }
          }
          case "estimateGas": {
            const postData = getTransactionPostData(params.transaction);
            postData.module = "proxy";
            postData.action = "eth_estimateGas";
            try {
              return yield this.fetch("proxy", postData, true);
            } catch (error) {
              return checkError3("estimateGas", error, params.transaction);
            }
          }
          case "getLogs": {
            const args = { action: "getLogs" };
            if (params.filter.fromBlock) {
              args.fromBlock = checkLogTag(params.filter.fromBlock);
            }
            if (params.filter.toBlock) {
              args.toBlock = checkLogTag(params.filter.toBlock);
            }
            if (params.filter.address) {
              args.address = params.filter.address;
            }
            if (params.filter.topics && params.filter.topics.length > 0) {
              if (params.filter.topics.length > 1) {
                logger56.throwError("unsupported topic count", Logger2.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });
              }
              if (params.filter.topics.length === 1) {
                const topic0 = params.filter.topics[0];
                if (typeof topic0 !== "string" || topic0.length !== 66) {
                  logger56.throwError("unsupported topic format", Logger2.errors.UNSUPPORTED_OPERATION, { topic0 });
                }
                args.topic0 = topic0;
              }
            }
            const logs = yield this.fetch("logs", args);
            let blocks = {};
            for (let i = 0; i < logs.length; i++) {
              const log = logs[i];
              if (log.blockHash != null) {
                continue;
              }
              if (blocks[log.blockNumber] == null) {
                const block = yield this.getBlock(log.blockNumber);
                if (block) {
                  blocks[log.blockNumber] = block.hash;
                }
              }
              log.blockHash = blocks[log.blockNumber];
            }
            return logs;
          }
          case "getEtherPrice":
            if (this.network.name !== "homestead") {
              return 0;
            }
            return parseFloat((yield this.fetch("stats", { action: "ethprice" })).ethusd);
          default:
            break;
        }
        return _super.perform.call(this, method, params);
      });
    }
    // Note: The `page` page parameter only allows pagination within the
    //       10,000 window available without a page and offset parameter
    //       Error: Result window is too large, PageNo x Offset size must
    //              be less than or equal to 10000
    getHistory(addressOrName, startBlock, endBlock) {
      return __awaiter30(this, void 0, void 0, function* () {
        const params = {
          action: "txlist",
          address: yield this.resolveName(addressOrName),
          startblock: startBlock == null ? 0 : startBlock,
          endblock: endBlock == null ? 99999999 : endBlock,
          sort: "asc"
        };
        const result = yield this.fetch("account", params);
        return result.map((tx) => {
          ["contractAddress", "to"].forEach(function(key3) {
            if (tx[key3] == "") {
              delete tx[key3];
            }
          });
          if (tx.creates == null && tx.contractAddress != null) {
            tx.creates = tx.contractAddress;
          }
          const item = this.formatter.transactionResponse(tx);
          if (tx.timeStamp) {
            item.timestamp = parseInt(tx.timeStamp);
          }
          return item;
        });
      });
    }
    isCommunityResource() {
      return this.apiKey == null;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/fallback-provider.js
  var __awaiter31 = function(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function(resolve) {
        resolve(value);
      });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }
      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }
      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }
      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  };
  var logger57 = new Logger2(version43);
  function now() {
    return (/* @__PURE__ */ new Date()).getTime();
  }
  function checkNetworks(networks3) {
    let result = null;
    for (let i = 0; i < networks3.length; i++) {
      const network = networks3[i];
      if (network == null) {
        return null;
      }
      if (result) {
        if (!(result.name === network.name && result.chainId === network.chainId && (result.ensAddress === network.ensAddress || result.ensAddress == null && network.ensAddress == null))) {
          logger57.throwArgumentError("provider mismatch", "networks", networks3);
        }
      } else {
        result = network;
      }
    }
    return result;
  }
  function median(values, maxDelta) {
    values = values.slice().sort();
    const middle = Math.floor(values.length / 2);
    if (values.length % 2) {
      return values[middle];
    }
    const a = values[middle - 1], b = values[middle];
    if (maxDelta != null && Math.abs(a - b) > maxDelta) {
      return null;
    }
    return (a + b) / 2;
  }
  function serialize2(value) {
    if (value === null) {
      return "null";
    } else if (typeof value === "number" || typeof value === "boolean") {
      return JSON.stringify(value);
    } else if (typeof value === "string") {
      return value;
    } else if (BigNumber2.isBigNumber(value)) {
      return value.toString();
    } else if (Array.isArray(value)) {
      return JSON.stringify(value.map((i) => serialize2(i)));
    } else if (typeof value === "object") {
      const keys = Object.keys(value);
      keys.sort();
      return "{" + keys.map((key3) => {
        let v = value[key3];
        if (typeof v === "function") {
          v = "[function]";
        } else {
          v = serialize2(v);
        }
        return JSON.stringify(key3) + ":" + v;
      }).join(",") + "}";
    }
    throw new Error("unknown value type: " + typeof value);
  }
  var nextRid = 1;
  function stall3(duration) {
    let cancel = null;
    let timer3 = null;
    let promise = new Promise((resolve) => {
      cancel = function() {
        if (timer3) {
          clearTimeout(timer3);
          timer3 = null;
        }
        resolve();
      };
      timer3 = setTimeout(cancel, duration);
    });
    const wait = (func) => {
      promise = promise.then(func);
      return promise;
    };
    function getPromise() {
      return promise;
    }
    return { cancel, getPromise, wait };
  }
  var ForwardErrors = [
    Logger2.errors.CALL_EXCEPTION,
    Logger2.errors.INSUFFICIENT_FUNDS,
    Logger2.errors.NONCE_EXPIRED,
    Logger2.errors.REPLACEMENT_UNDERPRICED,
    Logger2.errors.UNPREDICTABLE_GAS_LIMIT
  ];
  var ForwardProperties = [
    "address",
    "args",
    "errorArgs",
    "errorSignature",
    "method",
    "transaction"
  ];
  function exposeDebugConfig(config, now2) {
    const result = {
      weight: config.weight
    };
    Object.defineProperty(result, "provider", { get: () => config.provider });
    if (config.start) {
      result.start = config.start;
    }
    if (now2) {
      result.duration = now2 - config.start;
    }
    if (config.done) {
      if (config.error) {
        result.error = config.error;
      } else {
        result.result = config.result || null;
      }
    }
    return result;
  }
  function normalizedTally(normalize3, quorum) {
    return function(configs) {
      const tally = {};
      configs.forEach((c) => {
        const value = normalize3(c.result);
        if (!tally[value]) {
          tally[value] = { count: 0, result: c.result };
        }
        tally[value].count++;
      });
      const keys = Object.keys(tally);
      for (let i = 0; i < keys.length; i++) {
        const check = tally[keys[i]];
        if (check.count >= quorum) {
          return check.result;
        }
      }
      return void 0;
    };
  }
  function getProcessFunc(provider, method, params) {
    let normalize3 = serialize2;
    switch (method) {
      case "getBlockNumber":
        return function(configs) {
          const values = configs.map((c) => c.result);
          let blockNumber = median(configs.map((c) => c.result), 2);
          if (blockNumber == null) {
            return void 0;
          }
          blockNumber = Math.ceil(blockNumber);
          if (values.indexOf(blockNumber + 1) >= 0) {
            blockNumber++;
          }
          if (blockNumber >= provider._highestBlockNumber) {
            provider._highestBlockNumber = blockNumber;
          }
          return provider._highestBlockNumber;
        };
      case "getGasPrice":
        return function(configs) {
          const values = configs.map((c) => c.result);
          values.sort();
          return values[Math.floor(values.length / 2)];
        };
      case "getEtherPrice":
        return function(configs) {
          return median(configs.map((c) => c.result));
        };
      case "getBalance":
      case "getTransactionCount":
      case "getCode":
      case "getStorageAt":
      case "call":
      case "estimateGas":
      case "getLogs":
        break;
      case "getTransaction":
      case "getTransactionReceipt":
        normalize3 = function(tx) {
          if (tx == null) {
            return null;
          }
          tx = shallowCopy2(tx);
          tx.confirmations = -1;
          return serialize2(tx);
        };
        break;
      case "getBlock":
        if (params.includeTransactions) {
          normalize3 = function(block) {
            if (block == null) {
              return null;
            }
            block = shallowCopy2(block);
            block.transactions = block.transactions.map((tx) => {
              tx = shallowCopy2(tx);
              tx.confirmations = -1;
              return tx;
            });
            return serialize2(block);
          };
        } else {
          normalize3 = function(block) {
            if (block == null) {
              return null;
            }
            return serialize2(block);
          };
        }
        break;
      default:
        throw new Error("unknown method: " + method);
    }
    return normalizedTally(normalize3, provider.quorum);
  }
  function waitForSync(config, blockNumber) {
    return __awaiter31(this, void 0, void 0, function* () {
      const provider = config.provider;
      if (provider.blockNumber != null && provider.blockNumber >= blockNumber || blockNumber === -1) {
        return provider;
      }
      return poll2(() => {
        return new Promise((resolve, reject) => {
          setTimeout(function() {
            if (provider.blockNumber >= blockNumber) {
              return resolve(provider);
            }
            if (config.cancelled) {
              return resolve(null);
            }
            return resolve(void 0);
          }, 0);
        });
      }, { oncePoll: provider });
    });
  }
  function getRunner(config, currentBlockNumber, method, params) {
    return __awaiter31(this, void 0, void 0, function* () {
      let provider = config.provider;
      switch (method) {
        case "getBlockNumber":
        case "getGasPrice":
          return provider[method]();
        case "getEtherPrice":
          if (provider.getEtherPrice) {
            return provider.getEtherPrice();
          }
          break;
        case "getBalance":
        case "getTransactionCount":
        case "getCode":
          if (params.blockTag && isHexString2(params.blockTag)) {
            provider = yield waitForSync(config, currentBlockNumber);
          }
          return provider[method](params.address, params.blockTag || "latest");
        case "getStorageAt":
          if (params.blockTag && isHexString2(params.blockTag)) {
            provider = yield waitForSync(config, currentBlockNumber);
          }
          return provider.getStorageAt(params.address, params.position, params.blockTag || "latest");
        case "getBlock":
          if (params.blockTag && isHexString2(params.blockTag)) {
            provider = yield waitForSync(config, currentBlockNumber);
          }
          return provider[params.includeTransactions ? "getBlockWithTransactions" : "getBlock"](params.blockTag || params.blockHash);
        case "call":
        case "estimateGas":
          if (params.blockTag && isHexString2(params.blockTag)) {
            provider = yield waitForSync(config, currentBlockNumber);
          }
          if (method === "call" && params.blockTag) {
            return provider[method](params.transaction, params.blockTag);
          }
          return provider[method](params.transaction);
        case "getTransaction":
        case "getTransactionReceipt":
          return provider[method](params.transactionHash);
        case "getLogs": {
          let filter2 = params.filter;
          if (filter2.fromBlock && isHexString2(filter2.fromBlock) || filter2.toBlock && isHexString2(filter2.toBlock)) {
            provider = yield waitForSync(config, currentBlockNumber);
          }
          return provider.getLogs(filter2);
        }
      }
      return logger57.throwError("unknown method error", Logger2.errors.UNKNOWN_ERROR, {
        method,
        params
      });
    });
  }
  var FallbackProvider = class extends BaseProvider2 {
    constructor(providers, quorum) {
      if (providers.length === 0) {
        logger57.throwArgumentError("missing providers", "providers", providers);
      }
      const providerConfigs = providers.map((configOrProvider, index2) => {
        if (Provider2.isProvider(configOrProvider)) {
          const stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750;
          const priority = 1;
          return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });
        }
        const config = shallowCopy2(configOrProvider);
        if (config.priority == null) {
          config.priority = 1;
        }
        if (config.stallTimeout == null) {
          config.stallTimeout = isCommunityResource(configOrProvider) ? 2e3 : 750;
        }
        if (config.weight == null) {
          config.weight = 1;
        }
        const weight = config.weight;
        if (weight % 1 || weight > 512 || weight < 1) {
          logger57.throwArgumentError("invalid weight; must be integer in [1, 512]", `providers[${index2}].weight`, weight);
        }
        return Object.freeze(config);
      });
      const total = providerConfigs.reduce((accum, c) => accum + c.weight, 0);
      if (quorum == null) {
        quorum = total / 2;
      } else if (quorum > total) {
        logger57.throwArgumentError("quorum will always fail; larger than total weight", "quorum", quorum);
      }
      let networkOrReady = checkNetworks(providerConfigs.map((c) => c.provider.network));
      if (networkOrReady == null) {
        networkOrReady = new Promise((resolve, reject) => {
          setTimeout(() => {
            this.detectNetwork().then(resolve, reject);
          }, 0);
        });
      }
      super(networkOrReady);
      defineReadOnly2(this, "providerConfigs", Object.freeze(providerConfigs));
      defineReadOnly2(this, "quorum", quorum);
      this._highestBlockNumber = -1;
    }
    detectNetwork() {
      return __awaiter31(this, void 0, void 0, function* () {
        const networks3 = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));
        return checkNetworks(networks3);
      });
    }
    perform(method, params) {
      return __awaiter31(this, void 0, void 0, function* () {
        if (method === "sendTransaction") {
          const results = yield Promise.all(this.providerConfigs.map((c) => {
            return c.provider.sendTransaction(params.signedTransaction).then((result) => {
              return result.hash;
            }, (error) => {
              return error;
            });
          }));
          for (let i2 = 0; i2 < results.length; i2++) {
            const result = results[i2];
            if (typeof result === "string") {
              return result;
            }
          }
          throw results[0];
        }
        if (this._highestBlockNumber === -1 && method !== "getBlockNumber") {
          yield this.getBlockNumber();
        }
        const processFunc = getProcessFunc(this, method, params);
        const configs = shuffled(this.providerConfigs.map(shallowCopy2));
        configs.sort((a, b) => a.priority - b.priority);
        const currentBlockNumber = this._highestBlockNumber;
        let i = 0;
        let first = true;
        while (true) {
          const t0 = now();
          let inflightWeight = configs.filter((c) => c.runner && t0 - c.start < c.stallTimeout).reduce((accum, c) => accum + c.weight, 0);
          while (inflightWeight < this.quorum && i < configs.length) {
            const config = configs[i++];
            const rid = nextRid++;
            config.start = now();
            config.staller = stall3(config.stallTimeout);
            config.staller.wait(() => {
              config.staller = null;
            });
            config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {
              config.done = true;
              config.result = result;
              if (this.listenerCount("debug")) {
                this.emit("debug", {
                  action: "request",
                  rid,
                  backend: exposeDebugConfig(config, now()),
                  request: { method, params: deepCopy2(params) },
                  provider: this
                });
              }
            }, (error) => {
              config.done = true;
              config.error = error;
              if (this.listenerCount("debug")) {
                this.emit("debug", {
                  action: "request",
                  rid,
                  backend: exposeDebugConfig(config, now()),
                  request: { method, params: deepCopy2(params) },
                  provider: this
                });
              }
            });
            if (this.listenerCount("debug")) {
              this.emit("debug", {
                action: "request",
                rid,
                backend: exposeDebugConfig(config, null),
                request: { method, params: deepCopy2(params) },
                provider: this
              });
            }
            inflightWeight += config.weight;
          }
          const waiting = [];
          configs.forEach((c) => {
            if (c.done || !c.runner) {
              return;
            }
            waiting.push(c.runner);
            if (c.staller) {
              waiting.push(c.staller.getPromise());
            }
          });
          if (waiting.length) {
            yield Promise.race(waiting);
          }
          const results = configs.filter((c) => c.done && c.error == null);
          if (results.length >= this.quorum) {
            const result = processFunc(results);
            if (result !== void 0) {
              configs.forEach((c) => {
                if (c.staller) {
                  c.staller.cancel();
                }
                c.cancelled = true;
              });
              return result;
            }
            if (!first) {
              yield stall3(100).getPromise();
            }
            first = false;
          }
          const errors = configs.reduce((accum, c) => {
            if (!c.done || c.error == null) {
              return accum;
            }
            const code = c.error.code;
            if (ForwardErrors.indexOf(code) >= 0) {
              if (!accum[code]) {
                accum[code] = { error: c.error, weight: 0 };
              }
              accum[code].weight += c.weight;
            }
            return accum;
          }, {});
          Object.keys(errors).forEach((errorCode) => {
            const tally = errors[errorCode];
            if (tally.weight < this.quorum) {
              return;
            }
            configs.forEach((c) => {
              if (c.staller) {
                c.staller.cancel();
              }
              c.cancelled = true;
            });
            const e = tally.error;
            const props = {};
            ForwardProperties.forEach((name) => {
              if (e[name] == null) {
                return;
              }
              props[name] = e[name];
            });
            logger57.throwError(e.reason || e.message, errorCode, props);
          });
          if (configs.filter((c) => !c.done).length === 0) {
            break;
          }
        }
        configs.forEach((c) => {
          if (c.staller) {
            c.staller.cancel();
          }
          c.cancelled = true;
        });
        return logger57.throwError("failed to meet quorum", Logger2.errors.SERVER_ERROR, {
          method,
          params,
          //results: configs.map((c) => c.result),
          //errors: configs.map((c) => c.error),
          results: configs.map((c) => exposeDebugConfig(c)),
          provider: this
        });
      });
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/ipc-provider.js
  var IpcProvider = null;

  // node_modules/@ethersproject/providers/lib.esm/infura-provider.js
  var logger58 = new Logger2(version43);
  var defaultProjectId = "84842078b09946638c03157f83405213";
  var InfuraWebSocketProvider = class extends WebSocketProvider {
    constructor(network, apiKey) {
      const provider = new InfuraProvider(network, apiKey);
      const connection = provider.connection;
      if (connection.password) {
        logger58.throwError("INFURA WebSocket project secrets unsupported", Logger2.errors.UNSUPPORTED_OPERATION, {
          operation: "InfuraProvider.getWebSocketProvider()"
        });
      }
      const url = connection.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/");
      super(url, network);
      defineReadOnly2(this, "apiKey", provider.projectId);
      defineReadOnly2(this, "projectId", provider.projectId);
      defineReadOnly2(this, "projectSecret", provider.projectSecret);
    }
    isCommunityResource() {
      return this.projectId === defaultProjectId;
    }
  };
  var InfuraProvider = class extends UrlJsonRpcProvider {
    static getWebSocketProvider(network, apiKey) {
      return new InfuraWebSocketProvider(network, apiKey);
    }
    static getApiKey(apiKey) {
      const apiKeyObj = {
        apiKey: defaultProjectId,
        projectId: defaultProjectId,
        projectSecret: null
      };
      if (apiKey == null) {
        return apiKeyObj;
      }
      if (typeof apiKey === "string") {
        apiKeyObj.projectId = apiKey;
      } else if (apiKey.projectSecret != null) {
        logger58.assertArgument(typeof apiKey.projectId === "string", "projectSecret requires a projectId", "projectId", apiKey.projectId);
        logger58.assertArgument(typeof apiKey.projectSecret === "string", "invalid projectSecret", "projectSecret", "[REDACTED]");
        apiKeyObj.projectId = apiKey.projectId;
        apiKeyObj.projectSecret = apiKey.projectSecret;
      } else if (apiKey.projectId) {
        apiKeyObj.projectId = apiKey.projectId;
      }
      apiKeyObj.apiKey = apiKeyObj.projectId;
      return apiKeyObj;
    }
    static getUrl(network, apiKey) {
      let host = null;
      switch (network ? network.name : "unknown") {
        case "homestead":
          host = "mainnet.infura.io";
          break;
        case "goerli":
          host = "goerli.infura.io";
          break;
        case "sepolia":
          host = "sepolia.infura.io";
          break;
        case "matic":
          host = "polygon-mainnet.infura.io";
          break;
        case "maticmum":
          host = "polygon-mumbai.infura.io";
          break;
        case "optimism":
          host = "optimism-mainnet.infura.io";
          break;
        case "optimism-goerli":
          host = "optimism-goerli.infura.io";
          break;
        case "arbitrum":
          host = "arbitrum-mainnet.infura.io";
          break;
        case "arbitrum-goerli":
          host = "arbitrum-goerli.infura.io";
          break;
        default:
          logger58.throwError("unsupported network", Logger2.errors.INVALID_ARGUMENT, {
            argument: "network",
            value: network
          });
      }
      const connection = {
        allowGzip: true,
        url: "https://" + host + "/v3/" + apiKey.projectId,
        throttleCallback: (attempt, url) => {
          if (apiKey.projectId === defaultProjectId) {
            showThrottleMessage();
          }
          return Promise.resolve(true);
        }
      };
      if (apiKey.projectSecret != null) {
        connection.user = "";
        connection.password = apiKey.projectSecret;
      }
      return connection;
    }
    isCommunityResource() {
      return this.projectId === defaultProjectId;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js
  var JsonRpcBatchProvider = class extends JsonRpcProvider2 {
    send(method, params) {
      const request = {
        method,
        params,
        id: this._nextId++,
        jsonrpc: "2.0"
      };
      if (this._pendingBatch == null) {
        this._pendingBatch = [];
      }
      const inflightRequest = { request, resolve: null, reject: null };
      const promise = new Promise((resolve, reject) => {
        inflightRequest.resolve = resolve;
        inflightRequest.reject = reject;
      });
      this._pendingBatch.push(inflightRequest);
      if (!this._pendingBatchAggregator) {
        this._pendingBatchAggregator = setTimeout(() => {
          const batch = this._pendingBatch;
          this._pendingBatch = null;
          this._pendingBatchAggregator = null;
          const request2 = batch.map((inflight) => inflight.request);
          this.emit("debug", {
            action: "requestBatch",
            request: deepCopy2(request2),
            provider: this
          });
          return fetchJson2(this.connection, JSON.stringify(request2)).then((result) => {
            this.emit("debug", {
              action: "response",
              request: request2,
              response: result,
              provider: this
            });
            batch.forEach((inflightRequest2, index2) => {
              const payload = result[index2];
              if (payload.error) {
                const error = new Error(payload.error.message);
                error.code = payload.error.code;
                error.data = payload.error.data;
                inflightRequest2.reject(error);
              } else {
                inflightRequest2.resolve(payload.result);
              }
            });
          }, (error) => {
            this.emit("debug", {
              action: "response",
              error,
              request: request2,
              provider: this
            });
            batch.forEach((inflightRequest2) => {
              inflightRequest2.reject(error);
            });
          });
        }, 10);
      }
      return promise;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js
  var logger59 = new Logger2(version43);
  var defaultApiKey3 = "ETHERS_JS_SHARED";
  var NodesmithProvider = class extends UrlJsonRpcProvider {
    static getApiKey(apiKey) {
      if (apiKey && typeof apiKey !== "string") {
        logger59.throwArgumentError("invalid apiKey", "apiKey", apiKey);
      }
      return apiKey || defaultApiKey3;
    }
    static getUrl(network, apiKey) {
      logger59.warn("NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.");
      let host = null;
      switch (network.name) {
        case "homestead":
          host = "https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc";
          break;
        case "ropsten":
          host = "https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc";
          break;
        case "rinkeby":
          host = "https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc";
          break;
        case "goerli":
          host = "https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc";
          break;
        case "kovan":
          host = "https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc";
          break;
        default:
          logger59.throwArgumentError("unsupported network", "network", arguments[0]);
      }
      return host + "?apiKey=" + apiKey;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/pocket-provider.js
  var logger60 = new Logger2(version43);
  var defaultApplicationId = "62e1ad51b37b8e00394bda3b";
  var PocketProvider = class extends UrlJsonRpcProvider {
    static getApiKey(apiKey) {
      const apiKeyObj = {
        applicationId: null,
        loadBalancer: true,
        applicationSecretKey: null
      };
      if (apiKey == null) {
        apiKeyObj.applicationId = defaultApplicationId;
      } else if (typeof apiKey === "string") {
        apiKeyObj.applicationId = apiKey;
      } else if (apiKey.applicationSecretKey != null) {
        apiKeyObj.applicationId = apiKey.applicationId;
        apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;
      } else if (apiKey.applicationId) {
        apiKeyObj.applicationId = apiKey.applicationId;
      } else {
        logger60.throwArgumentError("unsupported PocketProvider apiKey", "apiKey", apiKey);
      }
      return apiKeyObj;
    }
    static getUrl(network, apiKey) {
      let host = null;
      switch (network ? network.name : "unknown") {
        case "goerli":
          host = "eth-goerli.gateway.pokt.network";
          break;
        case "homestead":
          host = "eth-mainnet.gateway.pokt.network";
          break;
        case "kovan":
          host = "poa-kovan.gateway.pokt.network";
          break;
        case "matic":
          host = "poly-mainnet.gateway.pokt.network";
          break;
        case "maticmum":
          host = "polygon-mumbai-rpc.gateway.pokt.network";
          break;
        case "rinkeby":
          host = "eth-rinkeby.gateway.pokt.network";
          break;
        case "ropsten":
          host = "eth-ropsten.gateway.pokt.network";
          break;
        default:
          logger60.throwError("unsupported network", Logger2.errors.INVALID_ARGUMENT, {
            argument: "network",
            value: network
          });
      }
      const url = `https://${host}/v1/lb/${apiKey.applicationId}`;
      const connection = { headers: {}, url };
      if (apiKey.applicationSecretKey != null) {
        connection.user = "";
        connection.password = apiKey.applicationSecretKey;
      }
      return connection;
    }
    isCommunityResource() {
      return this.applicationId === defaultApplicationId;
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/web3-provider.js
  var logger61 = new Logger2(version43);
  var _nextId = 1;
  function buildWeb3LegacyFetcher(provider, sendFunc) {
    const fetcher = "Web3LegacyFetcher";
    return function(method, params) {
      const request = {
        method,
        params,
        id: _nextId++,
        jsonrpc: "2.0"
      };
      return new Promise((resolve, reject) => {
        this.emit("debug", {
          action: "request",
          fetcher,
          request: deepCopy2(request),
          provider: this
        });
        sendFunc(request, (error, response) => {
          if (error) {
            this.emit("debug", {
              action: "response",
              fetcher,
              error,
              request,
              provider: this
            });
            return reject(error);
          }
          this.emit("debug", {
            action: "response",
            fetcher,
            request,
            response,
            provider: this
          });
          if (response.error) {
            const error2 = new Error(response.error.message);
            error2.code = response.error.code;
            error2.data = response.error.data;
            return reject(error2);
          }
          resolve(response.result);
        });
      });
    };
  }
  function buildEip1193Fetcher(provider) {
    return function(method, params) {
      if (params == null) {
        params = [];
      }
      const request = { method, params };
      this.emit("debug", {
        action: "request",
        fetcher: "Eip1193Fetcher",
        request: deepCopy2(request),
        provider: this
      });
      return provider.request(request).then((response) => {
        this.emit("debug", {
          action: "response",
          fetcher: "Eip1193Fetcher",
          request,
          response,
          provider: this
        });
        return response;
      }, (error) => {
        this.emit("debug", {
          action: "response",
          fetcher: "Eip1193Fetcher",
          request,
          error,
          provider: this
        });
        throw error;
      });
    };
  }
  var Web3Provider = class extends JsonRpcProvider2 {
    constructor(provider, network) {
      if (provider == null) {
        logger61.throwArgumentError("missing provider", "provider", provider);
      }
      let path = null;
      let jsonRpcFetchFunc = null;
      let subprovider = null;
      if (typeof provider === "function") {
        path = "unknown:";
        jsonRpcFetchFunc = provider;
      } else {
        path = provider.host || provider.path || "";
        if (!path && provider.isMetaMask) {
          path = "metamask";
        }
        subprovider = provider;
        if (provider.request) {
          if (path === "") {
            path = "eip-1193:";
          }
          jsonRpcFetchFunc = buildEip1193Fetcher(provider);
        } else if (provider.sendAsync) {
          jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));
        } else if (provider.send) {
          jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));
        } else {
          logger61.throwArgumentError("unsupported provider", "provider", provider);
        }
        if (!path) {
          path = "unknown:";
        }
      }
      super(path, network);
      defineReadOnly2(this, "jsonRpcFetchFunc", jsonRpcFetchFunc);
      defineReadOnly2(this, "provider", subprovider);
    }
    send(method, params) {
      return this.jsonRpcFetchFunc(method, params);
    }
  };

  // node_modules/@ethersproject/providers/lib.esm/index.js
  var logger62 = new Logger2(version43);
  function getDefaultProvider(network, options) {
    if (network == null) {
      network = "homestead";
    }
    if (typeof network === "string") {
      const match = network.match(/^(ws|http)s?:/i);
      if (match) {
        switch (match[1].toLowerCase()) {
          case "http":
          case "https":
            return new JsonRpcProvider2(network);
          case "ws":
          case "wss":
            return new WebSocketProvider(network);
          default:
            logger62.throwArgumentError("unsupported URL scheme", "network", network);
        }
      }
    }
    const n = getNetwork2(network);
    if (!n || !n._defaultProvider) {
      logger62.throwError("unsupported getDefaultProvider network", Logger2.errors.NETWORK_ERROR, {
        operation: "getDefaultProvider",
        network
      });
    }
    return n._defaultProvider({
      FallbackProvider,
      AlchemyProvider,
      AnkrProvider,
      CloudflareProvider,
      EtherscanProvider,
      InfuraProvider,
      JsonRpcProvider: JsonRpcProvider2,
      NodesmithProvider,
      PocketProvider,
      Web3Provider,
      IpcProvider
    }, options);
  }

  // node_modules/ethers/lib.esm/utils.js
  var utils_exports2 = {};
  __export(utils_exports2, {
    AbiCoder: () => AbiCoder,
    ConstructorFragment: () => ConstructorFragment,
    ErrorFragment: () => ErrorFragment,
    EventFragment: () => EventFragment,
    FormatTypes: () => FormatTypes,
    Fragment: () => Fragment,
    FunctionFragment: () => FunctionFragment,
    HDNode: () => HDNode,
    Indexed: () => Indexed,
    Interface: () => Interface,
    LogDescription: () => LogDescription,
    Logger: () => Logger2,
    ParamType: () => ParamType,
    RLP: () => lib_exports,
    SigningKey: () => SigningKey2,
    SupportedAlgorithm: () => SupportedAlgorithm,
    TransactionDescription: () => TransactionDescription,
    TransactionTypes: () => TransactionTypes2,
    UnicodeNormalizationForm: () => UnicodeNormalizationForm2,
    Utf8ErrorFuncs: () => Utf8ErrorFuncs2,
    Utf8ErrorReason: () => Utf8ErrorReason2,
    _TypedDataEncoder: () => TypedDataEncoder2,
    _fetchData: () => _fetchData2,
    _toEscapedUtf8String: () => _toEscapedUtf8String,
    accessListify: () => accessListify2,
    arrayify: () => arrayify2,
    base58: () => Base582,
    base64: () => lib_exports3,
    checkProperties: () => checkProperties2,
    checkResultErrors: () => checkResultErrors,
    commify: () => commify,
    computeAddress: () => computeAddress2,
    computeHmac: () => computeHmac,
    computePublicKey: () => computePublicKey2,
    concat: () => concat2,
    deepCopy: () => deepCopy2,
    defaultAbiCoder: () => defaultAbiCoder,
    defaultPath: () => defaultPath,
    defineReadOnly: () => defineReadOnly2,
    dnsEncode: () => dnsEncode2,
    entropyToMnemonic: () => entropyToMnemonic,
    fetchJson: () => fetchJson2,
    formatBytes32String: () => formatBytes32String,
    formatEther: () => formatEther,
    formatUnits: () => formatUnits,
    getAccountPath: () => getAccountPath,
    getAddress: () => getAddress2,
    getContractAddress: () => getContractAddress2,
    getCreate2Address: () => getCreate2Address,
    getIcapAddress: () => getIcapAddress,
    getJsonWalletAddress: () => getJsonWalletAddress,
    getStatic: () => getStatic2,
    hashMessage: () => hashMessage,
    hexConcat: () => hexConcat2,
    hexDataLength: () => hexDataLength2,
    hexDataSlice: () => hexDataSlice2,
    hexStripZeros: () => hexStripZeros2,
    hexValue: () => hexValue2,
    hexZeroPad: () => hexZeroPad2,
    hexlify: () => hexlify2,
    id: () => id2,
    isAddress: () => isAddress,
    isBytes: () => isBytes2,
    isBytesLike: () => isBytesLike2,
    isHexString: () => isHexString2,
    isValidMnemonic: () => isValidMnemonic,
    isValidName: () => isValidName,
    joinSignature: () => joinSignature,
    keccak256: () => keccak2562,
    mnemonicToEntropy: () => mnemonicToEntropy,
    mnemonicToSeed: () => mnemonicToSeed,
    namehash: () => namehash2,
    nameprep: () => nameprep,
    parseBytes32String: () => parseBytes32String,
    parseEther: () => parseEther,
    parseTransaction: () => parse2,
    parseUnits: () => parseUnits,
    poll: () => poll2,
    randomBytes: () => randomBytes,
    recoverAddress: () => recoverAddress2,
    recoverPublicKey: () => recoverPublicKey2,
    resolveProperties: () => resolveProperties2,
    ripemd160: () => ripemd160,
    serializeTransaction: () => serialize,
    sha256: () => sha2563,
    sha512: () => sha512,
    shallowCopy: () => shallowCopy2,
    shuffled: () => shuffled,
    solidityKeccak256: () => keccak2563,
    solidityPack: () => pack2,
    soliditySha256: () => sha2564,
    splitSignature: () => splitSignature2,
    stripZeros: () => stripZeros2,
    toUtf8Bytes: () => toUtf8Bytes2,
    toUtf8CodePoints: () => toUtf8CodePoints2,
    toUtf8String: () => toUtf8String2,
    verifyMessage: () => verifyMessage,
    verifyTypedData: () => verifyTypedData,
    zeroPad: () => zeroPad2
  });

  // node_modules/@ethersproject/solidity/lib.esm/_version.js
  var version44 = "solidity/5.7.0";

  // node_modules/@ethersproject/solidity/lib.esm/index.js
  var regexBytes = new RegExp("^bytes([0-9]+)$");
  var regexNumber = new RegExp("^(u?int)([0-9]*)$");
  var regexArray = new RegExp("^(.*)\\[([0-9]*)\\]$");
  var Zeros3 = "0000000000000000000000000000000000000000000000000000000000000000";
  var logger63 = new Logger2(version44);
  function _pack(type, value, isArray2) {
    switch (type) {
      case "address":
        if (isArray2) {
          return zeroPad2(value, 32);
        }
        return arrayify2(value);
      case "string":
        return toUtf8Bytes2(value);
      case "bytes":
        return arrayify2(value);
      case "bool":
        value = value ? "0x01" : "0x00";
        if (isArray2) {
          return zeroPad2(value, 32);
        }
        return arrayify2(value);
    }
    let match = type.match(regexNumber);
    if (match) {
      let size = parseInt(match[2] || "256");
      if (match[2] && String(size) !== match[2] || size % 8 !== 0 || size === 0 || size > 256) {
        logger63.throwArgumentError("invalid number type", "type", type);
      }
      if (isArray2) {
        size = 256;
      }
      value = BigNumber2.from(value).toTwos(size);
      return zeroPad2(value, size / 8);
    }
    match = type.match(regexBytes);
    if (match) {
      const size = parseInt(match[1]);
      if (String(size) !== match[1] || size === 0 || size > 32) {
        logger63.throwArgumentError("invalid bytes type", "type", type);
      }
      if (arrayify2(value).byteLength !== size) {
        logger63.throwArgumentError(`invalid value for ${type}`, "value", value);
      }
      if (isArray2) {
        return arrayify2((value + Zeros3).substring(0, 66));
      }
      return value;
    }
    match = type.match(regexArray);
    if (match && Array.isArray(value)) {
      const baseType = match[1];
      const count = parseInt(match[2] || String(value.length));
      if (count != value.length) {
        logger63.throwArgumentError(`invalid array length for ${type}`, "value", value);
      }
      const result = [];
      value.forEach(function(value2) {
        result.push(_pack(baseType, value2, true));
      });
      return concat2(result);
    }
    return logger63.throwArgumentError("invalid type", "type", type);
  }
  function pack2(types, values) {
    if (types.length != values.length) {
      logger63.throwArgumentError("wrong number of values; expected ${ types.length }", "values", values);
    }
    const tight = [];
    types.forEach(function(type, index2) {
      tight.push(_pack(type, values[index2]));
    });
    return hexlify2(concat2(tight));
  }
  function keccak2563(types, values) {
    return keccak2562(pack2(types, values));
  }
  function sha2564(types, values) {
    return sha2563(pack2(types, values));
  }

  // node_modules/@ethersproject/units/lib.esm/_version.js
  var version45 = "units/5.7.0";

  // node_modules/@ethersproject/units/lib.esm/index.js
  var logger64 = new Logger2(version45);
  var names = [
    "wei",
    "kwei",
    "mwei",
    "gwei",
    "szabo",
    "finney",
    "ether"
  ];
  function commify(value) {
    const comps = String(value).split(".");
    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || comps[1] && !comps[1].match(/^[0-9]*$/) || value === "." || value === "-.") {
      logger64.throwArgumentError("invalid value", "value", value);
    }
    let whole = comps[0];
    let negative = "";
    if (whole.substring(0, 1) === "-") {
      negative = "-";
      whole = whole.substring(1);
    }
    while (whole.substring(0, 1) === "0") {
      whole = whole.substring(1);
    }
    if (whole === "") {
      whole = "0";
    }
    let suffix = "";
    if (comps.length === 2) {
      suffix = "." + (comps[1] || "0");
    }
    while (suffix.length > 2 && suffix[suffix.length - 1] === "0") {
      suffix = suffix.substring(0, suffix.length - 1);
    }
    const formatted = [];
    while (whole.length) {
      if (whole.length <= 3) {
        formatted.unshift(whole);
        break;
      } else {
        const index2 = whole.length - 3;
        formatted.unshift(whole.substring(index2));
        whole = whole.substring(0, index2);
      }
    }
    return negative + formatted.join(",") + suffix;
  }
  function formatUnits(value, unitName) {
    if (typeof unitName === "string") {
      const index2 = names.indexOf(unitName);
      if (index2 !== -1) {
        unitName = 3 * index2;
      }
    }
    return formatFixed(value, unitName != null ? unitName : 18);
  }
  function parseUnits(value, unitName) {
    if (typeof value !== "string") {
      logger64.throwArgumentError("value must be a string", "value", value);
    }
    if (typeof unitName === "string") {
      const index2 = names.indexOf(unitName);
      if (index2 !== -1) {
        unitName = 3 * index2;
      }
    }
    return parseFixed(value, unitName != null ? unitName : 18);
  }
  function formatEther(wei) {
    return formatUnits(wei, 18);
  }
  function parseEther(ether) {
    return parseUnits(ether, 18);
  }

  // node_modules/ethers/lib.esm/_version.js
  var version46 = "ethers/5.7.2";

  // node_modules/ethers/lib.esm/ethers.js
  var logger65 = new Logger2(version46);

  // node_modules/ethers/lib.esm/index.js
  try {
    const anyGlobal2 = window;
    if (anyGlobal2._ethers == null) {
      anyGlobal2._ethers = ethers_exports;
    }
  } catch (error) {
  }

  // static/scripts/rewards/web3/use-rpc-handler.ts
  function useHandler(networkId) {
    const config = {
      networkId,
      autoStorage: true,
      cacheRefreshCycles: 5,
      rpcTimeout: 1500,
      networkName: null,
      runtimeRpcs: null,
      networkRpcs: null
    };
    return new RPCHandler(config);
  }
  async function useRpcHandler(app2) {
    const networkId = app2.networkId;
    if (!networkId) {
      throw new Error("Network ID not set");
    }
    const handler = await useHandler(networkId);
    const provider = await handler.getFastestRpcProvider();
    const url = provider.connection.url;
    if (!url) {
      throw new Error("Provider URL not set");
    }
    return provider;
  }

  // static/scripts/rewards/web3/connect-wallet.ts
  function checkMobile(a) {
    if (
      // eslint-disable-next-line no-useless-escape
      /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
        a
      ) || // eslint-disable-next-line no-useless-escape
      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
        a.substring(0, 4)
      )
    ) {
      return true;
    }
  }
  function mobileCheck() {
    return checkMobile(navigator.userAgent || navigator.vendor || window.opera);
  }
  async function connectWallet() {
    try {
      const wallet = new ethers_exports.providers.Web3Provider(window.ethereum);
      if (mobileCheck()) {
        window.history.pushState({}, "", "/");
      }
      await wallet.send("eth_requestAccounts", []);
      const signer = wallet.getSigner();
      const address = await signer.getAddress();
      if (!address) {
        buttonController.hideAll();
        console.error("Wallet not connected");
        return null;
      }
      const isOkay = await stressTestWalletRpc(wallet);
      if (!isOkay) {
        if (mobileCheck()) {
          toaster.create("info", `In case of network issues, please change your in-wallet RPC to the one below...`, 15e3);
        } else {
          toaster.create("error", "We have detected potential issues with your in-wallet RPC. Accept the request to replace it with a more reliable one.");
        }
        await addFastestHandlerNetwork(wallet);
      }
      return signer;
    } catch (error) {
      return connectErrorHandler(error);
    }
  }
  async function addFastestHandlerNetwork(wallet) {
    const networkId = app.networkId ?? (await wallet.getNetwork()).chainId;
    const handler = useHandler(networkId);
    let provider = await handler.getFastestRpcProvider();
    const appUrl = app.provider?.connection?.url;
    const latencies = handler.getLatencies();
    const latenciesArray = Object.entries(latencies).map(([url, latency]) => ({ url, latency }));
    const sorted = latenciesArray.sort((a, b) => a.latency - b.latency);
    let toSuggest = sorted[0];
    let isOkay = false;
    for await (const { url } of sorted) {
      const _url = url.split("__")[1];
      if (_url !== appUrl) {
        provider = new ethers_exports.providers.JsonRpcProvider(_url);
        isOkay = await stressTestWalletRpc(provider);
        if (isOkay) {
          toSuggest = { url: _url, latency: latencies[url] };
          break;
        }
      }
    }
    if (!isOkay) {
      toaster.create("error", "We failed to find a more reliable RPC for you. Please try again later if you have network issues.");
      return;
    }
    try {
      await addHandlerSuggested(wallet, toSuggest.url);
    } catch (error) {
      toaster.create("info", `${toSuggest.url}`, Infinity);
    }
  }
  async function addHandlerSuggested(provider, url) {
    const symbol = app.networkId === 1 ? "ETH" : "XDAI";
    const altSymbol = app.networkId === 1 ? "eth" : "xdai";
    const altSymbol2 = app.networkId === 1 ? "Eth" : "xDai";
    if (mobileCheck()) {
      toaster.create("info", `${url}`, Infinity);
      return;
    }
    for (const _symbol of [symbol, altSymbol, altSymbol2]) {
      await addProvider(provider, url, _symbol, app.networkId);
    }
  }
  async function addProvider(provider, url, symbol, chainId) {
    const _chainId = chainId || (await provider.getNetwork()).chainId;
    try {
      await provider.send("wallet_addEthereumChain", [
        {
          chainId: `0x${_chainId.toString(16)}`,
          chainName: _chainId === 1 ? "Ethereum" : "Gnosis",
          nativeCurrency: {
            name: _chainId === 1 ? "ETH" : "XDAI",
            symbol,
            decimals: 18
          },
          rpcUrls: [url],
          blockExplorerUrls: [`https://${_chainId === 1 ? "etherscan" : "gnosisscan"}.io`]
        }
      ]);
    } catch {
      console.error("Failed to add network");
    }
  }
  async function stressTestWalletRpc(provider) {
    const success = [];
    for (let i = 0; i < 6; i++) {
      success.push(testNonceBitmapEthCall(provider));
    }
    const timeoutPromise = new Promise((resolve) => {
      setTimeout(() => {
        resolve([false]);
      }, 7e3);
    });
    const results = await Promise.race([Promise.all(success), timeoutPromise]);
    return results.filter((s) => s === "0x" + "00".repeat(32)).length > 5 && results.filter((s) => s === false).length < 1;
  }
  async function testNonceBitmapEthCall(provider) {
    try {
      return await provider.send("eth_call", [
        {
          to: "0x000000000022D473030F116dDEE9F6B43aC78BA3",
          // input works for desktop, needs to be data for mobile
          data: "0x4fe02b44000000000000000000000000d9530f3fbbea11bed01dc09e79318f2f20223716001fd097bcb5a1759ce02c0a671386a0bbbfa8216559e5855698a9d4de4cddea"
        },
        "latest"
      ]);
    } catch {
    }
  }
  function connectErrorHandler(error) {
    if (error instanceof Error) {
      console.error(error);
      if (error?.message?.includes("missing provider")) {
        if (mobileCheck()) {
          toaster.create("warning", "Please use a mobile-friendly Web3 browser such as MetaMask to collect this reward", Infinity);
        } else if (!window.ethereum) {
          toaster.create("warning", "Please use a web3 enabled browser to collect this reward.", Infinity);
          buttonController.hideAll();
        }
      } else {
        toaster.create("error", error.message);
      }
    } else {
      toaster.create("error", "An unknown error occurred" + JSON.stringify(error));
    }
    if (window.location.href.includes("localhost")) {
      return window.signer;
    }
    return null;
  }

  // static/scripts/rewards/abis/erc20-abi.ts
  var erc20Abi = [
    { inputs: [{ internalType: "uint256", name: "chainId_", type: "uint256" }], payable: false, stateMutability: "nonpayable", type: "constructor" },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "src", type: "address" },
        { indexed: true, internalType: "address", name: "guy", type: "address" },
        { indexed: false, internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "Approval",
      type: "event"
    },
    {
      anonymous: true,
      inputs: [
        { indexed: true, internalType: "bytes4", name: "sig", type: "bytes4" },
        { indexed: true, internalType: "address", name: "usr", type: "address" },
        { indexed: true, internalType: "bytes32", name: "arg1", type: "bytes32" },
        { indexed: true, internalType: "bytes32", name: "arg2", type: "bytes32" },
        { indexed: false, internalType: "bytes", name: "data", type: "bytes" }
      ],
      name: "LogNote",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "src", type: "address" },
        { indexed: true, internalType: "address", name: "dst", type: "address" },
        { indexed: false, internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "Transfer",
      type: "event"
    },
    {
      constant: true,
      inputs: [],
      name: "DOMAIN_SEPARATOR",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "PERMIT_TYPEHASH",
      outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: true,
      inputs: [
        { internalType: "address", name: "", type: "address" },
        { internalType: "address", name: "", type: "address" }
      ],
      name: "allowance",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "usr", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "approve",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "balanceOf",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "usr", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "burn",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "decimals",
      outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "guy", type: "address" }],
      name: "deny",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "usr", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "mint",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "src", type: "address" },
        { internalType: "address", name: "dst", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "move",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "name",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "nonces",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "holder", type: "address" },
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint256", name: "nonce", type: "uint256" },
        { internalType: "uint256", name: "expiry", type: "uint256" },
        { internalType: "bool", name: "allowed", type: "bool" },
        { internalType: "uint8", name: "v", type: "uint8" },
        { internalType: "bytes32", name: "r", type: "bytes32" },
        { internalType: "bytes32", name: "s", type: "bytes32" }
      ],
      name: "permit",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "usr", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "pull",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "usr", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "push",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [{ internalType: "address", name: "guy", type: "address" }],
      name: "rely",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "symbol",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "totalSupply",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "dst", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "transfer",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: false,
      inputs: [
        { internalType: "address", name: "src", type: "address" },
        { internalType: "address", name: "dst", type: "address" },
        { internalType: "uint256", name: "wad", type: "uint256" }
      ],
      name: "transferFrom",
      outputs: [{ internalType: "bool", name: "", type: "bool" }],
      payable: false,
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      constant: true,
      inputs: [],
      name: "version",
      outputs: [{ internalType: "string", name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    },
    {
      constant: true,
      inputs: [{ internalType: "address", name: "", type: "address" }],
      name: "wards",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function"
    }
  ];

  // static/scripts/rewards/abis/permit2-abi.ts
  var permit2Abi = [
    { inputs: [{ internalType: "uint256", name: "deadline", type: "uint256" }], name: "AllowanceExpired", type: "error" },
    { inputs: [], name: "ExcessiveInvalidation", type: "error" },
    { inputs: [{ internalType: "uint256", name: "amount", type: "uint256" }], name: "InsufficientAllowance", type: "error" },
    { inputs: [{ internalType: "uint256", name: "maxAmount", type: "uint256" }], name: "InvalidAmount", type: "error" },
    { inputs: [], name: "InvalidContractSignature", type: "error" },
    { inputs: [], name: "InvalidNonce", type: "error" },
    { inputs: [], name: "InvalidSignature", type: "error" },
    { inputs: [], name: "InvalidSignatureLength", type: "error" },
    { inputs: [], name: "InvalidSigner", type: "error" },
    { inputs: [], name: "LengthMismatch", type: "error" },
    { inputs: [{ internalType: "uint256", name: "signatureDeadline", type: "uint256" }], name: "SignatureExpired", type: "error" },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: true, internalType: "address", name: "token", type: "address" },
        { indexed: true, internalType: "address", name: "spender", type: "address" },
        { indexed: false, internalType: "uint160", name: "amount", type: "uint160" },
        { indexed: false, internalType: "uint48", name: "expiration", type: "uint48" }
      ],
      name: "Approval",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: false, internalType: "address", name: "token", type: "address" },
        { indexed: false, internalType: "address", name: "spender", type: "address" }
      ],
      name: "Lockdown",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: true, internalType: "address", name: "token", type: "address" },
        { indexed: true, internalType: "address", name: "spender", type: "address" },
        { indexed: false, internalType: "uint48", name: "newNonce", type: "uint48" },
        { indexed: false, internalType: "uint48", name: "oldNonce", type: "uint48" }
      ],
      name: "NonceInvalidation",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: true, internalType: "address", name: "token", type: "address" },
        { indexed: true, internalType: "address", name: "spender", type: "address" },
        { indexed: false, internalType: "uint160", name: "amount", type: "uint160" },
        { indexed: false, internalType: "uint48", name: "expiration", type: "uint48" },
        { indexed: false, internalType: "uint48", name: "nonce", type: "uint48" }
      ],
      name: "Permit",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, internalType: "address", name: "owner", type: "address" },
        { indexed: false, internalType: "uint256", name: "word", type: "uint256" },
        { indexed: false, internalType: "uint256", name: "mask", type: "uint256" }
      ],
      name: "UnorderedNonceInvalidation",
      type: "event"
    },
    { inputs: [], name: "DOMAIN_SEPARATOR", outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }], stateMutability: "view", type: "function" },
    {
      inputs: [
        { internalType: "address", name: "", type: "address" },
        { internalType: "address", name: "", type: "address" },
        { internalType: "address", name: "", type: "address" }
      ],
      name: "allowance",
      outputs: [
        { internalType: "uint160", name: "amount", type: "uint160" },
        { internalType: "uint48", name: "expiration", type: "uint48" },
        { internalType: "uint48", name: "nonce", type: "uint48" }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "token", type: "address" },
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint160", name: "amount", type: "uint160" },
        { internalType: "uint48", name: "expiration", type: "uint48" }
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "token", type: "address" },
        { internalType: "address", name: "spender", type: "address" },
        { internalType: "uint48", name: "newNonce", type: "uint48" }
      ],
      name: "invalidateNonces",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "uint256", name: "wordPos", type: "uint256" },
        { internalType: "uint256", name: "mask", type: "uint256" }
      ],
      name: "invalidateUnorderedNonces",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            { internalType: "address", name: "token", type: "address" },
            { internalType: "address", name: "spender", type: "address" }
          ],
          internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
          name: "approvals",
          type: "tuple[]"
        }
      ],
      name: "lockdown",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "", type: "address" },
        { internalType: "uint256", name: "", type: "uint256" }
      ],
      name: "nonceBitmap",
      outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        {
          components: [
            {
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint160", name: "amount", type: "uint160" },
                { internalType: "uint48", name: "expiration", type: "uint48" },
                { internalType: "uint48", name: "nonce", type: "uint48" }
              ],
              internalType: "struct IAllowanceTransfer.PermitDetails[]",
              name: "details",
              type: "tuple[]"
            },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "sigDeadline", type: "uint256" }
          ],
          internalType: "struct IAllowanceTransfer.PermitBatch",
          name: "permitBatch",
          type: "tuple"
        },
        { internalType: "bytes", name: "signature", type: "bytes" }
      ],
      name: "permit",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "owner", type: "address" },
        {
          components: [
            {
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint160", name: "amount", type: "uint160" },
                { internalType: "uint48", name: "expiration", type: "uint48" },
                { internalType: "uint48", name: "nonce", type: "uint48" }
              ],
              internalType: "struct IAllowanceTransfer.PermitDetails",
              name: "details",
              type: "tuple"
            },
            { internalType: "address", name: "spender", type: "address" },
            { internalType: "uint256", name: "sigDeadline", type: "uint256" }
          ],
          internalType: "struct IAllowanceTransfer.PermitSingle",
          name: "permitSingle",
          type: "tuple"
        },
        { internalType: "bytes", name: "signature", type: "bytes" }
      ],
      name: "permit",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" }
              ],
              internalType: "struct ISignatureTransfer.TokenPermissions",
              name: "permitted",
              type: "tuple"
            },
            { internalType: "uint256", name: "nonce", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.PermitTransferFrom",
          name: "permit",
          type: "tuple"
        },
        {
          components: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "requestedAmount", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.SignatureTransferDetails",
          name: "transferDetails",
          type: "tuple"
        },
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "bytes", name: "signature", type: "bytes" }
      ],
      name: "permitTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" }
              ],
              internalType: "struct ISignatureTransfer.TokenPermissions",
              name: "permitted",
              type: "tuple"
            },
            { internalType: "uint256", name: "nonce", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.PermitTransferFrom",
          name: "permit",
          type: "tuple"
        },
        {
          components: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "requestedAmount", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.SignatureTransferDetails",
          name: "transferDetails",
          type: "tuple"
        },
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "bytes32", name: "witness", type: "bytes32" },
        { internalType: "string", name: "witnessTypeString", type: "string" },
        { internalType: "bytes", name: "signature", type: "bytes" }
      ],
      name: "permitWitnessTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              components: [
                { internalType: "address", name: "token", type: "address" },
                { internalType: "uint256", name: "amount", type: "uint256" }
              ],
              internalType: "struct ISignatureTransfer.TokenPermissions[]",
              name: "permitted",
              type: "tuple[]"
            },
            { internalType: "uint256", name: "nonce", type: "uint256" },
            { internalType: "uint256", name: "deadline", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
          name: "permit",
          type: "tuple"
        },
        {
          components: [
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint256", name: "requestedAmount", type: "uint256" }
          ],
          internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
          name: "transferDetails",
          type: "tuple[]"
        },
        { internalType: "address", name: "owner", type: "address" },
        { internalType: "bytes32", name: "witness", type: "bytes32" },
        { internalType: "string", name: "witnessTypeString", type: "string" },
        { internalType: "bytes", name: "signature", type: "bytes" }
      ],
      name: "permitWitnessTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            { internalType: "address", name: "from", type: "address" },
            { internalType: "address", name: "to", type: "address" },
            { internalType: "uint160", name: "amount", type: "uint160" },
            { internalType: "address", name: "token", type: "address" }
          ],
          internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
          name: "transferDetails",
          type: "tuple[]"
        }
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        { internalType: "address", name: "from", type: "address" },
        { internalType: "address", name: "to", type: "address" },
        { internalType: "uint160", name: "amount", type: "uint160" },
        { internalType: "address", name: "token", type: "address" }
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }
  ];

  // static/scripts/rewards/web3/erc20-permit.ts
  async function fetchTreasury(permit) {
    let balance, allowance, decimals, symbol;
    try {
      const tokenAddress = permit.tokenAddress;
      const tokenContract = new ethers_exports.Contract(tokenAddress, erc20Abi, app.provider);
      const tokenInfo = localStorage.getItem(tokenAddress);
      if (tokenInfo) {
        const { decimals: storedDecimals, symbol: storedSymbol } = JSON.parse(tokenInfo);
        decimals = storedDecimals;
        symbol = storedSymbol;
        [balance, allowance] = await Promise.all([tokenContract.balanceOf(permit.owner), tokenContract.allowance(permit.owner, permit2Address)]);
      } else {
        [balance, allowance, decimals, symbol] = await Promise.all([
          tokenContract.balanceOf(permit.owner),
          tokenContract.allowance(permit.owner, permit2Address),
          tokenContract.decimals(),
          tokenContract.symbol()
        ]);
        localStorage.setItem(tokenAddress, JSON.stringify({ decimals, symbol }));
      }
      return { balance, allowance, decimals, symbol };
    } catch (error) {
      return { balance: BigNumber2.from(-1), allowance: BigNumber2.from(-1), decimals: -1, symbol: "" };
    }
  }
  async function checkPermitClaimability(app2) {
    try {
      return await checkPermitClaimable(app2);
    } catch (error) {
      if (error instanceof Error) {
        const e = error;
        console.error("Error in checkPermitClaimable: ", e);
        errorToast(e, e.reason);
      }
    }
    buttonController.hideMakeClaim();
    return false;
  }
  async function transferFromPermit(permit2Contract, app2) {
    const reward = app2.reward;
    const signer = app2.signer;
    if (!signer)
      return null;
    try {
      const tx = await permit2Contract.permitTransferFrom(
        {
          permitted: {
            token: reward.tokenAddress,
            amount: reward.amount
          },
          nonce: reward.nonce,
          deadline: reward.deadline
        },
        { to: reward.beneficiary, requestedAmount: reward.amount },
        reward.owner,
        reward.signature
      );
      toaster.create("info", `Transaction sent`);
      return tx;
    } catch (error) {
      if (error instanceof Error) {
        const e = error;
        if (e.code == "ACTION_REJECTED") {
          toaster.create("info", `Transaction was not sent because it was rejected by the user.`);
          buttonController.hideLoader();
          buttonController.showMakeClaim();
        } else {
          console.error("Error in permitTransferFrom:", e);
          errorToast(e, e.reason);
        }
      }
      return null;
    }
  }
  async function waitForTransaction(tx) {
    try {
      const receipt = await tx.wait();
      viewClaimButton.onclick = () => {
        window.open(`https://blockscan.com/tx/${receipt.transactionHash}`, "_blank");
      };
      toaster.create("success", `Claim Complete.`);
      buttonController.showViewClaim();
      buttonController.hideLoader();
      buttonController.hideMakeClaim();
      console.log(receipt.transactionHash);
      return receipt;
    } catch (error) {
      if (error instanceof Error) {
        const e = error;
        console.error("Error in tx.wait: ", e);
        errorToast(e, e.reason);
      }
    }
  }
  function claimErc20PermitHandlerWrapper(app2) {
    return async function claimErc20PermitHandler() {
      const signer = await connectWallet();
      if (!signer) {
        buttonController.hideAll();
        toaster.create("error", `Please connect your wallet to claim this reward.`);
        return;
      }
      app2.signer = signer;
      buttonController.hideMakeClaim();
      buttonController.showLoader();
      const isPermitClaimable = await checkPermitClaimability(app2);
      if (!isPermitClaimable)
        return;
      const permit2Contract = new ethers_exports.Contract(permit2Address, permit2Abi, signer);
      if (!permit2Contract)
        return;
      const tx = await transferFromPermit(permit2Contract, app2);
      if (!tx)
        return;
      const receipt = await waitForTransaction(tx);
      if (!receipt)
        return;
      const isHashUpdated = await updatePermitTxHash(app2, receipt.transactionHash);
      if (!isHashUpdated)
        return;
      getMakeClaimButton().removeEventListener("click", claimErc20PermitHandler);
    };
  }
  async function checkPermitClaimable(app2) {
    let isClaimed;
    try {
      isClaimed = await isNonceClaimed(app2);
    } catch (error) {
      console.error("Error in isNonceClaimed: ", error);
      return false;
    }
    if (isClaimed) {
      toaster.create("error", `Your reward for this task has already been claimed.`);
      buttonController.showViewClaim();
      return false;
    }
    const reward = app2.reward;
    if (BigNumber2.from(reward.deadline).lt(Math.floor(Date.now() / 1e3))) {
      toaster.create("error", `This reward has expired.`);
      return false;
    }
    const { balance, allowance } = await fetchTreasury(reward);
    const permitted = BigNumber2.from(reward.amount);
    const isSolvent = balance.gte(permitted);
    const isAllowed = allowance.gte(permitted);
    if (!isSolvent) {
      toaster.create("error", `Not enough funds on funding wallet to collect this reward. Please let the financier know.`);
      buttonController.hideMakeClaim();
      return false;
    }
    if (!isAllowed) {
      toaster.create("error", `Not enough allowance on the funding wallet to collect this reward. Please let the financier know.`);
      buttonController.hideMakeClaim();
      return false;
    }
    let user;
    try {
      const address = await app2.signer?.getAddress();
      user = address?.toLowerCase();
    } catch (error) {
      console.error("Error in signer.getAddress: ", error);
      return false;
    }
    const beneficiary = reward.beneficiary.toLowerCase();
    if (beneficiary !== user) {
      toaster.create("warning", `This reward is not for you.`);
      buttonController.hideMakeClaim();
      return false;
    }
    return true;
  }
  async function checkRenderMakeClaimControl(app2) {
    try {
      const address = await app2.signer?.getAddress();
      const user = address?.toLowerCase();
      if (app2.reward) {
        const beneficiary = app2.reward.beneficiary.toLowerCase();
        if (beneficiary !== user) {
          buttonController.hideMakeClaim();
          return;
        }
      }
    } catch (error) {
      console.error("Error getting address from signer");
      console.error(error);
    }
    buttonController.showMakeClaim();
  }
  async function checkRenderInvalidatePermitAdminControl(app2) {
    try {
      const address = await app2.signer?.getAddress();
      const user = address?.toLowerCase();
      if (app2.reward) {
        const owner = app2.reward.owner.toLowerCase();
        if (owner !== user) {
          buttonController.hideInvalidator();
          return;
        }
      }
    } catch (error) {
      console.error("Error getting address from signer");
      console.error(error);
    }
    buttonController.showInvalidator();
  }
  var invalidateButton = document.getElementById("invalidator");
  invalidateButton.addEventListener("click", async function invalidateButtonClickHandler() {
    try {
      const isClaimed = await isNonceClaimed(app);
      if (isClaimed) {
        toaster.create("error", `This reward has already been claimed or invalidated.`);
        buttonController.hideInvalidator();
        return;
      }
      if (!app.signer)
        return;
      await invalidateNonce(app.signer, app.reward.nonce);
    } catch (error) {
      if (error instanceof Error) {
        const e = error;
        console.error(e);
        errorToast(e, e.reason);
        return;
      }
    }
    toaster.create("info", "Nonce invalidation transaction sent");
    buttonController.hideInvalidator();
  });
  async function isNonceClaimed(app2) {
    const provider = app2.provider;
    const permit2Contract = new ethers_exports.Contract(permit2Address, permit2Abi, provider);
    const { wordPos, bitPos } = nonceBitmap(BigNumber2.from(app2.reward.nonce));
    const bitmap = await permit2Contract.nonceBitmap(app2.reward.owner, wordPos).catch((error) => {
      console.error("Error in nonceBitmap method: ", error);
      throw error;
    });
    const bit = BigNumber2.from(1).shl(bitPos);
    const flipped = BigNumber2.from(bitmap).xor(bit);
    return bit.and(flipped).eq(0);
  }
  async function invalidateNonce(signer, nonce) {
    const permit2Contract = new ethers_exports.Contract(permit2Address, permit2Abi, signer);
    const { wordPos, bitPos } = nonceBitmap(nonce);
    const bit = BigNumber2.from(1).shl(bitPos);
    const sourceBitmap = await permit2Contract.nonceBitmap(await signer.getAddress(), wordPos.toString());
    const mask = sourceBitmap.or(bit);
    await permit2Contract.invalidateUnorderedNonces(wordPos, mask);
  }
  function nonceBitmap(nonce) {
    const wordPos = BigNumber2.from(nonce).shr(8);
    const bitPos = BigNumber2.from(nonce).and(255).toNumber();
    return { wordPos, bitPos };
  }
  async function updatePermitTxHash(app2, hash3) {
    const { error } = await supabase.from("permits").update({ transaction: hash3 }).eq("nonce", app2.reward.nonce.toString());
    if (error !== null) {
      console.error(error);
      throw error;
    }
    return true;
  }

  // static/scripts/rewards/web3/handle-if-on-correct-network.ts
  function handleIfOnCorrectNetwork(currentNetworkId, desiredNetworkId) {
    if (desiredNetworkId === currentNetworkId) {
      buttonController.showMakeClaim();
    } else {
      buttonController.hideMakeClaim();
    }
  }

  // static/scripts/rewards/web3/add-network.ts
  async function addNetwork(provider, networkId) {
    try {
      await provider.send("wallet_addEthereumChain", [
        {
          chainId: "0x" + networkId.toString(16),
          chainName: getNetworkName(networkId),
          rpcUrls: networkRpcs[networkId],
          blockExplorerUrls: [networkExplorers[networkId]],
          nativeCurrency: networkCurrencies[networkId]
        }
      ]);
      return true;
    } catch (error) {
      return false;
    }
  }

  // static/scripts/rewards/web3/switch-network.ts
  async function switchNetwork(provider, networkId) {
    try {
      await provider.send("wallet_switchEthereumChain", [{ chainId: "0x" + networkId.toString(16) }]);
      buttonController.showMakeClaim();
      return true;
    } catch (error) {
      const code = error.code;
      if (code == 4902) {
        return await addNetwork(provider, networkId);
      }
      return false;
    }
  }

  // static/scripts/rewards/web3/not-on-correct-network.ts
  function notOnCorrectNetwork(currentNetworkId, desiredNetworkId, web3provider) {
    if (currentNetworkId !== desiredNetworkId) {
      const networkName = getNetworkName(desiredNetworkId);
      if (!networkName) {
        toaster.create("error", `This dApp currently does not support payouts for network ID ${desiredNetworkId}`);
      }
      switchNetwork(web3provider, desiredNetworkId).catch((error) => {
        console.error(error);
        toaster.create("error", `Please switch to the ${networkName} network to claim this reward.`);
        buttonController.hideAll();
      });
    }
  }

  // static/scripts/rewards/web3/verify-current-network.ts
  async function verifyCurrentNetwork(desiredNetworkId) {
    if (!window.ethereum) {
      buttonController.hideAll();
      return;
    }
    const web3provider = new ethers_exports.providers.Web3Provider(window.ethereum);
    const network = await web3provider.getNetwork();
    const currentNetworkId = network.chainId;
    window.ethereum.on("chainChanged", (newNetworkId) => handleIfOnCorrectNetwork(parseInt(newNetworkId, 16), desiredNetworkId));
    notOnCorrectNetwork(currentNetworkId, desiredNetworkId, web3provider);
  }

  // static/scripts/rewards/render-transaction/render-transaction.ts
  var import_types4 = __toESM(require_types());

  // static/scripts/rewards/abis/nft-reward-abi.ts
  var nftRewardAbi = [
    {
      inputs: [
        {
          internalType: "string",
          name: "_tokenName",
          type: "string"
        },
        {
          internalType: "string",
          name: "_tokenSymbol",
          type: "string"
        },
        {
          internalType: "address",
          name: "_initialOwner",
          type: "address"
        },
        {
          internalType: "address",
          name: "_minter",
          type: "address"
        }
      ],
      stateMutability: "nonpayable",
      type: "constructor"
    },
    {
      inputs: [],
      name: "ECDSAInvalidSignature",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "length",
          type: "uint256"
        }
      ],
      name: "ECDSAInvalidSignatureLength",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "bytes32",
          name: "s",
          type: "bytes32"
        }
      ],
      name: "ECDSAInvalidSignatureS",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "sender",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        },
        {
          internalType: "address",
          name: "owner",
          type: "address"
        }
      ],
      name: "ERC721IncorrectOwner",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "ERC721InsufficientApproval",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "approver",
          type: "address"
        }
      ],
      name: "ERC721InvalidApprover",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address"
        }
      ],
      name: "ERC721InvalidOperator",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address"
        }
      ],
      name: "ERC721InvalidOwner",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "receiver",
          type: "address"
        }
      ],
      name: "ERC721InvalidReceiver",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "sender",
          type: "address"
        }
      ],
      name: "ERC721InvalidSender",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "ERC721NonexistentToken",
      type: "error"
    },
    {
      inputs: [],
      name: "EnforcedPause",
      type: "error"
    },
    {
      inputs: [],
      name: "ExpectedPause",
      type: "error"
    },
    {
      inputs: [],
      name: "InvalidShortString",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address"
        }
      ],
      name: "OwnableInvalidOwner",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address"
        }
      ],
      name: "OwnableUnauthorizedAccount",
      type: "error"
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "str",
          type: "string"
        }
      ],
      name: "StringTooLong",
      type: "error"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address"
        },
        {
          indexed: true,
          internalType: "address",
          name: "approved",
          type: "address"
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "Approval",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address"
        },
        {
          indexed: true,
          internalType: "address",
          name: "operator",
          type: "address"
        },
        {
          indexed: false,
          internalType: "bool",
          name: "approved",
          type: "bool"
        }
      ],
      name: "ApprovalForAll",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [],
      name: "EIP712DomainChanged",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "previousOwner",
          type: "address"
        },
        {
          indexed: true,
          internalType: "address",
          name: "newOwner",
          type: "address"
        }
      ],
      name: "OwnershipTransferred",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "account",
          type: "address"
        }
      ],
      name: "Paused",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address"
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address"
        },
        {
          indexed: true,
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "Transfer",
      type: "event"
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: false,
          internalType: "address",
          name: "account",
          type: "address"
        }
      ],
      name: "Unpaused",
      type: "event"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "approve",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address"
        }
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "baseUri",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "eip712Domain",
      outputs: [
        {
          internalType: "bytes1",
          name: "fields",
          type: "bytes1"
        },
        {
          internalType: "string",
          name: "name",
          type: "string"
        },
        {
          internalType: "string",
          name: "version",
          type: "string"
        },
        {
          internalType: "uint256",
          name: "chainId",
          type: "uint256"
        },
        {
          internalType: "address",
          name: "verifyingContract",
          type: "address"
        },
        {
          internalType: "bytes32",
          name: "salt",
          type: "bytes32"
        },
        {
          internalType: "uint256[]",
          name: "extensions",
          type: "uint256[]"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "getApproved",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address"
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256"
            },
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]"
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256"
            },
            {
              internalType: "string[]",
              name: "values",
              type: "string[]"
            }
          ],
          internalType: "struct NftReward.MintRequest",
          name: "_mintRequest",
          type: "tuple"
        }
      ],
      name: "getMintRequestDigest",
      outputs: [
        {
          internalType: "bytes32",
          name: "",
          type: "bytes32"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "getTokenDataKeys",
      outputs: [
        {
          internalType: "bytes32[]",
          name: "",
          type: "bytes32[]"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address"
        },
        {
          internalType: "address",
          name: "operator",
          type: "address"
        }
      ],
      name: "isApprovedForAll",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "minter",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "nonce",
          type: "uint256"
        }
      ],
      name: "nonceRedeemed",
      outputs: [
        {
          internalType: "bool",
          name: "isRedeemed",
          type: "bool"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "owner",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "ownerOf",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "pause",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [],
      name: "paused",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address"
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256"
            },
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]"
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256"
            },
            {
              internalType: "string[]",
              name: "values",
              type: "string[]"
            }
          ],
          internalType: "struct NftReward.MintRequest",
          name: "_mintRequest",
          type: "tuple"
        },
        {
          internalType: "bytes",
          name: "_signature",
          type: "bytes"
        }
      ],
      name: "recover",
      outputs: [
        {
          internalType: "address",
          name: "",
          type: "address"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          components: [
            {
              internalType: "address",
              name: "beneficiary",
              type: "address"
            },
            {
              internalType: "uint256",
              name: "deadline",
              type: "uint256"
            },
            {
              internalType: "bytes32[]",
              name: "keys",
              type: "bytes32[]"
            },
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256"
            },
            {
              internalType: "string[]",
              name: "values",
              type: "string[]"
            }
          ],
          internalType: "struct NftReward.MintRequest",
          name: "_mintRequest",
          type: "tuple"
        },
        {
          internalType: "bytes",
          name: "_signature",
          type: "bytes"
        }
      ],
      name: "safeMint",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address"
        },
        {
          internalType: "address",
          name: "to",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address"
        },
        {
          internalType: "address",
          name: "to",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        },
        {
          internalType: "bytes",
          name: "data",
          type: "bytes"
        }
      ],
      name: "safeTransferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "operator",
          type: "address"
        },
        {
          internalType: "bool",
          name: "approved",
          type: "bool"
        }
      ],
      name: "setApprovalForAll",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "string",
          name: "_newBaseUri",
          type: "string"
        }
      ],
      name: "setBaseUri",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "_newMinter",
          type: "address"
        }
      ],
      name: "setMinter",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "bytes4",
          name: "interfaceId",
          type: "bytes4"
        }
      ],
      name: "supportsInterface",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        },
        {
          internalType: "bytes32",
          name: "key",
          type: "bytes32"
        }
      ],
      name: "tokenData",
      outputs: [
        {
          internalType: "string",
          name: "value",
          type: "string"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "bytes32",
          name: "tokenDataKey",
          type: "bytes32"
        }
      ],
      name: "tokenDataKeyExists",
      outputs: [
        {
          internalType: "bool",
          name: "isTokenDataKeyExists",
          type: "bool"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256"
        }
      ],
      name: "tokenDataKeys",
      outputs: [
        {
          internalType: "bytes32",
          name: "",
          type: "bytes32"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [],
      name: "tokenIdCounter",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "tokenURI",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string"
        }
      ],
      stateMutability: "view",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address"
        },
        {
          internalType: "address",
          name: "to",
          type: "address"
        },
        {
          internalType: "uint256",
          name: "tokenId",
          type: "uint256"
        }
      ],
      name: "transferFrom",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "newOwner",
          type: "address"
        }
      ],
      name: "transferOwnership",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    },
    {
      inputs: [],
      name: "unpause",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function"
    }
  ];

  // static/scripts/rewards/web3/erc721-permit.ts
  function claimErc721PermitHandler(reward) {
    return async function claimHandler() {
      const signer = await connectWallet();
      if (!signer) {
        return;
      }
      if ((await signer.getAddress()).toLowerCase() !== reward.beneficiary) {
        toaster.create("warning", `This NFT is not for you.`);
        return;
      }
      if (BigNumber2.from(reward.deadline).lt(Math.floor(Date.now() / 1e3))) {
        toaster.create("error", `This NFT has expired.`);
        return;
      }
      const isRedeemed = await isNonceRedeemed(reward, app.provider);
      if (isRedeemed) {
        toaster.create("error", `This NFT has already been redeemed.`);
        return;
      }
      buttonController.showLoader();
      try {
        const nftContract = new ethers_exports.Contract(reward.tokenAddress, nftRewardAbi, signer);
        const tx = await nftContract.safeMint(
          {
            beneficiary: reward.beneficiary,
            deadline: reward.deadline,
            keys: reward.erc721Request?.keys,
            nonce: reward.nonce,
            values: reward.erc721Request?.values
          },
          reward.signature
        );
        toaster.create("info", `Transaction sent. Waiting for confirmation...`);
        const receipt = await tx.wait();
        buttonController.hideLoader();
        toaster.create("success", `Claim Complete.`);
        buttonController.showViewClaim();
        buttonController.hideMakeClaim();
        console.log(receipt.transactionHash);
        getMakeClaimButton().removeEventListener("click", claimHandler);
      } catch (error) {
        console.error(error);
        if (error instanceof Error) {
          toaster.create("error", `Error claiming NFT: ${error.message}`);
        } else if (typeof error === "string") {
          toaster.create("error", `Error claiming NFT: ${error}`);
        } else {
          toaster.create("error", `Error claiming NFT: Unknown error`);
        }
      }
    };
  }
  async function isNonceRedeemed(reward, provider) {
    const nftContract = new ethers_exports.Contract(reward.tokenAddress, nftRewardAbi, provider);
    return nftContract.nonceRedeemed(reward.nonce);
  }

  // static/scripts/rewards/render-transaction/insert-table-data.ts
  function shortenAddress(address) {
    return `${address.slice(0, 10)}...${address.slice(-8)}`;
  }
  function insertErc20PermitTableData(app2, table3, treasury) {
    const reward = app2.reward;
    const requestedAmountElement = document.getElementById("rewardAmount");
    renderToFields(reward.beneficiary, app2.currentExplorerUrl);
    renderTokenFields(reward.tokenAddress, app2.currentExplorerUrl);
    renderDetailsFields([
      { name: "From", value: `<a target="_blank" rel="noopener noreferrer" href="${app2.currentExplorerUrl}/address/${reward.owner}">${reward.owner}</a>` },
      {
        name: "Expiry",
        value: (() => {
          const deadline = BigNumber2.isBigNumber(reward.deadline) ? reward.deadline : BigNumber2.from(reward.deadline);
          return deadline.lte(Number.MAX_SAFE_INTEGER.toString()) ? new Date(deadline.toNumber()).toLocaleString() : void 0;
        })()
      },
      { name: "Balance", value: treasury.balance.gte(0) ? `${ethers_exports.utils.formatUnits(treasury.balance, treasury.decimals)} ${treasury.symbol}` : "N/A" },
      { name: "Allowance", value: treasury.allowance.gte(0) ? `${ethers_exports.utils.formatUnits(treasury.allowance, treasury.decimals)} ${treasury.symbol}` : "N/A" }
    ]);
    table3.setAttribute(`data-make-claim-rendered`, "true");
    return requestedAmountElement;
  }
  function insertErc721PermitTableData(reward, table3) {
    const requestedAmountElement = document.getElementById("rewardAmount");
    renderToFields(reward.beneficiary, app.currentExplorerUrl);
    renderTokenFields(reward.tokenAddress, app.currentExplorerUrl);
    const { GITHUB_REPOSITORY_NAME, GITHUB_CONTRIBUTION_TYPE, GITHUB_ISSUE_ID, GITHUB_ORGANIZATION_NAME, GITHUB_USERNAME } = reward.erc721Request?.metadata || {};
    renderDetailsFields([
      {
        name: "NFT address",
        value: `<a target="_blank" rel="noopener noreferrer" href="${app.currentExplorerUrl}/address/${reward.tokenAddress}">${reward.tokenAddress}</a>`
      },
      {
        name: "Expiry",
        value: BigNumber2.from(reward.deadline).lte(Number.MAX_SAFE_INTEGER.toString()) ? new Date(Number(reward.deadline)).toLocaleString() : void 0
      },
      {
        name: "GitHub Organization",
        value: `<a target="_blank" rel="noopener noreferrer" href="https://github.com/${GITHUB_ORGANIZATION_NAME}">${GITHUB_ORGANIZATION_NAME}</a>`
      },
      {
        name: "GitHub Repository",
        value: `<a target="_blank" rel="noopener noreferrer" href="https://github.com/${GITHUB_ORGANIZATION_NAME}/${GITHUB_REPOSITORY_NAME}">${GITHUB_REPOSITORY_NAME}</a>`
      },
      {
        name: "GitHub Issue",
        value: `<a target="_blank" rel="noopener noreferrer" href="https://github.com/${GITHUB_ORGANIZATION_NAME}/${GITHUB_REPOSITORY_NAME}/issues/${GITHUB_ISSUE_ID}">${GITHUB_ISSUE_ID}</a>`
      },
      {
        name: "GitHub Username",
        value: `<a target="_blank" rel="noopener noreferrer" href="https://github.com/${GITHUB_USERNAME}">${GITHUB_USERNAME}</a>`
      },
      { name: "Contribution Type", value: GITHUB_CONTRIBUTION_TYPE?.split(",").join(", ") }
    ]);
    table3.setAttribute(`data-make-claim-rendered`, "true");
    return requestedAmountElement;
  }
  function renderDetailsFields(additionalDetails) {
    const additionalDetailsDiv = document.getElementById("additionalDetailsTable");
    let additionalDetailsHtml = "";
    for (const { name, value } of additionalDetails) {
      if (!value)
        continue;
      additionalDetailsHtml += `<tr>
      <th><div>${name}</div></th>
      <td><div>${value}</div></td>
    </tr>`;
    }
    additionalDetailsDiv.innerHTML = additionalDetailsHtml;
  }
  function renderTokenFields(tokenAddress, explorerUrl) {
    const tokenFull = document.querySelector("#Token .full");
    const tokenShort = document.querySelector("#Token .short");
    tokenFull.innerHTML = `<div>${tokenAddress}</div>`;
    tokenShort.innerHTML = `<div>${shortenAddress(tokenAddress)}</div>`;
    const tokenBoth = document.getElementById(`rewardToken`);
    tokenBoth.innerHTML = `<a target="_blank" rel="noopener noreferrer" href="${explorerUrl}/token/${tokenAddress}">${tokenBoth.innerHTML}</a>`;
  }
  function renderToFields(receiverAddress, explorerUrl) {
    const toFull = document.querySelector("#rewardRecipient .full");
    const toShort = document.querySelector("#rewardRecipient .short");
    if (!toFull || !toShort)
      return;
    toFull.innerHTML = `<div>${receiverAddress}</div>`;
    toShort.innerHTML = `<div>${shortenAddress(receiverAddress)}</div>`;
    const toBoth = document.getElementById(`rewardRecipient`);
    toBoth.innerHTML = `<a target="_blank" rel="noopener noreferrer" href="${explorerUrl}/address/${receiverAddress}">${toBoth.innerHTML}</a>`;
  }

  // static/scripts/rewards/abis/cirip.json
  var cirip_default = [
    {
      inputs: [
        {
          internalType: "contract ENS",
          name: "_ens",
          type: "address"
        }
      ],
      stateMutability: "nonpayable",
      type: "constructor"
    },
    {
      inputs: [
        {
          internalType: "address[]",
          name: "addresses",
          type: "address[]"
        }
      ],
      name: "getNames",
      outputs: [
        {
          internalType: "string[]",
          name: "r",
          type: "string[]"
        }
      ],
      stateMutability: "view",
      type: "function"
    }
  ];

  // static/scripts/rewards/cirip/query-graph.ts
  async function queryGraph(endpoint, query) {
    const response = await fetch(endpoint, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Accept: "application/json"
      },
      body: JSON.stringify({ query })
    });
    return response.json();
  }

  // static/scripts/rewards/cirip/fetch-ens.ts
  async function fetchEns(address) {
    const endpoint = "https://api.thegraph.com/subgraphs/name/ensdomains/ens";
    const query = `{
    domains(where:{owner:"${address.toLowerCase()}"}) {
      name
    }
  }`;
    const res = await queryGraph(endpoint, query);
    return res.data.domains.map((domain) => domain.name);
  }

  // static/scripts/rewards/cirip/query-reverse-ens.ts
  async function queryReverseEns(address, networkId) {
    const cachedEnsName = localStorage.getItem(address);
    const endpoint = app.provider?.connection.url || (await useRpcHandler(app)).connection.url;
    if (!endpoint) {
      console.error("ENS lookup failed: No endpoint found for network ID", networkId);
      if (cachedEnsName)
        return cachedEnsName;
    }
    if (cachedEnsName) {
      return cachedEnsName;
    } else {
      const data = reverseEnsInterface.encodeFunctionData("getNames", [[address.substring(2)]]);
      const response = await fetch(endpoint, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({
          jsonrpc: "2.0",
          id: "1",
          method: "eth_call",
          params: [{ to: "0x3671aE578E63FdF66ad4F3E12CC0c0d71Ac7510C", data }, "latest"]
        })
      });
      if (!response.ok) {
        console.error("ENS lookup failed: API request failed");
        return "";
      }
      const ensName = await response.text();
      localStorage.setItem(address, ensName);
      return ensName;
    }
  }

  // static/scripts/rewards/cirip/ens-lookup.ts
  var reverseEnsInterface = new ethers_exports.utils.Interface(cirip_default);
  async function ensLookup(addr, networkId) {
    const _address = "/".concat(addr);
    const start = _address.indexOf("/0x");
    if (start == -1)
      throw "No ethereum address provided.";
    if (_address.length <= 42 + start) {
      throw "Invalid ethereum address provided.";
    }
    const address = _address.substring(start + 1, start + 43).toLowerCase();
    let reverseRecord = null;
    try {
      reverseRecord = await queryReverseEns(address, networkId);
      const responseParsed = JSON.parse(reverseRecord).result;
      const _reverseRecord = ethers_exports.utils.defaultAbiCoder.decode([ethers_exports.utils.ParamType.from("string[]")], responseParsed);
      reverseRecord = _reverseRecord[0][0];
    } catch (e) {
      console.error(e);
    }
    const allDomains = await fetchEns(address);
    if (reverseRecord == "") {
      reverseRecord = null;
    }
    if (reverseRecord != null && !allDomains.includes(reverseRecord)) {
      console.warn("Failed to validate! Reverse record set to " + reverseRecord + ", but user does not own this name.");
      reverseRecord = null;
    }
    return {
      reverseRecord,
      domains: allDomains
    };
  }

  // static/scripts/rewards/render-transaction/render-ens-name.ts
  async function renderEnsName({ element, address, tokenAddress, tokenView, networkId }) {
    let href = "";
    try {
      const resolved = await ensLookup(address, networkId);
      let ensName;
      if (resolved.reverseRecord) {
        ensName = resolved.reverseRecord;
      } else if (resolved.domains.length) {
        const domain = resolved.domains.shift();
        if (domain) {
          ensName = domain;
        }
      }
      if (ensName) {
        if (tokenView) {
          href = `${app.currentExplorerUrl}/token/${tokenAddress}?a=${address}`;
        } else {
          href = `${app.currentExplorerUrl}/address/${address}"`;
        }
        element.innerHTML = `<a target="_blank" rel="noopener noreferrer" href="${href}">${ensName}</a>`;
      }
    } catch (error) {
      console.error(error);
    }
  }

  // static/scripts/rewards/render-transaction/render-token-symbol.ts
  async function renderTokenSymbol({
    table: table3,
    requestedAmountElement,
    tokenAddress,
    ownerAddress,
    amount,
    explorerUrl
  }) {
    const contract = new ethers_exports.Contract(tokenAddress, erc20Abi, app.provider);
    let symbol, decimals;
    const tokenInfo = localStorage.getItem(tokenAddress);
    if (tokenInfo) {
      const { decimals: storedDecimals, symbol: storedSymbol } = JSON.parse(tokenInfo);
      decimals = storedDecimals;
      symbol = storedSymbol;
    } else {
      [symbol, decimals] = await Promise.all([contract.symbol(), contract.decimals()]);
      localStorage.setItem(tokenAddress, JSON.stringify({ decimals, symbol }));
    }
    let formattedAmount = parseFloat(utils_exports2.formatUnits(amount, decimals));
    if (Number.isInteger(formattedAmount)) {
      formattedAmount = formattedAmount.toString();
    } else {
      const decimals2 = Math.min(4, (formattedAmount.toString().split(".")[1] || "").length);
      formattedAmount = formattedAmount.toFixed(decimals2);
    }
    table3.setAttribute(`data-contract-loaded`, "true");
    requestedAmountElement.innerHTML = `<a target="_blank" rel="noopener noreferrer" href="${explorerUrl}/token/${tokenAddress}?a=${ownerAddress}">${formattedAmount} ${symbol}</a>`;
  }
  async function renderNftSymbol({
    table: table3,
    requestedAmountElement,
    tokenAddress,
    explorerUrl
  }) {
    const contract = new ethers_exports.Contract(tokenAddress, erc20Abi, app.provider);
    let symbol;
    const tokenInfo = localStorage.getItem(tokenAddress);
    if (tokenInfo) {
      const { symbol: storedSymbol } = JSON.parse(tokenInfo);
      symbol = storedSymbol;
    } else {
      symbol = await contract.symbol();
      localStorage.setItem(tokenAddress, JSON.stringify({ symbol }));
    }
    table3.setAttribute(`data-contract-loaded`, "true");
    requestedAmountElement.innerHTML = `<a target="_blank" rel="noopener noreferrer" href="${explorerUrl}/token/${tokenAddress}">1 ${symbol}</a>`;
  }

  // static/scripts/rewards/render-transaction/render-transaction.ts
  var carousel = document.getElementById("carousel");
  var table = document.querySelector(`table`);
  async function renderTransaction() {
    if (app.claims && app.claims.length > 1) {
      carousel.className = "ready";
      const rewardsCount = document.getElementById("rewardsCount");
      rewardsCount.innerHTML = `${app.rewardIndex + 1}/${app.claims.length} reward`;
    }
    if (!app.reward) {
      buttonController.hideAll();
      console.log("No reward found");
      return false;
    }
    verifyCurrentNetwork(app.reward.networkId).catch(console.error);
    if (isErc20Permit(app.reward)) {
      const treasury = await fetchTreasury(app.reward);
      table.setAttribute(`data-additional-data-size`, "small");
      const requestedAmountElement = insertErc20PermitTableData(app, table, treasury);
      renderTokenSymbol({
        tokenAddress: app.reward.tokenAddress,
        ownerAddress: app.reward.owner,
        amount: app.reward.amount,
        explorerUrl: networkExplorers[app.reward.networkId],
        table,
        requestedAmountElement
      }).catch(console.error);
      const toElement = document.getElementById(`rewardRecipient`);
      renderEnsName({ element: toElement, address: app.reward.beneficiary, networkId: app.networkId }).catch(console.error);
      if (app.provider) {
        checkRenderInvalidatePermitAdminControl(app).catch(console.error);
      }
      if (app.claimTxs[app.reward.nonce.toString()] !== void 0) {
        buttonController.showViewClaim();
        viewClaimButton.addEventListener("click", () => window.open(`${app.currentExplorerUrl}/tx/${app.claimTxs[app.reward.nonce.toString()]}`));
      } else if (window.ethereum) {
        buttonController.showMakeClaim();
        getMakeClaimButton().addEventListener("click", claimErc20PermitHandlerWrapper(app));
      }
      table.setAttribute(`data-make-claim`, "ok");
    } else {
      const requestedAmountElement = insertErc721PermitTableData(app.reward, table);
      table.setAttribute(`data-make-claim`, "ok");
      table.setAttribute(`data-additional-data-size`, "large");
      renderNftSymbol({
        tokenAddress: app.reward.tokenAddress,
        explorerUrl: networkExplorers[app.reward.networkId],
        table,
        requestedAmountElement
      }).catch(console.error);
      const toElement = document.getElementById(`rewardRecipient`);
      renderEnsName({ element: toElement, address: app.reward.beneficiary, networkId: app.networkId }).catch(console.error);
      getMakeClaimButton().addEventListener("click", claimErc721PermitHandler(app.reward));
    }
    return true;
  }
  function isErc20Permit(permit) {
    return permit.tokenType === import_types4.TokenType.ERC20;
  }

  // static/scripts/rewards/render-transaction/utils.ts
  function removeAllEventListeners(element) {
    const clone = element.cloneNode(true);
    element.replaceWith(clone);
    return clone;
  }

  // static/scripts/rewards/render-transaction/claim-rewards-pagination.ts
  var nextTxButton = document.getElementById("nextTx");
  var prevTxButton = document.getElementById("prevTx");
  function claimRewardsPagination(rewardsCount) {
    rewardsCount.innerHTML = `${app.rewardIndex + 1}/${app.claims.length} reward`;
    if (nextTxButton)
      nextTxButton.addEventListener("click", () => transactionHandler("next"));
    if (prevTxButton)
      prevTxButton.addEventListener("click", () => transactionHandler("previous"));
  }
  function transactionHandler(direction) {
    removeAllEventListeners(getMakeClaimButton());
    direction === "next" ? app.nextPermit() : app.previousPermit();
    table2.setAttribute(`data-make-claim`, "error");
    renderTransaction().catch(console.error);
  }

  // static/scripts/rewards/render-transaction/set-claim-message.ts
  function setClaimMessage({ type, message }) {
    const claimMessageType = document.querySelector(`table > thead th`);
    const claimMessageBody = document.querySelector(`table > thead td`);
    claimMessageType.innerHTML = `<div>${type}</div>`;
    claimMessageBody.innerHTML = `<div>${message}</div>`;
  }

  // static/scripts/rewards/render-transaction/read-claim-data-from-url.ts
  var supabase = createClient("https://uorkbrlsegsfjspkluwj.supabase.co", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVvcmticmxzZWdzZmpzcGtsdXdqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjQwNTEyNDMsImV4cCI6MjAzOTYyNzI0M30.L56vrF6EOOEMnDL1xHQJVRg7PmnNvxHkkX7rsxNyz6o");
  var table2 = document.getElementsByTagName(`table`)[0];
  var urlParams = new URLSearchParams(window.location.search);
  var base64encodedTxData = urlParams.get("claim");
  async function readClaimDataFromUrl(app2) {
    if (!base64encodedTxData) {
      setClaimMessage({ type: "Notice", message: `No claim data found.` });
      table2.setAttribute(`data-make-claim`, "error");
      return;
    }
    app2.claims = decodeClaimData(base64encodedTxData);
    app2.claimTxs = await getClaimedTxs(app2);
    try {
      app2.provider = await useRpcHandler(app2);
    } catch (e) {
      if (e instanceof Error) {
        toaster.create("error", e.message);
      } else {
        toaster.create("error", JSON.stringify(e));
      }
    }
    try {
      app2.signer = await connectWallet();
    } catch (error) {
    }
    try {
      window?.ethereum.on("accountsChanged", () => {
        checkRenderMakeClaimControl(app2).catch(console.error);
        checkRenderInvalidatePermitAdminControl(app2).catch(console.error);
      });
    } catch (err) {
    }
    displayRewardDetails();
    displayRewardPagination();
    await renderTransaction();
    if (app2.networkId !== null) {
      await verifyCurrentNetwork(app2.networkId);
    } else {
      throw new Error("Network ID is null");
    }
  }
  async function getClaimedTxs(app2) {
    const txs = /* @__PURE__ */ Object.create(null);
    for (const claim of app2.claims) {
      const { data } = await supabase.from("permits").select("transaction").eq("nonce", claim.nonce.toString());
      if (data?.length == 1 && data[0].transaction !== null) {
        txs[claim.nonce.toString()] = data[0].transaction;
      }
    }
    return txs;
  }
  function decodeClaimData(base64encodedTxData2) {
    let permit;
    try {
      permit = (0, import_handlers.decodePermits)(base64encodedTxData2);
      return permit;
    } catch (error) {
      console.error(error);
      setClaimMessage({ type: "Error", message: `Invalid claim data passed in URL` });
      table2.setAttribute(`data-make-claim`, "error");
      throw error;
    }
  }
  function displayRewardPagination() {
    const rewardsCount = document.getElementById("rewardsCount");
    if (rewardsCount) {
      if (!app.claims || app.claims.length <= 1) {
      } else {
        claimRewardsPagination(rewardsCount);
      }
    }
  }
  function displayRewardDetails() {
    let isDetailsVisible = false;
    table2.setAttribute(`data-details-visible`, isDetailsVisible.toString());
    const additionalDetails = document.getElementById(`additionalDetails`);
    additionalDetails.addEventListener("click", () => {
      isDetailsVisible = !isDetailsVisible;
      table2.setAttribute(`data-details-visible`, isDetailsVisible.toString());
    });
  }

  // static/scripts/rewards/the-grid.ts
  function grid(node = document.body, callback) {
    const canvas = document.createElement("canvas");
    const devicePixelRatio = window.devicePixelRatio || 1;
    canvas.width = window.innerWidth * devicePixelRatio;
    canvas.height = window.innerHeight * devicePixelRatio;
    node.appendChild(canvas);
    const gl = canvas.getContext("webgl");
    gl.enable(gl.BLEND);
    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);
    const vertexShaderSource = `
    attribute vec2 a_position;

    void main() {
        gl_Position = vec4(a_position, 0, 1);
    }
`;
    const fragmentShaderSource = `
    precision mediump float;

    uniform vec2 u_resolution;
    uniform float u_time;

    float rand(vec2 n) {
        return fract(sin(dot(n, vec2(12.9898, 4.1414))) * 43758.5453);
    }

    void main() {
        vec3 color = vec3(128.0/255.0, 128.0/255.0, 128.0/255.0); // #808080
        vec2 tilePosition = mod(gl_FragCoord.xy, 24.0);
        vec2 tileNumber = floor(gl_FragCoord.xy / 24.0);

        float period = rand(tileNumber) * 9.0 + 1.0; // Random value in the range [1, 10]
        float phase = fract(u_time / period / 8.0); // Animation eight times slower
        float opacity = (1.0 - abs(phase * 2.0 - 1.0)) * 0.125; // Limit maximum opacity to 0.25

        vec4 backgroundColor = vec4(color, opacity);

        if (tilePosition.x > 23.0 && tilePosition.y < 1.0) {
          gl_FragColor = vec4(color, 1.0); // Full opacity for the dot
      } else {
          gl_FragColor = backgroundColor;
      }
    }
`;
    function createShader(gl2, type, source) {
      const shader = gl2.createShader(type);
      if (!shader) {
        console.error("An error occurred creating the shaders");
        return null;
      }
      gl2.shaderSource(shader, source);
      gl2.compileShader(shader);
      if (!gl2.getShaderParameter(shader, gl2.COMPILE_STATUS)) {
        console.error("An error occurred compiling the shaders: " + gl2.getShaderInfoLog(shader));
        gl2.deleteShader(shader);
        return null;
      }
      return shader;
    }
    const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexShaderSource);
    if (!vertexShader) {
      console.error("An error occurred creating the vertex shader");
      return;
    }
    const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);
    if (!fragmentShader) {
      console.error("An error occurred creating the fragment shader");
      return;
    }
    const program = gl.createProgram();
    if (!program) {
      console.error("An error occurred creating the program");
      return;
    }
    gl.attachShader(program, vertexShader);
    gl.attachShader(program, fragmentShader);
    gl.linkProgram(program);
    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
      console.error("Unable to initialize the shader program: " + gl.getProgramInfoLog(program));
      return;
    }
    gl.useProgram(program);
    const timeUniformLocation = gl.getUniformLocation(program, "u_time");
    const resolutionUniformLocation = gl.getUniformLocation(program, "u_resolution");
    const positionBuffer = gl.createBuffer();
    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]), gl.STATIC_DRAW);
    const positionAttributeLocation = gl.getAttribLocation(program, "a_position");
    gl.enableVertexAttribArray(positionAttributeLocation);
    gl.vertexAttribPointer(positionAttributeLocation, 2, gl.FLOAT, false, 0, 0);
    function resizeCanvasToDisplaySize(canvas2) {
      const displayWidth = window.innerWidth;
      const displayHeight = window.innerHeight;
      if (canvas2.width != displayWidth || canvas2.height != displayHeight) {
        canvas2.width = displayWidth;
        canvas2.height = displayHeight;
        gl.viewport(0, 0, canvas2.width, canvas2.height);
      }
    }
    function render() {
      resizeCanvasToDisplaySize(canvas);
      gl.uniform2f(resolutionUniformLocation, canvas.width, canvas.height);
      gl.clearColor(0, 0, 0, 1);
      gl.clear(gl.COLOR_BUFFER_BIT);
      gl.uniform1f(timeUniformLocation, performance.now() / 1e3);
      gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
      requestAnimationFrame(render);
    }
    window.addEventListener("resize", () => resizeCanvasToDisplaySize(canvas));
    if (callback) {
      callback();
    }
    render();
  }

  // static/scripts/rewards/init.ts
  displayCommitHash();
  grid(document.getElementById("grid"), gridLoadedCallback);
  readClaimDataFromUrl(app).catch(console.error);
  var footer = document.querySelector(".footer");
  footer.classList.add("ready");
  function gridLoadedCallback() {
    document.body.classList.add("grid-loaded");
  }
})();
/*! Bundled license information:

@ubiquibot/permit-generation/dist/handlers/index.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! MIT License. Copyright 2015-2022 Richard Moore <me@ricmoo.com>. See LICENSE.txt. *)

js-sha3/src/sha3.js:
  (**
   * [js-sha3]{@link https://github.com/emn178/js-sha3}
   *
   * @version 0.8.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2015-2018
   * @license MIT
   *)

@ubiquity-dao/rpc-handler/dist/esm/index.js:
  (*! Bundled license information:
  
  js-sha3/src/sha3.js:
    (**
     * [js-sha3]{@link https://github.com/emn178/js-sha3}
     *
     * @version 0.8.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2015-2018
     * @license MIT
     *)
  *)
*/
//# sourceMappingURL=bundles.js.map
