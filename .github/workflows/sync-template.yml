name: Sync branch to template

on:
  workflow_dispatch:
  schedule:
    - cron: "14 0 1 * *"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get GitHub App token
        uses: tibdex/github-app-token@v1.7.0
        id: get_installation_token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Sync branch to template
        env:
          GH_TOKEN: ${{ steps.get_installation_token.outputs.token }}
          IGNORE_FILES: "README.md another-file.txt"
        run: |
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          original_remote=$(git remote get-url origin)
          pr_branch="sync-template/${branch_name}"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          # Fetch the template repository
          git remote add template https://github.com/ubiquity/ts-template.git
          git fetch template

          # Create a new branch for the sync
          git checkout -b "$pr_branch"

          # Get the last successful sync commit (if any)
          last_sync=$(git log --grep="Sync template" --format="%H" -n 1)

          if [ -n "$last_sync" ]; then
            # If there's a previous sync, cherry-pick new changes
            git cherry-pick $last_sync..template/main
          else
            # If it's the first sync, merge the template
            git merge template/main --allow-unrelated-histories -X theirs
          fi

          # Remove ignored files
          for file in $IGNORE_FILES; do
            git rm -rf "$file" || true
          done

          # Check if there are any changes
          if git diff --staged --quiet && git diff --quiet; then
            echo "No changes to sync from template."
            exit 0
          fi

          # Commit changes
          git commit -am "chore: sync template"

          # Push changes and create PR
          git push -f "$original_remote" "$pr_branch"
          gh pr create --title "Sync branch to template" \
                       --body "This pull request merges changes from the template repository." \
                       --head "$pr_branch" \
                       --base "$branch_name" || true